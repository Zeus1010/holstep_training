N Collect_geom.COPLANAR_3
C |- (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY))))))))
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D SKOLEM_THM
A |- (!P. ((!x. (?y. ((P x) y))) = (?y. (!x. ((P x) (y x))))))
T c= ! c? / * * f0 b0 b1 c? / ! * * f0 b1 * b0 b1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D HULL_INC
A |- (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s))))))
T c==> cIN f0 f1 cIN f0 * * part chull f2 f1
D Collect_geom.COPLANAR_ALT
A |- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (!s. ((coplanar_alt s) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! c= ccoplanar_alt b0 c? / c? / c? / cSUBSET b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
- |- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) = (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) |- (!v. (!w. (((((x _2161981) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x _2161981) v) w) IN ((hull affine) (_2161981 INSERT (v INSERT (w INSERT EMPTY)))))))))
T c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! ! c/\ cIN * * * f0 f4 b0 b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 f4 b0 b1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
+ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) |- ((\v. (!w. (((((x _2161981) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x _2161981) v) w) IN ((hull affine) (_2161981 INSERT (v INSERT (w INSERT EMPTY))))))))) _2161982)
T c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! c/\ cIN * * * f0 f4 b0 b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 f4 b0 b1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f5
- (~ ((((x a) b) c) IN (a INSERT (b INSERT (c INSERT EMPTY))))), (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) |- ((~ ((((x a) b) c) IN (a INSERT (b INSERT (c INSERT EMPTY))))) /\ ((((x a) b) c) IN (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c~ cIN * * * f0 f1 f2 f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ cIN * * * f0 f1 f2 f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN * * * f0 f1 f2 f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) = (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ |- (((!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) ==> ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)) = ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s))
T c= c==> ! ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) |- (((!x. (((\x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) x) ==> F)) ==> ((?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) ==> F)) = ((?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) ==> F))
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c= c==> ! c==> * / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b1 b1 b2 b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN * * * b1 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 cF c==> c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b0 b1 b2 b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN * * * b0 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b0 b1 b2 b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN * * * b0 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF
- ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)) |- ((((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)) ==> ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F))) ==> ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)))
T c==> c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c==> c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) |- (((!w. (((((x _2161981) _2161982) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x _2161981) _2161982) w) IN ((hull affine) (_2161981 INSERT (_2161982 INSERT (w INSERT EMPTY)))))))) ==> ((\w. (((((x _2161981) _2161982) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x _2161981) _2161982) w) IN ((hull affine) (_2161981 INSERT (_2161982 INSERT (w INSERT EMPTY)))))))) _2161983)) = ((\w. (((((x _2161981) _2161982) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x _2161981) _2161982) w) IN ((hull affine) (_2161981 INSERT (_2161982 INSERT (w INSERT EMPTY)))))))) _2161983))
T c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> ! c/\ cIN * * * f0 f4 f5 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 f4 f5 b0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY * / c/\ cIN * * * f0 f4 f5 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 f4 f5 b0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY f6 * / c/\ cIN * * * f0 f4 f5 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 f4 f5 b0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY f6
- (((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)) ==> ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F))) |- ((((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)) ==> ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F))) /\ (((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)) ==> ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F))))
T c==> c==> c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c/\ c==> c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF
+ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) |- (((((x _2161981) _2161982) _2161983) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x _2161981) _2161982) _2161983) IN ((hull affine) (_2161981 INSERT (_2161982 INSERT (_2161983 INSERT EMPTY)))))))
T c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 f4 f5 f6 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 f4 f5 f6 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
- |- (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) = ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))
T c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) |- ((~ ((((x a) b) c) IN (a INSERT (b INSERT (c INSERT EMPTY))))) ==> ((((x a) b) c) IN (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c~ cIN * * * f0 f1 f2 f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN * * * f0 f1 f2 f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ ((\c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) c) |- (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))
T c==> * / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b1 b2 b3 b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ cIN * * * b1 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f2 c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b0 b1 b2 b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN * * * b0 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) |- ((?a. (?b. (?c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> F)
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c==> c? / c? / c? / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b3 b4 b5 b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN * * * b3 b4 b5 b6 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cF
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) |- ((~ (_2161980 IN _2161979)) \/ (_2161980 IN ((hull _2161978) _2161979)))
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c\/ c~ cIN f0 f1 cIN f0 * * part chull f2 f1
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
- |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) = (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))
T c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) |- (!c. (((\c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) c) ==> F))
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 ! c==> * / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b1 b2 b3 b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c~ cIN * * * b1 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b0 cF
- |- (((!p'. (!q'. (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) = p') ==> ((p' ==> ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) = q')) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) = p') ==> ((p' ==> ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) = q')) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) = p') ==> ((p' ==> ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) = q')) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c==> b0 c= cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY b1 c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> b0 b1 * / ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c==> b0 c= cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY b1 c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> b0 b1 f7 * / ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c==> b0 c= cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY b1 c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> b0 b1 f7
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) |- (!b. (((\b. (?c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) b) ==> F))
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 ! c==> * / c? / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b2 b3 b4 b5 * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b1 part cEMPTY c~ cIN * * * b2 b3 b4 b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY b0 cF
- |- (((!q'. (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) = p') ==> ((p' ==> ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) = q')) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) = (p' ==> q'))))) ==> ((\q'. (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) = p') ==> ((p' ==> ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) = q')) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) = (p' ==> q'))))) q')) = ((\q'. (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) = p') ==> ((p' ==> ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) = q')) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c==> f4 c= cIN f0 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY b0 c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> f4 b0 * / c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c==> f4 c= cIN f0 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY b0 c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> f4 b0 f8 * / c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c==> f4 c= cIN f0 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY b0 c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> f4 b0 f8
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))), (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) |- ((((x a) b) c) IN ((hull _2161978) (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN * * * f0 f1 f2 f3 * * part chull f4 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((?w. (P w)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
+ |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = p') ==> ((p' ==> ((coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY))))) = (p' ==> q'))))
T c==> c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV f0 c==> c==> f0 c= ccoplanar_alt * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ccoplanar_alt * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> f0 f4
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
- |- ((\p'. (!q'. (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) = p') ==> ((p' ==> ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) = q')) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c==> b0 c= cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY b1 c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> b0 b1 f7
- |- ((\p'. (!q'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = p') ==> ((p' ==> ((?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV b0 c==> c==> b0 c= c? / c? / c? / ! c==> cIN b5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c==> b0 b1 f3
+ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY)))) = (?u. (?v. (?w. ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c? / c? / cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- (((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> F) = (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))))
T c= c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY
+ |- (((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F) = F)
T c= c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF cF
+ |- ((?b. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (?c. (!u. (!v. (!w. (?x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) = (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (?b. (?c. (!u. (!v. (!w. (?x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))))
T c= c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / ! ! ! c? / c/\ cIN b5 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / ! ! ! c? / c/\ cIN b5 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY))))) = (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))
T c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)) |- (((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)) /\ ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)))
T c==> c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c/\ c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF
- |- ((!w. t) = t)
T c= ! f0 f0
+ |- (((!q'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = p') ==> ((p' ==> ((coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY))))) = (p' ==> q'))))) ==> ((\q'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = p') ==> ((p' ==> ((coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY))))) = (p' ==> q'))))) q')) = ((\q'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = p') ==> ((p' ==> ((coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV f0 c==> c==> f0 c= ccoplanar_alt * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ccoplanar_alt * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> f0 b0 * / c==> c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV f0 c==> c==> f0 c= ccoplanar_alt * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ccoplanar_alt * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> f0 b0 f4 * / c==> c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV f0 c==> c==> f0 c= ccoplanar_alt * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ccoplanar_alt * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> f0 b0 f4
- |- ((\q'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = p') ==> ((p' ==> ((?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) = (p' ==> q'))))) q')
T * / c==> c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV f0 c==> c==> f0 c= c? / c? / c? / ! c==> cIN b4 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b4 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> f0 b0 f4
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) |- (((!s. (!x. ((~ (x IN s)) \/ (x IN ((hull _2161978) s))))) ==> ((\s. (!x. ((~ (x IN s)) \/ (x IN ((hull _2161978) s))))) _2161979)) = ((\s. (!x. ((~ (x IN s)) \/ (x IN ((hull _2161978) s))))) _2161979))
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c= c==> ! ! c\/ c~ cIN b1 b0 cIN b1 * * part chull f0 b0 * / ! c\/ c~ cIN b1 b0 cIN b1 * * part chull f0 b0 f1 * / ! c\/ c~ cIN b1 b0 cIN b1 * * part chull f0 b0 f1
- (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))), (?b. (?c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) |- ((?b. (?c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) /\ F)
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c==> c? / c? / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b2 b3 b4 b5 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN * * * b2 b3 b4 b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c? / c? / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b2 b3 b4 b5 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN * * * b2 b3 b4 b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?x. t) = t)
T c= c? / f0 f0
+ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) |- ((\u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) _2161981)
T c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f4
- |- ((((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) = (x IN (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) = q')) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) = ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> q')))) = (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) = q')) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) = ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> q'))))
T c= c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f7 c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f7 c==> c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f7 c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f7
+ |- ((!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) = (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY)))))))))
T c= ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ ((\b. (?c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) b) |- (((?c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) ==> F) = F)
T c==> * / c? / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b2 b3 b4 b5 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN * * * b2 b3 b4 b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f1 c= c==> c? / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b1 b2 b3 b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ cIN * * * b1 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF cF
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))), (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) /\ F)
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF
- |- (((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)) ==> ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)))
T c==> c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- (x IN (a INSERT (b INSERT (c INSERT EMPTY)))) |- ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) = (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) |- (((!P. (!s. (!x. ((~ (x IN s)) \/ (x IN ((hull P) s)))))) ==> ((\P. (!s. (!x. ((~ (x IN s)) \/ (x IN ((hull P) s)))))) _2161978)) = ((\P. (!s. (!x. ((~ (x IN s)) \/ (x IN ((hull P) s)))))) _2161978))
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c= c==> ! ! ! c\/ c~ cIN b2 b1 cIN b2 * * part chull b0 b1 * / ! ! c\/ c~ cIN b2 b1 cIN b2 * * part chull b0 b1 f0 * / ! ! c\/ c~ cIN b2 b1 cIN b2 * * part chull b0 b1 f0
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) |- (((\c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) c) ==> F)
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c==> * / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b1 b2 b3 b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ cIN * * * b1 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f2 cF
+ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (((!s. ((coplanar_alt s) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) ==> ((\s. ((coplanar_alt s) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) s)) = ((\s. ((coplanar_alt s) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) s))
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= c==> ! c= ccoplanar_alt b0 c? / c? / c? / cSUBSET b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / c= ccoplanar_alt b0 c? / c? / c? / cSUBSET b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0 * / c= ccoplanar_alt b0 c? / c? / c? / cSUBSET b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
+ ((\a. (?b. (?c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) a) |- (((?b. (?c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F) = F)
T c==> * / c? / c? / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b3 b4 b5 b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN * * * b3 b4 b5 b6 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY f0 c= c==> c? / c? / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b2 b3 b4 b5 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN * * * b2 b3 b4 b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF cF
- |- ((((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)) ==> ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F))) ==> (((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)) ==> ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F))))
T c==> c==> c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) |- (((!x. (((\a. (?b. (?c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) x) ==> F)) ==> ((?a. (?b. (?c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> F)) = ((?a. (?b. (?c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> F))
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c= c==> ! c==> * / c? / c? / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b4 b5 b6 b7 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ cIN * * * b4 b5 b6 b7 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY b0 cF c==> c? / c? / c? / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b3 b4 b5 b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN * * * b3 b4 b5 b6 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cF c==> c? / c? / c? / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b3 b4 b5 b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN * * * b3 b4 b5 b6 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cF
+ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) |- (((!v. (!w. (((((x _2161981) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x _2161981) v) w) IN ((hull affine) (_2161981 INSERT (v INSERT (w INSERT EMPTY))))))))) ==> ((\v. (!w. (((((x _2161981) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x _2161981) v) w) IN ((hull affine) (_2161981 INSERT (v INSERT (w INSERT EMPTY))))))))) _2161982)) = ((\v. (!w. (((((x _2161981) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x _2161981) v) w) IN ((hull affine) (_2161981 INSERT (v INSERT (w INSERT EMPTY))))))))) _2161982))
T c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> ! ! c/\ cIN * * * f0 f4 b0 b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 f4 b0 b1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c/\ cIN * * * f0 f4 b0 b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 f4 b0 b1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f5 * / ! c/\ cIN * * * f0 f4 b0 b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 f4 b0 b1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f5
+ |- ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)
T * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))), ((\b. (?c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) b) |- (((\b. (?c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) b) /\ F)
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c==> * / c? / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b2 b3 b4 b5 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN * * * b2 b3 b4 b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f1 c/\ * / c? / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b2 b3 b4 b5 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN * * * b2 b3 b4 b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f1 cF
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
- |- (((!p'. (!q'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = p') ==> ((p' ==> ((?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = p') ==> ((p' ==> ((?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = p') ==> ((p' ==> ((?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV b0 c==> c==> b0 c= c? / c? / c? / ! c==> cIN b5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c==> b0 b1 * / ! c==> c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV b0 c==> c==> b0 c= c? / c? / c? / ! c==> cIN b5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c==> b0 b1 f3 * / ! c==> c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV b0 c==> c==> b0 c= c? / c? / c? / ! c==> cIN b5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c==> b0 b1 f3
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) |- (!x. (((\x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) x) ==> F))
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 ! c==> * / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b1 b1 b2 b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN * * * b1 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 cF
+ ((\x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) x) |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) ==> F) = F)
T c==> * / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b0 b1 b2 b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN * * * b0 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f3 c= c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f3 b0 b1 b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN * * * f3 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF cF
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!x. ((P x) \/ Q)) = ((!x. (P x)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ |- ((?a. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (?b. (?c. (!u. (!v. (!w. (?x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) = (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (?a. (?b. (?c. (!u. (!v. (!w. (?x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))))
T c= c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / ! ! ! c? / c/\ cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! ! ! c? / c/\ cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY
- (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))), (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) |- ((~ ((((x a) b) c) IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> ((((x a) b) c) IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c~ cIN * * * f0 f1 f2 f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN * * * f0 f1 f2 f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((?x'. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (?x. (~ (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))
T c= c? / c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN b0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c~ cIN b0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
- |- ((((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) = (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) = ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) = ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))
T c= c==> c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))), ((\a. (?b. (?c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) a) |- (((\a. (?b. (?c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) a) /\ F)
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c==> * / c? / c? / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b3 b4 b5 b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN * * * b3 b4 b5 b6 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY f0 c/\ * / c? / c? / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b3 b4 b5 b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN * * * b3 b4 b5 b6 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY f0 cF
- ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)), (((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)) ==> ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F))) |- (((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)) /\ ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)))
T c==> c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c==> c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c/\ c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF
- |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) = (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> q')))
T c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f3 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV f3
- ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = T)
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV cT
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)), (((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)) ==> ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F))) |- ((((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)) ==> ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F))) /\ ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)))
T c==> c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c==> c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c/\ c==> c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF
+ |- ((!w. (?x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = (?x. (!w. (((x w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((x w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))
T c= ! c? / c/\ cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN b1 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c? / ! c/\ cIN * b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN * b0 b1 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b1 part cEMPTY
- |- ((\q'. (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) = p') ==> ((p' ==> ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) = q')) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c==> f4 c= cIN f0 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY b0 c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> f4 b0 f8
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) |- (((!x. ((~ (x IN _2161979)) \/ (x IN ((hull _2161978) _2161979)))) ==> ((\x. ((~ (x IN _2161979)) \/ (x IN ((hull _2161978) _2161979)))) _2161980)) = ((\x. ((~ (x IN _2161979)) \/ (x IN ((hull _2161978) _2161979)))) _2161980))
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c= c==> ! c\/ c~ cIN b0 f0 cIN b0 * * part chull f1 f0 * / c\/ c~ cIN b0 f0 cIN b0 * * part chull f1 f0 f2 * / c\/ c~ cIN b0 f0 cIN b0 * * part chull f1 f0 f2
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) |- (!a. (((\a. (?b. (?c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) a) ==> F))
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 ! c==> * / c? / c? / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b3 b4 b5 b6 * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN * * * b3 b4 b5 b6 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY b0 cF
- (x IN (a INSERT (b INSERT (c INSERT EMPTY)))) |- ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) = T)
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((!x'. ((~ (x IN s)) \/ (x' IN ((hull P) s)))) = ((~ (x IN s)) \/ (!x. (x IN ((hull P) s)))))
T c= ! c\/ c~ cIN f0 f1 cIN b0 * * part chull f2 f1 c\/ c~ cIN f0 f1 ! cIN b0 * * part chull f2 f1
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) |- ((_2161980 IN ((hull _2161978) _2161979)) \/ (~ (_2161980 IN _2161979)))
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c\/ cIN f0 * * part chull f1 f2 c~ cIN f0 f2
- |- (((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> (~ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))))) = ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)))
T c= c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c~ ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF
+ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) |- ((((((x a) b) c) IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((((x a) b) c) IN ((hull _2161978) (a INSERT (b INSERT (c INSERT EMPTY)))))) = ((((x a) b) c) IN ((hull _2161978) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> cIN * * * f0 f1 f2 f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN * * * f0 f1 f2 f3 * * part chull f4 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN * * * f0 f1 f2 f3 * * part chull f4 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) |- ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) /\ F)
T c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))), ((\x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) x) |- (((\x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) x) /\ F)
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c==> * / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b0 b1 b2 b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN * * * b0 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f3 c/\ * / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b0 b1 b2 b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN * * * b0 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f3 cF
- (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))), (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) |- ((?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ F)
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c==> c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b0 b1 b2 b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN * * * b0 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b0 b1 b2 b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN * * * b0 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF
+ |- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY)))) = (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (?c. (?x. (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) = (?c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (?x. (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))
T c= c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / ! ! ! c/\ cIN * * * b1 b2 b3 b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ cIN * * * b1 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / ! ! ! c/\ cIN * * * b1 b2 b3 b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ cIN * * * b1 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) |- (!P. (!s. (!x. ((~ (x IN s)) \/ (x IN ((hull P) s))))))
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 ! ! ! c\/ c~ cIN b2 b1 cIN b2 * * part chull b0 b1
- |- (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) = q')) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) = ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> q')))
T c==> c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f7 c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f7
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) |- ((((\c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) c) ==> F) = T)
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c= c==> * / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b1 b2 b3 b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ cIN * * * b1 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f2 cF cT
+ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) |- ((((x _2161981) _2161982) _2161983) IN (a INSERT (b INSERT (c INSERT EMPTY))))
T c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN * * * f0 f4 f5 f6 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- ((!x'. ((~ (x' IN s)) \/ (x IN ((hull P) s)))) = ((!x. (~ (x IN s))) \/ (x IN ((hull P) s))))
T c= ! c\/ c~ cIN b0 f0 cIN f1 * * part chull f2 f0 c\/ ! c~ cIN b0 f0 cIN f1 * * part chull f2 f0
+ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) |- (!w. (((((x _2161981) _2161982) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x _2161981) _2161982) w) IN ((hull affine) (_2161981 INSERT (_2161982 INSERT (w INSERT EMPTY))))))))
T c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c/\ cIN * * * f0 f4 f5 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 f4 f5 b0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY
+ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) |- (~ ((((x _2161981) _2161982) _2161983) IN ((hull affine) (_2161981 INSERT (_2161982 INSERT (_2161983 INSERT EMPTY))))))
T c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN * * * f0 f4 f5 f6 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((coplanar_alt s) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= ccoplanar_alt f0 c? / c? / c? / cSUBSET f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ |- ((!v. (?x. (!w. (((x w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((x w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) = (?x. (!v. (!w. ((((x v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ (((x v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))
T c= ! c? / ! c/\ cIN * b1 b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN * b1 b2 * * part chull part caffine * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY c? / ! ! c/\ cIN * * b0 b1 b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN * * b0 b1 b2 * * part chull part caffine * * part cINSERT f3 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (T = ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)))
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= cT c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV
+ ((\x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) x) |- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))
T c==> * / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b0 b1 b2 b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN * * * b0 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f3 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f3 b0 b1 b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN * * * f3 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY))))) = (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> q')))) = ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY))))) = (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> q'))))
T c= c==> c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV f3 c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV f3
- |- (((((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)) ==> ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F))) ==> (((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)) ==> ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)))) = (((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)) ==> ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F))))
T c= c==> c==> c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF
+ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((\s. ((coplanar_alt s) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) s)
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV * / c= ccoplanar_alt b0 c? / c? / c? / cSUBSET b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
+ |- ((\p'. (!q'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = p') ==> ((p' ==> ((coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY))))) = (p' ==> q')))))) p')
T * / ! c==> c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV b0 c==> c==> b0 c= ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> b0 b1 f3
+ |- ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> F)
T c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF
+ |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY)))) = (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY))))) = (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) = ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY))))) = (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))
T c= c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- |- ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
+ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) |- (((!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) ==> ((\u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) _2161981)) = ((\u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) _2161981))
T c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> ! ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f4 * / ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f4
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t)
T * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) |- (((\b. (?c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) b) ==> F)
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c==> * / c? / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b2 b3 b4 b5 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN * * * b2 b3 b4 b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f1 cF
+ |- (((!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) ==> ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t)) = ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t))
T c= c==> ! c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1 * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) |- ((((\x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) x) ==> F) = T)
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c= c==> * / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b0 b1 b2 b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN * * * b0 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f3 cF cT
+ |- (((!p'. (!q'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = p') ==> ((p' ==> ((coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = p') ==> ((p' ==> ((coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = p') ==> ((p' ==> ((coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV b0 c==> c==> b0 c= ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> b0 b1 * / ! c==> c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV b0 c==> c==> b0 c= ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> b0 b1 f3 * / ! c==> c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV b0 c==> c==> b0 c= ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> b0 b1 f3
- |- ((?x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = ((?x. (x IN (a INSERT (b INSERT (c INSERT EMPTY))))) /\ (~ (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))
T c= c? / c/\ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c? / cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (coplanar_alt (a INSERT (b INSERT (c INSERT EMPTY))))) = (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> q')))
T c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV f3
+ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) |- (!x. ((~ (x IN _2161979)) \/ (x IN ((hull _2161978) _2161979))))
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 ! c\/ c~ cIN b0 f0 cIN b0 * * part chull f1 f0
+ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) |- (((((x _2161981) _2161982) _2161983) IN ((hull affine) (_2161981 INSERT (_2161982 INSERT (_2161983 INSERT EMPTY))))) ==> F)
T c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> cIN * * * f0 f4 f5 f6 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cF
- |- ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> (~ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s))))))))
T c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c~ ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1
- |- ((!s. (P s)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- (((!q'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = p') ==> ((p' ==> ((?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) = (p' ==> q'))))) ==> ((\q'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = p') ==> ((p' ==> ((?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) = (p' ==> q'))))) q')) = ((\q'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = p') ==> ((p' ==> ((?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV f0 c==> c==> f0 c= c? / c? / c? / ! c==> cIN b4 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b4 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> f0 b0 * / c==> c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV f0 c==> c==> f0 c= c? / c? / c? / ! c==> cIN b4 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b4 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> f0 b0 f4 * / c==> c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV f0 c==> c==> f0 c= c? / c? / c? / ! c==> cIN b4 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b4 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> f0 b0 f4
- (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))), (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) |- ((~ F) ==> F)
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c~ cF cF
- (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))), (~ ((((x a) b) c) IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))), (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) |- ((~ ((((x a) b) c) IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) /\ ((((x a) b) c) IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c==> c~ cIN * * * f0 f1 f2 f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ cIN * * * f0 f1 f2 f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN * * * f0 f1 f2 f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) = (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) = (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) = ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) = (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))
T c= c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))), (~ F), (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) |- ((~ F) /\ F)
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c==> c~ cF c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * f0 b0 b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ cF cF
- |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) = (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> q')))) = ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) = (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> q'))))
T c= c==> c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f3 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV f3 c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f3 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV f3
- |- ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) = (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
- |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = p') ==> ((p' ==> ((?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) = q')) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) = (p' ==> q'))))
T c==> c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV f0 c==> c==> f0 c= c? / c? / c? / ! c==> cIN b3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f4 c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> f0 f4
- (~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) |- ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) /\ (~ (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s))))))))
T c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c~ ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1
- |- (T = (((~ (_2161980 IN _2161979)) \/ (_2161980 IN ((hull _2161978) _2161979))) = ((_2161980 IN ((hull _2161978) _2161979)) \/ (~ (_2161980 IN _2161979)))))
T c= cT c= c\/ c~ cIN f0 f1 cIN f0 * * part chull f2 f1 c\/ cIN f0 * * part chull f2 f1 c~ cIN f0 f1
- |- ((?x. ((P x) /\ Q)) = ((?x. (P x)) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
- |- ((((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)) ==> ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F))) = ((~ (!a. (!b. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> (?u. (?v. (?w. (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) ==> ((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> F)))
T c= c==> c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF c==> c~ ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c? / c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 cF
- (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))), (?c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- ((?c. (?x. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (!u. (!v. (!w. (((((x u) v) w) IN (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (~ ((((x u) v) w) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) /\ F)
T c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 c==> c? / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b1 b2 b3 b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ cIN * * * b1 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c? / c? / c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV ! ! ! c/\ cIN * * * b1 b2 b3 b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ cIN * * * b1 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF
- |- (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) = p') ==> ((p' ==> ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) = q')) ==> (((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) = (p' ==> q'))))
T c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c==> f4 c= cIN f0 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY f8 c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> f4 f8
