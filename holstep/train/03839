N Aq1.EQ_LIST_NODE_HY
C |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((MEM d) (list_of_darts L))))) ==> (!x. (((MEM x) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))) = ((x IN ((node (hypermap_of_list L)) d)) /\ (~ (x = d))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 cMEM f4 clist_of_darts f0 ! c= cMEM b0 cmap / cPOWER * part cn_list f0 b1 f4 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST f4 cflatten f0 c/\ cIN b0 * * part cnode chypermap_of_list f0 f4 c~ c= b0 f4
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D ADD_CLAUSES
A |- ((!n. (((NUMERAL _0) + n) = n)) /\ ((!m. ((m + (NUMERAL _0)) = m)) /\ ((!m. (!n. (((SUC m) + n) = (SUC (m + n))))) /\ (!m. (!n. ((m + (SUC n)) = (SUC (m + n))))))))
T c/\ ! c= c+ cNUMERAL c_0 b0 b0 c/\ ! c= c+ b0 cNUMERAL c_0 b0 c/\ ! ! c= c+ cSUC b0 b1 cSUC c+ b0 b1 ! ! c= c+ b0 cSUC b1 cSUC c+ b0 b1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_eq
A |- (!x. (!y. ((x = y) = ((real_of_int x) = (real_of_int y)))))
T c= c= f0 f1 c= creal_of_int f0 creal_of_int f1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_EQ
A |- (!x. (!y. ((~ (x = y)) = (((int_lt x) y) \/ ((int_lt y) x)))))
T c= c~ c= f0 f1 c\/ cint_lt f0 f1 cint_lt f1 f0
D INT_NOT_LT
A |- (!x. (!y. ((~ ((int_lt x) y)) = ((int_le y) x))))
T c= c~ cint_lt f0 f1 cint_le f1 f0
D INT_OF_NUM_EQ
A |- (!m. (!n. (((int_of_num m) = (int_of_num n)) = (m = n))))
T c= c= cint_of_num f0 cint_of_num f1 c= f0 f1
D INT_OF_NUM_LT
A |- (!m. (!n. (((int_lt (int_of_num m)) (int_of_num n)) = (m < n))))
T c= cint_lt cint_of_num f0 cint_of_num f1 c< f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Hypermap.node_map_and_darts
A |- (!H. ((FINITE (dart H)) /\ ((permutes (node_map H)) (dart H))))
T c/\ cFINITE * part cdart f0 cpermutes * part cnode_map f0 * part cdart f0
D Hypermap.node
A |- (!H. (!x. (((node H) x) = ((orbit_map (node_map H)) x))))
T c= * * part cnode f0 f1 * * part corbit_map * part cnode_map f0 f1
D Hypermap.lemma_in_node
A |- (!H. (!x. (!y. ((y IN ((node H) x)) = (?n. (y = (((POWER (node_map H)) n) x)))))))
T c= cIN f0 * * part cnode f1 f2 c? / c= f0 cPOWER * part cnode_map f1 b0 f2
D Hypermap.is_restricted
A |- (!H. ((is_restricted H) = ((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))))))))))))))
T c= cis_restricted f0 c/\ c~ c= * part cdart f0 part cEMPTY c/\ cplanar_hypermap f0 c/\ cplain_hypermap f0 c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0
D Hypermap_and_fan.ORBIT_MAP_INJ
A |- (!s. (!f. (!x. (!i. (!j. (!k. (((FINITE s) /\ (((permutes f) s) /\ (((CARD ((orbit_map f) x)) = k) /\ ((i < k) /\ ((j < k) /\ ((((POWER f) i) x) = (((POWER f) j) x))))))) ==> (i = j))))))))
T c==> c/\ cFINITE f0 c/\ cpermutes f1 f0 c/\ c= cCARD * * part corbit_map f1 f2 f3 c/\ c< f4 f3 c/\ c< f5 f3 c= cPOWER f1 f4 f2 cPOWER f1 f5 f2 c= f4 f5
D Seq.mapP
A |- (!f. (!s. (!y. (((MEM y) ((map f) s)) = (?x. (((MEM x) s) /\ (y = (f x))))))))
T c= cMEM f0 cmap f1 f2 c? / c/\ cMEM b0 f2 c= f0 * f1 b0
D List_hypermap.components_hypermap_of_list
A |- (!L. ((good_list L) ==> (((dart (hypermap_of_list L)) = (darts_of_list L)) /\ (((edge_map (hypermap_of_list L)) = (e_list_ext L)) /\ (((node_map (hypermap_of_list L)) = (n_list_ext L)) /\ ((face_map (hypermap_of_list L)) = (f_list_ext L)))))))
T c==> cgood_list f0 c/\ c= * part cdart chypermap_of_list f0 * part cdarts_of_list f0 c/\ c= * part cedge_map chypermap_of_list f0 * part ce_list_ext f0 c/\ c= * part cnode_map chypermap_of_list f0 * part cn_list_ext f0 c= * part cface_map chypermap_of_list f0 * part cf_list_ext f0
D List_hypermap.good_list_uniq
A |- (!L. ((good_list L) ==> (uniq L)))
T c==> cgood_list f0 cuniq f0
D Tame_defs2.good_list
A |- (!L. ((good_list L) = ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))))))
T c= cgood_list f0 c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Tame_defs2.facesAt_list
A |- (!v. (!L. (((facesAt_list L) v) = ((FILTER (MEM v)) L))))
T c= cfacesAt_list f0 f1 cFILTER * part cMEM f1 f0
D Tame_list.lower_case
A |- ((MAP = map) /\ ((LENGTH = sizel) /\ ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))))))
T c/\ c= part cMAP part cmap c/\ c= part cLENGTH part csizel c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
D Tame_list.dart_of_card_node
A |- (!L. (!x. (!v. (((good_list L) /\ ((good_list_nodes L) /\ (((all uniq) L) /\ (((MEM x) (list_of_darts L)) /\ ((FST x) = v))))) ==> ((CARD ((node (hypermap_of_list L)) x)) = (LENGTH ((facesAt_list L) v)))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ call part cuniq f0 c/\ cMEM f1 clist_of_darts f0 c= cFST f1 f2 c= cCARD * * part cnode chypermap_of_list f0 f1 cLENGTH cfacesAt_list f0 f2
D Tame_list.simple_hypermap_uniq
A |- (!L. (((good_list L) /\ (good_list_nodes L)) ==> ((simple_hypermap (hypermap_of_list L)) = ((all uniq) L))))
T c==> c/\ cgood_list f0 cgood_list_nodes f0 c= csimple_hypermap chypermap_of_list f0 call part cuniq f0
D Lebhirj.n_list_ext_n_list_power
A |- (!n. (((good_list L) /\ ((MEM d) (list_of_darts L))) ==> ((((POWER (n_list L)) n) d) = (((POWER (n_list_ext L)) n) d))))
T c==> c/\ cgood_list f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cn_list f0 f2 f1 cPOWER * part cn_list_ext f0 f2 f1
D Hojodcm.count_node_face
A |- (!L. (((uniq L) /\ ((all uniq) L)) ==> ((sizel ((filter (\t. (t = (FST d)))) (flatten L))) = (sizel ((filter (MEM (FST d))) L)))))
T c==> c/\ cuniq f0 call part cuniq f0 c= csizel cfilter / c= b0 cFST f1 cflatten f0 csizel cfilter * part cMEM cFST f1 f0
D Hojodcm.lemma_via_node_map
A |- (!H. (!x. (!y. ((y IN ((node H) x)) ==> (?j. ((j < (CARD ((node H) x))) /\ (y = (((POWER (node_map H)) j) x))))))))
T c==> cIN f0 * * part cnode f1 f2 c? / c/\ c< b0 cCARD * * part cnode f1 f2 c= f0 cPOWER * part cnode_map f1 b0 f2
D Aq1.MEM_EQ_UPT
A |- (((MEM j) ((upt (NUMERAL (BIT1 _0))) a)) = (((NUMERAL _0) < j) /\ (j < a)))
T c= cMEM f0 cupt cNUMERAL cBIT1 c_0 f1 c/\ c< cNUMERAL c_0 f0 c< f0 f1
- (?x. (((MEM x) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((((marked_list L) N) r) x) |- ((?x. (((MEM x) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))) /\ ((x' IN ((node (hypermap_of_list L)) d)) /\ (~ (x' = d))))
T c==> c? / c/\ cMEM b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST f0 cflatten f1 c= f2 cPOWER * part cn_list f1 b0 f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> cMEM f0 clist_of_darts f1 c==> cmarked_list f1 f3 f4 f5 c/\ c? / c/\ cMEM b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST f0 cflatten f1 c= f2 cPOWER * part cn_list f1 b0 f0 c/\ cIN f2 * * part cnode chypermap_of_list f1 f0 c~ c= f2 f0
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))), ((MEM d) (list_of_darts L)), ((MEM x) r), ((MEM r) N), (x' IN ((node (hypermap_of_list L)) d)), ((normal_list L) N) |- ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cMEM f1 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c/\ c= cnext_el f2 f1 cf_list f0 f1 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f1 c/\ c==> cfinal_list f0 f2 cflag_list f0 f3 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f3 f2 f1 c==> cMEM f4 clist_of_darts f0 c==> cMEM f1 f2 c==> cMEM f2 f3 c==> cIN f5 * * part cnode chypermap_of_list f0 f4 c==> cnormal_list f0 f3 c==> c~ c= f5 f4 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f4 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f4
+ (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347727)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) |- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10347727)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)
T * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
- |- ((\d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d))))) d)
T * / ! c= cMEM b0 clist_of_darts b1 cMEM b0 cfind_face b1 b0 f0
- |- ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all))))
T c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (list_of_darts L)), ((MEM x) r), ((MEM r) N), (x' IN ((node (hypermap_of_list L)) d)), ((normal_list L) N) |- (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f4 clist_of_darts f0 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cIN f5 * * part cnode chypermap_of_list f0 f4 c==> cnormal_list f0 f3 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> c~ c= f5 f4 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f4 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f4
+ (~ (x' = d)), (j = (NUMERAL _0)) |- ((x' = (((POWER (node_map (hypermap_of_list L))) j) d)) ==> ((NUMERAL _0) < (NUMERAL _0)))
T c==> c~ c= f0 f1 c==> c= f2 cNUMERAL c_0 c==> c= f0 cPOWER * part cnode_map chypermap_of_list f3 f2 f1 c< cNUMERAL c_0 cNUMERAL c_0
- (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((MEM d) (list_of_darts L)) ==> ((x' IN ((node (hypermap_of_list L)) d)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> cMEM f4 clist_of_darts f0 c==> cIN f5 * * part cnode chypermap_of_list f0 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c~ c= f5 f4 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f4 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f4
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((normal_list L) N) |- (((normal_list L) N) /\ (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cnormal_list f0 f2 c/\ cnormal_list f0 f2 c==> cMEM f3 f2 c==> cMEM f4 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f4 c==> c==> cfinal_list f0 f3 cflag_list f0 f2 c==> c==> c~ cfinal_list f0 f3 cs_flag_list f0 f2 f3 f4 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 f1
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (list_of_darts L)), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f3 f4 c==> cMEM f4 f1 c==> cnormal_list f0 f1 c==> c= cnext_el f4 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> c==> cfinal_list f0 f4 cflag_list f0 f1 c==> c==> c~ cfinal_list f0 f4 cs_flag_list f0 f1 f4 f3 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f2 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f2 cPOWER * part cnode_map chypermap_of_list f0 b0 f2 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f2 f2
+ |- ((\y. ((y IN ((node (hypermap_of_list L)) d)) ==> (?j. ((j < (CARD ((node (hypermap_of_list L)) d))) /\ (y = (((POWER (node_map (hypermap_of_list L))) j) d)))))) x')
T * / c==> cIN b0 * * part cnode chypermap_of_list f0 f1 c? / c/\ c< b1 cCARD * * part cnode chypermap_of_list f0 f1 c= b0 cPOWER * part cnode_map chypermap_of_list f0 b1 f1 f2
+ ((CARD ((node (hypermap_of_list L)) d)) = (sizel ((filter (MEM (FST d))) L))) |- ((sizel ((filter (MEM (FST d))) L)) = (CARD ((node (hypermap_of_list L)) d)))
T c==> c= cCARD * * part cnode chypermap_of_list f0 f1 csizel cfilter * part cMEM cFST f1 f0 c= csizel cfilter * part cMEM cFST f1 f0 cCARD * * part cnode chypermap_of_list f0 f1
+ (simple_hypermap (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)) |- ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c==> csimple_hypermap chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1
+ |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)) |- (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 f1
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))), ((MEM d) (list_of_darts L)), ((MEM r) N), (x' IN ((node (hypermap_of_list L)) d)), ((normal_list L) N) |- ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c/\ c==> cfinal_list f0 f1 cflag_list f0 f2 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c==> cMEM f4 clist_of_darts f0 c==> cMEM f1 f2 c==> cIN f5 * * part cnode chypermap_of_list f0 f4 c==> cnormal_list f0 f2 c==> c~ c= f5 f4 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f4 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f4
+ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d), (x'' < (CARD ((node (hypermap_of_list L)) d))), ((NUMERAL _0) < x'') |- ((((NUMERAL _0) < (CARD ((node (hypermap_of_list L)) d))) ==> (x'' = (NUMERAL _0))) ==> F)
T c==> c= cPOWER * part cnode_map chypermap_of_list f0 f1 f2 f2 c==> c< f1 cCARD * * part cnode chypermap_of_list f0 f2 c==> c< cNUMERAL c_0 f1 c==> c==> c< cNUMERAL c_0 cCARD * * part cnode chypermap_of_list f0 f2 c= f1 cNUMERAL c_0 cF
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
+ |- ((\k. (((FINITE (dart (hypermap_of_list L))) /\ (((permutes (node_map (hypermap_of_list L))) (dart (hypermap_of_list L))) /\ (((CARD ((orbit_map (node_map (hypermap_of_list L))) d)) = k) /\ ((x'' < k) /\ (((NUMERAL _0) < k) /\ ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) (NUMERAL _0)) d))))))) ==> (x'' = (NUMERAL _0)))) (CARD ((node (hypermap_of_list L)) d)))
T * / c==> c/\ cFINITE * part cdart chypermap_of_list f0 c/\ cpermutes * part cnode_map chypermap_of_list f0 * part cdart chypermap_of_list f0 c/\ c= cCARD * * part corbit_map * part cnode_map chypermap_of_list f0 f1 b0 c/\ c< f2 b0 c/\ c< cNUMERAL c_0 b0 c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 cPOWER * part cnode_map chypermap_of_list f0 cNUMERAL c_0 f1 c= f2 cNUMERAL c_0 cCARD * * part cnode chypermap_of_list f0 f1
+ |- (((((uniq L) /\ ((all uniq) L)) ==> ((sizel ((filter (\t. (t = (FST d)))) (flatten L))) = (sizel ((filter (MEM (FST d))) L)))) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))) = ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))))
T c= c==> c==> c/\ cuniq f0 call part cuniq f0 c= csizel cfilter / c= b0 cFST f1 cflatten f0 csizel cfilter * part cMEM cFST f1 f0 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1
+ |- ((((NUMERAL _0) < x'') /\ (x'' < (CARD ((node (hypermap_of_list L)) d)))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))
T c==> c/\ c< cNUMERAL c_0 f0 c< f0 cCARD * * part cnode chypermap_of_list f1 f2 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f1 f0 f2 cPOWER * part cnode_map chypermap_of_list f1 b0 f2 c~ c= cPOWER * part cnode_map chypermap_of_list f1 f0 f2 f2
- (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347727)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)) |- ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 c==> cMEM f4 clist_of_darts f0 c==> cIN f5 * * part cnode chypermap_of_list f0 f4 c==> c~ c= f5 f4 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f4 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f4
+ (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((((marked_list L) N) r) x) |- (((?x. (((MEM x) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))) ==> ((x' IN ((node (hypermap_of_list L)) d)) /\ (~ (x' = d)))) /\ (((x' IN ((node (hypermap_of_list L)) d)) /\ (~ (x' = d))) ==> (?x. (((MEM x) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cmarked_list f0 f2 f3 f4 c/\ c==> c? / c/\ cMEM b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f1 c/\ cIN f5 * * part cnode chypermap_of_list f0 f1 c~ c= f5 f1 c==> c/\ cIN f5 * * part cnode chypermap_of_list f0 f1 c~ c= f5 f1 c? / c/\ cMEM b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f1
+ (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347727)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((MEM d) (list_of_darts L)) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c==> cMEM f3 clist_of_darts f0 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c==> c==> cfinal_list f0 f4 cflag_list f0 f1 c==> c==> c~ cfinal_list f0 f4 cs_flag_list f0 f1 f4 f2 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f3 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f3 cPOWER * part cnode_map chypermap_of_list f0 b0 f3 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f3 f3
+ |- ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))))
T c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
+ (good_list L), (good_list_nodes L), (((((marked_list L) N) r) x) /\ ((MEM d) (list_of_darts L))) |- (!x. (((MEM x) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))) = ((x IN ((node (hypermap_of_list L)) d)) /\ (~ (x = d)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cmarked_list f0 f1 f2 f3 cMEM f4 clist_of_darts f0 ! c= cMEM b0 cmap / cPOWER * part cn_list f0 b1 f4 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST f4 cflatten f0 c/\ cIN b0 * * part cnode chypermap_of_list f0 f4 c~ c= b0 f4
+ ((edge_map (hypermap_of_list L)) = (e_list_ext L)) |- ((e_list_ext L) = (edge_map (hypermap_of_list L)))
T c==> c= * part cedge_map chypermap_of_list f0 * part ce_list_ext f0 c= * part ce_list_ext f0 * part cedge_map chypermap_of_list f0
- ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ |- ((((~ ((dart (hypermap_of_list L)) = EMPTY)) /\ ((planar_hypermap (hypermap_of_list L)) /\ ((plain_hypermap (hypermap_of_list L)) /\ ((connected_hypermap (hypermap_of_list L)) /\ ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))))))))))) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))) = ((is_restricted (hypermap_of_list L)) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))))
T c= c==> c/\ c~ c= * part cdart chypermap_of_list f0 part cEMPTY c/\ cplanar_hypermap chypermap_of_list f0 c/\ cplain_hypermap chypermap_of_list f0 c/\ cconnected_hypermap chypermap_of_list f0 c/\ csimple_hypermap chypermap_of_list f0 c/\ cis_no_double_joins chypermap_of_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cis_node_nondegenerate chypermap_of_list f0 ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> cMEM f1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f2 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f1 f2 cPOWER * part cnode_map chypermap_of_list f0 b0 f2 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f1 f2 f2 c==> cis_restricted chypermap_of_list f0 c==> cMEM f1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f2 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f1 f2 cPOWER * part cnode_map chypermap_of_list f0 b0 f2 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f1 f2 f2
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (list_of_darts L)), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ c= cnext_el f1 f2 cf_list f0 f2 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c/\ c==> cfinal_list f0 f1 cflag_list f0 f3 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f4 clist_of_darts f0 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f4 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f4 cPOWER * part cnode_map chypermap_of_list f0 b0 f4 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f4 f4
+ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((MEM d) (list_of_darts L))))) |- (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((MEM d) (list_of_darts L))))) /\ (!x. (((MEM x) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))) = ((x IN ((node (hypermap_of_list L)) d)) /\ (~ (x = d))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 cMEM f4 clist_of_darts f0 c/\ c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 cMEM f4 clist_of_darts f0 ! c= cMEM b0 cmap / cPOWER * part cn_list f0 b1 f4 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST f4 cflatten f0 c/\ cIN b0 * * part cnode chypermap_of_list f0 f4 c~ c= b0 f4
+ (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- (((!v. (((good_list L) /\ ((good_list_nodes L) /\ (((all uniq) L) /\ (((MEM d) (list_of_darts L)) /\ ((FST d) = v))))) ==> ((CARD ((node (hypermap_of_list L)) d)) = (LENGTH ((facesAt_list L) v))))) ==> ((\v. (((good_list L) /\ ((good_list_nodes L) /\ (((all uniq) L) /\ (((MEM d) (list_of_darts L)) /\ ((FST d) = v))))) ==> ((CARD ((node (hypermap_of_list L)) d)) = (LENGTH ((facesAt_list L) v))))) (FST d))) = ((\v. (((good_list L) /\ ((good_list_nodes L) /\ (((all uniq) L) /\ (((MEM d) (list_of_darts L)) /\ ((FST d) = v))))) ==> ((CARD ((node (hypermap_of_list L)) d)) = (LENGTH ((facesAt_list L) v))))) (FST d)))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ call part cuniq f0 c/\ cMEM f1 clist_of_darts f0 c= cFST f1 b0 c= cCARD * * part cnode chypermap_of_list f0 f1 cLENGTH cfacesAt_list f0 b0 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ call part cuniq f0 c/\ cMEM f1 clist_of_darts f0 c= cFST f1 b0 c= cCARD * * part cnode chypermap_of_list f0 f1 cLENGTH cfacesAt_list f0 b0 cFST f1 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ call part cuniq f0 c/\ cMEM f1 clist_of_darts f0 c= cFST f1 b0 c= cCARD * * part cnode chypermap_of_list f0 f1 cLENGTH cfacesAt_list f0 b0 cFST f1
- (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)), ((((marked_list L) N) r) x) |- ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c==> cmarked_list f0 f3 f4 f5 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1
- (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10347730) = (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (is_no_double_joins (hypermap_of_list L)) |- ((is_no_double_joins (hypermap_of_list L)) = T)
T c==> cis_no_double_joins chypermap_of_list f0 c= cis_no_double_joins chypermap_of_list f0 cT
- (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (list_of_darts L)), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c/\ c==> cfinal_list f0 f1 cflag_list f0 f3 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f4 clist_of_darts f0 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f4 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f4 cPOWER * part cnode_map chypermap_of_list f0 b0 f4 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f4 f4
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
- |- ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))
T c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ (good_list L), (good_list_nodes L), (x' = (((POWER (n_list L)) x'') d)), ((MEM d) (list_of_darts L)), ((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))), ((((marked_list L) N) r) x) |- ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f1 cPOWER * part cn_list f0 f2 f3 c==> cMEM f3 clist_of_darts f0 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f3 cflatten f0 c==> cmarked_list f0 f4 f5 f6 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f3 cPOWER * part cnode_map chypermap_of_list f0 b0 f3 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f3 f3
- ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) |- (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) = T)
T c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c= c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 cT
+ (~ (x' = d)), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)), ((((marked_list L) N) r) x) |- (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))
T c==> c~ c= f0 f1 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> cMEM f1 clist_of_darts f2 c==> cIN f0 * * part cnode chypermap_of_list f2 f1 c==> cmarked_list f2 f3 f4 f5 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f2 c= f0 cPOWER * part cn_list f2 b0 f1
+ |- ((m < n) = ((int_lt (int_of_num m)) (int_of_num n)))
T c= c< f0 f1 cint_lt cint_of_num f0 cint_of_num f1
+ |- ((\n. (((good_list L) /\ ((MEM d) (list_of_darts L))) ==> ((((POWER (n_list L)) n) d) = (((POWER (n_list_ext L)) n) d)))) n)
T * / c==> c/\ cgood_list f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cn_list f0 b0 f1 cPOWER * part cn_list_ext f0 b0 f1 f2
- (((final_list L) r) ==> ((flag_list L) N)) |- (((final_list L) r) ==> (((flag_list L) N) = T))
T c==> c==> cfinal_list f0 f1 cflag_list f0 f2 c==> cfinal_list f0 f1 c= cflag_list f0 f2 cT
+ (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)) |- ((is_restricted (hypermap_of_list L)) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))
T c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cis_restricted chypermap_of_list f0 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 f1
+ |- ((\L. (((uniq L) /\ ((all uniq) L)) ==> ((sizel ((filter (\t. (t = (FST d)))) (flatten L))) = (sizel ((filter (MEM (FST d))) L))))) L)
T * / c==> c/\ cuniq b0 call part cuniq b0 c= csizel cfilter / c= b1 cFST f0 cflatten b0 csizel cfilter * part cMEM cFST f0 b0 f1
+ |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- ((good_list L) ==> ((e_list_ext L) = (edge_map (hypermap_of_list L))))
T c==> cgood_list f0 c= * part ce_list_ext f0 * part cedge_map chypermap_of_list f0
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (list_of_darts L)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f2 clist_of_darts f0 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f4 c==> c==> cfinal_list f0 f3 cflag_list f0 f1 c==> c==> c~ cfinal_list f0 f3 cs_flag_list f0 f1 f3 f4 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f2 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f2 cPOWER * part cnode_map chypermap_of_list f0 b0 f2 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f2 f2
+ (uniq L), (good_list L), (good_list_nodes L), ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))), ((MEM d) (list_of_darts L)) |- (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))
T c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 c==> cMEM f4 clist_of_darts f0 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f4 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f4 cPOWER * part cnode_map chypermap_of_list f0 b0 f4 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f4 f4
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (list_of_darts L)), ((MEM x) r), ((MEM r) N), (x' IN ((node (hypermap_of_list L)) d)), ((normal_list L) N) |- ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f4 clist_of_darts f0 c==> cMEM f3 f2 c==> cMEM f2 f1 c==> cIN f5 * * part cnode chypermap_of_list f0 f4 c==> cnormal_list f0 f1 c==> c~ c= f5 f4 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f4 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f4
+ |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((MEM d) (list_of_darts L))))) ==> (!x. (((MEM x) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))) = ((x IN ((node (hypermap_of_list L)) d)) /\ (~ (x = d)))))) = T)
T c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 cMEM f4 clist_of_darts f0 ! c= cMEM b0 cmap / cPOWER * part cn_list f0 b1 f4 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST f4 cflatten f0 c/\ cIN b0 * * part cnode chypermap_of_list f0 f4 c~ c= b0 f4 cT
+ |- (((((NUMERAL _0) < x'') /\ (x'' < (CARD ((node (hypermap_of_list L)) d)))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))) = (((MEM x'') ((upt (NUMERAL (BIT1 _0))) (CARD ((node (hypermap_of_list L)) d)))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))
T c= c==> c/\ c< cNUMERAL c_0 f0 c< f0 cCARD * * part cnode chypermap_of_list f1 f2 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f1 f0 f2 cPOWER * part cnode_map chypermap_of_list f1 b0 f2 c~ c= cPOWER * part cnode_map chypermap_of_list f1 f0 f2 f2 c==> cMEM f0 cupt cNUMERAL cBIT1 c_0 cCARD * * part cnode chypermap_of_list f1 f2 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f1 f0 f2 cPOWER * part cnode_map chypermap_of_list f1 b0 f2 c~ c= cPOWER * part cnode_map chypermap_of_list f1 f0 f2 f2
- (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347727)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10347727)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10347730) = (real_of_num (NUMERAL _0))))))) |- ((real_of_int _10347730) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0
+ (simple_hypermap (hypermap_of_list L)), (good_list L), (good_list_nodes L) |- ((((all uniq) L) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))) = ((((good_list L) /\ (good_list_nodes L)) ==> ((simple_hypermap (hypermap_of_list L)) = ((all uniq) L))) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))))
T c==> csimple_hypermap chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c= c==> call part cuniq f0 c==> cMEM f1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f2 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f1 f2 cPOWER * part cnode_map chypermap_of_list f0 b0 f2 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f1 f2 f2 c==> c==> c/\ cgood_list f0 cgood_list_nodes f0 c= csimple_hypermap chypermap_of_list f0 call part cuniq f0 c==> cMEM f1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f2 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f1 f2 cPOWER * part cnode_map chypermap_of_list f0 b0 f2 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f1 f2 f2
+ |- (((!L. (((good_list L) /\ (good_list_nodes L)) ==> ((simple_hypermap (hypermap_of_list L)) = ((all uniq) L)))) ==> ((\L. (((good_list L) /\ (good_list_nodes L)) ==> ((simple_hypermap (hypermap_of_list L)) = ((all uniq) L)))) L)) = ((\L. (((good_list L) /\ (good_list_nodes L)) ==> ((simple_hypermap (hypermap_of_list L)) = ((all uniq) L)))) L))
T c= c==> ! c==> c/\ cgood_list b0 cgood_list_nodes b0 c= csimple_hypermap chypermap_of_list b0 call part cuniq b0 * / c==> c/\ cgood_list b0 cgood_list_nodes b0 c= csimple_hypermap chypermap_of_list b0 call part cuniq b0 f0 * / c==> c/\ cgood_list b0 cgood_list_nodes b0 c= csimple_hypermap chypermap_of_list b0 call part cuniq b0 f0
- ((CARD ((node (hypermap_of_list L)) d)) = (sizel ((filter (MEM (FST d))) L))) |- (((CARD ((node (hypermap_of_list L)) d)) = (sizel ((filter (MEM (FST d))) L))) /\ (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (MEM (FST d))) L)))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))
T c==> c= cCARD * * part cnode chypermap_of_list f0 f1 csizel cfilter * part cMEM cFST f1 f0 c/\ c= cCARD * * part cnode chypermap_of_list f0 f1 csizel cfilter * part cMEM cFST f1 f0 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter * part cMEM cFST f1 f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 f1
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- (((~ (EMPTY = (dart (hypermap_of_list L)))) ==> ((EMPTY = (dart (hypermap_of_list L))) = F)) = ((EMPTY = (dart (hypermap_of_list L))) = F))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c= c==> c~ c= part cEMPTY * part cdart chypermap_of_list f0 c= c= part cEMPTY * part cdart chypermap_of_list f0 cF c= c= part cEMPTY * part cdart chypermap_of_list f0 cF
+ (simple_hypermap (hypermap_of_list L)), (good_list L), (good_list_nodes L) |- ((((all uniq) L) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))) = ((((good_list L) /\ (good_list_nodes L)) ==> ((simple_hypermap (hypermap_of_list L)) = ((all uniq) L))) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))))
T c==> csimple_hypermap chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c= c==> call part cuniq f0 c==> c~ c= f1 f2 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f2 cflatten f0 c= f1 cPOWER * part cn_list f0 b0 f2 c==> c==> c/\ cgood_list f0 cgood_list_nodes f0 c= csimple_hypermap chypermap_of_list f0 call part cuniq f0 c==> c~ c= f1 f2 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f2 cflatten f0 c= f1 cPOWER * part cn_list f0 b0 f2
+ (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((((marked_list L) N) r) x) |- ((?x. (((MEM x) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))) ==> ((x' IN ((node (hypermap_of_list L)) d)) /\ (~ (x' = d))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cmarked_list f0 f2 f3 f4 c==> c? / c/\ cMEM b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f1 c/\ cIN f5 * * part cnode chypermap_of_list f0 f1 c~ c= f5 f1
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))), ((MEM d) (list_of_darts L)), ((MEM r) N), ((normal_list L) N) |- (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cMEM f1 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c/\ c= cnext_el f2 f1 cf_list f0 f1 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f1 c/\ c==> cfinal_list f0 f2 cflag_list f0 f3 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f3 f2 f1 c==> cMEM f4 clist_of_darts f0 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f4 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f4 cPOWER * part cnode_map chypermap_of_list f0 b0 f4 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f4 f4
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (MAP = map)
T c= part cMAP part cmap
+ |- (LENGTH = sizel)
T c= part cLENGTH part csizel
+ (uniq L), (good_list L), (good_list_nodes L), ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))) /\ ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))))
T c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 c==> cMEM f4 clist_of_darts f0 c==> cIN f5 * * part cnode chypermap_of_list f0 f4 c/\ c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 c==> c~ c= f5 f4 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f4 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f4
- (good_list L) |- ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> (((MEM d) (list_of_darts L)) ==> ((x' = (((POWER (n_list L)) x'') d)) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> cMEM f4 clist_of_darts f0 c==> c= f5 cPOWER * part cn_list f0 f6 f4 c==> cMEM f6 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f4 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f6 f4 cPOWER * part cnode_map chypermap_of_list f0 b0 f4 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f6 f4 f4
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
+ (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))))
T c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f3 c/\ cMEM f4 f3 c/\ cMEM f5 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c/\ c= cnext_el f4 f5 cf_list f0 f5 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f5 c/\ c==> cfinal_list f0 f4 cflag_list f0 f3 c==> c~ cfinal_list f0 f4 cs_flag_list f0 f3 f4 f5 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1
+ (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((all uniq) L) |- ((((CARD ((node (hypermap_of_list L)) d)) = (sizel ((filter (MEM (FST d))) L))) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((all uniq) L) /\ (((MEM d) (list_of_darts L)) /\ ((FST d) = (FST d)))))) ==> ((CARD ((node (hypermap_of_list L)) d)) = (LENGTH ((facesAt_list L) (FST d))))) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> call part cuniq f0 c= c==> c= cCARD * * part cnode chypermap_of_list f0 f1 csizel cfilter * part cMEM cFST f1 f0 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 f1 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ call part cuniq f0 c/\ cMEM f1 clist_of_darts f0 c= cFST f1 cFST f1 c= cCARD * * part cnode chypermap_of_list f0 f1 cLENGTH cfacesAt_list f0 cFST f1 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 f1
+ |- (((?x. (((MEM x) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))) = ((x' IN ((node (hypermap_of_list L)) d)) /\ (~ (x' = d)))) = (((MEM x') ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))) = ((x' IN ((node (hypermap_of_list L)) d)) /\ (~ (x' = d)))))
T c= c= c? / c/\ cMEM b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST f0 cflatten f1 c= f2 cPOWER * part cn_list f1 b0 f0 c/\ cIN f2 * * part cnode chypermap_of_list f1 f0 c~ c= f2 f0 c= cMEM f2 cmap / cPOWER * part cn_list f1 b0 f0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f0 cflatten f1 c/\ cIN f2 * * part cnode chypermap_of_list f1 f0 c~ c= f2 f0
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)), ((normal_list L) N) |- ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c/\ c==> cfinal_list f0 f1 cflag_list f0 f2 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c==> cMEM f4 clist_of_darts f0 c==> cIN f5 * * part cnode chypermap_of_list f0 f4 c==> cnormal_list f0 f2 c==> c~ c= f5 f4 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f4 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f4
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f4 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f5 c==> c==> cfinal_list f0 f4 cflag_list f0 f3 c==> c==> c~ cfinal_list f0 f4 cs_flag_list f0 f3 f4 f5 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)), (((final_list L) r) ==> ((flag_list L) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (list_of_darts L)), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f4 clist_of_darts f0 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f4 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f4 cPOWER * part cnode_map chypermap_of_list f0 b0 f4 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f4 f4
+ |- ((~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)) = ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))
T c= c~ c= cPOWER * part cnode_map chypermap_of_list f0 f1 f2 f2 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f1 f2 cPOWER * part cnode_map chypermap_of_list f0 b0 f2 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f1 f2 f2
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347727)) /\ ((((real_le ((real_add (real_of_int _10347727)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) /\ ((real_le (real_of_int _10347727)) (real_of_num (NUMERAL _0))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _10347727) ==> ((_10347727 = (int_of_num (NUMERAL _0))) \/ ((int_lt (int_of_num (NUMERAL _0))) _10347727)))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_of_int f0 creal_of_num cNUMERAL c_0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c\/ c= f0 cint_of_num cNUMERAL c_0 cint_lt cint_of_num cNUMERAL c_0 f0
+ (~ (x' = d)), (x' = (((POWER (node_map (hypermap_of_list L))) j) d)) |- (((j = (NUMERAL _0)) \/ ((NUMERAL _0) < j)) ==> ((NUMERAL _0) < j))
T c==> c~ c= f0 f1 c==> c= f0 cPOWER * part cnode_map chypermap_of_list f2 f3 f1 c==> c\/ c= f3 cNUMERAL c_0 c< cNUMERAL c_0 f3 c< cNUMERAL c_0 f3
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (~ (x' = d)), (good_list L), (x' = (((POWER (node_map (hypermap_of_list L))) j) d)), (j < (CARD ((node (hypermap_of_list L)) d))), ((MEM d) (list_of_darts L)) |- (?x. ((((NUMERAL _0) < x) /\ (x < (CARD ((node (hypermap_of_list L)) d)))) /\ (x' = (((POWER (n_list L)) x) d))))
T c==> c~ c= f0 f1 c==> cgood_list f2 c==> c= f0 cPOWER * part cnode_map chypermap_of_list f2 f3 f1 c==> c< f3 cCARD * * part cnode chypermap_of_list f2 f1 c==> cMEM f1 clist_of_darts f2 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 cCARD * * part cnode chypermap_of_list f2 f1 c= f0 cPOWER * part cn_list f2 b0 f1
+ |- ((x' IN ((node (hypermap_of_list L)) d)) ==> (?j. ((j < (CARD ((node (hypermap_of_list L)) d))) /\ (x' = (((POWER (node_map (hypermap_of_list L))) j) d)))))
T c==> cIN f0 * * part cnode chypermap_of_list f1 f2 c? / c/\ c< b0 cCARD * * part cnode chypermap_of_list f1 f2 c= f0 cPOWER * part cnode_map chypermap_of_list f1 b0 f2
+ |- (((!x. (((orbit_map (node_map H)) x) = ((node H) x))) ==> ((\x. (((orbit_map (node_map H)) x) = ((node H) x))) x)) = ((\x. (((orbit_map (node_map H)) x) = ((node H) x))) x))
T c= c==> ! c= * * part corbit_map * part cnode_map f0 b0 * * part cnode f0 b0 * / c= * * part corbit_map * part cnode_map f0 b0 * * part cnode f0 b0 f1 * / c= * * part corbit_map * part cnode_map f0 b0 * * part cnode f0 b0 f1
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c==> cMEM f3 clist_of_darts f0 c==> cIN f4 * * part cnode chypermap_of_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c==> c==> cfinal_list f0 f5 cflag_list f0 f1 c==> c==> c~ cfinal_list f0 f5 cs_flag_list f0 f1 f5 f2 c==> c~ c= f4 f3 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f3 cflatten f0 c= f4 cPOWER * part cn_list f0 b0 f3
- (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((((marked_list L) N) r) x) |- (((MEM d) (list_of_darts L)) /\ ((x' = (((POWER (n_list L)) x'') d)) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cmarked_list f0 f2 f3 f4 c/\ cMEM f1 clist_of_darts f0 c==> c= f5 cPOWER * part cn_list f0 f6 f1 c==> cMEM f6 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f6 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f6 f1 f1
- (((NUMERAL _0) < (CARD ((node (hypermap_of_list L)) d))) ==> (x'' = (NUMERAL _0))) |- ((((NUMERAL _0) < (CARD ((node (hypermap_of_list L)) d))) ==> (x'' = (NUMERAL _0))) = T)
T c==> c==> c< cNUMERAL c_0 cCARD * * part cnode chypermap_of_list f0 f1 c= f2 cNUMERAL c_0 c= c==> c< cNUMERAL c_0 cCARD * * part cnode chypermap_of_list f0 f1 c= f2 cNUMERAL c_0 cT
+ (~ (x' = d)), (j = (NUMERAL _0)) |- (T = ((x' = (((POWER (node_map (hypermap_of_list L))) j) d)) ==> ((NUMERAL _0) < (NUMERAL _0))))
T c==> c~ c= f0 f1 c==> c= f2 cNUMERAL c_0 c= cT c==> c= f0 cPOWER * part cnode_map chypermap_of_list f3 f2 f1 c< cNUMERAL c_0 cNUMERAL c_0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (x' = (((POWER (n_list L)) x'') d)), ((MEM d) (list_of_darts L)), ((all (\l. (~ (l = NIL)))) L), ((((marked_list L) N) r) x) |- (((good_list L) ==> (uniq L)) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f1 cPOWER * part cn_list f0 f2 f3 c==> cMEM f3 clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f0 f4 f5 f6 c==> c==> cgood_list f0 cuniq f0 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f3 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f3 cPOWER * part cnode_map chypermap_of_list f0 b0 f3 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f3 f3
- |- ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0)
T * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1
- (?j. ((j < (CARD ((node (hypermap_of_list L)) d))) /\ (x' = (((POWER (node_map (hypermap_of_list L))) j) d)))), (~ (x' = d)), (good_list L), ((MEM d) (list_of_darts L)) |- (?x. ((((NUMERAL _0) < x) /\ (x < (CARD ((node (hypermap_of_list L)) d)))) /\ (x' = (((POWER (n_list L)) x) d))))
T c==> c? / c/\ c< b0 cCARD * * part cnode chypermap_of_list f0 f1 c= f2 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c==> c~ c= f2 f1 c==> cgood_list f0 c==> cMEM f1 clist_of_darts f0 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 cCARD * * part cnode chypermap_of_list f0 f1 c= f2 cPOWER * part cn_list f0 b0 f1
+ |- (((MEM x'') ((upt (NUMERAL (BIT1 _0))) (CARD ((node (hypermap_of_list L)) d)))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))
T c==> cMEM f0 cupt cNUMERAL cBIT1 c_0 cCARD * * part cnode chypermap_of_list f1 f2 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f1 f0 f2 cPOWER * part cnode_map chypermap_of_list f1 b0 f2 c~ c= cPOWER * part cnode_map chypermap_of_list f1 f0 f2 f2
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))
T c==> c~ c= cNIL f0 c= cLAST f0 clast f1 f0
- |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((MEM d) (list_of_darts L))))) ==> (!x. (((MEM x) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))) = ((x IN ((node (hypermap_of_list L)) d)) /\ (~ (x = d))))))) = T)
T c= ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 cMEM f3 clist_of_darts f0 ! c= cMEM b1 cmap / cPOWER * part cn_list f0 b1 f3 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST f3 cflatten f0 c/\ cIN b1 * * part cnode chypermap_of_list f0 f3 c~ c= b1 f3 cT
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347727)) /\ ((((real_le ((real_add (real_of_int _10347727)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) /\ ((real_le (real_of_int _10347727)) (real_of_num (NUMERAL _0))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- (((!k. (((FINITE (dart (hypermap_of_list L))) /\ (((permutes (node_map (hypermap_of_list L))) (dart (hypermap_of_list L))) /\ (((CARD ((orbit_map (node_map (hypermap_of_list L))) d)) = k) /\ ((x'' < k) /\ (((NUMERAL _0) < k) /\ ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) (NUMERAL _0)) d))))))) ==> (x'' = (NUMERAL _0)))) ==> ((\k. (((FINITE (dart (hypermap_of_list L))) /\ (((permutes (node_map (hypermap_of_list L))) (dart (hypermap_of_list L))) /\ (((CARD ((orbit_map (node_map (hypermap_of_list L))) d)) = k) /\ ((x'' < k) /\ (((NUMERAL _0) < k) /\ ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) (NUMERAL _0)) d))))))) ==> (x'' = (NUMERAL _0)))) (CARD ((node (hypermap_of_list L)) d)))) = ((\k. (((FINITE (dart (hypermap_of_list L))) /\ (((permutes (node_map (hypermap_of_list L))) (dart (hypermap_of_list L))) /\ (((CARD ((orbit_map (node_map (hypermap_of_list L))) d)) = k) /\ ((x'' < k) /\ (((NUMERAL _0) < k) /\ ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) (NUMERAL _0)) d))))))) ==> (x'' = (NUMERAL _0)))) (CARD ((node (hypermap_of_list L)) d))))
T c= c==> ! c==> c/\ cFINITE * part cdart chypermap_of_list f0 c/\ cpermutes * part cnode_map chypermap_of_list f0 * part cdart chypermap_of_list f0 c/\ c= cCARD * * part corbit_map * part cnode_map chypermap_of_list f0 f1 b0 c/\ c< f2 b0 c/\ c< cNUMERAL c_0 b0 c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 cPOWER * part cnode_map chypermap_of_list f0 cNUMERAL c_0 f1 c= f2 cNUMERAL c_0 * / c==> c/\ cFINITE * part cdart chypermap_of_list f0 c/\ cpermutes * part cnode_map chypermap_of_list f0 * part cdart chypermap_of_list f0 c/\ c= cCARD * * part corbit_map * part cnode_map chypermap_of_list f0 f1 b0 c/\ c< f2 b0 c/\ c< cNUMERAL c_0 b0 c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 cPOWER * part cnode_map chypermap_of_list f0 cNUMERAL c_0 f1 c= f2 cNUMERAL c_0 cCARD * * part cnode chypermap_of_list f0 f1 * / c==> c/\ cFINITE * part cdart chypermap_of_list f0 c/\ cpermutes * part cnode_map chypermap_of_list f0 * part cdart chypermap_of_list f0 c/\ c= cCARD * * part corbit_map * part cnode_map chypermap_of_list f0 f1 b0 c/\ c< f2 b0 c/\ c< cNUMERAL c_0 b0 c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 cPOWER * part cnode_map chypermap_of_list f0 cNUMERAL c_0 f1 c= f2 cNUMERAL c_0 cCARD * * part cnode chypermap_of_list f0 f1
- (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10347730) = (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!n. (((good_list L) /\ ((MEM d) (list_of_darts L))) ==> ((((POWER (n_list L)) n) d) = (((POWER (n_list_ext L)) n) d)))) ==> ((\n. (((good_list L) /\ ((MEM d) (list_of_darts L))) ==> ((((POWER (n_list L)) n) d) = (((POWER (n_list_ext L)) n) d)))) n)) = ((\n. (((good_list L) /\ ((MEM d) (list_of_darts L))) ==> ((((POWER (n_list L)) n) d) = (((POWER (n_list_ext L)) n) d)))) n))
T c= c==> ! c==> c/\ cgood_list f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cn_list f0 b0 f1 cPOWER * part cn_list_ext f0 b0 f1 * / c==> c/\ cgood_list f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cn_list f0 b0 f1 cPOWER * part cn_list_ext f0 b0 f1 f2 * / c==> c/\ cgood_list f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cn_list f0 b0 f1 cPOWER * part cn_list_ext f0 b0 f1 f2
+ (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (good_list L), ((MEM d) (list_of_darts L)) |- (T = ((good_list L) /\ ((MEM d) (list_of_darts L))))
T c==> cgood_list f0 c==> cMEM f1 clist_of_darts f0 c= cT c/\ cgood_list f0 cMEM f1 clist_of_darts f0
- (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) ==> ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)) = ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f))
T c= c==> ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ (~ (x' = d)), (good_list L), ((MEM d) (list_of_darts L)) |- (((j < (CARD ((node (hypermap_of_list L)) d))) /\ (x' = (((POWER (node_map (hypermap_of_list L))) j) d))) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (CARD ((node (hypermap_of_list L)) d)))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c==> c~ c= f0 f1 c==> cgood_list f2 c==> cMEM f1 clist_of_darts f2 c==> c/\ c< f3 cCARD * * part cnode chypermap_of_list f2 f1 c= f0 cPOWER * part cnode_map chypermap_of_list f2 f3 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 cCARD * * part cnode chypermap_of_list f2 f1 c= f0 cPOWER * part cn_list f2 b0 f1
- (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347727)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((normal_list L) N) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cnormal_list f0 f2 c==> cMEM f3 f2 c==> cMEM f4 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f4 c==> c==> cfinal_list f0 f3 cflag_list f0 f2 c==> c==> c~ cfinal_list f0 f3 cs_flag_list f0 f2 f3 f4 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 f1
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((face_map (hypermap_of_list L)) = (f_list_ext L)) |- ((f_list_ext L) = (face_map (hypermap_of_list L)))
T c==> c= * part cface_map chypermap_of_list f0 * part cf_list_ext f0 c= * part cf_list_ext f0 * part cface_map chypermap_of_list f0
+ |- ((\j. (!k. (((FINITE (dart (hypermap_of_list L))) /\ (((permutes (node_map (hypermap_of_list L))) (dart (hypermap_of_list L))) /\ (((CARD ((orbit_map (node_map (hypermap_of_list L))) d)) = k) /\ ((x'' < k) /\ ((j < k) /\ ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) j) d))))))) ==> (x'' = j)))) (NUMERAL _0))
T * / ! c==> c/\ cFINITE * part cdart chypermap_of_list f0 c/\ cpermutes * part cnode_map chypermap_of_list f0 * part cdart chypermap_of_list f0 c/\ c= cCARD * * part corbit_map * part cnode_map chypermap_of_list f0 f1 b1 c/\ c< f2 b1 c/\ c< b0 b1 c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c= f2 b0 cNUMERAL c_0
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
+ (uniq L), (good_list L), (good_list_nodes L), ((~ ((dart (hypermap_of_list L)) = EMPTY)) /\ ((planar_hypermap (hypermap_of_list L)) /\ ((plain_hypermap (hypermap_of_list L)) /\ ((connected_hypermap (hypermap_of_list L)) /\ ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))))))))))), ((MEM d) (list_of_darts L)) |- (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))
T c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ c~ c= * part cdart chypermap_of_list f0 part cEMPTY c/\ cplanar_hypermap chypermap_of_list f0 c/\ cplain_hypermap chypermap_of_list f0 c/\ cconnected_hypermap chypermap_of_list f0 c/\ csimple_hypermap chypermap_of_list f0 c/\ cis_no_double_joins chypermap_of_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cis_node_nondegenerate chypermap_of_list f0 ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> cMEM f1 clist_of_darts f0 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 f1
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347730)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347731)) /\ (((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730)) /\ (((real_le ((real_add (real_of_int _10347730)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731)) /\ (((real_le (real_of_int _10347731)) (real_of_num (NUMERAL _0))) \/ ((real_of_int _10347730) = (real_of_num (NUMERAL _0)))))))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347730)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347731)) /\ (((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730)) /\ (((real_le ((real_add (real_of_int _10347730)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731)) /\ (((real_le (real_of_int _10347731)) (real_of_num (NUMERAL _0))) \/ ((real_of_int _10347730) = (real_of_num (NUMERAL _0)))))))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 c\/ creal_le creal_of_int f1 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 c\/ creal_le creal_of_int f1 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 cF
- |- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- ((\L. ((good_list L) ==> (uniq L))) L)
T * / c==> cgood_list b0 cuniq b0 f0
+ (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10347730) = (real_of_num (NUMERAL _0))))))) |- ((\x. (((real_mul x) (real_of_int _10347730)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ |- ((permutes (node_map H)) (dart H))
T cpermutes * part cnode_map f0 * part cdart f0
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((\n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) x'')
T * / c= cPOWER * part cnode_map chypermap_of_list f0 f1 f2 cPOWER * part cnode_map chypermap_of_list f0 b0 f2 f1
+ (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!x. (!v. (((good_list L) /\ ((good_list_nodes L) /\ (((all uniq) L) /\ (((MEM x) (list_of_darts L)) /\ ((FST x) = v))))) ==> ((CARD ((node (hypermap_of_list L)) x)) = (LENGTH ((facesAt_list L) v)))))) ==> ((\x. (!v. (((good_list L) /\ ((good_list_nodes L) /\ (((all uniq) L) /\ (((MEM x) (list_of_darts L)) /\ ((FST x) = v))))) ==> ((CARD ((node (hypermap_of_list L)) x)) = (LENGTH ((facesAt_list L) v)))))) d)) = ((\x. (!v. (((good_list L) /\ ((good_list_nodes L) /\ (((all uniq) L) /\ (((MEM x) (list_of_darts L)) /\ ((FST x) = v))))) ==> ((CARD ((node (hypermap_of_list L)) x)) = (LENGTH ((facesAt_list L) v)))))) d))
T c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ call part cuniq f0 c/\ cMEM b0 clist_of_darts f0 c= cFST b0 b1 c= cCARD * * part cnode chypermap_of_list f0 b0 cLENGTH cfacesAt_list f0 b1 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ call part cuniq f0 c/\ cMEM b0 clist_of_darts f0 c= cFST b0 b1 c= cCARD * * part cnode chypermap_of_list f0 b0 cLENGTH cfacesAt_list f0 b1 f1 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ call part cuniq f0 c/\ cMEM b0 clist_of_darts f0 c= cFST b0 b1 c= cCARD * * part cnode chypermap_of_list f0 b0 cLENGTH cfacesAt_list f0 b1 f1
- (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((!d. t) = t)
T c= ! f0 f0
+ (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)), ((((marked_list L) N) r) x) |- ((uniq L) /\ ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))))
T c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c==> cmarked_list f0 f3 f4 f5 c/\ cuniq f0 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))) = T)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c= c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
+ |- (((!L. (!x. (!v. (((good_list L) /\ ((good_list_nodes L) /\ (((all uniq) L) /\ (((MEM x) (list_of_darts L)) /\ ((FST x) = v))))) ==> ((CARD ((node (hypermap_of_list L)) x)) = (LENGTH ((facesAt_list L) v))))))) ==> ((\L. (!x. (!v. (((good_list L) /\ ((good_list_nodes L) /\ (((all uniq) L) /\ (((MEM x) (list_of_darts L)) /\ ((FST x) = v))))) ==> ((CARD ((node (hypermap_of_list L)) x)) = (LENGTH ((facesAt_list L) v))))))) L)) = ((\L. (!x. (!v. (((good_list L) /\ ((good_list_nodes L) /\ (((all uniq) L) /\ (((MEM x) (list_of_darts L)) /\ ((FST x) = v))))) ==> ((CARD ((node (hypermap_of_list L)) x)) = (LENGTH ((facesAt_list L) v))))))) L))
T c= c==> ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ call part cuniq b0 c/\ cMEM b1 clist_of_darts b0 c= cFST b1 b2 c= cCARD * * part cnode chypermap_of_list b0 b1 cLENGTH cfacesAt_list b0 b2 * / ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ call part cuniq b0 c/\ cMEM b1 clist_of_darts b0 c= cFST b1 b2 c= cCARD * * part cnode chypermap_of_list b0 b1 cLENGTH cfacesAt_list b0 b2 f0 * / ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ call part cuniq b0 c/\ cMEM b1 clist_of_darts b0 c= cFST b1 b2 c= cCARD * * part cnode chypermap_of_list b0 b1 cLENGTH cfacesAt_list b0 b2 f0
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- ((EMPTY = (dart (hypermap_of_list L))) = F)
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c= c= part cEMPTY * part cdart chypermap_of_list f0 cF
+ |- ((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((MEM d) (list_of_darts L))))) ==> (!x. (((MEM x) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))) = ((x IN ((node (hypermap_of_list L)) d)) /\ (~ (x = d)))))))) = T)
T c= ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 cMEM f2 clist_of_darts f0 ! c= cMEM b2 cmap / cPOWER * part cn_list f0 b2 f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b2 cFST f2 cflatten f0 c/\ cIN b2 * * part cnode chypermap_of_list f0 f2 c~ c= b2 f2 cT
+ (good_list L), (good_list_nodes L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((MEM d) (list_of_darts L)))) |- (!x. (((MEM x) ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))) = ((x IN ((node (hypermap_of_list L)) d)) /\ (~ (x = d)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 cMEM f4 clist_of_darts f0 ! c= cMEM b0 cmap / cPOWER * part cn_list f0 b1 f4 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST f4 cflatten f0 c/\ cIN b0 * * part cnode chypermap_of_list f0 f4 c~ c= b0 f4
+ (good_list L), ((CARD ((node (hypermap_of_list L)) d)) = (sizel ((filter (MEM (FST d))) L))), ((sizel ((filter (\t. (t = (FST d)))) (flatten L))) = (sizel ((filter (MEM (FST d))) L))), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)) |- ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (MEM (FST d))) L)))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c==> cgood_list f0 c==> c= cCARD * * part cnode chypermap_of_list f0 f1 csizel cfilter * part cMEM cFST f1 f0 c==> c= csizel cfilter / c= b0 cFST f1 cflatten f0 csizel cfilter * part cMEM cFST f1 f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter * part cMEM cFST f1 f0 c= f2 cPOWER * part cn_list f0 b0 f1
+ (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10347730) = (real_of_num (NUMERAL _0))))))) |- ((((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10347730) = (real_of_num (NUMERAL _0))))))) /\ F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 cF
+ (j = (NUMERAL _0)) |- (((NUMERAL _0) < (NUMERAL _0)) = ((NUMERAL _0) < j))
T c==> c= f0 cNUMERAL c_0 c= c< cNUMERAL c_0 cNUMERAL c_0 c< cNUMERAL c_0 f0
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347730)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347731)) /\ (((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730)) /\ (((real_le ((real_add (real_of_int _10347730)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731)) /\ (((real_le (real_of_int _10347731)) (real_of_num (NUMERAL _0))) \/ ((real_of_int _10347730) = (real_of_num (NUMERAL _0)))))))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347730)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347731)) /\ (((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730)) /\ (((real_le ((real_add (real_of_int _10347730)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731)) /\ (((real_le (real_of_int _10347731)) (real_of_num (NUMERAL _0))) \/ ((real_of_int _10347730) = (real_of_num (NUMERAL _0)))))))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347730)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347731)) /\ (((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730)) /\ (((real_le ((real_add (real_of_int _10347730)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731)) /\ (((real_le (real_of_int _10347731)) (real_of_num (NUMERAL _0))) \/ ((real_of_int _10347730) = (real_of_num (NUMERAL _0))))))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 c\/ creal_le creal_of_int f1 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 c\/ creal_le creal_of_int f1 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 c\/ creal_le creal_of_int f1 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((MEM x) r), ((MEM r) N), (x' IN ((node (hypermap_of_list L)) d)), ((normal_list L) N) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cMEM f2 f3 c==> cMEM f3 f4 c==> cIN f5 * * part cnode chypermap_of_list f0 f1 c==> cnormal_list f0 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f3 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> c==> cfinal_list f0 f3 cflag_list f0 f4 c==> c==> c~ cfinal_list f0 f3 cs_flag_list f0 f4 f3 f2 c==> c~ c= f5 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f1
+ |- ((((j = (NUMERAL _0)) \/ ((NUMERAL _0) < j)) ==> ((NUMERAL _0) < j)) = ((NUMERAL _0) < j))
T c= c==> c\/ c= f0 cNUMERAL c_0 c< cNUMERAL c_0 f0 c< cNUMERAL c_0 f0 c< cNUMERAL c_0 f0
+ (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))
T c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f3 f2 c/\ cMEM f4 f3 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f3 f4 cf_list f0 f4 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f4 c/\ c==> cfinal_list f0 f3 cflag_list f0 f2 c==> c~ cfinal_list f0 f3 cs_flag_list f0 f2 f3 f4 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 f1
+ |- ((\x. (!y. ((y IN ((node (hypermap_of_list L)) x)) ==> (?j. ((j < (CARD ((node (hypermap_of_list L)) x))) /\ (y = (((POWER (node_map (hypermap_of_list L))) j) x))))))) d)
T * / ! c==> cIN b1 * * part cnode chypermap_of_list f0 b0 c? / c/\ c< b2 cCARD * * part cnode chypermap_of_list f0 b0 c= b1 cPOWER * part cnode_map chypermap_of_list f0 b2 b0 f1
+ |- ((\x. (!i. (!j. (!k. (((FINITE (dart (hypermap_of_list L))) /\ (((permutes (node_map (hypermap_of_list L))) (dart (hypermap_of_list L))) /\ (((CARD ((orbit_map (node_map (hypermap_of_list L))) x)) = k) /\ ((i < k) /\ ((j < k) /\ ((((POWER (node_map (hypermap_of_list L))) i) x) = (((POWER (node_map (hypermap_of_list L))) j) x))))))) ==> (i = j)))))) d)
T * / ! ! ! c==> c/\ cFINITE * part cdart chypermap_of_list f0 c/\ cpermutes * part cnode_map chypermap_of_list f0 * part cdart chypermap_of_list f0 c/\ c= cCARD * * part corbit_map * part cnode_map chypermap_of_list f0 b0 b3 c/\ c< b1 b3 c/\ c< b2 b3 c= cPOWER * part cnode_map chypermap_of_list f0 b1 b0 cPOWER * part cnode_map chypermap_of_list f0 b2 b0 c= b1 b2 f1
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> c==> cfinal_list f0 f4 cflag_list f0 f2 c==> c==> c~ cfinal_list f0 f4 cs_flag_list f0 f2 f4 f3 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 f1
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (list_of_darts L)), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c/\ c= cnext_el f1 f2 cf_list f0 f2 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c/\ c==> cfinal_list f0 f1 cflag_list f0 f3 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f4 clist_of_darts f0 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f4 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f4 cPOWER * part cnode_map chypermap_of_list f0 b0 f4 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f4 f4
- (((final_list L) r) ==> ((flag_list L) N)), ((final_list L) r) |- ((flag_list L) N)
T c==> c==> cfinal_list f0 f1 cflag_list f0 f2 c==> cfinal_list f0 f1 cflag_list f0 f2
- (good_list L), (good_list_nodes L) |- ((good_list_nodes L) /\ (((((marked_list L) N) r) x) ==> (((MEM d) (list_of_darts L)) ==> ((x' = (((POWER (n_list L)) x'') d)) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c/\ cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> cMEM f4 clist_of_darts f0 c==> c= f5 cPOWER * part cn_list f0 f6 f4 c==> cMEM f6 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f4 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f6 f4 cPOWER * part cnode_map chypermap_of_list f0 b0 f4 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f6 f4 f4
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)) |- ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cMEM f3 clist_of_darts f0 c==> cIN f4 * * part cnode chypermap_of_list f0 f3 c/\ c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f2 c==> c==> cfinal_list f0 f1 cflag_list f0 f5 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f5 f1 f2 c==> c~ c= f4 f3 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f3 cflatten f0 c= f4 cPOWER * part cn_list f0 b0 f3
+ (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cmarked_list f0 f2 f3 f4 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 f1
- ((NUMERAL _0) < x'') |- (((NUMERAL _0) < x'') = T)
T c==> c< cNUMERAL c_0 f0 c= c< cNUMERAL c_0 f0 cT
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((((marked_list L) N) r) x) |- ((((MEM x') ((map (\i. (((POWER (n_list L)) i) d))) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L)))))) = ((x' IN ((node (hypermap_of_list L)) d)) /\ (~ (x' = d)))) = T)
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cmarked_list f0 f2 f3 f4 c= c= cMEM f5 cmap / cPOWER * part cn_list f0 b0 f1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ cIN f5 * * part cnode chypermap_of_list f0 f1 c~ c= f5 f1 cT
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (x IN (dart (hypermap_of_list L))) |- ((x IN (dart (hypermap_of_list L))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))) = T))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> cIN f1 * part cdart chypermap_of_list f0 c/\ cIN f1 * part cdart chypermap_of_list f0 c= c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 f1 cT
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))), ((MEM d) (list_of_darts L)), ((normal_list L) N) |- (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 c==> cMEM f4 clist_of_darts f0 c==> cnormal_list f0 f1 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f4 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f4 cPOWER * part cnode_map chypermap_of_list f0 b0 f4 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f4 f4
+ ((\x. (((MEM x) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))) x'') |- (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x'') d)))
T c==> * / c/\ cMEM b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST f0 cflatten f1 c= f2 cPOWER * part cn_list f1 b0 f0 f3 c/\ cMEM f3 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f0 cflatten f1 c= f2 cPOWER * part cn_list f1 f3 f0
+ ((e_list_ext L) = (edge_map (hypermap_of_list L))) |- ((edge_map (hypermap_of_list L)) = (e_list_ext L))
T c==> c= * part ce_list_ext f0 * part cedge_map chypermap_of_list f0 c= * part cedge_map chypermap_of_list f0 * part ce_list_ext f0
- ((((POWER (node_map (hypermap_of_list L))) x'') d) = d), (((NUMERAL _0) < (CARD ((node (hypermap_of_list L)) d))) ==> (x'' = (NUMERAL _0))), (x'' < (CARD ((node (hypermap_of_list L)) d))), ((NUMERAL _0) < x'') |- F
T c==> c= cPOWER * part cnode_map chypermap_of_list f0 f1 f2 f2 c==> c==> c< cNUMERAL c_0 cCARD * * part cnode chypermap_of_list f0 f2 c= f1 cNUMERAL c_0 c==> c< f1 cCARD * * part cnode chypermap_of_list f0 f2 c==> c< cNUMERAL c_0 f1 cF
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) r)), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) |- ((~ ((final_list L) r)) /\ (((((s_flag_list L) N) r) x) = T))
T c==> c~ cfinal_list f0 f1 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 c= cs_flag_list f0 f2 f1 f3 cT
+ (uniq L), (good_list L), (good_list_nodes L), ((connected_hypermap (hypermap_of_list L)) /\ ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x)))))))))), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)) |- ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cconnected_hypermap chypermap_of_list f0 c/\ csimple_hypermap chypermap_of_list f0 c/\ cis_no_double_joins chypermap_of_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cis_node_nondegenerate chypermap_of_list f0 ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1
+ |- (!j. (!k. (((FINITE (dart (hypermap_of_list L))) /\ (((permutes (node_map (hypermap_of_list L))) (dart (hypermap_of_list L))) /\ (((CARD ((orbit_map (node_map (hypermap_of_list L))) d)) = k) /\ ((x'' < k) /\ ((j < k) /\ ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) j) d))))))) ==> (x'' = j))))
T c==> c/\ cFINITE * part cdart chypermap_of_list f0 c/\ cpermutes * part cnode_map chypermap_of_list f0 * part cdart chypermap_of_list f0 c/\ c= cCARD * * part corbit_map * part cnode_map chypermap_of_list f0 f1 f2 c/\ c< f3 f2 c/\ c< f4 f2 c= cPOWER * part cnode_map chypermap_of_list f0 f3 f1 cPOWER * part cnode_map chypermap_of_list f0 f4 f1 c= f3 f4
+ (~ (x' = d)), (good_list L), ((MEM d) (list_of_darts L)) |- (((!x. (((\j. ((j < (CARD ((node (hypermap_of_list L)) d))) /\ (x' = (((POWER (node_map (hypermap_of_list L))) j) d)))) x) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (CARD ((node (hypermap_of_list L)) d)))) /\ (x' = (((POWER (n_list L)) x) d)))))) ==> ((?j. ((j < (CARD ((node (hypermap_of_list L)) d))) /\ (x' = (((POWER (node_map (hypermap_of_list L))) j) d)))) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (CARD ((node (hypermap_of_list L)) d)))) /\ (x' = (((POWER (n_list L)) x) d)))))) = ((?j. ((j < (CARD ((node (hypermap_of_list L)) d))) /\ (x' = (((POWER (node_map (hypermap_of_list L))) j) d)))) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (CARD ((node (hypermap_of_list L)) d)))) /\ (x' = (((POWER (n_list L)) x) d))))))
T c==> c~ c= f0 f1 c==> cgood_list f2 c==> cMEM f1 clist_of_darts f2 c= c==> ! c==> * / c/\ c< b1 cCARD * * part cnode chypermap_of_list f2 f1 c= f0 cPOWER * part cnode_map chypermap_of_list f2 b1 f1 b0 c? / c/\ c/\ c< cNUMERAL c_0 b1 c< b1 cCARD * * part cnode chypermap_of_list f2 f1 c= f0 cPOWER * part cn_list f2 b1 f1 c==> c? / c/\ c< b0 cCARD * * part cnode chypermap_of_list f2 f1 c= f0 cPOWER * part cnode_map chypermap_of_list f2 b0 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 cCARD * * part cnode chypermap_of_list f2 f1 c= f0 cPOWER * part cn_list f2 b0 f1 c==> c? / c/\ c< b0 cCARD * * part cnode chypermap_of_list f2 f1 c= f0 cPOWER * part cnode_map chypermap_of_list f2 b0 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 cCARD * * part cnode chypermap_of_list f2 f1 c= f0 cPOWER * part cn_list f2 b0 f1
- (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((int_le (int_of_num (NUMERAL _0))) (int_of_num (CARD ((node (hypermap_of_list L)) d)))) ==> ((~ ((int_lt (int_of_num (NUMERAL _0))) (int_of_num x''))) \/ ((~ ((int_lt (int_of_num x'')) (int_of_num (CARD ((node (hypermap_of_list L)) d))))) \/ (((int_lt (int_of_num (NUMERAL _0))) (int_of_num (CARD ((node (hypermap_of_list L)) d)))) /\ (~ ((int_of_num x'') = (int_of_num (NUMERAL _0))))))))
T c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num cCARD * * part cnode chypermap_of_list f0 f1 c\/ c~ cint_lt cint_of_num cNUMERAL c_0 cint_of_num f2 c\/ c~ cint_lt cint_of_num f2 cint_of_num cCARD * * part cnode chypermap_of_list f0 f1 c/\ cint_lt cint_of_num cNUMERAL c_0 cint_of_num cCARD * * part cnode chypermap_of_list f0 f1 c~ c= cint_of_num f2 cint_of_num cNUMERAL c_0
+ ((n_list_ext L) = (node_map (hypermap_of_list L))) |- ((node_map (hypermap_of_list L)) = (n_list_ext L))
T c==> c= * part cn_list_ext f0 * part cnode_map chypermap_of_list f0 c= * part cnode_map chypermap_of_list f0 * part cn_list_ext f0
- |- ((?j. t) = t)
T c= c? / f0 f0
+ (x' = (((POWER (node_map (hypermap_of_list L))) j) d)) |- ((?x. ((((NUMERAL _0) < x) /\ (x < (CARD ((node (hypermap_of_list L)) d)))) /\ ((((POWER (node_map (hypermap_of_list L))) j) d) = (((POWER (n_list L)) x) d)))) = (?x. ((((NUMERAL _0) < x) /\ (x < (CARD ((node (hypermap_of_list L)) d)))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c==> c= f0 cPOWER * part cnode_map chypermap_of_list f1 f2 f3 c= c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 cCARD * * part cnode chypermap_of_list f1 f3 c= cPOWER * part cnode_map chypermap_of_list f1 f2 f3 cPOWER * part cn_list f1 b0 f3 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 cCARD * * part cnode chypermap_of_list f1 f3 c= f0 cPOWER * part cn_list f1 b0 f3
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((MEM x) r) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cMEM f2 f3 c/\ cMEM f2 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f3 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> c==> cfinal_list f0 f3 cflag_list f0 f4 c==> c==> c~ cfinal_list f0 f3 cs_flag_list f0 f4 f3 f2 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 f1
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f2 clist_of_darts f0 c==> cIN f3 * * part cnode chypermap_of_list f0 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f4 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f5 c==> c==> cfinal_list f0 f4 cflag_list f0 f1 c==> c==> c~ cfinal_list f0 f4 cs_flag_list f0 f1 f4 f5 c==> c~ c= f3 f2 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f2 cflatten f0 c= f3 cPOWER * part cn_list f0 b0 f2
+ |- ((?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))) = (?x. (((MEM x) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c= c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f0 cflatten f1 c= f2 cPOWER * part cn_list f1 b0 f0 c? / c/\ cMEM b0 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b1 cFST f0 cflatten f1 c= f2 cPOWER * part cn_list f1 b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((CARD ((node (hypermap_of_list L)) d)) = (sizel ((filter (MEM (FST d))) L))), ((sizel ((filter (\t. (t = (FST d)))) (flatten L))) = (sizel ((filter (MEM (FST d))) L))) |- (((sizel ((filter (\t. (t = (FST d)))) (flatten L))) = (sizel ((filter (MEM (FST d))) L))) /\ (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))
T c==> c= cCARD * * part cnode chypermap_of_list f0 f1 csizel cfilter * part cMEM cFST f1 f0 c==> c= csizel cfilter / c= b0 cFST f1 cflatten f0 csizel cfilter * part cMEM cFST f1 f0 c/\ c= csizel cfilter / c= b0 cFST f1 cflatten f0 csizel cfilter * part cMEM cFST f1 f0 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 f1
+ (~ (x' = d)), (x' = (((POWER (node_map (hypermap_of_list L))) j) d)), (j = (NUMERAL _0)) |- ((j = (NUMERAL _0)) /\ ((NUMERAL _0) < j))
T c==> c~ c= f0 f1 c==> c= f0 cPOWER * part cnode_map chypermap_of_list f2 f3 f1 c==> c= f3 cNUMERAL c_0 c/\ c= f3 cNUMERAL c_0 c< cNUMERAL c_0 f3
+ |- ((((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))))) ==> F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 cF
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), (((final_list L) r) ==> ((flag_list L) N)), ((MEM d) (list_of_darts L)) |- ((((final_list L) r) ==> ((flag_list L) N)) /\ (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c==> cfinal_list f0 f1 cflag_list f0 f2 c==> cMEM f3 clist_of_darts f0 c/\ c==> cfinal_list f0 f1 cflag_list f0 f2 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f4 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f3 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f3 cPOWER * part cnode_map chypermap_of_list f0 b0 f3 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f3 f3
+ (~ (x' = d)), (good_list L), ((j < (CARD ((node (hypermap_of_list L)) d))) /\ (x' = (((POWER (node_map (hypermap_of_list L))) j) d))), ((MEM d) (list_of_darts L)) |- (((j < (CARD ((node (hypermap_of_list L)) d))) /\ (x' = (((POWER (node_map (hypermap_of_list L))) j) d))) /\ (?x. ((((NUMERAL _0) < x) /\ (x < (CARD ((node (hypermap_of_list L)) d)))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c==> c~ c= f0 f1 c==> cgood_list f2 c==> c/\ c< f3 cCARD * * part cnode chypermap_of_list f2 f1 c= f0 cPOWER * part cnode_map chypermap_of_list f2 f3 f1 c==> cMEM f1 clist_of_darts f2 c/\ c/\ c< f3 cCARD * * part cnode chypermap_of_list f2 f1 c= f0 cPOWER * part cnode_map chypermap_of_list f2 f3 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 cCARD * * part cnode chypermap_of_list f2 f1 c= f0 cPOWER * part cn_list f2 b0 f1
+ (~ (x' = d)), (good_list L), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)) |- ((~ (x' = d)) /\ (?x. ((((NUMERAL _0) < x) /\ (x < (CARD ((node (hypermap_of_list L)) d)))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c==> c~ c= f0 f1 c==> cgood_list f2 c==> cMEM f1 clist_of_darts f2 c==> cIN f0 * * part cnode chypermap_of_list f2 f1 c/\ c~ c= f0 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 cCARD * * part cnode chypermap_of_list f2 f1 c= f0 cPOWER * part cn_list f2 b0 f1
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (list_of_darts L)), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c/\ c==> cfinal_list f0 f1 cflag_list f0 f3 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f4 clist_of_darts f0 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f4 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f4 cPOWER * part cnode_map chypermap_of_list f0 b0 f4 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f4 f4
- ((all (\l. (~ (l = NIL)))) L) |- (((all (\l. (~ (l = NIL)))) L) = T)
T c==> call / c~ c= b0 cNIL f0 c= call / c~ c= b0 cNIL f0 cT
+ |- (((good_list L) /\ ((good_list_nodes L) /\ (((all uniq) L) /\ (((MEM d) (list_of_darts L)) /\ ((FST d) = (FST d)))))) ==> ((CARD ((node (hypermap_of_list L)) d)) = (LENGTH ((facesAt_list L) (FST d)))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ call part cuniq f0 c/\ cMEM f1 clist_of_darts f0 c= cFST f1 cFST f1 c= cCARD * * part cnode chypermap_of_list f0 f1 cLENGTH cfacesAt_list f0 cFST f1
+ (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)) |- (((all uniq) L) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))))
T c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c==> call part cuniq f0 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (list_of_darts L)), ((MEM x) r), ((MEM r) N), (x' IN ((node (hypermap_of_list L)) d)), ((normal_list L) N) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f3 f4 c==> cMEM f4 f1 c==> cIN f5 * * part cnode chypermap_of_list f0 f2 c==> cnormal_list f0 f1 c==> c= cnext_el f4 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> c==> cfinal_list f0 f4 cflag_list f0 f1 c==> c==> c~ cfinal_list f0 f4 cs_flag_list f0 f1 f4 f3 c==> c~ c= f5 f2 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f2 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f2
+ (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10347730) = (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)) |- (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> c==> c~ cfinal_list f0 f2 cs_flag_list f0 f3 f2 f4 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 f1
+ |- ((((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10347730) = (real_of_num (NUMERAL _0))))))) ==> F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 cF
+ (uniq L), ((all uniq) L) |- ((((sizel ((filter (\t. (t = (FST d)))) (flatten L))) = (sizel ((filter (MEM (FST d))) L))) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))) = ((((uniq L) /\ ((all uniq) L)) ==> ((sizel ((filter (\t. (t = (FST d)))) (flatten L))) = (sizel ((filter (MEM (FST d))) L)))) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))))
T c==> cuniq f0 c==> call part cuniq f0 c= c==> c= csizel cfilter / c= b0 cFST f1 cflatten f0 csizel cfilter * part cMEM cFST f1 f0 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 f1 c==> c==> c/\ cuniq f0 call part cuniq f0 c= csizel cfilter / c= b0 cFST f1 cflatten f0 csizel cfilter * part cMEM cFST f1 f0 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) ==> F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 cF
+ (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))))) |- ((((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))))) /\ F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 cF
+ (good_list L), ((CARD ((node (hypermap_of_list L)) d)) = (sizel ((filter (MEM (FST d))) L))), ((sizel ((filter (\t. (t = (FST d)))) (flatten L))) = (sizel ((filter (MEM (FST d))) L))), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)) |- (((sizel ((filter (\t. (t = (FST d)))) (flatten L))) = (sizel ((filter (MEM (FST d))) L))) /\ ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (MEM (FST d))) L)))) /\ (x' = (((POWER (n_list L)) x) d))))))
T c==> cgood_list f0 c==> c= cCARD * * part cnode chypermap_of_list f0 f1 csizel cfilter * part cMEM cFST f1 f0 c==> c= csizel cfilter / c= b0 cFST f1 cflatten f0 csizel cfilter * part cMEM cFST f1 f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c/\ c= csizel cfilter / c= b0 cFST f1 cflatten f0 csizel cfilter * part cMEM cFST f1 f0 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter * part cMEM cFST f1 f0 c= f2 cPOWER * part cn_list f0 b0 f1
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (list_of_darts L)), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f4 clist_of_darts f0 c==> cMEM f3 f2 c==> cMEM f2 f1 c==> cnormal_list f0 f1 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f4 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f4 cPOWER * part cnode_map chypermap_of_list f0 b0 f4 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f4 f4
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347730)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347731)) /\ (((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730)) /\ (((real_le ((real_add (real_of_int _10347730)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731)) /\ (((real_le (real_of_int _10347731)) (real_of_num (NUMERAL _0))) \/ ((real_of_int _10347730) = (real_of_num (NUMERAL _0)))))))))) |- ((((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))))) \/ (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10347730) = (real_of_num (NUMERAL _0))))))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 c\/ creal_le creal_of_int f1 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- (((!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) ==> ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)) = ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x))
T c= c==> ! c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
- ((normal_list L) N) |- (((normal_list L) N) = T)
T c==> cnormal_list f0 f1 c= cnormal_list f0 f1 cT
- (planar_hypermap (hypermap_of_list L)) |- ((planar_hypermap (hypermap_of_list L)) = T)
T c==> cplanar_hypermap chypermap_of_list f0 c= cplanar_hypermap chypermap_of_list f0 cT
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((MEM r) N) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cMEM f2 f3 c/\ cMEM f2 f3 c==> cMEM f4 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> c==> cfinal_list f0 f2 cflag_list f0 f3 c==> c==> c~ cfinal_list f0 f2 cs_flag_list f0 f3 f2 f4 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 f1
+ (good_list L), ((CARD ((node (hypermap_of_list L)) d)) = (sizel ((filter (MEM (FST d))) L))), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)) |- (((sizel ((filter (\t. (t = (FST d)))) (flatten L))) = (sizel ((filter (MEM (FST d))) L))) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (MEM (FST d))) L)))) /\ (x' = (((POWER (n_list L)) x) d))))))
T c==> cgood_list f0 c==> c= cCARD * * part cnode chypermap_of_list f0 f1 csizel cfilter * part cMEM cFST f1 f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c==> c= csizel cfilter / c= b0 cFST f1 cflatten f0 csizel cfilter * part cMEM cFST f1 f0 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter * part cMEM cFST f1 f0 c= f2 cPOWER * part cn_list f0 b0 f1
+ (simple_hypermap (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)) |- ((((good_list L) /\ (good_list_nodes L)) ==> ((simple_hypermap (hypermap_of_list L)) = ((all uniq) L))) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))
T c==> csimple_hypermap chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> c==> c/\ cgood_list f0 cgood_list_nodes f0 c= csimple_hypermap chypermap_of_list f0 call part cuniq f0 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 f1
+ |- (!f. (!x. (!i. (!j. (!k. (((FINITE (dart (hypermap_of_list L))) /\ (((permutes f) (dart (hypermap_of_list L))) /\ (((CARD ((orbit_map f) x)) = k) /\ ((i < k) /\ ((j < k) /\ ((((POWER f) i) x) = (((POWER f) j) x))))))) ==> (i = j)))))))
T c==> c/\ cFINITE * part cdart chypermap_of_list f0 c/\ cpermutes f1 * part cdart chypermap_of_list f0 c/\ c= cCARD * * part corbit_map f1 f2 f3 c/\ c< f4 f3 c/\ c< f5 f3 c= cPOWER f1 f4 f2 cPOWER f1 f5 f2 c= f4 f5
+ (~ (x' = d)), (x' = (((POWER (node_map (hypermap_of_list L))) j) d)) |- ((NUMERAL _0) < j)
T c==> c~ c= f0 f1 c==> c= f0 cPOWER * part cnode_map chypermap_of_list f2 f3 f1 c< cNUMERAL c_0 f3
+ |- (!k. (((FINITE (dart (hypermap_of_list L))) /\ (((permutes (node_map (hypermap_of_list L))) (dart (hypermap_of_list L))) /\ (((CARD ((orbit_map (node_map (hypermap_of_list L))) d)) = k) /\ ((x'' < k) /\ (((NUMERAL _0) < k) /\ ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) (NUMERAL _0)) d))))))) ==> (x'' = (NUMERAL _0))))
T c==> c/\ cFINITE * part cdart chypermap_of_list f0 c/\ cpermutes * part cnode_map chypermap_of_list f0 * part cdart chypermap_of_list f0 c/\ c= cCARD * * part corbit_map * part cnode_map chypermap_of_list f0 f1 f2 c/\ c< f3 f2 c/\ c< cNUMERAL c_0 f2 c= cPOWER * part cnode_map chypermap_of_list f0 f3 f1 cPOWER * part cnode_map chypermap_of_list f0 cNUMERAL c_0 f1 c= f3 cNUMERAL c_0
+ ((MEM d) (list_of_darts L)) |- (((MEM d) (list_of_darts L)) = T)
T c==> cMEM f0 clist_of_darts f1 c= cMEM f0 clist_of_darts f1 cT
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347730)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347731)) /\ (((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730)) /\ (((real_le ((real_add (real_of_int _10347730)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731)) /\ (((real_le (real_of_int _10347731)) (real_of_num (NUMERAL _0))) \/ ((real_of_int _10347730) = (real_of_num (NUMERAL _0)))))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 c\/ creal_le creal_of_int f1 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0
+ (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347727)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (good_list L), (good_list_nodes L), ((x' IN ((node (hypermap_of_list L)) d)) /\ (~ (x' = d))), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)), ((((marked_list L) N) r) x) |- (?x. (((MEM x) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cIN f1 * * part cnode chypermap_of_list f0 f2 c~ c= f1 f2 c==> cMEM f2 clist_of_darts f0 c==> cIN f1 * * part cnode chypermap_of_list f0 f2 c==> cmarked_list f0 f3 f4 f5 c? / c/\ cMEM b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST f2 cflatten f0 c= f1 cPOWER * part cn_list f0 b0 f2
+ (good_list L), ((MEM d) (list_of_darts L)) |- ((((good_list L) /\ ((MEM d) (list_of_darts L))) ==> ((((POWER (n_list L)) x) d) = (((POWER (n_list_ext L)) x) d))) = ((((POWER (n_list L)) x) d) = (((POWER (n_list_ext L)) x) d)))
T c==> cgood_list f0 c==> cMEM f1 clist_of_darts f0 c= c==> c/\ cgood_list f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cn_list f0 f2 f1 cPOWER * part cn_list_ext f0 f2 f1 c= cPOWER * part cn_list f0 f2 f1 cPOWER * part cn_list_ext f0 f2 f1
- (is_node_nondegenerate (hypermap_of_list L)) |- ((is_node_nondegenerate (hypermap_of_list L)) = T)
T c==> cis_node_nondegenerate chypermap_of_list f0 c= cis_node_nondegenerate chypermap_of_list f0 cT
+ (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((((marked_list L) N) r) x) |- (((!x. (((\x. (((MEM x) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))) x) ==> ((x' IN ((node (hypermap_of_list L)) d)) /\ (~ (x' = d))))) ==> ((?x. (((MEM x) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))) ==> ((x' IN ((node (hypermap_of_list L)) d)) /\ (~ (x' = d))))) = ((?x. (((MEM x) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))) ==> ((x' IN ((node (hypermap_of_list L)) d)) /\ (~ (x' = d)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cmarked_list f0 f2 f3 f4 c= c==> ! c==> * / c/\ cMEM b1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f5 cPOWER * part cn_list f0 b1 f1 b0 c/\ cIN f5 * * part cnode chypermap_of_list f0 f1 c~ c= f5 f1 c==> c? / c/\ cMEM b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f1 c/\ cIN f5 * * part cnode chypermap_of_list f0 f1 c~ c= f5 f1 c==> c? / c/\ cMEM b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f1 c/\ cIN f5 * * part cnode chypermap_of_list f0 f1 c~ c= f5 f1
+ (good_list L), ((MEM d) (list_of_darts L)) |- ((((POWER (n_list L)) x) d) = (((POWER (n_list_ext L)) x) d))
T c==> cgood_list f0 c==> cMEM f1 clist_of_darts f0 c= cPOWER * part cn_list f0 f2 f1 cPOWER * part cn_list_ext f0 f2 f1
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cMEM f2 f3 c==> cMEM f3 f4 c==> cnormal_list f0 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f3 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> c==> cfinal_list f0 f3 cflag_list f0 f4 c==> c==> c~ cfinal_list f0 f3 cs_flag_list f0 f4 f3 f2 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 f1
- (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (x IN (dart (hypermap_of_list L))) |- ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x)))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> cIN f1 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 f1
+ |- ((\x. (((orbit_map (node_map H)) x) = ((node H) x))) x)
T * / c= * * part corbit_map * part cnode_map f0 b0 * * part cnode f0 b0 f1
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)) |- ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1
+ (~ (x' = d)), (good_list L), ((j < (CARD ((node (hypermap_of_list L)) d))) /\ (x' = (((POWER (node_map (hypermap_of_list L))) j) d))), ((MEM d) (list_of_darts L)) |- (?x. ((((NUMERAL _0) < x) /\ (x < (CARD ((node (hypermap_of_list L)) d)))) /\ (x' = (((POWER (n_list L)) x) d))))
T c==> c~ c= f0 f1 c==> cgood_list f2 c==> c/\ c< f3 cCARD * * part cnode chypermap_of_list f2 f1 c= f0 cPOWER * part cnode_map chypermap_of_list f2 f3 f1 c==> cMEM f1 clist_of_darts f2 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 cCARD * * part cnode chypermap_of_list f2 f1 c= f0 cPOWER * part cn_list f2 b0 f1
- |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d), ((NUMERAL _0) < x'') |- ((x'' < (CARD ((node (hypermap_of_list L)) d))) ==> ((((NUMERAL _0) < (CARD ((node (hypermap_of_list L)) d))) ==> (x'' = (NUMERAL _0))) ==> F))
T c==> c= cPOWER * part cnode_map chypermap_of_list f0 f1 f2 f2 c==> c< cNUMERAL c_0 f1 c==> c< f1 cCARD * * part cnode chypermap_of_list f0 f2 c==> c==> c< cNUMERAL c_0 cCARD * * part cnode chypermap_of_list f0 f2 c= f1 cNUMERAL c_0 cF
+ |- (FINITE (dart H))
T cFINITE * part cdart f0
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
+ ((node_map (hypermap_of_list L)) = (n_list_ext L)) |- ((n_list_ext L) = (node_map (hypermap_of_list L)))
T c==> c= * part cnode_map chypermap_of_list f0 * part cn_list_ext f0 c= * part cn_list_ext f0 * part cnode_map chypermap_of_list f0
+ (uniq L), ((all uniq) L) |- ((((sizel ((filter (\t. (t = (FST d)))) (flatten L))) = (sizel ((filter (MEM (FST d))) L))) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))) = ((((uniq L) /\ ((all uniq) L)) ==> ((sizel ((filter (\t. (t = (FST d)))) (flatten L))) = (sizel ((filter (MEM (FST d))) L)))) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))))
T c==> cuniq f0 c==> call part cuniq f0 c= c==> c= csizel cfilter / c= b0 cFST f1 cflatten f0 csizel cfilter * part cMEM cFST f1 f0 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1 c==> c==> c/\ cuniq f0 call part cuniq f0 c= csizel cfilter / c= b0 cFST f1 cflatten f0 csizel cfilter * part cMEM cFST f1 f0 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (good_list L), (good_list_nodes L), (x' = (((POWER (n_list L)) x'') d)), ((MEM d) (list_of_darts L)), ((((marked_list L) N) r) x) |- ((good_list L) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f1 cPOWER * part cn_list f0 f2 f3 c==> cMEM f3 clist_of_darts f0 c==> cmarked_list f0 f4 f5 f6 c==> cgood_list f0 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f3 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f3 cPOWER * part cnode_map chypermap_of_list f0 b0 f3 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f3 f3
+ (uniq L), (good_list L), ((CARD ((node (hypermap_of_list L)) d)) = (sizel ((filter (MEM (FST d))) L))), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)), ((all uniq) L) |- (((CARD ((node (hypermap_of_list L)) d)) = (sizel ((filter (MEM (FST d))) L))) /\ ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))))
T c==> cuniq f0 c==> cgood_list f0 c==> c= cCARD * * part cnode chypermap_of_list f0 f1 csizel cfilter * part cMEM cFST f1 f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c==> call part cuniq f0 c/\ c= cCARD * * part cnode chypermap_of_list f0 f1 csizel cfilter * part cMEM cFST f1 f0 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1
+ |- (((!H. (!x. (((orbit_map (node_map H)) x) = ((node H) x)))) ==> ((\H. (!x. (((orbit_map (node_map H)) x) = ((node H) x)))) H)) = ((\H. (!x. (((orbit_map (node_map H)) x) = ((node H) x)))) H))
T c= c==> ! ! c= * * part corbit_map * part cnode_map b0 b1 * * part cnode b0 b1 * / ! c= * * part corbit_map * part cnode_map b0 b1 * * part cnode b0 b1 f0 * / ! c= * * part corbit_map * part cnode_map b0 b1 * * part cnode b0 b1 f0
+ |- ((\H. ((is_restricted H) = ((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))))))))))))) H)
T * / c= cis_restricted b0 c/\ c~ c= * part cdart b0 part cEMPTY c/\ cplanar_hypermap b0 c/\ cplain_hypermap b0 c/\ cconnected_hypermap b0 c/\ csimple_hypermap b0 c/\ cis_no_double_joins b0 c/\ cis_edge_nondegenerate b0 c/\ cis_node_nondegenerate b0 ! c==> cIN b1 * part cdart b0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface b0 b1 f0
+ (good_list L), ((CARD ((node (hypermap_of_list L)) d)) = (sizel ((filter (MEM (FST d))) L))), ((sizel ((filter (\t. (t = (FST d)))) (flatten L))) = (sizel ((filter (MEM (FST d))) L))), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)) |- ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c==> cgood_list f0 c==> c= cCARD * * part cnode chypermap_of_list f0 f1 csizel cfilter * part cMEM cFST f1 f0 c==> c= csizel cfilter / c= b0 cFST f1 cflatten f0 csizel cfilter * part cMEM cFST f1 f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1
+ ((f_list_ext L) = (face_map (hypermap_of_list L))) |- ((face_map (hypermap_of_list L)) = (f_list_ext L))
T c==> c= * part cf_list_ext f0 * part cface_map chypermap_of_list f0 c= * part cface_map chypermap_of_list f0 * part cf_list_ext f0
- (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((((marked_list L) N) r) x) |- ((x' = (((POWER (n_list L)) x'') d)) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cmarked_list f0 f2 f3 f4 c==> c= f5 cPOWER * part cn_list f0 f6 f1 c==> cMEM f6 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f6 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f6 f1 f1
- (~ (x' = d)) |- (((~ (d = x')) ==> ((d = x') = F)) = ((d = x') = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
+ (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10347730) = (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10347730) = (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0
+ (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) |- ((((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) /\ F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 cF
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10347727)) /\ ((((real_le ((real_add (real_of_int _10347727)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) /\ ((real_le (real_of_int _10347727)) (real_of_num (NUMERAL _0))))))) |- ((((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) \/ (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347727)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_of_int f0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- (((!i. (!j. (!k. (((FINITE (dart (hypermap_of_list L))) /\ (((permutes (node_map (hypermap_of_list L))) (dart (hypermap_of_list L))) /\ (((CARD ((orbit_map (node_map (hypermap_of_list L))) d)) = k) /\ ((i < k) /\ ((j < k) /\ ((((POWER (node_map (hypermap_of_list L))) i) d) = (((POWER (node_map (hypermap_of_list L))) j) d))))))) ==> (i = j))))) ==> ((\i. (!j. (!k. (((FINITE (dart (hypermap_of_list L))) /\ (((permutes (node_map (hypermap_of_list L))) (dart (hypermap_of_list L))) /\ (((CARD ((orbit_map (node_map (hypermap_of_list L))) d)) = k) /\ ((i < k) /\ ((j < k) /\ ((((POWER (node_map (hypermap_of_list L))) i) d) = (((POWER (node_map (hypermap_of_list L))) j) d))))))) ==> (i = j))))) x'')) = ((\i. (!j. (!k. (((FINITE (dart (hypermap_of_list L))) /\ (((permutes (node_map (hypermap_of_list L))) (dart (hypermap_of_list L))) /\ (((CARD ((orbit_map (node_map (hypermap_of_list L))) d)) = k) /\ ((i < k) /\ ((j < k) /\ ((((POWER (node_map (hypermap_of_list L))) i) d) = (((POWER (node_map (hypermap_of_list L))) j) d))))))) ==> (i = j))))) x''))
T c= c==> ! ! ! c==> c/\ cFINITE * part cdart chypermap_of_list f0 c/\ cpermutes * part cnode_map chypermap_of_list f0 * part cdart chypermap_of_list f0 c/\ c= cCARD * * part corbit_map * part cnode_map chypermap_of_list f0 f1 b2 c/\ c< b0 b2 c/\ c< b1 b2 c= cPOWER * part cnode_map chypermap_of_list f0 b0 f1 cPOWER * part cnode_map chypermap_of_list f0 b1 f1 c= b0 b1 * / ! ! c==> c/\ cFINITE * part cdart chypermap_of_list f0 c/\ cpermutes * part cnode_map chypermap_of_list f0 * part cdart chypermap_of_list f0 c/\ c= cCARD * * part corbit_map * part cnode_map chypermap_of_list f0 f1 b2 c/\ c< b0 b2 c/\ c< b1 b2 c= cPOWER * part cnode_map chypermap_of_list f0 b0 f1 cPOWER * part cnode_map chypermap_of_list f0 b1 f1 c= b0 b1 f2 * / ! ! c==> c/\ cFINITE * part cdart chypermap_of_list f0 c/\ cpermutes * part cnode_map chypermap_of_list f0 * part cdart chypermap_of_list f0 c/\ c= cCARD * * part corbit_map * part cnode_map chypermap_of_list f0 f1 b2 c/\ c< b0 b2 c/\ c< b1 b2 c= cPOWER * part cnode_map chypermap_of_list f0 b0 f1 cPOWER * part cnode_map chypermap_of_list f0 b1 f1 c= b0 b1 f2
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f3 c==> c==> cfinal_list f0 f2 cflag_list f0 f4 c==> c==> c~ cfinal_list f0 f2 cs_flag_list f0 f4 f2 f3 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 f1
+ |- ((\v. (!L. (((facesAt_list L) v) = ((FILTER (MEM v)) L)))) v)
T * / ! c= cfacesAt_list b1 b0 cFILTER * part cMEM b0 b1 f0
+ (~ (x' = d)) |- ((x' = d) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
+ |- (((!f. (((POWER f) (NUMERAL _0)) = I)) ==> ((\f. (((POWER f) (NUMERAL _0)) = I)) f)) = ((\f. (((POWER f) (NUMERAL _0)) = I)) f))
T c= c==> ! c= * * part cPOWER b0 cNUMERAL c_0 part cI * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0 * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
+ (~ (x' = d)), (good_list L), ((MEM d) (list_of_darts L)), ((\j. ((j < (CARD ((node (hypermap_of_list L)) d))) /\ (x' = (((POWER (node_map (hypermap_of_list L))) j) d)))) j) |- (((\j. ((j < (CARD ((node (hypermap_of_list L)) d))) /\ (x' = (((POWER (node_map (hypermap_of_list L))) j) d)))) j) /\ (?x. ((((NUMERAL _0) < x) /\ (x < (CARD ((node (hypermap_of_list L)) d)))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c==> c~ c= f0 f1 c==> cgood_list f2 c==> cMEM f1 clist_of_darts f2 c==> * / c/\ c< b0 cCARD * * part cnode chypermap_of_list f2 f1 c= f0 cPOWER * part cnode_map chypermap_of_list f2 b0 f1 f3 c/\ * / c/\ c< b0 cCARD * * part cnode chypermap_of_list f2 f1 c= f0 cPOWER * part cnode_map chypermap_of_list f2 b0 f1 f3 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 cCARD * * part cnode chypermap_of_list f2 f1 c= f0 cPOWER * part cn_list f2 b0 f1
- (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((MEM d) (list_of_darts L)) ==> ((x' = (((POWER (n_list L)) x'') d)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> cMEM f4 clist_of_darts f0 c==> c= f5 cPOWER * part cn_list f0 f6 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> cMEM f6 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f4 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f6 f4 cPOWER * part cnode_map chypermap_of_list f0 b0 f4 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f6 f4 f4
+ (x' = (((POWER (n_list L)) x'') d)) |- ((((((POWER (n_list L)) x'') d) IN ((node (hypermap_of_list L)) d)) /\ (~ ((((POWER (n_list L)) x'') d) = d))) = ((x' IN ((node (hypermap_of_list L)) d)) /\ (~ (x' = d))))
T c==> c= f0 cPOWER * part cn_list f1 f2 f3 c= c/\ cIN cPOWER * part cn_list f1 f2 f3 * * part cnode chypermap_of_list f1 f3 c~ c= cPOWER * part cn_list f1 f2 f3 f3 c/\ cIN f0 * * part cnode chypermap_of_list f1 f3 c~ c= f0 f3
+ (x'' < (CARD ((node (hypermap_of_list L)) d))), ((NUMERAL _0) < x'') |- (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))
T c==> c< f0 cCARD * * part cnode chypermap_of_list f1 f2 c==> c< cNUMERAL c_0 f0 c~ c= cPOWER * part cnode_map chypermap_of_list f1 f0 f2 f2
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((MEM r) N), (x' IN ((node (hypermap_of_list L)) d)) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cMEM f2 f3 c==> cIN f4 * * part cnode chypermap_of_list f0 f1 c/\ cMEM f2 f3 c==> cMEM f5 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f5 c==> c==> cfinal_list f0 f2 cflag_list f0 f3 c==> c==> c~ cfinal_list f0 f2 cs_flag_list f0 f3 f2 f5 c==> c~ c= f4 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f4 cPOWER * part cn_list f0 b0 f1
- (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (uniq L), ((CARD ((node (hypermap_of_list L)) d)) = (sizel ((filter (MEM (FST d))) L))), ((all uniq) L) |- (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))
T c==> cuniq f0 c==> c= cCARD * * part cnode chypermap_of_list f0 f1 csizel cfilter * part cMEM cFST f1 f0 c==> call part cuniq f0 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 f1
+ (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- ((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0)))
T c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ (good_list L) |- (((darts_of_list L) = (dart (hypermap_of_list L))) /\ (((e_list_ext L) = (edge_map (hypermap_of_list L))) /\ (((n_list_ext L) = (node_map (hypermap_of_list L))) /\ ((f_list_ext L) = (face_map (hypermap_of_list L))))))
T c==> cgood_list f0 c/\ c= * part cdarts_of_list f0 * part cdart chypermap_of_list f0 c/\ c= * part ce_list_ext f0 * part cedge_map chypermap_of_list f0 c/\ c= * part cn_list_ext f0 * part cnode_map chypermap_of_list f0 c= * part cf_list_ext f0 * part cface_map chypermap_of_list f0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)), ((((marked_list L) N) r) x) |- ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c==> cmarked_list f0 f3 f4 f5 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1
+ (good_list L), (good_list_nodes L), (x' = (((POWER (n_list L)) x'') d)), ((MEM d) (list_of_darts L)), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f1 cPOWER * part cn_list f0 f2 f3 c==> cMEM f3 clist_of_darts f0 c==> cmarked_list f0 f4 f5 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f3 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f3 cPOWER * part cnode_map chypermap_of_list f0 b0 f3 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f3 f3
+ |- ((?x. (((MEM x) ((upt (NUMERAL (BIT1 _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))) = (?x. (((MEM x) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c= c? / c/\ cMEM b0 cupt cNUMERAL cBIT1 c_0 csizel cfilter / c= b1 cFST f0 cflatten f1 c= f2 cPOWER * part cn_list f1 b0 f0 c? / c/\ cMEM b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST f0 cflatten f1 c= f2 cPOWER * part cn_list f1 b0 f0
+ (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)), ((((marked_list L) N) r) x) |- ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c==> cmarked_list f0 f3 f4 f5 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cMEM f2 f3 c==> cMEM f4 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> c==> cfinal_list f0 f2 cflag_list f0 f3 c==> c==> c~ cfinal_list f0 f2 cs_flag_list f0 f3 f2 f4 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 f1
- (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)), ((((marked_list L) N) r) x) |- ((x' IN ((node (hypermap_of_list L)) d)) /\ ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c==> cmarked_list f0 f3 f4 f5 c/\ cIN f2 * * part cnode chypermap_of_list f0 f1 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1
+ (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (uniq L), ((CARD ((node (hypermap_of_list L)) d)) = (sizel ((filter (MEM (FST d))) L))), ((all uniq) L) |- ((((uniq L) /\ ((all uniq) L)) ==> ((sizel ((filter (\t. (t = (FST d)))) (flatten L))) = (sizel ((filter (MEM (FST d))) L)))) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))
T c==> cuniq f0 c==> c= cCARD * * part cnode chypermap_of_list f0 f1 csizel cfilter * part cMEM cFST f1 f0 c==> call part cuniq f0 c==> c==> c/\ cuniq f0 call part cuniq f0 c= csizel cfilter / c= b0 cFST f1 cflatten f0 csizel cfilter * part cMEM cFST f1 f0 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 f1
- (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)), ((((marked_list L) N) r) x) |- ((x' IN ((node (hypermap_of_list L)) d)) /\ ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c==> cmarked_list f0 f3 f4 f5 c/\ cIN f2 * * part cnode chypermap_of_list f0 f1 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1
+ (~ (x' = d)), (good_list L), ((MEM d) (list_of_darts L)) |- ((?j. ((j < (CARD ((node (hypermap_of_list L)) d))) /\ (x' = (((POWER (node_map (hypermap_of_list L))) j) d)))) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (CARD ((node (hypermap_of_list L)) d)))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c==> c~ c= f0 f1 c==> cgood_list f2 c==> cMEM f1 clist_of_darts f2 c==> c? / c/\ c< b0 cCARD * * part cnode chypermap_of_list f2 f1 c= f0 cPOWER * part cnode_map chypermap_of_list f2 b0 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 cCARD * * part cnode chypermap_of_list f2 f1 c= f0 cPOWER * part cn_list f2 b0 f1
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c==> cMEM f3 f4 c==> cMEM f5 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f3 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f5 c==> c==> cfinal_list f0 f3 cflag_list f0 f4 c==> c==> c~ cfinal_list f0 f3 cs_flag_list f0 f4 f3 f5 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ (x' = d)), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)), ((((marked_list L) N) r) x) |- (?x. (((MEM x) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))
T c==> c~ c= f0 f1 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> cMEM f1 clist_of_darts f2 c==> cIN f0 * * part cnode chypermap_of_list f2 f1 c==> cmarked_list f2 f3 f4 f5 c? / c/\ cMEM b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST f1 cflatten f2 c= f0 cPOWER * part cn_list f2 b0 f1
+ |- ((((real_ge x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 f1 creal_of_num cNUMERAL c_0
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (list_of_darts L)), ((MEM x) r), ((MEM r) N), (x' IN ((node (hypermap_of_list L)) d)), ((normal_list L) N) |- ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c/\ c==> cfinal_list f0 f1 cflag_list f0 f3 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f4 clist_of_darts f0 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cIN f5 * * part cnode chypermap_of_list f0 f4 c==> cnormal_list f0 f3 c==> c~ c= f5 f4 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f4 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f4
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)), ((all (\l. (~ (l = NIL)))) L), ((((marked_list L) N) r) x) |- ((uniq L) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f0 f3 f4 f5 c==> cuniq f0 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1
- (x'' < (CARD ((node (hypermap_of_list L)) d))), ((NUMERAL _0) < x'') |- (((((POWER (node_map (hypermap_of_list L))) x'') d) = d) ==> ((((NUMERAL _0) < (CARD ((node (hypermap_of_list L)) d))) ==> (x'' = (NUMERAL _0))) ==> F))
T c==> c< f0 cCARD * * part cnode chypermap_of_list f1 f2 c==> c< cNUMERAL c_0 f0 c==> c= cPOWER * part cnode_map chypermap_of_list f1 f0 f2 f2 c==> c==> c< cNUMERAL c_0 cCARD * * part cnode chypermap_of_list f1 f2 c= f0 cNUMERAL c_0 cF
- (connected_hypermap (hypermap_of_list L)) |- ((connected_hypermap (hypermap_of_list L)) = T)
T c==> cconnected_hypermap chypermap_of_list f0 c= cconnected_hypermap chypermap_of_list f0 cT
+ ((CARD ((node (hypermap_of_list L)) d)) = (sizel ((filter (MEM (FST d))) L))) |- (((sizel ((filter (\t. (t = (FST d)))) (flatten L))) = (sizel ((filter (MEM (FST d))) L))) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))
T c==> c= cCARD * * part cnode chypermap_of_list f0 f1 csizel cfilter * part cMEM cFST f1 f0 c==> c= csizel cfilter / c= b0 cFST f1 cflatten f0 csizel cfilter * part cMEM cFST f1 f0 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 f1
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cMEM f2 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f3 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> c==> cfinal_list f0 f3 cflag_list f0 f4 c==> c==> c~ cfinal_list f0 f3 cs_flag_list f0 f4 f3 f2 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f1 f1
+ (good_list L), (good_list_nodes L), (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x'') d))), ((MEM d) (list_of_darts L)), ((((marked_list L) N) r) x) |- ((x' IN ((node (hypermap_of_list L)) d)) /\ (~ (x' = d)))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cMEM f1 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f2 cflatten f0 c= f3 cPOWER * part cn_list f0 f1 f2 c==> cMEM f2 clist_of_darts f0 c==> cmarked_list f0 f4 f5 f6 c/\ cIN f3 * * part cnode chypermap_of_list f0 f2 c~ c= f3 f2
+ (x' IN ((node (hypermap_of_list L)) d)) |- (((?j. ((j < (CARD ((node (hypermap_of_list L)) d))) /\ (x' = (((POWER (node_map (hypermap_of_list L))) j) d)))) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (CARD ((node (hypermap_of_list L)) d)))) /\ (x' = (((POWER (n_list L)) x) d))))) = (((x' IN ((node (hypermap_of_list L)) d)) ==> (?j. ((j < (CARD ((node (hypermap_of_list L)) d))) /\ (x' = (((POWER (node_map (hypermap_of_list L))) j) d))))) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (CARD ((node (hypermap_of_list L)) d)))) /\ (x' = (((POWER (n_list L)) x) d))))))
T c==> cIN f0 * * part cnode chypermap_of_list f1 f2 c= c==> c? / c/\ c< b0 cCARD * * part cnode chypermap_of_list f1 f2 c= f0 cPOWER * part cnode_map chypermap_of_list f1 b0 f2 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 cCARD * * part cnode chypermap_of_list f1 f2 c= f0 cPOWER * part cn_list f1 b0 f2 c==> c==> cIN f0 * * part cnode chypermap_of_list f1 f2 c? / c/\ c< b0 cCARD * * part cnode chypermap_of_list f1 f2 c= f0 cPOWER * part cnode_map chypermap_of_list f1 b0 f2 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 cCARD * * part cnode chypermap_of_list f1 f2 c= f0 cPOWER * part cn_list f1 b0 f2
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)), ((((marked_list L) N) r) x) |- ((good_list L) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c==> cmarked_list f0 f3 f4 f5 c==> cgood_list f0 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1
+ (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347727)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_add (real_of_int _10347727)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))), ((MEM d) (list_of_darts L)) |- (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 c==> cMEM f4 clist_of_darts f0 c==> cMEM f5 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f4 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f5 f4 cPOWER * part cnode_map chypermap_of_list f0 b0 f4 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f5 f4 f4
+ ((CARD ((node (hypermap_of_list L)) d)) = (sizel ((filter (MEM (FST d))) L))) |- (((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (CARD ((node (hypermap_of_list L)) d)))) /\ (x' = (((POWER (n_list L)) x) d))))) = ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (MEM (FST d))) L)))) /\ (x' = (((POWER (n_list L)) x) d))))))
T c==> c= cCARD * * part cnode chypermap_of_list f0 f1 csizel cfilter * part cMEM cFST f1 f0 c= c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 cCARD * * part cnode chypermap_of_list f0 f1 c= f2 cPOWER * part cn_list f0 b0 f1 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter * part cMEM cFST f1 f0 c= f2 cPOWER * part cn_list f0 b0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (x' = (((POWER (n_list L)) x'') d)), ((MEM d) (list_of_darts L)), ((all (\l. (~ (l = NIL)))) L), ((((marked_list L) N) r) x) |- (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f1 cPOWER * part cn_list f0 f2 f3 c==> cMEM f3 clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f0 f4 f5 f6 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f3 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f3 cPOWER * part cnode_map chypermap_of_list f0 b0 f3 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f3 f3
+ (is_restricted (hypermap_of_list L)), (uniq L), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) (list_of_darts L)), ((MEM x) r), ((MEM r) N), (x' IN ((node (hypermap_of_list L)) d)), ((normal_list L) N) |- ((((final_list L) r) ==> ((flag_list L) N)) ==> (((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f4 clist_of_darts f0 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cIN f5 * * part cnode chypermap_of_list f0 f4 c==> cnormal_list f0 f3 c==> c==> cfinal_list f0 f1 cflag_list f0 f3 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f2 c==> c~ c= f5 f4 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f4 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f4
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), (x' = (((POWER (n_list L)) x'') d)), ((MEM d) (list_of_darts L)), ((all (\l. (~ (l = NIL)))) L), ((((marked_list L) N) r) x) |- (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f1 cPOWER * part cn_list f0 f2 f3 c==> cMEM f3 clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f0 f4 f5 f6 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f3 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f3 cPOWER * part cnode_map chypermap_of_list f0 b0 f3 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f3 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((((marked_list L) N) r) x) |- ((x' IN ((node (hypermap_of_list L)) d)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cmarked_list f0 f2 f3 f4 c==> cIN f5 * * part cnode chypermap_of_list f0 f1 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c~ c= f5 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f1
- (good_list L) |- ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> (((MEM d) (list_of_darts L)) ==> ((x' IN ((node (hypermap_of_list L)) d)) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> cMEM f4 clist_of_darts f0 c==> cIN f5 * * part cnode chypermap_of_list f0 f4 c==> c~ c= f5 f4 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f4 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f4
- |- (T = (((NUMERAL _0) < x'') ==> ((x'' < (CARD ((node (hypermap_of_list L)) d))) ==> ((((NUMERAL _0) < (CARD ((node (hypermap_of_list L)) d))) ==> (x'' = (NUMERAL _0))) ==> F))))
T c= cT c==> c< cNUMERAL c_0 f0 c==> c< f0 cCARD * * part cnode chypermap_of_list f1 f2 c==> c==> c< cNUMERAL c_0 cCARD * * part cnode chypermap_of_list f1 f2 c= f0 cNUMERAL c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (good_list L) |- ((good_list L) /\ ((darts_of_list L) = (dart (hypermap_of_list L))))
T c==> cgood_list f0 c/\ cgood_list f0 c= * part cdarts_of_list f0 * part cdart chypermap_of_list f0
- (d = x') |- (x' = d)
T c==> c= f0 f1 c= f1 f0
- (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ (((MEM d) (list_of_darts L)) ==> ((x' = (((POWER (n_list L)) x'') d)) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c/\ cmarked_list f0 f1 f2 f3 c==> cMEM f4 clist_of_darts f0 c==> c= f5 cPOWER * part cn_list f0 f6 f4 c==> cMEM f6 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f4 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f6 f4 cPOWER * part cnode_map chypermap_of_list f0 b0 f4 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f6 f4 f4
- |- ((real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347727)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) |- (((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x)))) = T)
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c= c==> cIN f1 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 f1 cT
- |- (((POWER f) (SUC n)) = (((POWER f) n) o f))
T c= * * part cPOWER f0 cSUC f1 * * part co * * part cPOWER f0 f1 f0
- (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) ==> ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n)) = ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n))
T c= c==> ! c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1 * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), ((MEM d) (list_of_darts L)) |- ((MEM ((SND d) , (FST d))) (list_of_darts L))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0
- |- (((!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) ==> ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0)) = ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0))
T c= c==> ! c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1 * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1
- |- (((real_ge ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((dart (hypermap_of_list L)) = EMPTY) |- (EMPTY = (dart (hypermap_of_list L)))
T c==> c= * part cdart chypermap_of_list f0 part cEMPTY c= part cEMPTY * part cdart chypermap_of_list f0
- (((final_list L) r) ==> ((flag_list L) N)) |- ((((final_list L) r) ==> ((flag_list L) N)) = T)
T c==> c==> cfinal_list f0 f1 cflag_list f0 f2 c= c==> cfinal_list f0 f1 cflag_list f0 f2 cT
- (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ (((MEM d) (list_of_darts L)) ==> ((x' IN ((node (hypermap_of_list L)) d)) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c/\ cmarked_list f0 f1 f2 f3 c==> cMEM f4 clist_of_darts f0 c==> cIN f5 * * part cnode chypermap_of_list f0 f4 c==> c~ c= f5 f4 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f4 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f4
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((\d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) d)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 * / c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 f1
- (~ (x' = d)), (x' = (((POWER (node_map (hypermap_of_list L))) j) d)), (j = (NUMERAL _0)) |- ((j = (NUMERAL _0)) /\ ((NUMERAL _0) < (NUMERAL _0)))
T c==> c~ c= f0 f1 c==> c= f0 cPOWER * part cnode_map chypermap_of_list f2 f3 f1 c==> c= f3 cNUMERAL c_0 c/\ c= f3 cNUMERAL c_0 c< cNUMERAL c_0 cNUMERAL c_0
- (good_list L), (good_list_nodes L) |- ((good_list_nodes L) /\ (((((marked_list L) N) r) x) ==> (((MEM d) (list_of_darts L)) ==> ((x' IN ((node (hypermap_of_list L)) d)) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c/\ cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> cMEM f4 clist_of_darts f0 c==> cIN f5 * * part cnode chypermap_of_list f0 f4 c==> c~ c= f5 f4 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f4 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f4
- (~ ((final_list L) r)), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) |- ((((s_flag_list L) N) r) x)
T c==> c~ cfinal_list f0 f1 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 cs_flag_list f0 f2 f1 f3
- |- (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((good_list L) ==> ((f_list_ext L) = (face_map (hypermap_of_list L))))
T c==> cgood_list f0 c= * part cf_list_ext f0 * part cface_map chypermap_of_list f0
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- (~ (EMPTY = (dart (hypermap_of_list L))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c~ c= part cEMPTY * part cdart chypermap_of_list f0
- (plain_hypermap (hypermap_of_list L)) |- ((plain_hypermap (hypermap_of_list L)) = T)
T c==> cplain_hypermap chypermap_of_list f0 c= cplain_hypermap chypermap_of_list f0 cT
- (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))))) |- ((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- (?x. (((MEM x) ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((((marked_list L) N) r) x) |- ((x' IN ((node (hypermap_of_list L)) d)) /\ (~ (x' = d)))
T c==> c? / c/\ cMEM b0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b1 cFST f0 cflatten f1 c= f2 cPOWER * part cn_list f1 b0 f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> cMEM f0 clist_of_darts f1 c==> cmarked_list f1 f3 f4 f5 c/\ cIN f2 * * part cnode chypermap_of_list f1 f0 c~ c= f2 f0
- (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- ((((POWER (node_map (hypermap_of_list L))) x'') d) = d), (x'' < (CARD ((node (hypermap_of_list L)) d))), ((NUMERAL _0) < x'') |- (((((POWER (node_map (hypermap_of_list L))) x'') d) = d) /\ ((((NUMERAL _0) < (CARD ((node (hypermap_of_list L)) d))) ==> (x'' = (NUMERAL _0))) ==> F))
T c==> c= cPOWER * part cnode_map chypermap_of_list f0 f1 f2 f2 c==> c< f1 cCARD * * part cnode chypermap_of_list f0 f2 c==> c< cNUMERAL c_0 f1 c/\ c= cPOWER * part cnode_map chypermap_of_list f0 f1 f2 f2 c==> c==> c< cNUMERAL c_0 cCARD * * part cnode chypermap_of_list f0 f2 c= f1 cNUMERAL c_0 cF
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) ==> ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s)) = ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s))
T c= c==> ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0 * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((good_list L) ==> ((darts_of_list L) = (dart (hypermap_of_list L))))
T c==> cgood_list f0 c= * part cdarts_of_list f0 * part cdart chypermap_of_list f0
- |- ((((NUMERAL _0) < x'') ==> ((x'' < (CARD ((node (hypermap_of_list L)) d))) ==> ((((NUMERAL _0) < (CARD ((node (hypermap_of_list L)) d))) ==> (x'' = (NUMERAL _0))) ==> F))) = T)
T c= c==> c< cNUMERAL c_0 f0 c==> c< f0 cCARD * * part cnode chypermap_of_list f1 f2 c==> c==> c< cNUMERAL c_0 cCARD * * part cnode chypermap_of_list f1 f2 c= f0 cNUMERAL c_0 cF cT
- |- (F = (~ T))
T c= cF c~ cT
- (good_list L), (good_list_nodes L), (x' = (((POWER (n_list L)) x'') d)), ((MEM d) (list_of_darts L)), ((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))), ((((marked_list L) N) r) x) |- ((x' = (((POWER (n_list L)) x'') d)) /\ ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f1 cPOWER * part cn_list f0 f2 f3 c==> cMEM f3 clist_of_darts f0 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f3 cflatten f0 c==> cmarked_list f0 f4 f5 f6 c/\ c= f1 cPOWER * part cn_list f0 f2 f3 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f3 cPOWER * part cnode_map chypermap_of_list f0 b0 f3 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f3 f3
- (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10347727))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- (uniq (list_of_darts L)) |- ((uniq (list_of_darts L)) = T)
T c==> cuniq clist_of_darts f0 c= cuniq clist_of_darts f0 cT
- |- (((!d. (!L. (((uniq L) /\ ((all uniq) L)) ==> ((sizel ((filter (\t. (t = (FST d)))) (flatten L))) = (sizel ((filter (MEM (FST d))) L)))))) ==> ((\d. (!L. (((uniq L) /\ ((all uniq) L)) ==> ((sizel ((filter (\t. (t = (FST d)))) (flatten L))) = (sizel ((filter (MEM (FST d))) L)))))) d)) = ((\d. (!L. (((uniq L) /\ ((all uniq) L)) ==> ((sizel ((filter (\t. (t = (FST d)))) (flatten L))) = (sizel ((filter (MEM (FST d))) L)))))) d))
T c= c==> ! ! c==> c/\ cuniq b1 call part cuniq b1 c= csizel cfilter / c= b2 cFST b0 cflatten b1 csizel cfilter * part cMEM cFST b0 b1 * / ! c==> c/\ cuniq b1 call part cuniq b1 c= csizel cfilter / c= b2 cFST b0 cflatten b1 csizel cfilter * part cMEM cFST b0 b1 f0 * / ! c==> c/\ cuniq b1 call part cuniq b1 c= csizel cfilter / c= b2 cFST b0 cflatten b1 csizel cfilter * part cMEM cFST b0 b1 f0
- (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10347727))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) |- ((\x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) x)
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 * / c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 f1
- (((final_list L) r) ==> ((flag_list L) N)), ((final_list L) r) |- (((final_list L) r) /\ (((flag_list L) N) = T))
T c==> c==> cfinal_list f0 f1 cflag_list f0 f2 c==> cfinal_list f0 f1 c/\ cfinal_list f0 f1 c= cflag_list f0 f2 cT
- (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((~ (~ F)) ==> F) ==> (~ F)) = (~ F))
T c= c==> c==> c~ c~ cF cF c~ cF c~ cF
- |- (((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))) = T)
T c= c==> c~ c= cNIL f0 c= cLAST f0 clast f1 f0 cT
- ((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) |- (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) = T)
T c==> cMEM f0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f2 c= cMEM f0 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f2 cT
- (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))), ((((marked_list L) N) r) x) |- ((x' = (((POWER (n_list L)) x'') d)) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c==> cmarked_list f0 f3 f4 f5 c==> c= f6 cPOWER * part cn_list f0 f2 f1 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f1 f1
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- (good_list L), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)) |- (((CARD ((node (hypermap_of_list L)) d)) = (sizel ((filter (MEM (FST d))) L))) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (MEM (FST d))) L)))) /\ (x' = (((POWER (n_list L)) x) d))))))
T c==> cgood_list f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c==> c= cCARD * * part cnode chypermap_of_list f0 f1 csizel cfilter * part cMEM cFST f1 f0 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter * part cMEM cFST f1 f0 c= f2 cPOWER * part cn_list f0 b0 f1
- |- ((\L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))) L)
T * / c= cMEM f0 clist_of_darts b0 cMEM f0 cfind_face b0 f0 f1
- (~ (x' = d)) |- (~ (d = x'))
T c==> c~ c= f0 f1 c~ c= f1 f0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ T) = F)
T c= c~ cT cF
- (good_list L), ((CARD ((node (hypermap_of_list L)) d)) = (sizel ((filter (MEM (FST d))) L))), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)) |- (((CARD ((node (hypermap_of_list L)) d)) = (sizel ((filter (MEM (FST d))) L))) /\ ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (MEM (FST d))) L)))) /\ (x' = (((POWER (n_list L)) x) d))))))
T c==> cgood_list f0 c==> c= cCARD * * part cnode chypermap_of_list f0 f1 csizel cfilter * part cMEM cFST f1 f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c/\ c= cCARD * * part cnode chypermap_of_list f0 f1 csizel cfilter * part cMEM cFST f1 f0 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter * part cMEM cFST f1 f0 c= f2 cPOWER * part cn_list f0 b0 f1
- |- ((!L. (((uniq L) /\ ((all uniq) L)) ==> ((sizel ((filter (\t. (t = (FST d)))) (flatten L))) = (sizel ((filter (MEM (FST d))) L))))) = T)
T c= ! c==> c/\ cuniq b0 call part cuniq b0 c= csizel cfilter / c= b1 cFST f0 cflatten b0 csizel cfilter * part cMEM cFST f0 b0 cT
- (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)), ((all (\l. (~ (l = NIL)))) L), ((((marked_list L) N) r) x) |- ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f0 f3 f4 f5 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1
- |- (((!d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d))))) ==> ((\d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d))))) d)) = ((\d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d))))) d))
T c= c==> ! ! c= cMEM b0 clist_of_darts b1 cMEM b0 cfind_face b1 b0 * / ! c= cMEM b0 clist_of_darts b1 cMEM b0 cfind_face b1 b0 f0 * / ! c= cMEM b0 clist_of_darts b1 cMEM b0 cfind_face b1 b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (x' = d)) |- ((d = x') = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((((marked_list L) N) r) x) |- ((x' IN ((node (hypermap_of_list L)) d)) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cmarked_list f0 f2 f3 f4 c==> cIN f5 * * part cnode chypermap_of_list f0 f1 c==> c~ c= f5 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f1
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) |- ((~ ((final_list L) r)) ==> (((((s_flag_list L) N) r) x) = T))
T c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c==> c~ cfinal_list f0 f1 c= cs_flag_list f0 f2 f1 f3 cT
- ((good_list L) /\ ((MEM d) (list_of_darts L))) |- (((good_list L) /\ ((MEM d) (list_of_darts L))) /\ ((((POWER (n_list L)) n) d) = (((POWER (n_list_ext L)) n) d)))
T c==> c/\ cgood_list f0 cMEM f1 clist_of_darts f0 c/\ c/\ cgood_list f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cn_list f0 f2 f1 cPOWER * part cn_list_ext f0 f2 f1
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (?j. ((j < (CARD ((node (hypermap_of_list L)) d))) /\ (x' = (((POWER (node_map (hypermap_of_list L))) j) d)))), (~ (x' = d)), (good_list L), ((MEM d) (list_of_darts L)) |- ((?j. ((j < (CARD ((node (hypermap_of_list L)) d))) /\ (x' = (((POWER (node_map (hypermap_of_list L))) j) d)))) /\ (?x. ((((NUMERAL _0) < x) /\ (x < (CARD ((node (hypermap_of_list L)) d)))) /\ (x' = (((POWER (n_list L)) x) d)))))
T c==> c? / c/\ c< b0 cCARD * * part cnode chypermap_of_list f0 f1 c= f2 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c==> c~ c= f2 f1 c==> cgood_list f0 c==> cMEM f1 clist_of_darts f0 c/\ c? / c/\ c< b0 cCARD * * part cnode chypermap_of_list f0 f1 c= f2 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 cCARD * * part cnode chypermap_of_list f0 f1 c= f2 cPOWER * part cn_list f0 b0 f1
- |- ((\g. ((f o g) = (\x. (f (g x))))) g)
T * / c= * * part co f0 b0 / * f0 * b0 b1 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\d. (!L. (((uniq L) /\ ((all uniq) L)) ==> ((sizel ((filter (\t. (t = (FST d)))) (flatten L))) = (sizel ((filter (MEM (FST d))) L)))))) d)
T * / ! c==> c/\ cuniq b1 call part cuniq b1 c= csizel cfilter / c= b2 cFST b0 cflatten b1 csizel cfilter * part cMEM cFST b0 b1 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), (x' IN ((node (hypermap_of_list L)) d)), ((all (\l. (~ (l = NIL)))) L), ((((marked_list L) N) r) x) |- ((uniq L) /\ ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cIN f2 * * part cnode chypermap_of_list f0 f1 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f0 f3 f4 f5 c/\ cuniq f0 c==> c~ c= f2 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f2 cPOWER * part cn_list f0 b0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((APPEND = cat) /\ (ALL = all))
T c/\ c= part cAPPEND part ccat c= part cALL part call
- (is_edge_nondegenerate (hypermap_of_list L)) |- ((is_edge_nondegenerate (hypermap_of_list L)) = T)
T c==> cis_edge_nondegenerate chypermap_of_list f0 c= cis_edge_nondegenerate chypermap_of_list f0 cT
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- (((dart (hypermap_of_list L)) = EMPTY) = F)
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c= c= * part cdart chypermap_of_list f0 part cEMPTY cF
- (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10347730) = (real_of_num (NUMERAL _0))))))) |- ((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (T = ((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))))
T c= cT c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347731))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c= cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 cT
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((POWER (node_map (hypermap_of_list L))) x'') d) = d), (((NUMERAL _0) < (CARD ((node (hypermap_of_list L)) d))) ==> (x'' = (NUMERAL _0))), (x'' < (CARD ((node (hypermap_of_list L)) d))), ((NUMERAL _0) < x'') |- ((((NUMERAL _0) < (CARD ((node (hypermap_of_list L)) d))) ==> (x'' = (NUMERAL _0))) /\ F)
T c==> c= cPOWER * part cnode_map chypermap_of_list f0 f1 f2 f2 c==> c==> c< cNUMERAL c_0 cCARD * * part cnode chypermap_of_list f0 f2 c= f1 cNUMERAL c_0 c==> c< f1 cCARD * * part cnode chypermap_of_list f0 f2 c==> c< cNUMERAL c_0 f1 c/\ c==> c< cNUMERAL c_0 cCARD * * part cnode chypermap_of_list f0 f2 c= f1 cNUMERAL c_0 cF
- |- (((!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))) ==> ((\L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))) L)) = ((\L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))) L))
T c= c==> ! c= cMEM f0 clist_of_darts b0 cMEM f0 cfind_face b0 f0 * / c= cMEM f0 clist_of_darts b0 cMEM f0 cfind_face b0 f0 f1 * / c= cMEM f0 clist_of_darts b0 cMEM f0 cfind_face b0 f0 f1
- |- (((!g. ((f o g) = (\x. (f (g x))))) ==> ((\g. ((f o g) = (\x. (f (g x))))) g)) = ((\g. ((f o g) = (\x. (f (g x))))) g))
T c= c==> ! c= * * part co f0 b0 / * f0 * b0 b1 * / c= * * part co f0 b0 / * f0 * b0 b1 f1 * / c= * * part co f0 b0 / * f0 * b0 b1 f1
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 cT
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (good_list L), (good_list_nodes L), (x' = (((POWER (n_list L)) x'') d)), ((MEM d) (list_of_darts L)), ((((marked_list L) N) r) x) |- ((x' = (((POWER (n_list L)) x'') d)) /\ (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f1 cPOWER * part cn_list f0 f2 f3 c==> cMEM f3 clist_of_darts f0 c==> cmarked_list f0 f4 f5 f6 c/\ c= f1 cPOWER * part cn_list f0 f2 f3 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f3 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f3 cPOWER * part cnode_map chypermap_of_list f0 b0 f3 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f3 f3
- (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347727)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10347727)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (good_list L) |- ((good_list L) /\ ((f_list_ext L) = (face_map (hypermap_of_list L))))
T c==> cgood_list f0 c/\ cgood_list f0 c= * part cf_list_ext f0 * part cface_map chypermap_of_list f0
- (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((((marked_list L) N) r) x) |- (((MEM d) (list_of_darts L)) /\ ((x' IN ((node (hypermap_of_list L)) d)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cmarked_list f0 f2 f3 f4 c/\ cMEM f1 clist_of_darts f0 c==> cIN f5 * * part cnode chypermap_of_list f0 f1 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> c~ c= f5 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f1
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) |- ((x IN (dart (hypermap_of_list L))) ==> (((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))) = T))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> cIN f1 * part cdart chypermap_of_list f0 c= c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 f1 cT
- (good_list L) |- (T = (good_list L))
T c==> cgood_list f0 c= cT cgood_list f0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- (((MEM d) (list_of_darts L)) ==> (((MEM ((SND d) , (FST d))) (list_of_darts L)) = T))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c= cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
- (~ ((final_list L) r)), ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)) |- (((((s_flag_list L) N) r) x) = T)
T c==> c~ cfinal_list f0 f1 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c= cs_flag_list f0 f2 f1 f3 cT
- (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10347730) = (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((((marked_list L) N) r) x) |- (((MEM d) (list_of_darts L)) /\ ((x' = (((POWER (n_list L)) x'') d)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq L) ==> (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cmarked_list f0 f2 f3 f4 c/\ cMEM f1 clist_of_darts f0 c==> c= f5 cPOWER * part cn_list f0 f6 f1 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f0 c==> cMEM f6 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f1 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f6 f1 cPOWER * part cnode_map chypermap_of_list f0 b0 f1 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f6 f1 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (uniq L), (good_list L), (good_list_nodes L), (x' = (((POWER (n_list L)) x'') d)), ((MEM d) (list_of_darts L)), ((all (\l. (~ (l = NIL)))) L), ((((marked_list L) N) r) x) |- ((uniq L) /\ (((MEM x'') ((upt (SUC (NUMERAL _0))) (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) ==> ((?n. ((((POWER (node_map (hypermap_of_list L))) x'') d) = (((POWER (node_map (hypermap_of_list L))) n) d))) /\ (~ ((((POWER (node_map (hypermap_of_list L))) x'') d) = d)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cuniq f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f1 cPOWER * part cn_list f0 f2 f3 c==> cMEM f3 clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f0 f4 f5 f6 c/\ cuniq f0 c==> cMEM f2 cupt cSUC cNUMERAL c_0 csizel cfilter / c= b0 cFST f3 cflatten f0 c/\ c? / c= cPOWER * part cnode_map chypermap_of_list f0 f2 f3 cPOWER * part cnode_map chypermap_of_list f0 b0 f3 c~ c= cPOWER * part cnode_map chypermap_of_list f0 f2 f3 f3
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10347727)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347727)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347727))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10347727)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10347727)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10347727)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))
T c= cMEM f0 clist_of_darts f1 cMEM f0 cfind_face f1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (~ (~ T))
T c~ c~ cT
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), ((MEM d) (list_of_darts L)) |- (((MEM d) (list_of_darts L)) /\ (((MEM ((SND d) , (FST d))) (list_of_darts L)) = T))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c/\ cMEM f1 clist_of_darts f0 c= cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
- |- ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n)
T * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- (good_list L) |- ((good_list L) /\ ((e_list_ext L) = (edge_map (hypermap_of_list L))))
T c==> cgood_list f0 c/\ cgood_list f0 c= * part ce_list_ext f0 * part cedge_map chypermap_of_list f0
- (EMPTY = (dart (hypermap_of_list L))) |- ((dart (hypermap_of_list L)) = EMPTY)
T c==> c= part cEMPTY * part cdart chypermap_of_list f0 c= * part cdart chypermap_of_list f0 part cEMPTY
- (((real_ge (real_of_int _10347730)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10347731)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10347730))) ((real_add (real_of_int _10347731)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10347730) = (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10347730)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((MEM x) r) |- (((MEM x) r) = T)
T c==> cMEM f0 f1 c= cMEM f0 f1 cT
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (good_list L), (good_list_nodes L), ((MEM d) (list_of_darts L)), ((((marked_list L) N) r) x) |- (((MEM d) (list_of_darts L)) /\ ((x' IN ((node (hypermap_of_list L)) d)) ==> ((~ (x' = d)) ==> (?x. ((((NUMERAL _0) < x) /\ (x < (sizel ((filter (\t. (t = (FST d)))) (flatten L))))) /\ (x' = (((POWER (n_list L)) x) d)))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 clist_of_darts f0 c==> cmarked_list f0 f2 f3 f4 c/\ cMEM f1 clist_of_darts f0 c==> cIN f5 * * part cnode chypermap_of_list f0 f1 c==> c~ c= f5 f1 c? / c/\ c/\ c< cNUMERAL c_0 b0 c< b0 csizel cfilter / c= b1 cFST f1 cflatten f0 c= f5 cPOWER * part cn_list f0 b0 f1
- |- ((f o g) = (\x. (f (g x))))
T c= * * part co f0 f1 / * f0 * f1 b0
- |- ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s)
T * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0
