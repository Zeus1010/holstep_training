N Basics.DIMINDEX_5
C |- ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))
T c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0
D TRUTH
A |- T
T cT
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D FORALL_BOOL_THM
A |- ((!b. (P b)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D DIMINDEX_UNIQUE
A |- ((UNIV HAS_SIZE n) ==> ((dimindex UNIV) = n))
T c==> cHAS_SIZE part cUNIV f0 c= cdimindex part cUNIV f0
D HAS_SIZE_2
A |- (UNIV HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))
T cHAS_SIZE part cUNIV cNUMERAL cBIT0 cBIT1 c_0
D HAS_SIZE_3
A |- (UNIV HAS_SIZE (NUMERAL (BIT1 (BIT1 _0))))
T cHAS_SIZE part cUNIV cNUMERAL cBIT1 cBIT1 c_0
D Basics.SUM_HAS_SIZE
A |- (!a. (!b. (((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) ==> (UNIV HAS_SIZE (a + b)))))
T c==> c/\ cHAS_SIZE part cUNIV f0 cHAS_SIZE part cUNIV f1 cHAS_SIZE part cUNIV c+ f0 f1
+ |- ((\a. (!b. ((((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) ==> (P (UNIV HAS_SIZE (a + b)))))) a)
T * / ! c==> c/\ c/\ cHAS_SIZE part cUNIV b0 cHAS_SIZE part cUNIV b1 * f0 cT * f0 cHAS_SIZE part cUNIV c+ b0 b1 f1
+ |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) = (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))))
T c= c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
+ (!a. (!b. (!P. ((((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) ==> (P (UNIV HAS_SIZE (a + b))))))) |- ((!a. (!b. (!P. ((((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) ==> (P (UNIV HAS_SIZE (a + b))))))) /\ (!P. (!a. (!b. ((((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) ==> (P (UNIV HAS_SIZE (a + b))))))))
T c==> ! ! ! c==> c/\ c/\ cHAS_SIZE part cUNIV b0 cHAS_SIZE part cUNIV b1 * b2 cT * b2 cHAS_SIZE part cUNIV c+ b0 b1 c/\ ! ! ! c==> c/\ c/\ cHAS_SIZE part cUNIV b0 cHAS_SIZE part cUNIV b1 * b2 cT * b2 cHAS_SIZE part cUNIV c+ b0 b1 ! ! ! c==> c/\ c/\ cHAS_SIZE part cUNIV b1 cHAS_SIZE part cUNIV b2 * b0 cT * b0 cHAS_SIZE part cUNIV c+ b1 b2
- (UNIV HAS_SIZE n) |- (((UNIV HAS_SIZE n) ==> ((dimindex UNIV) = n)) ==> ((dimindex UNIV) = n))
T c==> cHAS_SIZE part cUNIV f0 c==> c==> cHAS_SIZE part cUNIV f0 c= cdimindex part cUNIV f0 c= cdimindex part cUNIV f0
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (~ F), (~ (P b)), (P c), (b = c) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ cF cF
+ |- (((NUMERAL (BIT0 (BIT1 _0))) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))
T c= c+ cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ |- ((\c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))) c)
T * / c==> c==> f0 c= f1 b0 ! c==> c/\ f0 * b1 b0 * b1 f1 f2
+ (P c), (b = c) |- (P b)
T c==> * f0 f1 c==> c= f2 f1 * f0 f2
+ |- (((b = c) ==> (!P. ((P c) ==> (P b)))) = T)
T c= c==> c= f0 f1 ! c==> * b0 f1 * b0 f0 cT
+ |- ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. v))
T * / ! c= * / * b0 b2 b1 * b0 b1 / b0
- (!a. (!b. (!P. ((((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) ==> (P (UNIV HAS_SIZE (a + b))))))), (((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) |- ((!a. (!b. (!P. ((((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) ==> (P (UNIV HAS_SIZE (a + b))))))) /\ (P (UNIV HAS_SIZE (a + b))))
T c==> ! ! ! c==> c/\ c/\ cHAS_SIZE part cUNIV b0 cHAS_SIZE part cUNIV b1 * b2 cT * b2 cHAS_SIZE part cUNIV c+ b0 b1 c==> c/\ c/\ cHAS_SIZE part cUNIV f0 cHAS_SIZE part cUNIV f1 * f2 cT c/\ ! ! ! c==> c/\ c/\ cHAS_SIZE part cUNIV b0 cHAS_SIZE part cUNIV b1 * b2 cT * b2 cHAS_SIZE part cUNIV c+ b0 b1 * f2 cHAS_SIZE part cUNIV c+ f0 f1
+ |- ((UNIV HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))) = T)
T c= cHAS_SIZE part cUNIV cNUMERAL cBIT0 cBIT1 c_0 cT
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (!a. (!b. (!P. ((((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) ==> (P (UNIV HAS_SIZE (a + b))))))) |- ((!b. ((((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) ==> (P (UNIV HAS_SIZE (a + b))))) = T)
T c==> ! ! ! c==> c/\ c/\ cHAS_SIZE part cUNIV b0 cHAS_SIZE part cUNIV b1 * b2 cT * b2 cHAS_SIZE part cUNIV c+ b0 b1 c= ! c==> c/\ c/\ cHAS_SIZE part cUNIV f0 cHAS_SIZE part cUNIV b0 * f1 cT * f1 cHAS_SIZE part cUNIV c+ f0 b0 cT
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
+ |- (((((UNIV HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))) /\ (UNIV HAS_SIZE (NUMERAL (BIT1 (BIT1 _0))))) /\ ((\x. ((\v. v) x)) T)) ==> ((\x. ((\v. v) x)) (UNIV HAS_SIZE ((NUMERAL (BIT0 (BIT1 _0))) + (NUMERAL (BIT1 (BIT1 _0))))))) = ((\x. ((\v. v) x)) (UNIV HAS_SIZE ((NUMERAL (BIT0 (BIT1 _0))) + (NUMERAL (BIT1 (BIT1 _0)))))))
T c= c==> c/\ c/\ cHAS_SIZE part cUNIV cNUMERAL cBIT0 cBIT1 c_0 cHAS_SIZE part cUNIV cNUMERAL cBIT1 cBIT1 c_0 * / * / b1 b0 cT * / * / b1 b0 cHAS_SIZE part cUNIV c+ cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 * / * / b1 b0 cHAS_SIZE part cUNIV c+ cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ |- ((!a. (!b. (!P. ((((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) ==> (P (UNIV HAS_SIZE (a + b))))))) ==> (!P. (!a. (!b. ((((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) ==> (P (UNIV HAS_SIZE (a + b))))))))
T c==> ! ! ! c==> c/\ c/\ cHAS_SIZE part cUNIV b0 cHAS_SIZE part cUNIV b1 * b2 cT * b2 cHAS_SIZE part cUNIV c+ b0 b1 ! ! ! c==> c/\ c/\ cHAS_SIZE part cUNIV b1 cHAS_SIZE part cUNIV b2 * b0 cT * b0 cHAS_SIZE part cUNIV c+ b1 b2
- (b = c) |- ((P c) = (P c))
T c==> c= f0 f1 c= * f2 f1 * f2 f1
+ |- ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = ((NUMERAL (BIT0 (BIT1 _0))) + (NUMERAL (BIT1 (BIT1 _0)))))
T c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c+ cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
- |- (((UNIV HAS_SIZE n) ==> ((dimindex UNIV) = n)) ==> ((UNIV HAS_SIZE n) ==> ((dimindex UNIV) = n)))
T c==> c==> cHAS_SIZE part cUNIV f0 c= cdimindex part cUNIV f0 c==> cHAS_SIZE part cUNIV f0 c= cdimindex part cUNIV f0
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ (!a. (!b. (!P. ((((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) ==> (P (UNIV HAS_SIZE (a + b))))))) |- (!b. ((((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) ==> (P (UNIV HAS_SIZE (a + b)))))
T c==> ! ! ! c==> c/\ c/\ cHAS_SIZE part cUNIV b0 cHAS_SIZE part cUNIV b1 * b2 cT * b2 cHAS_SIZE part cUNIV c+ b0 b1 ! c==> c/\ c/\ cHAS_SIZE part cUNIV f0 cHAS_SIZE part cUNIV b0 * f1 cT * f1 cHAS_SIZE part cUNIV c+ f0 b0
+ |- (((!b. (((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) ==> (UNIV HAS_SIZE (a + b)))) ==> ((\b. (((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) ==> (UNIV HAS_SIZE (a + b)))) b)) = ((\b. (((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) ==> (UNIV HAS_SIZE (a + b)))) b))
T c= c==> ! c==> c/\ cHAS_SIZE part cUNIV f0 cHAS_SIZE part cUNIV b0 cHAS_SIZE part cUNIV c+ f0 b0 * / c==> c/\ cHAS_SIZE part cUNIV f0 cHAS_SIZE part cUNIV b0 cHAS_SIZE part cUNIV c+ f0 b0 f1 * / c==> c/\ cHAS_SIZE part cUNIV f0 cHAS_SIZE part cUNIV b0 cHAS_SIZE part cUNIV c+ f0 b0 f1
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))) = (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c= c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) |- ((!a. (!b. (!P. ((((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) ==> (P (UNIV HAS_SIZE (a + b))))))) ==> (P (UNIV HAS_SIZE (a + b))))
T c==> c/\ c/\ cHAS_SIZE part cUNIV f0 cHAS_SIZE part cUNIV f1 * f2 cT c==> ! ! ! c==> c/\ c/\ cHAS_SIZE part cUNIV b0 cHAS_SIZE part cUNIV b1 * b2 cT * b2 cHAS_SIZE part cUNIV c+ b0 b1 * f2 cHAS_SIZE part cUNIV c+ f0 f1
+ |- (((UNIV HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))) /\ (UNIV HAS_SIZE (NUMERAL (BIT1 (BIT1 _0))))) /\ ((\x. ((\v. v) x)) T))
T c/\ c/\ cHAS_SIZE part cUNIV cNUMERAL cBIT0 cBIT1 c_0 cHAS_SIZE part cUNIV cNUMERAL cBIT1 cBIT1 c_0 * / * / b1 b0 cT
- (!a. (!b. (!P. ((((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) ==> (P (UNIV HAS_SIZE (a + b))))))), (((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) |- ((((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) /\ (P (UNIV HAS_SIZE (a + b))))
T c==> ! ! ! c==> c/\ c/\ cHAS_SIZE part cUNIV b0 cHAS_SIZE part cUNIV b1 * b2 cT * b2 cHAS_SIZE part cUNIV c+ b0 b1 c==> c/\ c/\ cHAS_SIZE part cUNIV f0 cHAS_SIZE part cUNIV f1 * f2 cT c/\ c/\ c/\ cHAS_SIZE part cUNIV f0 cHAS_SIZE part cUNIV f1 * f2 cT * f2 cHAS_SIZE part cUNIV c+ f0 f1
+ |- ((!b. (!P. ((((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) ==> (P (UNIV HAS_SIZE (a + b)))))) = T)
T c= ! ! c==> c/\ c/\ cHAS_SIZE part cUNIV f0 cHAS_SIZE part cUNIV b0 * b1 cT * b1 cHAS_SIZE part cUNIV c+ f0 b0 cT
+ |- (!b. (!c. ((b = c) ==> (!P. ((P c) ==> (P b))))))
T c==> c= f0 f1 ! c==> * b0 f1 * b0 f0
+ (~ (P b)), (P c), (b = c) |- ((~ (P b)) /\ F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ * f0 f1 cF
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))
T c==> c==> f0 c= f1 f2 ! c==> c/\ f0 * b0 f2 * b0 f1
- ((UNIV HAS_SIZE n) ==> ((dimindex UNIV) = n)), (UNIV HAS_SIZE n) |- (((UNIV HAS_SIZE n) ==> ((dimindex UNIV) = n)) /\ ((dimindex UNIV) = n))
T c==> c==> cHAS_SIZE part cUNIV f0 c= cdimindex part cUNIV f0 c==> cHAS_SIZE part cUNIV f0 c/\ c==> cHAS_SIZE part cUNIV f0 c= cdimindex part cUNIV f0 c= cdimindex part cUNIV f0
+ (!a. (!b. (!P. ((((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) ==> (P (UNIV HAS_SIZE (a + b))))))) |- (!P. ((((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) ==> (P (UNIV HAS_SIZE (a + b)))))
T c==> ! ! ! c==> c/\ c/\ cHAS_SIZE part cUNIV b0 cHAS_SIZE part cUNIV b1 * b2 cT * b2 cHAS_SIZE part cUNIV c+ b0 b1 ! c==> c/\ c/\ cHAS_SIZE part cUNIV f0 cHAS_SIZE part cUNIV f1 * b0 cT * b0 cHAS_SIZE part cUNIV c+ f0 f1
+ ((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) |- (((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ ((UNIV HAS_SIZE (a + b)) = T))
T c==> c/\ cHAS_SIZE part cUNIV f0 cHAS_SIZE part cUNIV f1 c/\ c/\ cHAS_SIZE part cUNIV f0 cHAS_SIZE part cUNIV f1 c= cHAS_SIZE part cUNIV c+ f0 f1 cT
+ (b = c) |- ((b = c) /\ (!P. ((P c) ==> (P b))))
T c==> c= f0 f1 c/\ c= f0 f1 ! c==> * b0 f1 * b0 f0
+ |- ((((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) ==> (P (UNIV HAS_SIZE (a + b))))
T c==> c/\ c/\ cHAS_SIZE part cUNIV f0 cHAS_SIZE part cUNIV f1 * f2 cT * f2 cHAS_SIZE part cUNIV c+ f0 f1
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
+ |- (T = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = ((NUMERAL (BIT0 (BIT1 _0))) + (NUMERAL (BIT1 (BIT1 _0))))))
T c= cT c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c+ cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- ((UNIV HAS_SIZE n) ==> ((dimindex UNIV) = n)), (UNIV HAS_SIZE n) |- ((UNIV HAS_SIZE n) /\ ((dimindex UNIV) = n))
T c==> c==> cHAS_SIZE part cUNIV f0 c= cdimindex part cUNIV f0 c==> cHAS_SIZE part cUNIV f0 c/\ cHAS_SIZE part cUNIV f0 c= cdimindex part cUNIV f0
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ (P c), (b = c) |- ((~ (P b)) ==> F)
T c==> * f0 f1 c==> c= f2 f1 c==> c~ * f0 f2 cF
+ (~ (P b)), (b = c) |- (~ (P c))
T c==> c~ * f0 f1 c==> c= f1 f2 c~ * f0 f2
+ |- ((!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))) = ((!b. (!c. ((T ==> (b = c)) ==> (!P. ((T /\ (P c)) ==> (P b)))))) /\ (!b. (!c. ((F ==> (b = c)) ==> (!P. ((F /\ (P c)) ==> (P b))))))))
T c= ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 c/\ ! ! c==> c==> cT c= b0 b1 ! c==> c/\ cT * b2 b1 * b2 b0 ! ! c==> c==> cF c= b0 b1 ! c==> c/\ cF * b2 b1 * b2 b0
+ |- ((((UNIV HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))) /\ (UNIV HAS_SIZE (NUMERAL (BIT1 (BIT1 _0))))) /\ T) = (((UNIV HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))) /\ (UNIV HAS_SIZE (NUMERAL (BIT1 (BIT1 _0))))) /\ ((\x. ((\v. v) x)) T)))
T c= c/\ c/\ cHAS_SIZE part cUNIV cNUMERAL cBIT0 cBIT1 c_0 cHAS_SIZE part cUNIV cNUMERAL cBIT1 cBIT1 c_0 cT c/\ c/\ cHAS_SIZE part cUNIV cNUMERAL cBIT0 cBIT1 c_0 cHAS_SIZE part cUNIV cNUMERAL cBIT1 cBIT1 c_0 * / * / b1 b0 cT
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- (((~ (P b)) ==> F) = (P b))
T c= c==> c~ * f0 f1 cF * f0 f1
- |- ((((UNIV HAS_SIZE n) ==> ((dimindex UNIV) = n)) ==> ((UNIV HAS_SIZE n) ==> ((dimindex UNIV) = n))) = ((UNIV HAS_SIZE n) ==> ((dimindex UNIV) = n)))
T c= c==> c==> cHAS_SIZE part cUNIV f0 c= cdimindex part cUNIV f0 c==> cHAS_SIZE part cUNIV f0 c= cdimindex part cUNIV f0 c==> cHAS_SIZE part cUNIV f0 c= cdimindex part cUNIV f0
+ |- (((!f. (!y. (((\x. (f x)) y) = (f y)))) ==> ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. v))) = ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. v)))
T c= c==> ! ! c= * / * b0 b2 b1 * b0 b1 * / ! c= * / * b0 b2 b1 * b0 b1 / b0 * / ! c= * / * b0 b2 b1 * b0 b1 / b0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (P c), (b = c) |- ((P c) /\ (P b))
T c==> * f0 f1 c==> c= f2 f1 c/\ * f0 f1 * f0 f2
+ |- ((UNIV HAS_SIZE ((NUMERAL (BIT0 (BIT1 _0))) + (NUMERAL (BIT1 (BIT1 _0))))) = (UNIV HAS_SIZE (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c= cHAS_SIZE part cUNIV c+ cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cHAS_SIZE part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ |- (((\x. ((\v. v) x)) (UNIV HAS_SIZE ((NUMERAL (BIT0 (BIT1 _0))) + (NUMERAL (BIT1 (BIT1 _0)))))) = ((\v. v) (UNIV HAS_SIZE ((NUMERAL (BIT0 (BIT1 _0))) + (NUMERAL (BIT1 (BIT1 _0)))))))
T c= * / * / b1 b0 cHAS_SIZE part cUNIV c+ cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 * / b0 cHAS_SIZE part cUNIV c+ cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
+ |- (((UNIV HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))) /\ (UNIV HAS_SIZE (NUMERAL (BIT1 (BIT1 _0))))) = (((UNIV HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))) /\ (UNIV HAS_SIZE (NUMERAL (BIT1 (BIT1 _0))))) /\ T))
T c= c/\ cHAS_SIZE part cUNIV cNUMERAL cBIT0 cBIT1 c_0 cHAS_SIZE part cUNIV cNUMERAL cBIT1 cBIT1 c_0 c/\ c/\ cHAS_SIZE part cUNIV cNUMERAL cBIT0 cBIT1 c_0 cHAS_SIZE part cUNIV cNUMERAL cBIT1 cBIT1 c_0 cT
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ (!a. (!b. (!P. ((((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) ==> (P (UNIV HAS_SIZE (a + b))))))) |- ((\a. (!b. (!P. ((((UNIV HAS_SIZE a) /\ (UNIV HAS_SIZE b)) /\ (P T)) ==> (P (UNIV HAS_SIZE (a + b))))))) a)
T c==> ! ! ! c==> c/\ c/\ cHAS_SIZE part cUNIV b0 cHAS_SIZE part cUNIV b1 * b2 cT * b2 cHAS_SIZE part cUNIV c+ b0 b1 * / ! ! c==> c/\ c/\ cHAS_SIZE part cUNIV b0 cHAS_SIZE part cUNIV b1 * b2 cT * b2 cHAS_SIZE part cUNIV c+ b0 b1 f0
+ |- (((UNIV HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))) /\ (UNIV HAS_SIZE (NUMERAL (BIT1 (BIT1 _0))))) /\ T)
T c/\ c/\ cHAS_SIZE part cUNIV cNUMERAL cBIT0 cBIT1 c_0 cHAS_SIZE part cUNIV cNUMERAL cBIT1 cBIT1 c_0 cT
- (~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) |- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) /\ F)
T c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 c/\ c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ (~ (P b)), (P c), (b = c) |- F
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 cF
+ |- (((UNIV HAS_SIZE (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((dimindex UNIV) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c= c==> cHAS_SIZE part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ |- (((!y. (((\x. ((\v. v) x)) y) = ((\v. v) y))) ==> ((\y. (((\x. ((\v. v) x)) y) = ((\v. v) y))) (UNIV HAS_SIZE ((NUMERAL (BIT0 (BIT1 _0))) + (NUMERAL (BIT1 (BIT1 _0))))))) = ((\y. (((\x. ((\v. v) x)) y) = ((\v. v) y))) (UNIV HAS_SIZE ((NUMERAL (BIT0 (BIT1 _0))) + (NUMERAL (BIT1 (BIT1 _0)))))))
T c= c==> ! c= * / * / b2 b1 b0 * / b1 b0 * / c= * / * / b2 b1 b0 * / b1 b0 cHAS_SIZE part cUNIV c+ cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 * / c= * / * / b2 b1 b0 * / b1 b0 cHAS_SIZE part cUNIV c+ cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
+ (b = c) |- ((P c) ==> (P b))
T c==> c= f0 f1 c==> * f2 f1 * f2 f0
+ |- (UNIV HAS_SIZE (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))
T cHAS_SIZE part cUNIV cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ |- (!y. (((\x. ((\v. v) x)) y) = ((\v. v) y)))
T c= * / * / b1 b0 f0 * / b0 f0
- (b = c) |- (F = F)
T c==> c= f0 f1 c= cF cF
+ |- ((\x. ((\v. v) x)) (UNIV HAS_SIZE ((NUMERAL (BIT0 (BIT1 _0))) + (NUMERAL (BIT1 (BIT1 _0))))))
T * / * / b1 b0 cHAS_SIZE part cUNIV c+ cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (~ (P c)), (P c) |- ((~ (P c)) /\ (P c))
T c==> c~ * f0 f1 c==> * f0 f1 c/\ c~ * f0 f1 * f0 f1
- |- (F = (~ T))
T c= cF c~ cT
- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((~ (~ F)) ==> F) ==> (~ F)) = (~ F))
T c= c==> c==> c~ c~ cF cF c~ cF c~ cF
- |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((~ T) = F)
T c= c~ cT cF
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- (P c) |- ((~ (P c)) ==> (P c))
T c==> * f0 f1 c==> c~ * f0 f1 * f0 f1
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) = ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c= c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- ((UNIV HAS_SIZE n) ==> ((dimindex UNIV) = n)) |- (((UNIV HAS_SIZE n) ==> ((dimindex UNIV) = n)) /\ ((UNIV HAS_SIZE n) ==> ((dimindex UNIV) = n)))
T c==> c==> cHAS_SIZE part cUNIV f0 c= cdimindex part cUNIV f0 c/\ c==> cHAS_SIZE part cUNIV f0 c= cdimindex part cUNIV f0 c==> cHAS_SIZE part cUNIV f0 c= cdimindex part cUNIV f0
- |- ((UNIV HAS_SIZE ((NUMERAL (BIT0 (BIT1 _0))) + (NUMERAL (BIT1 (BIT1 _0))))) = ((\x. ((\v. v) x)) (UNIV HAS_SIZE ((NUMERAL (BIT0 (BIT1 _0))) + (NUMERAL (BIT1 (BIT1 _0)))))))
T c= cHAS_SIZE part cUNIV c+ cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 * / * / b1 b0 cHAS_SIZE part cUNIV c+ cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- (~ (P b)), (P c), (b = c) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c==> c~ cF cF
- |- (~ (~ T))
T c~ c~ cT
