N SUM_4
C |- (!t. (((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) t) = ((real_add (t (NUMERAL (BIT1 _0)))) ((real_add (t (NUMERAL (BIT0 (BIT1 _0))))) ((real_add (t (NUMERAL (BIT1 (BIT1 _0))))) (t (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))
T c= csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0 creal_add * f0 cNUMERAL cBIT1 c_0 creal_add * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_add * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
D TRUTH
A |- T
T cT
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D ADD_CLAUSES
A |- ((!n. (((NUMERAL _0) + n) = n)) /\ ((!m. ((m + (NUMERAL _0)) = m)) /\ ((!m. (!n. (((SUC m) + n) = (SUC (m + n))))) /\ (!m. (!n. ((m + (SUC n)) = (SUC (m + n))))))))
T c/\ ! c= c+ cNUMERAL c_0 b0 b0 c/\ ! c= c+ b0 cNUMERAL c_0 b0 c/\ ! ! c= c+ cSUC b0 b1 cSUC c+ b0 b1 ! ! c= c+ b0 cSUC b1 cSUC c+ b0 b1
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_LE
A |- ((!m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) /\ (((_0 <= _0) = T) /\ ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))))))))
T c/\ ! ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 c/\ c= c<= c_0 c_0 cT c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
D ARITH_LT
A |- ((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) /\ (((_0 < _0) = F) /\ ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))))))))))
T c/\ ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 c/\ c= c< c_0 c_0 cF c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
D Hypermap.THREE
A |- ((NUMERAL (BIT1 (BIT1 _0))) = (SUC (NUMERAL (BIT0 (BIT1 _0)))))
T c= cNUMERAL cBIT1 cBIT1 c_0 cSUC cNUMERAL cBIT0 cBIT1 c_0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D SUM_SING_NUMSEG
A |- (!f. (!n. (((sum (n .. n)) f) = (f n))))
T c= csum * * part c.. f0 f0 f1 * f1 f0
D SUM_CLAUSES_NUMSEG
A |- ((!m. (((sum (m .. (NUMERAL _0))) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL _0))))) /\ (!m. (!n. (((sum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((real_add ((sum (m .. n)) f)) (f (SUC n)))) ((sum (m .. n)) f))))))
T c/\ ! c= csum * * part c.. b0 cNUMERAL c_0 f0 cCOND c= b0 cNUMERAL c_0 * f0 cNUMERAL c_0 creal_of_num cNUMERAL c_0 ! ! c= csum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 creal_add csum * * part c.. b0 b1 f0 * f0 cSUC b1 csum * * part c.. b0 b1 f0
- |- ((\m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) m)
T * / ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 f0
- |- (((!n. (((BIT0 n) + _0) = (BIT0 n))) ==> ((\n. (((BIT0 n) + _0) = (BIT0 n))) n)) = ((\n. (((BIT0 n) + _0) = (BIT0 n))) n))
T c= c==> ! c= c+ cBIT0 b0 c_0 cBIT0 b0 * / c= c+ cBIT0 b0 c_0 cBIT0 b0 f0 * / c= c+ cBIT0 b0 c_0 cBIT0 b0 f0
- |- (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))
T c= cEXP cBIT0 f0 cBIT0 f1 c* cEXP cBIT0 f0 f1 cEXP cBIT0 f0 f1
- |- (((!m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) ==> ((\m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) m)) = ((\m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) m))
T c= c==> ! ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 * / ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 f0 * / ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 f0
- |- ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))
T c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- (((!n. (((BIT1 n) * _0) = _0)) ==> ((\n. (((BIT1 n) * _0) = _0)) n)) = ((\n. (((BIT1 n) * _0) = _0)) n))
T c= c==> ! c= c* cBIT1 b0 c_0 c_0 * / c= c* cBIT1 b0 c_0 c_0 f0 * / c= c* cBIT1 b0 c_0 c_0 f0
+ |- (((((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))) ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) = ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)))) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))))) ==> (((~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)))) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) e')))) = (((~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)))) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) e'))))
T c= c==> c==> c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 c==> c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 f1 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f1 c==> c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 f1 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f1
- (~ ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) |- (((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0)))) = F)
T c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 c= c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 cF
- |- (((BIT0 m) = (BIT1 n)) = F)
T c= c= cBIT0 f0 cBIT1 f1 cF
- |- (((!n. (((BIT0 n) * _0) = _0)) ==> ((\n. (((BIT0 n) * _0) = _0)) n)) = ((\n. (((BIT0 n) * _0) = _0)) n))
T c= c==> ! c= c* cBIT0 b0 c_0 c_0 * / c= c* cBIT0 b0 c_0 c_0 f0 * / c= c* cBIT0 b0 c_0 c_0 f0
- |- (((!n. ((BIT1 n) > _0)) ==> ((\n. ((BIT1 n) > _0)) n)) = ((\n. ((BIT1 n) > _0)) n))
T c= c==> ! c> cBIT1 b0 c_0 * / c> cBIT1 b0 c_0 f0 * / c> cBIT1 b0 c_0 f0
- |- (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))
T c= c+ cBIT0 f0 cBIT1 f1 cBIT1 c+ f0 f1
- |- ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) ==> (((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) t') e'))))
T c==> c==> c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 c==> c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 f2 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 f2
- |- ((SUC _0) = (BIT1 _0))
T c= cSUC c_0 cBIT1 c_0
- |- (((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) m))
T c= c==> ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 * / ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 f0 * / ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 f0
- |- ((_0 <= (BIT0 n)) = T)
T c= c<= c_0 cBIT0 f0 cT
- |- (((BIT1 m) = (BIT0 n)) = F)
T c= c= cBIT1 f0 cBIT0 f1 cF
- |- ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))))))
T c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
- |- (((PRE _0) = _0) /\ ((!n. ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))) /\ (!n. ((PRE (BIT1 n)) = (BIT0 n)))))
T c/\ c= cPRE c_0 c_0 c/\ ! c= cPRE cBIT0 b0 cCOND c= b0 c_0 c_0 cBIT1 cPRE b0 ! c= cPRE cBIT1 b0 cBIT0 b0
- |- (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n))))
T c= c* cBIT0 f0 cBIT0 f1 cBIT0 cBIT0 c* f0 f1
- |- ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))))
T c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((BIT1 m) < (BIT0 n)) = (m < n))
T c= c< cBIT1 f0 cBIT0 f1 c< f0 f1
- |- ((\m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) m)
T * / ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0
- |- (((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) ==> ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m)) = ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m))
T c= c==> ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0 * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0
+ |- (((!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))) ==> ((\z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))) z)) = ((\z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))) z))
T c= c==> ! c= creal_add f0 creal_add f1 b0 creal_add creal_add f0 f1 b0 * / c= creal_add f0 creal_add f1 b0 creal_add creal_add f0 f1 b0 f2 * / c= creal_add f0 creal_add f1 b0 creal_add creal_add f0 f1 b0 f2
- |- ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))
T c= cEXP c_0 cBIT0 f0 c* cEXP c_0 f0 cEXP c_0 f0
- |- (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))
T c= cEXP cNUMERAL f0 cNUMERAL f1 cNUMERAL cEXP f0 f1
- |- (((!n. ((SUC (BIT0 n)) = (BIT1 n))) ==> ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n)) = ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n))
T c= c==> ! c= cSUC cBIT0 b0 cBIT1 b0 * / c= cSUC cBIT0 b0 cBIT1 b0 f0 * / c= cSUC cBIT0 b0 cBIT1 b0 f0
- |- ((!n. ((EVEN (BIT0 n)) = T)) /\ (!n. ((EVEN (BIT1 n)) = F)))
T c/\ ! c= cEVEN cBIT0 b0 cT ! c= cEVEN cBIT1 b0 cF
- |- (((!n. ((ODD (BIT0 n)) = F)) ==> ((\n. ((ODD (BIT0 n)) = F)) n)) = ((\n. ((ODD (BIT0 n)) = F)) n))
T c= c==> ! c= cODD cBIT0 b0 cF * / c= cODD cBIT0 b0 cF f0 * / c= cODD cBIT0 b0 cF f0
- |- ((\m. (((BIT1 m) EXP _0) = (BIT1 _0))) m)
T * / c= cEXP cBIT1 b0 c_0 cBIT1 c_0 f0
- |- (((!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) ==> ((\n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) n)) = ((\n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) n))
T c= c==> ! c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 * / c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1 * / c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1
+ |- (((!e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) = (((COND g') t') e')))))) ==> ((\e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) = (((COND g') t') e')))))) e')) = ((\e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 b0 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 cCOND f0 f2 b0 * / c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 b0 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 cCOND f0 f2 b0 f3 * / c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 b0 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 cCOND f0 f2 b0 f3
- |- (((!n. ((_0 * (BIT0 n)) = _0)) ==> ((\n. ((_0 * (BIT0 n)) = _0)) n)) = ((\n. ((_0 * (BIT0 n)) = _0)) n))
T c= c==> ! c= c* c_0 cBIT0 b0 c_0 * / c= c* c_0 cBIT0 b0 c_0 f0 * / c= c* c_0 cBIT0 b0 c_0 f0
- |- (((!n. ((EVEN (BIT1 n)) = F)) ==> ((\n. ((EVEN (BIT1 n)) = F)) n)) = ((\n. ((EVEN (BIT1 n)) = F)) n))
T c= c==> ! c= cEVEN cBIT1 b0 cF * / c= cEVEN cBIT1 b0 cF f0 * / c= cEVEN cBIT1 b0 cF f0
- |- (((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) ==> ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m)) = ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m))
T c= c==> ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0 * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0
- |- (((!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) ==> ((\m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) m)) = ((\m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) m))
T c= c==> ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 * / ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0 * / ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0
- |- ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n)
T * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1
- |- (((!e'. ((((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) = (((COND g') t') e')))))) ==> ((\e'. ((((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) = (((COND g') t') e')))))) e')) = ((\e'. ((((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 b0 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 cCOND f0 f2 b0 * / c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 b0 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 cCOND f0 f2 b0 f3 * / c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 b0 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 cCOND f0 f2 b0 f3
- |- ((\n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) n)
T * / c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 f1
- |- ((\n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) n)
T * / c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 f0
- |- ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))
T c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))))))
T c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((_0 < _0) = F)
T c= c< c_0 c_0 cF
- |- (((!n. (((BIT1 n) < _0) = F)) ==> ((\n. (((BIT1 n) < _0) = F)) n)) = ((\n. (((BIT1 n) < _0) = F)) n))
T c= c==> ! c= c< cBIT1 b0 c_0 cF * / c= c< cBIT1 b0 c_0 cF f0 * / c= c< cBIT1 b0 c_0 cF f0
- |- ((_0 + (BIT0 n)) = (BIT0 n))
T c= c+ c_0 cBIT0 f0 cBIT0 f0
- |- ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))
T c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))
T c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- ((\n. ((BIT0 n) >= _0)) n)
T * / c>= cBIT0 b0 c_0 f0
- |- (((BIT1 n) - _0) = (BIT1 n))
T c= c- cBIT1 f0 c_0 cBIT1 f0
+ |- ((\e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) = (((COND g') t') e')))))) e')
T * / c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 b0 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 cCOND f0 f2 b0 f3
- |- (((!n. ((_0 - (BIT0 n)) = _0)) ==> ((\n. ((_0 - (BIT0 n)) = _0)) n)) = ((\n. ((_0 - (BIT0 n)) = _0)) n))
T c= c==> ! c= c- c_0 cBIT0 b0 c_0 * / c= c- c_0 cBIT0 b0 c_0 f0 * / c= c- c_0 cBIT0 b0 c_0 f0
- |- (((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) ==> ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n)) = ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n))
T c= c==> ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0 * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0
- |- ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m)
T * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))))
T c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ |- (((sum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((real_add ((sum (m .. n)) f)) (f (SUC n)))) ((sum (m .. n)) f)))
T c= csum * * part c.. f0 cSUC f1 f2 cCOND c<= f0 cSUC f1 creal_add csum * * part c.. f0 f1 f2 * f2 cSUC f1 csum * * part c.. f0 f1 f2
- |- (((!n. (((BIT1 n) <= _0) = F)) ==> ((\n. (((BIT1 n) <= _0) = F)) n)) = ((\n. (((BIT1 n) <= _0) = F)) n))
T c= c==> ! c= c<= cBIT1 b0 c_0 cF * / c= c<= cBIT1 b0 c_0 cF f0 * / c= c<= cBIT1 b0 c_0 cF f0
- |- ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n)
T * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1
- |- ((\g'. (!t'. (!e'. ((((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 b2 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 cCOND b0 b1 b2 f1
- |- ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))
T c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((\n. (~ (_0 >= (BIT1 n)))) n)
T * / c~ c>= c_0 cBIT1 b0 f0
- |- (((!n. ((_0 + (BIT0 n)) = (BIT0 n))) ==> ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n)) = ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n))
T c= c==> ! c= c+ c_0 cBIT0 b0 cBIT0 b0 * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0 * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0
- |- (((!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) ==> ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n)) = ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n))
T c= c==> ! c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1 * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1
- |- (((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) ==> ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m)) = ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m))
T c= c==> ! ! c= c= cBIT1 b0 cBIT0 b1 cF * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0 * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0
- |- ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n)
T * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1
- |- ((SUC (BIT1 n)) = (BIT0 (SUC n)))
T c= cSUC cBIT1 f0 cBIT0 cSUC f0
- |- (((BIT1 m) < (BIT1 n)) = (m < n))
T c= c< cBIT1 f0 cBIT1 f1 c< f0 f1
- |- ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m)
T * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0
- |- (((!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) ==> ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m)) = ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m))
T c= c==> ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- ((NUMERAL (NUMERAL _0)) = (NUMERAL _0))
T c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0
- |- (((!n. ((PRE (BIT1 n)) = (BIT0 n))) ==> ((\n. ((PRE (BIT1 n)) = (BIT0 n))) n)) = ((\n. ((PRE (BIT1 n)) = (BIT0 n))) n))
T c= c==> ! c= cPRE cBIT1 b0 cBIT0 b0 * / c= cPRE cBIT1 b0 cBIT0 b0 f0 * / c= cPRE cBIT1 b0 cBIT0 b0 f0
- |- (((!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) ==> ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n)) = ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n))
T c= c==> ! c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1 * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1
+ |- (((BIT1 m) <= (BIT1 n)) = (m <= n))
T c= c<= cBIT1 f0 cBIT1 f1 c<= f0 f1
- |- (((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) ==> ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m)) = ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m))
T c= c==> ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0 * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0
+ |- (((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) ==> ((\x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) x)) = ((\x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) x))
T c= c==> ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 * / ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 f0 * / ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 f0
- |- (((EVEN _0) = T) /\ ((!n. ((EVEN (BIT0 n)) = T)) /\ (!n. ((EVEN (BIT1 n)) = F))))
T c/\ c= cEVEN c_0 cT c/\ ! c= cEVEN cBIT0 b0 cT ! c= cEVEN cBIT1 b0 cF
- |- (((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) ==> ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m)) = ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m))
T c= c==> ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
+ |- (((!f. (!n. (((sum (n .. n)) f) = (f n)))) ==> ((\f. (!n. (((sum (n .. n)) f) = (f n)))) f)) = ((\f. (!n. (((sum (n .. n)) f) = (f n)))) f))
T c= c==> ! ! c= csum * * part c.. b1 b1 b0 * b0 b1 * / ! c= csum * * part c.. b1 b1 b0 * b0 b1 f0 * / ! c= csum * * part c.. b1 b1 b0 * b0 b1 f0
- |- ((\n. (((BIT0 m) <= (BIT0 n)) = (m <= n))) n)
T * / c= c<= cBIT0 f0 cBIT0 b0 c<= f0 b0 f1
- |- (((NUMERAL n) > (NUMERAL m)) = (n > m))
T c= c> cNUMERAL f0 cNUMERAL f1 c> f0 f1
- |- ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))
T c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
- |- ((~ ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t) = ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)))
T c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0
- |- (((BIT0 m) < (BIT0 n)) = (m < n))
T c= c< cBIT0 f0 cBIT0 f1 c< f0 f1
- |- (((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) ==> (((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0)))))))) ==> (((~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) e')))) = (((~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) e'))))
T c= c==> c==> c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 c==> c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 f1 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 c==> c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 f1 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 f1
- |- ((PRE (NUMERAL n)) = (NUMERAL (PRE n)))
T c= cPRE cNUMERAL f0 cNUMERAL cPRE f0
- |- ((\m. (((sum (m .. (NUMERAL _0))) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL _0))))) m)
T * / c= csum * * part c.. b0 cNUMERAL c_0 f0 cCOND c= b0 cNUMERAL c_0 * f0 cNUMERAL c_0 creal_of_num cNUMERAL c_0 f1
- |- (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))
T c= c+ cBIT1 f0 cBIT1 f1 cBIT0 cSUC c+ f0 f1
- |- (((!n. ((_0 EXP (BIT1 n)) = _0)) ==> ((\n. ((_0 EXP (BIT1 n)) = _0)) n)) = ((\n. ((_0 EXP (BIT1 n)) = _0)) n))
T c= c==> ! c= cEXP c_0 cBIT1 b0 c_0 * / c= cEXP c_0 cBIT1 b0 c_0 f0 * / c= cEXP c_0 cBIT1 b0 c_0 f0
+ |- ((!t. t) = t)
T c= ! f0 f0
- |- ((_0 >= (BIT0 n)) = (_0 >= n))
T c= c>= c_0 cBIT0 f0 c>= c_0 f0
- |- (((_0 = _0) = T) /\ ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))))))
T c/\ c= c= c_0 c_0 cT c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((BIT0 n) - _0) = (BIT0 n))
T c= c- cBIT0 f0 c_0 cBIT0 f0
- |- (((!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) ==> ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n)) = ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n))
T c= c==> ! c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1 * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
+ |- ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m)
T * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0
- |- (((BIT1 n) <= _0) = F)
T c= c<= cBIT1 f0 c_0 cF
- |- ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))
T c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- ((\n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) n)
T * / c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 f1
- |- ((\t'. (!e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))) = g') ==> ((g' ==> (((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)))) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) = t')) ==> (((~ g') ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)))) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 b1 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 cCOND f0 b0 b1 f2
+ |- ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n)
T * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1
- |- ((\n. ((EVEN (BIT0 n)) = T)) n)
T * / c= cEVEN cBIT0 b0 cT f0
- |- ((_0 + _0) = _0)
T c= c+ c_0 c_0 c_0
- |- (((!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) ==> ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n)) = ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n))
T c= c==> ! c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1 * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1
- |- ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))
T c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((_0 * (BIT0 n)) = _0)
T c= c* c_0 cBIT0 f0 c_0
- |- (((!n. (((BIT0 n) > (BIT1 m)) = (n > m))) ==> ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n)) = ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n))
T c= c==> ! c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1 * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1
- |- (((BIT0 n) >= (BIT0 m)) = (n >= m))
T c= c>= cBIT0 f0 cBIT0 f1 c>= f0 f1
- |- (((BIT0 m) <= (BIT1 n)) = (m <= n))
T c= c<= cBIT0 f0 cBIT1 f1 c<= f0 f1
- |- (((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) = ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ==> ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) ==> (((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) t') e'))))) = ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) ==> (((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) t') e')))))
T c= c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c==> c==> c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 c==> c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 f2 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 f2 c==> c==> c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 c==> c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 f2 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 f2
- |- ((\m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) m)
T * / ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 f0
- ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) |- (((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) = T)
T c==> c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 cT
+ |- ((\t'. (!e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 b1 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 cCOND f0 b0 b1 f2
+ |- (((!e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) = (((COND g') t') e')))))) ==> ((\e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) = (((COND g') t') e')))))) e')) = ((\e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 b0 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 cCOND f0 f2 b0 * / c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 b0 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 cCOND f0 f2 b0 f3 * / c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 b0 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 cCOND f0 f2 b0 f3
+ |- ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))))
T c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))
T c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- (((~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)))) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) e')))
T c==> c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 f1 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f1
+ |- (((~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) e')))
T c==> c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 f1 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 f1
+ |- (T = (!t. ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)))) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)))) = ((real_add (t (NUMERAL (BIT1 _0)))) ((real_add (t (SUC (NUMERAL (BIT1 _0))))) ((real_add (t (SUC (SUC (NUMERAL (BIT1 _0)))))) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))))))))
T c= cT ! c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 * b0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 * b0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 * b0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 * b0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 * b0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 * b0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 * b0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 creal_add * b0 cNUMERAL cBIT1 c_0 creal_add * b0 cSUC cNUMERAL cBIT1 c_0 creal_add * b0 cSUC cSUC cNUMERAL cBIT1 c_0 * b0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0
+ |- (((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))))
T c==> c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0
+ |- ((\t'. (!e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 b1 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 cCOND f0 b0 b1 f2
+ |- ((\z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))) z)
T * / c= creal_add f0 creal_add f1 b0 creal_add creal_add f0 f1 b0 f2
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
+ |- ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) = (((COND g') t') e')))))
T c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 f3 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 cCOND f0 f2 f3
+ |- ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) t') e'))))
T c==> c==> c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 c==> c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 f2 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 f2
+ |- ((\y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))) y)
T * / ! c= creal_add f0 creal_add b0 b1 creal_add creal_add f0 b0 b1 f1
+ |- (((!n. ((_0 < (BIT0 n)) = (_0 < n))) ==> ((\n. ((_0 < (BIT0 n)) = (_0 < n))) n)) = ((\n. ((_0 < (BIT0 n)) = (_0 < n))) n))
T c= c==> ! c= c< c_0 cBIT0 b0 c< c_0 b0 * / c= c< c_0 cBIT0 b0 c< c_0 b0 f0 * / c= c< c_0 cBIT0 b0 c< c_0 b0 f0
+ |- ((\m. (!n. (((sum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((real_add ((sum (m .. n)) f)) (f (SUC n)))) ((sum (m .. n)) f))))) m)
T * / ! c= csum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 creal_add csum * * part c.. b0 b1 f0 * f0 cSUC b1 csum * * part c.. b0 b1 f0 f1
+ |- ((_0 < (BIT0 n)) = (_0 < n))
T c= c< c_0 cBIT0 f0 c< c_0 f0
+ |- ((!t. ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)))) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)))) = ((real_add (t (NUMERAL (BIT1 _0)))) ((real_add (t (SUC (NUMERAL (BIT1 _0))))) ((real_add (t (SUC (SUC (NUMERAL (BIT1 _0)))))) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))))))) = (!t. (((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) t) = ((real_add (t (NUMERAL (BIT1 _0)))) ((real_add (t (NUMERAL (BIT0 (BIT1 _0))))) ((real_add (t (NUMERAL (BIT1 (BIT1 _0))))) (t (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))
T c= ! c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 * b0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 * b0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 * b0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 * b0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 * b0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 * b0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 * b0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 creal_add * b0 cNUMERAL cBIT1 c_0 creal_add * b0 cSUC cNUMERAL cBIT1 c_0 creal_add * b0 cSUC cSUC cNUMERAL cBIT1 c_0 * b0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 ! c= csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 creal_add * b0 cNUMERAL cBIT1 c_0 creal_add * b0 cNUMERAL cBIT0 cBIT1 c_0 creal_add * b0 cNUMERAL cBIT1 cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- ((\n. ((_0 <= (BIT1 n)) = T)) n)
T * / c= c<= c_0 cBIT1 b0 cT f0
+ |- (((!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m))
T c= c==> ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0 * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0
+ |- ((~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)))))
T c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0
+ |- ((\n. ((_0 < (BIT0 n)) = (_0 < n))) n)
T * / c= c< c_0 cBIT0 b0 c< c_0 b0 f0
+ |- ((\f. (!n. (((sum (n .. n)) f) = (f n)))) f)
T * / ! c= csum * * part c.. b1 b1 b0 * b0 b1 f0
+ |- (((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) ==> ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m)) = ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m))
T c= c==> ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0 * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0
+ |- ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m)
T * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0
+ |- ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)))) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)))))
T c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0
+ |- (((!g'. (!t'. (!e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 b2 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 cCOND b0 b1 b2 * / ! ! c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 b2 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 cCOND b0 b1 b2 f1 * / ! ! c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 b2 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 cCOND b0 b1 b2 f1
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((_0 <= _0) = T) /\ ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))))))
T c/\ c= c<= c_0 c_0 cT c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))))))
T c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ |- ((\e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) = (((COND g') t') e')))))) e')
T * / c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 b0 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 cCOND f0 f2 b0 f3
+ |- ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))))
T c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0
+ |- (((_0 < _0) = F) /\ ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))))))
T c/\ c= c< c_0 c_0 cF c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ |- (((!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) ==> ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n)) = ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n))
T c= c==> ! c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1 * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1
+ |- (((!n. ((_0 <= (BIT1 n)) = T)) ==> ((\n. ((_0 <= (BIT1 n)) = T)) n)) = ((\n. ((_0 <= (BIT1 n)) = T)) n))
T c= c==> ! c= c<= c_0 cBIT1 b0 cT * / c= c<= c_0 cBIT1 b0 cT f0 * / c= c<= c_0 cBIT1 b0 cT f0
+ |- ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))))))
T c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
+ |- (((BIT1 m) <= (BIT0 n)) = (m < n))
T c= c<= cBIT1 f0 cBIT0 f1 c< f0 f1
+ |- (((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))) ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) = ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)))) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))))
T c==> c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0
+ |- ((\g'. (!t'. (!e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 b2 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 cCOND b0 b1 b2 f1
+ |- ((((~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)))) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))))) = ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)))))
T c= c==> c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0
+ |- (((!m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) ==> ((\m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) m)) = ((\m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) m))
T c= c==> ! ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 * / ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 f0 * / ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 f0
+ |- ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))
T c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- (((((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ==> ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))) ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) = t')) ==> (((~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) t') e'))))) = ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))) ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) = t')) ==> (((~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) t') e')))))
T c= c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 c==> c==> c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f1 c==> c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 f2 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f1 f2 c==> c==> c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f1 c==> c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 f2 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f1 f2
+ |- ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))) ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) = t')) ==> (((~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) t') e'))))
T c==> c==> c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f1 c==> c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 f2 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f1 f2
+ |- ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n)
T * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1
+ |- (((!n. (((sum (n .. n)) f) = (f n))) ==> ((\n. (((sum (n .. n)) f) = (f n))) n)) = ((\n. (((sum (n .. n)) f) = (f n))) n))
T c= c==> ! c= csum * * part c.. b0 b0 f0 * f0 b0 * / c= csum * * part c.. b0 b0 f0 * f0 b0 f1 * / c= csum * * part c.. b0 b0 f0 * f0 b0 f1
+ |- (((!n. (((sum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((real_add ((sum (m .. n)) f)) (f (SUC n)))) ((sum (m .. n)) f)))) ==> ((\n. (((sum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((real_add ((sum (m .. n)) f)) (f (SUC n)))) ((sum (m .. n)) f)))) n)) = ((\n. (((sum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((real_add ((sum (m .. n)) f)) (f (SUC n)))) ((sum (m .. n)) f)))) n))
T c= c==> ! c= csum * * part c.. f0 cSUC b0 f1 cCOND c<= f0 cSUC b0 creal_add csum * * part c.. f0 b0 f1 * f1 cSUC b0 csum * * part c.. f0 b0 f1 * / c= csum * * part c.. f0 cSUC b0 f1 cCOND c<= f0 cSUC b0 creal_add csum * * part c.. f0 b0 f1 * f1 cSUC b0 csum * * part c.. f0 b0 f1 f2 * / c= csum * * part c.. f0 cSUC b0 f1 cCOND c<= f0 cSUC b0 creal_add csum * * part c.. f0 b0 f1 * f1 cSUC b0 csum * * part c.. f0 b0 f1 f2
+ |- ((\n. ((_0 < (BIT1 n)) = T)) n)
T * / c= c< c_0 cBIT1 b0 cT f0
+ |- (!t. ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)))) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)))) = ((real_add (t (NUMERAL (BIT1 _0)))) ((real_add (t (SUC (NUMERAL (BIT1 _0))))) ((real_add (t (SUC (SUC (NUMERAL (BIT1 _0)))))) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))))))
T c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 creal_add * f0 cNUMERAL cBIT1 c_0 creal_add * f0 cSUC cNUMERAL cBIT1 c_0 creal_add * f0 cSUC cSUC cNUMERAL cBIT1 c_0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0
+ |- ((\n. (((sum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((real_add ((sum (m .. n)) f)) (f (SUC n)))) ((sum (m .. n)) f)))) n)
T * / c= csum * * part c.. f0 cSUC b0 f1 cCOND c<= f0 cSUC b0 creal_add csum * * part c.. f0 b0 f1 * f1 cSUC b0 csum * * part c.. f0 b0 f1 f2
+ (~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) |- ((~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) /\ (((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))))
T c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c/\ c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0
+ |- ((_0 < (BIT1 n)) = T)
T c= c< c_0 cBIT1 f0 cT
+ |- ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (SUC (NUMERAL (BIT1 (BIT1 _0)))))
T c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 cBIT1 c_0
+ |- (((!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) ==> ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n)) = ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n))
T c= c==> ! c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1 * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1
+ |- ((~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))))
T c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0
+ |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
+ |- (((!t'. (!e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 b1 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 cCOND f0 b0 b1 * / ! c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 b1 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 cCOND f0 b0 b1 f2 * / ! c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 b1 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 cCOND f0 b0 b1 f2
+ |- (((!m. (!n. (((sum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((real_add ((sum (m .. n)) f)) (f (SUC n)))) ((sum (m .. n)) f))))) ==> ((\m. (!n. (((sum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((real_add ((sum (m .. n)) f)) (f (SUC n)))) ((sum (m .. n)) f))))) m)) = ((\m. (!n. (((sum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((real_add ((sum (m .. n)) f)) (f (SUC n)))) ((sum (m .. n)) f))))) m))
T c= c==> ! ! c= csum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 creal_add csum * * part c.. b0 b1 f0 * f0 cSUC b1 csum * * part c.. b0 b1 f0 * / ! c= csum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 creal_add csum * * part c.. b0 b1 f0 * f0 cSUC b1 csum * * part c.. b0 b1 f0 f1 * / ! c= csum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 creal_add csum * * part c.. b0 b1 f0 * f0 cSUC b1 csum * * part c.. b0 b1 f0 f1
+ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))) |- (((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))) /\ (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) = ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)))) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))))
T c==> c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0
+ |- ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))
T c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) |- (((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) /\ (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))))
T c==> c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0
+ |- (((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0)))))))) ==> (((~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) e')))) = (((~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) e'))))
T c= c==> c==> c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 c==> c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 f1 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 c==> c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 f1 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 f1
+ |- ((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))
T c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
+ |- ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))
T c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- ((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- ((\x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) x)
T * / ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 f0
+ |- (((NUMERAL m) <= (NUMERAL n)) = (m <= n))
T c= c<= cNUMERAL f0 cNUMERAL f1 c<= f0 f1
+ |- ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))
T c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) = (((COND g') t') e')))))
T c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 f3 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f1 cCOND f0 f2 f3
+ |- ((\m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) m)
T * / ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 f0
+ |- (((!n. ((_0 < (BIT1 n)) = T)) ==> ((\n. ((_0 < (BIT1 n)) = T)) n)) = ((\n. ((_0 < (BIT1 n)) = T)) n))
T c= c==> ! c= c< c_0 cBIT1 b0 cT * / c= c< c_0 cBIT1 b0 cT f0 * / c= c< c_0 cBIT1 b0 cT f0
+ |- ((\g'. (!t'. (!e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 b2 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 cCOND b0 b1 b2 f1
+ |- (((!n. (((BIT1 m) <= (BIT0 n)) = (m < n))) ==> ((\n. (((BIT1 m) <= (BIT0 n)) = (m < n))) n)) = ((\n. (((BIT1 m) <= (BIT0 n)) = (m < n))) n))
T c= c==> ! c= c<= cBIT1 f0 cBIT0 b0 c< f0 b0 * / c= c<= cBIT1 f0 cBIT0 b0 c< f0 b0 f1 * / c= c<= cBIT1 f0 cBIT0 b0 c< f0 b0 f1
+ |- ((_0 <= (BIT1 n)) = T)
T c= c<= c_0 cBIT1 f0 cT
+ |- (((!t'. (!e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) (t (SUC (SUC (SUC (NUMERAL (BIT1 _0)))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 b1 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 cCOND f0 b0 b1 * / ! c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 b1 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 cCOND f0 b0 b1 f2 * / ! c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 b1 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 * f1 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 cCOND f0 b0 b1 f2
+ |- (((!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))) ==> ((\y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))) y)) = ((\y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))) y))
T c= c==> ! ! c= creal_add f0 creal_add b0 b1 creal_add creal_add f0 b0 b1 * / ! c= creal_add f0 creal_add b0 b1 creal_add creal_add f0 b0 b1 f1 * / ! c= creal_add f0 creal_add b0 b1 creal_add creal_add f0 b0 b1 f1
+ (~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) |- ((~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (SUC (NUMERAL (BIT1 _0))))))) /\ (((sum ((NUMERAL (BIT1 _0)) .. (SUC (SUC (NUMERAL (BIT1 _0)))))) t) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t))) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) (((COND ((NUMERAL (BIT1 _0)) <= (SUC (NUMERAL (BIT1 _0))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)) (t (SUC (NUMERAL (BIT1 _0)))))) ((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) t)))))
T c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 c/\ c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cSUC cNUMERAL cBIT1 c_0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0
+ |- (((!g'. (!t'. (!e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) = g') ==> ((g' ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 b2 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 cCOND b0 b1 b2 * / ! ! c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 b2 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 cCOND b0 b1 b2 f1 * / ! ! c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 b2 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 cCOND b0 b1 b2 f1
+ |- ((\n. (((BIT1 m) <= (BIT0 n)) = (m < n))) n)
T * / c= c<= cBIT1 f0 cBIT0 b0 c< f0 b0 f1
+ |- (((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) = ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ==> ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) t') e'))))) = ((((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0))))) ==> (((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) ((real_add ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) (t (SUC (SUC (NUMERAL (BIT1 _0))))))) ((sum ((NUMERAL (BIT1 _0)) .. (SUC (NUMERAL (BIT1 _0))))) t)) = (((COND ((NUMERAL (BIT1 _0)) <= (SUC (SUC (NUMERAL (BIT1 _0)))))) t') e')))))
T c= c==> c= c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c==> c==> c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 c==> c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 f2 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 f2 c==> c==> c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 c==> c==> c~ c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 f2 c= cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 creal_add csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 * f0 cSUC cSUC cNUMERAL cBIT1 c_0 csum * * part c.. cNUMERAL cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0 f0 cCOND c<= cNUMERAL cBIT1 c_0 cSUC cSUC cNUMERAL cBIT1 c_0 f1 f2
+ |- ((\n. (((sum (n .. n)) f) = (f n))) n)
T * / c= csum * * part c.. b0 b0 f0 * f0 b0 f1
+ |- ((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))))
T c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ |- ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))))))))
T c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ |- ((!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))) = T)
T c= ! ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= f3 b1 c= cCOND f0 f2 f3 cCOND f1 b0 b1 cT
+ |- ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))))
T c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- ((((COND T) t1) t2) = t1)
T c= cCOND cT f0 f1 f0
