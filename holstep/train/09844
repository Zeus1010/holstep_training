N FRONTIER_CLOSED_INTERVAL
C |- (!a. (!b. ((frontier (closed_interval ((CONS (a , b)) NIL))) = ((closed_interval ((CONS (a , b)) NIL)) DIFF (open_interval (a , b))))))
T c= * part cfrontier * part cclosed_interval cCONS c, f0 f1 cNIL * * part cDIFF * part cclosed_interval cCONS c, f0 f1 cNIL * part copen_interval c, f0 f1
D TRUTH
A |- T
T cT
D CLOSURE_CLOSED
A |- (!s. ((closed s) ==> ((closure s) = s)))
T c==> cclosed f0 c= * part cclosure f0 f0
D frontier
A |- (!s. ((frontier s) = ((closure s) DIFF (interior s))))
T c= * part cfrontier f0 * * part cDIFF * part cclosure f0 * part cinterior f0
D CLOSED_INTERVAL
A |- (!a. (!b. (closed (closed_interval ((CONS (a , b)) NIL)))))
T cclosed * part cclosed_interval cCONS c, f0 f1 cNIL
D INTERIOR_CLOSED_INTERVAL
A |- (!a. (!b. ((interior (closed_interval ((CONS (a , b)) NIL))) = (open_interval (a , b)))))
T c= * part cinterior * part cclosed_interval cCONS c, f0 f1 cNIL * part copen_interval c, f0 f1
+ |- ((\s. ((closed s) ==> ((closure s) = s))) s)
T * / c==> cclosed b0 c= * part cclosure b0 b0 f0
- (closed s) |- ((closed s) /\ ((closure s) = s))
T c==> cclosed f0 c/\ cclosed f0 c= * part cclosure f0 f0
