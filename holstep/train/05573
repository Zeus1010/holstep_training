N More_lemma2.MEM_CORE
C |- (!L. (!N. (!r. (!x. (!k. ((((MEM d) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST d)) ((core L) r))))))))
T c==> c/\ cMEM f0 f1 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f1 f4 c~ cfinal_list f2 f1 cMEM cFST f0 ccore f2 f1
D TRUTH
A |- T
T cT
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D MEM_MAP
A |- (!f. (!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x))))))))
T c= cMEM f0 cMAP f1 f2 c? / c/\ cMEM b0 f2 c= f0 * f1 b0
D Seq.allP
A |- (!a. (!s. ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))))
T c= ! c==> cMEM b0 f0 * f1 b0 call f1 f0
D Tame_defs2.good_list
A |- (!L. ((good_list L) = ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))))))
T c= cgood_list f0 c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0
D Tame_defs2.normal_list
A |- (!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))))))
T c= cnormal_list f0 f1 c/\ cuniq cflatten f1 c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1
D Tame_defs2.core
A |- (!L. (!r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r)))))
T c= ccore f0 f1 cMAP * * part co part cFST part cHD cparts f0 f1
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Tame_list.MEMf_MAP
A |- (!f. (!x. (!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u))))))
T c==> cMEM f0 f1 cMEM * f2 f0 cMAP f2 f1
D Tame_list.uniq_flatten_uniq
A |- (!L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s))))
T c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1
D Tame_list.LYNVPSU
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((all uniq) ((quotient_list L) N)))))))
T c==> cmarked_list f0 f1 f2 f3 call part cuniq cquotient_list f0 f1
D Tame_list.parts_fst
A |- (!L. (!N. (!r. (!p. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> ((FST x) = (FST (HD p)))))))))
T c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 cMEM f4 f3 c= cFST f4 cFST cHD f3
D Tame_list.quotient_list_core
A |- (!L. (!N. (((quotient_list L) N) = ((MAP (core L)) N))))
T c= cquotient_list f0 f1 cMAP * part ccore f0 f1
D Aq8.parts_mem_exists
A |- (!L. (!r. (((uniq r) /\ ((MEM x) r)) ==> (?p. (((MEM p) ((parts L) r)) /\ ((MEM x) p))))))
T c==> c/\ cuniq f0 cMEM f1 f0 c? / c/\ cMEM b0 cparts f2 f0 cMEM f1 b0
+ (uniq (flatten N)), (good_list L), ((MEM d) r), ((MEM r) N), ((normal_list L) N) |- ((((uniq (flatten N)) /\ ((MEM r) N)) ==> (uniq r)) ==> ((MEM (FST d)) ((MAP (FST o HD)) ((parts L) r))))
T c==> cuniq cflatten f0 c==> cgood_list f1 c==> cMEM f2 f3 c==> cMEM f3 f0 c==> cnormal_list f1 f0 c==> c==> c/\ cuniq cflatten f0 cMEM f3 f0 cuniq f3 cMEM cFST f2 cMAP * * part co part cFST part cHD cparts f1 f3
+ (uniq r), ((MEM d) r) |- (((?p. (((MEM p) ((parts L) r)) /\ ((MEM d) p))) ==> ((MEM (FST d)) ((MAP (FST o HD)) ((parts L) r)))) = ((((uniq r) /\ ((MEM d) r)) ==> (?p. (((MEM p) ((parts L) r)) /\ ((MEM d) p)))) ==> ((MEM (FST d)) ((MAP (FST o HD)) ((parts L) r)))))
T c==> cuniq f0 c==> cMEM f1 f0 c= c==> c? / c/\ cMEM b0 cparts f2 f0 cMEM f1 b0 cMEM cFST f1 cMAP * * part co part cFST part cHD cparts f2 f0 c==> c==> c/\ cuniq f0 cMEM f1 f0 c? / c/\ cMEM b0 cparts f2 f0 cMEM f1 b0 cMEM cFST f1 cMAP * * part co part cFST part cHD cparts f2 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((MEM (FST d)) ((core L) r))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f4 f1 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c==> cmarked_list f0 f3 f1 f2 cMEM cFST f4 ccore f0 f1
+ |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0
+ |- (((!r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r)))) ==> ((\r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r)))) r)) = ((\r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r)))) r))
T c= c==> ! c= ccore f0 b0 cMAP * * part co part cFST part cHD cparts f0 b0 * / c= ccore f0 b0 cMAP * * part co part cFST part cHD cparts f0 b0 f1 * / c= ccore f0 b0 cMAP * * part co part cFST part cHD cparts f0 b0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((MEM (FST d)) ((core L) r))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f6 f1 c==> cMEM f3 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 cMEM cFST f6 ccore f0 f1
+ (((all a) s) = (!x. (((MEM x) s) ==> (a x)))) |- ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))
T c==> c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0 c= ! c==> cMEM b0 f1 * f0 b0 call f0 f1
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), (((find_face L) x) = f), ((MEM d) r), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> ((MEM (FST d)) ((core L) r)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> c= cfind_face f0 f2 f4 c==> cMEM f5 f1 c==> cmarked_list f0 f6 f1 f2 c==> c= cfind_face f0 f2 f4 cMEM cFST f5 ccore f0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))))), ((MEM d) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM (FST d)) ((core L) r))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 cs_flag_list f0 f5 f1 f3 c==> cMEM f6 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 cMEM cFST f6 ccore f0 f1
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
- |- ((((find_face L) x) = f) = ((\f. (((find_face L) x) = f)) f))
T c= c= cfind_face f0 f1 f2 * / c= cfind_face f0 f1 b0 f2
- ((\w. (((next_el ((find_face L) x)) x) = w)) w) |- (((\w. (((next_el ((find_face L) x)) x) = w)) w) /\ (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c/\ * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
+ |- (((((uniq r) /\ ((MEM d) r)) ==> (?p. (((MEM p) ((parts L) r)) /\ ((MEM d) p)))) ==> ((MEM (FST d)) ((MAP (FST o HD)) ((parts L) r)))) = ((MEM (FST d)) ((MAP (FST o HD)) ((parts L) r))))
T c= c==> c==> c/\ cuniq f0 cMEM f1 f0 c? / c/\ cMEM b0 cparts f2 f0 cMEM f1 b0 cMEM cFST f1 cMAP * * part co part cFST part cHD cparts f2 f0 cMEM cFST f1 cMAP * * part co part cFST part cHD cparts f2 f0
- (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
+ ((\w. (((next_el ((find_face L) x)) x) = w)) w) |- (((((next_el ((find_face L) x)) x) = w) ==> ((MEM (FST d)) ((core L) r))) = ((MEM (FST d)) ((core L) r)))
T c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c= c==> c= cnext_el cfind_face f0 f1 f1 f2 cMEM cFST f3 ccore f0 f4 cMEM cFST f3 ccore f0 f4
+ (good_list L), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((MEM (FST d)) ((core L) r))))))
T c==> cgood_list f0 c==> cMEM f1 f2 c==> cMEM f3 f2 c==> cMEM f2 f4 c==> cnormal_list f0 f4 c==> cmarked_list f0 f4 f2 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f3 c==> cs_flag_list f0 f4 f2 f3 cMEM cFST f1 ccore f0 f2
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), ((MEM d) r), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) /\ ((((find_face L) x) = f) ==> ((MEM (FST d)) ((core L) r))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> cMEM f5 f1 c==> cmarked_list f0 f6 f1 f3 c/\ c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 cMEM cFST f5 ccore f0 f1
+ (good_list L), ((MEM d) r), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((MEM (FST d)) ((core L) r))))))))
T c==> cgood_list f0 c==> cMEM f1 f2 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f2 f4 c==> cMEM f2 f3 c==> cMEM f4 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f2 f4 cMEM cFST f1 ccore f0 f2
- (good_list L), (good_list_nodes L), ((MEM d) r), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> ((MEM (FST d)) ((core L) r)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f1 f2 c==> cmarked_list f0 f3 f2 f4 c==> c~ cfinal_list f0 f2 c==> c= cnext_el f5 f4 f6 c==> c= cfind_face f0 f4 f5 cMEM cFST f1 ccore f0 f2
+ (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) ==> ((MEM (FST d)) ((core L) r)))
T c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f4 f1 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c==> cmarked_list f0 f3 f1 f2 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 cMEM cFST f4 ccore f0 f1
+ |- (((!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) ==> ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)) = ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L))
T c= c==> ! ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
+ ((((marked_list L) N) r) x) |- (((!x. (((MEM x) ((MAP (core L)) N)) ==> (uniq x))) ==> ((MEM (FST d)) ((core L) r))) = ((((((marked_list L) N) r) x) ==> ((all uniq) ((quotient_list L) N))) ==> ((MEM (FST d)) ((core L) r))))
T c==> cmarked_list f0 f1 f2 f3 c= c==> ! c==> cMEM b0 cMAP * part ccore f0 f1 cuniq b0 cMEM cFST f4 ccore f0 f2 c==> c==> cmarked_list f0 f1 f2 f3 call part cuniq cquotient_list f0 f1 cMEM cFST f4 ccore f0 f2
- (good_list L), ((MEM d) r), ((MEM r) N), ((normal_list L) N) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((core L) r)) ==> ((MEM (FST d)) ((MAP (FST o HD)) ((parts L) r)))))))))))))
T c==> cgood_list f0 c==> cMEM f1 f2 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c/\ cMEM f2 f3 c==> cMEM f4 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f2 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f2 cMEM cFST f1 cMAP * * part co part cFST part cHD cparts f0 f2
+ (good_list L), ((MEM d) r), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((MEM (FST d)) ((core L) r))))))))))))))
T c==> cgood_list f0 c==> cMEM f1 f2 c==> cmarked_list f0 f3 f2 f4 c/\ cmarked_list f0 f3 f2 f4 c==> c~ cfinal_list f0 f2 c==> c= cnext_el f5 f4 f6 c==> c= cfind_face f0 f4 f5 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f3 c==> cMEM f2 f3 c==> cMEM f4 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f2 f4 cMEM cFST f1 ccore f0 f2
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((find_face L) x) = f), ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM (FST d)) ((core L) r))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cfind_face f0 f3 f2 c==> c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 cs_flag_list f0 f5 f1 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f6 f1 c==> cMEM f3 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 cMEM cFST f6 ccore f0 f1
- (?p. (((MEM p) ((parts L) r)) /\ ((MEM d) p))), (good_list L), ((MEM r) N), ((normal_list L) N) |- ((MEM (FST d)) ((MAP (FST o HD)) ((parts L) r)))
T c==> c? / c/\ cMEM b0 cparts f0 f1 cMEM f2 b0 c==> cgood_list f0 c==> cMEM f1 f3 c==> cnormal_list f0 f3 cMEM cFST f2 cMAP * * part co part cFST part cHD cparts f0 f1
+ |- ((\r. (!x. (((((marked_list L) N) r) x) ==> ((all uniq) ((quotient_list L) N))))) r)
T * / ! c==> cmarked_list f0 f1 b0 b1 call part cuniq cquotient_list f0 f1 f2
+ (good_list L), ((MEM d) r), ((((marked_list L) N) r) x) |- (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((MEM (FST d)) ((core L) r)))))))))
T c==> cgood_list f0 c==> cMEM f1 f2 c==> cmarked_list f0 f3 f2 f4 c==> cnormal_list f0 f3 c==> cMEM f2 f3 c==> cMEM f4 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f2 f4 cMEM cFST f1 ccore f0 f2
+ (good_list L), ((MEM d) r), ((MEM r) N), ((normal_list L) N) |- ((uniq ((core L) r)) ==> ((MEM (FST d)) ((MAP (FST o HD)) ((parts L) r))))
T c==> cgood_list f0 c==> cMEM f1 f2 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c==> cuniq ccore f0 f2 cMEM cFST f1 cMAP * * part co part cFST part cHD cparts f0 f2
+ (uniq (flatten N)) |- ((uniq (flatten N)) = T)
T c==> cuniq cflatten f0 c= cuniq cflatten f0 cT
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((MEM (FST d)) ((MAP (FST o HD)) ((parts L) r)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f4 f1 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 cMEM cFST f4 cMAP * * part co part cFST part cHD cparts f0 f1
+ |- ((\r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r)))) r)
T * / c= ccore f0 b0 cMAP * * part co part cFST part cHD cparts f0 b0 f1
+ |- ((\u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u)))) u)
T * / c==> cMEM f0 b0 cMEM * f1 f0 cMAP f1 b0 f2
+ |- (((!q'. ((((MEM ((core L) r)) ((MAP (core L)) N)) = p') ==> ((p' ==> ((uniq ((core L) r)) = q')) ==> ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = (p' ==> q'))))) ==> ((\q'. ((((MEM ((core L) r)) ((MAP (core L)) N)) = p') ==> ((p' ==> ((uniq ((core L) r)) = q')) ==> ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = (p' ==> q'))))) q')) = ((\q'. ((((MEM ((core L) r)) ((MAP (core L)) N)) = p') ==> ((p' ==> ((uniq ((core L) r)) = q')) ==> ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cMEM ccore f0 f1 cMAP * part ccore f0 f2 f3 c==> c==> f3 c= cuniq ccore f0 f1 b0 c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c==> f3 b0 * / c==> c= cMEM ccore f0 f1 cMAP * part ccore f0 f2 f3 c==> c==> f3 c= cuniq ccore f0 f1 b0 c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c==> f3 b0 f4 * / c==> c= cMEM ccore f0 f1 cMAP * part ccore f0 f2 f3 c==> c==> f3 c= cuniq ccore f0 f1 b0 c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c==> f3 b0 f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((MEM d) r), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> ((MEM (FST d)) ((core L) r))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f2 f1 c==> cmarked_list f0 f3 f1 f4 c==> c= cnext_el f5 f4 f6 c==> c= cfind_face f0 f4 f5 cMEM cFST f2 ccore f0 f1
+ |- ((\s. (((uniq (flatten N)) /\ ((MEM s) N)) ==> (uniq s))) r)
T * / c==> c/\ cuniq cflatten f0 cMEM b0 f0 cuniq b0 f1
+ (good_list L), ((MEM d) r), ((MEM r) N), ((normal_list L) N) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((core L) r)) ==> ((MEM (FST d)) ((MAP (FST o HD)) ((parts L) r)))))))
T c==> cgood_list f0 c==> cMEM f1 f2 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f2 cMEM cFST f1 cMAP * * part co part cFST part cHD cparts f0 f2
+ (good_list L), ((MEM d) r), ((MEM r) N), ((normal_list L) N) |- (((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))) ==> ((MEM (FST d)) ((MAP (FST o HD)) ((parts L) r))))
T c==> cgood_list f0 c==> cMEM f1 f2 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c==> c/\ cuniq cflatten f3 c/\ call / c~ c= b0 cNIL f3 c/\ call * part cf_last f0 f3 c/\ call * part cloop_list f0 f3 ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 cMEM cFST f1 cMAP * * part co part cFST part cHD cparts f0 f2
+ |- (((T ==> ((uniq ((core L) r)) = (uniq ((core L) r)))) ==> ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = (T ==> (uniq ((core L) r))))) = ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = (T ==> (uniq ((core L) r)))))
T c= c==> c==> cT c= cuniq ccore f0 f1 cuniq ccore f0 f1 c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c==> cT cuniq ccore f0 f1 c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c==> cT cuniq ccore f0 f1
- |- (((!q'. (((uniq ((core L) r)) = p') ==> ((p' ==> (((MEM (FST d)) ((core L) r)) = q')) ==> (((uniq ((core L) r)) ==> ((MEM (FST d)) ((core L) r))) = (p' ==> q'))))) ==> ((\q'. (((uniq ((core L) r)) = p') ==> ((p' ==> (((MEM (FST d)) ((core L) r)) = q')) ==> (((uniq ((core L) r)) ==> ((MEM (FST d)) ((core L) r))) = (p' ==> q'))))) q')) = ((\q'. (((uniq ((core L) r)) = p') ==> ((p' ==> (((MEM (FST d)) ((core L) r)) = q')) ==> (((uniq ((core L) r)) ==> ((MEM (FST d)) ((core L) r))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cuniq ccore f0 f1 f2 c==> c==> f2 c= cMEM cFST f3 ccore f0 f1 b0 c= c==> cuniq ccore f0 f1 cMEM cFST f3 ccore f0 f1 c==> f2 b0 * / c==> c= cuniq ccore f0 f1 f2 c==> c==> f2 c= cMEM cFST f3 ccore f0 f1 b0 c= c==> cuniq ccore f0 f1 cMEM cFST f3 ccore f0 f1 c==> f2 b0 f4 * / c==> c= cuniq ccore f0 f1 f2 c==> c==> f2 c= cMEM cFST f3 ccore f0 f1 b0 c= c==> cuniq ccore f0 f1 cMEM cFST f3 ccore f0 f1 c==> f2 b0 f4
+ |- ((\L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s)))) N)
T * / ! c==> c/\ cuniq cflatten b0 cMEM b1 b0 cuniq b1 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), (((find_face L) x) = f), ((MEM d) r), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) /\ ((MEM (FST d)) ((core L) r)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> c= cfind_face f0 f2 f4 c==> cMEM f5 f1 c==> cmarked_list f0 f6 f1 f2 c/\ c= cfind_face f0 f2 f4 cMEM cFST f5 ccore f0 f1
+ (good_list L), (good_list_nodes L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))), ((MEM d) r) |- ((MEM (FST d)) ((core L) r))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c==> cMEM f4 f2 cMEM cFST f4 ccore f0 f2
+ (uniq (flatten N)), ((MEM r) N) |- (((uniq r) ==> ((MEM (FST d)) ((MAP (FST o HD)) ((parts L) r)))) = ((((uniq (flatten N)) /\ ((MEM r) N)) ==> (uniq r)) ==> ((MEM (FST d)) ((MAP (FST o HD)) ((parts L) r)))))
T c==> cuniq cflatten f0 c==> cMEM f1 f0 c= c==> cuniq f1 cMEM cFST f2 cMAP * * part co part cFST part cHD cparts f3 f1 c==> c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1 cMEM cFST f2 cMAP * * part co part cFST part cHD cparts f3 f1
+ |- (((!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) ==> ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)) = ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s))
T c= c==> ! c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), ((MEM d) r), ((((marked_list L) N) r) x) |- ((MEM (FST d)) ((core L) r))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> cMEM f4 f1 c==> cmarked_list f0 f5 f1 f2 cMEM cFST f4 ccore f0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((MEM d) r), ((((marked_list L) N) r) x) |- (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((MEM (FST d)) ((core L) r)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cMEM f5 f1 c==> cmarked_list f0 f6 f1 f3 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 cMEM cFST f5 ccore f0 f1
- (((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) |- ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = T)
T c==> c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 cT
+ |- ((((MEM p) ((parts L) r)) /\ ((FST (HD p)) = ((FST o HD) p))) = ((\x. (((MEM x) ((parts L) r)) /\ ((FST (HD p)) = ((FST o HD) x)))) p))
T c= c/\ cMEM f0 cparts f1 f2 c= cFST cHD f0 co part cFST part cHD f0 * / c/\ cMEM b0 cparts f1 f2 c= cFST cHD f0 co part cFST part cHD b0 f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- (((find_face L) x) = f) |- ((((find_face L) x) = f) /\ (?f. (((find_face L) x) = f)))
T c==> c= cfind_face f0 f1 f2 c/\ c= cfind_face f0 f1 f2 c? / c= cfind_face f0 f1 b0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((find_face L) x) = f), (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM (FST d)) ((core L) r))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cfind_face f0 f3 f2 c==> c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 cs_flag_list f0 f5 f1 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f6 f1 c==> cMEM f3 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 cMEM cFST f6 ccore f0 f1
+ (good_list L), ((MEM r) N), ((normal_list L) N) |- ((((\p. (((MEM p) ((parts L) r)) /\ ((MEM d) p))) p) ==> ((MEM (FST d)) ((MAP (FST o HD)) ((parts L) r)))) = T)
T c==> cgood_list f0 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c= c==> * / c/\ cMEM b0 cparts f0 f1 cMEM f3 b0 f4 cMEM cFST f3 cMAP * * part co part cFST part cHD cparts f0 f1 cT
+ ((MEM r) N) |- (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) ==> ((MEM (FST d)) ((core L) r))) = ((uniq ((core L) r)) ==> ((MEM (FST d)) ((core L) r))))
T c==> cMEM f0 f1 c= c==> c==> cMEM ccore f2 f0 cMAP * part ccore f2 f1 cuniq ccore f2 f0 cMEM cFST f3 ccore f2 f0 c==> cuniq ccore f2 f0 cMEM cFST f3 ccore f2 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((uniq ((core L) r)) /\ ((MEM (FST d)) ((core L) r)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f4 f1 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c/\ cuniq ccore f0 f1 cMEM cFST f4 ccore f0 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), ((MEM d) r), ((((marked_list L) N) r) x) |- (!f. (((\f. (((find_face L) x) = f)) f) ==> ((MEM (FST d)) ((core L) r))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> cMEM f4 f1 c==> cmarked_list f0 f5 f1 f2 ! c==> * / c= cfind_face f0 f2 b1 b0 cMEM cFST f4 ccore f0 f1
+ (good_list L), ((MEM r) N), ((normal_list L) N) |- (((\p. (((MEM p) ((parts L) r)) /\ ((MEM d) p))) p) ==> ((MEM (FST d)) ((MAP (FST o HD)) ((parts L) r))))
T c==> cgood_list f0 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> * / c/\ cMEM b0 cparts f0 f1 cMEM f3 b0 f4 cMEM cFST f3 cMAP * * part co part cFST part cHD cparts f0 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((MEM d) r), ((((marked_list L) N) r) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))) ==> ((MEM (FST d)) ((core L) r)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cMEM f5 f1 c==> cmarked_list f0 f6 f1 f3 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f6 c/\ cMEM f1 f6 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 cs_flag_list f0 f6 f1 f3 cMEM cFST f5 ccore f0 f1
+ (good_list L), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((MEM (FST d)) ((core L) r))))))
T c==> cgood_list f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f2 f3 c==> cMEM f4 f3 c==> cMEM f3 f1 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f3 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f4 c==> cs_flag_list f0 f1 f3 f4 cMEM cFST f2 ccore f0 f3
+ (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ (((((s_flag_list L) N) r) x) ==> ((MEM (FST d)) ((core L) r))))
T c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f4 f1 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cs_flag_list f0 f3 f1 f2 cMEM cFST f4 ccore f0 f1
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))) = T)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c= c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0 cT
+ |- (((?w. (((next_el ((find_face L) x)) x) = w)) ==> ((MEM (FST d)) ((core L) r))) = ((MEM (FST d)) ((core L) r)))
T c= c==> c? / c= cnext_el cfind_face f0 f1 f1 b0 cMEM cFST f2 ccore f0 f3 cMEM cFST f2 ccore f0 f3
+ (good_list L), ((MEM d) r), ((MEM r) N), ((normal_list L) N) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((core L) r)) ==> ((MEM (FST d)) ((MAP (FST o HD)) ((parts L) r))))))))))))
T c==> cgood_list f0 c==> cMEM f1 f2 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c==> cMEM f4 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f2 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f2 cMEM cFST f1 cMAP * * part co part cFST part cHD cparts f0 f2
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((MEM (FST d)) ((core L) r))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 cMEM cFST f5 ccore f0 f1
+ ((MEM r) N) |- (((MEM ((core L) r)) ((MAP (core L)) N)) = T)
T c==> cMEM f0 f1 c= cMEM ccore f2 f0 cMAP * part ccore f2 f1 cT
+ |- ((\q'. (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = p') ==> ((p' ==> (((MEM (FST d)) ((core L) r)) = q')) ==> (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) ==> ((MEM (FST d)) ((core L) r))) = (p' ==> q'))))) q')
T * / c==> c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 f3 c==> c==> f3 c= cMEM cFST f4 ccore f0 f1 b0 c= c==> c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 cMEM cFST f4 ccore f0 f1 c==> f3 b0 f5
+ (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((MEM (FST d)) ((core L) r))
T c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f4 f1 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c==> cmarked_list f0 f3 f1 f2 cMEM cFST f4 ccore f0 f1
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((\l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))) l)
T * / c= cMEM f0 cMAP f1 b0 c? / c/\ cMEM b1 b0 c= f0 * f1 b1 f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((MEM d) r), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> ((MEM (FST d)) ((core L) r)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f2 f1 c==> cmarked_list f0 f3 f1 f4 c/\ c~ cfinal_list f0 f1 c==> c= cnext_el f5 f4 f6 c==> c= cfind_face f0 f4 f5 cMEM cFST f2 ccore f0 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))) = T)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c= c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((MEM d) r), ((((marked_list L) N) r) x) |- (((\w. (((next_el ((find_face L) x)) x) = w)) w) ==> ((MEM (FST d)) ((core L) r)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f2 f1 c==> cmarked_list f0 f3 f1 f4 c==> * / c= cnext_el cfind_face f0 f4 f4 b0 f5 cMEM cFST f2 ccore f0 f1
- (?p. (((MEM p) ((parts L) r)) /\ ((MEM d) p))), (good_list L), ((MEM r) N), ((normal_list L) N) |- ((?p. (((MEM p) ((parts L) r)) /\ ((MEM d) p))) /\ ((MEM (FST d)) ((MAP (FST o HD)) ((parts L) r))))
T c==> c? / c/\ cMEM b0 cparts f0 f1 cMEM f2 b0 c==> cgood_list f0 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c/\ c? / c/\ cMEM b0 cparts f0 f1 cMEM f2 b0 cMEM cFST f2 cMAP * * part co part cFST part cHD cparts f0 f1
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
+ (((next_el ((find_face L) x)) x) = w), (((find_face L) x) = f) |- (((next_el f) x) = w)
T c==> c= cnext_el cfind_face f0 f1 f1 f2 c==> c= cfind_face f0 f1 f3 c= cnext_el f3 f1 f2
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
- |- ((\q'. (((uniq ((core L) r)) = p') ==> ((p' ==> (((MEM (FST d)) ((core L) r)) = q')) ==> (((uniq ((core L) r)) ==> ((MEM (FST d)) ((core L) r))) = (p' ==> q'))))) q')
T * / c==> c= cuniq ccore f0 f1 f2 c==> c==> f2 c= cMEM cFST f3 ccore f0 f1 b0 c= c==> cuniq ccore f0 f1 cMEM cFST f3 ccore f0 f1 c==> f2 b0 f4
+ |- (((!x. (!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u))))) ==> ((\x. (!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u))))) x)) = ((\x. (!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u))))) x))
T c= c==> ! ! c==> cMEM b0 b1 cMEM * f0 b0 cMAP f0 b1 * / ! c==> cMEM b0 b1 cMEM * f0 b0 cMAP f0 b1 f1 * / ! c==> cMEM b0 b1 cMEM * f0 b0 cMAP f0 b1 f1
+ (good_list L), ((MEM d) r), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((MEM (FST d)) ((core L) r))))))))))))
T c==> cgood_list f0 c==> cMEM f1 f2 c==> cmarked_list f0 f3 f2 f4 c==> c= cnext_el f5 f4 f6 c==> c= cfind_face f0 f4 f5 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f3 c==> cMEM f2 f3 c==> cMEM f4 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f2 f4 cMEM cFST f1 ccore f0 f2
+ (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((MEM (FST d)) ((core L) r)))))
T c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f4 f1 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 c/\ c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cs_flag_list f0 f3 f1 f2 cMEM cFST f4 ccore f0 f1
- |- ((?f. (((find_face L) x) = f)) ==> (?f. (((find_face L) x) = f)))
T c==> c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0
+ (good_list L), ((MEM d) r), ((MEM r) N), ((normal_list L) N) |- (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((core L) r)) ==> ((MEM (FST d)) ((MAP (FST o HD)) ((parts L) r))))))))
T c==> cgood_list f0 c==> cMEM f1 f2 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f2 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f2 cMEM cFST f1 cMAP * * part co part cFST part cHD cparts f0 f2
+ |- ((\f. (!x. (!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u)))))) f)
T * / ! ! c==> cMEM b1 b2 cMEM * b0 b1 cMAP b0 b2 f0
- |- ((?x. t) = t)
T c= c? / f0 f0
- ((all (loop_list L)) N) |- (((all (loop_list L)) N) = T)
T c==> call * part cloop_list f0 f1 c= call * part cloop_list f0 f1 cT
- ((all (\s. (~ (s = NIL)))) N) |- (((all (\s. (~ (s = NIL)))) N) = T)
T c==> call / c~ c= b0 cNIL f0 c= call / c~ c= b0 cNIL f0 cT
- |- (((uniq ((core L) r)) ==> ((MEM (FST d)) ((core L) r))) = ((uniq ((core L) r)) ==> ((MEM (FST d)) ((core L) r))))
T c= c==> cuniq ccore f0 f1 cMEM cFST f2 ccore f0 f1 c==> cuniq ccore f0 f1 cMEM cFST f2 ccore f0 f1
- ((MEM r) N) |- (T = ((MEM r) N))
T c==> cMEM f0 f1 c= cT cMEM f0 f1
- |- (((!p'. (!q'. (((uniq ((core L) r)) = p') ==> ((p' ==> (((MEM (FST d)) ((core L) r)) = q')) ==> (((uniq ((core L) r)) ==> ((MEM (FST d)) ((core L) r))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((uniq ((core L) r)) = p') ==> ((p' ==> (((MEM (FST d)) ((core L) r)) = q')) ==> (((uniq ((core L) r)) ==> ((MEM (FST d)) ((core L) r))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((uniq ((core L) r)) = p') ==> ((p' ==> (((MEM (FST d)) ((core L) r)) = q')) ==> (((uniq ((core L) r)) ==> ((MEM (FST d)) ((core L) r))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cuniq ccore f0 f1 b0 c==> c==> b0 c= cMEM cFST f2 ccore f0 f1 b1 c= c==> cuniq ccore f0 f1 cMEM cFST f2 ccore f0 f1 c==> b0 b1 * / ! c==> c= cuniq ccore f0 f1 b0 c==> c==> b0 c= cMEM cFST f2 ccore f0 f1 b1 c= c==> cuniq ccore f0 f1 cMEM cFST f2 ccore f0 f1 c==> b0 b1 f3 * / ! c==> c= cuniq ccore f0 f1 b0 c==> c==> b0 c= cMEM cFST f2 ccore f0 f1 b1 c= c==> cuniq ccore f0 f1 cMEM cFST f2 ccore f0 f1 c==> b0 b1 f3
- |- ((((\f. (((find_face L) x) = f)) f) ==> (?f. (((find_face L) x) = f))) = T)
T c= c==> * / c= cfind_face f0 f1 b0 f2 c? / c= cfind_face f0 f1 b0 cT
- T |- (T = T)
T c==> cT c= cT cT
- |- (((!x'. (((\w. (((next_el ((find_face L) x)) x) = w)) x') ==> (?w. (((next_el ((find_face L) x)) x) = w)))) ==> ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (?w. (((next_el ((find_face L) x)) x) = w)))) = ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (?w. (((next_el ((find_face L) x)) x) = w))))
T c= c==> ! c==> * / c= cnext_el cfind_face f0 f1 f1 b1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b1 c==> c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0 c==> c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0
- (!x. (((MEM x) ((MAP (core L)) N)) ==> (uniq x))) |- (((MEM x) ((MAP (core L)) N)) ==> (uniq x))
T c==> ! c==> cMEM b0 cMAP * part ccore f0 f1 cuniq b0 c==> cMEM f2 cMAP * part ccore f0 f1 cuniq f2
- |- ((((uniq ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) = ((MEM (FST d)) ((core L) r)))) ==> (((uniq ((core L) r)) ==> ((MEM (FST d)) ((core L) r))) = ((uniq ((core L) r)) ==> ((MEM (FST d)) ((core L) r))))) = (((uniq ((core L) r)) ==> ((MEM (FST d)) ((core L) r))) = ((uniq ((core L) r)) ==> ((MEM (FST d)) ((core L) r)))))
T c= c==> c==> cuniq ccore f0 f1 c= cMEM cFST f2 ccore f0 f1 cMEM cFST f2 ccore f0 f1 c= c==> cuniq ccore f0 f1 cMEM cFST f2 ccore f0 f1 c==> cuniq ccore f0 f1 cMEM cFST f2 ccore f0 f1 c= c==> cuniq ccore f0 f1 cMEM cFST f2 ccore f0 f1 c==> cuniq ccore f0 f1 cMEM cFST f2 ccore f0 f1
- (uniq ((core L) r)) |- ((uniq ((core L) r)) = T)
T c==> cuniq ccore f0 f1 c= cuniq ccore f0 f1 cT
- ((\w. (((next_el ((find_face L) x)) x) = w)) w) |- (((((next_el ((find_face L) x)) x) = w) ==> (?w. (((next_el ((find_face L) x)) x) = w))) = (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c= c==> c= cnext_el cfind_face f0 f1 f1 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0
- |- ((((uniq ((core L) r)) = (uniq ((core L) r))) ==> (((uniq ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) = q')) ==> (((uniq ((core L) r)) ==> ((MEM (FST d)) ((core L) r))) = ((uniq ((core L) r)) ==> q')))) = (((uniq ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) = q')) ==> (((uniq ((core L) r)) ==> ((MEM (FST d)) ((core L) r))) = ((uniq ((core L) r)) ==> q'))))
T c= c==> c= cuniq ccore f0 f1 cuniq ccore f0 f1 c==> c==> cuniq ccore f0 f1 c= cMEM cFST f2 ccore f0 f1 f3 c= c==> cuniq ccore f0 f1 cMEM cFST f2 ccore f0 f1 c==> cuniq ccore f0 f1 f3 c==> c==> cuniq ccore f0 f1 c= cMEM cFST f2 ccore f0 f1 f3 c= c==> cuniq ccore f0 f1 cMEM cFST f2 ccore f0 f1 c==> cuniq ccore f0 f1 f3
- ((\f. (((find_face L) x) = f)) f) |- (((((find_face L) x) = f) ==> (?f. (((find_face L) x) = f))) = (?f. (((find_face L) x) = f)))
T c==> * / c= cfind_face f0 f1 b0 f2 c= c==> c= cfind_face f0 f1 f2 c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0
- (good_list_nodes L) |- ((good_list_nodes L) = T)
T c==> cgood_list_nodes f0 c= cgood_list_nodes f0 cT
- |- (!f. (((\f. (((find_face L) x) = f)) f) ==> (?f. (((find_face L) x) = f))))
T c==> * / c= cfind_face f0 f1 b0 f2 c? / c= cfind_face f0 f1 b0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), ((MEM d) (list_of_darts L)) |- ((MEM ((SND d) , (FST d))) (list_of_darts L))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0
- (!x. (((MEM x) ((MAP (core L)) N)) ==> (uniq x))) |- ((\x. (((MEM x) ((MAP (core L)) N)) ==> (uniq x))) x)
T c==> ! c==> cMEM b0 cMAP * part ccore f0 f1 cuniq b0 * / c==> cMEM b0 cMAP * part ccore f0 f1 cuniq b0 f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((\d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) d)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 * / c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 f1
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((\d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) d)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 * / c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 f2
- ((((s_flag_list L) N) r) x) |- (((((s_flag_list L) N) r) x) = T)
T c==> cs_flag_list f0 f1 f2 f3 c= cs_flag_list f0 f1 f2 f3 cT
- |- ((((\w. (((next_el ((find_face L) x)) x) = w)) w) ==> (?w. (((next_el ((find_face L) x)) x) = w))) = T)
T c= c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0 cT
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((MEM (FST d)) ((core L) r))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c==> cMEM ccore f0 f1 cMAP * part ccore f0 f3 cuniq ccore f0 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f4 f1 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 cMEM cFST f4 ccore f0 f1
- (uniq (list_of_darts L)) |- ((uniq (list_of_darts L)) = T)
T c==> cuniq clist_of_darts f0 c= cuniq clist_of_darts f0 cT
- (good_list L), ((MEM d) r), ((normal_list L) N) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((core L) r)) ==> ((MEM (FST d)) ((MAP (FST o HD)) ((parts L) r)))))))))))))
T c==> cgood_list f0 c==> cMEM f1 f2 c==> cnormal_list f0 f3 c==> cMEM f2 f3 c==> cMEM f4 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c==> cs_flag_list f0 f3 f2 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq ccore f0 f2 cMEM cFST f1 cMAP * * part co part cFST part cHD cparts f0 f2
- |- ((((find_face L) x) = f) ==> (?f. (((find_face L) x) = f)))
T c==> c= cfind_face f0 f1 f2 c? / c= cfind_face f0 f1 b0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (uniq (list_of_darts L)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM d) r), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x) |- ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) /\ ((MEM (FST d)) ((core L) r)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c==> cMEM ccore f0 f1 cMAP * part ccore f0 f3 cuniq ccore f0 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f4 f1 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c/\ c==> cMEM ccore f0 f1 cMAP * part ccore f0 f3 cuniq ccore f0 f1 cMEM cFST f4 ccore f0 f1
- |- ((\p'. (!q'. (((uniq ((core L) r)) = p') ==> ((p' ==> (((MEM (FST d)) ((core L) r)) = q')) ==> (((uniq ((core L) r)) ==> ((MEM (FST d)) ((core L) r))) = (p' ==> q')))))) p')
T * / ! c==> c= cuniq ccore f0 f1 b0 c==> c==> b0 c= cMEM cFST f2 ccore f0 f1 b1 c= c==> cuniq ccore f0 f1 cMEM cFST f2 ccore f0 f1 c==> b0 b1 f3
- |- ((((next_el ((find_face L) x)) x) = w) ==> (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> c= cnext_el cfind_face f0 f1 f1 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0
- |- (!w. (((\w. (((next_el ((find_face L) x)) x) = w)) w) ==> (?w. (((next_el ((find_face L) x)) x) = w))))
T c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
- |- ((((MEM x) u) ==> ((MEM (f x)) ((MAP f) u))) = T)
T c= c==> cMEM f0 f1 cMEM * f2 f0 cMAP f2 f1 cT
- ((\f. (((find_face L) x) = f)) f) |- (((\f. (((find_face L) x) = f)) f) /\ (?f. (((find_face L) x) = f)))
T c==> * / c= cfind_face f0 f1 b0 f2 c/\ * / c= cfind_face f0 f1 b0 f2 c? / c= cfind_face f0 f1 b0
- |- ((((next_el ((find_face L) x)) x) = w) = ((\w. (((next_el ((find_face L) x)) x) = w)) w))
T c= c= cnext_el cfind_face f0 f1 f1 f2 * / c= cnext_el cfind_face f0 f1 f1 b0 f2
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c= cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 cT
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 cT
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((uniq ((core L) r)) ==> (((MEM (FST d)) ((core L) r)) = q')) ==> (((uniq ((core L) r)) ==> ((MEM (FST d)) ((core L) r))) = ((uniq ((core L) r)) ==> q')))
T c==> c==> cuniq ccore f0 f1 c= cMEM cFST f2 ccore f0 f1 f3 c= c==> cuniq ccore f0 f1 cMEM cFST f2 ccore f0 f1 c==> cuniq ccore f0 f1 f3
- |- (((!x. (((\f. (((find_face L) x) = f)) x) ==> (?f. (((find_face L) x) = f)))) ==> ((?f. (((find_face L) x) = f)) ==> (?f. (((find_face L) x) = f)))) = ((?f. (((find_face L) x) = f)) ==> (?f. (((find_face L) x) = f))))
T c= c==> ! c==> * / c= cfind_face f0 f1 b1 b0 c? / c= cfind_face f0 f1 b1 c==> c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0 c==> c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0
- (!x. (((MEM x) ((MAP (core L)) N)) ==> (uniq x))) |- ((((MEM x) ((MAP (core L)) N)) ==> (uniq x)) = T)
T c==> ! c==> cMEM b0 cMAP * part ccore f0 f1 cuniq b0 c= c==> cMEM f2 cMAP * part ccore f0 f1 cuniq f2 cT
- ((all (f_last L)) N) |- (((all (f_last L)) N) = T)
T c==> call * part cf_last f0 f1 c= call * part cf_last f0 f1 cT
- |- ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0
- (((find_face L) x) = f) |- ((\f. (((find_face L) x) = f)) f)
T c==> c= cfind_face f0 f1 f2 * / c= cfind_face f0 f1 b0 f2
- (((next_el ((find_face L) x)) x) = w) |- ((\w. (((next_el ((find_face L) x)) x) = w)) w)
T c==> c= cnext_el cfind_face f0 f1 f1 f2 * / c= cnext_el cfind_face f0 f1 f1 b0 f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- (((MEM d) (list_of_darts L)) ==> (((MEM ((SND d) , (FST d))) (list_of_darts L)) = T))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c= cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
- |- (((uniq ((core L) r)) = p') ==> ((p' ==> (((MEM (FST d)) ((core L) r)) = q')) ==> (((uniq ((core L) r)) ==> ((MEM (FST d)) ((core L) r))) = (p' ==> q'))))
T c==> c= cuniq ccore f0 f1 f2 c==> c==> f2 c= cMEM cFST f3 ccore f0 f1 f4 c= c==> cuniq ccore f0 f1 cMEM cFST f3 ccore f0 f1 c==> f2 f4
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), ((MEM d) (list_of_darts L)) |- (((MEM d) (list_of_darts L)) /\ (((MEM ((SND d) , (FST d))) (list_of_darts L)) = T))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c/\ cMEM f1 clist_of_darts f0 c= cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
- (((next_el ((find_face L) x)) x) = w) |- ((((next_el ((find_face L) x)) x) = w) /\ (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> c= cnext_el cfind_face f0 f1 f1 f2 c/\ c= cnext_el cfind_face f0 f1 f1 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
