N RECTIFIABLE_PATH_SUBPATH_EQ
C |- (!g. (!s. (!t. ((rectifiable_path (((subpath s) t) g)) = ((path (((subpath s) t) g)) /\ ((has_bounded_variation_on g) (closed_segment ((CONS (s , t)) NIL))))))))
T c= crectifiable_path * * * part csubpath f0 f1 f2 c/\ cpath * * * part csubpath f0 f1 f2 chas_bounded_variation_on f2 * part cclosed_segment cCONS c, f0 f1 cNIL
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D COND_ELIM_THM
A |- ((P (((COND c) x) y)) = ((c ==> (P x)) /\ ((~ c) ==> (P y))))
T c= * f0 cCOND f1 f2 f3 c/\ c==> f1 * f0 f2 c==> c~ f1 * f0 f3
D PAIR_EQ
A |- (!x. (!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))))
T c= c= c, f0 f1 c, f2 f3 c/\ c= f0 f2 c= f1 f3
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D CONS_11
A |- (!h1. (!h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2)))))))
T c= c= cCONS f0 f1 cCONS f2 f3 c/\ c= f0 f2 c= f1 f3
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D VECTOR_ADD_SYM
A |- (!x. (!y. (((vector_add x) y) = ((vector_add y) x))))
T c= cvector_add f0 f1 cvector_add f1 f0
D DROP_EQ
A |- (!x. (!y. (((drop x) = (drop y)) = (x = y))))
T c= c= cdrop f0 cdrop f1 c= f0 f1
D DROP_VEC
A |- (!n. ((drop (vec n)) = (real_of_num n)))
T c= cdrop cvec f0 creal_of_num f0
D DROP_ADD
A |- (!x. (!y. ((drop ((vector_add x) y)) = ((real_add (drop x)) (drop y)))))
T c= cdrop cvector_add f0 f1 creal_add cdrop f0 cdrop f1
D DROP_SUB
A |- (!x. (!y. ((drop ((vector_sub x) y)) = ((real_sub (drop x)) (drop y)))))
T c= cdrop cvector_sub f0 f1 creal_sub cdrop f0 cdrop f1
D DROP_CMUL
A |- (!x. (!c. ((drop ((% c) x)) = ((real_mul c) (drop x)))))
T c= cdrop c% f0 f1 creal_mul f0 cdrop f1
D SEGMENT_REFL
A |- ((!a. ((closed_segment ((CONS (a , a)) NIL)) = (a INSERT EMPTY))) /\ (!a. ((open_segment (a , a)) = EMPTY)))
T c/\ ! c= * part cclosed_segment cCONS c, b0 b0 cNIL * * part cINSERT b0 part cEMPTY ! c= * part copen_segment c, b0 b0 part cEMPTY
D UNIT_INTERVAL_NONEMPTY
A |- ((~ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) = EMPTY)) /\ (~ ((open_interval ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) = EMPTY)))
T c/\ c~ c= * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL part cEMPTY c~ c= * part copen_interval c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 part cEMPTY
D SEGMENT_1
A |- ((!a. (!b. ((closed_segment ((CONS (a , b)) NIL)) = (((COND ((real_le (drop a)) (drop b))) (closed_interval ((CONS (a , b)) NIL))) (closed_interval ((CONS (b , a)) NIL)))))) /\ (!a. (!b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a)))))))
T c/\ ! ! c= * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND creal_le cdrop b0 cdrop b1 * part cclosed_interval cCONS c, b0 b1 cNIL * part cclosed_interval cCONS c, b1 b0 cNIL ! ! c= * part copen_segment c, b0 b1 * * * part cCOND creal_le cdrop b0 cdrop b1 * part copen_interval c, b0 b1 * part copen_interval c, b1 b0
D IMAGE_AFFINITY_INTERVAL
A |- (!a. (!b. (!m. (!c. (((IMAGE (\x. ((vector_add ((% m) x)) c))) (closed_interval ((CONS (a , b)) NIL))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_interval ((CONS (((vector_add ((% m) a)) c) , ((vector_add ((% m) b)) c))) NIL))) (closed_interval ((CONS (((vector_add ((% m) b)) c) , ((vector_add ((% m) a)) c))) NIL)))))))))
T c= * * part cIMAGE / cvector_add c% f0 b0 f1 * part cclosed_interval cCONS c, f2 f3 cNIL * * * part cCOND c= * part cclosed_interval cCONS c, f2 f3 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 f0 * part cclosed_interval cCONS c, cvector_add c% f0 f2 f1 cvector_add c% f0 f3 f1 cNIL * part cclosed_interval cCONS c, cvector_add c% f0 f3 f1 cvector_add c% f0 f2 f1 cNIL
D subpath
A |- (!g. (!v. (!u. ((((subpath u) v) g) = (\x. (g ((vector_add u) ((% (drop ((vector_sub v) u))) x))))))))
T c= * * * part csubpath f0 f1 f2 / * f2 cvector_add f0 c% cdrop cvector_sub f1 f0 b0
D HAS_BOUNDED_VARIATION_AFFINITY_EQ
A |- (!m. (!c. (!f. (!s. (((has_bounded_variation_on (\x. (f ((vector_add ((% m) x)) c)))) s) = ((m = (real_of_num (NUMERAL _0))) \/ ((has_bounded_variation_on f) ((IMAGE (\x. ((vector_add ((% m) x)) c))) s))))))))
T c= chas_bounded_variation_on / * f0 cvector_add c% f1 b0 f2 f3 c\/ c= f1 creal_of_num cNUMERAL c_0 chas_bounded_variation_on f0 * * part cIMAGE / cvector_add c% f1 b0 f2 f3
D HAS_BOUNDED_VARIATION_ON_SING
A |- (!f. (!a. ((has_bounded_variation_on f) (a INSERT EMPTY))))
T chas_bounded_variation_on f0 * * part cINSERT f1 part cEMPTY
D rectifiable_path
A |- (!g. ((rectifiable_path g) = ((path g) /\ ((has_bounded_variation_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))
T c= crectifiable_path f0 c/\ cpath f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (~ ((real_le (drop s)) (drop t))) |- (((real_le (drop s)) (drop t)) = F)
T c==> c~ creal_le cdrop f0 cdrop f1 c= creal_le cdrop f0 cdrop f1 cF
+ |- (((!g. (!v. (!u. ((((subpath u) v) g) = (\x. (g ((vector_add u) ((% (drop ((vector_sub v) u))) x)))))))) ==> ((\g. (!v. (!u. ((((subpath u) v) g) = (\x. (g ((vector_add u) ((% (drop ((vector_sub v) u))) x)))))))) g)) = ((\g. (!v. (!u. ((((subpath u) v) g) = (\x. (g ((vector_add u) ((% (drop ((vector_sub v) u))) x)))))))) g))
T c= c==> ! ! ! c= * * * part csubpath b2 b1 b0 / * b0 cvector_add b2 c% cdrop cvector_sub b1 b2 b3 * / ! ! c= * * * part csubpath b2 b1 b0 / * b0 cvector_add b2 c% cdrop cvector_sub b1 b2 b3 f0 * / ! ! c= * * * part csubpath b2 b1 b0 / * b0 cvector_add b2 c% cdrop cvector_sub b1 b2 b3 f0
+ |- (((!s. (((has_bounded_variation_on (\x. (f ((vector_add ((% m) x)) c)))) s) = ((m = (real_of_num (NUMERAL _0))) \/ ((has_bounded_variation_on f) ((IMAGE (\x. ((vector_add ((% m) x)) c))) s))))) ==> ((\s. (((has_bounded_variation_on (\x. (f ((vector_add ((% m) x)) c)))) s) = ((m = (real_of_num (NUMERAL _0))) \/ ((has_bounded_variation_on f) ((IMAGE (\x. ((vector_add ((% m) x)) c))) s))))) s)) = ((\s. (((has_bounded_variation_on (\x. (f ((vector_add ((% m) x)) c)))) s) = ((m = (real_of_num (NUMERAL _0))) \/ ((has_bounded_variation_on f) ((IMAGE (\x. ((vector_add ((% m) x)) c))) s))))) s))
T c= c==> ! c= chas_bounded_variation_on / * f0 cvector_add c% f1 b1 f2 b0 c\/ c= f1 creal_of_num cNUMERAL c_0 chas_bounded_variation_on f0 * * part cIMAGE / cvector_add c% f1 b1 f2 b0 * / c= chas_bounded_variation_on / * f0 cvector_add c% f1 b1 f2 b0 c\/ c= f1 creal_of_num cNUMERAL c_0 chas_bounded_variation_on f0 * * part cIMAGE / cvector_add c% f1 b1 f2 b0 f3 * / c= chas_bounded_variation_on / * f0 cvector_add c% f1 b1 f2 b0 c\/ c= f1 creal_of_num cNUMERAL c_0 chas_bounded_variation_on f0 * * part cIMAGE / cvector_add c% f1 b1 f2 b0 f3
+ |- (((((drop ((vector_sub t) s)) = (real_of_num (NUMERAL _0))) \/ ((has_bounded_variation_on g) (((COND ((real_le (real_of_num (NUMERAL _0))) (drop ((vector_sub t) s)))) (closed_interval ((CONS (((vector_add ((% (drop ((vector_sub t) s))) (vec (NUMERAL _0)))) s) , ((vector_add ((% (drop ((vector_sub t) s))) (vec (NUMERAL (BIT1 _0))))) s))) NIL))) (closed_interval ((CONS (((vector_add ((% (drop ((vector_sub t) s))) (vec (NUMERAL (BIT1 _0))))) s) , ((vector_add ((% (drop ((vector_sub t) s))) (vec (NUMERAL _0)))) s))) NIL))))) = ((has_bounded_variation_on g) (closed_segment ((CONS (s , t)) NIL)))) = ((((drop ((vector_sub t) s)) = (real_of_num (NUMERAL _0))) \/ ((has_bounded_variation_on g) (((COND ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) (drop ((vector_sub t) s)))) (closed_interval ((CONS (((vector_add ((% (drop ((vector_sub t) s))) (vec (NUMERAL _0)))) s) , ((vector_add ((% (drop ((vector_sub t) s))) (vec (NUMERAL (BIT1 _0))))) s))) NIL))) (closed_interval ((CONS (((vector_add ((% (drop ((vector_sub t) s))) (vec (NUMERAL (BIT1 _0))))) s) , ((vector_add ((% (drop ((vector_sub t) s))) (vec (NUMERAL _0)))) s))) NIL)))))) = ((has_bounded_variation_on g) (closed_segment ((CONS (s , t)) NIL)))))
T c= c= c\/ c= cdrop cvector_sub f0 f1 creal_of_num cNUMERAL c_0 chas_bounded_variation_on f2 * * * part cCOND creal_le creal_of_num cNUMERAL c_0 cdrop cvector_sub f0 f1 * part cclosed_interval cCONS c, cvector_add c% cdrop cvector_sub f0 f1 cvec cNUMERAL c_0 f1 cvector_add c% cdrop cvector_sub f0 f1 cvec cNUMERAL cBIT1 c_0 f1 cNIL * part cclosed_interval cCONS c, cvector_add c% cdrop cvector_sub f0 f1 cvec cNUMERAL cBIT1 c_0 f1 cvector_add c% cdrop cvector_sub f0 f1 cvec cNUMERAL c_0 f1 cNIL chas_bounded_variation_on f2 * part cclosed_segment cCONS c, f1 f0 cNIL c= c\/ c= cdrop cvector_sub f0 f1 creal_of_num cNUMERAL c_0 chas_bounded_variation_on f2 * * * part cCOND c= * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 cdrop cvector_sub f0 f1 * part cclosed_interval cCONS c, cvector_add c% cdrop cvector_sub f0 f1 cvec cNUMERAL c_0 f1 cvector_add c% cdrop cvector_sub f0 f1 cvec cNUMERAL cBIT1 c_0 f1 cNIL * part cclosed_interval cCONS c, cvector_add c% cdrop cvector_sub f0 f1 cvec cNUMERAL cBIT1 c_0 f1 cvector_add c% cdrop cvector_sub f0 f1 cvec cNUMERAL c_0 f1 cNIL chas_bounded_variation_on f2 * part cclosed_segment cCONS c, f1 f0 cNIL
+ |- ((((~ ((((real_add ((real_mul ((real_sub (drop t)) (drop s))) (real_of_num (NUMERAL _0)))) (drop s)) = (drop s)) /\ (((real_add ((real_mul ((real_sub (drop t)) (drop s))) (real_of_num (NUMERAL (BIT1 _0))))) (drop s)) = (drop t)))) ==> F) ==> ((((real_add ((real_mul ((real_sub (drop t)) (drop s))) (real_of_num (NUMERAL _0)))) (drop s)) = (drop s)) /\ (((real_add ((real_mul ((real_sub (drop t)) (drop s))) (real_of_num (NUMERAL (BIT1 _0))))) (drop s)) = (drop t)))) = ((((real_add ((real_mul ((real_sub (drop t)) (drop s))) (real_of_num (NUMERAL _0)))) (drop s)) = (drop s)) /\ (((real_add ((real_mul ((real_sub (drop t)) (drop s))) (real_of_num (NUMERAL (BIT1 _0))))) (drop s)) = (drop t))))
T c= c==> c==> c~ c/\ c= creal_add creal_mul creal_sub cdrop f0 cdrop f1 creal_of_num cNUMERAL c_0 cdrop f1 cdrop f1 c= creal_add creal_mul creal_sub cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 cdrop f1 cdrop f0 cF c/\ c= creal_add creal_mul creal_sub cdrop f0 cdrop f1 creal_of_num cNUMERAL c_0 cdrop f1 cdrop f1 c= creal_add creal_mul creal_sub cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 cdrop f1 cdrop f0 c/\ c= creal_add creal_mul creal_sub cdrop f0 cdrop f1 creal_of_num cNUMERAL c_0 cdrop f1 cdrop f1 c= creal_add creal_mul creal_sub cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 cdrop f1 cdrop f0
+ |- ((((real_add ((real_mul ((real_sub (drop t)) (drop s))) (real_of_num (NUMERAL _0)))) (drop s)) = (drop s)) /\ (((real_add ((real_mul ((real_sub (drop t)) (drop s))) (real_of_num (NUMERAL (BIT1 _0))))) (drop s)) = (drop t)))
T c/\ c= creal_add creal_mul creal_sub cdrop f0 cdrop f1 creal_of_num cNUMERAL c_0 cdrop f1 cdrop f1 c= creal_add creal_mul creal_sub cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 cdrop f1 cdrop f0
+ |- (((!c. (!f. (!s. (((has_bounded_variation_on (\x. (f ((vector_add ((% m) x)) c)))) s) = ((m = (real_of_num (NUMERAL _0))) \/ ((has_bounded_variation_on f) ((IMAGE (\x. ((vector_add ((% m) x)) c))) s))))))) ==> ((\c. (!f. (!s. (((has_bounded_variation_on (\x. (f ((vector_add ((% m) x)) c)))) s) = ((m = (real_of_num (NUMERAL _0))) \/ ((has_bounded_variation_on f) ((IMAGE (\x. ((vector_add ((% m) x)) c))) s))))))) c)) = ((\c. (!f. (!s. (((has_bounded_variation_on (\x. (f ((vector_add ((% m) x)) c)))) s) = ((m = (real_of_num (NUMERAL _0))) \/ ((has_bounded_variation_on f) ((IMAGE (\x. ((vector_add ((% m) x)) c))) s))))))) c))
T c= c==> ! ! ! c= chas_bounded_variation_on / * b1 cvector_add c% f0 b3 b0 b2 c\/ c= f0 creal_of_num cNUMERAL c_0 chas_bounded_variation_on b1 * * part cIMAGE / cvector_add c% f0 b3 b0 b2 * / ! ! c= chas_bounded_variation_on / * b1 cvector_add c% f0 b3 b0 b2 c\/ c= f0 creal_of_num cNUMERAL c_0 chas_bounded_variation_on b1 * * part cIMAGE / cvector_add c% f0 b3 b0 b2 f1 * / ! ! c= chas_bounded_variation_on / * b1 cvector_add c% f0 b3 b0 b2 c\/ c= f0 creal_of_num cNUMERAL c_0 chas_bounded_variation_on b1 * * part cIMAGE / cvector_add c% f0 b3 b0 b2 f1
+ |- (((!x. (!y. (((vector_add x) y) = ((vector_add y) x)))) ==> ((\x. (!y. (((vector_add x) y) = ((vector_add y) x)))) x)) = ((\x. (!y. (((vector_add x) y) = ((vector_add y) x)))) x))
T c= c==> ! ! c= cvector_add b0 b1 cvector_add b1 b0 * / ! c= cvector_add b0 b1 cvector_add b1 b0 f0 * / ! c= cvector_add b0 b1 cvector_add b1 b0 f0
+ |- (((!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))) ==> ((\y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))) y)) = ((\y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))) y))
T c= c==> ! c= c= creal_sub f0 b0 creal_of_num cNUMERAL c_0 c= f0 b0 * / c= c= creal_sub f0 b0 creal_of_num cNUMERAL c_0 c= f0 b0 f1 * / c= c= creal_sub f0 b0 creal_of_num cNUMERAL c_0 c= f0 b0 f1
+ |- ((~ ((((real_add ((real_mul ((real_sub (drop t)) (drop s))) (real_of_num (NUMERAL _0)))) (drop s)) = (drop s)) /\ (((real_add ((real_mul ((real_sub (drop t)) (drop s))) (real_of_num (NUMERAL (BIT1 _0))))) (drop s)) = (drop t)))) ==> F)
T c==> c~ c/\ c= creal_add creal_mul creal_sub cdrop f0 cdrop f1 creal_of_num cNUMERAL c_0 cdrop f1 cdrop f1 c= creal_add creal_mul creal_sub cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 cdrop f1 cdrop f0 cF
+ |- (((real_le (drop s)) (drop t)) ==> (((has_bounded_variation_on g) (closed_interval ((CONS (((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL _0)))) s) , ((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL (BIT1 _0))))) s))) NIL))) = ((has_bounded_variation_on g) (((COND ((real_le (drop s)) (drop t))) (closed_interval ((CONS (s , t)) NIL))) (closed_interval ((CONS (t , s)) NIL))))))
T c==> creal_le cdrop f0 cdrop f1 c= chas_bounded_variation_on f2 * part cclosed_interval cCONS c, cvector_add c% creal_sub cdrop f1 cdrop f0 cvec cNUMERAL c_0 f0 cvector_add c% creal_sub cdrop f1 cdrop f0 cvec cNUMERAL cBIT1 c_0 f0 cNIL chas_bounded_variation_on f2 * * * part cCOND creal_le cdrop f0 cdrop f1 * part cclosed_interval cCONS c, f0 f1 cNIL * part cclosed_interval cCONS c, f1 f0 cNIL
+ |- (((!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) ==> ((\y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) y)) = ((\y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) y))
T c= c==> ! ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 * / ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 f1 * / ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 f1
- |- ((\a. ((open_segment (a , a)) = EMPTY)) a)
T * / c= * part copen_segment c, b0 b0 part cEMPTY f0
+ |- (((!a. ((has_bounded_variation_on f) (a INSERT EMPTY))) ==> ((\a. ((has_bounded_variation_on f) (a INSERT EMPTY))) a)) = ((\a. ((has_bounded_variation_on f) (a INSERT EMPTY))) a))
T c= c==> ! chas_bounded_variation_on f0 * * part cINSERT b0 part cEMPTY * / chas_bounded_variation_on f0 * * part cINSERT b0 part cEMPTY f1 * / chas_bounded_variation_on f0 * * part cINSERT b0 part cEMPTY f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2)))))) ==> ((\h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2)))))) h2)) = ((\h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2)))))) h2))
T c= c==> ! ! ! c= c= cCONS f0 b1 cCONS b0 b2 c/\ c= f0 b0 c= b1 b2 * / ! ! c= c= cCONS f0 b1 cCONS b0 b2 c/\ c= f0 b0 c= b1 b2 f1 * / ! ! c= c= cCONS f0 b1 cCONS b0 b2 c/\ c= f0 b0 c= b1 b2 f1
+ |- ((\b. ((closed_segment ((CONS (a , b)) NIL)) = (((COND ((real_le (drop a)) (drop b))) (closed_interval ((CONS (a , b)) NIL))) (closed_interval ((CONS (b , a)) NIL))))) b)
T * / c= * part cclosed_segment cCONS c, f0 b0 cNIL * * * part cCOND creal_le cdrop f0 cdrop b0 * part cclosed_interval cCONS c, f0 b0 cNIL * part cclosed_interval cCONS c, b0 f0 cNIL f1
+ |- (((!y. ((drop ((vector_add x) y)) = ((real_add (drop x)) (drop y)))) ==> ((\y. ((drop ((vector_add x) y)) = ((real_add (drop x)) (drop y)))) y)) = ((\y. ((drop ((vector_add x) y)) = ((real_add (drop x)) (drop y)))) y))
T c= c==> ! c= cdrop cvector_add f0 b0 creal_add cdrop f0 cdrop b0 * / c= cdrop cvector_add f0 b0 creal_add cdrop f0 cdrop b0 f1 * / c= cdrop cvector_add f0 b0 creal_add cdrop f0 cdrop b0 f1
+ |- (((!h1. (!h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))))) ==> ((\h1. (!h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))))) h1)) = ((\h1. (!h2. (!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))))) h1))
T c= c==> ! ! ! ! c= c= cCONS b0 b2 cCONS b1 b3 c/\ c= b0 b1 c= b2 b3 * / ! ! ! c= c= cCONS b0 b2 cCONS b1 b3 c/\ c= b0 b1 c= b2 b3 f0 * / ! ! ! c= c= cCONS b0 b2 cCONS b1 b3 c/\ c= b0 b1 c= b2 b3 f0
- |- ((EMPTY = (open_interval ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0)))))) = F)
T c= c= part cEMPTY * part copen_interval c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cF
+ |- ((\g. ((rectifiable_path g) = ((path g) /\ ((has_bounded_variation_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) g)
T * / c= crectifiable_path b0 c/\ cpath b0 chas_bounded_variation_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0
+ |- ((\y. ((drop ((vector_sub x) y)) = ((real_sub (drop x)) (drop y)))) y)
T * / c= cdrop cvector_sub f0 b0 creal_sub cdrop f0 cdrop b0 f1
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- (~ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) = EMPTY))
T c~ c= * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL part cEMPTY
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
+ |- (((has_bounded_variation_on g) (((COND ((real_le (real_of_num (NUMERAL _0))) ((real_sub (drop t)) (drop s)))) (closed_interval ((CONS (((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL _0)))) s) , ((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL (BIT1 _0))))) s))) NIL))) (closed_interval ((CONS (((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL (BIT1 _0))))) s) , ((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL _0)))) s))) NIL)))) = ((has_bounded_variation_on g) (closed_segment ((CONS (s , t)) NIL))))
T c= chas_bounded_variation_on f0 * * * part cCOND creal_le creal_of_num cNUMERAL c_0 creal_sub cdrop f1 cdrop f2 * part cclosed_interval cCONS c, cvector_add c% creal_sub cdrop f1 cdrop f2 cvec cNUMERAL c_0 f2 cvector_add c% creal_sub cdrop f1 cdrop f2 cvec cNUMERAL cBIT1 c_0 f2 cNIL * part cclosed_interval cCONS c, cvector_add c% creal_sub cdrop f1 cdrop f2 cvec cNUMERAL cBIT1 c_0 f2 cvector_add c% creal_sub cdrop f1 cdrop f2 cvec cNUMERAL c_0 f2 cNIL chas_bounded_variation_on f0 * part cclosed_segment cCONS c, f2 f1 cNIL
+ |- (((!x. (!y. ((drop ((vector_sub x) y)) = ((real_sub (drop x)) (drop y))))) ==> ((\x. (!y. ((drop ((vector_sub x) y)) = ((real_sub (drop x)) (drop y))))) x)) = ((\x. (!y. ((drop ((vector_sub x) y)) = ((real_sub (drop x)) (drop y))))) x))
T c= c==> ! ! c= cdrop cvector_sub b0 b1 creal_sub cdrop b0 cdrop b1 * / ! c= cdrop cvector_sub b0 b1 creal_sub cdrop b0 cdrop b1 f0 * / ! c= cdrop cvector_sub b0 b1 creal_sub cdrop b0 cdrop b1 f0
+ ((real_le (drop s)) (drop t)) |- ((((has_bounded_variation_on g) (closed_interval ((CONS (((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL _0)))) s) , ((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL (BIT1 _0))))) s))) NIL))) = ((has_bounded_variation_on g) (((COND T) (closed_interval ((CONS (s , t)) NIL))) (closed_interval ((CONS (t , s)) NIL))))) = (((has_bounded_variation_on g) (closed_interval ((CONS (((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL _0)))) s) , ((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL (BIT1 _0))))) s))) NIL))) = ((has_bounded_variation_on g) (((COND ((real_le (drop s)) (drop t))) (closed_interval ((CONS (s , t)) NIL))) (closed_interval ((CONS (t , s)) NIL))))))
T c==> creal_le cdrop f0 cdrop f1 c= c= chas_bounded_variation_on f2 * part cclosed_interval cCONS c, cvector_add c% creal_sub cdrop f1 cdrop f0 cvec cNUMERAL c_0 f0 cvector_add c% creal_sub cdrop f1 cdrop f0 cvec cNUMERAL cBIT1 c_0 f0 cNIL chas_bounded_variation_on f2 * * * part cCOND cT * part cclosed_interval cCONS c, f0 f1 cNIL * part cclosed_interval cCONS c, f1 f0 cNIL c= chas_bounded_variation_on f2 * part cclosed_interval cCONS c, cvector_add c% creal_sub cdrop f1 cdrop f0 cvec cNUMERAL c_0 f0 cvector_add c% creal_sub cdrop f1 cdrop f0 cvec cNUMERAL cBIT1 c_0 f0 cNIL chas_bounded_variation_on f2 * * * part cCOND creal_le cdrop f0 cdrop f1 * part cclosed_interval cCONS c, f0 f1 cNIL * part cclosed_interval cCONS c, f1 f0 cNIL
+ (~ ((((real_add ((real_mul ((real_sub (drop t)) (drop s))) (real_of_num (NUMERAL _0)))) (drop s)) = (drop s)) /\ (((real_add ((real_mul ((real_sub (drop t)) (drop s))) (real_of_num (NUMERAL (BIT1 _0))))) (drop s)) = (drop t)))) |- ((~ ((((real_add ((real_mul ((real_sub (drop t)) (drop s))) (real_of_num (NUMERAL _0)))) (drop s)) = (drop s)) /\ (((real_add ((real_mul ((real_sub (drop t)) (drop s))) (real_of_num (NUMERAL (BIT1 _0))))) (drop s)) = (drop t)))) /\ F)
T c==> c~ c/\ c= creal_add creal_mul creal_sub cdrop f0 cdrop f1 creal_of_num cNUMERAL c_0 cdrop f1 cdrop f1 c= creal_add creal_mul creal_sub cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 cdrop f1 cdrop f0 c/\ c~ c/\ c= creal_add creal_mul creal_sub cdrop f0 cdrop f1 creal_of_num cNUMERAL c_0 cdrop f1 cdrop f1 c= creal_add creal_mul creal_sub cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 cdrop f1 cdrop f0 cF
+ |- (((!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) ==> ((\a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) a)) = ((\a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) a))
T c= c==> ! ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 * / ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 f2 * / ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 f2
- |- (~ ((open_interval ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) = EMPTY))
T c~ c= * part copen_interval c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 part cEMPTY
+ |- ((~ ((real_le (drop s)) (drop t))) ==> (((has_bounded_variation_on g) (closed_interval ((CONS (((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL (BIT1 _0))))) s) , ((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL _0)))) s))) NIL))) = ((has_bounded_variation_on g) (((COND ((real_le (drop s)) (drop t))) (closed_interval ((CONS (s , t)) NIL))) (closed_interval ((CONS (t , s)) NIL))))))
T c==> c~ creal_le cdrop f0 cdrop f1 c= chas_bounded_variation_on f2 * part cclosed_interval cCONS c, cvector_add c% creal_sub cdrop f1 cdrop f0 cvec cNUMERAL cBIT1 c_0 f0 cvector_add c% creal_sub cdrop f1 cdrop f0 cvec cNUMERAL c_0 f0 cNIL chas_bounded_variation_on f2 * * * part cCOND creal_le cdrop f0 cdrop f1 * part cclosed_interval cCONS c, f0 f1 cNIL * part cclosed_interval cCONS c, f1 f0 cNIL
+ |- ((\x. (!y. ((drop ((vector_add x) y)) = ((real_add (drop x)) (drop y))))) x)
T * / ! c= cdrop cvector_add b0 b1 creal_add cdrop b0 cdrop b1 f0
+ |- (((!t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))) ==> ((\t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))) t1)) = ((\t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))) t1))
T c= c==> ! ! c= c= cCONS f0 b0 cCONS f1 b1 c/\ c= f0 f1 c= b0 b1 * / ! c= c= cCONS f0 b0 cCONS f1 b1 c/\ c= f0 f1 c= b0 b1 f2 * / ! c= c= cCONS f0 b0 cCONS f1 b1 c/\ c= f0 f1 c= b0 b1 f2
+ |- ((\s. (((has_bounded_variation_on (\x. (f ((vector_add ((% m) x)) c)))) s) = ((m = (real_of_num (NUMERAL _0))) \/ ((has_bounded_variation_on f) ((IMAGE (\x. ((vector_add ((% m) x)) c))) s))))) s)
T * / c= chas_bounded_variation_on / * f0 cvector_add c% f1 b1 f2 b0 c\/ c= f1 creal_of_num cNUMERAL c_0 chas_bounded_variation_on f0 * * part cIMAGE / cvector_add c% f1 b1 f2 b0 f3
+ |- (((!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((\x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y)))) x)) = ((\x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y)))) x))
T c= c==> ! ! c= c= creal_sub b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 * / ! c= c= creal_sub b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 f0 * / ! c= c= creal_sub b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 f0
+ |- (((!c. (((IMAGE (\x. ((vector_add ((% m) x)) c))) (closed_interval ((CONS (a , b)) NIL))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_interval ((CONS (((vector_add ((% m) a)) c) , ((vector_add ((% m) b)) c))) NIL))) (closed_interval ((CONS (((vector_add ((% m) b)) c) , ((vector_add ((% m) a)) c))) NIL)))))) ==> ((\c. (((IMAGE (\x. ((vector_add ((% m) x)) c))) (closed_interval ((CONS (a , b)) NIL))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_interval ((CONS (((vector_add ((% m) a)) c) , ((vector_add ((% m) b)) c))) NIL))) (closed_interval ((CONS (((vector_add ((% m) b)) c) , ((vector_add ((% m) a)) c))) NIL)))))) c)) = ((\c. (((IMAGE (\x. ((vector_add ((% m) x)) c))) (closed_interval ((CONS (a , b)) NIL))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_interval ((CONS (((vector_add ((% m) a)) c) , ((vector_add ((% m) b)) c))) NIL))) (closed_interval ((CONS (((vector_add ((% m) b)) c) , ((vector_add ((% m) a)) c))) NIL)))))) c))
T c= c==> ! c= * * part cIMAGE / cvector_add c% f0 b1 b0 * part cclosed_interval cCONS c, f1 f2 cNIL * * * part cCOND c= * part cclosed_interval cCONS c, f1 f2 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 f0 * part cclosed_interval cCONS c, cvector_add c% f0 f1 b0 cvector_add c% f0 f2 b0 cNIL * part cclosed_interval cCONS c, cvector_add c% f0 f2 b0 cvector_add c% f0 f1 b0 cNIL * / c= * * part cIMAGE / cvector_add c% f0 b1 b0 * part cclosed_interval cCONS c, f1 f2 cNIL * * * part cCOND c= * part cclosed_interval cCONS c, f1 f2 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 f0 * part cclosed_interval cCONS c, cvector_add c% f0 f1 b0 cvector_add c% f0 f2 b0 cNIL * part cclosed_interval cCONS c, cvector_add c% f0 f2 b0 cvector_add c% f0 f1 b0 cNIL f3 * / c= * * part cIMAGE / cvector_add c% f0 b1 b0 * part cclosed_interval cCONS c, f1 f2 cNIL * * * part cCOND c= * part cclosed_interval cCONS c, f1 f2 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 f0 * part cclosed_interval cCONS c, cvector_add c% f0 f1 b0 cvector_add c% f0 f2 b0 cNIL * part cclosed_interval cCONS c, cvector_add c% f0 f2 b0 cvector_add c% f0 f1 b0 cNIL f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((drop ((vector_sub t) s)) = (real_of_num (NUMERAL _0))) \/ ((has_bounded_variation_on g) (((COND ((real_le (real_of_num (NUMERAL _0))) (drop ((vector_sub t) s)))) (closed_interval ((CONS (((vector_add ((% (drop ((vector_sub t) s))) (vec (NUMERAL _0)))) s) , ((vector_add ((% (drop ((vector_sub t) s))) (vec (NUMERAL (BIT1 _0))))) s))) NIL))) (closed_interval ((CONS (((vector_add ((% (drop ((vector_sub t) s))) (vec (NUMERAL (BIT1 _0))))) s) , ((vector_add ((% (drop ((vector_sub t) s))) (vec (NUMERAL _0)))) s))) NIL))))) = ((has_bounded_variation_on g) (closed_segment ((CONS (s , t)) NIL))))
T c= c\/ c= cdrop cvector_sub f0 f1 creal_of_num cNUMERAL c_0 chas_bounded_variation_on f2 * * * part cCOND creal_le creal_of_num cNUMERAL c_0 cdrop cvector_sub f0 f1 * part cclosed_interval cCONS c, cvector_add c% cdrop cvector_sub f0 f1 cvec cNUMERAL c_0 f1 cvector_add c% cdrop cvector_sub f0 f1 cvec cNUMERAL cBIT1 c_0 f1 cNIL * part cclosed_interval cCONS c, cvector_add c% cdrop cvector_sub f0 f1 cvec cNUMERAL cBIT1 c_0 f1 cvector_add c% cdrop cvector_sub f0 f1 cvec cNUMERAL c_0 f1 cNIL chas_bounded_variation_on f2 * part cclosed_segment cCONS c, f1 f0 cNIL
+ |- ((\m. (!c. (!f. (!s. (((has_bounded_variation_on (\x. (f ((vector_add ((% m) x)) c)))) s) = ((m = (real_of_num (NUMERAL _0))) \/ ((has_bounded_variation_on f) ((IMAGE (\x. ((vector_add ((% m) x)) c))) s)))))))) m)
T * / ! ! ! c= chas_bounded_variation_on / * b2 cvector_add c% b0 b4 b1 b3 c\/ c= b0 creal_of_num cNUMERAL c_0 chas_bounded_variation_on b2 * * part cIMAGE / cvector_add c% b0 b4 b1 b3 f0
+ |- ((\y. (((vector_add x) y) = ((vector_add y) x))) y)
T * / c= cvector_add f0 b0 cvector_add b0 f0 f1
+ |- (((!y. (((drop x) = (drop y)) = (x = y))) ==> ((\y. (((drop x) = (drop y)) = (x = y))) y)) = ((\y. (((drop x) = (drop y)) = (x = y))) y))
T c= c==> ! c= c= cdrop f0 cdrop b0 c= f0 b0 * / c= c= cdrop f0 cdrop b0 c= f0 b0 f1 * / c= c= cdrop f0 cdrop b0 c= f0 b0 f1
+ |- ((\b. (!m. (!c. (((IMAGE (\x. ((vector_add ((% m) x)) c))) (closed_interval ((CONS (a , b)) NIL))) = (((COND ((closed_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_interval ((CONS (((vector_add ((% m) a)) c) , ((vector_add ((% m) b)) c))) NIL))) (closed_interval ((CONS (((vector_add ((% m) b)) c) , ((vector_add ((% m) a)) c))) NIL)))))))) b)
T * / ! ! c= * * part cIMAGE / cvector_add c% b1 b3 b2 * part cclosed_interval cCONS c, f0 b0 cNIL * * * part cCOND c= * part cclosed_interval cCONS c, f0 b0 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 b1 * part cclosed_interval cCONS c, cvector_add c% b1 f0 b2 cvector_add c% b1 b0 b2 cNIL * part cclosed_interval cCONS c, cvector_add c% b1 b0 b2 cvector_add c% b1 f0 b2 cNIL f1
+ |- (((((drop ((vector_sub t) s)) = (real_of_num (NUMERAL _0))) \/ ((has_bounded_variation_on g) (((COND ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) (drop ((vector_sub t) s)))) (closed_interval ((CONS (((vector_add ((% (drop ((vector_sub t) s))) (vec (NUMERAL _0)))) s) , ((vector_add ((% (drop ((vector_sub t) s))) (vec (NUMERAL (BIT1 _0))))) s))) NIL))) (closed_interval ((CONS (((vector_add ((% (drop ((vector_sub t) s))) (vec (NUMERAL (BIT1 _0))))) s) , ((vector_add ((% (drop ((vector_sub t) s))) (vec (NUMERAL _0)))) s))) NIL)))))) = ((has_bounded_variation_on g) (closed_segment ((CONS (s , t)) NIL)))) = (((has_bounded_variation_on (\x. (g ((vector_add ((% (drop ((vector_sub t) s))) x)) s)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = ((has_bounded_variation_on g) (closed_segment ((CONS (s , t)) NIL)))))
T c= c= c\/ c= cdrop cvector_sub f0 f1 creal_of_num cNUMERAL c_0 chas_bounded_variation_on f2 * * * part cCOND c= * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 cdrop cvector_sub f0 f1 * part cclosed_interval cCONS c, cvector_add c% cdrop cvector_sub f0 f1 cvec cNUMERAL c_0 f1 cvector_add c% cdrop cvector_sub f0 f1 cvec cNUMERAL cBIT1 c_0 f1 cNIL * part cclosed_interval cCONS c, cvector_add c% cdrop cvector_sub f0 f1 cvec cNUMERAL cBIT1 c_0 f1 cvector_add c% cdrop cvector_sub f0 f1 cvec cNUMERAL c_0 f1 cNIL chas_bounded_variation_on f2 * part cclosed_segment cCONS c, f1 f0 cNIL c= chas_bounded_variation_on / * f2 cvector_add c% cdrop cvector_sub f0 f1 b0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on f2 * part cclosed_segment cCONS c, f1 f0 cNIL
+ |- ((\t1. (!t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2))))) t1)
T * / ! c= c= cCONS f0 b0 cCONS f1 b1 c/\ c= f0 f1 c= b0 b1 f2
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((\x. (!y. ((drop ((vector_sub x) y)) = ((real_sub (drop x)) (drop y))))) x)
T * / ! c= cdrop cvector_sub b0 b1 creal_sub cdrop b0 cdrop b1 f0
- |- (~ (EMPTY = (open_interval ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0)))))))
T c~ c= part cEMPTY * part copen_interval c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0
+ |- (((((real_add ((real_mul ((real_sub (drop t)) (drop s))) (real_of_num (NUMERAL (BIT1 _0))))) (drop s)) = (drop t)) /\ (((real_add ((real_mul ((real_sub (drop t)) (drop s))) (real_of_num (NUMERAL _0)))) (drop s)) = (drop s))) = (((drop ((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL (BIT1 _0))))) s)) = (drop t)) /\ ((drop ((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL _0)))) s)) = (drop s))))
T c= c/\ c= creal_add creal_mul creal_sub cdrop f0 cdrop f1 creal_of_num cNUMERAL cBIT1 c_0 cdrop f1 cdrop f0 c= creal_add creal_mul creal_sub cdrop f0 cdrop f1 creal_of_num cNUMERAL c_0 cdrop f1 cdrop f1 c/\ c= cdrop cvector_add c% creal_sub cdrop f0 cdrop f1 cvec cNUMERAL cBIT1 c_0 f1 cdrop f0 c= cdrop cvector_add c% creal_sub cdrop f0 cdrop f1 cvec cNUMERAL c_0 f1 cdrop f1
+ |- ((((drop ((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL _0)))) s)) = (drop s)) /\ ((drop ((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL (BIT1 _0))))) s)) = (drop t))) = (((CONS (((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL _0)))) s) , ((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL (BIT1 _0))))) s))) NIL) = ((CONS (s , t)) NIL)))
T c= c/\ c= cdrop cvector_add c% creal_sub cdrop f0 cdrop f1 cvec cNUMERAL c_0 f1 cdrop f1 c= cdrop cvector_add c% creal_sub cdrop f0 cdrop f1 cvec cNUMERAL cBIT1 c_0 f1 cdrop f0 c= cCONS c, cvector_add c% creal_sub cdrop f0 cdrop f1 cvec cNUMERAL c_0 f1 cvector_add c% creal_sub cdrop f0 cdrop f1 cvec cNUMERAL cBIT1 c_0 f1 cNIL cCONS c, f1 f0 cNIL
+ ((~ (s = t)) ==> (((t = s) \/ ((has_bounded_variation_on g) (((COND ((real_le (real_of_num (NUMERAL _0))) ((real_sub (drop t)) (drop s)))) (closed_interval ((CONS (((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL _0)))) s) , ((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL (BIT1 _0))))) s))) NIL))) (closed_interval ((CONS (((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL (BIT1 _0))))) s) , ((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL _0)))) s))) NIL))))) = ((has_bounded_variation_on g) (closed_segment ((CONS (s , t)) NIL))))) |- (((t = s) \/ ((has_bounded_variation_on g) (((COND ((real_le (real_of_num (NUMERAL _0))) ((real_sub (drop t)) (drop s)))) (closed_interval ((CONS (((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL _0)))) s) , ((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL (BIT1 _0))))) s))) NIL))) (closed_interval ((CONS (((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL (BIT1 _0))))) s) , ((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL _0)))) s))) NIL))))) = ((has_bounded_variation_on g) (closed_segment ((CONS (s , t)) NIL))))
T c==> c==> c~ c= f0 f1 c= c\/ c= f1 f0 chas_bounded_variation_on f2 * * * part cCOND creal_le creal_of_num cNUMERAL c_0 creal_sub cdrop f1 cdrop f0 * part cclosed_interval cCONS c, cvector_add c% creal_sub cdrop f1 cdrop f0 cvec cNUMERAL c_0 f0 cvector_add c% creal_sub cdrop f1 cdrop f0 cvec cNUMERAL cBIT1 c_0 f0 cNIL * part cclosed_interval cCONS c, cvector_add c% creal_sub cdrop f1 cdrop f0 cvec cNUMERAL cBIT1 c_0 f0 cvector_add c% creal_sub cdrop f1 cdrop f0 cvec cNUMERAL c_0 f0 cNIL chas_bounded_variation_on f2 * part cclosed_segment cCONS c, f0 f1 cNIL c= c\/ c= f1 f0 chas_bounded_variation_on f2 * * * part cCOND creal_le creal_of_num cNUMERAL c_0 creal_sub cdrop f1 cdrop f0 * part cclosed_interval cCONS c, cvector_add c% creal_sub cdrop f1 cdrop f0 cvec cNUMERAL c_0 f0 cvector_add c% creal_sub cdrop f1 cdrop f0 cvec cNUMERAL cBIT1 c_0 f0 cNIL * part cclosed_interval cCONS c, cvector_add c% creal_sub cdrop f1 cdrop f0 cvec cNUMERAL cBIT1 c_0 f0 cvector_add c% creal_sub cdrop f1 cdrop f0 cvec cNUMERAL c_0 f0 cNIL chas_bounded_variation_on f2 * part cclosed_segment cCONS c, f0 f1 cNIL
- |- (((!b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a))))) ==> ((\b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a))))) b)) = ((\b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a))))) b))
T c= c==> ! c= * part copen_segment c, f0 b0 * * * part cCOND creal_le cdrop f0 cdrop b0 * part copen_interval c, f0 b0 * part copen_interval c, b0 f0 * / c= * part copen_segment c, f0 b0 * * * part cCOND creal_le cdrop f0 cdrop b0 * part copen_interval c, f0 b0 * part copen_interval c, b0 f0 f1 * / c= * part copen_segment c, f0 b0 * * * part cCOND creal_le cdrop f0 cdrop b0 * part copen_interval c, f0 b0 * part copen_interval c, b0 f0 f1
+ |- (((has_bounded_variation_on g) (closed_interval ((CONS (((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL (BIT1 _0))))) s) , ((vector_add ((% ((real_sub (drop t)) (drop s))) (vec (NUMERAL _0)))) s))) NIL))) = ((has_bounded_variation_on g) (((COND F) (closed_interval ((CONS (s , t)) NIL))) (closed_interval ((CONS (t , s)) NIL)))))
T c= chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvector_add c% creal_sub cdrop f1 cdrop f2 cvec cNUMERAL cBIT1 c_0 f2 cvector_add c% creal_sub cdrop f1 cdrop f2 cvec cNUMERAL c_0 f2 cNIL chas_bounded_variation_on f0 * * * part cCOND cF * part cclosed_interval cCONS c, f2 f1 cNIL * part cclosed_interval cCONS c, f1 f2 cNIL
+ (((drop x) = (drop y)) = (x = y)) |- ((x = y) = ((drop x) = (drop y)))
T c==> c= c= cdrop f0 cdrop f1 c= f0 f1 c= c= f0 f1 c= cdrop f0 cdrop f1
+ |- (((!g. ((rectifiable_path g) = ((path g) /\ ((has_bounded_variation_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) ==> ((\g. ((rectifiable_path g) = ((path g) /\ ((has_bounded_variation_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) g)) = ((\g. ((rectifiable_path g) = ((path g) /\ ((has_bounded_variation_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) g))
T c= c==> ! c= crectifiable_path b0 c/\ cpath b0 chas_bounded_variation_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * / c= crectifiable_path b0 c/\ cpath b0 chas_bounded_variation_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 * / c= crectifiable_path b0 c/\ cpath b0 chas_bounded_variation_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0
- |- (((!a. (!b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a)))))) ==> ((\a. (!b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a)))))) a)) = ((\a. (!b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a)))))) a))
T c= c==> ! ! c= * part copen_segment c, b0 b1 * * * part cCOND creal_le cdrop b0 cdrop b1 * part copen_interval c, b0 b1 * part copen_interval c, b1 b0 * / ! c= * part copen_segment c, b0 b1 * * * part cCOND creal_le cdrop b0 cdrop b1 * part copen_interval c, b0 b1 * part copen_interval c, b1 b0 f0 * / ! c= * part copen_segment c, b0 b1 * * * part cCOND creal_le cdrop b0 cdrop b1 * part copen_interval c, b0 b1 * part copen_interval c, b1 b0 f0
+ |- ((\t2. ((((CONS h1) t1) = ((CONS h2) t2)) = ((h1 = h2) /\ (t1 = t2)))) t2)
T * / c= c= cCONS f0 f1 cCONS f2 b0 c/\ c= f0 f2 c= f1 b0 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- ((open_interval ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) = EMPTY) |- (EMPTY = (open_interval ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))))
T c==> c= * part copen_interval c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 part cEMPTY c= part cEMPTY * part copen_interval c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0
- (~ (s = t)) |- ((s = t) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- |- (((~ (EMPTY = (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((EMPTY = (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = F)) = ((EMPTY = (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = F))
T c= c==> c~ c= part cEMPTY * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c= part cEMPTY * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cF c= c= part cEMPTY * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cF
- |- ((\a. (!b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a)))))) a)
T * / ! c= * part copen_segment c, b0 b1 * * * part cCOND creal_le cdrop b0 cdrop b1 * part copen_interval c, b0 b1 * part copen_interval c, b1 b0 f0
- |- (((open_interval ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) = EMPTY) = F)
T c= c= * part copen_interval c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 part cEMPTY cF
- |- ((open_segment (a , a)) = EMPTY)
T c= * part copen_segment c, f0 f0 part cEMPTY
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((EMPTY = (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = F)
T c= c= part cEMPTY * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cF
- (EMPTY = (open_interval ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0)))))) |- ((open_interval ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) = EMPTY)
T c==> c= part cEMPTY * part copen_interval c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 c= * part copen_interval c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 part cEMPTY
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a))))
T c= * part copen_segment c, f0 f1 * * * part cCOND creal_le cdrop f0 cdrop f1 * part copen_interval c, f0 f1 * part copen_interval c, f1 f0
- |- (~ (EMPTY = (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))
T c~ c= part cEMPTY * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ (EMPTY = (open_interval ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))))) ==> ((EMPTY = (open_interval ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0)))))) = F)) = ((EMPTY = (open_interval ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0)))))) = F))
T c= c==> c~ c= part cEMPTY * part copen_interval c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 c= c= part cEMPTY * part copen_interval c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cF c= c= part cEMPTY * part copen_interval c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cF
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- ((\b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a))))) b)
T * / c= * part copen_segment c, f0 b0 * * * part cCOND creal_le cdrop f0 cdrop b0 * part copen_interval c, f0 b0 * part copen_interval c, b0 f0 f1
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) = EMPTY) |- (EMPTY = (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))
T c==> c= * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL part cEMPTY c= part cEMPTY * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ ((open_interval ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) = EMPTY)) ==> (((open_interval ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) = EMPTY) = F)) = (((open_interval ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) = EMPTY) = F))
T c= c==> c~ c= * part copen_interval c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 part cEMPTY c= c= * part copen_interval c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 part cEMPTY cF c= c= * part copen_interval c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 part cEMPTY cF
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!a. ((open_segment (a , a)) = EMPTY)) ==> ((\a. ((open_segment (a , a)) = EMPTY)) a)) = ((\a. ((open_segment (a , a)) = EMPTY)) a))
T c= c==> ! c= * part copen_segment c, b0 b0 part cEMPTY * / c= * part copen_segment c, b0 b0 part cEMPTY f0 * / c= * part copen_segment c, b0 b0 part cEMPTY f0
- (EMPTY = (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) = EMPTY)
T c==> c= part cEMPTY * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL part cEMPTY
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
