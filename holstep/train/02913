N CONTENT_1
C |- (!a. (!b. (((real_le (drop a)) (drop b)) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a))))))
T c==> creal_le cdrop f0 cdrop f1 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0
D TRUTH
A |- T
T cT
D DIMINDEX_1
A |- ((dimindex UNIV) = (NUMERAL (BIT1 _0)))
T c= cdimindex part cUNIV cNUMERAL cBIT1 c_0
D FORALL_1
A |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (P i))) = (P (NUMERAL (BIT1 _0))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 c_0 * f0 b0 * f0 cNUMERAL cBIT1 c_0
D drop
A |- (!x. ((drop x) = (x $ (NUMERAL (BIT1 _0)))))
T c= cdrop f0 c$ f0 cNUMERAL cBIT1 c_0
D PRODUCT_SING_NUMSEG
A |- (!f. (!n. (((product (n .. n)) f) = (f n))))
T c= cproduct * * part c.. f0 f0 f1 * f1 f0
D CONTENT_CLOSED_INTERVAL
A |- (!a. (!b. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i)))) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_le c$ f0 b0 c$ f1 b0 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ f1 b0 c$ f0 b0
+ |- ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((real_le (a $ i)) (b $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= creal_le c$ f2 f0 c$ f3 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_le c$ f2 f0 c$ f3 f0 c==> f1 b0 f4
+ |- (((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a))) = (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0))))))) ==> ((((real_le (drop a)) (drop b)) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a)))) = (((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0)))))))) = ((((real_le (drop a)) (drop b)) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a)))) = (((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0))))))))
T c= c==> c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b0 c$ f0 b0 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c= c==> creal_le cdrop f0 cdrop f1 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b0 c$ f0 b0 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c= c==> creal_le cdrop f0 cdrop f1 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b0 c$ f0 b0 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0
- |- (((!g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_sub (b $ x)) (a $ x)) = (g x)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_sub (b $ x)) (a $ x)) = (g x)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_sub (b $ x)) (a $ x)) = (g x)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_sub c$ f0 b1 c$ f1 b1 * b0 b1 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ f0 b1 c$ f1 b1 cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_sub c$ f0 b1 c$ f1 b1 * b0 b1 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ f0 b1 c$ f1 b1 cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_sub c$ f0 b1 c$ f1 b1 * b0 b1 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ f0 b1 c$ f1 b1 cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
+ |- (((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a))) = (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0)))))))
T c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b0 c$ f0 b0 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0
- |- (((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) = ((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0))))) ==> ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> ((((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0))))) = q')) ==> ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0)))))) = (((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> q')))) = ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> ((((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0))))) = q')) ==> ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0)))))) = (((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> q'))))
T c= c==> c= creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c==> c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b0 c$ f0 b0 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f2 c= c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b0 c$ f0 b0 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 c==> c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b0 c$ f0 b0 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f2 c= c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b0 c$ f0 b0 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 f2
- |- ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_sub (b $ i)) (a $ i)) = (g i)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_sub c$ f0 b1 c$ f1 b1 * b0 b1 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ f0 b1 c$ f1 b1 cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
+ |- ((!a. (!b. (((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0)))))))) = (!a. (!b. (((real_le (drop a)) (drop b)) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a)))))))
T c= ! ! c==> creal_le c$ b0 cNUMERAL cBIT1 c_0 c$ b1 cNUMERAL cBIT1 c_0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ b1 b2 c$ b0 b2 creal_sub c$ b1 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 ! ! c==> creal_le cdrop b0 cdrop b1 c= ccontent * part cclosed_interval cCONS c, b0 b1 cNIL creal_sub cdrop b1 cdrop b0
- |- ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((real_le (a $ i)) (b $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((real_le (a $ i)) (b $ i))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= creal_le c$ f2 f0 c$ f3 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_le c$ f2 f0 c$ f3 f0 c==> f1 b0 f4
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (((real_le (a $ i)) (b $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> q')))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= creal_le c$ f1 f0 c$ f2 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_le c$ f1 f0 c$ f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f3
- |- ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) ==> (((real_sub (b $ x)) (a $ x)) = ((real_sub (b $ x)) (a $ x))))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\x. ((real_sub (b $ x)) (a $ x))))))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c= creal_sub c$ f0 b0 c$ f1 b0 creal_sub c$ f0 b0 c$ f1 b0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f0 b0 c$ f1 b0 cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f0 b0 c$ f1 b0
+ |- ((\b. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i)))) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i))))))) b)
T * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV creal_le c$ f0 b1 c$ b0 b1 c= ccontent * part cclosed_interval cCONS c, f0 b0 cNIL cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ b0 b1 c$ f0 b1 f1
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- |- (((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> ((((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0))))) = (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0)))))))
T c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b0 c$ f0 b0 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b0 c$ f0 b0 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) /\ (((real_le (a $ i)) (b $ i)) = ((real_le (a $ i)) (b $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= creal_le c$ f1 f0 c$ f2 f0 creal_le c$ f1 f0 c$ f2 f0
+ |- (((!b. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i)))) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i))))))) ==> ((\b. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i)))) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i))))))) b)) = ((\b. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i)))) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i))))))) b))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV creal_le c$ f0 b1 c$ b0 b1 c= ccontent * part cclosed_interval cCONS c, f0 b0 cNIL cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ b0 b1 c$ f0 b1 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV creal_le c$ f0 b1 c$ b0 b1 c= ccontent * part cclosed_interval cCONS c, f0 b0 cNIL cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ b0 b1 c$ f0 b1 f1 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV creal_le c$ f0 b1 c$ b0 b1 c= ccontent * part cclosed_interval cCONS c, f0 b0 cNIL cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ b0 b1 c$ f0 b1 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ ((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) |- (((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) = T)
T c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 cT
- |- ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> ((((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0))))) = q')) ==> ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0)))))) = (p' ==> q'))))
T c==> c= creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b0 c$ f0 b0 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f3 c= c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b0 c$ f0 b0 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c==> f2 f3
- (x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) |- ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) = T)
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV cT
+ ((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) |- (((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) /\ (((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a))) = (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0)))))))
T c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c/\ creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b0 c$ f0 b0 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0
+ |- ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((real_le (a $ i)) (b $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= creal_le c$ f1 f0 c$ f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_le c$ f1 f0 c$ f2 f0 c==> b0 b1 f3
+ |- (((!p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((real_le (a $ i)) (b $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((real_le (a $ i)) (b $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((real_le (a $ i)) (b $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= creal_le c$ f1 f0 c$ f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_le c$ f1 f0 c$ f2 f0 c==> b0 b1 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= creal_le c$ f1 f0 c$ f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_le c$ f1 f0 c$ f2 f0 c==> b0 b1 f3 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= creal_le c$ f1 f0 c$ f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_le c$ f1 f0 c$ f2 f0 c==> b0 b1 f3
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- (((NUMERAL (BIT1 _0)) <= i) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c<= cNUMERAL cBIT1 c_0 f0 cT
- |- (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\x. ((real_sub (b $ x)) (a $ x)))))
T c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f0 b0 c$ f1 b0 cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f0 b0 c$ f1 b0
- |- (((!g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_sub (b $ i)) (a $ i)) = (g i)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_sub (b $ i)) (a $ i)) = (g i)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_sub (b $ i)) (a $ i)) = (g i)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_sub c$ f0 b1 c$ f1 b1 * b0 b1 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ f0 b1 c$ f1 b1 cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_sub c$ f0 b1 c$ f1 b1 * b0 b1 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ f0 b1 c$ f1 b1 cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_sub c$ f0 b1 c$ f1 b1 * b0 b1 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ f0 b1 c$ f1 b1 cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i)))) |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i)))) /\ ((content (closed_interval ((CONS (a , b)) NIL))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_le c$ f0 b0 c$ f1 b0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_le c$ f0 b0 c$ f1 b0 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ f1 b0 c$ f0 b0
+ |- ((\q'. ((((real_le (drop a)) (drop b)) = p') ==> ((p' ==> (((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a))) = q')) ==> ((((real_le (drop a)) (drop b)) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a)))) = (p' ==> q'))))) q')
T * / c==> c= creal_le cdrop f0 cdrop f1 f2 c==> c==> f2 c= c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 b0 c= c==> creal_le cdrop f0 cdrop f1 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 c==> f2 b0 f3
- (x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) |- ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) /\ (((real_sub (b $ x)) (a $ x)) = ((real_sub (b $ x)) (a $ x))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_sub c$ f1 f0 c$ f2 f0 creal_sub c$ f1 f0 c$ f2 f0
+ ((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i)))) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i)))))) = ((content (closed_interval ((CONS (a , b)) NIL))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i))))))
T c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_le c$ f0 b0 c$ f1 b0 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ f1 b0 c$ f0 b0 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ f1 b0 c$ f0 b0
+ ((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i))))
T c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_le c$ f0 b0 c$ f1 b0
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_sub (b $ i)) (a $ i)) = ((real_sub (b $ i)) (a $ i)))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_sub c$ f1 f0 c$ f2 f0 creal_sub c$ f1 f0 c$ f2 f0 cT
- |- ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (((real_sub (b $ i)) (a $ i)) = (g i)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f0 b1 c$ f1 b1 * b0 b1 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f0 b1 c$ f1 b1 cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 f2
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
- |- (!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_sub (b $ x)) (a $ x)) = ((real_sub (b $ x)) (a $ x)))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_sub c$ f1 f0 c$ f2 f0 creal_sub c$ f1 f0 c$ f2 f0
+ |- ((\p'. (!q'. ((((real_le (drop a)) (drop b)) = p') ==> ((p' ==> (((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a))) = q')) ==> ((((real_le (drop a)) (drop b)) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a)))) = (p' ==> q')))))) p')
T * / ! c==> c= creal_le cdrop f0 cdrop f1 b0 c==> c==> b0 c= c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 b1 c= c==> creal_le cdrop f0 cdrop f1 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 c==> b0 b1 f2
+ |- ((\x. ((drop x) = (x $ (NUMERAL (BIT1 _0))))) x)
T * / c= cdrop b0 c$ b0 cNUMERAL cBIT1 c_0 f0
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((real_le (a $ i)) (b $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((real_le (a $ i)) (b $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_le c$ f1 f0 c$ f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_le c$ f1 f0 c$ f2 f0
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((real_le (a $ i)) (b $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((real_le (a $ i)) (b $ i))) = (p' ==> q'))))
T c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= creal_le c$ f2 f0 c$ f3 f0 f4 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_le c$ f2 f0 c$ f3 f0 c==> f1 f4
- |- (((!g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (((real_sub (b $ i)) (a $ i)) = (g i)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) g)))) ==> ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (((real_sub (b $ i)) (a $ i)) = (g i)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) g)))) g)) = ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (((real_sub (b $ i)) (a $ i)) = (g i)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f0 b1 c$ f1 b1 * b0 b1 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f0 b1 c$ f1 b1 cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f0 b1 c$ f1 b1 * b0 b1 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f0 b1 c$ f1 b1 cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 f2 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f0 b1 c$ f1 b1 * b0 b1 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f0 b1 c$ f1 b1 cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 f2
- |- ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_sub (b $ x)) (a $ x)) = (g x)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_sub c$ f0 b0 c$ f1 b0 * f2 b0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ f0 b0 c$ f1 b0 cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f2
+ |- (!a. (!b. (((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0))))))))
T c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b0 c$ f0 b0 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0
- |- (((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) ==> (((real_sub (b $ x)) (a $ x)) = ((real_sub (b $ x)) (a $ x))))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\x. ((real_sub (b $ x)) (a $ x)))))) = (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\x. ((real_sub (b $ x)) (a $ x))))))
T c= c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c= creal_sub c$ f0 b0 c$ f1 b0 creal_sub c$ f0 b0 c$ f1 b0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f0 b0 c$ f1 b0 cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f0 b0 c$ f1 b0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f0 b0 c$ f1 b0 cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f0 b0 c$ f1 b0
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (((real_sub (b $ i)) (a $ i)) = ((real_sub (b $ i)) (a $ i)))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 f0 c$ f2 f0 creal_sub c$ f1 f0 c$ f2 f0 cT
+ |- ((\n. (((product (n .. n)) f) = (f n))) n)
T * / c= cproduct * * part c.. b0 b0 f0 * f0 b0 f1
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((real_le (a $ i)) (b $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i))) = (p' ==> q'))))
T c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= creal_le c$ f2 f0 c$ f3 f0 f4 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_le c$ f2 f0 c$ f3 f0 c==> f1 f4
- |- ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) ==> (((real_sub (b $ x)) (a $ x)) = (g x)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) g)))) g)
T * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c= creal_sub c$ f0 b1 c$ f1 b1 * b0 b1 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f0 b1 c$ f1 b1 cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 f2
- |- (((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> ((((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0))))) = (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0))))))) ==> ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0)))))) = (((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0)))))))) = ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0)))))) = (((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0))))))))
T c= c==> c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b0 c$ f0 b0 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b0 c$ f0 b0 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c= c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b0 c$ f0 b0 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b0 c$ f0 b0 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c= c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b0 c$ f0 b0 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b0 c$ f0 b0 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0
- |- (!x. ((x IN ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) ==> (((real_sub (b $ x)) (a $ x)) = ((real_sub (b $ x)) (a $ x)))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 f0 c$ f2 f0 creal_sub c$ f1 f0 c$ f2 f0
+ |- (((!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((real_le (a $ i)) (b $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i))) = (p' ==> q'))))) ==> ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((real_le (a $ i)) (b $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i))) = (p' ==> q'))))) q')) = ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((real_le (a $ i)) (b $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= creal_le c$ f2 f0 c$ f3 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_le c$ f2 f0 c$ f3 f0 c==> f1 b0 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= creal_le c$ f2 f0 c$ f3 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_le c$ f2 f0 c$ f3 f0 c==> f1 b0 f4 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= creal_le c$ f2 f0 c$ f3 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_le c$ f2 f0 c$ f3 f0 c==> f1 b0 f4
- (x IN ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) |- ((x IN ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) = T)
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c= cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cT
+ |- ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a))) = q')) ==> ((((real_le (drop a)) (drop b)) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a)))) = (((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> q')))
T c==> c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 f2 c= c==> creal_le cdrop f0 cdrop f1 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 f2
+ |- ((\f. (!n. (((product (n .. n)) f) = (f n)))) f)
T * / ! c= cproduct * * part c.. b1 b1 b0 * b0 b1 f0
+ |- ((((real_le (drop a)) (drop b)) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a)))) = (((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0)))))))
T c= c==> creal_le cdrop f0 cdrop f1 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b0 c$ f0 b0 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0
- |- (((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_sub (b $ x)) (a $ x)))))
T c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ f0 b0 c$ f1 b0 cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ f0 b0 c$ f1 b0
- |- (((!q'. ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> ((((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0))))) = q')) ==> ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0)))))) = (p' ==> q'))))) ==> ((\q'. ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> ((((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0))))) = q')) ==> ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0)))))) = (p' ==> q'))))) q')) = ((\q'. ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> ((((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0))))) = q')) ==> ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0)))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b1 c$ f0 b1 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 b0 c= c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b1 c$ f0 b1 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c==> f2 b0 * / c==> c= creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b1 c$ f0 b1 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 b0 c= c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b1 c$ f0 b1 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c==> f2 b0 f3 * / c==> c= creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b1 c$ f0 b1 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 b0 c= c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b1 c$ f0 b1 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c==> f2 b0 f3
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((real_le (a $ i)) (b $ i)))) = ((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 c_0 creal_le c$ f0 b0 c$ f1 b0 creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0
- |- (((!p'. (!q'. ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> ((((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0))))) = q')) ==> ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0)))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> ((((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0))))) = q')) ==> ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0)))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> ((((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0))))) = q')) ==> ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0)))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b2 c$ f0 b2 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 b1 c= c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b2 c$ f0 b2 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c==> b0 b1 * / ! c==> c= creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b2 c$ f0 b2 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 b1 c= c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b2 c$ f0 b2 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c==> b0 b1 f2 * / ! c==> c= creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b2 c$ f0 b2 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 b1 c= c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f1 b2 c$ f0 b2 creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c==> b0 b1 f2
- |- (((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((product s) (\i. (f i))) = ((product s) g))) = T)
T c= c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= cproduct f0 / * f1 b0 cproduct f0 f2 cT
- |- ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) ==> (((real_sub (b $ x)) (a $ x)) = (g x)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) g)))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c= creal_sub c$ f0 b0 c$ f1 b0 * f2 b0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f0 b0 c$ f1 b0 cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f2
- |- ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((real_le (a $ i)) (b $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((real_le (a $ i)) (b $ i))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_le c$ f1 f0 c$ f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_le c$ f1 f0 c$ f2 f0 c==> b0 b1 f3
- |- (((x IN ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) ==> (((real_sub (b $ x)) (a $ x)) = ((real_sub (b $ x)) (a $ x)))) = T)
T c= c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 f0 c$ f2 f0 creal_sub c$ f1 f0 c$ f2 f0 cT
+ |- ((\a. (!b. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i)))) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i)))))))) a)
T * / ! c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV creal_le c$ b0 b2 c$ b1 b2 c= ccontent * part cclosed_interval cCONS c, b0 b1 cNIL cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ b1 b2 c$ b0 b2 f0
+ |- (T = (!a. (!b. (((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((real_sub (b $ (NUMERAL (BIT1 _0)))) (a $ (NUMERAL (BIT1 _0)))))))))
T c= cT ! ! c==> creal_le c$ b0 cNUMERAL cBIT1 c_0 c$ b1 cNUMERAL cBIT1 c_0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ b1 b2 c$ b0 b2 creal_sub c$ b1 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0
- |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_sub (b $ i)) (a $ i)) = ((real_sub (b $ i)) (a $ i))))) ==> (((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_sub c$ f0 b0 c$ f1 b0 creal_sub c$ f0 b0 c$ f1 b0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ f0 b0 c$ f1 b0 cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ f0 b0 c$ f1 b0
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((i <= (dimindex UNIV)) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c<= f0 cdimindex part cUNIV cT
+ ((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) |- (T = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i)))))
T c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= cT ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_le c$ f0 b0 c$ f1 b0
- |- (((!i. (((a <= i) /\ (i <= b)) ==> ((f i) = (g i)))) ==> (((product (a .. b)) (\i. (f i))) = ((product (a .. b)) g))) = T)
T c= c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= cproduct * * part c.. f0 f1 / * f2 b0 cproduct * * part c.. f0 f1 f3 cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_sub (b $ i)) (a $ i)) = ((real_sub (b $ i)) (a $ i)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_sub c$ f1 f0 c$ f2 f0 creal_sub c$ f1 f0 c$ f2 f0
+ |- (((!q'. ((((real_le (drop a)) (drop b)) = p') ==> ((p' ==> (((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a))) = q')) ==> ((((real_le (drop a)) (drop b)) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a)))) = (p' ==> q'))))) ==> ((\q'. ((((real_le (drop a)) (drop b)) = p') ==> ((p' ==> (((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a))) = q')) ==> ((((real_le (drop a)) (drop b)) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a)))) = (p' ==> q'))))) q')) = ((\q'. ((((real_le (drop a)) (drop b)) = p') ==> ((p' ==> (((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a))) = q')) ==> ((((real_le (drop a)) (drop b)) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= creal_le cdrop f0 cdrop f1 f2 c==> c==> f2 c= c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 b0 c= c==> creal_le cdrop f0 cdrop f1 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 c==> f2 b0 * / c==> c= creal_le cdrop f0 cdrop f1 f2 c==> c==> f2 c= c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 b0 c= c==> creal_le cdrop f0 cdrop f1 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 c==> f2 b0 f3 * / c==> c= creal_le cdrop f0 cdrop f1 f2 c==> c==> f2 c= c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 b0 c= c==> creal_le cdrop f0 cdrop f1 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 c==> f2 b0 f3
- (x IN ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) |- ((x IN ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) /\ (((real_sub (b $ x)) (a $ x)) = ((real_sub (b $ x)) (a $ x))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 f0 c$ f2 f0 creal_sub c$ f1 f0 c$ f2 f0
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (((real_le (a $ i)) (b $ i)) = ((real_le (a $ i)) (b $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= creal_le c$ f1 f0 c$ f2 f0 creal_le c$ f1 f0 c$ f2 f0
+ ((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) |- ((content (closed_interval ((CONS (a , b)) NIL))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i)))))
T c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ f1 b0 c$ f0 b0
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0))))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (((real_le (a $ i)) (b $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (((real_le (a $ i)) (b $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> q'))))
T c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= creal_le c$ f1 f0 c$ f2 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_le c$ f1 f0 c$ f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f3 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= creal_le c$ f1 f0 c$ f2 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_le c$ f1 f0 c$ f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f3
- |- (((!p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((real_le (a $ i)) (b $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((real_le (a $ i)) (b $ i))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((real_le (a $ i)) (b $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((real_le (a $ i)) (b $ i))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((real_le (a $ i)) (b $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((real_le (a $ i)) (b $ i))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_le c$ f1 f0 c$ f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_le c$ f1 f0 c$ f2 f0 c==> b0 b1 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_le c$ f1 f0 c$ f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_le c$ f1 f0 c$ f2 f0 c==> b0 b1 f3 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_le c$ f1 f0 c$ f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_le c$ f1 f0 c$ f2 f0 c==> b0 b1 f3
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((real_sub (b $ i)) (a $ i)) = ((real_sub (b $ i)) (a $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_sub c$ f1 f0 c$ f2 f0 creal_sub c$ f1 f0 c$ f2 f0
- |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) = (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0))))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (((real_le (a $ i)) (b $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((real_le (a $ i)) (b $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (((real_le (a $ i)) (b $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((real_le (a $ i)) (b $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> q'))))
T c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= creal_le c$ f1 f0 c$ f2 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_le c$ f1 f0 c$ f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f3 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= creal_le c$ f1 f0 c$ f2 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_le c$ f1 f0 c$ f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f3
- |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (((real_sub (b $ i)) (a $ i)) = ((real_sub (b $ i)) (a $ i)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 f0 c$ f2 f0 creal_sub c$ f1 f0 c$ f2 f0
- |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_sub (b $ i)) (a $ i)) = (g i)))) ==> (((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_sub c$ f0 b0 c$ f1 b0 * f2 b0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ f0 b0 c$ f1 b0 cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f2
- |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (((real_sub (b $ i)) (a $ i)) = ((real_sub (b $ i)) (a $ i))))) ==> (((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i)))) = ((product ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) (\i. ((real_sub (b $ i)) (a $ i))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 c_0 c= creal_sub c$ f0 b0 c$ f1 b0 creal_sub c$ f0 b0 c$ f1 b0 c= cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f0 b0 c$ f1 b0 cproduct * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 / creal_sub c$ f0 b0 c$ f1 b0
+ |- (((!f. (!n. (((product (n .. n)) f) = (f n)))) ==> ((\f. (!n. (((product (n .. n)) f) = (f n)))) f)) = ((\f. (!n. (((product (n .. n)) f) = (f n)))) f))
T c= c==> ! ! c= cproduct * * part c.. b1 b1 b0 * b0 b1 * / ! c= cproduct * * part c.. b1 b1 b0 * b0 b1 f0 * / ! c= cproduct * * part c.. b1 b1 b0 * b0 b1 f0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((real_le (a $ i)) (b $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_le c$ f1 f0 c$ f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_le c$ f1 f0 c$ f2 f0
+ |- (((!a. (!b. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i)))) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i)))))))) ==> ((\a. (!b. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i)))) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i)))))))) a)) = ((\a. (!b. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i)))) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((product ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_sub (b $ i)) (a $ i)))))))) a))
T c= c==> ! ! c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV creal_le c$ b0 b2 c$ b1 b2 c= ccontent * part cclosed_interval cCONS c, b0 b1 cNIL cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ b1 b2 c$ b0 b2 * / ! c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV creal_le c$ b0 b2 c$ b1 b2 c= ccontent * part cclosed_interval cCONS c, b0 b1 cNIL cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ b1 b2 c$ b0 b2 f0 * / ! c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV creal_le c$ b0 b2 c$ b1 b2 c= ccontent * part cclosed_interval cCONS c, b0 b1 cNIL cproduct * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_sub c$ b1 b2 c$ b0 b2 f0
+ |- ((((real_le (drop a)) (drop b)) = p') ==> ((p' ==> (((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a))) = q')) ==> ((((real_le (drop a)) (drop b)) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a)))) = (p' ==> q'))))
T c==> c= creal_le cdrop f0 cdrop f1 f2 c==> c==> f2 c= c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 f3 c= c==> creal_le cdrop f0 cdrop f1 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 c==> f2 f3
+ |- (!p'. (!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3
+ |- (((((real_le (drop a)) (drop b)) = ((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0))))) ==> ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a))) = q')) ==> ((((real_le (drop a)) (drop b)) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a)))) = (((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> q')))) = ((((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> (((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a))) = q')) ==> ((((real_le (drop a)) (drop b)) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a)))) = (((real_le (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 _0)))) ==> q'))))
T c= c==> c= creal_le cdrop f0 cdrop f1 creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c==> c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 f2 c= c==> creal_le cdrop f0 cdrop f1 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 c==> c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 f2 c= c==> creal_le cdrop f0 cdrop f1 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 c==> creal_le c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 f2
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (((real_le (a $ i)) (b $ i)) = ((real_le (a $ i)) (b $ i)))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((real_le (a $ i)) (b $ i))))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_le (a $ i)) (b $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((real_le (a $ i)) (b $ i)))))
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= creal_le c$ f1 f0 c$ f2 f0 creal_le c$ f1 f0 c$ f2 f0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_le c$ f1 f0 c$ f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_le c$ f1 f0 c$ f2 f0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_le c$ f1 f0 c$ f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_le c$ f1 f0 c$ f2 f0
+ |- (((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q')))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3 cT
+ |- (((!x. ((drop x) = (x $ (NUMERAL (BIT1 _0))))) ==> ((\x. ((drop x) = (x $ (NUMERAL (BIT1 _0))))) x)) = ((\x. ((drop x) = (x $ (NUMERAL (BIT1 _0))))) x))
T c= c==> ! c= cdrop b0 c$ b0 cNUMERAL cBIT1 c_0 * / c= cdrop b0 c$ b0 cNUMERAL cBIT1 c_0 f0 * / c= cdrop b0 c$ b0 cNUMERAL cBIT1 c_0 f0
+ |- (((!p'. (!q'. ((((real_le (drop a)) (drop b)) = p') ==> ((p' ==> (((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a))) = q')) ==> ((((real_le (drop a)) (drop b)) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a)))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((real_le (drop a)) (drop b)) = p') ==> ((p' ==> (((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a))) = q')) ==> ((((real_le (drop a)) (drop b)) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((real_le (drop a)) (drop b)) = p') ==> ((p' ==> (((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a))) = q')) ==> ((((real_le (drop a)) (drop b)) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= creal_le cdrop f0 cdrop f1 b0 c==> c==> b0 c= c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 b1 c= c==> creal_le cdrop f0 cdrop f1 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 c==> b0 b1 * / ! c==> c= creal_le cdrop f0 cdrop f1 b0 c==> c==> b0 c= c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 b1 c= c==> creal_le cdrop f0 cdrop f1 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 c==> b0 b1 f2 * / ! c==> c= creal_le cdrop f0 cdrop f1 b0 c==> c==> b0 c= c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 b1 c= c==> creal_le cdrop f0 cdrop f1 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0 c==> b0 b1 f2
+ |- (((!n. (((product (n .. n)) f) = (f n))) ==> ((\n. (((product (n .. n)) f) = (f n))) n)) = ((\n. (((product (n .. n)) f) = (f n))) n))
T c= c==> ! c= cproduct * * part c.. b0 b0 f0 * f0 b0 * / c= cproduct * * part c.. b0 b0 f0 * f0 b0 f1 * / c= cproduct * * part c.. b0 b0 f0 * f0 b0 f1
