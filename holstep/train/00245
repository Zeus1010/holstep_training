N Conforming.TRAN_COMMUTATIVE_F1_FAN_POWER3
C |- (!x. (!V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (!y. (!n. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((y IN (d_fan (x , (V , E)))) /\ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY))))))))))))))))))))))))))))))))) ==> (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= cpr3 f4 f8 c/\ c= cpr3 f5 f9 c/\ c= f10 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f7 c, f9 csigma_fan f0 f1 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 c/\ c= c, f0 c, f9 c, f7 f8 f13 c/\ c= c, f0 c, f7 c, f8 f9 f14 c/\ c= c, f0 c, f8 c, f9 f7 f15 c/\ c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c/\ cIN f16 * part cd_fan c, f0 c, f1 f2 ! c==> c< b0 f17 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f0 f1 f2 b0 f16 csigma_fan f0 f1 f2 f7 f8 c= cpr3 cPOWER * * * part cf1_fan f0 f1 f2 b0 f16 f7 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f0 f1 f2 b0 f16 f8 c= cpr3 cPOWER * * * part cf1_fan f0 f1 f2 b0 f16 f9 c~ cIN cpr3 cPOWER * * * part cf1_fan f0 f1 f2 b0 f16 * * part cINSERT f7 * * part cINSERT f9 part cEMPTY c= ctran f0 f1 f11 cPOWER * * * part cf1_fan f0 f1 f2 f17 f16 cPOWER * * * part cf1_fan f0 f1 f11 f17 ctran f0 f1 f11 f16
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_LT
A |- (!x. (!y. ((~ ((int_lt x) y)) = ((int_le y) x))))
T c= c~ cint_lt f0 f1 cint_le f1 f0
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_LT
A |- (!m. (!n. (((int_lt (int_of_num m)) (int_of_num n)) = (m < n))))
T c= cint_lt cint_of_num f0 cint_of_num f1 c< f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Hypermap.COM_POWER
A |- (!n. (!f. (((POWER f) (SUC n)) = (f o ((POWER f) n)))))
T c= * * part cPOWER f0 cSUC f1 * * part co f0 * * part cPOWER f0 f1
D Fan.into_domain1_power_efn_fan
A |- (!x. (!V. (!E. (!n. ((FAN (x , (V , E))) ==> ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((e_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) /\ ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((n_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) /\ (!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))))))))))
T c==> cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part ce_fan f0 f1 f2 f3 b0 * part cd1_fan c, f0 c, f1 f2 c/\ ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part cn_fan f0 f1 f2 f3 b0 * part cd1_fan c, f0 c, f1 f2 ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 b0 * part cd1_fan c, f0 c, f1 f2
D Fan.dartset_fully_surrounded_is_non_isolated_fan
A |- (!x. (!V. (!E. (((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= * part cd_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2
D Conforming.STEP3_REDUCE_FAN
A |- (!x. (!V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1)))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f10 cFAN c, f0 c, f1 f10
D Conforming.add_edge_imp_card_set_edge_ge1_fan
A |- (!x. (!V. (!E. (!E1. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= f3 * * part cUNION f2 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f3 cNUMERAL cBIT1 c_0
D Conforming.TRAN_COMMUTATIVE_F1_FAN0
A |- (!x. (!V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((((~ ((pr2 y) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 y) = v)) \/ (((~ ((pr2 y) = u)) /\ ((pr3 y) = w)) \/ (~ ((pr3 y) IN (v INSERT (w INSERT EMPTY)))))) /\ (y IN (d_fan (x , (V , E))))))))))))))))))))))))))))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) y)) = ((((f1_fan x) V) E1) ((((tran x) V) E1) y)))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= cpr3 f4 f8 c/\ c= cpr3 f5 f9 c/\ c= f10 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f7 c, f9 csigma_fan f0 f1 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 c/\ c= c, f0 c, f9 c, f7 f8 f13 c/\ c= c, f0 c, f7 c, f8 f9 f14 c/\ c= c, f0 c, f8 c, f9 f7 f15 c/\ c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c/\ c\/ c/\ c~ c= cpr2 f16 csigma_fan f0 f1 f2 f7 f8 c= cpr3 f16 f7 c\/ c/\ c~ c= cpr2 f16 f8 c= cpr3 f16 f9 c~ cIN cpr3 f16 * * part cINSERT f7 * * part cINSERT f9 part cEMPTY cIN f16 * part cd_fan c, f0 c, f1 f2 c= ctran f0 f1 f11 cf1_fan f0 f1 f2 f16 cf1_fan f0 f1 f11 ctran f0 f1 f11 f16
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w), ((((((sigma_fan x) V) E) u) w) = v), (((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (y IN (d_fan (x , (V , E)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y))))) /\ (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= cf1_fan f2 f0 f1 f4 f8 c==> c= cf1_fan f2 f0 f1 f8 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f8 f9 c==> c= cpr2 f3 f5 c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f10 f11 f5 c==> c= csigma_fan f2 f0 f1 f9 f5 f6 c==> c==> cIN cPOWER * * * part cf1_fan f2 f0 f1 f10 f11 * part cd_fan c, f2 c, f0 f1 c= ctran f2 f0 f7 cf1_fan f2 f0 f1 cPOWER * * * part cf1_fan f2 f0 f1 f10 f11 cf1_fan f2 f0 f7 ctran f2 f0 f7 cPOWER * * * part cf1_fan f2 f0 f1 f10 f11 c==> c> cCARD f12 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f12 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f9 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f9 part cEMPTY f1 c==> cIN f11 * part cd_fan c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f8 * * part cINSERT f3 part cEMPTY f12 c/\ c==> cIN cPOWER * * * part cf1_fan f2 f0 f1 f10 f11 * part cd_fan c, f2 c, f0 f1 c= ctran f2 f0 f7 cf1_fan f2 f0 f1 cPOWER * * * part cf1_fan f2 f0 f1 f10 f11 cf1_fan f2 f0 f7 ctran f2 f0 f7 cPOWER * * * part cf1_fan f2 f0 f1 f10 f11 c= ctran f2 f0 f7 cf1_fan f2 f0 f1 cPOWER * * * part cf1_fan f2 f0 f1 f10 f11 cf1_fan f2 f0 f7 ctran f2 f0 f7 cPOWER * * * part cf1_fan f2 f0 f1 f10 f11
- |- ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)
T * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (y IN (d_fan (x , (V , E)))) |- (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 f5 cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * part cd_fan c, f2 c, f0 f1
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _3077585)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _3077586)) /\ (((real_le ((real_add (real_of_int _3077585)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586)) /\ ((real_le ((real_add (real_of_int _3077586)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
+ |- ((!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (!y. (!n. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((y IN (d_fan (x , (V , E)))) /\ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY))))))))))))))))))))))))))))))))) ==> (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b14 f1 c> cCARD * * * part cset_of_edge b14 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ c= cf1_fan f0 f1 f2 b1 b2 c/\ c= cf1_fan f0 f1 f2 b2 b3 c/\ c~ c= cf1_fan f0 f1 f2 b3 b1 c/\ c= cpr2 b1 b4 c/\ c= cpr2 b2 b5 c/\ c= cpr2 b3 b6 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f2 c/\ cIN * * part cINSERT b5 * * part cINSERT b6 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b6 * * part cINSERT b4 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b5 b6 b4 c/\ c= cpr3 b1 b5 c/\ c= cpr3 b2 b6 c/\ c= b7 * * part cface chypermap1_of_fanx c, f0 c, f1 f3 c, f0 c, b4 c, b6 csigma_fan f0 f1 f3 b4 b6 c/\ c= b8 * * part cface chypermap1_of_fanx c, f0 c, f1 f3 c, f0 c, b6 c, b4 csigma_fan f0 f1 f3 b6 b4 c/\ c= c, f0 c, b6 c, b4 b5 b9 c/\ c= c, f0 c, b4 c, b5 b6 b10 c/\ c= c, f0 c, b5 c, b6 b4 b11 c/\ c= * * part cUNION f2 * * part cINSERT * * part cINSERT b4 * * part cINSERT b6 part cEMPTY part cEMPTY f3 c/\ cIN b12 * part cd_fan c, f0 c, f1 f2 ! c==> c< b14 b13 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f0 f1 f2 b14 b12 csigma_fan f0 f1 f2 b4 b5 c= cpr3 cPOWER * * * part cf1_fan f0 f1 f2 b14 b12 b4 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f0 f1 f2 b14 b12 b5 c= cpr3 cPOWER * * * part cf1_fan f0 f1 f2 b14 b12 b6 c~ cIN cpr3 cPOWER * * * part cf1_fan f0 f1 f2 b14 b12 * * part cINSERT b4 * * part cINSERT b6 part cEMPTY c= ctran f0 f1 f3 cPOWER * * * part cf1_fan f0 f1 f2 b13 b12 cPOWER * * * part cf1_fan f0 f1 f3 b13 ctran f0 f1 f3 b12 cT
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (y IN (d_fan (x , (V , E)))) |- ((((FAN (x , (V , E))) /\ ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) f1_fan)))))) ==> (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c==> c==> c/\ cFAN c, f2 c, f0 f1 c= / * * part cres * * * b0 f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 / * * part cres * * * b0 f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f1 * part cd_fan c, f2 c, f0 f1 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f1 * / * * part cres * * * b0 f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f1 * / * * part cres * * * b0 f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 part cn_fan c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f1 * / * * part cres * * * b0 f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 part cf1_fan c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 f5 cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * part cd_fan c, f2 c, f0 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (y IN (d_fan (x , (V , E)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f8 * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f9 c==> c= cf1_fan f2 f0 f1 f4 f10 c==> c= cf1_fan f2 f0 f1 f10 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f10 f11 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f11 f5 f6 c==> c> cCARD f12 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f12 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f11 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f11 part cEMPTY f1 c==> cIN f8 * part cd_fan c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f10 * * part cINSERT f3 part cEMPTY f12 cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f8 * part cd_fan c, f2 c, f0 f1
+ (y IN (d1_fan (x , (V , E)))) |- (T = (((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E))))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E))))))
T c==> cIN f0 * part cd1_fan c, f1 c, f2 f3 c= cT c==> c==> cIN f0 * part cd1_fan c, f1 c, f2 f3 cIN cPOWER * * * part cf1_fan f1 f2 f3 f4 f0 * part cd1_fan c, f1 c, f2 f3 cIN cPOWER * * * part cf1_fan f1 f2 f3 f4 f0 * part cd1_fan c, f1 c, f2 f3
+ |- ((\u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((((~ ((pr2 y) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 y) = v)) \/ (((~ ((pr2 y) = u)) /\ ((pr3 y) = w)) \/ (~ ((pr3 y) IN (v INSERT (w INSERT EMPTY)))))) /\ (y IN (d_fan (x , (V , E))))))))))))))))))))))))))))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) y)) = ((((f1_fan x) V) E1) ((((tran x) V) E1) y)))))))))))) u)
T * / ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b8 f1 c> cCARD * * * part cset_of_edge b8 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 b0 c/\ c= cpr2 f6 b1 c/\ cIN * * part cINSERT f7 * * part cINSERT b0 part cEMPTY f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b1 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b0 b1 f7 c/\ c= cpr3 f4 b0 c/\ c= cpr3 f5 b1 c/\ c= b2 * * part cface chypermap1_of_fanx c, f0 c, f1 f8 c, f0 c, f7 c, b1 csigma_fan f0 f1 f8 f7 b1 c/\ c= b3 * * part cface chypermap1_of_fanx c, f0 c, f1 f8 c, f0 c, b1 c, f7 csigma_fan f0 f1 f8 b1 f7 c/\ c= c, f0 c, b1 c, f7 b0 b4 c/\ c= c, f0 c, f7 c, b0 b1 b5 c/\ c= c, f0 c, b0 c, b1 f7 b6 c/\ c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT b1 part cEMPTY part cEMPTY f8 c/\ c\/ c/\ c~ c= cpr2 b7 csigma_fan f0 f1 f2 f7 b0 c= cpr3 b7 f7 c\/ c/\ c~ c= cpr2 b7 b0 c= cpr3 b7 b1 c~ cIN cpr3 b7 * * part cINSERT f7 * * part cINSERT b1 part cEMPTY cIN b7 * part cd_fan c, f0 c, f1 f2 c= ctran f0 f1 f8 cf1_fan f0 f1 f2 b7 cf1_fan f0 f1 f8 ctran f0 f1 f8 b7 f9
+ |- (((int_le (int_of_num (NUMERAL _0))) (int_of_num n)) ==> ((~ ((int_lt (int_of_num m)) (int_of_num n))) \/ ((int_lt (int_of_num m)) ((int_add (int_of_num n)) (int_of_num (NUMERAL (BIT1 _0)))))))
T c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c\/ c~ cint_lt cint_of_num f1 cint_of_num f0 cint_lt cint_of_num f1 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0
+ |- (((!m. (!n. ((m < n) ==> (m < (SUC n))))) ==> ((\m. (!n. ((m < n) ==> (m < (SUC n))))) m)) = ((\m. (!n. ((m < n) ==> (m < (SUC n))))) m))
T c= c==> ! ! c==> c< b0 b1 c< b0 cSUC b1 * / ! c==> c< b0 b1 c< b0 cSUC b1 f0 * / ! c==> c< b0 b1 c< b0 cSUC b1 f0
- (y IN (d_fan (x , (V , E)))) |- ((y IN (d_fan (x , (V , E)))) = T)
T c==> cIN f0 * part cd_fan c, f1 c, f2 f3 c= cIN f0 * part cd_fan c, f1 c, f2 f3 cT
+ |- (((!f1. (!f2. (!f3. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1)))))))))) ==> ((\f1. (!f2. (!f3. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1)))))))))) f1)) = ((\f1. (!f2. (!f3. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1)))))))))) f1))
T c= c==> ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b6 f1 c> cCARD * * * part cset_of_edge b6 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 b0 b1 c/\ c= cf1_fan f0 f1 f2 b1 b2 c/\ c~ c= cf1_fan f0 f1 f2 b2 b0 c/\ c= cpr2 b0 b3 c/\ c= cpr2 b1 b4 c/\ c= cpr2 b2 b5 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f2 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b5 * * part cINSERT b3 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b4 b5 b3 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b3 * * part cINSERT b5 part cEMPTY part cEMPTY f4 cFAN c, f0 c, f1 f4 * / ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b6 f1 c> cCARD * * * part cset_of_edge b6 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 b0 b1 c/\ c= cf1_fan f0 f1 f2 b1 b2 c/\ c~ c= cf1_fan f0 f1 f2 b2 b0 c/\ c= cpr2 b0 b3 c/\ c= cpr2 b1 b4 c/\ c= cpr2 b2 b5 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f2 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b5 * * part cINSERT b3 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b4 b5 b3 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b3 * * part cINSERT b5 part cEMPTY part cEMPTY f4 cFAN c, f0 c, f1 f4 f5 * / ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b6 f1 c> cCARD * * * part cset_of_edge b6 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 b0 b1 c/\ c= cf1_fan f0 f1 f2 b1 b2 c/\ c~ c= cf1_fan f0 f1 f2 b2 b0 c/\ c= cpr2 b0 b3 c/\ c= cpr2 b1 b4 c/\ c= cpr2 b2 b5 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f2 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b5 * * part cINSERT b3 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b4 b5 b3 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b3 * * part cINSERT b5 part cEMPTY part cEMPTY f4 cFAN c, f0 c, f1 f4 f5
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((pr3 f1) = u), ((pr3 f2) = w), ((((((sigma_fan x) V) E) u) w) = v), ((~ ((pr2 (((POWER (((f1_fan x) V) E)) n) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = v)), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (y IN (d_fan (x , (V , E)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((~ ((pr2 (((POWER (((f1_fan x) V) E)) n) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = v)) /\ (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= c, f2 c, f10 c, f5 f6 f11 c==> c= c, f2 c, f6 c, f10 f5 f12 c==> c= c, f2 c, f5 c, f6 f10 f13 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f10 c==> c= cpr2 f3 f5 c==> c= cpr3 f4 f10 c==> c= cpr3 f14 f5 c==> c= csigma_fan f2 f0 f1 f10 f5 f6 c==> c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 f15 f16 csigma_fan f2 f0 f1 f6 f10 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f15 f16 f6 c==> c> cCARD f17 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f17 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f10 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f10 part cEMPTY f1 c==> cIN f16 * part cd_fan c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f17 c/\ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 f15 f16 csigma_fan f2 f0 f1 f6 f10 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f15 f16 f6 c= ctran f2 f0 f7 cf1_fan f2 f0 f1 cPOWER * * * part cf1_fan f2 f0 f1 f15 f16 cf1_fan f2 f0 f7 ctran f2 f0 f7 cPOWER * * * part cf1_fan f2 f0 f1 f15 f16
+ |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _3077585) ==> (((int_le (int_of_num (NUMERAL _0))) _3077586) ==> ((~ ((int_lt _3077585) _3077586)) \/ ((int_lt _3077585) ((int_add _3077586) (int_of_num (NUMERAL (BIT1 _0))))))))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ c~ cint_lt f0 f1 cint_lt f0 cint_add f1 cint_of_num cNUMERAL cBIT1 c_0
+ ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((e_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) /\ ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((n_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) /\ (!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))))), (y IN (d1_fan (x , (V , E)))) |- (((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((e_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) /\ ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((n_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) /\ (!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))))) /\ ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))
T c==> c/\ ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part ce_fan f0 f1 f2 f3 b0 * part cd1_fan c, f0 c, f1 f2 c/\ ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part cn_fan f0 f1 f2 f3 b0 * part cd1_fan c, f0 c, f1 f2 ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 b0 * part cd1_fan c, f0 c, f1 f2 c==> cIN f4 * part cd1_fan c, f0 c, f1 f2 c/\ c/\ ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part ce_fan f0 f1 f2 f3 b0 * part cd1_fan c, f0 c, f1 f2 c/\ ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part cn_fan f0 f1 f2 f3 b0 * part cd1_fan c, f0 c, f1 f2 ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 b0 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd1_fan c, f0 c, f1 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((y IN (d_fan (x , (V , E)))) /\ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY))))))))))))))))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f5 f7 c==> c= cpr2 f3 f8 c==> c/\ c~ cIN * * part cINSERT f8 * * part cINSERT f6 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 f7 f8 f6 c/\ c= cpr3 f4 f7 c/\ c= cpr3 f5 f8 c/\ c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f6 c, f8 csigma_fan f2 f0 f10 f6 f8 c/\ c= f11 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f8 c, f6 csigma_fan f2 f0 f10 f8 f6 c/\ c= c, f2 c, f8 c, f6 f7 f12 c/\ c= c, f2 c, f6 c, f7 f8 f13 c/\ c= c, f2 c, f7 c, f8 f6 f14 c/\ c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f8 part cEMPTY part cEMPTY f10 c/\ cIN f15 * part cd_fan c, f2 c, f0 f1 ! c==> c< b0 f16 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 csigma_fan f2 f0 f1 f6 f7 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f6 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f7 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f8 c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 * * part cINSERT f6 * * part cINSERT f8 part cEMPTY c==> c> cCARD f17 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f17 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f7 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f17 c= ctran f2 f0 f10 cPOWER * * * part cf1_fan f2 f0 f1 f16 f15 cPOWER * * * part cf1_fan f2 f0 f10 f16 ctran f2 f0 f10 f15
+ |- (((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1)))) ==> ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))))) = ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f10 cFAN c, f0 c, f1 f10 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f0 f1 f2 f11 f12 * * part cINSERT f7 * * part cINSERT f9 part cEMPTY cIN cPOWER * * * part cf1_fan f0 f1 f2 f11 f12 * part cd_fan c, f0 c, f1 f2 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f0 f1 f2 f11 f12 * * part cINSERT f7 * * part cINSERT f9 part cEMPTY cIN cPOWER * * * part cf1_fan f0 f1 f2 f11 f12 * part cd_fan c, f0 c, f1 f2
+ (!m. ((m < (SUC n)) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))), (m < n) |- ((m < n) /\ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))
T c==> ! c==> c< b0 cSUC f0 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 csigma_fan f1 f2 f3 f5 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f5 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f7 c~ cIN cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 * * part cINSERT f5 * * part cINSERT f7 part cEMPTY c==> c< f8 f0 c/\ c< f8 f0 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 csigma_fan f1 f2 f3 f5 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 f5 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 f7 c~ cIN cpr3 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 * * part cINSERT f5 * * part cINSERT f7 part cEMPTY
+ |- ((!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (!y. (!n. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((y IN (d_fan (x , (V , E)))) /\ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY))))))))))))))))))))))))))))))))) ==> (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b16 f1 c> cCARD * * * part cset_of_edge b16 f1 b0 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 b0 c/\ cIN b2 * part cface_set chypermap1_of_fanx c, f0 c, f1 b0 c/\ c> cCARD b2 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY b2 c/\ c= cf1_fan f0 f1 b0 b3 b4 c/\ c= cf1_fan f0 f1 b0 b4 b5 c/\ c~ c= cf1_fan f0 f1 b0 b5 b3 c/\ c= cpr2 b3 b6 c/\ c= cpr2 b4 b7 c/\ c= cpr2 b5 b8 c/\ cIN * * part cINSERT b6 * * part cINSERT b7 part cEMPTY b0 c/\ cIN * * part cINSERT b7 * * part cINSERT b8 part cEMPTY b0 c/\ c~ cIN * * part cINSERT b8 * * part cINSERT b6 part cEMPTY b0 c/\ c= csigma_fan f0 f1 b0 b7 b8 b6 c/\ c= cpr3 b3 b7 c/\ c= cpr3 b4 b8 c/\ c= b9 * * part cface chypermap1_of_fanx c, f0 c, f1 b1 c, f0 c, b6 c, b8 csigma_fan f0 f1 b1 b6 b8 c/\ c= b10 * * part cface chypermap1_of_fanx c, f0 c, f1 b1 c, f0 c, b8 c, b6 csigma_fan f0 f1 b1 b8 b6 c/\ c= c, f0 c, b8 c, b6 b7 b11 c/\ c= c, f0 c, b6 c, b7 b8 b12 c/\ c= c, f0 c, b7 c, b8 b6 b13 c/\ c= * * part cUNION b0 * * part cINSERT * * part cINSERT b6 * * part cINSERT b8 part cEMPTY part cEMPTY b1 c/\ cIN b14 * part cd_fan c, f0 c, f1 b0 ! c==> c< b16 b15 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f0 f1 b0 b16 b14 csigma_fan f0 f1 b0 b6 b7 c= cpr3 cPOWER * * * part cf1_fan f0 f1 b0 b16 b14 b6 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f0 f1 b0 b16 b14 b7 c= cpr3 cPOWER * * * part cf1_fan f0 f1 b0 b16 b14 b8 c~ cIN cpr3 cPOWER * * * part cf1_fan f0 f1 b0 b16 b14 * * part cINSERT b6 * * part cINSERT b8 part cEMPTY c= ctran f0 f1 b1 cPOWER * * * part cf1_fan f0 f1 b0 b15 b14 cPOWER * * * part cf1_fan f0 f1 b1 b15 ctran f0 f1 b1 b14 cT
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((y IN (d_fan (x , (V , E)))) /\ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))))))))))))))))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f3 c==> c/\ c= cpr2 f4 f6 c/\ c= cpr2 f5 f7 c/\ c= cpr2 f3 f8 c/\ cIN * * part cINSERT f6 * * part cINSERT f7 part cEMPTY f1 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f1 c/\ c~ cIN * * part cINSERT f8 * * part cINSERT f6 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 f7 f8 f6 c/\ c= cpr3 f4 f7 c/\ c= cpr3 f5 f8 c/\ c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f6 c, f8 csigma_fan f2 f0 f10 f6 f8 c/\ c= f11 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f8 c, f6 csigma_fan f2 f0 f10 f8 f6 c/\ c= c, f2 c, f8 c, f6 f7 f12 c/\ c= c, f2 c, f6 c, f7 f8 f13 c/\ c= c, f2 c, f7 c, f8 f6 f14 c/\ c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f8 part cEMPTY part cEMPTY f10 c/\ cIN f15 * part cd_fan c, f2 c, f0 f1 ! c==> c< b0 f16 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 csigma_fan f2 f0 f1 f6 f7 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f6 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f7 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f8 c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 * * part cINSERT f6 * * part cINSERT f8 part cEMPTY c==> c> cCARD f17 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f17 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f17 c= ctran f2 f0 f10 cPOWER * * * part cf1_fan f2 f0 f1 f16 f15 cPOWER * * * part cf1_fan f2 f0 f10 f16 ctran f2 f0 f10 f15
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) |- (((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))) ==> ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))))) = ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0)))))) ==> ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY part cEMPTY f5 c= c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f5 cNUMERAL cBIT1 c_0 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f6 f7 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN cPOWER * * * part cf1_fan f2 f0 f1 f6 f7 * part cd_fan c, f2 c, f0 f1 c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c= f5 * * part cUNION f1 * * part cINSERT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY part cEMPTY ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f5 cNUMERAL cBIT1 c_0 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f6 f7 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN cPOWER * * * part cf1_fan f2 f0 f1 f6 f7 * part cd_fan c, f2 c, f0 f1
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((pr2 (((POWER (((f1_fan x) V) E)) n) y)) = u)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((pr3 f1) = u), ((pr3 f2) = w), ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (y IN (d_fan (x , (V , E)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 f5 f6 f7 c==> c~ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f9 * * part cINSERT f8 part cEMPTY part cEMPTY f10 c==> c= f11 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f9 c, f8 csigma_fan f2 f0 f10 f9 f8 c==> c= f12 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f8 c, f9 csigma_fan f2 f0 f10 f8 f9 c==> c= c, f2 c, f7 c, f8 f9 f13 c==> c= c, f2 c, f9 c, f7 f8 f14 c==> c= c, f2 c, f8 c, f9 f7 f15 c==> c= cf1_fan f2 f0 f1 f4 f16 c==> c= cf1_fan f2 f0 f1 f16 f3 c==> c= cpr2 f4 f9 c==> c= cpr2 f16 f7 c==> c= cpr2 f3 f8 c==> c= cpr3 f4 f7 c==> c= cpr3 f16 f8 c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f5 f6 f8 c==> c= csigma_fan f2 f0 f1 f7 f8 f9 c==> c> cCARD f17 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f17 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f1 c==> cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f1 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f16 * * part cINSERT f3 part cEMPTY f17 c= ctran f2 f0 f10 cf1_fan f2 f0 f1 cPOWER * * * part cf1_fan f2 f0 f1 f5 f6 cf1_fan f2 f0 f10 ctran f2 f0 f10 cPOWER * * * part cf1_fan f2 f0 f1 f5 f6
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), (y IN (d_fan (x , (V , E)))) |- ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))) /\ ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f2 cNUMERAL cBIT1 c_0 c==> cFAN c, f3 c, f0 f1 c==> cFAN c, f3 c, f0 f2 c==> cIN f4 * part cd_fan c, f3 c, f0 f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f2 cNUMERAL cBIT1 c_0 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f3 f0 f1 f5 f4 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cIN cPOWER * * * part cf1_fan f3 f0 f1 f5 f4 * part cd_fan c, f3 c, f0 f1
+ |- ((\f. (((POWER f) (SUC n)) = (f o ((POWER f) n)))) f)
T * / c= * * part cPOWER b0 cSUC f0 * * part co b0 * * part cPOWER b0 f0 f1
+ |- ((\E. (!n. ((FAN (x , (V , E))) ==> ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((e_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) /\ ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((n_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) /\ (!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E))))))))))) E)
T * / ! c==> cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b2 * part cd1_fan c, f0 c, f1 b0 cIN cPOWER * * * part ce_fan f0 f1 b0 b1 b2 * part cd1_fan c, f0 c, f1 b0 c/\ ! c==> cIN b2 * part cd1_fan c, f0 c, f1 b0 cIN cPOWER * * * part cn_fan f0 f1 b0 b1 b2 * part cd1_fan c, f0 c, f1 b0 ! c==> cIN b2 * part cd1_fan c, f0 c, f1 b0 cIN cPOWER * * * part cf1_fan f0 f1 b0 b1 b2 * part cd1_fan c, f0 c, f1 b0 f2
+ |- (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((((~ ((pr2 (((POWER (((f1_fan x) V) E)) n) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) n) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))))) /\ ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))))))))))))))))))))))))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= cpr3 f4 f8 c/\ c= cpr3 f5 f9 c/\ c= f10 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f7 c, f9 csigma_fan f0 f1 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 c/\ c= c, f0 c, f9 c, f7 f8 f13 c/\ c= c, f0 c, f7 c, f8 f9 f14 c/\ c= c, f0 c, f8 c, f9 f7 f15 c/\ c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c/\ c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f16 f17 csigma_fan f0 f1 f2 f7 f8 c= cpr3 cPOWER * * * part cf1_fan f0 f1 f2 f16 f17 f7 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f16 f17 f8 c= cpr3 cPOWER * * * part cf1_fan f0 f1 f2 f16 f17 f9 c~ cIN cpr3 cPOWER * * * part cf1_fan f0 f1 f2 f16 f17 * * part cINSERT f7 * * part cINSERT f9 part cEMPTY cIN cPOWER * * * part cf1_fan f0 f1 f2 f16 f17 * part cd_fan c, f0 c, f1 f2 c= ctran f0 f1 f11 cf1_fan f0 f1 f2 cPOWER * * * part cf1_fan f0 f1 f2 f16 f17 cf1_fan f0 f1 f11 ctran f0 f1 f11 cPOWER * * * part cf1_fan f0 f1 f2 f16 f17
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), (y IN (d_fan (x , (V , E)))) |- (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f3 c==> cFAN c, f2 c, f0 f1 c==> c= * part cd_fan c, f2 c, f0 f3 * part cd1_fan c, f2 c, f0 f3 c==> cIN f4 * part cd_fan c, f2 c, f0 f3 c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f3 f5 f4 f6 cIN cPOWER * * * part cf1_fan f2 f0 f3 f5 f4 * part cd1_fan c, f2 c, f0 f3
+ |- ((m < n) = ((int_lt (int_of_num m)) (int_of_num n)))
T c= c< f0 f1 cint_lt cint_of_num f0 cint_of_num f1
+ (((real_ge (real_of_int _3077585)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3077586)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!m. ((m < (SUC n)) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))), (m < n) |- (T = (((m < n) ==> (m < (SUC n))) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY))))))))
T c==> ! c==> c< b0 cSUC f0 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 csigma_fan f1 f2 f3 f5 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f5 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f7 c~ cIN cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 * * part cINSERT f5 * * part cINSERT f7 part cEMPTY c==> c< f8 f0 c= cT c==> c==> c< f8 f0 c< f8 cSUC f0 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 csigma_fan f1 f2 f3 f5 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 f5 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 f7 c~ cIN cpr3 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 * * part cINSERT f5 * * part cINSERT f7 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), (y IN (d_fan (x , (V , E)))) |- ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))) ==> ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> cIN f4 * part cd_fan c, f2 c, f0 f1 c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f3 cNUMERAL cBIT1 c_0 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f5 f4 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cIN cPOWER * * * part cf1_fan f2 f0 f1 f5 f4 * part cd_fan c, f2 c, f0 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (y IN (d_fan (x , (V , E)))) |- ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0)))))) ==> ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c= f3 * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f3 cNUMERAL cBIT1 c_0 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * part cd_fan c, f2 c, f0 f1
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (y IN (d_fan (x , (V , E)))) |- ((((dart (hypermap1_of_fanx (x , (V , E1)))) = (d_fan (x , (V , E1)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1)))))))) ==> ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c==> c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f3 * part cd_fan c, f2 c, f0 f3 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part ce_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part cn_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part cf1_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * part cd_fan c, f2 c, f0 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((y IN (d_fan (x , (V , E)))) /\ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY))))))))))))))))))))))))))))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f2 f0 f1 f4 f5 c/\ c= cf1_fan f2 f0 f1 f5 f6 c/\ c~ c= cf1_fan f2 f0 f1 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f1 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f1 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 f8 f9 f7 c/\ c= cpr3 f4 f8 c/\ c= cpr3 f5 f9 c/\ c= f10 * * part cface chypermap1_of_fanx c, f2 c, f0 f11 c, f2 c, f7 c, f9 csigma_fan f2 f0 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f2 c, f0 f11 c, f2 c, f9 c, f7 csigma_fan f2 f0 f11 f9 f7 c/\ c= c, f2 c, f9 c, f7 f8 f13 c/\ c= c, f2 c, f7 c, f8 f9 f14 c/\ c= c, f2 c, f8 c, f9 f7 f15 c/\ c= * * part cUNION f1 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c/\ cIN f16 * part cd_fan c, f2 c, f0 f1 ! c==> c< b0 f17 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 csigma_fan f2 f0 f1 f7 f8 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 f7 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 f8 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 f9 c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 * * part cINSERT f7 * * part cINSERT f9 part cEMPTY c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c= ctran f2 f0 f11 cPOWER * * * part cf1_fan f2 f0 f1 f17 f16 cPOWER * * * part cf1_fan f2 f0 f11 f17 ctran f2 f0 f11 f16
+ (FAN (x , (V , E))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), (y IN (d_fan (x , (V , E)))) |- (((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))) ==> ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E))))))
T c==> cFAN c, f0 c, f1 f2 c==> c= * part cd_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2 c==> cIN f3 * part cd_fan c, f0 c, f1 f2 c==> c= * part cd_fan c, f0 c, f1 f4 * part cd1_fan c, f0 c, f1 f4 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f0 f1 f2 f5 f3 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cIN cPOWER * * * part cf1_fan f0 f1 f2 f5 f3 * part cd1_fan c, f0 c, f1 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), (((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (y IN (d_fan (x , (V , E)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f8 * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f9 c==> c= cf1_fan f2 f0 f1 f4 f10 c==> c= cf1_fan f2 f0 f1 f10 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f10 f11 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f11 f5 f6 c==> c==> cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f8 * part cd_fan c, f2 c, f0 f1 c= ctran f2 f0 f9 cf1_fan f2 f0 f1 cPOWER * * * part cf1_fan f2 f0 f1 f7 f8 cf1_fan f2 f0 f9 ctran f2 f0 f9 cPOWER * * * part cf1_fan f2 f0 f1 f7 f8 c==> c> cCARD f12 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f12 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f11 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f11 part cEMPTY f1 c==> cIN f8 * part cd_fan c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f10 * * part cINSERT f3 part cEMPTY f12 c= ctran f2 f0 f9 cf1_fan f2 f0 f1 cPOWER * * * part cf1_fan f2 f0 f1 f7 f8 cf1_fan f2 f0 f9 ctran f2 f0 f9 cPOWER * * * part cf1_fan f2 f0 f1 f7 f8
+ |- ((\u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1)))))) u)
T * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 b0 c/\ c= cpr2 f6 b1 c/\ cIN * * part cINSERT f7 * * part cINSERT b0 part cEMPTY f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b1 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b0 b1 f7 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT b1 part cEMPTY part cEMPTY f8 cFAN c, f0 c, f1 f8 f9
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((y IN (d_fan (x , (V , E)))) /\ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY))))))))))))))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cf1_fan f2 f0 f1 f4 f7 c==> c= cf1_fan f2 f0 f1 f7 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f7 f8 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f8 f5 f6 c==> c/\ c= cpr3 f4 f8 c/\ c= cpr3 f7 f5 c/\ c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f6 c, f5 csigma_fan f2 f0 f10 f6 f5 c/\ c= f11 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f5 c, f6 csigma_fan f2 f0 f10 f5 f6 c/\ c= c, f2 c, f5 c, f6 f8 f12 c/\ c= c, f2 c, f6 c, f8 f5 f13 c/\ c= c, f2 c, f8 c, f5 f6 f14 c/\ c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f10 c/\ cIN f15 * part cd_fan c, f2 c, f0 f1 ! c==> c< b0 f16 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 csigma_fan f2 f0 f1 f6 f8 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f6 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f8 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f5 c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c==> c> cCARD f17 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f17 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f8 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f8 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f7 * * part cINSERT f3 part cEMPTY f17 c= ctran f2 f0 f10 cPOWER * * * part cf1_fan f2 f0 f1 f16 f15 cPOWER * * * part cf1_fan f2 f0 f10 f16 ctran f2 f0 f10 f15
- (((real_ge (real_of_int _3077585)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3077586)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!f2. (!f3. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1))))))))) ==> ((\f2. (!f3. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1))))))))) f2)) = ((\f2. (!f3. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1))))))))) f2))
T c= c==> ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b5 f1 c> cCARD * * * part cset_of_edge b5 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 b0 c/\ c= cf1_fan f0 f1 f2 b0 b1 c/\ c~ c= cf1_fan f0 f1 f2 b1 f4 c/\ c= cpr2 f4 b2 c/\ c= cpr2 b0 b3 c/\ c= cpr2 b1 b4 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b4 * * part cINSERT b2 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b3 b4 b2 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b2 * * part cINSERT b4 part cEMPTY part cEMPTY f5 cFAN c, f0 c, f1 f5 * / ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b5 f1 c> cCARD * * * part cset_of_edge b5 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 b0 c/\ c= cf1_fan f0 f1 f2 b0 b1 c/\ c~ c= cf1_fan f0 f1 f2 b1 f4 c/\ c= cpr2 f4 b2 c/\ c= cpr2 b0 b3 c/\ c= cpr2 b1 b4 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b4 * * part cINSERT b2 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b3 b4 b2 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b2 * * part cINSERT b4 part cEMPTY part cEMPTY f5 cFAN c, f0 c, f1 f5 f6 * / ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b5 f1 c> cCARD * * * part cset_of_edge b5 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 b0 c/\ c= cf1_fan f0 f1 f2 b0 b1 c/\ c~ c= cf1_fan f0 f1 f2 b1 f4 c/\ c= cpr2 f4 b2 c/\ c= cpr2 b0 b3 c/\ c= cpr2 b1 b4 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b4 * * part cINSERT b2 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b3 b4 b2 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b2 * * part cINSERT b4 part cEMPTY part cEMPTY f5 cFAN c, f0 c, f1 f5 f6
+ |- ((\x. (!V. (!E. (!E1. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0)))))))))) x)
T * / ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b4 b1 c> cCARD * * * part cset_of_edge b4 b1 b2 cNUMERAL cBIT1 c_0 c= b3 * * part cUNION b2 * * part cINSERT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY ! c==> cIN b4 b1 c> cCARD * * * part cset_of_edge b4 b1 b3 cNUMERAL cBIT1 c_0 f2
+ |- (((int_le (int_of_num (NUMERAL _0))) _3077589) ==> ((int_lt _3077589) ((int_add _3077589) (int_of_num (NUMERAL (BIT1 _0))))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 cint_lt f0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((pr3 f1) = u), ((pr3 f2) = w), ((((((sigma_fan x) V) E) u) w) = v), ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((y IN (d_fan (x , (V , E)))) /\ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY))))))))))))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f7 * * part cface chypermap1_of_fanx c, f2 c, f0 f8 c, f2 c, f6 c, f5 csigma_fan f2 f0 f8 f6 f5 c==> c= cf1_fan f2 f0 f1 f4 f9 c==> c= cf1_fan f2 f0 f1 f9 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f9 f10 c==> c= cpr2 f3 f5 c==> c= cpr3 f4 f10 c==> c= cpr3 f9 f5 c==> c= csigma_fan f2 f0 f1 f10 f5 f6 c==> c/\ c= f7 * * part cface chypermap1_of_fanx c, f2 c, f0 f8 c, f2 c, f6 c, f5 csigma_fan f2 f0 f8 f6 f5 c/\ c= f11 * * part cface chypermap1_of_fanx c, f2 c, f0 f8 c, f2 c, f5 c, f6 csigma_fan f2 f0 f8 f5 f6 c/\ c= c, f2 c, f5 c, f6 f10 f12 c/\ c= c, f2 c, f6 c, f10 f5 f13 c/\ c= c, f2 c, f10 c, f5 f6 f14 c/\ c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f8 c/\ cIN f15 * part cd_fan c, f2 c, f0 f1 ! c==> c< b0 f16 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 csigma_fan f2 f0 f1 f6 f10 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f6 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f10 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f5 c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c==> c> cCARD f17 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f17 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f10 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f10 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f9 * * part cINSERT f3 part cEMPTY f17 c= ctran f2 f0 f8 cPOWER * * * part cf1_fan f2 f0 f1 f16 f15 cPOWER * * * part cf1_fan f2 f0 f8 f16 ctran f2 f0 f8 f15
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (y IN (d_fan (x , (V , E)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1)))) ==> (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = v) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= cf1_fan f2 f0 f1 f4 f8 c==> c= cf1_fan f2 f0 f1 f8 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f8 f9 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f9 f5 f6 c==> c> cCARD f10 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f10 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f9 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f9 part cEMPTY f1 c==> cIN f11 * part cd_fan c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f8 * * part cINSERT f3 part cEMPTY f10 c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f2 c, f0 f1 c/\ cIN f10 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c/\ c> cCARD f10 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f8 * * part cINSERT f3 part cEMPTY f10 c/\ c= cf1_fan f2 f0 f1 f4 f8 c/\ c= cf1_fan f2 f0 f1 f8 f3 c/\ c~ c= cf1_fan f2 f0 f1 f3 f4 c/\ c= cpr2 f4 f6 c/\ c= cpr2 f8 f9 c/\ c= cpr2 f3 f5 c/\ cIN * * part cINSERT f6 * * part cINSERT f9 part cEMPTY f1 c/\ cIN * * part cINSERT f9 * * part cINSERT f5 part cEMPTY f1 c/\ c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 f9 f5 f6 c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 cFAN c, f2 c, f0 f7 c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f12 f11 f6 cIN cPOWER * * * part cf1_fan f2 f0 f1 f12 f11 * part cd_fan c, f2 c, f0 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((pr3 f1) = u), ((pr3 f2) = w), ((((((sigma_fan x) V) E) u) w) = v), ((~ ((pr2 (((POWER (((f1_fan x) V) E)) n) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w)), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (y IN (d_fan (x , (V , E)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((~ ((pr2 (((POWER (((f1_fan x) V) E)) n) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w)) /\ (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= c, f2 c, f10 c, f5 f6 f11 c==> c= c, f2 c, f6 c, f10 f5 f12 c==> c= c, f2 c, f5 c, f6 f10 f13 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f10 c==> c= cpr2 f3 f5 c==> c= cpr3 f4 f10 c==> c= cpr3 f14 f5 c==> c= csigma_fan f2 f0 f1 f10 f5 f6 c==> c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 f15 f16 f10 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f15 f16 f5 c==> c> cCARD f17 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f17 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f10 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f10 part cEMPTY f1 c==> cIN f16 * part cd_fan c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f17 c/\ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 f15 f16 f10 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f15 f16 f5 c= ctran f2 f0 f7 cf1_fan f2 f0 f1 cPOWER * * * part cf1_fan f2 f0 f1 f15 f16 cf1_fan f2 f0 f7 ctran f2 f0 f7 cPOWER * * * part cf1_fan f2 f0 f1 f15 f16
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (y IN (d_fan (x , (V , E)))) |- ((((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((e_fan x) V) E)) (d1_fan (x , (V , E))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((n_fan x) V) E)) (d1_fan (x , (V , E))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((f1_fan x) V) E)) (d1_fan (x , (V , E)))))))) ==> (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = v) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c==> c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f1 * part cd_fan c, f2 c, f0 f1 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part ce_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cn_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cf1_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 f4 cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * part cd_fan c, f2 c, f0 f1
+ |- ((t \/ T) = T)
T c= c\/ f0 cT cT
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (y IN (d_fan (x , (V , E)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1)))) ==> (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= cf1_fan f2 f0 f1 f4 f8 c==> c= cf1_fan f2 f0 f1 f8 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f8 f9 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f9 f5 f6 c==> c> cCARD f10 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f10 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f9 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f9 part cEMPTY f1 c==> cIN f11 * part cd_fan c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f8 * * part cINSERT f3 part cEMPTY f10 c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f2 c, f0 f1 c/\ cIN f10 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c/\ c> cCARD f10 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f8 * * part cINSERT f3 part cEMPTY f10 c/\ c= cf1_fan f2 f0 f1 f4 f8 c/\ c= cf1_fan f2 f0 f1 f8 f3 c/\ c~ c= cf1_fan f2 f0 f1 f3 f4 c/\ c= cpr2 f4 f6 c/\ c= cpr2 f8 f9 c/\ c= cpr2 f3 f5 c/\ cIN * * part cINSERT f6 * * part cINSERT f9 part cEMPTY f1 c/\ cIN * * part cINSERT f9 * * part cINSERT f5 part cEMPTY f1 c/\ c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 f9 f5 f6 c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 cFAN c, f2 c, f0 f7 c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f12 f11 f5 cIN cPOWER * * * part cf1_fan f2 f0 f1 f12 f11 * part cd_fan c, f2 c, f0 f1
+ |- ((\v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1))))))) v)
T * / ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 b0 c/\ c= cpr2 f5 b1 c/\ c= cpr2 f6 b2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b2 * * part cINSERT b0 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b1 b2 b0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY part cEMPTY f7 cFAN c, f0 c, f1 f7 f8
- (~ ((pr2 (((POWER (((f1_fan x) V) E)) n) y)) = u)) |- (~ (u = (pr2 (((POWER (((f1_fan x) V) E)) n) y))))
T c==> c~ c= cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 f5 c~ c= f5 cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _3077589)) /\ ((real_le ((real_add (real_of_int _3077589)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077589))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _3077589)) /\ ((real_le ((real_add (real_of_int _3077589)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077589))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _3077589)) /\ ((real_le ((real_add (real_of_int _3077589)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077589)))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
+ ((u INSERT (w INSERT EMPTY)) IN E) |- (((u INSERT (w INSERT EMPTY)) IN E) = T)
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c= cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cT
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _3077589)) /\ ((real_le ((real_add (real_of_int _3077589)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077589))) = (~ (((int_le (int_of_num (NUMERAL _0))) _3077589) ==> ((int_lt _3077589) ((int_add _3077589) (int_of_num (NUMERAL (BIT1 _0))))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 cint_lt f0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((y IN (d_fan (x , (V , E)))) /\ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))))))))))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cf1_fan f2 f0 f1 f4 f7 c==> c= cf1_fan f2 f0 f1 f7 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f7 f8 c==> c= cpr2 f3 f5 c==> c/\ c= csigma_fan f2 f0 f1 f8 f5 f6 c/\ c= cpr3 f4 f8 c/\ c= cpr3 f7 f5 c/\ c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f6 c, f5 csigma_fan f2 f0 f10 f6 f5 c/\ c= f11 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f5 c, f6 csigma_fan f2 f0 f10 f5 f6 c/\ c= c, f2 c, f5 c, f6 f8 f12 c/\ c= c, f2 c, f6 c, f8 f5 f13 c/\ c= c, f2 c, f8 c, f5 f6 f14 c/\ c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f10 c/\ cIN f15 * part cd_fan c, f2 c, f0 f1 ! c==> c< b0 f16 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 csigma_fan f2 f0 f1 f6 f8 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f6 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f8 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f5 c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c==> c> cCARD f17 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f17 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f8 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f8 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f7 * * part cINSERT f3 part cEMPTY f17 c= ctran f2 f0 f10 cPOWER * * * part cf1_fan f2 f0 f1 f16 f15 cPOWER * * * part cf1_fan f2 f0 f10 f16 ctran f2 f0 f10 f15
- (~ ((pr2 (((POWER (((f1_fan x) V) E)) n) y)) = (((((sigma_fan x) V) E) v) u))) |- (((~ ((((((sigma_fan x) V) E) v) u) = (pr2 (((POWER (((f1_fan x) V) E)) n) y)))) ==> (((((((sigma_fan x) V) E) v) u) = (pr2 (((POWER (((f1_fan x) V) E)) n) y))) = F)) = (((((((sigma_fan x) V) E) v) u) = (pr2 (((POWER (((f1_fan x) V) E)) n) y))) = F))
T c==> c~ c= cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 csigma_fan f0 f1 f2 f5 f6 c= c==> c~ c= csigma_fan f0 f1 f2 f5 f6 cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 c= c= csigma_fan f0 f1 f2 f5 f6 cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 cF c= c= csigma_fan f0 f1 f2 f5 f6 cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 cF
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- ((!n. ((~ ((int_lt (int_of_num m)) (int_of_num n))) \/ ((int_lt (int_of_num m)) ((int_add (int_of_num n)) (int_of_num (NUMERAL (BIT1 _0))))))) = T)
T c= ! c\/ c~ cint_lt cint_of_num f0 cint_of_num b0 cint_lt cint_of_num f0 cint_add cint_of_num b0 cint_of_num cNUMERAL cBIT1 c_0 cT
+ (!m. ((m < (SUC n)) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((pr3 f1) = u), ((pr3 f2) = w), ((((((sigma_fan x) V) E) u) w) = v), ((!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))) ==> (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (y IN (d_fan (x , (V , E)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) (SUC n)) y)) = (((POWER (((f1_fan x) V) E1)) (SUC n)) ((((tran x) V) E1) y)))
T c==> ! c==> c< b0 cSUC f0 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 csigma_fan f1 f2 f3 f5 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f5 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f7 c~ cIN cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 * * part cINSERT f5 * * part cINSERT f7 part cEMPTY c==> ! c==> cIN b0 f2 c> cCARD * * * part cset_of_edge b0 f2 f3 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f1 f2 f3 f8 f9 c==> c~ cIN * * part cINSERT f7 * * part cINSERT f5 part cEMPTY f3 c==> cFAN c, f1 c, f2 f3 c==> cfan80 c, f1 c, f2 f3 c==> c= * * part cUNION f3 * * part cINSERT * * part cINSERT f5 * * part cINSERT f7 part cEMPTY part cEMPTY f10 c==> c= f11 * * part cface chypermap1_of_fanx c, f1 c, f2 f10 c, f1 c, f5 c, f7 csigma_fan f1 f2 f10 f5 f7 c==> c= f12 * * part cface chypermap1_of_fanx c, f1 c, f2 f10 c, f1 c, f7 c, f5 csigma_fan f1 f2 f10 f7 f5 c==> c= c, f1 c, f6 c, f7 f5 f13 c==> c= c, f1 c, f5 c, f6 f7 f14 c==> c= c, f1 c, f7 c, f5 f6 f15 c==> c= cf1_fan f1 f2 f3 f9 f16 c==> c= cf1_fan f1 f2 f3 f16 f8 c==> c= cpr2 f9 f5 c==> c= cpr2 f16 f6 c==> c= cpr2 f8 f7 c==> c= cpr3 f9 f6 c==> c= cpr3 f16 f7 c==> c= csigma_fan f1 f2 f3 f6 f7 f5 c==> c==> ! c==> c< b0 f0 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 csigma_fan f1 f2 f3 f5 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f5 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f7 c~ cIN cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 * * part cINSERT f5 * * part cINSERT f7 part cEMPTY c= ctran f1 f2 f10 cPOWER * * * part cf1_fan f1 f2 f3 f0 f4 cPOWER * * * part cf1_fan f1 f2 f10 f0 ctran f1 f2 f10 f4 c==> c> cCARD f17 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f17 * part cface_set chypermap1_of_fanx c, f1 c, f2 f3 c==> cIN * * part cINSERT f6 * * part cINSERT f7 part cEMPTY f3 c==> cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c==> cIN f4 * part cd_fan c, f1 c, f2 f3 c==> cSUBSET * * part cINSERT f9 * * part cINSERT f16 * * part cINSERT f8 part cEMPTY f17 c= ctran f1 f2 f10 cPOWER * * * part cf1_fan f1 f2 f3 cSUC f0 f4 cPOWER * * * part cf1_fan f1 f2 f10 cSUC f0 ctran f1 f2 f10 f4
+ |- ((\f10. (!f20. (!f30. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((((~ ((pr2 y) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 y) = v)) \/ (((~ ((pr2 y) = u)) /\ ((pr3 y) = w)) \/ (~ ((pr3 y) IN (v INSERT (w INSERT EMPTY)))))) /\ (y IN (d_fan (x , (V , E))))))))))))))))))))))))))))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) y)) = ((((f1_fan x) V) E1) ((((tran x) V) E1) y)))))))) f10)
T * / ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b4 f1 c> cCARD * * * part cset_of_edge b4 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= cpr3 f4 f8 c/\ c= cpr3 f5 f9 c/\ c= f10 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f7 c, f9 csigma_fan f0 f1 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 c/\ c= c, f0 c, f9 c, f7 f8 b0 c/\ c= c, f0 c, f7 c, f8 f9 b1 c/\ c= c, f0 c, f8 c, f9 f7 b2 c/\ c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c/\ c\/ c/\ c~ c= cpr2 b3 csigma_fan f0 f1 f2 f7 f8 c= cpr3 b3 f7 c\/ c/\ c~ c= cpr2 b3 f8 c= cpr3 b3 f9 c~ cIN cpr3 b3 * * part cINSERT f7 * * part cINSERT f9 part cEMPTY cIN b3 * part cd_fan c, f0 c, f1 f2 c= ctran f0 f1 f11 cf1_fan f0 f1 f2 b3 cf1_fan f0 f1 f11 ctran f0 f1 f11 b3 f13
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num n)) ==> ((~ ((int_lt (int_of_num m)) (int_of_num n))) \/ ((int_lt (int_of_num m)) ((int_add (int_of_num n)) (int_of_num (NUMERAL (BIT1 _0))))))) = ((~ ((int_lt (int_of_num m)) (int_of_num n))) \/ ((int_lt (int_of_num m)) ((int_add (int_of_num n)) (int_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c\/ c~ cint_lt cint_of_num f1 cint_of_num f0 cint_lt cint_of_num f1 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c\/ c~ cint_lt cint_of_num f1 cint_of_num f0 cint_lt cint_of_num f1 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0
+ (!m. ((m < (SUC n)) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))) |- ((n < (SUC n)) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) n) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) n) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))))))
T c==> ! c==> c< b0 cSUC f0 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 csigma_fan f1 f2 f3 f5 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f5 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f7 c~ cIN cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 * * part cINSERT f5 * * part cINSERT f7 part cEMPTY c==> c< f0 cSUC f0 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 f0 f4 csigma_fan f1 f2 f3 f5 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 f0 f4 f5 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 f0 f4 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 f0 f4 f7 c~ cIN cpr3 cPOWER * * * part cf1_fan f1 f2 f3 f0 f4 * * part cINSERT f5 * * part cINSERT f7 part cEMPTY
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((pr3 f1) = u), ((pr3 f2) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((y IN (d_fan (x , (V , E)))) ==> (((!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))) ==> (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))) ==> ((!m. ((m < (SUC n)) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))) ==> (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) (SUC n)) y)) = (((POWER (((f1_fan x) V) E1)) (SUC n)) ((((tran x) V) E1) y))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= c, f2 c, f10 c, f5 f6 f11 c==> c= c, f2 c, f6 c, f10 f5 f12 c==> c= c, f2 c, f5 c, f6 f10 f13 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f10 c==> c= cpr2 f3 f5 c==> c= cpr3 f4 f10 c==> c= cpr3 f14 f5 c==> c= csigma_fan f2 f0 f1 f10 f5 f6 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f10 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f10 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c==> cIN f16 * part cd_fan c, f2 c, f0 f1 c==> c==> ! c==> c< b0 f17 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 csigma_fan f2 f0 f1 f6 f10 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 f6 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 f10 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 f5 c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c= ctran f2 f0 f7 cPOWER * * * part cf1_fan f2 f0 f1 f17 f16 cPOWER * * * part cf1_fan f2 f0 f7 f17 ctran f2 f0 f7 f16 c==> ! c==> c< b0 cSUC f17 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 csigma_fan f2 f0 f1 f6 f10 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 f6 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 f10 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 f5 c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c= ctran f2 f0 f7 cPOWER * * * part cf1_fan f2 f0 f1 cSUC f17 f16 cPOWER * * * part cf1_fan f2 f0 f7 cSUC f17 ctran f2 f0 f7 f16
- (((real_ge (real_of_int _3077585)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3077586)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_ge ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\m. (!n. ((m < n) ==> (m < (SUC n))))) m)
T * / ! c==> c< b0 b1 c< b0 cSUC b1 f0
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((pr3 f1) = u), ((pr3 f2) = w), ((((((sigma_fan x) V) E) u) w) = v), (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((y IN (d_fan (x , (V , E)))) /\ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))))))))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cf1_fan f2 f0 f1 f4 f7 c==> c= cf1_fan f2 f0 f1 f7 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f7 f8 c==> c= cpr2 f3 f5 c==> c= cpr3 f4 f8 c==> c= cpr3 f7 f5 c==> c= csigma_fan f2 f0 f1 f8 f5 f6 c==> c/\ c= cpr3 f7 f5 c/\ c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f6 c, f5 csigma_fan f2 f0 f10 f6 f5 c/\ c= f11 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f5 c, f6 csigma_fan f2 f0 f10 f5 f6 c/\ c= c, f2 c, f5 c, f6 f8 f12 c/\ c= c, f2 c, f6 c, f8 f5 f13 c/\ c= c, f2 c, f8 c, f5 f6 f14 c/\ c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f10 c/\ cIN f15 * part cd_fan c, f2 c, f0 f1 ! c==> c< b0 f16 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 csigma_fan f2 f0 f1 f6 f8 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f6 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f8 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f5 c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c==> c> cCARD f17 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f17 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f8 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f8 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f7 * * part cINSERT f3 part cEMPTY f17 c= ctran f2 f0 f10 cPOWER * * * part cf1_fan f2 f0 f1 f16 f15 cPOWER * * * part cf1_fan f2 f0 f10 f16 ctran f2 f0 f10 f15
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (y IN (d_fan (x , (V , E)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = v) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= cf1_fan f2 f0 f1 f4 f8 c==> c= cf1_fan f2 f0 f1 f8 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f8 f9 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f9 f5 f6 c==> c> cCARD f10 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f10 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f9 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f9 part cEMPTY f1 c==> cIN f11 * part cd_fan c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f8 * * part cINSERT f3 part cEMPTY f10 c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f12 f11 f6 cIN cPOWER * * * part cf1_fan f2 f0 f1 f12 f11 * part cd_fan c, f2 c, f0 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((pr2 (((POWER (((f1_fan x) V) E)) n) y)) = (((((sigma_fan x) V) E) v) u))), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((pr3 f1) = u), ((pr3 f2) = w), ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = v), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (y IN (d_fan (x , (V , E)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 f5 f6 csigma_fan f2 f0 f1 f7 f8 c==> c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f10 c==> c= f11 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f7 c, f9 csigma_fan f2 f0 f10 f7 f9 c==> c= f12 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f9 c, f7 csigma_fan f2 f0 f10 f9 f7 c==> c= c, f2 c, f8 c, f9 f7 f13 c==> c= c, f2 c, f7 c, f8 f9 f14 c==> c= c, f2 c, f9 c, f7 f8 f15 c==> c= cf1_fan f2 f0 f1 f4 f16 c==> c= cf1_fan f2 f0 f1 f16 f3 c==> c= cpr2 f4 f7 c==> c= cpr2 f16 f8 c==> c= cpr2 f3 f9 c==> c= cpr3 f4 f8 c==> c= cpr3 f16 f9 c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f5 f6 f7 c==> c= csigma_fan f2 f0 f1 f8 f9 f7 c==> c> cCARD f17 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f17 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f1 c==> cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f1 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f16 * * part cINSERT f3 part cEMPTY f17 c= ctran f2 f0 f10 cf1_fan f2 f0 f1 cPOWER * * * part cf1_fan f2 f0 f1 f5 f6 cf1_fan f2 f0 f10 ctran f2 f0 f10 cPOWER * * * part cf1_fan f2 f0 f1 f5 f6
- (((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y))))) |- ((((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y))))) = T)
T c==> c==> cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2 c= ctran f0 f1 f5 cf1_fan f0 f1 f2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 cf1_fan f0 f1 f5 ctran f0 f1 f5 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 c= c==> cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2 c= ctran f0 f1 f5 cf1_fan f0 f1 f2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 cf1_fan f0 f1 f5 ctran f0 f1 f5 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 cT
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((y IN (d_fan (x , (V , E)))) /\ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY))))))))))))))))))))))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f3 c==> c/\ c~ c= cf1_fan f2 f0 f1 f3 f4 c/\ c= cpr2 f4 f6 c/\ c= cpr2 f5 f7 c/\ c= cpr2 f3 f8 c/\ cIN * * part cINSERT f6 * * part cINSERT f7 part cEMPTY f1 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f1 c/\ c~ cIN * * part cINSERT f8 * * part cINSERT f6 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 f7 f8 f6 c/\ c= cpr3 f4 f7 c/\ c= cpr3 f5 f8 c/\ c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f6 c, f8 csigma_fan f2 f0 f10 f6 f8 c/\ c= f11 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f8 c, f6 csigma_fan f2 f0 f10 f8 f6 c/\ c= c, f2 c, f8 c, f6 f7 f12 c/\ c= c, f2 c, f6 c, f7 f8 f13 c/\ c= c, f2 c, f7 c, f8 f6 f14 c/\ c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f8 part cEMPTY part cEMPTY f10 c/\ cIN f15 * part cd_fan c, f2 c, f0 f1 ! c==> c< b0 f16 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 csigma_fan f2 f0 f1 f6 f7 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f6 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f7 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f8 c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 * * part cINSERT f6 * * part cINSERT f8 part cEMPTY c==> c> cCARD f17 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f17 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f17 c= ctran f2 f0 f10 cPOWER * * * part cf1_fan f2 f0 f1 f16 f15 cPOWER * * * part cf1_fan f2 f0 f10 f16 ctran f2 f0 f10 f15
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))) |- (((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY))))))) = T)
T c==> ! c==> c< b0 f0 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 csigma_fan f1 f2 f3 f5 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f5 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f7 c~ cIN cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 * * part cINSERT f5 * * part cINSERT f7 part cEMPTY c= c==> c< f8 f0 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 csigma_fan f1 f2 f3 f5 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 f5 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 f7 c~ cIN cpr3 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 * * part cINSERT f5 * * part cINSERT f7 part cEMPTY cT
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((y IN (d_fan (x , (V , E)))) /\ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY))))))))))))))))))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f5 f7 c==> c= cpr2 f3 f8 c==> c/\ cIN * * part cINSERT f6 * * part cINSERT f7 part cEMPTY f1 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f1 c/\ c~ cIN * * part cINSERT f8 * * part cINSERT f6 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 f7 f8 f6 c/\ c= cpr3 f4 f7 c/\ c= cpr3 f5 f8 c/\ c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f6 c, f8 csigma_fan f2 f0 f10 f6 f8 c/\ c= f11 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f8 c, f6 csigma_fan f2 f0 f10 f8 f6 c/\ c= c, f2 c, f8 c, f6 f7 f12 c/\ c= c, f2 c, f6 c, f7 f8 f13 c/\ c= c, f2 c, f7 c, f8 f6 f14 c/\ c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f8 part cEMPTY part cEMPTY f10 c/\ cIN f15 * part cd_fan c, f2 c, f0 f1 ! c==> c< b0 f16 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 csigma_fan f2 f0 f1 f6 f7 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f6 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f7 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f8 c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 * * part cINSERT f6 * * part cINSERT f8 part cEMPTY c==> c> cCARD f17 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f17 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f17 c= ctran f2 f0 f10 cPOWER * * * part cf1_fan f2 f0 f1 f16 f15 cPOWER * * * part cf1_fan f2 f0 f10 f16 ctran f2 f0 f10 f15
+ ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) |- (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) = T)
T c==> c> cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c= c> cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 cT
+ |- ((\E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((((~ ((pr2 y) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 y) = v)) \/ (((~ ((pr2 y) = u)) /\ ((pr3 y) = w)) \/ (~ ((pr3 y) IN (v INSERT (w INSERT EMPTY)))))) /\ (y IN (d_fan (x , (V , E))))))))))))))))))))))))))))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) y)) = ((((f1_fan x) V) E1) ((((tran x) V) E1) y))))))))))))))))))) E)
T * / ! ! ! ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b15 f1 c> cCARD * * * part cset_of_edge b15 f1 b0 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 b0 c/\ cIN b2 * part cface_set chypermap1_of_fanx c, f0 c, f1 b0 c/\ c> cCARD b2 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY b2 c/\ c= cf1_fan f0 f1 b0 b3 b4 c/\ c= cf1_fan f0 f1 b0 b4 b5 c/\ c~ c= cf1_fan f0 f1 b0 b5 b3 c/\ c= cpr2 b3 b6 c/\ c= cpr2 b4 b7 c/\ c= cpr2 b5 b8 c/\ cIN * * part cINSERT b6 * * part cINSERT b7 part cEMPTY b0 c/\ cIN * * part cINSERT b7 * * part cINSERT b8 part cEMPTY b0 c/\ c~ cIN * * part cINSERT b8 * * part cINSERT b6 part cEMPTY b0 c/\ c= csigma_fan f0 f1 b0 b7 b8 b6 c/\ c= cpr3 b3 b7 c/\ c= cpr3 b4 b8 c/\ c= b9 * * part cface chypermap1_of_fanx c, f0 c, f1 b1 c, f0 c, b6 c, b8 csigma_fan f0 f1 b1 b6 b8 c/\ c= b10 * * part cface chypermap1_of_fanx c, f0 c, f1 b1 c, f0 c, b8 c, b6 csigma_fan f0 f1 b1 b8 b6 c/\ c= c, f0 c, b8 c, b6 b7 b11 c/\ c= c, f0 c, b6 c, b7 b8 b12 c/\ c= c, f0 c, b7 c, b8 b6 b13 c/\ c= * * part cUNION b0 * * part cINSERT * * part cINSERT b6 * * part cINSERT b8 part cEMPTY part cEMPTY b1 c/\ c\/ c/\ c~ c= cpr2 b14 csigma_fan f0 f1 b0 b6 b7 c= cpr3 b14 b6 c\/ c/\ c~ c= cpr2 b14 b7 c= cpr3 b14 b8 c~ cIN cpr3 b14 * * part cINSERT b6 * * part cINSERT b8 part cEMPTY cIN b14 * part cd_fan c, f0 c, f1 b0 c= ctran f0 f1 b1 cf1_fan f0 f1 b0 b14 cf1_fan f0 f1 b1 ctran f0 f1 b1 b14 f2
- |- (((!E. (!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = (p e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = (p n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = (p f1_fan)))))))) ==> ((\E. (!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = (p e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = (p n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = (p f1_fan)))))))) E)) = ((\E. (!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = (p e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = (p n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = (p f1_fan)))))))) E))
T c= c==> ! ! c==> c/\ cFAN c, f0 c, f1 b0 c= b1 / * * part cres * * * b2 f0 f1 b0 * part cd1_fan c, f0 c, f1 b0 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 b0 * part cd_fan c, f0 c, f1 b0 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 b0 * b1 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 b0 * b1 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, f1 b0 * b1 part cf1_fan * / ! c==> c/\ cFAN c, f0 c, f1 b0 c= b1 / * * part cres * * * b2 f0 f1 b0 * part cd1_fan c, f0 c, f1 b0 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 b0 * part cd_fan c, f0 c, f1 b0 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 b0 * b1 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 b0 * b1 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, f1 b0 * b1 part cf1_fan f2 * / ! c==> c/\ cFAN c, f0 c, f1 b0 c= b1 / * * part cres * * * b2 f0 f1 b0 * part cd1_fan c, f0 c, f1 b0 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 b0 * part cd_fan c, f0 c, f1 b0 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 b0 * b1 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 b0 * b1 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, f1 b0 * b1 part cf1_fan f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (y IN (d_fan (x , (V , E)))) |- ((FAN (x , (V , E1))) ==> (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = v) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY part cEMPTY f5 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f5 c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 f3 cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * part cd_fan c, f2 c, f0 f1
- |- (((!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) ==> ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)) = ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f))
T c= c==> ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ |- (((~ ((int_lt (int_of_num m)) (int_of_num n))) \/ ((int_lt (int_of_num m)) ((int_add (int_of_num n)) (int_of_num (NUMERAL (BIT1 _0)))))) = T)
T c= c\/ c~ cint_lt cint_of_num f0 cint_of_num f1 cint_lt cint_of_num f0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0 cT
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((y IN (d_fan (x , (V , E)))) /\ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))))))))))))))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f5 f7 c==> c/\ c= cpr2 f3 f8 c/\ cIN * * part cINSERT f6 * * part cINSERT f7 part cEMPTY f1 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f1 c/\ c~ cIN * * part cINSERT f8 * * part cINSERT f6 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 f7 f8 f6 c/\ c= cpr3 f4 f7 c/\ c= cpr3 f5 f8 c/\ c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f6 c, f8 csigma_fan f2 f0 f10 f6 f8 c/\ c= f11 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f8 c, f6 csigma_fan f2 f0 f10 f8 f6 c/\ c= c, f2 c, f8 c, f6 f7 f12 c/\ c= c, f2 c, f6 c, f7 f8 f13 c/\ c= c, f2 c, f7 c, f8 f6 f14 c/\ c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f8 part cEMPTY part cEMPTY f10 c/\ cIN f15 * part cd_fan c, f2 c, f0 f1 ! c==> c< b0 f16 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 csigma_fan f2 f0 f1 f6 f7 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f6 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f7 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f8 c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 * * part cINSERT f6 * * part cINSERT f8 part cEMPTY c==> c> cCARD f17 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f17 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f17 c= ctran f2 f0 f10 cPOWER * * * part cf1_fan f2 f0 f1 f16 f15 cPOWER * * * part cf1_fan f2 f0 f10 f16 ctran f2 f0 f10 f15
+ |- (((((FAN (x , (V , E1))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1))))) ==> (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) = (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E))))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= * part cd_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2 c==> c= cpr3 cPOWER * * * part cf1_fan f0 f1 f3 f4 f5 f6 cIN cPOWER * * * part cf1_fan f0 f1 f3 f4 f5 * part cd1_fan c, f0 c, f1 f3 c==> c= cpr3 cPOWER * * * part cf1_fan f0 f1 f3 f4 f5 f6 cIN cPOWER * * * part cf1_fan f0 f1 f3 f4 f5 * part cd1_fan c, f0 c, f1 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (y IN (d_fan (x , (V , E)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y))))) = (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f8 * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f9 c==> c= cf1_fan f2 f0 f1 f4 f10 c==> c= cf1_fan f2 f0 f1 f10 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f10 f11 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f11 f5 f6 c==> c> cCARD f12 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f12 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f11 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f11 part cEMPTY f1 c==> cIN f8 * part cd_fan c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f10 * * part cINSERT f3 part cEMPTY f12 c= c==> cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f8 * part cd_fan c, f2 c, f0 f1 c= ctran f2 f0 f9 cf1_fan f2 f0 f1 cPOWER * * * part cf1_fan f2 f0 f1 f7 f8 cf1_fan f2 f0 f9 ctran f2 f0 f9 cPOWER * * * part cf1_fan f2 f0 f1 f7 f8 c= ctran f2 f0 f9 cf1_fan f2 f0 f1 cPOWER * * * part cf1_fan f2 f0 f1 f7 f8 cf1_fan f2 f0 f9 ctran f2 f0 f9 cPOWER * * * part cf1_fan f2 f0 f1 f7 f8
+ |- ((\ds1. (!ds2. (!f10. (!f20. (!f30. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((((~ ((pr2 y) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 y) = v)) \/ (((~ ((pr2 y) = u)) /\ ((pr3 y) = w)) \/ (~ ((pr3 y) IN (v INSERT (w INSERT EMPTY)))))) /\ (y IN (d_fan (x , (V , E))))))))))))))))))))))))))))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) y)) = ((((f1_fan x) V) E1) ((((tran x) V) E1) y)))))))))) ds1)
T * / ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b6 f1 c> cCARD * * * part cset_of_edge b6 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= cpr3 f4 f8 c/\ c= cpr3 f5 f9 c/\ c= b0 * * part cface chypermap1_of_fanx c, f0 c, f1 f10 c, f0 c, f7 c, f9 csigma_fan f0 f1 f10 f7 f9 c/\ c= b1 * * part cface chypermap1_of_fanx c, f0 c, f1 f10 c, f0 c, f9 c, f7 csigma_fan f0 f1 f10 f9 f7 c/\ c= c, f0 c, f9 c, f7 f8 b2 c/\ c= c, f0 c, f7 c, f8 f9 b3 c/\ c= c, f0 c, f8 c, f9 f7 b4 c/\ c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f10 c/\ c\/ c/\ c~ c= cpr2 b5 csigma_fan f0 f1 f2 f7 f8 c= cpr3 b5 f7 c\/ c/\ c~ c= cpr2 b5 f8 c= cpr3 b5 f9 c~ cIN cpr3 b5 * * part cINSERT f7 * * part cINSERT f9 part cEMPTY cIN b5 * part cd_fan c, f0 c, f1 f2 c= ctran f0 f1 f10 cf1_fan f0 f1 f2 b5 cf1_fan f0 f1 f10 ctran f0 f1 f10 b5 f11
+ |- (T = ((!m. ((m < (NUMERAL _0)) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))) ==> (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) (NUMERAL _0)) y)) = (((POWER (((f1_fan x) V) E1)) (NUMERAL _0)) ((((tran x) V) E1) y)))))
T c= cT c==> ! c==> c< b0 cNUMERAL c_0 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f0 f1 f2 b0 f3 csigma_fan f0 f1 f2 f4 f5 c= cpr3 cPOWER * * * part cf1_fan f0 f1 f2 b0 f3 f4 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f0 f1 f2 b0 f3 f5 c= cpr3 cPOWER * * * part cf1_fan f0 f1 f2 b0 f3 f6 c~ cIN cpr3 cPOWER * * * part cf1_fan f0 f1 f2 b0 f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c= ctran f0 f1 f7 cPOWER * * * part cf1_fan f0 f1 f2 cNUMERAL c_0 f3 cPOWER * * * part cf1_fan f0 f1 f7 cNUMERAL c_0 ctran f0 f1 f7 f3
+ (m < n) |- ((m < n) = T)
T c==> c< f0 f1 c= c< f0 f1 cT
+ (!m. ((m < (SUC n)) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))) |- ((m < (SUC n)) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))
T c==> ! c==> c< b0 cSUC f0 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 csigma_fan f1 f2 f3 f5 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f5 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f7 c~ cIN cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 * * part cINSERT f5 * * part cINSERT f7 part cEMPTY c==> c< f8 cSUC f0 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 csigma_fan f1 f2 f3 f5 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 f5 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 f7 c~ cIN cpr3 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 * * part cINSERT f5 * * part cINSERT f7 part cEMPTY
+ |- ((\f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((((~ ((pr2 y) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 y) = v)) \/ (((~ ((pr2 y) = u)) /\ ((pr3 y) = w)) \/ (~ ((pr3 y) IN (v INSERT (w INSERT EMPTY)))))) /\ (y IN (d_fan (x , (V , E))))))))))))))))))))))))))))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) y)) = ((((f1_fan x) V) E1) ((((tran x) V) E1) y))))))))))))))) f2)
T * / ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b11 f1 c> cCARD * * * part cset_of_edge b11 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 b0 c/\ c= cf1_fan f0 f1 f2 b0 b1 c/\ c~ c= cf1_fan f0 f1 f2 b1 f4 c/\ c= cpr2 f4 b2 c/\ c= cpr2 b0 b3 c/\ c= cpr2 b1 b4 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b4 * * part cINSERT b2 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b3 b4 b2 c/\ c= cpr3 f4 b3 c/\ c= cpr3 b0 b4 c/\ c= b5 * * part cface chypermap1_of_fanx c, f0 c, f1 f5 c, f0 c, b2 c, b4 csigma_fan f0 f1 f5 b2 b4 c/\ c= b6 * * part cface chypermap1_of_fanx c, f0 c, f1 f5 c, f0 c, b4 c, b2 csigma_fan f0 f1 f5 b4 b2 c/\ c= c, f0 c, b4 c, b2 b3 b7 c/\ c= c, f0 c, b2 c, b3 b4 b8 c/\ c= c, f0 c, b3 c, b4 b2 b9 c/\ c= * * part cUNION f2 * * part cINSERT * * part cINSERT b2 * * part cINSERT b4 part cEMPTY part cEMPTY f5 c/\ c\/ c/\ c~ c= cpr2 b10 csigma_fan f0 f1 f2 b2 b3 c= cpr3 b10 b2 c\/ c/\ c~ c= cpr2 b10 b3 c= cpr3 b10 b4 c~ cIN cpr3 b10 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY cIN b10 * part cd_fan c, f0 c, f1 f2 c= ctran f0 f1 f5 cf1_fan f0 f1 f2 b10 cf1_fan f0 f1 f5 ctran f0 f1 f5 b10 f6
+ |- (((((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E))))) ==> (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))))) = (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= * part cd_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2 c==> c= cpr3 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 f5 cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2 c==> c= cpr3 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 f5 cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2
+ |- (n < (SUC n))
T c< f0 cSUC f0
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _3077585)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _3077586)) /\ (((real_le ((real_add (real_of_int _3077585)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586)) /\ ((real_le ((real_add (real_of_int _3077586)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _3077585)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _3077586)) /\ (((real_le ((real_add (real_of_int _3077585)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586)) /\ ((real_le ((real_add (real_of_int _3077586)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((pr3 f1) = u), ((pr3 f2) = w), ((((((sigma_fan x) V) E) u) w) = v), ((y IN (d_fan (x , (V , E)))) /\ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY))))))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= c, f2 c, f10 c, f5 f6 f11 c==> c= c, f2 c, f6 c, f10 f5 f12 c==> c= c, f2 c, f5 c, f6 f10 f13 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f10 c==> c= cpr2 f3 f5 c==> c= cpr3 f4 f10 c==> c= cpr3 f14 f5 c==> c= csigma_fan f2 f0 f1 f10 f5 f6 c==> c/\ cIN f15 * part cd_fan c, f2 c, f0 f1 ! c==> c< b0 f16 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 csigma_fan f2 f0 f1 f6 f10 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f6 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f10 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f5 c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c==> c> cCARD f17 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f17 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f10 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f10 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f17 c= ctran f2 f0 f7 cPOWER * * * part cf1_fan f2 f0 f1 f16 f15 cPOWER * * * part cf1_fan f2 f0 f7 f16 ctran f2 f0 f7 f15
+ (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y))) |- ((((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)) = ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)))
T c==> c= ctran f0 f1 f2 cPOWER * * * part cf1_fan f0 f1 f3 f4 f5 cPOWER * * * part cf1_fan f0 f1 f2 f4 ctran f0 f1 f2 f5 c= cPOWER * * * part cf1_fan f0 f1 f2 f4 ctran f0 f1 f2 f5 ctran f0 f1 f2 cPOWER * * * part cf1_fan f0 f1 f3 f4 f5
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (!m. ((m < (SUC n)) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))) |- (((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY))))))) = T)
T c==> ! c==> c< b0 cSUC f0 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 csigma_fan f1 f2 f3 f5 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f5 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f7 c~ cIN cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 * * part cINSERT f5 * * part cINSERT f7 part cEMPTY c= c==> c< f8 f0 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 csigma_fan f1 f2 f3 f5 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 f5 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 f7 c~ cIN cpr3 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 * * part cINSERT f5 * * part cINSERT f7 part cEMPTY cT
+ |- ((\V. (!E. (!n. ((FAN (x , (V , E))) ==> ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((e_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) /\ ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((n_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) /\ (!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))))))))) V)
T * / ! ! c==> cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b3 * part cd1_fan c, f0 c, b0 b1 cIN cPOWER * * * part ce_fan f0 b0 b1 b2 b3 * part cd1_fan c, f0 c, b0 b1 c/\ ! c==> cIN b3 * part cd1_fan c, f0 c, b0 b1 cIN cPOWER * * * part cn_fan f0 b0 b1 b2 b3 * part cd1_fan c, f0 c, b0 b1 ! c==> cIN b3 * part cd1_fan c, f0 c, b0 b1 cIN cPOWER * * * part cf1_fan f0 b0 b1 b2 b3 * part cd1_fan c, f0 c, b0 b1 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((pr3 f1) = u), ((pr3 f2) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (y IN (d_fan (x , (V , E)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) /\ (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f8 * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f9 c==> c= f10 * * part cface chypermap1_of_fanx c, f2 c, f0 f9 c, f2 c, f6 c, f5 csigma_fan f2 f0 f9 f6 f5 c==> c= f11 * * part cface chypermap1_of_fanx c, f2 c, f0 f9 c, f2 c, f5 c, f6 csigma_fan f2 f0 f9 f5 f6 c==> c= c, f2 c, f12 c, f5 f6 f13 c==> c= c, f2 c, f6 c, f12 f5 f14 c==> c= c, f2 c, f5 c, f6 f12 f15 c==> c= cf1_fan f2 f0 f1 f4 f16 c==> c= cf1_fan f2 f0 f1 f16 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f16 f12 c==> c= cpr2 f3 f5 c==> c= cpr3 f4 f12 c==> c= cpr3 f16 f5 c==> c= csigma_fan f2 f0 f1 f12 f5 f6 c==> c> cCARD f17 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f17 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f12 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f12 part cEMPTY f1 c==> cIN f8 * part cd_fan c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f16 * * part cINSERT f3 part cEMPTY f17 c/\ c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f8 * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c= ctran f2 f0 f9 cf1_fan f2 f0 f1 cPOWER * * * part cf1_fan f2 f0 f1 f7 f8 cf1_fan f2 f0 f9 ctran f2 f0 f9 cPOWER * * * part cf1_fan f2 f0 f1 f7 f8
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((pr3 f1) = u), ((pr3 f2) = w), ((((((sigma_fan x) V) E) u) w) = v), (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((y IN (d_fan (x , (V , E)))) /\ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f7 * * part cface chypermap1_of_fanx c, f2 c, f0 f8 c, f2 c, f6 c, f5 csigma_fan f2 f0 f8 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f8 c, f2 c, f5 c, f6 csigma_fan f2 f0 f8 f5 f6 c==> c= c, f2 c, f10 c, f5 f6 f11 c==> c= c, f2 c, f6 c, f10 f5 f12 c==> c= c, f2 c, f5 c, f6 f10 f13 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f10 c==> c= cpr2 f3 f5 c==> c= cpr3 f4 f10 c==> c= cpr3 f14 f5 c==> c= csigma_fan f2 f0 f1 f10 f5 f6 c==> c/\ c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f8 c/\ cIN f15 * part cd_fan c, f2 c, f0 f1 ! c==> c< b0 f16 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 csigma_fan f2 f0 f1 f6 f10 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f6 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f10 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f5 c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c==> c> cCARD f17 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f17 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f10 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f10 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f17 c= ctran f2 f0 f8 cPOWER * * * part cf1_fan f2 f0 f1 f16 f15 cPOWER * * * part cf1_fan f2 f0 f8 f16 ctran f2 f0 f8 f15
+ |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
+ (((real_ge (real_of_int _3077585)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3077586)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (!y. (!n. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((y IN (d_fan (x , (V , E)))) /\ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY))))))))))))))))))))))))))))))))) ==> (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b11 f1 c> cCARD * * * part cset_of_edge b11 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 b0 c/\ c~ c= cf1_fan f0 f1 f2 b0 f4 c/\ c= cpr2 f4 b1 c/\ c= cpr2 f5 b2 c/\ c= cpr2 b0 b3 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b3 * * part cINSERT b1 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b2 b3 b1 c/\ c= cpr3 f4 b2 c/\ c= cpr3 f5 b3 c/\ c= b4 * * part cface chypermap1_of_fanx c, f0 c, f1 f6 c, f0 c, b1 c, b3 csigma_fan f0 f1 f6 b1 b3 c/\ c= b5 * * part cface chypermap1_of_fanx c, f0 c, f1 f6 c, f0 c, b3 c, b1 csigma_fan f0 f1 f6 b3 b1 c/\ c= c, f0 c, b3 c, b1 b2 b6 c/\ c= c, f0 c, b1 c, b2 b3 b7 c/\ c= c, f0 c, b2 c, b3 b1 b8 c/\ c= * * part cUNION f2 * * part cINSERT * * part cINSERT b1 * * part cINSERT b3 part cEMPTY part cEMPTY f6 c/\ cIN b9 * part cd_fan c, f0 c, f1 f2 ! c==> c< b11 b10 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f0 f1 f2 b11 b9 csigma_fan f0 f1 f2 b1 b2 c= cpr3 cPOWER * * * part cf1_fan f0 f1 f2 b11 b9 b1 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f0 f1 f2 b11 b9 b2 c= cpr3 cPOWER * * * part cf1_fan f0 f1 f2 b11 b9 b3 c~ cIN cpr3 cPOWER * * * part cf1_fan f0 f1 f2 b11 b9 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c= ctran f0 f1 f6 cPOWER * * * part cf1_fan f0 f1 f2 b10 b9 cPOWER * * * part cf1_fan f0 f1 f6 b10 ctran f0 f1 f6 b9 cT
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((y IN (d_fan (x , (V , E)))) /\ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY))))))))))))))))))))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f3 c==> c= cpr2 f4 f6 c==> c/\ c= cpr2 f5 f7 c/\ c= cpr2 f3 f8 c/\ cIN * * part cINSERT f6 * * part cINSERT f7 part cEMPTY f1 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f1 c/\ c~ cIN * * part cINSERT f8 * * part cINSERT f6 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 f7 f8 f6 c/\ c= cpr3 f4 f7 c/\ c= cpr3 f5 f8 c/\ c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f6 c, f8 csigma_fan f2 f0 f10 f6 f8 c/\ c= f11 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f8 c, f6 csigma_fan f2 f0 f10 f8 f6 c/\ c= c, f2 c, f8 c, f6 f7 f12 c/\ c= c, f2 c, f6 c, f7 f8 f13 c/\ c= c, f2 c, f7 c, f8 f6 f14 c/\ c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f8 part cEMPTY part cEMPTY f10 c/\ cIN f15 * part cd_fan c, f2 c, f0 f1 ! c==> c< b0 f16 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 csigma_fan f2 f0 f1 f6 f7 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f6 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f7 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f8 c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 * * part cINSERT f6 * * part cINSERT f8 part cEMPTY c==> c> cCARD f17 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f17 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f17 c= ctran f2 f0 f10 cPOWER * * * part cf1_fan f2 f0 f1 f16 f15 cPOWER * * * part cf1_fan f2 f0 f10 f16 ctran f2 f0 f10 f15
+ |- ((!V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (!y. (!n. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((y IN (d_fan (x , (V , E)))) /\ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY))))))))))))))))))))))))))))))))) ==> (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b17 b0 c> cCARD * * * part cset_of_edge b17 b0 b1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, b0 b1 c/\ cIN b3 * part cface_set chypermap1_of_fanx c, f0 c, b0 b1 c/\ c> cCARD b3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY b3 c/\ c= cf1_fan f0 b0 b1 b4 b5 c/\ c= cf1_fan f0 b0 b1 b5 b6 c/\ c~ c= cf1_fan f0 b0 b1 b6 b4 c/\ c= cpr2 b4 b7 c/\ c= cpr2 b5 b8 c/\ c= cpr2 b6 b9 c/\ cIN * * part cINSERT b7 * * part cINSERT b8 part cEMPTY b1 c/\ cIN * * part cINSERT b8 * * part cINSERT b9 part cEMPTY b1 c/\ c~ cIN * * part cINSERT b9 * * part cINSERT b7 part cEMPTY b1 c/\ c= csigma_fan f0 b0 b1 b8 b9 b7 c/\ c= cpr3 b4 b8 c/\ c= cpr3 b5 b9 c/\ c= b10 * * part cface chypermap1_of_fanx c, f0 c, b0 b2 c, f0 c, b7 c, b9 csigma_fan f0 b0 b2 b7 b9 c/\ c= b11 * * part cface chypermap1_of_fanx c, f0 c, b0 b2 c, f0 c, b9 c, b7 csigma_fan f0 b0 b2 b9 b7 c/\ c= c, f0 c, b9 c, b7 b8 b12 c/\ c= c, f0 c, b7 c, b8 b9 b13 c/\ c= c, f0 c, b8 c, b9 b7 b14 c/\ c= * * part cUNION b1 * * part cINSERT * * part cINSERT b7 * * part cINSERT b9 part cEMPTY part cEMPTY b2 c/\ cIN b15 * part cd_fan c, f0 c, b0 b1 ! c==> c< b17 b16 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f0 b0 b1 b17 b15 csigma_fan f0 b0 b1 b7 b8 c= cpr3 cPOWER * * * part cf1_fan f0 b0 b1 b17 b15 b7 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f0 b0 b1 b17 b15 b8 c= cpr3 cPOWER * * * part cf1_fan f0 b0 b1 b17 b15 b9 c~ cIN cpr3 cPOWER * * * part cf1_fan f0 b0 b1 b17 b15 * * part cINSERT b7 * * part cINSERT b9 part cEMPTY c= ctran f0 b0 b2 cPOWER * * * part cf1_fan f0 b0 b1 b16 b15 cPOWER * * * part cf1_fan f0 b0 b2 b16 ctran f0 b0 b2 b15 cT
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E1))) |- ((((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))) ==> (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) = ((((FAN (x , (V , E1))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1))))) ==> (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c= c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f3 f4 f5 f6 cIN cPOWER * * * part cf1_fan f2 f0 f3 f4 f5 * part cd1_fan c, f2 c, f0 f3 c==> c==> c/\ cFAN c, f2 c, f0 f1 ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f3 f4 f5 f6 cIN cPOWER * * * part cf1_fan f2 f0 f3 f4 f5 * part cd1_fan c, f2 c, f0 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((y IN (d_fan (x , (V , E)))) /\ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))))))))))))))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f5 f7 c==> c= cpr2 f3 f8 c==> c/\ c= cpr2 f3 f8 c/\ cIN * * part cINSERT f6 * * part cINSERT f7 part cEMPTY f1 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f1 c/\ c~ cIN * * part cINSERT f8 * * part cINSERT f6 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 f7 f8 f6 c/\ c= cpr3 f4 f7 c/\ c= cpr3 f5 f8 c/\ c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f6 c, f8 csigma_fan f2 f0 f10 f6 f8 c/\ c= f11 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f8 c, f6 csigma_fan f2 f0 f10 f8 f6 c/\ c= c, f2 c, f8 c, f6 f7 f12 c/\ c= c, f2 c, f6 c, f7 f8 f13 c/\ c= c, f2 c, f7 c, f8 f6 f14 c/\ c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f8 part cEMPTY part cEMPTY f10 c/\ cIN f15 * part cd_fan c, f2 c, f0 f1 ! c==> c< b0 f16 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 csigma_fan f2 f0 f1 f6 f7 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f6 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f7 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f8 c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 * * part cINSERT f6 * * part cINSERT f8 part cEMPTY c==> c> cCARD f17 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f17 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f17 c= ctran f2 f0 f10 cPOWER * * * part cf1_fan f2 f0 f1 f16 f15 cPOWER * * * part cf1_fan f2 f0 f10 f16 ctran f2 f0 f10 f15
+ (FAN (x , (V , E))) |- ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part cf1_fan f0 f1 f2 f4 f3 * part cd1_fan c, f0 c, f1 f2
+ (FAN (x , (V , E))), (y IN (d1_fan (x , (V , E)))) |- ((y IN (d1_fan (x , (V , E)))) /\ ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c/\ cIN f3 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part cf1_fan f0 f1 f2 f4 f3 * part cd1_fan c, f0 c, f1 f2
+ |- ((\f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((((~ ((pr2 y) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 y) = v)) \/ (((~ ((pr2 y) = u)) /\ ((pr3 y) = w)) \/ (~ ((pr3 y) IN (v INSERT (w INSERT EMPTY)))))) /\ (y IN (d_fan (x , (V , E))))))))))))))))))))))))))))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) y)) = ((((f1_fan x) V) E1) ((((tran x) V) E1) y)))))))))))))))) f1)
T * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b12 f1 c> cCARD * * * part cset_of_edge b12 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 b0 b1 c/\ c= cf1_fan f0 f1 f2 b1 b2 c/\ c~ c= cf1_fan f0 f1 f2 b2 b0 c/\ c= cpr2 b0 b3 c/\ c= cpr2 b1 b4 c/\ c= cpr2 b2 b5 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f2 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b5 * * part cINSERT b3 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b4 b5 b3 c/\ c= cpr3 b0 b4 c/\ c= cpr3 b1 b5 c/\ c= b6 * * part cface chypermap1_of_fanx c, f0 c, f1 f4 c, f0 c, b3 c, b5 csigma_fan f0 f1 f4 b3 b5 c/\ c= b7 * * part cface chypermap1_of_fanx c, f0 c, f1 f4 c, f0 c, b5 c, b3 csigma_fan f0 f1 f4 b5 b3 c/\ c= c, f0 c, b5 c, b3 b4 b8 c/\ c= c, f0 c, b3 c, b4 b5 b9 c/\ c= c, f0 c, b4 c, b5 b3 b10 c/\ c= * * part cUNION f2 * * part cINSERT * * part cINSERT b3 * * part cINSERT b5 part cEMPTY part cEMPTY f4 c/\ c\/ c/\ c~ c= cpr2 b11 csigma_fan f0 f1 f2 b3 b4 c= cpr3 b11 b3 c\/ c/\ c~ c= cpr2 b11 b4 c= cpr3 b11 b5 c~ cIN cpr3 b11 * * part cINSERT b3 * * part cINSERT b5 part cEMPTY cIN b11 * part cd_fan c, f0 c, f1 f2 c= ctran f0 f1 f4 cf1_fan f0 f1 f2 b11 cf1_fan f0 f1 f4 ctran f0 f1 f4 b11 f5
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num n)) ==> ((int_lt (int_of_num n)) ((int_add (int_of_num n)) (int_of_num (NUMERAL (BIT1 _0)))))) = ((int_lt (int_of_num n)) ((int_add (int_of_num n)) (int_of_num (NUMERAL (BIT1 _0))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 cint_lt cint_of_num f0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_lt cint_of_num f0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0
+ |- (((!E1. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))))) ==> ((\E1. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))))) E1)) = ((\E1. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))))) E1))
T c= c==> ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c= b0 * * part cUNION f2 * * part cINSERT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY part cEMPTY ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 b0 cNUMERAL cBIT1 c_0 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c= b0 * * part cUNION f2 * * part cINSERT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY part cEMPTY ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 b0 cNUMERAL cBIT1 c_0 f5 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c= b0 * * part cUNION f2 * * part cINSERT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY part cEMPTY ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 b0 cNUMERAL cBIT1 c_0 f5
+ |- (((!x. (!V. (!E. (!n. ((FAN (x , (V , E))) ==> ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((e_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) /\ ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((n_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) /\ (!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E))))))))))))) ==> ((\x. (!V. (!E. (!n. ((FAN (x , (V , E))) ==> ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((e_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) /\ ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((n_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) /\ (!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E))))))))))))) x)) = ((\x. (!V. (!E. (!n. ((FAN (x , (V , E))) ==> ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((e_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) /\ ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((n_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) /\ (!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E))))))))))))) x))
T c= c==> ! ! ! ! c==> cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b4 * part cd1_fan c, b0 c, b1 b2 cIN cPOWER * * * part ce_fan b0 b1 b2 b3 b4 * part cd1_fan c, b0 c, b1 b2 c/\ ! c==> cIN b4 * part cd1_fan c, b0 c, b1 b2 cIN cPOWER * * * part cn_fan b0 b1 b2 b3 b4 * part cd1_fan c, b0 c, b1 b2 ! c==> cIN b4 * part cd1_fan c, b0 c, b1 b2 cIN cPOWER * * * part cf1_fan b0 b1 b2 b3 b4 * part cd1_fan c, b0 c, b1 b2 * / ! ! ! c==> cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b4 * part cd1_fan c, b0 c, b1 b2 cIN cPOWER * * * part ce_fan b0 b1 b2 b3 b4 * part cd1_fan c, b0 c, b1 b2 c/\ ! c==> cIN b4 * part cd1_fan c, b0 c, b1 b2 cIN cPOWER * * * part cn_fan b0 b1 b2 b3 b4 * part cd1_fan c, b0 c, b1 b2 ! c==> cIN b4 * part cd1_fan c, b0 c, b1 b2 cIN cPOWER * * * part cf1_fan b0 b1 b2 b3 b4 * part cd1_fan c, b0 c, b1 b2 f0 * / ! ! ! c==> cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b4 * part cd1_fan c, b0 c, b1 b2 cIN cPOWER * * * part ce_fan b0 b1 b2 b3 b4 * part cd1_fan c, b0 c, b1 b2 c/\ ! c==> cIN b4 * part cd1_fan c, b0 c, b1 b2 cIN cPOWER * * * part cn_fan b0 b1 b2 b3 b4 * part cd1_fan c, b0 c, b1 b2 ! c==> cIN b4 * part cd1_fan c, b0 c, b1 b2 cIN cPOWER * * * part cf1_fan b0 b1 b2 b3 b4 * part cd1_fan c, b0 c, b1 b2 f0
- |- (!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = (p e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = (p n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = (p f1_fan)))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c= f3 / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * part cd_fan c, f0 c, f1 f2 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 f2 * f3 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 f2 * f3 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, f1 f2 * f3 part cf1_fan
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((e_fan x) V) E)) (d1_fan (x , (V , E))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((n_fan x) V) E)) (d1_fan (x , (V , E))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((f1_fan x) V) E)) (d1_fan (x , (V , E)))))))), (y IN (d_fan (x , (V , E)))) |- ((((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((e_fan x) V) E)) (d1_fan (x , (V , E))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((n_fan x) V) E)) (d1_fan (x , (V , E))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((f1_fan x) V) E)) (d1_fan (x , (V , E)))))))) /\ (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f1 * part cd_fan c, f2 c, f0 f1 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part ce_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cn_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cf1_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c/\ c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f1 * part cd_fan c, f2 c, f0 f1 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part ce_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cn_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cf1_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 f5 cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * part cd_fan c, f2 c, f0 f1
+ |- (((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0)))))) ==> (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))))) = (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= f3 * * part cUNION f2 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f3 cNUMERAL cBIT1 c_0 c==> c= cpr3 cPOWER * * * part cf1_fan f0 f1 f2 f6 f7 f5 cIN cPOWER * * * part cf1_fan f0 f1 f2 f6 f7 * part cd_fan c, f0 c, f1 f2 c==> c= cpr3 cPOWER * * * part cf1_fan f0 f1 f2 f6 f7 f5 cIN cPOWER * * * part cf1_fan f0 f1 f2 f6 f7 * part cd_fan c, f0 c, f1 f2
+ |- ((\x. (!V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((((~ ((pr2 y) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 y) = v)) \/ (((~ ((pr2 y) = u)) /\ ((pr3 y) = w)) \/ (~ ((pr3 y) IN (v INSERT (w INSERT EMPTY)))))) /\ (y IN (d_fan (x , (V , E))))))))))))))))))))))))))))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) y)) = ((((f1_fan x) V) E1) ((((tran x) V) E1) y))))))))))))))))))))) x)
T * / ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b17 b1 c> cCARD * * * part cset_of_edge b17 b1 b2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, b0 c, b1 b2 c/\ cIN b4 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 c/\ c> cCARD b4 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY b4 c/\ c= cf1_fan b0 b1 b2 b5 b6 c/\ c= cf1_fan b0 b1 b2 b6 b7 c/\ c~ c= cf1_fan b0 b1 b2 b7 b5 c/\ c= cpr2 b5 b8 c/\ c= cpr2 b6 b9 c/\ c= cpr2 b7 b10 c/\ cIN * * part cINSERT b8 * * part cINSERT b9 part cEMPTY b2 c/\ cIN * * part cINSERT b9 * * part cINSERT b10 part cEMPTY b2 c/\ c~ cIN * * part cINSERT b10 * * part cINSERT b8 part cEMPTY b2 c/\ c= csigma_fan b0 b1 b2 b9 b10 b8 c/\ c= cpr3 b5 b9 c/\ c= cpr3 b6 b10 c/\ c= b11 * * part cface chypermap1_of_fanx c, b0 c, b1 b3 c, b0 c, b8 c, b10 csigma_fan b0 b1 b3 b8 b10 c/\ c= b12 * * part cface chypermap1_of_fanx c, b0 c, b1 b3 c, b0 c, b10 c, b8 csigma_fan b0 b1 b3 b10 b8 c/\ c= c, b0 c, b10 c, b8 b9 b13 c/\ c= c, b0 c, b8 c, b9 b10 b14 c/\ c= c, b0 c, b9 c, b10 b8 b15 c/\ c= * * part cUNION b2 * * part cINSERT * * part cINSERT b8 * * part cINSERT b10 part cEMPTY part cEMPTY b3 c/\ c\/ c/\ c~ c= cpr2 b16 csigma_fan b0 b1 b2 b8 b9 c= cpr3 b16 b8 c\/ c/\ c~ c= cpr2 b16 b9 c= cpr3 b16 b10 c~ cIN cpr3 b16 * * part cINSERT b8 * * part cINSERT b10 part cEMPTY cIN b16 * part cd_fan c, b0 c, b1 b2 c= ctran b0 b1 b3 cf1_fan b0 b1 b2 b16 cf1_fan b0 b1 b3 ctran b0 b1 b3 b16 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (((dart (hypermap1_of_fanx (x , (V , E1)))) = (d_fan (x , (V , E1)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1)))))))), (y IN (d_fan (x , (V , E)))) |- ((((dart (hypermap1_of_fanx (x , (V , E1)))) = (d_fan (x , (V , E1)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1)))))))) /\ (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f3 * part cd_fan c, f2 c, f0 f3 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part ce_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part cn_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part cf1_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c/\ c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f3 * part cd_fan c, f2 c, f0 f3 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part ce_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part cn_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part cf1_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 f5 cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * part cd_fan c, f2 c, f0 f1
+ |- ((\v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((((~ ((pr2 y) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 y) = v)) \/ (((~ ((pr2 y) = u)) /\ ((pr3 y) = w)) \/ (~ ((pr3 y) IN (v INSERT (w INSERT EMPTY)))))) /\ (y IN (d_fan (x , (V , E))))))))))))))))))))))))))))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) y)) = ((((f1_fan x) V) E1) ((((tran x) V) E1) y))))))))))))) v)
T * / ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b9 f1 c> cCARD * * * part cset_of_edge b9 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 b0 c/\ c= cpr2 f5 b1 c/\ c= cpr2 f6 b2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b2 * * part cINSERT b0 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b1 b2 b0 c/\ c= cpr3 f4 b1 c/\ c= cpr3 f5 b2 c/\ c= b3 * * part cface chypermap1_of_fanx c, f0 c, f1 f7 c, f0 c, b0 c, b2 csigma_fan f0 f1 f7 b0 b2 c/\ c= b4 * * part cface chypermap1_of_fanx c, f0 c, f1 f7 c, f0 c, b2 c, b0 csigma_fan f0 f1 f7 b2 b0 c/\ c= c, f0 c, b2 c, b0 b1 b5 c/\ c= c, f0 c, b0 c, b1 b2 b6 c/\ c= c, f0 c, b1 c, b2 b0 b7 c/\ c= * * part cUNION f2 * * part cINSERT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY part cEMPTY f7 c/\ c\/ c/\ c~ c= cpr2 b8 csigma_fan f0 f1 f2 b0 b1 c= cpr3 b8 b0 c\/ c/\ c~ c= cpr2 b8 b1 c= cpr3 b8 b2 c~ cIN cpr3 b8 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY cIN b8 * part cd_fan c, f0 c, f1 f2 c= ctran f0 f1 f7 cf1_fan f0 f1 f2 b8 cf1_fan f0 f1 f7 ctran f0 f1 f7 b8 f8
- (FAN (x , (V , E))) |- (((((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((e_fan x) V) E)) (d1_fan (x , (V , E))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((n_fan x) V) E)) (d1_fan (x , (V , E))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((f1_fan x) V) E)) (d1_fan (x , (V , E)))))))) ==> ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))))) = ((((FAN (x , (V , E))) /\ ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) f1_fan)))))) ==> ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))))))
T c==> cFAN c, f0 c, f1 f2 c= c==> c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * part cd_fan c, f0 c, f1 f2 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 f2 * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 f2 * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c= * part cface_map chypermap1_of_fanx c, f0 c, f1 f2 * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2 c==> c==> c/\ cFAN c, f0 c, f1 f2 c= / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * part cd_fan c, f0 c, f1 f2 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cf1_fan c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2
+ |- (((!E. (((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))))) ==> ((\E. (((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))))) E)) = ((\E. (((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))))) E))
T c= c==> ! c==> c/\ cFAN c, f0 c, f1 b0 ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 b0 cNUMERAL cBIT1 c_0 c= * part cd_fan c, f0 c, f1 b0 * part cd1_fan c, f0 c, f1 b0 * / c==> c/\ cFAN c, f0 c, f1 b0 ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 b0 cNUMERAL cBIT1 c_0 c= * part cd_fan c, f0 c, f1 b0 * part cd1_fan c, f0 c, f1 b0 f2 * / c==> c/\ cFAN c, f0 c, f1 b0 ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 b0 cNUMERAL cBIT1 c_0 c= * part cd_fan c, f0 c, f1 b0 * part cd1_fan c, f0 c, f1 b0 f2
+ |- ((\E. (!E1. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0)))))))) E)
T * / ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 b0 cNUMERAL cBIT1 c_0 c= b1 * * part cUNION b0 * * part cINSERT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 b1 cNUMERAL cBIT1 c_0 f4
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _3077589)) /\ ((real_le ((real_add (real_of_int _3077589)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077589))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _3077589)) /\ ((real_le ((real_add (real_of_int _3077589)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077589))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), (y IN (d_fan (x , (V , E)))) |- (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f2 cNUMERAL cBIT1 c_0 c==> cFAN c, f3 c, f0 f1 c==> cFAN c, f3 c, f0 f2 c==> cIN f4 * part cd_fan c, f3 c, f0 f1 c==> c= cpr3 cPOWER * * * part cf1_fan f3 f0 f1 f5 f4 f6 cIN cPOWER * * * part cf1_fan f3 f0 f1 f5 f4 * part cd_fan c, f3 c, f0 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), (y IN (d_fan (x , (V , E)))) |- ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f3 c==> cFAN c, f2 c, f0 f1 c==> c= * part cd_fan c, f2 c, f0 f3 * part cd1_fan c, f2 c, f0 f3 c==> cIN f4 * part cd_fan c, f2 c, f0 f3 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f3 f5 f4 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cIN cPOWER * * * part cf1_fan f2 f0 f3 f5 f4 * part cd_fan c, f2 c, f0 f3
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _3077589)) /\ ((real_le ((real_add (real_of_int _3077589)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077589))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
+ (!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) |- ((\y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) y)
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 b0 * part cd1_fan c, f0 c, f1 f2 * / c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 b0 * part cd1_fan c, f0 c, f1 f2 f4
+ (FAN (x , (V , E))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), (y IN (d_fan (x , (V , E)))) |- ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))
T c==> cFAN c, f0 c, f1 f2 c==> c= * part cd_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2 c==> cIN f3 * part cd_fan c, f0 c, f1 f2 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f0 f1 f2 f4 f3 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN cPOWER * * * part cf1_fan f0 f1 f2 f4 f3 * part cd1_fan c, f0 c, f1 f2
+ |- (((!V. (!E. (!n. ((FAN (x , (V , E))) ==> ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((e_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) /\ ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((n_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) /\ (!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))))))))) ==> ((\V. (!E. (!n. ((FAN (x , (V , E))) ==> ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((e_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) /\ ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((n_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) /\ (!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))))))))) V)) = ((\V. (!E. (!n. ((FAN (x , (V , E))) ==> ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((e_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) /\ ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((n_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) /\ (!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))))))))) V))
T c= c==> ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b3 * part cd1_fan c, f0 c, b0 b1 cIN cPOWER * * * part ce_fan f0 b0 b1 b2 b3 * part cd1_fan c, f0 c, b0 b1 c/\ ! c==> cIN b3 * part cd1_fan c, f0 c, b0 b1 cIN cPOWER * * * part cn_fan f0 b0 b1 b2 b3 * part cd1_fan c, f0 c, b0 b1 ! c==> cIN b3 * part cd1_fan c, f0 c, b0 b1 cIN cPOWER * * * part cf1_fan f0 b0 b1 b2 b3 * part cd1_fan c, f0 c, b0 b1 * / ! ! c==> cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b3 * part cd1_fan c, f0 c, b0 b1 cIN cPOWER * * * part ce_fan f0 b0 b1 b2 b3 * part cd1_fan c, f0 c, b0 b1 c/\ ! c==> cIN b3 * part cd1_fan c, f0 c, b0 b1 cIN cPOWER * * * part cn_fan f0 b0 b1 b2 b3 * part cd1_fan c, f0 c, b0 b1 ! c==> cIN b3 * part cd1_fan c, f0 c, b0 b1 cIN cPOWER * * * part cf1_fan f0 b0 b1 b2 b3 * part cd1_fan c, f0 c, b0 b1 f1 * / ! ! c==> cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b3 * part cd1_fan c, f0 c, b0 b1 cIN cPOWER * * * part ce_fan f0 b0 b1 b2 b3 * part cd1_fan c, f0 c, b0 b1 c/\ ! c==> cIN b3 * part cd1_fan c, f0 c, b0 b1 cIN cPOWER * * * part cn_fan f0 b0 b1 b2 b3 * part cd1_fan c, f0 c, b0 b1 ! c==> cIN b3 * part cd1_fan c, f0 c, b0 b1 cIN cPOWER * * * part cf1_fan f0 b0 b1 b2 b3 * part cd1_fan c, f0 c, b0 b1 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), (y IN (d_fan (x , (V , E)))) |- (((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))) /\ (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f3 c==> cFAN c, f2 c, f0 f1 c==> c= * part cd_fan c, f2 c, f0 f3 * part cd1_fan c, f2 c, f0 f3 c==> cIN f4 * part cd_fan c, f2 c, f0 f3 c/\ c= * part cd_fan c, f2 c, f0 f3 * part cd1_fan c, f2 c, f0 f3 c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f3 f5 f4 f6 cIN cPOWER * * * part cf1_fan f2 f0 f3 f5 f4 * part cd_fan c, f2 c, f0 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), (y IN (d_fan (x , (V , E)))) |- ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f3 c==> cFAN c, f2 c, f0 f1 c==> c= * part cd_fan c, f2 c, f0 f3 * part cd1_fan c, f2 c, f0 f3 c==> cIN f4 * part cd_fan c, f2 c, f0 f3 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f3 f5 f4 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cIN cPOWER * * * part cf1_fan f2 f0 f3 f5 f4 * part cd1_fan c, f2 c, f0 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((pr3 f1) = u), ((pr3 f2) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (y IN (d_fan (x , (V , E)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((((~ ((pr2 (((POWER (((f1_fan x) V) E)) n) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY))))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= c, f2 c, f10 c, f5 f6 f11 c==> c= c, f2 c, f6 c, f10 f5 f12 c==> c= c, f2 c, f5 c, f6 f10 f13 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f10 c==> c= cpr2 f3 f5 c==> c= cpr3 f4 f10 c==> c= cpr3 f14 f5 c==> c= csigma_fan f2 f0 f1 f10 f5 f6 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f10 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f10 part cEMPTY f1 c==> cIN f16 * part cd_fan c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c==> c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 f17 f16 f10 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f17 f16 f5 c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f17 f16 * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c= ctran f2 f0 f7 cf1_fan f2 f0 f1 cPOWER * * * part cf1_fan f2 f0 f1 f17 f16 cf1_fan f2 f0 f7 ctran f2 f0 f7 cPOWER * * * part cf1_fan f2 f0 f1 f17 f16
+ (!m. ((m < (SUC n)) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y))), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((pr3 f1) = u), ((pr3 f2) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (y IN (d_fan (x , (V , E)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) (SUC n)) y)) = (((POWER (((f1_fan x) V) E1)) (SUC n)) ((((tran x) V) E1) y)))
T c==> ! c==> c< b0 cSUC f0 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 csigma_fan f1 f2 f3 f5 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f5 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f7 c~ cIN cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 * * part cINSERT f5 * * part cINSERT f7 part cEMPTY c==> ! c==> cIN b0 f2 c> cCARD * * * part cset_of_edge b0 f2 f3 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f1 f2 f3 f8 f9 c==> c~ cIN * * part cINSERT f7 * * part cINSERT f5 part cEMPTY f3 c==> cFAN c, f1 c, f2 f3 c==> cfan80 c, f1 c, f2 f3 c==> c= * * part cUNION f3 * * part cINSERT * * part cINSERT f5 * * part cINSERT f7 part cEMPTY part cEMPTY f10 c==> c= f11 * * part cface chypermap1_of_fanx c, f1 c, f2 f10 c, f1 c, f5 c, f7 csigma_fan f1 f2 f10 f5 f7 c==> c= f12 * * part cface chypermap1_of_fanx c, f1 c, f2 f10 c, f1 c, f7 c, f5 csigma_fan f1 f2 f10 f7 f5 c==> c= c, f1 c, f6 c, f7 f5 f13 c==> c= c, f1 c, f5 c, f6 f7 f14 c==> c= c, f1 c, f7 c, f5 f6 f15 c==> c= cf1_fan f1 f2 f3 f9 f16 c==> c= cf1_fan f1 f2 f3 f16 f8 c==> c= ctran f1 f2 f10 cPOWER * * * part cf1_fan f1 f2 f3 f0 f4 cPOWER * * * part cf1_fan f1 f2 f10 f0 ctran f1 f2 f10 f4 c==> c= cpr2 f9 f5 c==> c= cpr2 f16 f6 c==> c= cpr2 f8 f7 c==> c= cpr3 f9 f6 c==> c= cpr3 f16 f7 c==> c= csigma_fan f1 f2 f3 f6 f7 f5 c==> c> cCARD f17 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f17 * part cface_set chypermap1_of_fanx c, f1 c, f2 f3 c==> cIN * * part cINSERT f6 * * part cINSERT f7 part cEMPTY f3 c==> cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c==> cIN f4 * part cd_fan c, f1 c, f2 f3 c==> cSUBSET * * part cINSERT f9 * * part cINSERT f16 * * part cINSERT f8 part cEMPTY f17 c= ctran f1 f2 f10 cPOWER * * * part cf1_fan f1 f2 f3 cSUC f0 f4 cPOWER * * * part cf1_fan f1 f2 f10 cSUC f0 ctran f1 f2 f10 f4
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((y IN (d_fan (x , (V , E)))) /\ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY))))))))))))))))))))))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cf1_fan f2 f0 f1 f3 f4 c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c/\ c~ c= cf1_fan f2 f0 f1 f5 f3 c/\ c= cpr2 f3 f6 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ cIN * * part cINSERT f6 * * part cINSERT f7 part cEMPTY f1 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f1 c/\ c~ cIN * * part cINSERT f8 * * part cINSERT f6 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 f7 f8 f6 c/\ c= cpr3 f3 f7 c/\ c= cpr3 f4 f8 c/\ c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f6 c, f8 csigma_fan f2 f0 f10 f6 f8 c/\ c= f11 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f8 c, f6 csigma_fan f2 f0 f10 f8 f6 c/\ c= c, f2 c, f8 c, f6 f7 f12 c/\ c= c, f2 c, f6 c, f7 f8 f13 c/\ c= c, f2 c, f7 c, f8 f6 f14 c/\ c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f8 part cEMPTY part cEMPTY f10 c/\ cIN f15 * part cd_fan c, f2 c, f0 f1 ! c==> c< b0 f16 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 csigma_fan f2 f0 f1 f6 f7 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f6 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f7 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 f8 c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f15 * * part cINSERT f6 * * part cINSERT f8 part cEMPTY c==> c> cCARD f17 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f17 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f17 c= ctran f2 f0 f10 cPOWER * * * part cf1_fan f2 f0 f1 f16 f15 cPOWER * * * part cf1_fan f2 f0 f10 f16 ctran f2 f0 f10 f15
- (((real_ge (real_of_int _3077585)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3077586)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ (((pr3 f1) = u) /\ (((pr3 f2) = w) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((y IN (d_fan (x , (V , E)))) /\ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))))))))))))))))))))))))) |- (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f2 f0 f1 f4 f5 c/\ c= cf1_fan f2 f0 f1 f5 f6 c/\ c~ c= cf1_fan f2 f0 f1 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f1 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f1 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 f8 f9 f7 c/\ c= cpr3 f4 f8 c/\ c= cpr3 f5 f9 c/\ c= f10 * * part cface chypermap1_of_fanx c, f2 c, f0 f11 c, f2 c, f7 c, f9 csigma_fan f2 f0 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f2 c, f0 f11 c, f2 c, f9 c, f7 csigma_fan f2 f0 f11 f9 f7 c/\ c= c, f2 c, f9 c, f7 f8 f13 c/\ c= c, f2 c, f7 c, f8 f9 f14 c/\ c= c, f2 c, f8 c, f9 f7 f15 c/\ c= * * part cUNION f1 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c/\ cIN f16 * part cd_fan c, f2 c, f0 f1 ! c==> c< b0 f17 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 csigma_fan f2 f0 f1 f7 f8 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 f7 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 f8 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 f9 c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 * * part cINSERT f7 * * part cINSERT f9 part cEMPTY c= ctran f2 f0 f11 cPOWER * * * part cf1_fan f2 f0 f1 f17 f16 cPOWER * * * part cf1_fan f2 f0 f11 f17 ctran f2 f0 f11 f16
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _3077585)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _3077586)) /\ (((real_le ((real_add (real_of_int _3077585)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586)) /\ ((real_le ((real_add (real_of_int _3077586)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _3077585) ==> (((int_le (int_of_num (NUMERAL _0))) _3077586) ==> ((~ ((int_lt _3077585) _3077586)) \/ ((int_lt _3077585) ((int_add _3077586) (int_of_num (NUMERAL (BIT1 _0))))))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ c~ cint_lt f0 f1 cint_lt f0 cint_add f1 cint_of_num cNUMERAL cBIT1 c_0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))) |- (((((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y))) ==> (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) (SUC n)) y)) = (((POWER (((f1_fan x) V) E1)) (SUC n)) ((((tran x) V) E1) y)))) = (((!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))) ==> (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))) ==> (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) (SUC n)) y)) = (((POWER (((f1_fan x) V) E1)) (SUC n)) ((((tran x) V) E1) y)))))
T c==> ! c==> c< b0 f0 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 csigma_fan f1 f2 f3 f5 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f5 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f7 c~ cIN cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 * * part cINSERT f5 * * part cINSERT f7 part cEMPTY c= c==> c= ctran f1 f2 f8 cPOWER * * * part cf1_fan f1 f2 f3 f0 f4 cPOWER * * * part cf1_fan f1 f2 f8 f0 ctran f1 f2 f8 f4 c= ctran f1 f2 f8 cPOWER * * * part cf1_fan f1 f2 f3 cSUC f0 f4 cPOWER * * * part cf1_fan f1 f2 f8 cSUC f0 ctran f1 f2 f8 f4 c==> c==> ! c==> c< b0 f0 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 csigma_fan f1 f2 f3 f5 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f5 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f7 c~ cIN cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 * * part cINSERT f5 * * part cINSERT f7 part cEMPTY c= ctran f1 f2 f8 cPOWER * * * part cf1_fan f1 f2 f3 f0 f4 cPOWER * * * part cf1_fan f1 f2 f8 f0 ctran f1 f2 f8 f4 c= ctran f1 f2 f8 cPOWER * * * part cf1_fan f1 f2 f3 cSUC f0 f4 cPOWER * * * part cf1_fan f1 f2 f8 cSUC f0 ctran f1 f2 f8 f4
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = v), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (y IN (d_fan (x , (V , E)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y))))) = (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= cf1_fan f2 f0 f1 f4 f8 c==> c= cf1_fan f2 f0 f1 f8 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f8 f9 c==> c= cpr2 f3 f5 c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f10 f11 f6 c==> c= csigma_fan f2 f0 f1 f9 f5 f6 c==> c> cCARD f12 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f12 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f9 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f9 part cEMPTY f1 c==> cIN f11 * part cd_fan c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f8 * * part cINSERT f3 part cEMPTY f12 c= c==> cIN cPOWER * * * part cf1_fan f2 f0 f1 f10 f11 * part cd_fan c, f2 c, f0 f1 c= ctran f2 f0 f7 cf1_fan f2 f0 f1 cPOWER * * * part cf1_fan f2 f0 f1 f10 f11 cf1_fan f2 f0 f7 ctran f2 f0 f7 cPOWER * * * part cf1_fan f2 f0 f1 f10 f11 c= ctran f2 f0 f7 cf1_fan f2 f0 f1 cPOWER * * * part cf1_fan f2 f0 f1 f10 f11 cf1_fan f2 f0 f7 ctran f2 f0 f7 cPOWER * * * part cf1_fan f2 f0 f1 f10 f11
+ |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E))))) ==> ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))))) = ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= * part cd_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2
+ |- (((!V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1)))))))))))))) ==> ((\V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1)))))))))))))) V)) = ((\V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1)))))))))))))) V))
T c= c==> ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b10 b0 c> cCARD * * * part cset_of_edge b10 b0 b1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, b0 b1 c/\ cIN b3 * part cface_set chypermap1_of_fanx c, f0 c, b0 b1 c/\ c> cCARD b3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY b3 c/\ c= cf1_fan f0 b0 b1 b4 b5 c/\ c= cf1_fan f0 b0 b1 b5 b6 c/\ c~ c= cf1_fan f0 b0 b1 b6 b4 c/\ c= cpr2 b4 b7 c/\ c= cpr2 b5 b8 c/\ c= cpr2 b6 b9 c/\ cIN * * part cINSERT b7 * * part cINSERT b8 part cEMPTY b1 c/\ cIN * * part cINSERT b8 * * part cINSERT b9 part cEMPTY b1 c/\ c~ cIN * * part cINSERT b9 * * part cINSERT b7 part cEMPTY b1 c/\ c= csigma_fan f0 b0 b1 b8 b9 b7 c= * * part cUNION b1 * * part cINSERT * * part cINSERT b7 * * part cINSERT b9 part cEMPTY part cEMPTY b2 cFAN c, f0 c, b0 b2 * / ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b10 b0 c> cCARD * * * part cset_of_edge b10 b0 b1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, b0 b1 c/\ cIN b3 * part cface_set chypermap1_of_fanx c, f0 c, b0 b1 c/\ c> cCARD b3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY b3 c/\ c= cf1_fan f0 b0 b1 b4 b5 c/\ c= cf1_fan f0 b0 b1 b5 b6 c/\ c~ c= cf1_fan f0 b0 b1 b6 b4 c/\ c= cpr2 b4 b7 c/\ c= cpr2 b5 b8 c/\ c= cpr2 b6 b9 c/\ cIN * * part cINSERT b7 * * part cINSERT b8 part cEMPTY b1 c/\ cIN * * part cINSERT b8 * * part cINSERT b9 part cEMPTY b1 c/\ c~ cIN * * part cINSERT b9 * * part cINSERT b7 part cEMPTY b1 c/\ c= csigma_fan f0 b0 b1 b8 b9 b7 c= * * part cUNION b1 * * part cINSERT * * part cINSERT b7 * * part cINSERT b9 part cEMPTY part cEMPTY b2 cFAN c, f0 c, b0 b2 f1 * / ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b10 b0 c> cCARD * * * part cset_of_edge b10 b0 b1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, b0 b1 c/\ cIN b3 * part cface_set chypermap1_of_fanx c, f0 c, b0 b1 c/\ c> cCARD b3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY b3 c/\ c= cf1_fan f0 b0 b1 b4 b5 c/\ c= cf1_fan f0 b0 b1 b5 b6 c/\ c~ c= cf1_fan f0 b0 b1 b6 b4 c/\ c= cpr2 b4 b7 c/\ c= cpr2 b5 b8 c/\ c= cpr2 b6 b9 c/\ cIN * * part cINSERT b7 * * part cINSERT b8 part cEMPTY b1 c/\ cIN * * part cINSERT b8 * * part cINSERT b9 part cEMPTY b1 c/\ c~ cIN * * part cINSERT b9 * * part cINSERT b7 part cEMPTY b1 c/\ c= csigma_fan f0 b0 b1 b8 b9 b7 c= * * part cUNION b1 * * part cINSERT * * part cINSERT b7 * * part cINSERT b9 part cEMPTY part cEMPTY b2 cFAN c, f0 c, b0 b2 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = v), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (y IN (d_fan (x , (V , E)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y))))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= cf1_fan f2 f0 f1 f4 f8 c==> c= cf1_fan f2 f0 f1 f8 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f8 f9 c==> c= cpr2 f3 f5 c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f10 f11 f6 c==> c= csigma_fan f2 f0 f1 f9 f5 f6 c==> c> cCARD f12 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f12 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f9 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f9 part cEMPTY f1 c==> cIN f11 * part cd_fan c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f8 * * part cINSERT f3 part cEMPTY f12 c==> c==> cIN cPOWER * * * part cf1_fan f2 f0 f1 f10 f11 * part cd_fan c, f2 c, f0 f1 c= ctran f2 f0 f7 cf1_fan f2 f0 f1 cPOWER * * * part cf1_fan f2 f0 f1 f10 f11 cf1_fan f2 f0 f7 ctran f2 f0 f7 cPOWER * * * part cf1_fan f2 f0 f1 f10 f11 c= ctran f2 f0 f7 cf1_fan f2 f0 f1 cPOWER * * * part cf1_fan f2 f0 f1 f10 f11 cf1_fan f2 f0 f7 ctran f2 f0 f7 cPOWER * * * part cf1_fan f2 f0 f1 f10 f11
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))) |- ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cIN f2 f0 c> cCARD * * * part cset_of_edge f2 f0 f1 cNUMERAL cBIT1 c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), (y IN (d_fan (x , (V , E)))) |- (((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))) /\ ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f3 c==> cFAN c, f2 c, f0 f1 c==> c= * part cd_fan c, f2 c, f0 f3 * part cd1_fan c, f2 c, f0 f3 c==> cIN f4 * part cd_fan c, f2 c, f0 f3 c/\ c= * part cd_fan c, f2 c, f0 f3 * part cd1_fan c, f2 c, f0 f3 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f3 f5 f4 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cIN cPOWER * * * part cf1_fan f2 f0 f3 f5 f4 * part cd_fan c, f2 c, f0 f3
+ |- ((\E1. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))))) E1)
T * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c= b0 * * part cUNION f2 * * part cINSERT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY part cEMPTY ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 b0 cNUMERAL cBIT1 c_0 f5
+ (!m. ((m < (SUC n)) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))) |- (((m < (SUC n)) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY))))))) = T)
T c==> ! c==> c< b0 cSUC f0 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 csigma_fan f1 f2 f3 f5 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f5 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f7 c~ cIN cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 * * part cINSERT f5 * * part cINSERT f7 part cEMPTY c= c==> c< f8 cSUC f0 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 csigma_fan f1 f2 f3 f5 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 f5 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 f7 c~ cIN cpr3 cPOWER * * * part cf1_fan f1 f2 f3 f8 f4 * * part cINSERT f5 * * part cINSERT f7 part cEMPTY cT
- (((real_ge (real_of_int _3077585)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3077586)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (((dart (hypermap1_of_fanx (x , (V , E1)))) = (d_fan (x , (V , E1)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1)))))))), (y IN (d_fan (x , (V , E)))) |- ((((dart (hypermap1_of_fanx (x , (V , E1)))) = (d_fan (x , (V , E1)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1)))))))) /\ ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f3 * part cd_fan c, f2 c, f0 f3 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part ce_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part cn_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part cf1_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c/\ c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f3 * part cd_fan c, f2 c, f0 f3 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part ce_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part cn_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part cf1_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * part cd_fan c, f2 c, f0 f1
- (((real_ge (real_of_int _3077585)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3077586)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (y IN (d_fan (x , (V , E)))) |- ((((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((e_fan x) V) E)) (d1_fan (x , (V , E))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((n_fan x) V) E)) (d1_fan (x , (V , E))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((f1_fan x) V) E)) (d1_fan (x , (V , E)))))))) ==> ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c==> c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f1 * part cd_fan c, f2 c, f0 f1 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part ce_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cn_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cf1_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * part cd_fan c, f2 c, f0 f1
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (y IN (d_fan (x , (V , E)))) |- ((((FAN (x , (V , E))) /\ ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) f1_fan)))))) ==> ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c==> c==> c/\ cFAN c, f2 c, f0 f1 c= / * * part cres * * * b0 f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 / * * part cres * * * b0 f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f1 * part cd_fan c, f2 c, f0 f1 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f1 * / * * part cres * * * b0 f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f1 * / * * part cres * * * b0 f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 part cn_fan c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f1 * / * * part cres * * * b0 f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 part cf1_fan c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * part cd_fan c, f2 c, f0 f1
- (!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((n_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) |- ((\y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((n_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) y)
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part cn_fan f0 f1 f2 f3 b0 * part cd1_fan c, f0 c, f1 f2 * / c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part cn_fan f0 f1 f2 f3 b0 * part cd1_fan c, f0 c, f1 f2 f4
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y))))) ==> (((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y))))))
T c==> c==> cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2 c= ctran f0 f1 f5 cf1_fan f0 f1 f2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 cf1_fan f0 f1 f5 ctran f0 f1 f5 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 c==> cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2 c= ctran f0 f1 f5 cf1_fan f0 f1 f2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 cf1_fan f0 f1 f5 ctran f0 f1 f5 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4
- (f1 = ((((f1_fan x) V) E) f3)) |- (((((f1_fan x) V) E) f3) = f1)
T c==> c= f0 cf1_fan f1 f2 f3 f4 c= cf1_fan f1 f2 f3 f4 f0
- |- (((((FAN (x , (V , E1))) /\ ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) = (\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E1)))) = (d_fan (x , (V , E1)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E1)))) = ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E1)))) = ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) f1_fan)))))) ==> (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))))) = (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c= / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * part cd_fan c, f0 c, f1 f2 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cf1_fan c==> c= cpr3 cPOWER * * * part cf1_fan f0 f1 f3 f4 f5 f6 cIN cPOWER * * * part cf1_fan f0 f1 f3 f4 f5 * part cd_fan c, f0 c, f1 f3 c==> c= cpr3 cPOWER * * * part cf1_fan f0 f1 f3 f4 f5 f6 cIN cPOWER * * * part cf1_fan f0 f1 f3 f4 f5 * part cd_fan c, f0 c, f1 f3
- (~ (((((f1_fan x) V) E) f3) = f1)) |- (((~ (f1 = ((((f1_fan x) V) E) f3))) ==> ((f1 = ((((f1_fan x) V) E) f3)) = F)) = ((f1 = ((((f1_fan x) V) E) f3)) = F))
T c==> c~ c= cf1_fan f0 f1 f2 f3 f4 c= c==> c~ c= f4 cf1_fan f0 f1 f2 f3 c= c= f4 cf1_fan f0 f1 f2 f3 cF c= c= f4 cf1_fan f0 f1 f2 f3 cF
- (!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((e_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) |- ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((e_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part ce_fan f0 f1 f2 f3 b0 * part cd1_fan c, f0 c, f1 f2 c==> cIN f4 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part ce_fan f0 f1 f2 f3 f4 * part cd1_fan c, f0 c, f1 f2
- (FAN (x , (V , E1))) |- (((((dart (hypermap1_of_fanx (x , (V , E1)))) = (d_fan (x , (V , E1)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1)))))))) ==> ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))))) = ((((FAN (x , (V , E1))) /\ ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) = (\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E1)))) = (d_fan (x , (V , E1)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E1)))) = ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E1)))) = ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) f1_fan)))))) ==> ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))))))
T c==> cFAN c, f0 c, f1 f2 c= c==> c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * part cd_fan c, f0 c, f1 f2 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 f2 * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 f2 * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c= * part cface_map chypermap1_of_fanx c, f0 c, f1 f2 * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f0 f1 f3 f4 f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cIN cPOWER * * * part cf1_fan f0 f1 f3 f4 f5 * part cd_fan c, f0 c, f1 f3 c==> c==> c/\ cFAN c, f0 c, f1 f2 c= / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * part cd_fan c, f0 c, f1 f2 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cf1_fan c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f0 f1 f3 f4 f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cIN cPOWER * * * part cf1_fan f0 f1 f3 f4 f5 * part cd_fan c, f0 c, f1 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = (p e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = (p n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = (p f1_fan))))))) (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))
T * / c==> c/\ cFAN c, f0 c, f1 f2 c= b0 / * * part cres * * * b1 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * part cd_fan c, f0 c, f1 f2 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 f2 * b0 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 f2 * b0 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, f1 f2 * b0 part cf1_fan / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2
- (!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((n_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) |- ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((n_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part cn_fan f0 f1 f2 f3 b0 * part cd1_fan c, f0 c, f1 f2 c==> cIN f4 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part cn_fan f0 f1 f2 f3 f4 * part cd1_fan c, f0 c, f1 f2
- (~ ((pr2 (((POWER (((f1_fan x) V) E)) n) y)) = u)) |- ((u = (pr2 (((POWER (((f1_fan x) V) E)) n) y))) = F)
T c==> c~ c= cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 f5 c= c= f5 cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 cF
- ((pr2 (((POWER (((f1_fan x) V) E)) n) y)) = u) |- (u = (pr2 (((POWER (((f1_fan x) V) E)) n) y)))
T c==> c= cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 f5 c= f5 cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (y IN (d_fan (x , (V , E)))) |- ((((FAN (x , (V , E1))) /\ ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) = (\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E1)))) = (d_fan (x , (V , E1)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E1)))) = ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E1)))) = ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) f1_fan)))))) ==> (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c==> c==> c/\ cFAN c, f2 c, f0 f3 c= / * * part cres * * * b0 f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 / * * part cres * * * b0 f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f3 * part cd_fan c, f2 c, f0 f3 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f3 * / * * part cres * * * b0 f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f3 * / * * part cres * * * b0 f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 part cn_fan c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f3 * / * * part cres * * * b0 f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 part cf1_fan c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 f5 cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * part cd_fan c, f2 c, f0 f1
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((pr3 f1) = u), ((pr3 f2) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (y IN (d_fan (x , (V , E)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((y IN (d_fan (x , (V , E)))) /\ (((!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))) ==> (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))) ==> ((!m. ((m < (SUC n)) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))) ==> (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) (SUC n)) y)) = (((POWER (((f1_fan x) V) E1)) (SUC n)) ((((tran x) V) E1) y))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= c, f2 c, f10 c, f5 f6 f11 c==> c= c, f2 c, f6 c, f10 f5 f12 c==> c= c, f2 c, f5 c, f6 f10 f13 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f10 c==> c= cpr2 f3 f5 c==> c= cpr3 f4 f10 c==> c= cpr3 f14 f5 c==> c= csigma_fan f2 f0 f1 f10 f5 f6 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f10 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f10 part cEMPTY f1 c==> cIN f16 * part cd_fan c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c/\ cIN f16 * part cd_fan c, f2 c, f0 f1 c==> c==> ! c==> c< b0 f17 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 csigma_fan f2 f0 f1 f6 f10 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 f6 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 f10 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 f5 c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c= ctran f2 f0 f7 cPOWER * * * part cf1_fan f2 f0 f1 f17 f16 cPOWER * * * part cf1_fan f2 f0 f7 f17 ctran f2 f0 f7 f16 c==> ! c==> c< b0 cSUC f17 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 csigma_fan f2 f0 f1 f6 f10 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 f6 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 f10 c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 f5 c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 b0 f16 * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c= ctran f2 f0 f7 cPOWER * * * part cf1_fan f2 f0 f1 cSUC f17 f16 cPOWER * * * part cf1_fan f2 f0 f7 cSUC f17 ctran f2 f0 f7 f16
- |- ((real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\E. (!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = (p e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = (p n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = (p f1_fan)))))))) E)
T * / ! c==> c/\ cFAN c, f0 c, f1 b0 c= b1 / * * part cres * * * b2 f0 f1 b0 * part cd1_fan c, f0 c, f1 b0 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 b0 * part cd_fan c, f0 c, f1 b0 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 b0 * b1 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 b0 * b1 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, f1 b0 * b1 part cf1_fan f2
- |- ((\x. (!V. (!E. (!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = (p e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = (p n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = (p f1_fan)))))))))) x)
T * / ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c= b3 / * * part cres * * * b4 b0 b1 b2 * part cd1_fan c, b0 c, b1 b2 c/\ c= * part cdart chypermap1_of_fanx c, b0 c, b1 b2 * part cd_fan c, b0 c, b1 b2 c/\ c= * part cedge_map chypermap1_of_fanx c, b0 c, b1 b2 * b3 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, b0 c, b1 b2 * b3 part cn_fan c= * part cface_map chypermap1_of_fanx c, b0 c, b1 b2 * b3 part cf1_fan f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y))))), ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))) |- (((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))) /\ (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)))))
T c==> c==> cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2 c= ctran f0 f1 f5 cf1_fan f0 f1 f2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 cf1_fan f0 f1 f5 ctran f0 f1 f5 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 c==> cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2 c/\ cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2 c= ctran f0 f1 f5 cf1_fan f0 f1 f2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 cf1_fan f0 f1 f5 ctran f0 f1 f5 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4
- (!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((n_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) |- (((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((n_fan x) V) E)) n) y) IN (d1_fan (x , (V , E))))) = T)
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part cn_fan f0 f1 f2 f3 b0 * part cd1_fan c, f0 c, f1 f2 c= c==> cIN f4 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part cn_fan f0 f1 f2 f3 f4 * part cd1_fan c, f0 c, f1 f2 cT
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (((dart (hypermap1_of_fanx (x , (V , E1)))) = (d_fan (x , (V , E1)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1)))))))), (y IN (d_fan (x , (V , E)))) |- ((((dart (hypermap1_of_fanx (x , (V , E1)))) = (d_fan (x , (V , E1)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1)))))))) /\ (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = v) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f3 * part cd_fan c, f2 c, f0 f3 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part ce_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part cn_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part cf1_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c/\ c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f3 * part cd_fan c, f2 c, f0 f3 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part ce_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part cn_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part cf1_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 f4 cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * part cd_fan c, f2 c, f0 f1
- |- (((((FAN (x , (V , E1))) /\ ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) = (\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E1)))) = (d_fan (x , (V , E1)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E1)))) = ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E1)))) = ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) f1_fan)))))) ==> ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))))) = ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c= / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * part cd_fan c, f0 c, f1 f2 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cf1_fan c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f0 f1 f3 f4 f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cIN cPOWER * * * part cf1_fan f0 f1 f3 f4 f5 * part cd_fan c, f0 c, f1 f3 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f0 f1 f3 f4 f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cIN cPOWER * * * part cf1_fan f0 f1 f3 f4 f5 * part cd_fan c, f0 c, f1 f3
- |- (((POWER f) (SUC n)) = (((POWER f) n) o f))
T c= * * part cPOWER f0 cSUC f1 * * part co * * part cPOWER f0 f1 f0
- (((((f1_fan x) V) E) f3) = f1) |- (f1 = ((((f1_fan x) V) E) f3))
T c==> c= cf1_fan f0 f1 f2 f3 f4 c= f4 cf1_fan f0 f1 f2 f3
- |- (((!n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) ==> ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n)) = ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n))
T c= c==> ! c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1 * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (y IN (d_fan (x , (V , E)))) |- ((((FAN (x , (V , E))) /\ ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) f1_fan)))))) ==> (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = v) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c==> c==> c/\ cFAN c, f2 c, f0 f1 c= / * * part cres * * * b0 f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 / * * part cres * * * b0 f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f1 * part cd_fan c, f2 c, f0 f1 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f1 * / * * part cres * * * b0 f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f1 * / * * part cres * * * b0 f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 part cn_fan c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f1 * / * * part cres * * * b0 f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 part cf1_fan c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 f4 cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * part cd_fan c, f2 c, f0 f1
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (y IN (d_fan (x , (V , E)))) |- ((((FAN (x , (V , E1))) /\ ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) = (\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E1)))) = (d_fan (x , (V , E1)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E1)))) = ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E1)))) = ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) f1_fan)))))) ==> ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c==> c==> c/\ cFAN c, f2 c, f0 f3 c= / * * part cres * * * b0 f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 / * * part cres * * * b0 f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f3 * part cd_fan c, f2 c, f0 f3 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f3 * / * * part cres * * * b0 f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f3 * / * * part cres * * * b0 f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 part cn_fan c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f3 * / * * part cres * * * b0 f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 part cf1_fan c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * part cd_fan c, f2 c, f0 f1
- (((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y))))) |- ((((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y))))) /\ (((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y))))))
T c==> c==> cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2 c= ctran f0 f1 f5 cf1_fan f0 f1 f2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 cf1_fan f0 f1 f5 ctran f0 f1 f5 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 c/\ c==> cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2 c= ctran f0 f1 f5 cf1_fan f0 f1 f2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 cf1_fan f0 f1 f5 ctran f0 f1 f5 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 c==> cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2 c= ctran f0 f1 f5 cf1_fan f0 f1 f2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 cf1_fan f0 f1 f5 ctran f0 f1 f5 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((e_fan x) V) E)) (d1_fan (x , (V , E))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((n_fan x) V) E)) (d1_fan (x , (V , E))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((f1_fan x) V) E)) (d1_fan (x , (V , E)))))))), (y IN (d_fan (x , (V , E)))) |- ((((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((e_fan x) V) E)) (d1_fan (x , (V , E))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((n_fan x) V) E)) (d1_fan (x , (V , E))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((f1_fan x) V) E)) (d1_fan (x , (V , E)))))))) /\ (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = v) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f1 * part cd_fan c, f2 c, f0 f1 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part ce_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cn_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cf1_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c/\ c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f1 * part cd_fan c, f2 c, f0 f1 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part ce_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cn_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cf1_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 f4 cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * part cd_fan c, f2 c, f0 f1
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (y IN (d_fan (x , (V , E)))) |- ((((dart (hypermap1_of_fanx (x , (V , E1)))) = (d_fan (x , (V , E1)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1)))))))) ==> (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = v) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c==> c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f3 * part cd_fan c, f2 c, f0 f3 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part ce_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part cn_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part cf1_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 f4 cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * part cd_fan c, f2 c, f0 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (y IN (d_fan (x , (V , E)))) |- ((((FAN (x , (V , E1))) /\ ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) = (\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E1)))) = (d_fan (x , (V , E1)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E1)))) = ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E1)))) = ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) f1_fan)))))) ==> (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = v) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c==> c==> c/\ cFAN c, f2 c, f0 f3 c= / * * part cres * * * b0 f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 / * * part cres * * * b0 f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f3 * part cd_fan c, f2 c, f0 f3 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f3 * / * * part cres * * * b0 f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f3 * / * * part cres * * * b0 f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 part cn_fan c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f3 * / * * part cres * * * b0 f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 part cf1_fan c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 f4 cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * part cd_fan c, f2 c, f0 f1
- |- (((!x. (!V. (!E. (!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = (p e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = (p n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = (p f1_fan)))))))))) ==> ((\x. (!V. (!E. (!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = (p e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = (p n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = (p f1_fan)))))))))) x)) = ((\x. (!V. (!E. (!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = (p e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = (p n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = (p f1_fan)))))))))) x))
T c= c==> ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c= b3 / * * part cres * * * b4 b0 b1 b2 * part cd1_fan c, b0 c, b1 b2 c/\ c= * part cdart chypermap1_of_fanx c, b0 c, b1 b2 * part cd_fan c, b0 c, b1 b2 c/\ c= * part cedge_map chypermap1_of_fanx c, b0 c, b1 b2 * b3 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, b0 c, b1 b2 * b3 part cn_fan c= * part cface_map chypermap1_of_fanx c, b0 c, b1 b2 * b3 part cf1_fan * / ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c= b3 / * * part cres * * * b4 b0 b1 b2 * part cd1_fan c, b0 c, b1 b2 c/\ c= * part cdart chypermap1_of_fanx c, b0 c, b1 b2 * part cd_fan c, b0 c, b1 b2 c/\ c= * part cedge_map chypermap1_of_fanx c, b0 c, b1 b2 * b3 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, b0 c, b1 b2 * b3 part cn_fan c= * part cface_map chypermap1_of_fanx c, b0 c, b1 b2 * b3 part cf1_fan f0 * / ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c= b3 / * * part cres * * * b4 b0 b1 b2 * part cd1_fan c, b0 c, b1 b2 c/\ c= * part cdart chypermap1_of_fanx c, b0 c, b1 b2 * part cd_fan c, b0 c, b1 b2 c/\ c= * part cedge_map chypermap1_of_fanx c, b0 c, b1 b2 * b3 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, b0 c, b1 b2 * b3 part cn_fan c= * part cface_map chypermap1_of_fanx c, b0 c, b1 b2 * b3 part cf1_fan f0
- (FAN (x , (V , E))) |- (((((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((e_fan x) V) E)) (d1_fan (x , (V , E))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((n_fan x) V) E)) (d1_fan (x , (V , E))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((f1_fan x) V) E)) (d1_fan (x , (V , E)))))))) ==> (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))))) = ((((FAN (x , (V , E))) /\ ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) f1_fan)))))) ==> (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))))))
T c==> cFAN c, f0 c, f1 f2 c= c==> c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * part cd_fan c, f0 c, f1 f2 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 f2 * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 f2 * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c= * part cface_map chypermap1_of_fanx c, f0 c, f1 f2 * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c==> c= cpr3 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 f5 cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2 c==> c==> c/\ cFAN c, f0 c, f1 f2 c= / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * part cd_fan c, f0 c, f1 f2 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cf1_fan c==> c= cpr3 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 f5 cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _3077585)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3077586)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((((FAN (x , (V , E))) /\ ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) f1_fan)))))) ==> (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))))) = (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c= / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * part cd_fan c, f0 c, f1 f2 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cf1_fan c==> c= cpr3 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 f5 cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2 c==> c= cpr3 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 f5 cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = (p e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = (p n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = (p f1_fan))))))) ==> ((\p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = (p e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = (p n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = (p f1_fan))))))) (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) = ((\p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = (p e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = (p n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = (p f1_fan))))))) (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E)))))))
T c= c==> ! c==> c/\ cFAN c, f0 c, f1 f2 c= b0 / * * part cres * * * b1 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * part cd_fan c, f0 c, f1 f2 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 f2 * b0 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 f2 * b0 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, f1 f2 * b0 part cf1_fan * / c==> c/\ cFAN c, f0 c, f1 f2 c= b0 / * * part cres * * * b1 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * part cd_fan c, f0 c, f1 f2 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 f2 * b0 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 f2 * b0 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, f1 f2 * b0 part cf1_fan / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 * / c==> c/\ cFAN c, f0 c, f1 f2 c= b0 / * * part cres * * * b1 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * part cd_fan c, f0 c, f1 f2 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 f2 * b0 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 f2 * b0 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, f1 f2 * b0 part cf1_fan / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2
- |- (((((FAN (x , (V , E))) /\ ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) f1_fan)))))) ==> ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))))) = ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c= / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * part cd_fan c, f0 c, f1 f2 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cf1_fan c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2
- |- (((FAN (x , (V , E))) /\ ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) f1_fan))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c= / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * part cd_fan c, f0 c, f1 f2 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cf1_fan
- (((real_ge (real_of_int _3077585)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3077586)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (y IN (d_fan (x , (V , E)))) |- ((((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((e_fan x) V) E)) (d1_fan (x , (V , E))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((n_fan x) V) E)) (d1_fan (x , (V , E))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((f1_fan x) V) E)) (d1_fan (x , (V , E)))))))) ==> (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c==> c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f1 * part cd_fan c, f2 c, f0 f1 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part ce_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cn_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cf1_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 f5 cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * part cd_fan c, f2 c, f0 f1
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((((f1_fan x) V) E) f3) = f1)) |- (~ (f1 = ((((f1_fan x) V) E) f3)))
T c==> c~ c= cf1_fan f0 f1 f2 f3 f4 c~ c= f4 cf1_fan f0 f1 f2 f3
- ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))) |- ((((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y))))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)))))
T c==> cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2 c==> c==> cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2 c= ctran f0 f1 f5 cf1_fan f0 f1 f2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 cf1_fan f0 f1 f5 ctran f0 f1 f5 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 c= ctran f0 f1 f5 cf1_fan f0 f1 f2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 cf1_fan f0 f1 f5 ctran f0 f1 f5 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4
- |- (((!V. (!E. (!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = (p e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = (p n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = (p f1_fan))))))))) ==> ((\V. (!E. (!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = (p e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = (p n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = (p f1_fan))))))))) V)) = ((\V. (!E. (!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = (p e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = (p n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = (p f1_fan))))))))) V))
T c= c==> ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c= b2 / * * part cres * * * b3 f0 b0 b1 * part cd1_fan c, f0 c, b0 b1 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, b0 b1 * part cd_fan c, f0 c, b0 b1 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, b0 b1 * b2 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, b0 b1 * b2 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, b0 b1 * b2 part cf1_fan * / ! ! c==> c/\ cFAN c, f0 c, b0 b1 c= b2 / * * part cres * * * b3 f0 b0 b1 * part cd1_fan c, f0 c, b0 b1 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, b0 b1 * part cd_fan c, f0 c, b0 b1 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, b0 b1 * b2 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, b0 b1 * b2 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, b0 b1 * b2 part cf1_fan f1 * / ! ! c==> c/\ cFAN c, f0 c, b0 b1 c= b2 / * * part cres * * * b3 f0 b0 b1 * part cd1_fan c, f0 c, b0 b1 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, b0 b1 * part cd_fan c, f0 c, b0 b1 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, b0 b1 * b2 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, b0 b1 * b2 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, b0 b1 * b2 part cf1_fan f1
- (!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((e_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) |- (((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((e_fan x) V) E)) n) y) IN (d1_fan (x , (V , E))))) = T)
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part ce_fan f0 f1 f2 f3 b0 * part cd1_fan c, f0 c, f1 f2 c= c==> cIN f4 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part ce_fan f0 f1 f2 f3 f4 * part cd1_fan c, f0 c, f1 f2 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))) ==> (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))) |- (((!m. ((m < n) ==> (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = (((((sigma_fan x) V) E) v) u))) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = v)) \/ (((~ ((pr2 (((POWER (((f1_fan x) V) E)) m) y)) = u)) /\ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) = w)) \/ (~ ((pr3 (((POWER (((f1_fan x) V) E)) m) y)) IN (v INSERT (w INSERT EMPTY)))))))) ==> (((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)) = (((POWER (((f1_fan x) V) E1)) n) ((((tran x) V) E1) y)))) = T)
T c==> c==> ! c==> c< b0 f0 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 csigma_fan f1 f2 f3 f5 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f5 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f7 c~ cIN cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 * * part cINSERT f5 * * part cINSERT f7 part cEMPTY c= ctran f1 f2 f8 cPOWER * * * part cf1_fan f1 f2 f3 f0 f4 cPOWER * * * part cf1_fan f1 f2 f8 f0 ctran f1 f2 f8 f4 c= c==> ! c==> c< b0 f0 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 csigma_fan f1 f2 f3 f5 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f5 c\/ c/\ c~ c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f6 c= cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 f7 c~ cIN cpr3 cPOWER * * * part cf1_fan f1 f2 f3 b0 f4 * * part cINSERT f5 * * part cINSERT f7 part cEMPTY c= ctran f1 f2 f8 cPOWER * * * part cf1_fan f1 f2 f3 f0 f4 cPOWER * * * part cf1_fan f1 f2 f8 f0 ctran f1 f2 f8 f4 cT
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((((sigma_fan x) V) E) v) u) = (pr2 (((POWER (((f1_fan x) V) E)) n) y))) |- ((pr2 (((POWER (((f1_fan x) V) E)) n) y)) = (((((sigma_fan x) V) E) v) u))
T c==> c= csigma_fan f0 f1 f2 f3 f4 cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f5 f6 c= cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f5 f6 csigma_fan f0 f1 f2 f3 f4
- (!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) |- (((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d1_fan (x , (V , E))))) = T)
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 b0 * part cd1_fan c, f0 c, f1 f2 c= c==> cIN f4 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd1_fan c, f0 c, f1 f2 cT
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_ge ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((e_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) |- ((\y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (((e_fan x) V) E)) n) y) IN (d1_fan (x , (V , E)))))) y)
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part ce_fan f0 f1 f2 f3 b0 * part cd1_fan c, f0 c, f1 f2 * / c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 cIN cPOWER * * * part ce_fan f0 f1 f2 f3 b0 * part cd1_fan c, f0 c, f1 f2 f4
- (((real_ge (real_of_int _3077585)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3077586)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((((f1_fan x) V) E) f3) = f1)) |- ((f1 = ((((f1_fan x) V) E) f3)) = F)
T c==> c~ c= cf1_fan f0 f1 f2 f3 f4 c= c= f4 cf1_fan f0 f1 f2 f3 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _3077585)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3077586)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((e_fan x) V) E)) (d1_fan (x , (V , E))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((n_fan x) V) E)) (d1_fan (x , (V , E))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((f1_fan x) V) E)) (d1_fan (x , (V , E)))))))), (y IN (d_fan (x , (V , E)))) |- ((((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((e_fan x) V) E)) (d1_fan (x , (V , E))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((n_fan x) V) E)) (d1_fan (x , (V , E))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((f1_fan x) V) E)) (d1_fan (x , (V , E)))))))) /\ ((~ ((pr3 (((POWER (((f1_fan x) V) E)) n) y)) IN (v INSERT (w INSERT EMPTY)))) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f1 * part cd_fan c, f2 c, f0 f1 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part ce_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cn_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cf1_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c/\ c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f1 * part cd_fan c, f2 c, f0 f1 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part ce_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cn_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cf1_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c~ cIN cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * part cd_fan c, f2 c, f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\V. (!E. (!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = (p e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = (p n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = (p f1_fan))))))))) V)
T * / ! ! c==> c/\ cFAN c, f0 c, b0 b1 c= b2 / * * part cres * * * b3 f0 b0 b1 * part cd1_fan c, f0 c, b0 b1 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, b0 b1 * part cd_fan c, f0 c, b0 b1 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, b0 b1 * b2 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, b0 b1 * b2 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, b0 b1 * b2 part cf1_fan f1
- (~ ((pr2 (((POWER (((f1_fan x) V) E)) n) y)) = (((((sigma_fan x) V) E) v) u))) |- (((((((sigma_fan x) V) E) v) u) = (pr2 (((POWER (((f1_fan x) V) E)) n) y))) = F)
T c==> c~ c= cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 csigma_fan f0 f1 f2 f5 f6 c= c= csigma_fan f0 f1 f2 f5 f6 cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 cF
- (u = (pr2 (((POWER (((f1_fan x) V) E)) n) y))) |- ((pr2 (((POWER (((f1_fan x) V) E)) n) y)) = u)
T c==> c= f0 cpr2 cPOWER * * * part cf1_fan f1 f2 f3 f4 f5 c= cpr2 cPOWER * * * part cf1_fan f1 f2 f3 f4 f5 f0
- (~ ((pr2 (((POWER (((f1_fan x) V) E)) n) y)) = u)) |- (((~ (u = (pr2 (((POWER (((f1_fan x) V) E)) n) y)))) ==> ((u = (pr2 (((POWER (((f1_fan x) V) E)) n) y))) = F)) = ((u = (pr2 (((POWER (((f1_fan x) V) E)) n) y))) = F))
T c==> c~ c= cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 f5 c= c==> c~ c= f5 cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 c= c= f5 cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 cF c= c= f5 cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 cF
- |- (((\t. (f t)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y))))), ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))) |- ((((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))) ==> (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y))))) /\ (((((tran x) V) E1) ((((f1_fan x) V) E) (((POWER (((f1_fan x) V) E)) n) y))) = ((((f1_fan x) V) E1) ((((tran x) V) E1) (((POWER (((f1_fan x) V) E)) n) y)))))
T c==> c==> cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2 c= ctran f0 f1 f5 cf1_fan f0 f1 f2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 cf1_fan f0 f1 f5 ctran f0 f1 f5 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 c==> cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2 c/\ c==> cIN cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 * part cd_fan c, f0 c, f1 f2 c= ctran f0 f1 f5 cf1_fan f0 f1 f2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 cf1_fan f0 f1 f5 ctran f0 f1 f5 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 c= ctran f0 f1 f5 cf1_fan f0 f1 f2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 cf1_fan f0 f1 f5 ctran f0 f1 f5 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4
- (((real_ge (real_of_int _3077585)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3077586)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077585))) ((real_add (real_of_int _3077586)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3077585)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3077586))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_of_int _3077586)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- (~ ((pr2 (((POWER (((f1_fan x) V) E)) n) y)) = (((((sigma_fan x) V) E) v) u))) |- (~ ((((((sigma_fan x) V) E) v) u) = (pr2 (((POWER (((f1_fan x) V) E)) n) y))))
T c==> c~ c= cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 csigma_fan f0 f1 f2 f5 f6 c~ c= csigma_fan f0 f1 f2 f5 f6 cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (y IN (d_fan (x , (V , E)))) |- ((((dart (hypermap1_of_fanx (x , (V , E1)))) = (d_fan (x , (V , E1)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1)))))))) ==> (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> cIN f6 * part cd_fan c, f2 c, f0 f1 c==> c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f3 * part cd_fan c, f2 c, f0 f3 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part ce_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part cn_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f3 * * part cres * * * part cf1_fan f2 f0 f3 * part cd1_fan c, f2 c, f0 f3 c==> c= cpr3 cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 f5 cIN cPOWER * * * part cf1_fan f2 f0 f1 f7 f6 * part cd_fan c, f2 c, f0 f1
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (FAN (x , (V , E1))) |- (((((dart (hypermap1_of_fanx (x , (V , E1)))) = (d_fan (x , (V , E1)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1)))))))) ==> (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))))) = ((((FAN (x , (V , E1))) /\ ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) = (\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E1)))) = (d_fan (x , (V , E1)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E1)))) = ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E1)))) = ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) f1_fan)))))) ==> (((pr3 (((POWER (((f1_fan x) V) E)) n) y)) = w) ==> ((((POWER (((f1_fan x) V) E)) n) y) IN (d_fan (x , (V , E)))))))
T c==> cFAN c, f0 c, f1 f2 c= c==> c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * part cd_fan c, f0 c, f1 f2 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 f2 * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 f2 * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c= * part cface_map chypermap1_of_fanx c, f0 c, f1 f2 * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c==> c= cpr3 cPOWER * * * part cf1_fan f0 f1 f3 f4 f5 f6 cIN cPOWER * * * part cf1_fan f0 f1 f3 f4 f5 * part cd_fan c, f0 c, f1 f3 c==> c==> c/\ cFAN c, f0 c, f1 f2 c= / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * part cd_fan c, f0 c, f1 f2 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cf1_fan c==> c= cpr3 cPOWER * * * part cf1_fan f0 f1 f3 f4 f5 f6 cIN cPOWER * * * part cf1_fan f0 f1 f3 f4 f5 * part cd_fan c, f0 c, f1 f3
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n)
T * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- ((pr2 (((POWER (((f1_fan x) V) E)) n) y)) = (((((sigma_fan x) V) E) v) u)) |- ((((((sigma_fan x) V) E) v) u) = (pr2 (((POWER (((f1_fan x) V) E)) n) y)))
T c==> c= cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4 csigma_fan f0 f1 f2 f5 f6 c= csigma_fan f0 f1 f2 f5 f6 cpr2 cPOWER * * * part cf1_fan f0 f1 f2 f3 f4
