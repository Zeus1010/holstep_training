N Cfyxfty.AFF_GT_SUBSET_CLOSURE_DARTSET_LEADS_INTO_FAN
C |- (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((f IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (e IN f))))) ==> (((aff_gt (x INSERT EMPTY)) ((pr2 e) INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 cIN f4 f3 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f0 f1 f2 f3
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_UNION
A |- (!s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))))
T c= cIN f0 * * part cUNION f1 f2 c\/ cIN f0 f1 cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D SUBSET_CLOSURE
A |- (!s. (!t. ((s SUBSET t) ==> ((closure s) SUBSET (closure t)))))
T c==> cSUBSET f0 f1 cSUBSET * part cclosure f0 * part cclosure f1
D AFF_GT_SUBSET_AFF_GE
A |- (!s. (!t. (((aff_gt s) t) SUBSET ((aff_ge s) t))))
T cSUBSET * * part caff_gt f0 f1 * * part caff_ge f0 f1
D Fan.remark1_fan
A |- (!x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
D Fan.sigma_fan_in_set_of_edge
A |- (!x. (!V. (!E. (!v. (!u. (((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 cIN f3 * * * part cset_of_edge f4 f1 f2 cIN csigma_fan f0 f1 f2 f4 f3 * * * part cset_of_edge f4 f1 f2
D Fan.properties_of_elements_in_face_fully_surroundedfan
A |- (!x. (!V. (!E. (!ds. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (y IN ds)))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E)))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 cIN f4 f3 cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY f2
D Planarity.fan80
A |- (!x. (!V. (!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi)))))))))
T c= cfan80 c, f0 c, f1 f2 ! ! c==> cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b0 b1 csigma_fan f0 f1 f2 b0 b1 creal_lt cazim f0 b0 b1 csigma_fan f0 f1 f2 b0 b1 cpi
D Planarity.properties_fully_surrounded
A |- (!x. (!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f4 f5 f3 creal_lt cazim f0 f4 f5 f3 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
D Planarity.DARTSET_LEADS_INTO_FAN
A |- (!x. (!V. (!E. (!ds. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (ds IN (face_set (hypermap1_of_fanx (x , (V , E)))))))) ==> (!y. ((y IN ds) ==> (((((dartset_leads_into_fan x) V) E) ds) = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 ! c==> cIN b0 f3 c= * * * * part cdartset_leads_into_fan f0 f1 f2 f3 * * * * * part cdart_leads_into f0 f1 f2 cpr2 b0 cpr3 b0
D Planarity.aff_gt_1_3_subset_dart_leads_into_fan
A |- (!x. (!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) u) w)))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f4 f5 f3 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * * * * part cdart_leads_into f0 f1 f2 f4 f5
D Planarity.aff_ge_1_3_eq_unions_aff_ge_1_2_and_aff_gt_1_3
A |- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
D Cfyxfty.CLOSURE_AFF_GT_1_3_EQ_AFF_GE_1_3
A |- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- ((((v INSERT (u INSERT EMPTY)) IN E) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> c= csigma_fan f2 f0 f1 f4 f5 f6 c==> cIN f7 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f7 c==> c/\ cIN * * part cINSERT f4 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f6 part cEMPTY f1 c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c/\ c~ c= f2 f6 c/\ c~ c= f4 f6 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f6 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f6 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c/\ c~ cIN f6 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f7
- ((\u. ((((((sigma_fan x) V) E) v) w) = u)) u) |- (((\u. ((((((sigma_fan x) V) E) v) w) = u)) u) /\ (?u. ((((((sigma_fan x) V) E) v) w) = u)))
T c==> * / c= csigma_fan f0 f1 f2 f3 f4 b0 f5 c/\ * / c= csigma_fan f0 f1 f2 f3 f4 b0 f5 c? / c= csigma_fan f0 f1 f2 f3 f4 b0
+ (!y. ((y IN f) ==> (((((dartset_leads_into_fan x) V) E) f) = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), ((u INSERT (v INSERT EMPTY)) IN E), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f), ((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) |- ((!y. ((y IN f) ==> (((((dartset_leads_into_fan x) V) E) f) = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y))))) /\ (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> ! c==> cIN b0 f0 c= * * * * part cdartset_leads_into_fan f1 f2 f3 f0 * * * * * part cdart_leads_into f1 f2 f3 cpr2 b0 cpr3 b0 c==> cFAN c, f1 c, f2 f3 c==> cfan80 c, f1 c, f2 f3 c==> c= cpr2 f4 f5 c==> c= cpr3 f4 f6 c==> c= csigma_fan f1 f2 f3 f5 f6 f7 c==> cIN * * part cINSERT f7 * * part cINSERT f5 part cEMPTY f3 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY f3 c==> cIN f4 f0 c==> cSUBSET * part cclosure * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f7 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * part cclosure * * * * * part cdart_leads_into f1 f2 f3 f5 f6 c/\ ! c==> cIN b0 f0 c= * * * * part cdartset_leads_into_fan f1 f2 f3 f0 * * * * * part cdart_leads_into f1 f2 f3 cpr2 b0 cpr3 b0 cSUBSET * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f6 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f1 f2 f3 f0
- (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))), (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') |- ((~ ((closure (((((dart_leads_into x) V) E) v) w)) x')) ==> F)
T c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6 c==> c~ cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6 cF
+ |- ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V)
T * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1
- |- (((!B. ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) ==> ((\B. ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) B)) = ((\B. ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) B))
T c= c==> ! c==> c~ ! c= c\/ c= b1 f0 c= b1 b0 c\/ c= b1 b0 c= b1 f0 cF * / c==> c~ ! c= c\/ c= b1 f0 c= b1 b0 c\/ c= b1 b0 c= b1 f0 cF f1 * / c==> c~ ! c= c\/ c= b1 f0 c= b1 b0 c\/ c= b1 b0 c= b1 f0 cF f1
- |- (((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))))) = T)
T c= c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 cT
+ |- (((!V. (!E. (!v. (!u. (((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E))))))) ==> ((\V. (!E. (!v. (!u. (((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E))))))) V)) = ((\V. (!E. (!v. (!u. (((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E))))))) V))
T c= c==> ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 cIN csigma_fan f0 b0 b1 b2 b3 * * * part cset_of_edge b2 b0 b1 * / ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 cIN csigma_fan f0 b0 b1 b2 b3 * * * part cset_of_edge b2 b0 b1 f1 * / ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 cIN csigma_fan f0 b0 b1 b2 b3 * * * part cset_of_edge b2 b0 b1 f1
+ |- ((\t. ((((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET t) ==> ((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure t)))) (((((dart_leads_into x) V) E) v) w))
T * / c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cSUBSET * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure b0 * * * * * part cdart_leads_into f0 f4 f5 f2 f3
+ |- (((!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))))))) ==> ((\v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))))))) u)) = ((\v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))))))) u))
T c= c==> ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b1 b2 b0 creal_lt cazim f0 b1 b2 b0 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b1 b2 b0 creal_lt cazim f0 b1 b2 b0 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f3 * / ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b1 b2 b0 creal_lt cazim f0 b1 b2 b0 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f3
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ (~ (coplanar (x INSERT (u INSERT (v INSERT (w INSERT EMPTY)))))) |- (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) = (((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))))) = (((~ (coplanar (x INSERT (u INSERT (v INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) = (((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (e IN f) |- ((((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E) ==> (((aff_gt (x INSERT EMPTY)) ((pr2 e) INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN f4 f3 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY f1 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f3
- |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ (FAN (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) w) u)), ((real_lt ((((azim x) v) w) u)) pi), ((u INSERT (v INSERT EMPTY)) IN E), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E) |- ((((FAN (x , (V , E))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ (((v INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) w) u)) /\ ((real_lt ((((azim x) v) w) u)) pi))))) ==> (~ (coplanar (x INSERT (u INSERT (v INSERT (w INSERT EMPTY))))))) ==> (((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w)))))
T c==> cFAN c, f0 c, f1 f2 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f4 f5 f6 c==> creal_lt cazim f0 f4 f5 f6 cpi c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f2 c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f4 f5 f6 creal_lt cazim f0 f4 f5 f6 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cSUBSET * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f1 f2 f4 f5 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f1 f2 f4 f5
+ |- ((((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge v) V) E))) /\ (((v INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c= c==> c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f0 f1 f2 f5 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f0 f1 f2 f5
+ (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))) |- (((v INSERT (w INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) w) (((((sigma_fan x) V) E) v) w))) /\ ((real_lt ((((azim x) v) w) (((((sigma_fan x) V) E) v) w))) pi)))
T c==> ! ! c==> cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 creal_lt cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 cpi c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 f3 f4 csigma_fan f1 f2 f0 f3 f4 creal_lt cazim f1 f3 f4 csigma_fan f1 f2 f0 f3 f4 cpi
- (x = B) |- ((~ (x = A)) = (~ (B = A)))
T c==> c= f0 f1 c= c~ c= f0 f2 c~ c= f1 f2
- |- (((pr2 e) = v) ==> (?v. ((pr2 e) = v)))
T c==> c= cpr2 f0 f1 c? / c= cpr2 f0 b0
+ (FAN (x , (V , E))), ((((((sigma_fan x) V) E) v) w) = u), (w IN (((set_of_edge v) V) E)) |- (((u IN (((set_of_edge v) V) E)) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))) = ((((FAN (x , (V , E))) /\ (w IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) w) IN (((set_of_edge v) V) E))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))))
T c==> cFAN c, f0 c, f1 f2 c==> c= csigma_fan f0 f1 f2 f3 f4 f5 c==> cIN f4 * * * part cset_of_edge f3 f1 f2 c= c==> cIN f5 * * * part cset_of_edge f3 f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f0 f1 f2 f6 c==> c==> c/\ cFAN c, f0 c, f1 f2 cIN f4 * * * part cset_of_edge f3 f1 f2 cIN csigma_fan f0 f1 f2 f3 f4 * * * part cset_of_edge f3 f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f0 f1 f2 f6
+ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) |- (((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) _6548078)) \/ ((closure (((((dart_leads_into x) V) E) v) w)) _6548078)) /\ (((~ (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) _6548078)) \/ ((closure (((((dart_leads_into x) V) E) v) w)) _6548078)) /\ ((~ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) _6548078)) \/ ((closure (((((dart_leads_into x) V) E) v) w)) _6548078))))
T c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6 c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f6 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6 c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6
+ |- ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))) u)
T * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (B = B)) ==> (B = B))
T c==> c~ c= f0 f0 c= f0 f0
+ |- (((!w. (((FAN (x , (V , E))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ (((v INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) v) w) = u) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) v) w)))) ==> ((\w. (((FAN (x , (V , E))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ (((v INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) v) w) = u) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) v) w)))) w)) = ((\w. (((FAN (x , (V , E))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ (((v INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) v) w) = u) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) v) w)))) w))
T c= c==> ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f4 b0 f3 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY * * * * * part cdart_leads_into f0 f1 f2 f4 b0 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f4 b0 f3 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY * * * * * part cdart_leads_into f0 f1 f2 f4 b0 f5 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f4 b0 f3 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY * * * * * part cdart_leads_into f0 f1 f2 f4 b0 f5
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- (((pr2 e) = v) /\ (((aff_gt (x INSERT EMPTY)) ((pr2 e) INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> cIN f5 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f5 c/\ c= cpr2 f3 f4 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f5
- |- (((((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) ==> (((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))) = (((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)))
T c= c==> c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
+ |- ((\E. (!v. (!u. (((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)))))) E)
T * / ! ! c==> c/\ cFAN c, f0 c, f1 b0 cIN b2 * * * part cset_of_edge b1 f1 b0 cIN csigma_fan f0 f1 b0 b1 b2 * * * part cset_of_edge b1 f1 b0 f2
+ |- ((\x. (!V. (!E. (!ds. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (y IN ds)))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E))))))) x)
T * / ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b5 b1 c> cCARD * * * part cset_of_edge b5 b1 b2 cNUMERAL cBIT1 c_0 c/\ cIN b3 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 cIN b4 b3 cIN * * part cINSERT cpr2 b4 * * part cINSERT cpr3 b4 part cEMPTY b2 f0
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
- (x = B), (((~ (x = A)) /\ (~ (x = B))) /\ ((x = B) \/ (x = A))) |- (~ (B = A))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c~ c= f0 f1 c\/ c= f0 f1 c= f0 f2 c~ c= f1 f2
- (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) |- ((~ (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) _6548078)) \/ ((closure (((((dart_leads_into x) V) E) v) w)) _6548078))
T c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f6 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6
+ |- (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w)))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))))
T c= c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f3 f4 f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f3 f4 f1 f2
- |- ((\w. (!v. (!E. (!V. (!x. (!u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F))))))) w)
T * / ! ! ! ! ! c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b5 * * part cINSERT b1 part cEMPTY b6 c\/ caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 c\/ caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b0 * * part cINSERT b5 part cEMPTY b6 caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b5 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 cclosure * * * * * part cdart_leads_into b4 b3 b2 b1 b0 b6 c==> ! c==> caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 ! c==> caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 cclosure * * * * * part cdart_leads_into b4 b3 b2 b1 b0 b6 cF f0
+ |- (?w. ((pr3 e) = w))
T c? / c= cpr3 f0 b0
+ |- ((\v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge v) V) E))) /\ (((v INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))) v)
T * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4
+ ((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((f IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (e IN f))))) |- (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((f IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (e IN f))))) /\ (((aff_gt (x INSERT EMPTY)) ((pr2 e) INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 cIN f4 f3 c/\ c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 cIN f4 f3 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f0 f1 f2 f3
+ |- (((!w. ((~ (coplanar (x INSERT (u INSERT (v INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))))) ==> ((\w. ((~ (coplanar (x INSERT (u INSERT (v INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))))) w)) = ((\w. ((~ (coplanar (x INSERT (u INSERT (v INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))))) w))
T c= c==> ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3 * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3
+ |- (((!x. (!V. (!E. (!ds. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (ds IN (face_set (hypermap1_of_fanx (x , (V , E)))))))) ==> (!y. ((y IN ds) ==> (((((dartset_leads_into_fan x) V) E) ds) = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y)))))))))) ==> ((\x. (!V. (!E. (!ds. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (ds IN (face_set (hypermap1_of_fanx (x , (V , E)))))))) ==> (!y. ((y IN ds) ==> (((((dartset_leads_into_fan x) V) E) ds) = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y)))))))))) x)) = ((\x. (!V. (!E. (!ds. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (ds IN (face_set (hypermap1_of_fanx (x , (V , E)))))))) ==> (!y. ((y IN ds) ==> (((((dartset_leads_into_fan x) V) E) ds) = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y)))))))))) x))
T c= c==> ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b4 b1 c> cCARD * * * part cset_of_edge b4 b1 b2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, b0 c, b1 b2 cIN b3 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 ! c==> cIN b4 b3 c= * * * * part cdartset_leads_into_fan b0 b1 b2 b3 * * * * * part cdart_leads_into b0 b1 b2 cpr2 b4 cpr3 b4 * / ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b4 b1 c> cCARD * * * part cset_of_edge b4 b1 b2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, b0 c, b1 b2 cIN b3 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 ! c==> cIN b4 b3 c= * * * * part cdartset_leads_into_fan b0 b1 b2 b3 * * * * * part cdart_leads_into b0 b1 b2 cpr2 b4 cpr3 b4 f0 * / ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b4 b1 c> cCARD * * * part cset_of_edge b4 b1 b2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, b0 c, b1 b2 cIN b3 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 ! c==> cIN b4 b3 c= * * * * part cdartset_leads_into_fan b0 b1 b2 b3 * * * * * part cdart_leads_into b0 b1 b2 cpr2 b4 cpr3 b4 f0
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
- |- ((\u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F)) u)
T * / c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b1 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT b0 part cEMPTY b1 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cclosure * * * * * part cdart_leads_into f0 f3 f4 f1 f2 b1 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cclosure * * * * * part cdart_leads_into f0 f3 f4 f1 f2 b1 cF f5
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ |- (((!x. (!V. (!E. (!v. (!u. (((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)))))))) ==> ((\x. (!V. (!E. (!v. (!u. (((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)))))))) x)) = ((\x. (!V. (!E. (!v. (!u. (((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)))))))) x))
T c= c==> ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 cIN b4 * * * part cset_of_edge b3 b1 b2 cIN csigma_fan b0 b1 b2 b3 b4 * * * part cset_of_edge b3 b1 b2 * / ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 cIN b4 * * * part cset_of_edge b3 b1 b2 cIN csigma_fan b0 b1 b2 b3 b4 * * * part cset_of_edge b3 b1 b2 f0 * / ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 cIN b4 * * * part cset_of_edge b3 b1 b2 cIN csigma_fan b0 b1 b2 b3 b4 * * * part cset_of_edge b3 b1 b2 f0
+ |- ((\v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))))))) u)
T * / ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b1 b2 b0 creal_lt cazim f0 b1 b2 b0 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f3
+ ((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) |- (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) /\ (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))))
T c==> cSUBSET * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 c/\ cSUBSET * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3
+ |- (((!V. (!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi)))))))) ==> ((\V. (!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi)))))))) V)) = ((\V. (!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi)))))))) V))
T c= c==> ! ! c= cfan80 c, f0 c, b0 b1 ! ! c==> cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 creal_lt cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 cpi * / ! c= cfan80 c, f0 c, b0 b1 ! ! c==> cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 creal_lt cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 cpi f1 * / ! c= cfan80 c, f0 c, b0 b1 ! ! c==> cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 creal_lt cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 cpi f1
+ |- (((!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))))))) ==> ((\E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))))))) E)) = ((\E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))))))) E))
T c= c==> ! ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b2 b3 b1 creal_lt cazim f0 b2 b3 b1 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b2 b3 b1 creal_lt cazim f0 b2 b3 b1 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2 * / ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b2 b3 b1 creal_lt cazim f0 b2 b3 b1 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2
- |- ((!A. (!B. (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A)))))) = (!A. (!B. ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))))
T c= ! ! ! c= c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c= b2 b0 ! ! c==> c~ ! c= c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c= b2 b0 cF
+ |- (((!x. (!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) u) w))))))))) ==> ((\x. (!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) u) w))))))))) x)) = ((\x. (!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) u) w))))))))) x))
T c= c==> ! ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY b2 c/\ c= csigma_fan b0 b1 b2 b4 b5 b3 c/\ ! c==> cIN b6 b1 c> cCARD * * * part cset_of_edge b6 b1 b2 cNUMERAL cBIT1 c_0 cfan80 c, b0 c, b1 b2 cSUBSET * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * * * * part cdart_leads_into b0 b1 b2 b4 b5 * / ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY b2 c/\ c= csigma_fan b0 b1 b2 b4 b5 b3 c/\ ! c==> cIN b6 b1 c> cCARD * * * part cset_of_edge b6 b1 b2 cNUMERAL cBIT1 c_0 cfan80 c, b0 c, b1 b2 cSUBSET * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * * * * part cdart_leads_into b0 b1 b2 b4 b5 f0 * / ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY b2 c/\ c= csigma_fan b0 b1 b2 b4 b5 b3 c/\ ! c==> cIN b6 b1 c> cCARD * * * part cset_of_edge b6 b1 b2 cNUMERAL cBIT1 c_0 cfan80 c, b0 c, b1 b2 cSUBSET * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * * * * part cdart_leads_into b0 b1 b2 b4 b5 f0
+ |- (((!ds. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (ds IN (face_set (hypermap1_of_fanx (x , (V , E)))))))) ==> (!y. ((y IN ds) ==> (((((dartset_leads_into_fan x) V) E) ds) = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y))))))) ==> ((\ds. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (ds IN (face_set (hypermap1_of_fanx (x , (V , E)))))))) ==> (!y. ((y IN ds) ==> (((((dartset_leads_into_fan x) V) E) ds) = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y))))))) f)) = ((\ds. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (ds IN (face_set (hypermap1_of_fanx (x , (V , E)))))))) ==> (!y. ((y IN ds) ==> (((((dartset_leads_into_fan x) V) E) ds) = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y))))))) f))
T c= c==> ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 ! c==> cIN b1 b0 c= * * * * part cdartset_leads_into_fan f0 f1 f2 b0 * * * * * part cdart_leads_into f0 f1 f2 cpr2 b1 cpr3 b1 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 ! c==> cIN b1 b0 c= * * * * part cdartset_leads_into_fan f0 f1 f2 b0 * * * * * part cdart_leads_into f0 f1 f2 cpr2 b1 cpr3 b1 f3 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 ! c==> cIN b1 b0 c= * * * * part cdartset_leads_into_fan f0 f1 f2 b0 * * * * * part cdart_leads_into f0 f1 f2 cpr2 b1 cpr3 b1 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- ((?w. ((pr3 e) = w)) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> cIN f5 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f5 c==> c? / c= cpr3 f3 b0 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT cpr3 f3 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f5
+ |- (((!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))))))) ==> ((\x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))))))) x)) = ((\x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))))))) x))
T c= c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0 * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
- |- ((!x''. ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) \/ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x''))) = ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) \/ (!x'. (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))))
T c= ! c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
+ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) v) w)) |- ((((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) v) w)) = T)
T c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * * * * part cdart_leads_into f0 f4 f5 f2 f3 c= cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * * * * part cdart_leads_into f0 f4 f5 f2 f3 cT
+ |- (((!x. (!V. (!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))))))) ==> ((\x. (!V. (!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))))))) x)) = ((\x. (!V. (!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))))))) x))
T c= c==> ! ! ! c= cfan80 c, b0 c, b1 b2 ! ! c==> cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 creal_lt cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 cpi * / ! ! c= cfan80 c, b0 c, b1 b2 ! ! c==> cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 creal_lt cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 cpi f0 * / ! ! c= cfan80 c, b0 c, b1 b2 ! ! c==> cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 creal_lt cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 cpi f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- (((!x'. (((\w. ((pr3 e) = w)) x') ==> (((aff_gt (x INSERT EMPTY)) (v INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))) ==> ((?w. ((pr3 e) = w)) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))) = ((?w. ((pr3 e) = w)) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> cIN f5 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f5 c= c==> ! c==> * / c= cpr3 f3 b1 b0 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT cpr3 f3 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f5 c==> c? / c= cpr3 f3 b0 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT cpr3 f3 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f5 c==> c? / c= cpr3 f3 b0 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT cpr3 f3 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f5
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- (((aff_gt (x INSERT EMPTY)) (v INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> cIN f6 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f6 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT cpr3 f3 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f6
- |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), (((v INSERT (u INSERT EMPTY)) IN E) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- ((((v INSERT (u INSERT EMPTY)) IN E) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> c= csigma_fan f2 f0 f1 f4 f5 f6 c==> c/\ cIN * * part cINSERT f4 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f6 part cEMPTY f1 c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c/\ c~ c= f2 f6 c/\ c~ c= f4 f6 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f6 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f6 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c/\ c~ cIN f6 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> cIN f7 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f7 c/\ c/\ cIN * * part cINSERT f4 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f6 part cEMPTY f1 c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c/\ c~ c= f2 f6 c/\ c~ c= f4 f6 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f6 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f6 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c/\ c~ cIN f6 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f7
+ |- ((((~ (coplanar (x INSERT (u INSERT (v INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) = (((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))))) = ((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w)))))
T c= c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3
- |- ((\s. ((edges s) = (GSPEC (\GEN%PVAR%5232. (?v. (?w. (((SETSPEC GEN%PVAR%5232) ((edge_of (closed_segment ((CONS (v , w)) NIL))) s)) (v INSERT (w INSERT EMPTY))))))))) s)
T * / c= * part cedges b0 * part cGSPEC / c? / c? / cSETSPEC b1 cedge_of * part cclosed_segment cCONS c, b2 b3 cNIL b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (x = v)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f), (w IN (((set_of_edge v) V) E)) |- (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f4 f3 c==> c= cpr3 f4 f5 c==> c= csigma_fan f2 f0 f1 f3 f5 f6 c==> c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f5 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f7 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY f1 c==> cIN f4 f7 c==> cIN f5 * * * part cset_of_edge f3 f0 f1 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f7
+ |- (((((FAN (x , (V , E))) /\ (w IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) w) IN (((set_of_edge v) V) E))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 cIN f3 * * * part cset_of_edge f4 f1 f2 cIN csigma_fan f0 f1 f2 f4 f3 * * * part cset_of_edge f4 f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f0 f1 f2 f5 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f0 f1 f2 f5
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- (((FINITE (((set_of_edge v) V) E)) /\ ((w IN (((set_of_edge v) V) E)) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> c= csigma_fan f2 f0 f1 f4 f5 f6 c==> cIN f7 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f7 c==> c/\ cFINITE * * * part cset_of_edge f4 f0 f1 c/\ cIN f5 * * * part cset_of_edge f4 f0 f1 c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f2 f4 c/\ c~ c= f2 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f7
+ |- ((\E. (!ds. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (y IN ds)))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E))))) E)
T * / ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 b0 cNUMERAL cBIT1 c_0 c/\ cIN b1 * part cface_set chypermap1_of_fanx c, f0 c, f1 b0 cIN b2 b1 cIN * * part cINSERT cpr2 b2 * * part cINSERT cpr3 b2 part cEMPTY b0 f2
- ((pr3 e) = w) |- ((\w. ((pr3 e) = w)) w)
T c==> c= cpr3 f0 f1 * / c= cpr3 f0 b0 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- (((u INSERT (v INSERT EMPTY)) IN E) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> c= csigma_fan f2 f0 f1 f4 f5 f6 c==> cIN f7 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f7 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f1 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f7
+ |- ((((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) v) w)) ==> ((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))))
T c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * * * * part cdart_leads_into f0 f4 f5 f2 f3 cSUBSET * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3
+ |- ((((((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) v) w)) ==> ((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w)))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))) = (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c= c==> c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * * * * part cdart_leads_into f0 f4 f5 f2 f3 cSUBSET * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f0 f4 f5 f6 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f0 f4 f5 f6
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ |- (((!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) ==> ((\u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) w)) = ((\u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) w))
T c= c==> ! ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * / ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f3 * / ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f3
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), ((FINITE (((set_of_edge v) V) E)) /\ ((w IN (((set_of_edge v) V) E)) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- (((FINITE (((set_of_edge v) V) E)) /\ ((w IN (((set_of_edge v) V) E)) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> c= csigma_fan f2 f0 f1 f4 f5 f6 c==> c/\ cFINITE * * * part cset_of_edge f4 f0 f1 c/\ cIN f5 * * * part cset_of_edge f4 f0 f1 c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f2 f4 c/\ c~ c= f2 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> cIN f7 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f7 c/\ c/\ cFINITE * * * part cset_of_edge f4 f0 f1 c/\ cIN f5 * * * part cset_of_edge f4 f0 f1 c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f2 f4 c/\ c~ c= f2 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f7
- |- (((!E. (!V. (!x. (!u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F))))) ==> ((\E. (!V. (!x. (!u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F))))) E)) = ((\E. (!V. (!x. (!u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F))))) E))
T c= c==> ! ! ! ! c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b3 * * part cINSERT f0 part cEMPTY b4 c\/ caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 c\/ caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT f1 * * part cINSERT b3 part cEMPTY b4 caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 cclosure * * * * * part cdart_leads_into b2 b1 b0 f0 f1 b4 c==> ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 cclosure * * * * * part cdart_leads_into b2 b1 b0 f0 f1 b4 cF * / ! ! ! c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b3 * * part cINSERT f0 part cEMPTY b4 c\/ caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 c\/ caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT f1 * * part cINSERT b3 part cEMPTY b4 caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 cclosure * * * * * part cdart_leads_into b2 b1 b0 f0 f1 b4 c==> ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 cclosure * * * * * part cdart_leads_into b2 b1 b0 f0 f1 b4 cF f2 * / ! ! ! c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b3 * * part cINSERT f0 part cEMPTY b4 c\/ caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 c\/ caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT f1 * * part cINSERT b3 part cEMPTY b4 caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 cclosure * * * * * part cdart_leads_into b2 b1 b0 f0 f1 b4 c==> ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 cclosure * * * * * part cdart_leads_into b2 b1 b0 f0 f1 b4 cF f2
+ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) |- (!x'. ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) \/ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))
T c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ |- (((!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) u) w)))))) ==> ((\v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) u) w)))))) u)) = ((\v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) u) w)))))) u))
T c= c==> ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b1 b2 b0 c/\ ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * * * * part cdart_leads_into f0 f1 f2 b1 b2 * / ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b1 b2 b0 c/\ ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * * * * part cdart_leads_into f0 f1 f2 b1 b2 f3 * / ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b1 b2 b0 c/\ ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * * * * part cdart_leads_into f0 f1 f2 b1 b2 f3
+ (~ (coplanar (x INSERT (u INSERT (v INSERT (w INSERT EMPTY)))))) |- ((((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) ==> (((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))))) = (((~ (coplanar (x INSERT (u INSERT (v INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))))) ==> (((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cSUBSET * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cSUBSET * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3
+ |- (((!v. (!u. (((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E))))) ==> ((\v. (!u. (((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E))))) v)) = ((\v. (!u. (((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E))))) v))
T c= c==> ! ! c==> c/\ cFAN c, f0 c, f1 f2 cIN b1 * * * part cset_of_edge b0 f1 f2 cIN csigma_fan f0 f1 f2 b0 b1 * * * part cset_of_edge b0 f1 f2 * / ! c==> c/\ cFAN c, f0 c, f1 f2 cIN b1 * * * part cset_of_edge b0 f1 f2 cIN csigma_fan f0 f1 f2 b0 b1 * * * part cset_of_edge b0 f1 f2 f3 * / ! c==> c/\ cFAN c, f0 c, f1 f2 cIN b1 * * * part cset_of_edge b0 f1 f2 cIN csigma_fan f0 f1 f2 b0 b1 * * * part cset_of_edge b0 f1 f2 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), ((w IN (((set_of_edge v) V) E)) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFINITE * * * part cset_of_edge f2 f0 f1 c==> cFAN c, f3 c, f0 f1 c==> cfan80 c, f3 c, f0 f1 c==> c= cpr2 f4 f2 c==> c= cpr3 f4 f5 c==> c= csigma_fan f3 f0 f1 f2 f5 f6 c==> c/\ cIN f5 * * * part cset_of_edge f2 f0 f1 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c/\ c~ c= f3 f2 c/\ c~ c= f3 f5 c/\ c~ c= f2 f5 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f5 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c/\ cIN f2 f0 c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cIN f7 * part cface_set chypermap1_of_fanx c, f3 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY f1 c==> cIN f4 f7 cSUBSET * * part caff_gt * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f3 f0 f1 f7
+ (~ (coplanar (x INSERT (u INSERT (v INSERT (w INSERT EMPTY)))))) |- (((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) ==> (((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w)))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cSUBSET * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3
- (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))), (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))), (~ ((closure (((((dart_leads_into x) V) E) v) w)) x')), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') |- ((~ ((closure (((((dart_leads_into x) V) E) v) w)) x')) /\ F)
T c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c~ cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6 c/\ c~ cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6 cF
+ |- ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) = (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))))
T c= cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f3 f4 f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f3 f4 f1 f2
+ (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), ((u INSERT (v INSERT EMPTY)) IN E), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f), ((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) |- ((!y. ((y IN f) ==> (((((dartset_leads_into_fan x) V) E) f) = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y))))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> cFAN c, f0 c, f1 f2 c==> cfan80 c, f0 c, f1 f2 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> c= csigma_fan f0 f1 f2 f4 f5 f6 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f2 c==> cIN f3 f7 c==> cSUBSET * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f1 f2 f4 f5 c==> ! c==> cIN b0 f7 c= * * * * part cdartset_leads_into_fan f0 f1 f2 f7 * * * * * part cdart_leads_into f0 f1 f2 cpr2 b0 cpr3 b0 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f0 f1 f2 f7
+ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) |- ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) _6548078) ==> ((closure (((((dart_leads_into x) V) E) v) w)) _6548078))
T c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6
- ((((((sigma_fan x) V) E) v) w) = u) |- ((\u. ((((((sigma_fan x) V) E) v) w) = u)) u)
T c==> c= csigma_fan f0 f1 f2 f3 f4 f5 * / c= csigma_fan f0 f1 f2 f3 f4 b0 f5
- (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))) |- ((((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))) = T)
T c==> c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ c= f3 f1 c/\ c~ c= f0 f1 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ cIN f1 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c= c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ c= f3 f1 c/\ c~ c= f0 f1 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ cIN f1 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY cT
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- ((?u. ((((((sigma_fan x) V) E) v) w) = u)) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> cIN f6 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f6 c==> c? / c= csigma_fan f2 f0 f1 f4 f5 b0 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f6
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- (((!w. (((FAN (x , (V , E))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ (((v INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) w) u)) /\ ((real_lt ((((azim x) v) w) u)) pi))))) ==> (~ (coplanar (x INSERT (u INSERT (v INSERT (w INSERT EMPTY)))))))) ==> ((\w. (((FAN (x , (V , E))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ (((v INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) w) u)) /\ ((real_lt ((((azim x) v) w) u)) pi))))) ==> (~ (coplanar (x INSERT (u INSERT (v INSERT (w INSERT EMPTY)))))))) w)) = ((\w. (((FAN (x , (V , E))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ (((v INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) w) u)) /\ ((real_lt ((((azim x) v) w) u)) pi))))) ==> (~ (coplanar (x INSERT (u INSERT (v INSERT (w INSERT EMPTY)))))))) w))
T c= c==> ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f4 b0 f3 creal_lt cazim f0 f4 b0 f3 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f4 b0 f3 creal_lt cazim f0 f4 b0 f3 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f5 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f4 b0 f3 creal_lt cazim f0 f4 b0 f3 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f5
+ (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))), (FAN (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), ((u INSERT (v INSERT EMPTY)) IN E), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E) |- (((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))))
T c==> ! ! c==> cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 creal_lt cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 cpi c==> cFAN c, f1 c, f2 f0 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> c= csigma_fan f1 f2 f0 f4 f5 f6 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f0 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f0 c==> cSUBSET * part cclosure * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * * part cdart_leads_into f1 f2 f0 f4 f5 cSUBSET * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * part cclosure * * * * * part cdart_leads_into f1 f2 f0 f4 f5
+ |- ((\v. ((pr2 e) = v)) (pr2 e))
T * / c= cpr2 f0 b0 cpr2 f0
- (~ F), (x = B), (((~ (x = A)) /\ (~ (x = B))) /\ ((x = B) \/ (x = A))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c~ c= f0 f1 c\/ c= f0 f1 c= f0 f2 c/\ c~ cF cF
- ((\w. ((pr3 e) = w)) w) |- ((((pr3 e) = w) ==> (?w. ((pr3 e) = w))) = (?w. ((pr3 e) = w)))
T c==> * / c= cpr3 f0 b0 f1 c= c==> c= cpr3 f0 f1 c? / c= cpr3 f0 b0 c? / c= cpr3 f0 b0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- (((!x'. (((\v. ((pr2 e) = v)) x') ==> (((aff_gt (x INSERT EMPTY)) ((pr2 e) INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))) ==> ((?v. ((pr2 e) = v)) ==> (((aff_gt (x INSERT EMPTY)) ((pr2 e) INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))) = ((?v. ((pr2 e) = v)) ==> (((aff_gt (x INSERT EMPTY)) ((pr2 e) INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY f1 c==> cIN f4 f3 c= c==> ! c==> * / c= cpr2 f4 b1 b0 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f3 c==> c? / c= cpr2 f4 b0 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f3 c==> c? / c= cpr2 f4 b0 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f3
- |- ((!x. (!u. ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))))))) = T)
T c= ! ! c==> ! c==> c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT f0 part cEMPTY b2 c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT b1 part cEMPTY b2 caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 cclosure * * * * * part cdart_leads_into b0 f2 f3 f0 f1 b2 c==> ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 cclosure * * * * * part cdart_leads_into b0 f2 f3 f0 f1 b2 cT
- (~ F), (x = B), (((x = A) \/ (x = B)) /\ ((~ (x = B)) /\ (~ (x = A)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c/\ c~ c= f0 f1 c~ c= f0 f2 c/\ c~ cF cF
+ |- (((pr2 e) = (pr2 e)) = ((\v. ((pr2 e) = v)) (pr2 e)))
T c= c= cpr2 f0 cpr2 f0 * / c= cpr2 f0 b0 cpr2 f0
+ |- (((!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))))) ==> ((\E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))))) E)) = ((\E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))))) E))
T c= c==> ! c= cfan80 c, f0 c, f1 b0 ! ! c==> cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 creal_lt cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 cpi * / c= cfan80 c, f0 c, f1 b0 ! ! c==> cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 creal_lt cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 cpi f2 * / c= cfan80 c, f0 c, f1 b0 ! ! c==> cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 creal_lt cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 cpi f2
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- ((\E. (!V. (!x. (!u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F))))) E)
T * / ! ! ! c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b3 * * part cINSERT f0 part cEMPTY b4 c\/ caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 c\/ caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT f1 * * part cINSERT b3 part cEMPTY b4 caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 cclosure * * * * * part cdart_leads_into b2 b1 b0 f0 f1 b4 c==> ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 cclosure * * * * * part cdart_leads_into b2 b1 b0 f0 f1 b4 cF f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), ((fan80 (x , (V , E))) /\ ((f IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (e IN f))) |- (((aff_gt (x INSERT EMPTY)) ((pr2 e) INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> c/\ cfan80 c, f2 c, f0 f1 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 cIN f4 f3 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f3
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- (((!A. (!B. ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))) ==> ((\A. (!B. ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))) A)) = ((\A. (!B. ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))) A))
T c= c==> ! ! c==> c~ ! c= c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c= b2 b0 cF * / ! c==> c~ ! c= c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c= b2 b0 cF f0 * / ! c==> c~ ! c= c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c= b2 b0 cF f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (x = v)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f), (v IN V) |- ((u IN (((set_of_edge v) V) E)) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f4 f3 c==> c= cpr3 f4 f5 c==> c= csigma_fan f2 f0 f1 f3 f5 f6 c==> cIN f7 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY f1 c==> cIN f4 f7 c==> cIN f3 f0 c==> cIN f6 * * * part cset_of_edge f3 f0 f1 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f7
+ |- ((((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c= c==> c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f0 f1 f2 f6 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f0 f1 f2 f6
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- (((\u. ((((((sigma_fan x) V) E) v) w) = u)) u) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> cIN f6 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f6 c==> * / c= csigma_fan f2 f0 f1 f4 f5 b0 f7 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f6
+ |- ((\t. (((aff_gt (x INSERT EMPTY)) t) SUBSET ((aff_ge (x INSERT EMPTY)) t))) (v INSERT (w INSERT EMPTY)))
T * / cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((\w. ((pr3 e) = w)) (pr3 e))
T * / c= cpr3 f0 b0 cpr3 f0
- |- ((((\u. ((((((sigma_fan x) V) E) v) w) = u)) u) ==> (?u. ((((((sigma_fan x) V) E) v) w) = u))) = T)
T c= c==> * / c= csigma_fan f0 f1 f2 f3 f4 b0 f5 c? / c= csigma_fan f0 f1 f2 f3 f4 b0 cT
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- ((((\u. ((((((sigma_fan x) V) E) v) w) = u)) u) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))) = T)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> cIN f6 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f6 c= c==> * / c= csigma_fan f2 f0 f1 f4 f5 b0 f7 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f6 cT
+ |- ((\s. (!t. (((aff_gt s) t) SUBSET ((aff_ge s) t)))) (x INSERT EMPTY))
T * / ! cSUBSET * * part caff_gt b0 b1 * * part caff_ge b0 b1 * * part cINSERT f0 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (v INSERT EMPTY)) IN E), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- ((((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) v) w)) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> c= csigma_fan f2 f0 f1 f4 f5 f6 c==> cIN f7 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f7 c==> cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * * * * part cdart_leads_into f2 f0 f1 f4 f5 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f7
+ |- (((!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))))))))) ==> ((\V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))))))))) V)) = ((\V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))))))))) V))
T c= c==> ! ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b3 b4 b2 creal_lt cazim f0 b3 b4 b2 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * / ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b3 b4 b2 creal_lt cazim f0 b3 b4 b2 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f1 * / ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b3 b4 b2 creal_lt cazim f0 b3 b4 b2 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f1
- |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (v INSERT EMPTY)) IN E), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- (((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> c= csigma_fan f2 f0 f1 f4 f5 f6 c==> cIN f7 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f7 c==> cSUBSET * part cclosure * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * * part cdart_leads_into f2 f0 f1 f4 f5 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f7
+ |- (((?u. ((((((sigma_fan x) V) E) v) w) = u)) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c= c==> c? / c= csigma_fan f0 f1 f2 f3 f4 b0 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f0 f1 f2 f5 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f0 f1 f2 f5
+ |- ((\v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) u) w)))))) u)
T * / ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b1 b2 b0 c/\ ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * * * * part cdart_leads_into f0 f1 f2 b1 b2 f3
- |- ((!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A)))) = T)
T c= ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cT
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (v INSERT EMPTY)) IN E), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f), (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) v) w)) |- (((((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) v) w)) ==> ((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w)))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> c= csigma_fan f2 f0 f1 f4 f5 f6 c==> cIN f7 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f7 c==> cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * * * * part cdart_leads_into f2 f0 f1 f4 f5 c==> c==> cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * * * * part cdart_leads_into f2 f0 f1 f4 f5 cSUBSET * part cclosure * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * * part cdart_leads_into f2 f0 f1 f4 f5 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f7
+ |- (((?v. ((pr2 e) = v)) ==> (((aff_gt (x INSERT EMPTY)) ((pr2 e) INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))) = (((aff_gt (x INSERT EMPTY)) ((pr2 e) INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c= c==> c? / c= cpr2 f0 b0 cSUBSET * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT cpr2 f0 * * part cINSERT cpr3 f0 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f1 f2 f3 f4 cSUBSET * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT cpr2 f0 * * part cINSERT cpr3 f0 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f1 f2 f3 f4
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (x = v)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f), (w IN (((set_of_edge v) V) E)) |- (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f4 f3 c==> c= cpr3 f4 f5 c==> c= csigma_fan f2 f0 f1 f3 f5 f6 c==> c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f5 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f7 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY f1 c==> cIN f4 f7 c==> cIN f5 * * * part cset_of_edge f3 f0 f1 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f7
+ (v IN V) |- ((v IN V) = T)
T c==> cIN f0 f1 c= cIN f0 f1 cT
+ (FAN (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), ((u INSERT (v INSERT EMPTY)) IN E), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E) |- ((!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))) ==> (((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w)))))
T c==> cFAN c, f0 c, f1 f2 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> c= csigma_fan f0 f1 f2 f4 f5 f6 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f2 c==> ! ! c==> cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b0 b1 csigma_fan f0 f1 f2 b0 b1 creal_lt cazim f0 b0 b1 csigma_fan f0 f1 f2 b0 b1 cpi c==> cSUBSET * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f1 f2 f4 f5 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f1 f2 f4 f5
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (x = v)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))))), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f), (w IN (((set_of_edge v) V) E)) |- (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f4 f3 c==> c= cpr3 f4 f5 c==> c= csigma_fan f2 f0 f1 f3 f5 f6 c==> c/\ c~ c= f2 f3 c/\ c~ c= f2 f5 c/\ c~ c= f3 f5 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f5 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f7 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY f1 c==> cIN f4 f7 c==> cIN f5 * * * part cset_of_edge f3 f0 f1 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f7
+ |- ((\u. (((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)))) w)
T * / c==> c/\ cFAN c, f0 c, f1 f2 cIN b0 * * * part cset_of_edge f3 f1 f2 cIN csigma_fan f0 f1 f2 f3 b0 * * * part cset_of_edge f3 f1 f2 f4
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f), ((\u. ((((((sigma_fan x) V) E) v) w) = u)) u) |- (((\u. ((((((sigma_fan x) V) E) v) w) = u)) u) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> cIN f6 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f6 c==> * / c= csigma_fan f2 f0 f1 f4 f5 b0 f7 c/\ * / c= csigma_fan f2 f0 f1 f4 f5 b0 f7 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f6
- |- (((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F) = ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))))))
T c= c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 cF c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0
+ |- ((\x. (!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) u) w))))))))) x)
T * / ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY b2 c/\ c= csigma_fan b0 b1 b2 b4 b5 b3 c/\ ! c==> cIN b6 b1 c> cCARD * * * part cset_of_edge b6 b1 b2 cNUMERAL cBIT1 c_0 cfan80 c, b0 c, b1 b2 cSUBSET * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * * * * part cdart_leads_into b0 b1 b2 b4 b5 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (x = v)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f), (w IN (((set_of_edge v) V) E)) |- (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f4 f3 c==> c= cpr3 f4 f5 c==> c= csigma_fan f2 f0 f1 f3 f5 f6 c==> c/\ c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f7 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY f1 c==> cIN f4 f7 c==> cIN f5 * * * part cset_of_edge f3 f0 f1 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f7
+ |- ((\u'. (!w. ((~ (coplanar (x INSERT (u INSERT (u' INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (u' INSERT (w INSERT EMPTY)))) = (((aff_ge (x INSERT EMPTY)) (u INSERT (u' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (u' INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (u INSERT (u' INSERT (w INSERT EMPTY))))))))))) v)
T * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
+ |- ((\u'. (!w. (((FAN (x , (V , E))) /\ (((u INSERT (u' INSERT EMPTY)) IN E) /\ (((u' INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u') w) u)) /\ ((real_lt ((((azim x) u') w) u)) pi))))) ==> (~ (coplanar (x INSERT (u INSERT (u' INSERT (w INSERT EMPTY))))))))) v)
T * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b0 b1 f3 creal_lt cazim f0 b0 b1 f3 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f4
- |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
- (x = A), (((~ (x = A)) /\ (~ (x = B))) /\ ((x = B) \/ (x = A))) |- (~ (A = B))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c~ c= f1 f2
+ (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), ((u INSERT (v INSERT EMPTY)) IN E), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), ((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) |- ((((((dartset_leads_into_fan x) V) E) f) = (((((dart_leads_into x) V) E) v) w)) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> cFAN c, f0 c, f1 f2 c==> cfan80 c, f0 c, f1 f2 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> c= csigma_fan f0 f1 f2 f4 f5 f6 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f2 c==> cSUBSET * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f1 f2 f4 f5 c==> c= * * * * part cdartset_leads_into_fan f0 f1 f2 f7 * * * * * part cdart_leads_into f0 f1 f2 f4 f5 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f0 f1 f2 f7
+ ((\w. ((pr3 e) = w)) w) |- ((pr3 e) = w)
T c==> * / c= cpr3 f0 b0 f1 c= cpr3 f0 f1
- (~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) |- F
T c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
+ |- ((\y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((f IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (y IN f)))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E))) e)
T * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 cIN b0 f3 cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr3 b0 part cEMPTY f2 f4
+ (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))) |- ((\u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi)))) w)
T c==> ! ! c==> cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 creal_lt cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 cpi * / c==> cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 f3 b0 csigma_fan f1 f2 f0 f3 b0 creal_lt cazim f1 f3 b0 csigma_fan f1 f2 f0 f3 b0 cpi f4
+ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) |- (!x'. (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x')) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x')) /\ (((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x')) /\ (((~ (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x')) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x')) /\ ((~ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x'))))))
T c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 ! c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0
+ |- (((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))))) = ((!x'. ((x' IN (((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))))))) ==> (x' IN (closure (((((dart_leads_into x) V) E) v) w))))) ==> ((!x'. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))) ==> (!x'. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> (x' IN (closure (((((dart_leads_into x) V) E) v) w))))))))
T c= c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> cIN b0 * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 c==> ! c==> cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3
+ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) |- ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) /\ ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))
T c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c/\ ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (FAN (x , (V , E))), (fan80 (x , (V , E))), (((((dartset_leads_into_fan x) V) E) f) = (((((dart_leads_into x) V) E) v) w)), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), ((u INSERT (v INSERT EMPTY)) IN E), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), ((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) |- (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))
T c==> cFAN c, f0 c, f1 f2 c==> cfan80 c, f0 c, f1 f2 c==> c= * * * * part cdartset_leads_into_fan f0 f1 f2 f3 * * * * * part cdart_leads_into f0 f1 f2 f4 f5 c==> c= cpr2 f6 f4 c==> c= cpr3 f6 f5 c==> c= csigma_fan f0 f1 f2 f4 f5 f7 c==> cIN * * part cINSERT f7 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT cpr2 f6 * * part cINSERT cpr3 f6 part cEMPTY f2 c==> cSUBSET * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f7 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f1 f2 f4 f5 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f0 f1 f2 f3
+ (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))) |- (((((v INSERT (w INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) w) (((((sigma_fan x) V) E) v) w))) /\ ((real_lt ((((azim x) v) w) (((((sigma_fan x) V) E) v) w))) pi))) ==> (((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))))) = (((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w)))))
T c==> ! ! c==> cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 creal_lt cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 cpi c= c==> c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 f3 f4 csigma_fan f1 f2 f0 f3 f4 creal_lt cazim f1 f3 f4 csigma_fan f1 f2 f0 f3 f4 cpi c==> cSUBSET * part cclosure * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * part cclosure * * * * * part cdart_leads_into f1 f2 f0 f3 f4 cSUBSET * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f1 f2 f0 f3 f4 c==> cSUBSET * part cclosure * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * part cclosure * * * * * part cdart_leads_into f1 f2 f0 f3 f4 cSUBSET * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f1 f2 f0 f3 f4
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- (((!t. ((((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET t) ==> ((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure t)))) ==> ((\t. ((((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET t) ==> ((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure t)))) (((((dart_leads_into x) V) E) v) w))) = ((\t. ((((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET t) ==> ((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure t)))) (((((dart_leads_into x) V) E) v) w)))
T c= c==> ! c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cSUBSET * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure b0 * / c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cSUBSET * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure b0 * * * * * part cdart_leads_into f0 f4 f5 f2 f3 * / c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cSUBSET * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure b0 * * * * * part cdart_leads_into f0 f4 f5 f2 f3
- |- (((!v. (!E. (!V. (!x. (!u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F)))))) ==> ((\v. (!E. (!V. (!x. (!u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F)))))) v)) = ((\v. (!E. (!V. (!x. (!u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F)))))) v))
T c= c==> ! ! ! ! ! c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b0 part cEMPTY b5 c\/ caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 c\/ caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT f0 * * part cINSERT b4 part cEMPTY b5 caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 cclosure * * * * * part cdart_leads_into b3 b2 b1 b0 f0 b5 c==> ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 cclosure * * * * * part cdart_leads_into b3 b2 b1 b0 f0 b5 cF * / ! ! ! ! c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b0 part cEMPTY b5 c\/ caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 c\/ caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT f0 * * part cINSERT b4 part cEMPTY b5 caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 cclosure * * * * * part cdart_leads_into b3 b2 b1 b0 f0 b5 c==> ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 cclosure * * * * * part cdart_leads_into b3 b2 b1 b0 f0 b5 cF f1 * / ! ! ! ! c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b0 part cEMPTY b5 c\/ caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 c\/ caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT f0 * * part cINSERT b4 part cEMPTY b5 caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 cclosure * * * * * part cdart_leads_into b3 b2 b1 b0 f0 b5 c==> ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 cclosure * * * * * part cdart_leads_into b3 b2 b1 b0 f0 b5 cF f1
- ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F) |- (((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F) /\ ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F))
T c==> c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 cF c/\ c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 cF c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 cF
- (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))), (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') |- ((~ ((closure (((((dart_leads_into x) V) E) v) w)) x')) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))
T c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6 c==> c~ cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- ((((\w. ((pr3 e) = w)) w) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))) = T)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> cIN f5 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f5 c= c==> * / c= cpr3 f3 b0 f6 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT cpr3 f3 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f5 cT
+ ((pr3 e) = w) |- ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))) = (((aff_gt (x INSERT EMPTY)) (v INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> c= cpr3 f0 f1 c= cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f4 f5 f6 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT cpr3 f0 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f4 f5 f6
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- (((!y. ((y IN f) ==> (((((dartset_leads_into_fan x) V) E) f) = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y))))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))) = ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (f IN (face_set (hypermap1_of_fanx (x , (V , E)))))))) ==> (!y. ((y IN f) ==> (((((dartset_leads_into_fan x) V) E) f) = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y)))))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c= c==> ! c==> cIN b0 f3 c= * * * * part cdartset_leads_into_fan f2 f0 f1 f3 * * * * * part cdart_leads_into f2 f0 f1 cpr2 b0 cpr3 b0 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f3 c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f2 c, f0 f1 cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 ! c==> cIN b0 f3 c= * * * * part cdartset_leads_into_fan f2 f0 f1 f3 * * * * * part cdart_leads_into f2 f0 f1 cpr2 b0 cpr3 b0 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f3
- (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E) |- ((((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E) = T)
T c==> cIN * * part cINSERT cpr2 f0 * * part cINSERT cpr3 f0 part cEMPTY f1 c= cIN * * part cINSERT cpr2 f0 * * part cINSERT cpr3 f0 part cEMPTY f1 cT
+ ((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) |- (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w)))) = (((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w)))))
T c==> c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 c==> cSUBSET * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3
+ (FAN (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) w) u)) /\ ((real_lt ((((azim x) v) w) u)) pi)), ((u INSERT (v INSERT EMPTY)) IN E), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E) |- ((((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) w) u)) /\ ((real_lt ((((azim x) v) w) u)) pi)) /\ (((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w)))))
T c==> cFAN c, f0 c, f1 f2 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f4 f5 f6 creal_lt cazim f0 f4 f5 f6 cpi c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f2 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f4 f5 f6 creal_lt cazim f0 f4 f5 f6 cpi c==> cSUBSET * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f1 f2 f4 f5 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f1 f2 f4 f5
+ |- (((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (f IN (face_set (hypermap1_of_fanx (x , (V , E)))))))) ==> (!y. ((y IN f) ==> (((((dartset_leads_into_fan x) V) E) f) = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y)))))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))) = (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 ! c==> cIN b0 f3 c= * * * * part cdartset_leads_into_fan f0 f1 f2 f3 * * * * * part cdart_leads_into f0 f1 f2 cpr2 b0 cpr3 b0 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f0 f1 f2 f3 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f0 f1 f2 f3
+ |- (((!s. (!t. (((aff_gt s) t) SUBSET ((aff_ge s) t)))) ==> ((\s. (!t. (((aff_gt s) t) SUBSET ((aff_ge s) t)))) (x INSERT EMPTY))) = ((\s. (!t. (((aff_gt s) t) SUBSET ((aff_ge s) t)))) (x INSERT EMPTY)))
T c= c==> ! ! cSUBSET * * part caff_gt b0 b1 * * part caff_ge b0 b1 * / ! cSUBSET * * part caff_gt b0 b1 * * part caff_ge b0 b1 * * part cINSERT f0 part cEMPTY * / ! cSUBSET * * part caff_gt b0 b1 * * part caff_ge b0 b1 * * part cINSERT f0 part cEMPTY
- ((\v. ((pr2 e) = v)) v) |- ((((pr2 e) = v) ==> (?v. ((pr2 e) = v))) = (?v. ((pr2 e) = v)))
T c==> * / c= cpr2 f0 b0 f1 c= c==> c= cpr2 f0 f1 c? / c= cpr2 f0 b0 c? / c= cpr2 f0 b0
+ (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))) |- (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))
T c==> ! ! c==> cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 creal_lt cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 cpi ! c==> cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 f3 b0 csigma_fan f1 f2 f0 f3 b0 creal_lt cazim f1 f3 b0 csigma_fan f1 f2 f0 f3 b0 cpi
- |- ((!w. (!v. (!E. (!V. (!x. (!u. ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))))))))))) = (!w. (!v. (!E. (!V. (!x. (!u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F))))))))
T c= ! ! ! ! ! ! c==> ! c==> c\/ caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b5 * * part cINSERT b1 part cEMPTY b6 c\/ caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 c\/ caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b0 * * part cINSERT b5 part cEMPTY b6 caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b5 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 cclosure * * * * * part cdart_leads_into b4 b3 b2 b1 b0 b6 c==> ! c==> caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 ! c==> caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 cclosure * * * * * part cdart_leads_into b4 b3 b2 b1 b0 b6 ! ! ! ! ! ! c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b5 * * part cINSERT b1 part cEMPTY b6 c\/ caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 c\/ caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b0 * * part cINSERT b5 part cEMPTY b6 caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b5 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 cclosure * * * * * part cdart_leads_into b4 b3 b2 b1 b0 b6 c==> ! c==> caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 ! c==> caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 cclosure * * * * * part cdart_leads_into b4 b3 b2 b1 b0 b6 cF
+ (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), ((u INSERT (v INSERT EMPTY)) IN E), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), ((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) |- (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w)))
T c==> cFAN c, f0 c, f1 f2 c==> cfan80 c, f0 c, f1 f2 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> c= csigma_fan f0 f1 f2 f4 f5 f6 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f2 c==> cSUBSET * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f1 f2 f4 f5 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f1 f2 f4 f5
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) |- ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cIN f2 f0 c> cCARD * * * part cset_of_edge f2 f0 f1 cNUMERAL cBIT1 c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), ((u INSERT (v INSERT EMPTY)) IN E), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E) |- (((((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) v) w)) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))) = ((((FAN (x , (V , E))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ (((v INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) v) w) = u) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> c= csigma_fan f2 f0 f1 f4 f5 f6 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c= c==> cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * * * * part cdart_leads_into f2 f0 f1 f4 f5 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f7 c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f1 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 f4 f5 f6 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 cfan80 c, f2 c, f0 f1 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * * * * part cdart_leads_into f2 f0 f1 f4 f5 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f7
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((f IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (e IN f)) |- (((aff_gt (x INSERT EMPTY)) ((pr2 e) INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 cIN f4 f3 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f3
+ ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E) |- (((((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) w) u)) /\ ((real_lt ((((azim x) v) w) u)) pi)) ==> (((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))))) = ((((v INSERT (w INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) w) (((((sigma_fan x) V) E) v) w))) /\ ((real_lt ((((azim x) v) w) (((((sigma_fan x) V) E) v) w))) pi))) ==> (((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))))))
T c==> c= cpr2 f0 f1 c==> c= cpr3 f0 f2 c==> c= csigma_fan f3 f4 f5 f1 f2 f6 c==> cIN * * part cINSERT cpr2 f0 * * part cINSERT cpr3 f0 part cEMPTY f5 c= c==> c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f3 f1 f2 f6 creal_lt cazim f3 f1 f2 f6 cpi c==> cSUBSET * part cclosure * * part caff_gt * * part cINSERT f3 part cEMPTY * * part cINSERT f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cclosure * * * * * part cdart_leads_into f3 f4 f5 f1 f2 cSUBSET * * part caff_gt * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * part cclosure * * * * * part cdart_leads_into f3 f4 f5 f1 f2 c==> c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f3 f1 f2 csigma_fan f3 f4 f5 f1 f2 creal_lt cazim f3 f1 f2 csigma_fan f3 f4 f5 f1 f2 cpi c==> cSUBSET * part cclosure * * part caff_gt * * part cINSERT f3 part cEMPTY * * part cINSERT f6 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cclosure * * * * * part cdart_leads_into f3 f4 f5 f1 f2 cSUBSET * * part caff_gt * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * part cclosure * * * * * part cdart_leads_into f3 f4 f5 f1 f2
- |- ((\V. (!x. (!u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F)))) V)
T * / ! ! c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT f0 part cEMPTY b3 c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f1 * * part cINSERT b2 part cEMPTY b3 caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 cclosure * * * * * part cdart_leads_into b1 b0 f2 f0 f1 b3 c==> ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 cclosure * * * * * part cdart_leads_into b1 b0 f2 f0 f1 b3 cF f3
- (~ (v = w)) |- (((~ (w = v)) ==> ((w = v) = F)) = ((w = v) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (x = v)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f), (v IN V), (w IN (((set_of_edge v) V) E)) |- ((((FAN (x , (V , E))) /\ (w IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) w) IN (((set_of_edge v) V) E))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f4 f3 c==> c= cpr3 f4 f5 c==> c= csigma_fan f2 f0 f1 f3 f5 f6 c==> cIN f7 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY f1 c==> cIN f4 f7 c==> cIN f3 f0 c==> cIN f5 * * * part cset_of_edge f3 f0 f1 c==> c==> c/\ cFAN c, f2 c, f0 f1 cIN f5 * * * part cset_of_edge f3 f0 f1 cIN csigma_fan f2 f0 f1 f3 f5 * * * part cset_of_edge f3 f0 f1 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f7
- (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))), (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') |- ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))
T c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ |- (((!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))) ==> ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))) u)) = ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))) u))
T c= c==> ! ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1 * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
+ |- (((!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge v) V) E))) /\ (((v INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))) ==> ((\v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge v) V) E))) /\ (((v INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))) v)) = ((\v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge v) V) E))) /\ (((v INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))) v))
T c= c==> ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4 * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4
+ (fan80 (x , (V , E))) |- ((fan80 (x , (V , E))) = T)
T c==> cfan80 c, f0 c, f1 f2 c= cfan80 c, f0 c, f1 f2 cT
+ |- (!t. ((((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET t) ==> ((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure t))))
T c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cSUBSET * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure f4
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), ((w IN (((set_of_edge v) V) E)) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f), (w IN (((set_of_edge v) V) E)) |- (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFINITE * * * part cset_of_edge f2 f0 f1 c==> cFAN c, f3 c, f0 f1 c==> cfan80 c, f3 c, f0 f1 c==> c= cpr2 f4 f2 c==> c= cpr3 f4 f5 c==> c= csigma_fan f3 f0 f1 f2 f5 f6 c==> c/\ cIN f5 * * * part cset_of_edge f2 f0 f1 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c/\ c~ c= f3 f2 c/\ c~ c= f3 f5 c/\ c~ c= f2 f5 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f5 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c/\ cIN f2 f0 c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cIN f7 * part cface_set chypermap1_of_fanx c, f3 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY f1 c==> cIN f4 f7 c==> cIN f5 * * * part cset_of_edge f2 f0 f1 cSUBSET * * part caff_gt * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f3 f0 f1 f7
+ |- (((!x. (!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))))))))) ==> ((\x. (!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))))))))) x)) = ((\x. (!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))))))))) x))
T c= c==> ! ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY b2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim b0 b4 b5 b3 creal_lt cazim b0 b4 b5 b3 cpi c~ ccoplanar * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * / ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY b2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim b0 b4 b5 b3 creal_lt cazim b0 b4 b5 b3 cpi c~ ccoplanar * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f0 * / ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY b2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim b0 b4 b5 b3 creal_lt cazim b0 b4 b5 b3 cpi c~ ccoplanar * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f0
+ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') |- (((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')) = ((closure (((((dart_leads_into x) V) E) v) w)) x'))
T c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cclosure * * * * * part cdart_leads_into f0 f4 f5 f1 f2 f3 cclosure * * * * * part cdart_leads_into f0 f4 f5 f1 f2 f3
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- (((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge v) V) E))) /\ (((v INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> c= csigma_fan f2 f0 f1 f4 f5 f6 c==> cIN f7 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f7 c==> c==> cFAN c, f2 c, f0 f1 c/\ cFINITE * * * part cset_of_edge f4 f0 f1 c/\ c= cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1 cIN f5 * * * part cset_of_edge f4 f0 f1 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1 c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f2 f4 c/\ c~ c= f2 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f7
- |- ((!x'. ((P x') \/ Q)) = ((!x'. (P x')) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ |- ((\v. (!u. (((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E))))) v)
T * / ! c==> c/\ cFAN c, f0 c, f1 f2 cIN b1 * * * part cset_of_edge b0 f1 f2 cIN csigma_fan f0 f1 f2 b0 b1 * * * part cset_of_edge b0 f1 f2 f3
- |- (!v. (((\v. ((pr2 e) = v)) v) ==> (?v. ((pr2 e) = v))))
T c==> * / c= cpr2 f0 b0 f1 c? / c= cpr2 f0 b0
+ |- (((!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) u) w)))))))) ==> ((\V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) u) w)))))))) V)) = ((\V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) u) w)))))))) V))
T c= c==> ! ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ c= csigma_fan f0 b0 b1 b3 b4 b2 c/\ ! c==> cIN b5 b0 c> cCARD * * * part cset_of_edge b5 b0 b1 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, b0 b1 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * * * * part cdart_leads_into f0 b0 b1 b3 b4 * / ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ c= csigma_fan f0 b0 b1 b3 b4 b2 c/\ ! c==> cIN b5 b0 c> cCARD * * * part cset_of_edge b5 b0 b1 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, b0 b1 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * * * * part cdart_leads_into f0 b0 b1 b3 b4 f1 * / ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ c= csigma_fan f0 b0 b1 b3 b4 b2 c/\ ! c==> cIN b5 b0 c> cCARD * * * part cset_of_edge b5 b0 b1 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, b0 b1 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * * * * part cdart_leads_into f0 b0 b1 b3 b4 f1
+ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) |- ((\x'. ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) \/ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) _6548079)
T c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * / c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), (((v INSERT (u INSERT EMPTY)) IN E) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> c= csigma_fan f2 f0 f1 f4 f5 f6 c==> c/\ cIN * * part cINSERT f4 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f6 part cEMPTY f1 c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c/\ c~ c= f2 f6 c/\ c~ c= f4 f6 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f6 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f6 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c/\ c~ cIN f6 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> cIN f7 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f7 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f7
- |- (((~ ((closure (((((dart_leads_into x) V) E) v) w)) x')) ==> F) = ((closure (((((dart_leads_into x) V) E) v) w)) x'))
T c= c==> c~ cclosure * * * * * part cdart_leads_into f0 f1 f2 f3 f4 f5 cF cclosure * * * * * part cdart_leads_into f0 f1 f2 f3 f4 f5
- |- ((((\v. ((pr2 e) = v)) v) ==> (?v. ((pr2 e) = v))) = T)
T c= c==> * / c= cpr2 f0 b0 f1 c? / c= cpr2 f0 b0 cT
- |- (((!x. (((\v. ((pr2 e) = v)) x) ==> (?v. ((pr2 e) = v)))) ==> ((?v. ((pr2 e) = v)) ==> (?v. ((pr2 e) = v)))) = ((?v. ((pr2 e) = v)) ==> (?v. ((pr2 e) = v))))
T c= c==> ! c==> * / c= cpr2 f0 b1 b0 c? / c= cpr2 f0 b1 c==> c? / c= cpr2 f0 b0 c? / c= cpr2 f0 b0 c==> c? / c= cpr2 f0 b0 c? / c= cpr2 f0 b0
+ |- (!t. (((aff_gt (x INSERT EMPTY)) t) SUBSET ((aff_ge (x INSERT EMPTY)) t)))
T cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY f1 * * part caff_ge * * part cINSERT f0 part cEMPTY f1
- |- (((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F) ==> ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F))
T c==> c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 cF c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 cF
+ |- ((\w. (((FAN (x , (V , E))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ (((v INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) w) u)) /\ ((real_lt ((((azim x) v) w) u)) pi))))) ==> (~ (coplanar (x INSERT (u INSERT (v INSERT (w INSERT EMPTY)))))))) w)
T * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f4 b0 f3 creal_lt cazim f0 f4 b0 f3 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f5
+ |- (((!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))))))) ==> ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))))))) u)) = ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))))))) u))
T c= c==> ! ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1 * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
+ |- (((!u'. (!w. ((~ (coplanar (x INSERT (u INSERT (u' INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (u' INSERT (w INSERT EMPTY)))) = (((aff_ge (x INSERT EMPTY)) (u INSERT (u' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (u' INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (u INSERT (u' INSERT (w INSERT EMPTY))))))))))) ==> ((\u'. (!w. ((~ (coplanar (x INSERT (u INSERT (u' INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (u' INSERT (w INSERT EMPTY)))) = (((aff_ge (x INSERT EMPTY)) (u INSERT (u' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (u' INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (u INSERT (u' INSERT (w INSERT EMPTY))))))))))) v)) = ((\u'. (!w. ((~ (coplanar (x INSERT (u INSERT (u' INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (u' INSERT (w INSERT EMPTY)))) = (((aff_ge (x INSERT EMPTY)) (u INSERT (u' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (u' INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (u INSERT (u' INSERT (w INSERT EMPTY))))))))))) v))
T c= c==> ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ |- ((\ds. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (ds IN (face_set (hypermap1_of_fanx (x , (V , E)))))))) ==> (!y. ((y IN ds) ==> (((((dartset_leads_into_fan x) V) E) ds) = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y))))))) f)
T * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 ! c==> cIN b1 b0 c= * * * * part cdartset_leads_into_fan f0 f1 f2 b0 * * * * * part cdart_leads_into f0 f1 f2 cpr2 b1 cpr3 b1 f3
+ |- ((\E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))))))) E)
T * / ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b2 b3 b1 creal_lt cazim f0 b2 b3 b1 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2
- |- ((!x''. (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x')) /\ ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) /\ ((~ (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x')) /\ (~ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x'))))) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x''))) = (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x')) /\ ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) /\ ((~ (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x')) /\ (~ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x'))))) \/ (!x'. ((closure (((((dart_leads_into x) V) E) v) w)) x'))))
T c= ! c\/ c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f4 part cEMPTY f3 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f3 c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY f3 cclosure * * * * * part cdart_leads_into f0 f5 f6 f2 f4 b0 c\/ c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f4 part cEMPTY f3 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f3 c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY f3 ! cclosure * * * * * part cdart_leads_into f0 f5 f6 f2 f4 b0
+ |- ((\u'. (!w. (((FAN (x , (V , E))) /\ (((u INSERT (u' INSERT EMPTY)) IN E) /\ (((u' INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u') w) = u) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (fan80 (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (u INSERT (u' INSERT (w INSERT EMPTY)))) SUBSET (((((dart_leads_into x) V) E) u') w))))) v)
T * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b0 b1 f3 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 cfan80 c, f0 c, f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * * * * part cdart_leads_into f0 f1 f2 b0 b1 f4
+ ((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) |- (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w)))
T c==> cSUBSET * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3
+ |- (((!E. (!ds. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (y IN ds)))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E))))) ==> ((\E. (!ds. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (y IN ds)))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E))))) E)) = ((\E. (!ds. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (y IN ds)))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E))))) E))
T c= c==> ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 b0 cNUMERAL cBIT1 c_0 c/\ cIN b1 * part cface_set chypermap1_of_fanx c, f0 c, f1 b0 cIN b2 b1 cIN * * part cINSERT cpr2 b2 * * part cINSERT cpr3 b2 part cEMPTY b0 * / ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 b0 cNUMERAL cBIT1 c_0 c/\ cIN b1 * part cface_set chypermap1_of_fanx c, f0 c, f1 b0 cIN b2 b1 cIN * * part cINSERT cpr2 b2 * * part cINSERT cpr3 b2 part cEMPTY b0 f2 * / ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 b0 cNUMERAL cBIT1 c_0 c/\ cIN b1 * part cface_set chypermap1_of_fanx c, f0 c, f1 b0 cIN b2 b1 cIN * * part cINSERT cpr2 b2 * * part cINSERT cpr3 b2 part cEMPTY b0 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (e IN f) |- (((((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E) ==> (((aff_gt (x INSERT EMPTY)) ((pr2 e) INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))) = ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((f IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (e IN f)))) ==> (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E)) ==> (((aff_gt (x INSERT EMPTY)) ((pr2 e) INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN f4 f3 c= c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY f1 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f3 c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 cIN f4 f3 cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY f1 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f3
+ |- (((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((f IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (e IN f)))) ==> (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E)) ==> (((aff_gt (x INSERT EMPTY)) ((pr2 e) INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))) = (((aff_gt (x INSERT EMPTY)) ((pr2 e) INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 cIN f4 f3 cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f0 f1 f2 f3 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f0 f1 f2 f3
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- (((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) = (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A)))))
T c= c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- (~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) |- ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) /\ F)
T c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c/\ c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (x = v)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f), (v IN V), (w IN (((set_of_edge v) V) E)) |- (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f4 f3 c==> c= cpr3 f4 f5 c==> c= csigma_fan f2 f0 f1 f3 f5 f6 c==> cIN f7 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY f1 c==> cIN f4 f7 c==> cIN f3 f0 c==> cIN f5 * * * part cset_of_edge f3 f0 f1 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f7
+ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) |- ((\x'. (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x')) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x')) /\ (((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x')) /\ (((~ (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x')) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x')) /\ ((~ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) _6548078)
T c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 * / c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 f6
+ ((pr2 e) = v), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E) |- ((v INSERT ((pr3 e) INSERT EMPTY)) IN E)
T c==> c= cpr2 f0 f1 c==> cIN * * part cINSERT cpr2 f0 * * part cINSERT cpr3 f0 part cEMPTY f2 cIN * * part cINSERT f1 * * part cINSERT cpr3 f0 part cEMPTY f2
- |- ((!B. (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) = T)
T c= ! ! c= c\/ c= b1 f0 c= b1 b0 c\/ c= b1 b0 c= b1 f0 cT
+ ((\w. ((pr3 e) = w)) w) |- ((((pr3 e) = w) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))) = (((aff_gt (x INSERT EMPTY)) (v INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> * / c= cpr3 f0 b0 f1 c= c==> c= cpr3 f0 f1 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT cpr3 f0 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f4 f5 f6 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT cpr3 f0 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f4 f5 f6
- ((pr2 e) = v) |- (((pr2 e) = v) /\ (?v. ((pr2 e) = v)))
T c==> c= cpr2 f0 f1 c/\ c= cpr2 f0 f1 c? / c= cpr2 f0 b0
+ (((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) = (((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))))))) |- ((((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w)))) = ((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w)))))
T c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> cSUBSET * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), ((FINITE (((set_of_edge v) V) E)) /\ ((w IN (((set_of_edge v) V) E)) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFINITE * * * part cset_of_edge f2 f0 f1 c==> cFAN c, f3 c, f0 f1 c==> cfan80 c, f3 c, f0 f1 c==> c= cpr2 f4 f2 c==> c= cpr3 f4 f5 c==> c= csigma_fan f3 f0 f1 f2 f5 f6 c==> c/\ cFINITE * * * part cset_of_edge f2 f0 f1 c/\ cIN f5 * * * part cset_of_edge f2 f0 f1 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c/\ c~ c= f3 f2 c/\ c~ c= f3 f5 c/\ c~ c= f2 f5 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f5 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c/\ cIN f2 f0 c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cIN f7 * part cface_set chypermap1_of_fanx c, f3 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY f1 c==> cIN f4 f7 cSUBSET * * part caff_gt * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f3 f0 f1 f7
+ ((\v. ((pr2 e) = v)) v) |- ((pr2 e) = v)
T c==> * / c= cpr2 f0 b0 f1 c= cpr2 f0 f1
- ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) |- (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = T)
T c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ |- ((\ds. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (y IN ds)))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E)))) f)
T * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 c/\ cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 cIN b1 b0 cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr3 b1 part cEMPTY f2 f3
- (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') |- ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))
T c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ (((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) = (((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))))))) |- ((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) = (((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))))))) /\ ((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w)))))
T c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3
- |- ((((\w. ((pr3 e) = w)) w) ==> (?w. ((pr3 e) = w))) = T)
T c= c==> * / c= cpr3 f0 b0 f1 c? / c= cpr3 f0 b0 cT
- (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') |- ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))
T c==> c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c/\ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- (!v. (((\v. ((pr2 e) = v)) v) ==> (((aff_gt (x INSERT EMPTY)) ((pr2 e) INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY f1 c==> cIN f4 f3 ! c==> * / c= cpr2 f4 b1 b0 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f3
+ |- (((!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) ==> ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V)) = ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V))
T c= c==> ! ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1 * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1
+ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) |- (((!x'. (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x')) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x')) /\ (((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x')) /\ (((~ (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x')) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x')) /\ ((~ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> ((\x'. (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x')) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x')) /\ (((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x')) /\ (((~ (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x')) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x')) /\ ((~ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) _6548078)) = ((\x'. (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x')) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x')) /\ (((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x')) /\ (((~ (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x')) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x')) /\ ((~ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) _6548078))
T c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c= c==> ! c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 * / c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 f6 * / c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 f6
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (v INSERT EMPTY)) IN E), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- (((u INSERT (v INSERT EMPTY)) IN E) /\ (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> c= csigma_fan f2 f0 f1 f4 f5 f6 c==> cIN f7 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f7 c/\ cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f1 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f7
+ (FAN (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) w) u)), ((real_lt ((((azim x) v) w) u)) pi), ((u INSERT (v INSERT EMPTY)) IN E), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E) |- (((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))))
T c==> cFAN c, f0 c, f1 f2 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f4 f5 f6 c==> creal_lt cazim f0 f4 f5 f6 cpi c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f2 c==> cSUBSET * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f1 f2 f4 f5 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f1 f2 f4 f5
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (x = v)), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f), (w IN (((set_of_edge v) V) E)) |- (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f4 f3 c==> c= cpr3 f4 f5 c==> c= csigma_fan f2 f0 f1 f3 f5 f6 c==> c/\ c~ c= f2 f5 c/\ c~ c= f3 f5 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f5 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f7 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY f1 c==> cIN f4 f7 c==> cIN f5 * * * part cset_of_edge f3 f0 f1 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f7
- (w = v) |- (v = w)
T c==> c= f0 f1 c= f1 f0
- (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) |- ((~ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) _6548078)) \/ ((closure (((((dart_leads_into x) V) E) v) w)) _6548078))
T c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6
+ (FAN (x , (V , E))), ((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((f IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (e IN f))))) |- (((aff_gt (x INSERT EMPTY)) ((pr2 e) INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 cIN f4 f3 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f0 f1 f2 f3
+ |- (?v. ((pr2 e) = v))
T c? / c= cpr2 f0 b0
- (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) |- (((~ (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) _6548078)) \/ ((closure (((((dart_leads_into x) V) E) v) w)) _6548078)) /\ ((~ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) _6548078)) \/ ((closure (((((dart_leads_into x) V) E) v) w)) _6548078)))
T c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f6 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6 c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6
+ |- ((t = T) = t)
T c= c= f0 cT f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- (((aff_gt (x INSERT EMPTY)) ((pr2 e) INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY f1 c==> cIN f4 f3 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f3
+ |- (((!V. (!E. (!ds. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (y IN ds)))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E)))))) ==> ((\V. (!E. (!ds. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (y IN ds)))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E)))))) V)) = ((\V. (!E. (!ds. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (y IN ds)))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E)))))) V))
T c= c==> ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b4 b0 c> cCARD * * * part cset_of_edge b4 b0 b1 cNUMERAL cBIT1 c_0 c/\ cIN b2 * part cface_set chypermap1_of_fanx c, f0 c, b0 b1 cIN b3 b2 cIN * * part cINSERT cpr2 b3 * * part cINSERT cpr3 b3 part cEMPTY b1 * / ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b4 b0 c> cCARD * * * part cset_of_edge b4 b0 b1 cNUMERAL cBIT1 c_0 c/\ cIN b2 * part cface_set chypermap1_of_fanx c, f0 c, b0 b1 cIN b3 b2 cIN * * part cINSERT cpr2 b3 * * part cINSERT cpr3 b3 part cEMPTY b1 f1 * / ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b4 b0 c> cCARD * * * part cset_of_edge b4 b0 b1 cNUMERAL cBIT1 c_0 c/\ cIN b2 * part cface_set chypermap1_of_fanx c, f0 c, b0 b1 cIN b3 b2 cIN * * part cINSERT cpr2 b3 * * part cINSERT cpr3 b3 part cEMPTY b1 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FINITE (((set_of_edge v) V) E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))))), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f), (w IN (((set_of_edge v) V) E)) |- (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFINITE * * * part cset_of_edge f2 f0 f1 c==> cFAN c, f3 c, f0 f1 c==> cfan80 c, f3 c, f0 f1 c==> c= cpr2 f4 f2 c==> c= cpr3 f4 f5 c==> c= csigma_fan f3 f0 f1 f2 f5 f6 c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c/\ c~ c= f3 f2 c/\ c~ c= f3 f5 c/\ c~ c= f2 f5 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f5 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c/\ cIN f2 f0 c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cIN f7 * part cface_set chypermap1_of_fanx c, f3 c, f0 f1 c==> cIN * * part cINSERT cpr2 f4 * * part cINSERT cpr3 f4 part cEMPTY f1 c==> cIN f4 f7 c==> cIN f5 * * * part cset_of_edge f2 f0 f1 cSUBSET * * part caff_gt * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f5 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f3 f0 f1 f7
+ |- (((!s. (!t. ((s SUBSET t) ==> ((closure s) SUBSET (closure t))))) ==> ((\s. (!t. ((s SUBSET t) ==> ((closure s) SUBSET (closure t))))) ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))))) = ((\s. (!t. ((s SUBSET t) ==> ((closure s) SUBSET (closure t))))) ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))))
T c= c==> ! ! c==> cSUBSET b0 b1 cSUBSET * part cclosure b0 * part cclosure b1 * / ! c==> cSUBSET b0 b1 cSUBSET * part cclosure b0 * part cclosure b1 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / ! c==> cSUBSET b0 b1 cSUBSET * part cclosure b0 * part cclosure b1 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ ((\v. ((pr2 e) = v)) v) |- ((((pr2 e) = v) ==> (((aff_gt (x INSERT EMPTY)) ((pr2 e) INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))) = (((aff_gt (x INSERT EMPTY)) ((pr2 e) INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> * / c= cpr2 f0 b0 f1 c= c==> c= cpr2 f0 f1 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f0 * * part cINSERT cpr3 f0 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f3 f4 f5 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f0 * * part cINSERT cpr3 f0 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f3 f4 f5
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- (((pr3 e) = w) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> cIN f6 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f6 c/\ c= cpr3 f3 f5 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT cpr3 f3 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f6
- |- (((!x. (((\w. ((pr3 e) = w)) x) ==> (?w. ((pr3 e) = w)))) ==> ((?w. ((pr3 e) = w)) ==> (?w. ((pr3 e) = w)))) = ((?w. ((pr3 e) = w)) ==> (?w. ((pr3 e) = w))))
T c= c==> ! c==> * / c= cpr3 f0 b1 b0 c? / c= cpr3 f0 b1 c==> c? / c= cpr3 f0 b0 c? / c= cpr3 f0 b0 c==> c? / c= cpr3 f0 b0 c? / c= cpr3 f0 b0
- |- (((pr3 e) = w) ==> (?w. ((pr3 e) = w)))
T c==> c= cpr3 f0 f1 c? / c= cpr3 f0 b0
- ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F), (((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) |- (((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) /\ ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c/\ c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- (((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) |- ((((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) /\ (((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c/\ c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
+ (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))) |- (((!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi)))) ==> ((\u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi)))) w)) = ((\u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi)))) w))
T c==> ! ! c==> cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 creal_lt cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 cpi c= c==> ! c==> cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 f3 b0 csigma_fan f1 f2 f0 f3 b0 creal_lt cazim f1 f3 b0 csigma_fan f1 f2 f0 f3 b0 cpi * / c==> cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 f3 b0 csigma_fan f1 f2 f0 f3 b0 creal_lt cazim f1 f3 b0 csigma_fan f1 f2 f0 f3 b0 cpi f4 * / c==> cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 f3 b0 csigma_fan f1 f2 f0 f3 b0 creal_lt cazim f1 f3 b0 csigma_fan f1 f2 f0 f3 b0 cpi f4
- ((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) |- (((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) = T)
T c==> cSUBSET * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 c= cSUBSET * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 cT
- |- ((\x. (!u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F))) x)
T * / ! c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT f0 part cEMPTY b2 c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT b1 part cEMPTY b2 caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 cclosure * * * * * part cdart_leads_into b0 f2 f3 f0 f1 b2 c==> ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 cclosure * * * * * part cdart_leads_into b0 f2 f3 f0 f1 b2 cF f4
- ((\v. ((pr2 e) = v)) v) |- (((\v. ((pr2 e) = v)) v) /\ (?v. ((pr2 e) = v)))
T c==> * / c= cpr2 f0 b0 f1 c/\ * / c= cpr2 f0 b0 f1 c? / c= cpr2 f0 b0
+ |- ((((u INSERT (v INSERT EMPTY)) IN E) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))) = (((v INSERT (u INSERT EMPTY)) IN E) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))))
T c= c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cSUBSET * * part caff_gt * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f1 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f3 f5 f2 f6 c==> cIN * * part cINSERT f1 * * part cINSERT f0 part cEMPTY f2 cSUBSET * * part caff_gt * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f3 f5 f2 f6
+ |- (((!ds. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (y IN ds)))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E)))) ==> ((\ds. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (y IN ds)))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E)))) f)) = ((\ds. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (y IN ds)))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E)))) f))
T c= c==> ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 c/\ cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 cIN b1 b0 cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr3 b1 part cEMPTY f2 * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 c/\ cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 cIN b1 b0 cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr3 b1 part cEMPTY f2 f3 * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 c/\ cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 cIN b1 b0 cIN * * part cINSERT cpr2 b1 * * part cINSERT cpr3 b1 part cEMPTY f2 f3
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ ((pr2 e) = v) |- ((((aff_gt (x INSERT EMPTY)) (v INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))) = (((aff_gt (x INSERT EMPTY)) ((pr2 e) INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> c= cpr2 f0 f1 c= cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f1 * * part cINSERT cpr3 f0 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f3 f4 f5 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT cpr2 f0 * * part cINSERT cpr3 f0 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f3 f4 f5
- |- ((edges s) = (GSPEC (\GEN%PVAR%5232. (?v. (?w. (((SETSPEC GEN%PVAR%5232) ((edge_of (closed_segment ((CONS (v , w)) NIL))) s)) (v INSERT (w INSERT EMPTY))))))))
T c= * part cedges f0 * part cGSPEC / c? / c? / cSETSPEC b0 cedge_of * part cclosed_segment cCONS c, b1 b2 cNIL f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) |- ((((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))), (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))), (~ F), (~ ((closure (((((dart_leads_into x) V) E) v) w)) x')), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') |- ((~ F) /\ F)
T c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c~ cF c==> c~ cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6 c/\ c~ cF cF
+ |- ((\x. (!V. (!E. (!ds. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (ds IN (face_set (hypermap1_of_fanx (x , (V , E)))))))) ==> (!y. ((y IN ds) ==> (((((dartset_leads_into_fan x) V) E) ds) = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y)))))))))) x)
T * / ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b4 b1 c> cCARD * * * part cset_of_edge b4 b1 b2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, b0 c, b1 b2 cIN b3 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 ! c==> cIN b4 b3 c= * * * * part cdartset_leads_into_fan b0 b1 b2 b3 * * * * * part cdart_leads_into b0 b1 b2 cpr2 b4 cpr3 b4 f0
+ |- (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))
T cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((!x'. ((x' IN (((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))))))) ==> (x' IN (closure (((((dart_leads_into x) V) E) v) w))))) ==> ((!x'. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))) ==> (!x'. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> (x' IN (closure (((((dart_leads_into x) V) E) v) w)))))))
T c==> ! c==> cIN b0 * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 c==> ! c==> cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) |- (((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))) = T)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c= c==> cIN f2 f0 c> cCARD * * * part cset_of_edge f2 f0 f1 cNUMERAL cBIT1 c_0 cT
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f) |- (((aff_gt (x INSERT EMPTY)) (v INSERT ((pr3 e) INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> cIN f5 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f5 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT cpr3 f3 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f5
- (x = B), (((x = A) \/ (x = B)) /\ ((~ (x = B)) /\ (~ (x = A)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c/\ c~ c= f0 f1 c~ c= f0 f2 c==> c~ cF cF
- (x = B) |- (F = F)
T c==> c= f0 f1 c= cF cF
+ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) |- ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) _6548078)) \/ ((closure (((((dart_leads_into x) V) E) v) w)) _6548078))
T c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((pr2 e) = v), ((pr3 e) = w), ((((((sigma_fan x) V) E) v) w) = u), (f IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (v INSERT EMPTY)) IN E), (((pr2 e) INSERT ((pr3 e) INSERT EMPTY)) IN E), (e IN f), ((closure ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) |- ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (f IN (face_set (hypermap1_of_fanx (x , (V , E)))))))) ==> (!y. ((y IN f) ==> (((((dartset_leads_into_fan x) V) E) f) = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y)))))) ==> (((aff_gt (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) SUBSET (closure ((((dartset_leads_into_fan x) V) E) f))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cpr2 f3 f4 c==> c= cpr3 f3 f5 c==> c= csigma_fan f2 f0 f1 f4 f5 f6 c==> cIN f7 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c==> cIN f3 f7 c==> cSUBSET * part cclosure * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f6 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * part cclosure * * * * * part cdart_leads_into f2 f0 f1 f4 f5 c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f2 c, f0 f1 cIN f7 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 ! c==> cIN b0 f7 c= * * * * part cdartset_leads_into_fan f2 f0 f1 f7 * * * * * part cdart_leads_into f2 f0 f1 cpr2 b0 cpr3 b0 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * part cclosure * * * * part cdartset_leads_into_fan f2 f0 f1 f7
- |- ((((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F) ==> ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F)) = ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F))
T c= c==> c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 cF c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 cF c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 cF
+ |- ((\E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))))) E)
T * / c= cfan80 c, f0 c, f1 b0 ! ! c==> cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 creal_lt cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 cpi f2
- |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- (~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) |- F
T c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 cF
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- (T = (((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) _6548078)) \/ ((closure (((((dart_leads_into x) V) E) v) w)) _6548078)) = (((closure (((((dart_leads_into x) V) E) v) w)) _6548078) \/ (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) _6548078)))))
T c= cT c= c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cclosure * * * * * part cdart_leads_into f0 f4 f5 f1 f2 f3 c\/ cclosure * * * * * part cdart_leads_into f0 f4 f5 f1 f2 f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (x = A), (((x = A) \/ (x = B)) /\ ((~ (x = B)) /\ (~ (x = A)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 c==> c~ cF cF
- ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) |- (((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) /\ ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c/\ c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- |- (((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- |- ((!u. ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) = T)
T c= ! c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b1 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT b0 part cEMPTY b1 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cclosure * * * * * part cdart_leads_into f0 f3 f4 f1 f2 b1 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cclosure * * * * * part cdart_leads_into f0 f3 f4 f1 f2 b1 cT
- |- (((!s. ((edges s) = (GSPEC (\GEN%PVAR%5232. (?v. (?w. (((SETSPEC GEN%PVAR%5232) ((edge_of (closed_segment ((CONS (v , w)) NIL))) s)) (v INSERT (w INSERT EMPTY))))))))) ==> ((\s. ((edges s) = (GSPEC (\GEN%PVAR%5232. (?v. (?w. (((SETSPEC GEN%PVAR%5232) ((edge_of (closed_segment ((CONS (v , w)) NIL))) s)) (v INSERT (w INSERT EMPTY))))))))) s)) = ((\s. ((edges s) = (GSPEC (\GEN%PVAR%5232. (?v. (?w. (((SETSPEC GEN%PVAR%5232) ((edge_of (closed_segment ((CONS (v , w)) NIL))) s)) (v INSERT (w INSERT EMPTY))))))))) s))
T c= c==> ! c= * part cedges b0 * part cGSPEC / c? / c? / cSETSPEC b1 cedge_of * part cclosed_segment cCONS c, b2 b3 cNIL b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / c= * part cedges b0 * part cGSPEC / c? / c? / cSETSPEC b1 cedge_of * part cclosed_segment cCONS c, b2 b3 cNIL b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0 * / c= * part cedges b0 * part cGSPEC / c? / c? / cSETSPEC b1 cedge_of * part cclosed_segment cCONS c, b2 b3 cNIL b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
- |- (((((((sigma_fan x) V) E) v) w) = u) = ((\u. ((((((sigma_fan x) V) E) v) w) = u)) u))
T c= c= csigma_fan f0 f1 f2 f3 f4 f5 * / c= csigma_fan f0 f1 f2 f3 f4 b0 f5
- (~ ((closure (((((dart_leads_into x) V) E) v) w)) x')) |- (((closure (((((dart_leads_into x) V) E) v) w)) x') ==> F)
T c==> c~ cclosure * * * * * part cdart_leads_into f0 f1 f2 f3 f4 f5 c==> cclosure * * * * * part cdart_leads_into f0 f1 f2 f3 f4 f5 cF
- |- ((\A. (!B. ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))) A)
T * / ! c==> c~ ! c= c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c= b2 b0 cF f0
- (x = B), (((~ (x = A)) /\ (~ (x = B))) /\ ((x = B) \/ (x = A))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c~ c= f0 f1 c\/ c= f0 f1 c= f0 f2 c==> c~ cF cF
- (~ (w IN (aff (x INSERT (v INSERT EMPTY))))) |- ((w IN (aff (x INSERT (v INSERT EMPTY)))) = F)
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) |- ((collinear (x INSERT (v INSERT (w INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') |- ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))
T c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))
T c= cIN f0 * part cGSPEC / * f1 * part cSETSPEC b0 * f1 / / c/\ b0 c= f0 b1
- ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F) |- ((((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F) ==> ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F)) ==> ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F))
T c==> c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 cF c==> c==> c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 cF c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 cF c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 cF
- |- ((!x'. (P \/ (Q x'))) = (P \/ (!x'. (Q x'))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- |- (((((((sigma_fan x) V) E) v) w) = u) ==> (?u. ((((((sigma_fan x) V) E) v) w) = u)))
T c==> c= csigma_fan f0 f1 f2 f3 f4 f5 c? / c= csigma_fan f0 f1 f2 f3 f4 b0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((!x. (!u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F))) ==> ((\x. (!u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F))) x)) = ((\x. (!u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F))) x))
T c= c==> ! ! c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT f0 part cEMPTY b2 c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT b1 part cEMPTY b2 caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 cclosure * * * * * part cdart_leads_into b0 f2 f3 f0 f1 b2 c==> ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 cclosure * * * * * part cdart_leads_into b0 f2 f3 f0 f1 b2 cF * / ! c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT f0 part cEMPTY b2 c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT b1 part cEMPTY b2 caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 cclosure * * * * * part cdart_leads_into b0 f2 f3 f0 f1 b2 c==> ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 cclosure * * * * * part cdart_leads_into b0 f2 f3 f0 f1 b2 cF f4 * / ! c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT f0 part cEMPTY b2 c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT b1 part cEMPTY b2 caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 cclosure * * * * * part cdart_leads_into b0 f2 f3 f0 f1 b2 c==> ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 cclosure * * * * * part cdart_leads_into b0 f2 f3 f0 f1 b2 cF f4
- (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) = T)
T c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
- ((\w. ((pr3 e) = w)) w) |- (((\w. ((pr3 e) = w)) w) /\ (?w. ((pr3 e) = w)))
T c==> * / c= cpr3 f0 b0 f1 c/\ * / c= cpr3 f0 b0 f1 c? / c= cpr3 f0 b0
- (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))), (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') |- ((((closure (((((dart_leads_into x) V) E) v) w)) x') ==> F) = F)
T c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6 c= c==> cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6 cF cF
- (x = B), (((x = A) \/ (x = B)) /\ ((~ (x = B)) /\ (~ (x = A)))) |- (~ (B = A))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f1 f2
- (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))), (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))), (~ ((closure (((((dart_leads_into x) V) E) v) w)) x')), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') |- ((~ ((closure (((((dart_leads_into x) V) E) v) w)) x')) /\ ((closure (((((dart_leads_into x) V) E) v) w)) x'))
T c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c~ cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6 c/\ c~ cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6
- (~ (v = w)) |- (~ (w = v))
T c==> c~ c= f0 f1 c~ c= f1 f0
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))), (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))), (~ ((closure (((((dart_leads_into x) V) E) v) w)) x')), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') |- F
T c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c~ cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6 cF
- |- (((pr2 e) = v) = ((\v. ((pr2 e) = v)) v))
T c= c= cpr2 f0 f1 * / c= cpr2 f0 b0 f1
- ((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) |- (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))) = T)
T c==> cSUBSET * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 c= cSUBSET * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 cT
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- |- (!u. (((\u. ((((((sigma_fan x) V) E) v) w) = u)) u) ==> (?u. ((((((sigma_fan x) V) E) v) w) = u))))
T c==> * / c= csigma_fan f0 f1 f2 f3 f4 b0 f5 c? / c= csigma_fan f0 f1 f2 f3 f4 b0
- (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) |- ((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) _6548078)) \/ ((closure (((((dart_leads_into x) V) E) v) w)) _6548078))
T c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6
- |- ((!x''. ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'')) \/ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) = ((!x'. (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) \/ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')))
T c= ! c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c\/ ! c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- (~ (v = w)) |- ((w = v) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- (x = A), (((~ (x = A)) /\ (~ (x = B))) /\ ((x = B) \/ (x = A))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c==> c~ cF cF
- (!y. ((y IN f) ==> (((((dartset_leads_into_fan x) V) E) f) = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y))))) |- (((y IN f) ==> (((((dartset_leads_into_fan x) V) E) f) = (((((dart_leads_into x) V) E) (pr2 y)) (pr3 y)))) = T)
T c==> ! c==> cIN b0 f0 c= * * * * part cdartset_leads_into_fan f1 f2 f3 f0 * * * * * part cdart_leads_into f1 f2 f3 cpr2 b0 cpr3 b0 c= c==> cIN f4 f0 c= * * * * part cdartset_leads_into_fan f1 f2 f3 f0 * * * * * part cdart_leads_into f1 f2 f3 cpr2 f4 cpr3 f4 cT
- |- ((\v. (!E. (!V. (!x. (!u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F)))))) v)
T * / ! ! ! ! c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b0 part cEMPTY b5 c\/ caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 c\/ caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT f0 * * part cINSERT b4 part cEMPTY b5 caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 cclosure * * * * * part cdart_leads_into b3 b2 b1 b0 f0 b5 c==> ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 cclosure * * * * * part cdart_leads_into b3 b2 b1 b0 f0 b5 cF f1
- |- (((pr3 e) = w) = ((\w. ((pr3 e) = w)) w))
T c= c= cpr3 f0 f1 * / c= cpr3 f0 b0 f1
- |- (((!u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F)) ==> ((\u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F)) u)) = ((\u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F)) u))
T c= c==> ! c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b1 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT b0 part cEMPTY b1 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cclosure * * * * * part cdart_leads_into f0 f3 f4 f1 f2 b1 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cclosure * * * * * part cdart_leads_into f0 f3 f4 f1 f2 b1 cF * / c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b1 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT b0 part cEMPTY b1 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cclosure * * * * * part cdart_leads_into f0 f3 f4 f1 f2 b1 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cclosure * * * * * part cdart_leads_into f0 f3 f4 f1 f2 b1 cF f5 * / c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b1 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT b0 part cEMPTY b1 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cclosure * * * * * part cdart_leads_into f0 f3 f4 f1 f2 b1 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cclosure * * * * * part cdart_leads_into f0 f3 f4 f1 f2 b1 cF f5
- |- ((!E. (!V. (!x. (!u. ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))))))))) = T)
T c= ! ! ! ! c==> ! c==> c\/ caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b3 * * part cINSERT f0 part cEMPTY b4 c\/ caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 c\/ caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT f1 * * part cINSERT b3 part cEMPTY b4 caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 cclosure * * * * * part cdart_leads_into b2 b1 b0 f0 f1 b4 c==> ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 cclosure * * * * * part cdart_leads_into b2 b1 b0 f0 f1 b4 cT
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- ((((((sigma_fan x) V) E) v) w) = u) |- (((((((sigma_fan x) V) E) v) w) = u) /\ (?u. ((((((sigma_fan x) V) E) v) w) = u)))
T c==> c= csigma_fan f0 f1 f2 f3 f4 f5 c/\ c= csigma_fan f0 f1 f2 f3 f4 f5 c? / c= csigma_fan f0 f1 f2 f3 f4 b0
- ((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) UNION ((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY))))))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET (closure (((((dart_leads_into x) V) E) v) w))))
T c==> cSUBSET * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3
- |- ((!x'. (P x')) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- (~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) |- ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) /\ F)
T c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 c/\ c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) = T)
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cT
- |- ((((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) = ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))
T c= c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- |- ((!v. (!E. (!V. (!x. (!u. ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))))))) = T)
T c= ! ! ! ! ! c==> ! c==> c\/ caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b0 part cEMPTY b5 c\/ caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 c\/ caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT f0 * * part cINSERT b4 part cEMPTY b5 caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 cclosure * * * * * part cdart_leads_into b3 b2 b1 b0 f0 b5 c==> ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 cclosure * * * * * part cdart_leads_into b3 b2 b1 b0 f0 b5 cT
- |- ((?w. ((pr3 e) = w)) ==> (?w. ((pr3 e) = w)))
T c==> c? / c= cpr3 f0 b0 c? / c= cpr3 f0 b0
- |- (((!w. (!v. (!E. (!V. (!x. (!u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F))))))) ==> ((\w. (!v. (!E. (!V. (!x. (!u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F))))))) w)) = ((\w. (!v. (!E. (!V. (!x. (!u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F))))))) w))
T c= c==> ! ! ! ! ! ! c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b5 * * part cINSERT b1 part cEMPTY b6 c\/ caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 c\/ caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b0 * * part cINSERT b5 part cEMPTY b6 caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b5 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 cclosure * * * * * part cdart_leads_into b4 b3 b2 b1 b0 b6 c==> ! c==> caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 ! c==> caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 cclosure * * * * * part cdart_leads_into b4 b3 b2 b1 b0 b6 cF * / ! ! ! ! ! c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b5 * * part cINSERT b1 part cEMPTY b6 c\/ caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 c\/ caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b0 * * part cINSERT b5 part cEMPTY b6 caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b5 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 cclosure * * * * * part cdart_leads_into b4 b3 b2 b1 b0 b6 c==> ! c==> caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 ! c==> caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 cclosure * * * * * part cdart_leads_into b4 b3 b2 b1 b0 b6 cF f0 * / ! ! ! ! ! c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b5 * * part cINSERT b1 part cEMPTY b6 c\/ caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 c\/ caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b0 * * part cINSERT b5 part cEMPTY b6 caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b5 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 cclosure * * * * * part cdart_leads_into b4 b3 b2 b1 b0 b6 c==> ! c==> caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 caff_ge * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 ! c==> caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 cclosure * * * * * part cdart_leads_into b4 b3 b2 b1 b0 b6 cF f0
- |- (((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) ==> ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)) = ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
- ((pr3 e) = w) |- (((pr3 e) = w) /\ (?w. ((pr3 e) = w)))
T c==> c= cpr3 f0 f1 c/\ c= cpr3 f0 f1 c? / c= cpr3 f0 b0
- |- (!w. (((\w. ((pr3 e) = w)) w) ==> (?w. ((pr3 e) = w))))
T c==> * / c= cpr3 f0 b0 f1 c? / c= cpr3 f0 b0
- |- ((((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) ==> (((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- |- ((\B. ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) B)
T * / c==> c~ ! c= c\/ c= b1 f0 c= b1 b0 c\/ c= b1 b0 c= b1 f0 cF f1
- ((pr2 e) = v) |- ((\v. ((pr2 e) = v)) v)
T c==> c= cpr2 f0 f1 * / c= cpr2 f0 b0 f1
- |- ((!x''. (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x'')) /\ ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'')) /\ ((~ (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x'')) /\ (~ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x''))))) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x'))) = ((!x'. ((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x')) /\ ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) /\ ((~ (((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x')) /\ (~ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))))) \/ ((closure (((((dart_leads_into x) V) E) v) w)) x')))
T c= ! c\/ c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6 c\/ ! c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6
- (~ (B = B)) |- ((~ (B = B)) /\ (B = B))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- |- ((?u. ((((((sigma_fan x) V) E) v) w) = u)) ==> (?u. ((((((sigma_fan x) V) E) v) w) = u)))
T c==> c? / c= csigma_fan f0 f1 f2 f3 f4 b0 c? / c= csigma_fan f0 f1 f2 f3 f4 b0
- (x = A), (((x = A) \/ (x = B)) /\ ((~ (x = B)) /\ (~ (x = A)))) |- (~ (A = B))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 c~ c= f1 f2
- |- ((!V. (!x. (!u. ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))))) = T)
T c= ! ! ! c==> ! c==> c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT f0 part cEMPTY b3 c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f1 * * part cINSERT b2 part cEMPTY b3 caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 cclosure * * * * * part cdart_leads_into b1 b0 f2 f0 f1 b3 c==> ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 cclosure * * * * * part cdart_leads_into b1 b0 f2 f0 f1 b3 cT
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- (~ F), (x = A), (((~ (x = A)) /\ (~ (x = B))) /\ ((x = B) \/ (x = A))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c/\ c~ cF cF
- ((\u. ((((((sigma_fan x) V) E) v) w) = u)) u) |- ((((((((sigma_fan x) V) E) v) w) = u) ==> (?u. ((((((sigma_fan x) V) E) v) w) = u))) = (?u. ((((((sigma_fan x) V) E) v) w) = u)))
T c==> * / c= csigma_fan f0 f1 f2 f3 f4 b0 f5 c= c==> c= csigma_fan f0 f1 f2 f3 f4 f5 c? / c= csigma_fan f0 f1 f2 f3 f4 b0 c? / c= csigma_fan f0 f1 f2 f3 f4 b0
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- ((((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F) ==> ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F)) ==> (((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F) ==> ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F)))
T c==> c==> c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 cF c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 cF c==> c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 cF c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 cF
- |- ((?v. ((pr2 e) = v)) ==> (?v. ((pr2 e) = v)))
T c==> c? / c= cpr2 f0 b0 c? / c= cpr2 f0 b0
- |- (((!x'. (((\u. ((((((sigma_fan x) V) E) v) w) = u)) x') ==> (?u. ((((((sigma_fan x) V) E) v) w) = u)))) ==> ((?u. ((((((sigma_fan x) V) E) v) w) = u)) ==> (?u. ((((((sigma_fan x) V) E) v) w) = u)))) = ((?u. ((((((sigma_fan x) V) E) v) w) = u)) ==> (?u. ((((((sigma_fan x) V) E) v) w) = u))))
T c= c==> ! c==> * / c= csigma_fan f0 f1 f2 f3 f4 b1 b0 c? / c= csigma_fan f0 f1 f2 f3 f4 b1 c==> c? / c= csigma_fan f0 f1 f2 f3 f4 b0 c? / c= csigma_fan f0 f1 f2 f3 f4 b0 c==> c? / c= csigma_fan f0 f1 f2 f3 f4 b0 c? / c= csigma_fan f0 f1 f2 f3 f4 b0
- |- ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 * f1 b1 b1 * f1 f0
- |- (T = (((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) _6548079)) \/ (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) _6548079)) = ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) _6548079) \/ (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) _6548079)))))
T c= cT c= c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- (((!V. (!x. (!u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F)))) ==> ((\V. (!x. (!u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F)))) V)) = ((\V. (!x. (!u. ((~ ((!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))) ==> ((!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> ((closure (((((dart_leads_into x) V) E) v) w)) x')))))) ==> F)))) V))
T c= c==> ! ! ! c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT f0 part cEMPTY b3 c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f1 * * part cINSERT b2 part cEMPTY b3 caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 cclosure * * * * * part cdart_leads_into b1 b0 f2 f0 f1 b3 c==> ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 cclosure * * * * * part cdart_leads_into b1 b0 f2 f0 f1 b3 cF * / ! ! c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT f0 part cEMPTY b3 c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f1 * * part cINSERT b2 part cEMPTY b3 caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 cclosure * * * * * part cdart_leads_into b1 b0 f2 f0 f1 b3 c==> ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 cclosure * * * * * part cdart_leads_into b1 b0 f2 f0 f1 b3 cF f3 * / ! ! c==> c~ c==> ! c==> c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT f0 part cEMPTY b3 c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f1 * * part cINSERT b2 part cEMPTY b3 caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 cclosure * * * * * part cdart_leads_into b1 b0 f2 f0 f1 b3 c==> ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 cclosure * * * * * part cdart_leads_into b1 b0 f2 f0 f1 b3 cF f3
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) x') \/ (((aff_gt (x INSERT EMPTY)) (u INSERT (v INSERT (w INSERT EMPTY)))) x')))) ==> ((closure (((((dart_leads_into x) V) E) v) w)) x'))), (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))), (~ ((closure (((((dart_leads_into x) V) E) v) w)) x')), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') |- ((~ F) ==> F)
T c==> ! c==> c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 b0 c==> ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c~ cclosure * * * * * part cdart_leads_into f0 f4 f5 f2 f3 f6 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6 c==> c~ cF cF
- ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F), (((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) |- ((((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F) ==> ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F)) /\ ((~ (!x. (((x = A) \/ (x = B)) = ((x = B) \/ (x = A))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c/\ c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- (~ F), (x = A), (((x = A) \/ (x = B)) /\ ((~ (x = B)) /\ (~ (x = A)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 c/\ c~ cF cF
