N Tame_lemmas.delta_y_pos
C |- (!v. (!w. (!w'. ((LET (\y1. (LET_END ((LET (\y2. (LET_END ((LET (\y3. (LET_END ((LET (\y4. (LET_END ((LET (\y5. (LET_END ((LET (\y6. (LET_END ((real_le (real_of_num (NUMERAL _0))) ((((((delta_y y1) y2) y3) y4) y5) y6))))) (distance (v , w)))))) (distance (v , w')))))) (distance (w , w')))))) (vector_norm w'))))) (vector_norm w))))) (vector_norm v)))))
T cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END creal_le creal_of_num cNUMERAL c_0 cdelta_y b0 b1 b2 b3 b4 b5 cdistance c, f0 f1 cdistance c, f0 f2 cdistance c, f1 f2 cvector_norm f2 cvector_norm f1 cvector_norm f0
D TRUTH
A |- T
T cT
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D Float.POW_2
A |- (!x. (((real_pow x) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul x) x)))
T c= creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul f0 f0
D DIST_SYM
A |- (!x. (!y. ((distance (x , y)) = (distance (y , x)))))
T c= cdistance c, f0 f1 cdistance c, f1 f0
D DIST_0
A |- (!x. (((distance (x , (vec (NUMERAL _0)))) = (vector_norm x)) /\ ((distance ((vec (NUMERAL _0)) , x)) = (vector_norm x))))
T c/\ c= cdistance c, f0 cvec cNUMERAL c_0 cvector_norm f0 c= cdistance c, cvec cNUMERAL c_0 f0 cvector_norm f0
D Sphere.delta_y
A |- (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((delta_y y1) y2) y3) y4) y5) y6) = ((((((delta_x ((real_mul y1) y1)) ((real_mul y2) y2)) ((real_mul y3) y3)) ((real_mul y4) y4)) ((real_mul y5) y5)) ((real_mul y6) y6)))))))))
T c= cdelta_y f0 f1 f2 f3 f4 f5 cdelta_x creal_mul f0 f0 creal_mul f1 f1 creal_mul f2 f2 creal_mul f3 f3 creal_mul f4 f4 creal_mul f5 f5
D Collect_geom.DELTA_POS_4POINTS
A |- (!x1. (!x2. (!x3. (!x4. ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (x1 , x2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x1 , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x1 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x2 , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x2 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x3 , x4))) (NUMERAL (BIT0 (BIT1 _0))))))))))
T creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0
D Tame_general.DELTA_EQ_DELTA_X
A |- (!x1. (!x2. (!x3. (!x4. (!x5. (!x6. (((((((delta x1) x2) x3) x6) x5) x4) = ((((((delta_x x1) x2) x3) x4) x5) x6))))))))
T c= cdelta f0 f1 f2 f3 f4 f5 cdelta_x f0 f1 f2 f5 f4 f3
+ |- ((\y2. (!y3. (!y4. (!y5. (!y6. (((((((delta_y y1) y2) y3) y4) y5) y6) = ((((((delta_x ((real_mul y1) y1)) ((real_mul y2) y2)) ((real_mul y3) y3)) ((real_mul y4) y4)) ((real_mul y5) y5)) ((real_mul y6) y6)))))))) y2)
T * / ! ! ! ! c= cdelta_y f0 b0 b1 b2 b3 b4 cdelta_x creal_mul f0 f0 creal_mul b0 b0 creal_mul b1 b1 creal_mul b2 b2 creal_mul b3 b3 creal_mul b4 b4 f1
+ |- ((\x. (!y. ((distance (x , y)) = (distance (y , x))))) (vec (NUMERAL _0)))
T * / ! c= cdistance c, b0 b1 cdistance c, b1 b0 cvec cNUMERAL c_0
+ |- ((((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (v , (vec (NUMERAL _0))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((vec (NUMERAL _0)) , w))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((vec (NUMERAL _0)) , w'))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v , w))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v , w'))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (w , w'))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (v , (vec (NUMERAL _0))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (w , (vec (NUMERAL _0))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (w' , (vec (NUMERAL _0))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v , w))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v , w'))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (w , w'))) (NUMERAL (BIT0 (BIT1 _0))))))) = (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance ((vec (NUMERAL _0)) , v))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((vec (NUMERAL _0)) , w))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((vec (NUMERAL _0)) , w'))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v , w))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v , w'))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (w , w'))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (v , (vec (NUMERAL _0))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (w , (vec (NUMERAL _0))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (w' , (vec (NUMERAL _0))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v , w))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v , w'))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (w , w'))) (NUMERAL (BIT0 (BIT1 _0))))))))
T c= c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f0 cvec cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, cvec cNUMERAL c_0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, cvec cNUMERAL c_0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f0 cvec cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 cvec cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 cvec cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, cvec cNUMERAL c_0 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, cvec cNUMERAL c_0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, cvec cNUMERAL c_0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f0 cvec cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 cvec cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 cvec cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_mul (distance (v , (vec (NUMERAL _0))))) (distance (v , (vec (NUMERAL _0)))))) ((real_mul (distance (w , (vec (NUMERAL _0))))) (vector_norm w))) ((real_mul (vector_norm w')) (vector_norm w'))) ((real_mul (distance (v , w))) (distance (v , w)))) ((real_mul (distance (v , w'))) (distance (v , w')))) ((real_mul (distance (w , w'))) (distance (w , w'))))) = ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_mul (distance (v , (vec (NUMERAL _0))))) (distance (v , (vec (NUMERAL _0)))))) ((real_mul (vector_norm w)) (vector_norm w))) ((real_mul (vector_norm w')) (vector_norm w'))) ((real_mul (distance (v , w))) (distance (v , w)))) ((real_mul (distance (v , w'))) (distance (v , w')))) ((real_mul (distance (w , w'))) (distance (w , w'))))))
T c= creal_le creal_of_num cNUMERAL c_0 cdelta creal_mul cdistance c, f0 cvec cNUMERAL c_0 cdistance c, f0 cvec cNUMERAL c_0 creal_mul cdistance c, f1 cvec cNUMERAL c_0 cvector_norm f1 creal_mul cvector_norm f2 cvector_norm f2 creal_mul cdistance c, f0 f1 cdistance c, f0 f1 creal_mul cdistance c, f0 f2 cdistance c, f0 f2 creal_mul cdistance c, f1 f2 cdistance c, f1 f2 creal_le creal_of_num cNUMERAL c_0 cdelta creal_mul cdistance c, f0 cvec cNUMERAL c_0 cdistance c, f0 cvec cNUMERAL c_0 creal_mul cvector_norm f1 cvector_norm f1 creal_mul cvector_norm f2 cvector_norm f2 creal_mul cdistance c, f0 f1 cdistance c, f0 f1 creal_mul cdistance c, f0 f2 cdistance c, f0 f2 creal_mul cdistance c, f1 f2 cdistance c, f1 f2
+ |- ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_mul (distance (v , (vec (NUMERAL _0))))) (distance (v , (vec (NUMERAL _0)))))) ((real_mul (distance (w , (vec (NUMERAL _0))))) (distance (w , (vec (NUMERAL _0)))))) ((real_mul (distance (w' , (vec (NUMERAL _0))))) (vector_norm w'))) ((real_mul (distance (v , w))) (distance (v , w)))) ((real_mul (distance (v , w'))) (distance (v , w')))) ((real_mul (distance (w , w'))) (distance (w , w')))))
T creal_le creal_of_num cNUMERAL c_0 cdelta creal_mul cdistance c, f0 cvec cNUMERAL c_0 cdistance c, f0 cvec cNUMERAL c_0 creal_mul cdistance c, f1 cvec cNUMERAL c_0 cdistance c, f1 cvec cNUMERAL c_0 creal_mul cdistance c, f2 cvec cNUMERAL c_0 cvector_norm f2 creal_mul cdistance c, f0 f1 cdistance c, f0 f1 creal_mul cdistance c, f0 f2 cdistance c, f0 f2 creal_mul cdistance c, f1 f2 cdistance c, f1 f2
+ |- (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (v , (vec (NUMERAL _0))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (w , (vec (NUMERAL _0))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (w' , (vec (NUMERAL _0))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (distance (v , w))) (distance (v , w)))) ((real_mul (distance (v , w'))) (distance (v , w')))) ((real_mul (distance (w , w'))) (distance (w , w'))))) = ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (v , (vec (NUMERAL _0))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (w , (vec (NUMERAL _0))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (distance (w' , (vec (NUMERAL _0))))) (distance (w' , (vec (NUMERAL _0)))))) ((real_mul (distance (v , w))) (distance (v , w)))) ((real_mul (distance (v , w'))) (distance (v , w')))) ((real_mul (distance (w , w'))) (distance (w , w'))))))
T c= creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f0 cvec cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 cvec cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 cvec cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul cdistance c, f0 f1 cdistance c, f0 f1 creal_mul cdistance c, f0 f2 cdistance c, f0 f2 creal_mul cdistance c, f1 f2 cdistance c, f1 f2 creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f0 cvec cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 cvec cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul cdistance c, f2 cvec cNUMERAL c_0 cdistance c, f2 cvec cNUMERAL c_0 creal_mul cdistance c, f0 f1 cdistance c, f0 f1 creal_mul cdistance c, f0 f2 cdistance c, f0 f2 creal_mul cdistance c, f1 f2 cdistance c, f1 f2
+ |- (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_mul (distance (v , (vec (NUMERAL _0))))) (vector_norm v))) ((real_mul (vector_norm w)) (vector_norm w))) ((real_mul (vector_norm w')) (vector_norm w'))) ((real_mul (distance (v , w))) (distance (v , w)))) ((real_mul (distance (v , w'))) (distance (v , w')))) ((real_mul (distance (w , w'))) (distance (w , w'))))) = ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_mul (vector_norm v)) (vector_norm v))) ((real_mul (vector_norm w)) (vector_norm w))) ((real_mul (vector_norm w')) (vector_norm w'))) ((real_mul (distance (v , w))) (distance (v , w)))) ((real_mul (distance (v , w'))) (distance (v , w')))) ((real_mul (distance (w , w'))) (distance (w , w'))))))
T c= creal_le creal_of_num cNUMERAL c_0 cdelta creal_mul cdistance c, f0 cvec cNUMERAL c_0 cvector_norm f0 creal_mul cvector_norm f1 cvector_norm f1 creal_mul cvector_norm f2 cvector_norm f2 creal_mul cdistance c, f0 f1 cdistance c, f0 f1 creal_mul cdistance c, f0 f2 cdistance c, f0 f2 creal_mul cdistance c, f1 f2 cdistance c, f1 f2 creal_le creal_of_num cNUMERAL c_0 cdelta creal_mul cvector_norm f0 cvector_norm f0 creal_mul cvector_norm f1 cvector_norm f1 creal_mul cvector_norm f2 cvector_norm f2 creal_mul cdistance c, f0 f1 cdistance c, f0 f1 creal_mul cdistance c, f0 f2 cdistance c, f0 f2 creal_mul cdistance c, f1 f2 cdistance c, f1 f2
+ |- ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_mul (distance (v , (vec (NUMERAL _0))))) (distance (v , (vec (NUMERAL _0)))))) ((real_mul (distance (w , (vec (NUMERAL _0))))) (vector_norm w))) ((real_mul (vector_norm w')) (vector_norm w'))) ((real_mul (distance (v , w))) (distance (v , w)))) ((real_mul (distance (v , w'))) (distance (v , w')))) ((real_mul (distance (w , w'))) (distance (w , w')))))
T creal_le creal_of_num cNUMERAL c_0 cdelta creal_mul cdistance c, f0 cvec cNUMERAL c_0 cdistance c, f0 cvec cNUMERAL c_0 creal_mul cdistance c, f1 cvec cNUMERAL c_0 cvector_norm f1 creal_mul cvector_norm f2 cvector_norm f2 creal_mul cdistance c, f0 f1 cdistance c, f0 f1 creal_mul cdistance c, f0 f2 cdistance c, f0 f2 creal_mul cdistance c, f1 f2 cdistance c, f1 f2
- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))) |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c==> c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0 c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- |- ((vector_norm x) = (distance ((vec (NUMERAL _0)) , x)))
T c= cvector_norm f0 cdistance c, cvec cNUMERAL c_0 f0
- |- ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)
T * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- |- (((!P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) ==> ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)) = ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P))
T c= c==> ! ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))) |- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))
T c==> c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0 c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
- |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- |- (((!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) ==> ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)) = ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q))
T c= c==> ! c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
