N AFF_DIM_DIM
C |- (!s. ((aff_dim s) = (((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (int_of_num (dim s))) ((int_sub (int_of_num (dim s))) (int_of_num (NUMERAL (BIT1 _0)))))))
T c= caff_dim f0 cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 cint_of_num cdim f0 cint_sub cint_of_num cdim f0 cint_of_num cNUMERAL cBIT1 c_0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D COND_ELIM_THM
A |- ((P (((COND c) x) y)) = ((c ==> (P x)) /\ ((~ c) ==> (P y))))
T c= * f0 cCOND f1 f2 f3 c/\ c==> f1 * f0 f2 c==> c~ f1 * f0 f3
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_eq
A |- (!x. (!y. ((x = y) = ((real_of_int x) = (real_of_int y)))))
T c= c= f0 f1 c= creal_of_int f0 creal_of_int f1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D int_sub_th
A |- (!x. (!y. ((real_of_int ((int_sub x) y)) = ((real_sub (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_sub f0 f1 creal_sub creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_EQ
A |- (!x. (!y. ((~ (x = y)) = (((int_lt x) y) \/ ((int_lt y) x)))))
T c= c~ c= f0 f1 c\/ cint_lt f0 f1 cint_lt f1 f0
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D HULL_INC
A |- (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s))))))
T c==> cIN f0 f1 cIN f0 * * part chull f2 f1
D DIM_INSERT_0
A |- (!s. ((dim ((vec (NUMERAL _0)) INSERT s)) = (dim s)))
T c= cdim * * part cINSERT cvec cNUMERAL c_0 f0 cdim f0
D AFF_DIM_DIM_0
A |- (!s. (((vec (NUMERAL _0)) IN ((hull affine) s)) ==> ((aff_dim s) = (int_of_num (dim s)))))
T c==> cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= caff_dim f0 cint_of_num cdim f0
D AFF_DIM_INSERT
A |- (!a. (!s. ((aff_dim (a INSERT s)) = (((COND (a IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))))))
T c= caff_dim * * part cINSERT f0 f1 cCOND cIN f0 * * part chull part caffine f1 caff_dim f1 cint_add caff_dim f1 cint_of_num cNUMERAL cBIT1 c_0
+ |- ((\x. ((x IN s) ==> (x IN ((hull P) s)))) x)
T * / c==> cIN b0 f0 cIN b0 * * part chull f1 f0 f2
+ |- ((((vec (NUMERAL _0)) IN ((hull affine) ((vec (NUMERAL _0)) INSERT s))) ==> ((aff_dim ((vec (NUMERAL _0)) INSERT s)) = (int_of_num (dim ((vec (NUMERAL _0)) INSERT s))))) = ((aff_dim ((vec (NUMERAL _0)) INSERT s)) = (int_of_num (dim ((vec (NUMERAL _0)) INSERT s)))))
T c= c==> cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 c= caff_dim * * part cINSERT cvec cNUMERAL c_0 f0 cint_of_num cdim * * part cINSERT cvec cNUMERAL c_0 f0 c= caff_dim * * part cINSERT cvec cNUMERAL c_0 f0 cint_of_num cdim * * part cINSERT cvec cNUMERAL c_0 f0
- |- ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))) = (((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0
+ |- (((!s. ((dim ((vec (NUMERAL _0)) INSERT s)) = (dim s))) ==> ((\s. ((dim ((vec (NUMERAL _0)) INSERT s)) = (dim s))) s)) = ((\s. ((dim ((vec (NUMERAL _0)) INSERT s)) = (dim s))) s))
T c= c==> ! c= cdim * * part cINSERT cvec cNUMERAL c_0 b0 cdim b0 * / c= cdim * * part cINSERT cvec cNUMERAL c_0 b0 cdim b0 f0 * / c= cdim * * part cINSERT cvec cNUMERAL c_0 b0 cdim b0 f0
+ (~ ((vec (NUMERAL _0)) IN ((hull affine) s))) |- ((F ==> ((aff_dim s) = t')) ==> (((~ F) ==> (((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = (((COND F) t') e'))))
T c==> c~ cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c==> c==> cF c= caff_dim f0 f1 c==> c==> c~ cF c= cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 f2 c= cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 caff_dim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cCOND cF f1 f2
+ |- (~ (((real_of_num (dim s)) = ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_sub ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim s))))))
T c~ c/\ c= creal_of_num cdim f0 creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 c\/ creal_le creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_sub creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim f0
+ |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim s)))) ((real_add (real_of_num (dim s))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim f0 creal_add creal_of_num cdim f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (~ ((vec (NUMERAL _0)) IN ((hull affine) s))) |- (((((aff_dim ((vec (NUMERAL _0)) INSERT s)) = (((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))))) = ((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))))) ==> ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim s) = ((int_sub (int_of_num (dim s))) (int_of_num (NUMERAL (BIT1 _0))))) = q')) ==> ((((aff_dim ((vec (NUMERAL _0)) INSERT s)) = (((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))))) ==> ((aff_dim s) = ((int_sub (int_of_num (dim s))) (int_of_num (NUMERAL (BIT1 _0)))))) = (((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> q')))) = ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim s) = ((int_sub (int_of_num (dim s))) (int_of_num (NUMERAL (BIT1 _0))))) = q')) ==> ((((aff_dim ((vec (NUMERAL _0)) INSERT s)) = (((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))))) ==> ((aff_dim s) = ((int_sub (int_of_num (dim s))) (int_of_num (NUMERAL (BIT1 _0)))))) = (((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> q'))))
T c==> c~ cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= c==> c= c= caff_dim * * part cINSERT cvec cNUMERAL c_0 f0 cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 caff_dim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c==> c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= c= caff_dim f0 cint_sub cint_of_num cdim f0 cint_of_num cNUMERAL cBIT1 c_0 f1 c= c==> c= caff_dim * * part cINSERT cvec cNUMERAL c_0 f0 cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 caff_dim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_of_num cdim f0 cint_of_num cNUMERAL cBIT1 c_0 c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= c= caff_dim f0 cint_sub cint_of_num cdim f0 cint_of_num cNUMERAL cBIT1 c_0 f1 c= c==> c= caff_dim * * part cINSERT cvec cNUMERAL c_0 f0 cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 caff_dim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_of_num cdim f0 cint_of_num cNUMERAL cBIT1 c_0 c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 f1
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ |- (((!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) ==> ((\P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) P)) = ((\P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) P))
T c= c==> ! ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 * / ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 f0 * / ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 f0
+ |- (((!s. (((vec (NUMERAL _0)) IN ((hull affine) s)) ==> ((aff_dim s) = (int_of_num (dim s))))) ==> ((\s. (((vec (NUMERAL _0)) IN ((hull affine) s)) ==> ((aff_dim s) = (int_of_num (dim s))))) s)) = ((\s. (((vec (NUMERAL _0)) IN ((hull affine) s)) ==> ((aff_dim s) = (int_of_num (dim s))))) s))
T c= c==> ! c==> cIN cvec cNUMERAL c_0 * * part chull part caffine b0 c= caff_dim b0 cint_of_num cdim b0 * / c==> cIN cvec cNUMERAL c_0 * * part chull part caffine b0 c= caff_dim b0 cint_of_num cdim b0 f0 * / c==> cIN cvec cNUMERAL c_0 * * part chull part caffine b0 c= caff_dim b0 cint_of_num cdim b0 f0
+ |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ (~ ((vec (NUMERAL _0)) IN ((hull affine) s))) |- ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))) = (((aff_dim ((vec (NUMERAL _0)) INSERT s)) = (((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))))) ==> ((aff_dim s) = ((int_sub (int_of_num (dim s))) (int_of_num (NUMERAL (BIT1 _0)))))))
T c==> c~ cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c==> c= caff_dim * * part cINSERT cvec cNUMERAL c_0 f0 cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 caff_dim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_of_num cdim f0 cint_of_num cNUMERAL cBIT1 c_0
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim s)))) ((real_add (real_of_num (dim s))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim s)))) ((real_add (real_of_num (dim s))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim f0 creal_add creal_of_num cdim f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim f0 creal_add creal_of_num cdim f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- (~ (~ (((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))))))
T c~ c~ c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0
+ |- (((~ ((vec (NUMERAL _0)) IN ((hull affine) s))) ==> ((aff_dim s) = ((int_sub (int_of_num (dim s))) (int_of_num (NUMERAL (BIT1 _0)))))) = ((((vec (NUMERAL _0)) IN ((hull affine) s)) ==> ((aff_dim s) = (int_of_num (dim s)))) /\ ((~ ((vec (NUMERAL _0)) IN ((hull affine) s))) ==> ((aff_dim s) = ((int_sub (int_of_num (dim s))) (int_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> c~ cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= caff_dim f0 cint_sub cint_of_num cdim f0 cint_of_num cNUMERAL cBIT1 c_0 c/\ c==> cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= caff_dim f0 cint_of_num cdim f0 c==> c~ cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= caff_dim f0 cint_sub cint_of_num cdim f0 cint_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((vec (NUMERAL _0)) IN ((vec (NUMERAL _0)) INSERT s))
T cIN cvec cNUMERAL c_0 * * part cINSERT cvec cNUMERAL c_0 f0
+ |- ((((~ (~ (((real_of_num (dim s)) = ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_sub ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim s))))))) ==> F) ==> (~ (((real_of_num (dim s)) = ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_sub ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim s))))))) = (~ (((real_of_num (dim s)) = ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_sub ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim s)))))))
T c= c==> c==> c~ c~ c/\ c= creal_of_num cdim f0 creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 c\/ creal_le creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_sub creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim f0 cF c~ c/\ c= creal_of_num cdim f0 creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 c\/ creal_le creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_sub creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim f0 c~ c/\ c= creal_of_num cdim f0 creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 c\/ creal_le creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_sub creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim f0
+ |- (T = ((vec (NUMERAL _0)) IN ((hull affine) ((vec (NUMERAL _0)) INSERT s))))
T c= cT cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0
+ |- (((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))))
T c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0
+ F, (~ ((vec (NUMERAL _0)) IN ((hull affine) s))) |- (T = ((vec (NUMERAL _0)) IN ((hull affine) s)))
T c==> cF c==> c~ cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= cT cIN cvec cNUMERAL c_0 * * part chull part caffine f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- (T = (((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))))
T c= cT c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ (~ ((vec (NUMERAL _0)) IN ((hull affine) s))) |- ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim s) = ((int_sub (int_of_num (dim s))) (int_of_num (NUMERAL (BIT1 _0))))) = q')) ==> ((((aff_dim ((vec (NUMERAL _0)) INSERT s)) = (((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))))) ==> ((aff_dim s) = ((int_sub (int_of_num (dim s))) (int_of_num (NUMERAL (BIT1 _0)))))) = (((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> q')))
T c==> c~ cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c==> c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= c= caff_dim f0 cint_sub cint_of_num cdim f0 cint_of_num cNUMERAL cBIT1 c_0 f1 c= c==> c= caff_dim * * part cINSERT cvec cNUMERAL c_0 f0 cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 caff_dim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_of_num cdim f0 cint_of_num cNUMERAL cBIT1 c_0 c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 f1
+ (~ (~ (((real_of_num (dim s)) = ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_sub ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim s))))))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim s)))) ((real_add (real_of_num (dim s))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim s)))) ((real_add (real_of_num (dim s))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))))
T c==> c~ c~ c/\ c= creal_of_num cdim f0 creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 c\/ creal_le creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_sub creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim f0 c\/ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim f0 creal_add creal_of_num cdim f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim f0 creal_add creal_of_num cdim f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\q'. ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))) = q')) ==> ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))) = (p' ==> q'))))) q')
T * / c==> c= c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 b0 c= c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c==> f1 b0 f2
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!p'. (!q'. ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))) = q')) ==> ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))) = q')) ==> ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))) = q')) ==> ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 b1 c= c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c==> b0 b1 * / ! c==> c= c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 b1 c= c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c==> b0 b1 f1 * / ! c==> c= c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 b1 c= c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c==> b0 b1 f1
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
+ (~ ((vec (NUMERAL _0)) IN ((hull affine) s))) |- ((((aff_dim ((vec (NUMERAL _0)) INSERT s)) = (((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))))) ==> ((aff_dim s) = ((int_sub (int_of_num (dim s))) (int_of_num (NUMERAL (BIT1 _0)))))) = (((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))))
T c==> c~ cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= c==> c= caff_dim * * part cINSERT cvec cNUMERAL c_0 f0 cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 caff_dim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_of_num cdim f0 cint_of_num cNUMERAL cBIT1 c_0 c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (~ ((vec (NUMERAL _0)) IN ((hull affine) s))) |- ((~ ((vec (NUMERAL _0)) IN ((hull affine) s))) /\ ((aff_dim s) = ((int_sub (int_of_num (dim s))) (int_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c/\ c~ cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= caff_dim f0 cint_sub cint_of_num cdim f0 cint_of_num cNUMERAL cBIT1 c_0
+ (~ ((vec (NUMERAL _0)) IN ((hull affine) s))) |- ((((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = (((COND F) (int_of_num (dim s))) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 caff_dim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cCOND cF cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((\P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s)))))) P)
T * / ! ! c==> cIN b2 b1 cIN b2 * * part chull b0 b1 f0
- |- (((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))) = ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))))) ==> ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))) = (((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))))) = ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))) = (((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c= c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c= c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0
+ |- ((((vec (NUMERAL _0)) IN ((vec (NUMERAL _0)) INSERT s)) ==> (((vec (NUMERAL _0)) IN ((hull affine) ((vec (NUMERAL _0)) INSERT s))) = T)) = (((vec (NUMERAL _0)) IN ((hull affine) ((vec (NUMERAL _0)) INSERT s))) = T))
T c= c==> cIN cvec cNUMERAL c_0 * * part cINSERT cvec cNUMERAL c_0 f0 c= cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 cT c= cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 cT
- |- ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))) = q')) ==> ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))) = (((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> q')))
T c==> c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 f1 c= c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 f1
- |- ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))) = q')) ==> ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))) = (p' ==> q'))))
T c==> c= c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 f2 c= c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c==> f1 f2
+ (~ ((vec (NUMERAL _0)) IN ((hull affine) s))) |- (((F ==> ((aff_dim s) = (int_of_num (dim s)))) ==> (((~ F) ==> (((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = (((COND F) (int_of_num (dim s))) e')))) = (((~ F) ==> (((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = (((COND F) (int_of_num (dim s))) e'))))
T c==> c~ cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= c==> c==> cF c= caff_dim f0 cint_of_num cdim f0 c==> c==> c~ cF c= cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 f1 c= cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 caff_dim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cCOND cF cint_of_num cdim f0 f1 c==> c==> c~ cF c= cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 f1 c= cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 caff_dim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cCOND cF cint_of_num cdim f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((vec (NUMERAL _0)) IN ((hull affine) s)) |- (T = ((vec (NUMERAL _0)) IN ((hull affine) s)))
T c==> cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= cT cIN cvec cNUMERAL c_0 * * part chull part caffine f0
+ |- ((aff_dim ((vec (NUMERAL _0)) INSERT s)) = (int_of_num (dim ((vec (NUMERAL _0)) INSERT s))))
T c= caff_dim * * part cINSERT cvec cNUMERAL c_0 f0 cint_of_num cdim * * part cINSERT cvec cNUMERAL c_0 f0
- ((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) |- (((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) /\ (((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))) = ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))))
T c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c/\ c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0
+ |- ((((aff_dim ((vec (NUMERAL _0)) INSERT s)) = (((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))))) ==> ((aff_dim s) = ((int_sub (int_of_num (dim s))) (int_of_num (NUMERAL (BIT1 _0)))))) = ((aff_dim s) = ((int_sub (int_of_num (dim s))) (int_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= caff_dim * * part cINSERT cvec cNUMERAL c_0 f0 cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 caff_dim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_of_num cdim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_of_num cdim f0 cint_of_num cNUMERAL cBIT1 c_0
+ |- ((vec (NUMERAL _0)) IN ((hull affine) ((vec (NUMERAL _0)) INSERT s)))
T cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- (((vec (NUMERAL _0)) IN ((hull affine) ((vec (NUMERAL _0)) INSERT s))) = T)
T c= cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT cvec cNUMERAL c_0 f0 cT
+ |- (((!s. ((aff_dim ((vec (NUMERAL _0)) INSERT s)) = (((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))))) ==> ((\s. ((aff_dim ((vec (NUMERAL _0)) INSERT s)) = (((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))))) s)) = ((\s. ((aff_dim ((vec (NUMERAL _0)) INSERT s)) = (((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))))) s))
T c= c==> ! c= caff_dim * * part cINSERT cvec cNUMERAL c_0 b0 cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine b0 caff_dim b0 cint_add caff_dim b0 cint_of_num cNUMERAL cBIT1 c_0 * / c= caff_dim * * part cINSERT cvec cNUMERAL c_0 b0 cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine b0 caff_dim b0 cint_add caff_dim b0 cint_of_num cNUMERAL cBIT1 c_0 f0 * / c= caff_dim * * part cINSERT cvec cNUMERAL c_0 b0 cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine b0 caff_dim b0 cint_add caff_dim b0 cint_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
+ ((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) |- (((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) /\ (((aff_dim s) = ((int_sub (int_of_num (dim s))) (int_of_num (NUMERAL (BIT1 _0))))) = ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))))
T c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c/\ c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= c= caff_dim f0 cint_sub cint_of_num cdim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0
+ |- (((((vec (NUMERAL _0)) IN ((hull affine) s)) ==> ((aff_dim s) = (int_of_num (dim s)))) /\ ((~ ((vec (NUMERAL _0)) IN ((hull affine) s))) ==> ((aff_dim s) = ((int_sub (int_of_num (dim s))) (int_of_num (NUMERAL (BIT1 _0))))))) = ((aff_dim s) = (((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (int_of_num (dim s))) ((int_sub (int_of_num (dim s))) (int_of_num (NUMERAL (BIT1 _0)))))))
T c= c/\ c==> cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= caff_dim f0 cint_of_num cdim f0 c==> c~ cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= caff_dim f0 cint_sub cint_of_num cdim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 cint_of_num cdim f0 cint_sub cint_of_num cdim f0 cint_of_num cNUMERAL cBIT1 c_0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ (~ ((vec (NUMERAL _0)) IN ((hull affine) s))) |- (((((vec (NUMERAL _0)) IN ((hull affine) s)) = F) ==> ((F ==> ((aff_dim s) = t')) ==> (((~ F) ==> (((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = (((COND F) t') e'))))) = ((F ==> ((aff_dim s) = t')) ==> (((~ F) ==> (((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = (((COND F) t') e')))))
T c==> c~ cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= c==> c= cIN cvec cNUMERAL c_0 * * part chull part caffine f0 cF c==> c==> cF c= caff_dim f0 f1 c==> c==> c~ cF c= cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 f2 c= cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 caff_dim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cCOND cF f1 f2 c==> c==> cF c= caff_dim f0 f1 c==> c==> c~ cF c= cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 f2 c= cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 caff_dim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cCOND cF f1 f2
+ |- ((~ (~ (((real_of_num (dim s)) = ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_sub ((real_add (real_of_int (aff_dim s))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim s))))))) ==> F)
T c==> c~ c~ c/\ c= creal_of_num cdim f0 creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 c\/ creal_le creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_sub creal_add creal_of_int caff_dim f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim f0 cF
+ |- (((aff_dim s) = (((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (int_of_num (dim s))) ((int_sub (int_of_num (dim s))) (int_of_num (NUMERAL (BIT1 _0)))))) = T)
T c= c= caff_dim f0 cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 cint_of_num cdim f0 cint_sub cint_of_num cdim f0 cint_of_num cNUMERAL cBIT1 c_0 cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!t'. (!e'. ((((vec (NUMERAL _0)) IN ((hull affine) s)) = g') ==> ((g' ==> ((aff_dim s) = t')) ==> (((~ g') ==> (((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((vec (NUMERAL _0)) IN ((hull affine) s)) = g') ==> ((g' ==> ((aff_dim s) = t')) ==> (((~ g') ==> (((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((vec (NUMERAL _0)) IN ((hull affine) s)) = g') ==> ((g' ==> ((aff_dim s) = t')) ==> (((~ g') ==> (((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN cvec cNUMERAL c_0 * * part chull part caffine f0 f1 c==> c==> f1 c= caff_dim f0 b0 c==> c==> c~ f1 c= cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 b1 c= cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 caff_dim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cCOND f1 b0 b1 * / ! c==> c= cIN cvec cNUMERAL c_0 * * part chull part caffine f0 f1 c==> c==> f1 c= caff_dim f0 b0 c==> c==> c~ f1 c= cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 b1 c= cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 caff_dim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cCOND f1 b0 b1 f2 * / ! c==> c= cIN cvec cNUMERAL c_0 * * part chull part caffine f0 f1 c==> c==> f1 c= caff_dim f0 b0 c==> c==> c~ f1 c= cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 b1 c= cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 caff_dim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cCOND f1 b0 b1 f2
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- (((!q'. ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))) = q')) ==> ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))) = (p' ==> q'))))) ==> ((\q'. ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))) = q')) ==> ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))) = (p' ==> q'))))) q')) = ((\q'. ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))) = q')) ==> ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 b0 c= c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c==> f1 b0 * / c==> c= c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 b0 c= c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c==> f1 b0 f2 * / c==> c= c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 b0 c= c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c==> f1 b0 f2
+ |- ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x)
T * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0
- (~ F) |- ((F = F) = T)
T c==> c~ cF c= c= cF cF cT
+ |- ((~ F) ==> (((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ cF c= cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((\t'. (!e'. ((((vec (NUMERAL _0)) IN ((hull affine) s)) = g') ==> ((g' ==> ((aff_dim s) = t')) ==> (((~ g') ==> (((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cIN cvec cNUMERAL c_0 * * part chull part caffine f0 f1 c==> c==> f1 c= caff_dim f0 b0 c==> c==> c~ f1 c= cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 b1 c= cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 caff_dim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cCOND f1 b0 b1 f2
- |- ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))) = T)
T c= c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 cT
+ |- ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y)
T * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1
+ |- (((!e'. ((((vec (NUMERAL _0)) IN ((hull affine) s)) = g') ==> ((g' ==> ((aff_dim s) = t')) ==> (((~ g') ==> (((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))) ==> ((\e'. ((((vec (NUMERAL _0)) IN ((hull affine) s)) = g') ==> ((g' ==> ((aff_dim s) = t')) ==> (((~ g') ==> (((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))) e')) = ((\e'. ((((vec (NUMERAL _0)) IN ((hull affine) s)) = g') ==> ((g' ==> ((aff_dim s) = t')) ==> (((~ g') ==> (((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cIN cvec cNUMERAL c_0 * * part chull part caffine f0 f1 c==> c==> f1 c= caff_dim f0 f2 c==> c==> c~ f1 c= cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 b0 c= cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 caff_dim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cCOND f1 f2 b0 * / c==> c= cIN cvec cNUMERAL c_0 * * part chull part caffine f0 f1 c==> c==> f1 c= caff_dim f0 f2 c==> c==> c~ f1 c= cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 b0 c= cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 caff_dim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cCOND f1 f2 b0 f3 * / c==> c= cIN cvec cNUMERAL c_0 * * part chull part caffine f0 f1 c==> c==> f1 c= caff_dim f0 f2 c==> c==> c~ f1 c= cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 b0 c= cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 caff_dim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cCOND f1 f2 b0 f3
+ (~ ((vec (NUMERAL _0)) IN ((hull affine) s))) |- (((vec (NUMERAL _0)) IN ((hull affine) s)) = F)
T c==> c~ cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= cIN cvec cNUMERAL c_0 * * part chull part caffine f0 cF
+ F |- (F = T)
T c==> cF c= cF cT
+ F, (~ ((vec (NUMERAL _0)) IN ((hull affine) s))) |- (F /\ ((aff_dim s) = (int_of_num (dim s))))
T c==> cF c==> c~ cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c/\ cF c= caff_dim f0 cint_of_num cdim f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((aff_dim ((vec (NUMERAL _0)) INSERT s)) = (((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))))) = p') ==> ((p' ==> (((aff_dim s) = ((int_sub (int_of_num (dim s))) (int_of_num (NUMERAL (BIT1 _0))))) = q')) ==> ((((aff_dim ((vec (NUMERAL _0)) INSERT s)) = (((COND ((vec (NUMERAL _0)) IN ((hull affine) s))) (aff_dim s)) ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))))) ==> ((aff_dim s) = ((int_sub (int_of_num (dim s))) (int_of_num (NUMERAL (BIT1 _0)))))) = (p' ==> q'))))
T c==> c= c= caff_dim * * part cINSERT cvec cNUMERAL c_0 f0 cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 caff_dim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= caff_dim f0 cint_sub cint_of_num cdim f0 cint_of_num cNUMERAL cBIT1 c_0 f2 c= c==> c= caff_dim * * part cINSERT cvec cNUMERAL c_0 f0 cCOND cIN cvec cNUMERAL c_0 * * part chull part caffine f0 caff_dim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_of_num cdim f0 cint_of_num cNUMERAL cBIT1 c_0 c==> f1 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p'. (!q'. ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))) = q')) ==> ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))) = (p' ==> q')))))) p')
T * / ! c==> c= c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 b1 c= c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c==> b0 b1 f1
- (~ ((vec (NUMERAL _0)) IN ((hull affine) s))) |- (F = ((vec (NUMERAL _0)) IN ((hull affine) s)))
T c==> c~ cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= cF cIN cvec cNUMERAL c_0 * * part chull part caffine f0
- ((vec (NUMERAL _0)) IN ((hull affine) s)) |- (T = ((aff_dim s) = (int_of_num (dim s))))
T c==> cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= cT c= caff_dim f0 cint_of_num cdim f0
- |- (((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) = ((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))))) ==> ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))) = q')) ==> ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))) = (((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> q')))) = ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))) = q')) ==> ((((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))) = (((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> q'))))
T c= c==> c= c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c==> c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 f1 c= c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 f1 c= c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((vec (NUMERAL _0)) IN ((hull affine) s)) |- (((aff_dim s) = (int_of_num (dim s))) = ((aff_dim s) = (int_of_num (dim s))))
T c==> cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= c= caff_dim f0 cint_of_num cdim f0 c= caff_dim f0 cint_of_num cdim f0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((int_of_num (dim s)) = ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))) = ((aff_dim s) = ((int_sub ((int_add (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))))
T c==> c= cint_of_num cdim f0 cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 c= c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_add caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0
- (~ F) |- (F = F)
T c==> c~ cF c= cF cF
- (~ ((vec (NUMERAL _0)) IN ((hull affine) s))) |- (((aff_dim s) = ((int_sub (int_of_num (dim s))) (int_of_num (NUMERAL (BIT1 _0))))) = ((aff_dim s) = ((int_sub (int_of_num (dim s))) (int_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= c= caff_dim f0 cint_sub cint_of_num cdim f0 cint_of_num cNUMERAL cBIT1 c_0 c= caff_dim f0 cint_sub cint_of_num cdim f0 cint_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((vec (NUMERAL _0)) IN ((hull affine) s)) |- (((vec (NUMERAL _0)) IN ((hull affine) s)) = T)
T c==> cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= cIN cvec cNUMERAL c_0 * * part chull part caffine f0 cT
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((vec (NUMERAL _0)) IN ((hull affine) s)) |- (((vec (NUMERAL _0)) IN ((hull affine) s)) /\ ((aff_dim s) = (int_of_num (dim s))))
T c==> cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine f0 c= caff_dim f0 cint_of_num cdim f0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
