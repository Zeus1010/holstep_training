N Lp_ineqs_proofs.faces_add_diag
C |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> (!v. (!w. (((v , w) IN (dart_of_fan (V , E))) ==> ((LET (\H2. (LET_END ((LET (\H. (LET_END ((LET (\w'. (LET_END ((face_set H2) = ((((face H2) (v , w)) INSERT (((face H2) (w' , w)) INSERT EMPTY)) UNION ((face_set H) DELETE ((face H) (v , w)))))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w))))) (hypermap_of_fan (V , E)))))) (hypermap_of_fan (V , ((add_diag (V , E)) (v , w))))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 ! ! c==> cIN c, b0 b1 * part cdart_of_fan c, f0 f1 cLET / cLET_END cLET / cLET_END cLET / cLET_END c= * part cface_set b2 * * part cUNION * * part cINSERT * * part cface b2 c, b0 b1 * * part cINSERT * * part cface b2 c, b4 b1 part cEMPTY * * part cDELETE * part cface_set b3 * * part cface b3 c, b0 b1 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 chypermap_of_fan c, f0 f1 chypermap_of_fan c, f0 * * part cadd_diag c, f0 f1 c, b0 b1
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D pair_INDUCT
A |- (!P. ((!x. (!y. (P (x , y)))) ==> (!p. (P p))))
T c==> ! ! * f0 c, b0 b1 ! * f0 b0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D IN_UNION
A |- (!s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))))
T c= cIN f0 * * part cUNION f1 f2 c\/ cIN f0 f1 cIN f0 f2
D IN_DIFF
A |- (!s. (!t. (!x. ((x IN (s DIFF t)) = ((x IN s) /\ (~ (x IN t)))))))
T c= cIN f0 * * part cDIFF f1 f2 c/\ cIN f0 f1 c~ cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D IN_DELETE
A |- (!s. (!x. (!y. ((x IN (s DELETE y)) = ((x IN s) /\ (~ (x = y)))))))
T c= cIN f0 * * part cDELETE f1 f2 c/\ cIN f0 f1 c~ c= f0 f2
D IN_SING
A |- (!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y))))
T c= cIN f0 * * part cINSERT f1 part cEMPTY c= f0 f1
D Hypermap.lemma_face_identity
A |- (!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))))
T c==> cIN f0 * * part cface f1 f2 c= * * part cface f1 f2 * * part cface f1 f0
D Hypermap.lemma_in_face_set
A |- (!H. (!x. ((x IN (dart H)) = (((face H) x) IN (face_set H)))))
T c= cIN f0 * part cdart f1 cIN * * part cface f1 f0 * part cface_set f1
D Hypermap.lemma_face_representation
A |- (!H. (!u. ((u IN (face_set H)) ==> (?x. ((x IN (dart H)) /\ (u = ((face H) x)))))))
T c==> cIN f0 * part cface_set f1 c? / c/\ cIN b0 * part cdart f1 c= f0 * * part cface f1 b0
D Hypermap.lemma_different_faces
A |- (!H. (!x. (!y. ((~ (x IN ((face H) y))) ==> (~ (((face H) x) = ((face H) y)))))))
T c==> c~ cIN f0 * * part cface f1 f2 c~ c= * * part cface f1 f0 * * part cface f1 f2
D Hypermap_and_fan.COMPONENTS_HYPERMAP_OF_FAN
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((dart (hypermap_of_fan (V , E))) = (dart_of_fan (V , E))) /\ (((edge_map (hypermap_of_fan (V , E))) = (e_fan_pair_ext (V , E))) /\ (((node_map (hypermap_of_fan (V , E))) = (n_fan_pair_ext (V , E))) /\ ((face_map (hypermap_of_fan (V , E))) = (f_fan_pair_ext (V , E)))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ c= * part cdart chypermap_of_fan c, f0 f1 * part cdart_of_fan c, f0 f1 c/\ c= * part cedge_map chypermap_of_fan c, f0 f1 * part ce_fan_pair_ext c, f0 f1 c/\ c= * part cnode_map chypermap_of_fan c, f0 f1 * part cn_fan_pair_ext c, f0 f1 c= * part cface_map chypermap_of_fan c, f0 f1 * part cf_fan_pair_ext c, f0 f1
D ssreflect_eq_def
A |- (!v. (!P. (((ssreflect_eq v) P) = P)))
T c= cssreflect_eq f0 f1 f1
D bool_elim
A |- (!P. (((P T) /\ (P F)) ==> (!x. (P x))))
T c==> c/\ * f0 cT * f0 cF ! * f0 b0
D Ssrbool.contraNN
A |- (!c. (!b. ((c ==> b) ==> ((~ b) ==> (~ c)))))
T c==> c==> f0 f1 c==> c~ f1 c~ f0
D Ssrbool.andTb
A |- (!b. ((T /\ b) = b))
T c= c/\ cT f0 f0
D Ssrbool.orbC
A |- (!b. (!c. ((b \/ c) = (c \/ b))))
T c= c\/ f0 f1 c\/ f1 f0
D Ssrbool.orbA
A |- (!b. (!c. (!p. ((b \/ (c \/ p)) = ((b \/ c) \/ p)))))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
D Ssrbool.orNb
A |- (!b. ((~ b) \/ b))
T c\/ c~ f0 f0
D Add_triangle.split_fan_face
A |- (!V. (!v. (!w. (!E. (((split_fan_face (V , E)) (v , w)) = (V , ((w INSERT ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) INSERT EMPTY)) INSERT E)))))))
T c= csplit_fan_face c, f0 f1 c, f2 f3 c, f0 * * part cINSERT * * part cINSERT f3 * * part cINSERT csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 part cEMPTY f1
D Add_triangle.dart1_switch
A |- (!V. (!E. (!v. (!w. (((v , w) IN (dart1_of_fan (V , E))) = ((w , v) IN (dart1_of_fan (V , E))))))))
T c= cIN c, f0 f1 * part cdart1_of_fan c, f2 f3 cIN c, f1 f0 * part cdart1_of_fan c, f2 f3
D Add_triangle.fully_surrounded_dart_of_fan_eq
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((dart_of_fan (V , E)) = (dart1_of_fan (V , E)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c= * part cdart_of_fan c, f0 f1 * part cdart1_of_fan c, f0 f1
D Add_triangle.split_fan_face_eq
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (!d. (((d IN (dart_of_fan (V , E))) /\ ((CARD ((face (hypermap_of_fan (V , E))) d)) = (NUMERAL (BIT1 (BIT1 _0))))) ==> (((split_fan_face (V , E)) d) = (V , E)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 ! c==> c/\ cIN b0 * part cdart_of_fan c, f0 f1 c= cCARD * * part cface chypermap_of_fan c, f0 f1 b0 cNUMERAL cBIT1 cBIT1 c_0 c= csplit_fan_face c, f0 f1 b0 c, f0 f1
D Add_triangle.f_fan_pair3
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (!v. (!w. ((((v , w) IN (dart1_of_fan (V , E))) /\ ((CARD ((face (hypermap_of_fan (V , E))) (v , w))) = (NUMERAL (BIT1 (BIT1 _0))))) ==> ((((f_fan_pair (V , E)) (v , w)) = (w , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w))) /\ ((((f_fan_pair (V , E)) (w , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w))) = ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) , v)) /\ ((((f_fan_pair (V , E)) ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) , v)) = (v , w)) /\ ((w , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) IN (dart1_of_fan (V , E))))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 ! ! c==> c/\ cIN c, b0 b1 * part cdart1_of_fan c, f0 f1 c= cCARD * * part cface chypermap_of_fan c, f0 f1 c, b0 b1 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cf_fan_pair c, f0 f1 c, b0 b1 c, b1 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 c/\ c= cf_fan_pair c, f0 f1 c, b1 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 c, csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 b0 c/\ c= cf_fan_pair c, f0 f1 c, csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 b0 c, b0 b1 cIN c, b1 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 * part cdart1_of_fan c, f0 f1
D Add_triangle.fully_surrounded_card_face_alt
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> (((CARD ((face (hypermap_of_fan (V , E))) d)) = (NUMERAL (BIT1 (BIT1 _0)))) \/ ((NUMERAL (BIT1 (BIT1 _0))) < (CARD ((face (hypermap_of_fan (V , E))) d))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 ! c==> cIN b0 * part cdart_of_fan c, f0 f1 c\/ c= cCARD * * part cface chypermap_of_fan c, f0 f1 b0 cNUMERAL cBIT1 cBIT1 c_0 c< cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_fan c, f0 f1 b0
D Add_triangle.fan_split_fan_face
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> (!v. (!w. (((v , w) IN (dart_of_fan (V , E))) ==> ((FAN ((vec (NUMERAL _0)) , ((split_fan_face (V , E)) (v , w)))) /\ (((dart_of_fan ((split_fan_face (V , E)) (v , w))) = ((dart1_of_fan (V , E)) UNION (((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) , w) INSERT ((w , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) INSERT EMPTY)))) /\ (fully_surrounded ((split_fan_face (V , E)) (v , w))))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 ! ! c==> cIN c, b0 b1 * part cdart_of_fan c, f0 f1 c/\ cFAN c, cvec cNUMERAL c_0 csplit_fan_face c, f0 f1 c, b0 b1 c/\ c= * part cdart_of_fan csplit_fan_face c, f0 f1 c, b0 b1 * * part cUNION * part cdart1_of_fan c, f0 f1 * * part cINSERT c, csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 b1 * * part cINSERT c, b1 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 part cEMPTY cfully_surrounded csplit_fan_face c, f0 f1 c, b0 b1
D Add_triangle.face_split_fan_face
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> (!v. (!w. (!d. ((((v , w) IN (dart_of_fan (V , E))) /\ ((d IN (dart_of_fan (V , E))) /\ (~ (d IN ((face (hypermap_of_fan (V , E))) (v , w)))))) ==> (((face (hypermap_of_fan ((split_fan_face (V , E)) (v , w)))) d) = ((face (hypermap_of_fan (V , E))) d))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 ! ! ! c==> c/\ cIN c, b0 b1 * part cdart_of_fan c, f0 f1 c/\ cIN b2 * part cdart_of_fan c, f0 f1 c~ cIN b2 * * part cface chypermap_of_fan c, f0 f1 c, b0 b1 c= * * part cface chypermap_of_fan csplit_fan_face c, f0 f1 c, b0 b1 b2 * * part cface chypermap_of_fan c, f0 f1 b2
D Add_triangle.face_split_fan_face_explicit
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> (!v. (!w. ((((LET (\w'. (\H. (\H2. (LET_END ((((v , w) IN (dart_of_fan (V , E))) /\ ((NUMERAL (BIT1 (BIT1 _0))) < (CARD ((face H) (v , w))))) ==> (((((face H2) (v , w)) = ((v , w) INSERT ((w , w') INSERT ((w' , v) INSERT EMPTY)))) /\ (((face H2) (w' , w)) = ((w' , w) INSERT (((face H) (v , w)) DIFF ((v , w) INSERT ((w' , v) INSERT EMPTY)))))) /\ ((((CARD ((face H2) (v , w))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((CARD ((face H2) (w' , w))) = ((CARD ((face H) (v , w))) - (NUMERAL (BIT1 _0))))) /\ ((((v , w) IN ((face H) (v , w))) /\ (((w' , v) IN ((face H) (v , w))) /\ (~ ((w' , w) IN ((face H) (v , w)))))) /\ ((~ (w' = w)) /\ ((~ (v = w)) /\ (~ (v = w'))))))))))))) (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) (hypermap_of_fan (V , E))) (hypermap_of_fan ((split_fan_face (V , E)) (v , w))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 ! ! cLET / / / cLET_END c==> c/\ cIN c, b0 b1 * part cdart_of_fan c, f0 f1 c< cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface b3 c, b0 b1 c/\ c/\ c= * * part cface b4 c, b0 b1 * * part cINSERT c, b0 b1 * * part cINSERT c, b1 b2 * * part cINSERT c, b2 b0 part cEMPTY c= * * part cface b4 c, b2 b1 * * part cINSERT c, b2 b1 * * part cDIFF * * part cface b3 c, b0 b1 * * part cINSERT c, b0 b1 * * part cINSERT c, b2 b0 part cEMPTY c/\ c/\ c= cCARD * * part cface b4 c, b0 b1 cNUMERAL cBIT1 cBIT1 c_0 c= cCARD * * part cface b4 c, b2 b1 c- cCARD * * part cface b3 c, b0 b1 cNUMERAL cBIT1 c_0 c/\ c/\ cIN c, b0 b1 * * part cface b3 c, b0 b1 c/\ cIN c, b2 b0 * * part cface b3 c, b0 b1 c~ cIN c, b2 b1 * * part cface b3 c, b0 b1 c/\ c~ c= b2 b1 c/\ c~ c= b0 b1 c~ c= b0 b2 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 chypermap_of_fan c, f0 f1 chypermap_of_fan csplit_fan_face c, f0 f1 c, b0 b1
D Lp_ineqs_proofs.add_diag
A |- (!V. (!v. (!w. (!E. (((add_diag (V , E)) (v , w)) = (((COND ((v , w) IN (dart1_of_fan (V , E)))) ((w INSERT ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) INSERT EMPTY)) INSERT E)) E))))))
T c= * * part cadd_diag c, f0 f1 c, f2 f3 * * * part cCOND cIN c, f2 f3 * part cdart1_of_fan c, f0 f1 * * part cINSERT * * part cINSERT f3 * * part cINSERT csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 part cEMPTY f1 f1
