N Seq.perm_eqP
C |- (!s1. (!s2. (((perm_eq s1) s2) = (!a. (((count a) s1) = ((count a) s2))))))
T c= cperm_eq f0 f1 ! c= ccount b0 f0 ccount b0 f1
D TRUTH
A |- T
T cT
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D LT_SUC_LE
A |- (!m. (!n. ((m < (SUC n)) = (m <= n))))
T c= c< f0 cSUC f1 c<= f0 f1
D Ssrnat.leq_trans
A |- (!n. (!m. (!p. ((m <= n) ==> ((n <= p) ==> (m <= p))))))
T c==> c<= f0 f1 c==> c<= f1 f2 c<= f0 f2
D Hypermap.LT_PLUS
A |- (!n. (n < (SUC n)))
T c< f0 cSUC f0
D Ssrbool.predI
A |- (!p1. (!p2. (((predI p1) p2) = (\x. ((p1 x) /\ (p2 x))))))
T c= * * part cpredI f0 f1 / c/\ * f0 b0 * f1 b0
D Ssrbool.predC
A |- (!p. ((predC p) = (\x. (~ (p x)))))
T c= * part cpredC f0 / c~ * f0 b0
D Ssrbool.predD
A |- (!p2. (!p1. (((predD p1) p2) = (\x. ((~ (p2 x)) /\ (p1 x))))))
T c= * * part cpredD f0 f1 / c/\ c~ * f1 b0 * f0 b0
D Ssrnat.add1n
A |- (!n. (((NUMERAL (BIT1 _0)) + n) = (SUC n)))
T c= c+ cNUMERAL cBIT1 c_0 f0 cSUC f0
D Ssrnat.eqn_addr
A |- (!p. (!m. (!n. (((m + p) = (n + p)) = (m = n)))))
T c= c= c+ f0 f1 c+ f2 f1 c= f0 f2
D Ssrnat.ltn0
A |- (!n. ((n < (NUMERAL _0)) = F))
T c= c< f0 cNUMERAL c_0 cF
D Ssrnat.ltE
A |- (!n. (!m. ((n < m) = ((SUC n) <= m))))
T c= c< f0 f1 c<= cSUC f0 f1
D Ssrnat.posnP
A |- (!n. ((n = (NUMERAL _0)) \/ ((NUMERAL _0) < n)))
T c\/ c= f0 cNUMERAL c_0 c< cNUMERAL c_0 f0
D Ssrnat.leq_add2r
A |- (!p. (!m. (!n. (((m + p) <= (n + p)) = (m <= n)))))
T c= c<= c+ f0 f1 c+ f2 f1 c<= f0 f2
D Seq.count_filter
A |- (!a. (!s. (((count a) s) = (sizel ((filter a) s)))))
T c= ccount f0 f1 csizel cfilter f0 f1
D Seq.has_count
A |- (!a. (!s. (((has a) s) = ((NUMERAL _0) < ((count a) s)))))
T c= chas f0 f1 c< cNUMERAL c_0 ccount f0 f1
D Seq.count_cat
A |- (!a. (!s1. (!s2. (((count a) ((cat s1) s2)) = (((count a) s1) + ((count a) s2))))))
T c= ccount f0 ccat f1 f2 c+ ccount f0 f1 ccount f0 f2
D Seq.pred1
A |- (!a. ((pred1 a) = (\x. (x = a))))
T c= * part cpred1 f0 / c= b0 f0
D Seq.predD1
A |- (!a. (!x. (((predD1 a) x) = ((predD a) (pred1 x)))))
T c= * * part cpredD1 f0 f1 * * part cpredD f0 * part cpred1 f1
D Seq.eq_count
A |- (!a1. (!a2. ((!x. ((a1 x) = (a2 x))) ==> (!s. (((count a1) s) = ((count a2) s))))))
T c==> ! c= * f0 b0 * f1 b0 ! c= ccount f0 b0 ccount f1 b0
D Seq.filter_predI
A |- (!a1. (!a2. (!s. (((filter ((predI a1) a2)) s) = ((filter a1) ((filter a2) s))))))
T c= cfilter * * part cpredI f0 f1 f2 cfilter f0 cfilter f1 f2
D Seq.count_predC
A |- (!a. (!s. ((((count a) s) + ((count (predC a)) s)) = (sizel s))))
T c= c+ ccount f0 f1 ccount * part cpredC f0 f1 csizel f1
D Seq.hasP
A |- (!a. (!s. ((?x. (((MEM x) s) /\ (a x))) = ((has a) s))))
T c= c? / c/\ cMEM b0 f0 * f1 b0 chas f1 f0
D Seq.allP
A |- (!a. (!s. ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))))
T c= ! c==> cMEM b0 f0 * f1 b0 call f1 f0
D Seq.has_pred1
A |- (!x. (!s. (((has (pred1 x)) s) = ((MEM x) s))))
T c= chas * part cpred1 f0 f1 cMEM f0 f1
D Seq.same_count1
A |- (!s1. (!x. (!s2. ((((same_count1 s1) s2) x) = (((count (pred1 x)) s1) = ((count (pred1 x)) s2))))))
T c= csame_count1 f0 f1 f2 c= ccount * part cpred1 f2 f0 ccount * part cpred1 f2 f1
D Seq.perm_eq
A |- (!s1. (!s2. (((perm_eq s1) s2) = ((all ((same_count1 s1) s2)) ((cat s1) s2)))))
T c= cperm_eq f0 f1 call * * part csame_count1 f0 f1 ccat f0 f1
- (!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))), (a = a1) |- ((((count a1) ((cat s1) s2)) < (SUC ((count a1) ((cat s1) s2)))) ==> (((count a1) s1) = ((count a1) s2)))
T c==> ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 c==> c= f2 f3 c==> c< ccount f3 ccat f0 f1 cSUC ccount f3 ccat f0 f1 c= ccount f3 f0 ccount f3 f1
+ |- ((((SUC ((count a) ((cat s1) s2))) <= (SUC n)) ==> ((SUC ((count a') ((cat s1) s2))) < (SUC n))) = ((((count a) ((cat s1) s2)) < (SUC n)) ==> ((SUC ((count a') ((cat s1) s2))) < (SUC n))))
T c= c==> c<= cSUC ccount f0 ccat f1 f2 cSUC f3 c< cSUC ccount f4 ccat f1 f2 cSUC f3 c==> c< ccount f0 ccat f1 f2 cSUC f3 c< cSUC ccount f4 ccat f1 f2 cSUC f3
+ (a x) |- (!s. (((count ((predI (pred1 x)) a)) s) = ((count (pred1 x)) s)))
T c==> * f0 f1 ! c= ccount * * part cpredI * part cpred1 f1 f0 b0 ccount * part cpred1 f1 b0
+ |- (((SUC ((count a') ((cat s1) s2))) < (SUC ((count a) ((cat s1) s2)))) = ((SUC (SUC ((count a') ((cat s1) s2)))) <= (SUC ((count a) ((cat s1) s2)))))
T c= c< cSUC ccount f0 ccat f1 f2 cSUC ccount f3 ccat f1 f2 c<= cSUC cSUC ccount f0 ccat f1 f2 cSUC ccount f3 ccat f1 f2
+ (((predD1 a) x) = a') |- (((((count ((predI (pred1 x)) a)) s) + ((count a') s)) = (((count (pred1 x)) s) + ((count a') s))) = ((((count ((predI (pred1 x)) a)) s) + ((count ((predD1 a) x)) s)) = (((count (pred1 x)) s) + ((count a') s))))
T c==> c= * * part cpredD1 f0 f1 f2 c= c= c+ ccount * * part cpredI * part cpred1 f1 f0 f3 ccount f2 f3 c+ ccount * part cpred1 f1 f3 ccount f2 f3 c= c+ ccount * * part cpredI * part cpred1 f1 f0 f3 ccount * * part cpredD1 f0 f1 f3 c+ ccount * part cpred1 f1 f3 ccount f2 f3
- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) |- ((((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))) = T)
T c==> ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 c= c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0 cT
+ (a x) |- (((\x'. (((\x'. (x' = x)) x') /\ (a x'))) y) = ((\x'. (x' = x)) y))
T c==> * f0 f1 c= * / c/\ * / c= b1 f1 b0 * f0 b0 f2 * / c= b0 f1 f2
+ |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0
+ (!n. (!m. (!p. ((m <= n) ==> ((n <= p) ==> (m <= p)))))) |- (((!p. ((m <= n) ==> ((n <= p) ==> (m <= p)))) ==> ((\p. ((m <= n) ==> ((n <= p) ==> (m <= p)))) p)) = ((\p. ((m <= n) ==> ((n <= p) ==> (m <= p)))) p))
T c==> ! ! ! c==> c<= b1 b0 c==> c<= b0 b2 c<= b1 b2 c= c==> ! c==> c<= f0 f1 c==> c<= f1 b0 c<= f0 b0 * / c==> c<= f0 f1 c==> c<= f1 b0 c<= f0 b0 f2 * / c==> c<= f0 f1 c==> c<= f1 b0 c<= f0 b0 f2
+ |- ((\x. (!s. (((has (pred1 x)) s) = ((MEM x) s)))) x)
T * / ! c= chas * part cpred1 b0 b1 cMEM b0 b1 f0
+ |- ((\s1. (!x. (!s2. ((((same_count1 s1) s2) x) = (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))))) s1)
T * / ! ! c= csame_count1 b0 b2 b1 c= ccount * part cpred1 b1 b0 ccount * part cpred1 b1 b2 f0
- (!n. (!m. (!p. ((m <= n) ==> ((n <= p) ==> (m <= p)))))) |- ((!m. (!p. ((m <= n) ==> ((n <= p) ==> (m <= p))))) = T)
T c==> ! ! ! c==> c<= b1 b0 c==> c<= b0 b2 c<= b1 b2 c= ! ! c==> c<= b0 f0 c==> c<= f0 b1 c<= b0 b1 cT
- (!a1. (!a2. ((!x. ((a1 x) = (a2 x))) ==> (!s. (((count a1) s) = ((count a2) s)))))) |- (((!x. ((a1 x) = (a2 x))) ==> (!s. (((count a1) s) = ((count a2) s)))) = T)
T c==> ! ! c==> ! c= * b0 b2 * b1 b2 ! c= ccount b0 b2 ccount b1 b2 c= c==> ! c= * f0 b0 * f1 b0 ! c= ccount f0 b0 ccount f1 b0 cT
+ |- (((!a1. ((((count a1) ((cat s1) s2)) < (NUMERAL _0)) ==> (((count a1) s1) = ((count a1) s2)))) /\ (!x. ((!a1. ((((count a1) ((cat s1) s2)) < x) ==> (((count a1) s1) = ((count a1) s2)))) ==> (!a1. ((((count a1) ((cat s1) s2)) < (SUC x)) ==> (((count a1) s1) = ((count a1) s2))))))) ==> (!x. (!a1. ((((count a1) ((cat s1) s2)) < x) ==> (((count a1) s1) = ((count a1) s2))))))
T c==> c/\ ! c==> c< ccount b0 ccat f0 f1 cNUMERAL c_0 c= ccount b0 f0 ccount b0 f1 ! c==> ! c==> c< ccount b1 ccat f0 f1 b0 c= ccount b1 f0 ccount b1 f1 ! c==> c< ccount b1 ccat f0 f1 cSUC b0 c= ccount b1 f0 ccount b1 f1 ! ! c==> c< ccount b1 ccat f0 f1 b0 c= ccount b1 f0 ccount b1 f1
+ (!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))), (!a1. ((((count a1) ((cat s1) s2)) < n) ==> (((count a1) s1) = ((count a1) s2)))), (a x), (((count a) ((cat s1) s2)) < (SUC n)), ((MEM x) ((cat s1) s2)) |- ((((predD1 a) x) = a') ==> (((count a) s1) = ((count a) s2)))
T c==> ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 c==> ! c==> c< ccount b0 ccat f0 f1 f2 c= ccount b0 f0 ccount b0 f1 c==> * f3 f4 c==> c< ccount f3 ccat f0 f1 cSUC f2 c==> cMEM f4 ccat f0 f1 c==> c= * * part cpredD1 f3 f4 f5 c= ccount f3 f0 ccount f3 f1
- (a x), (y = x) |- ((y = x) /\ ((a y) ==> (y = x)))
T c==> * f0 f1 c==> c= f2 f1 c/\ c= f2 f1 c==> * f0 f2 c= f2 f1
+ (y = x) |- (((x = x) /\ (a y)) = ((y = x) /\ (a y)))
T c==> c= f0 f1 c= c/\ c= f1 f1 * f2 f0 c/\ c= f0 f1 * f2 f0
- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))) |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c==> c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0 c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
+ (((all a) s) = (!x. (((MEM x) s) ==> (a x)))) |- ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))
T c==> c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0 c= ! c==> cMEM b0 f1 * f0 b0 call f0 f1
+ (!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))), ((MEM x) ((cat s1) s2)) |- (((count (pred1 x)) s1) = ((count (pred1 x)) s2))
T c==> ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 c==> cMEM f2 ccat f0 f1 c= ccount * part cpred1 f2 f0 ccount * part cpred1 f2 f1
+ |- ((\n. ((m <= n) = (m < (SUC n)))) n)
T * / c= c<= f0 b0 c< f0 cSUC b0 f1
- |- ((?x. ((SUC ((count a) ((cat s1) s2))) = x)) ==> (?x. ((SUC ((count a) ((cat s1) s2))) = x)))
T c==> c? / c= cSUC ccount f0 ccat f1 f2 b0 c? / c= cSUC ccount f0 ccat f1 f2 b0
+ |- (((!s. (((has a) s) = (?x. (((MEM x) s) /\ (a x))))) ==> ((\s. (((has a) s) = (?x. (((MEM x) s) /\ (a x))))) s)) = ((\s. (((has a) s) = (?x. (((MEM x) s) /\ (a x))))) s))
T c= c==> ! c= chas f0 b0 c? / c/\ cMEM b1 b0 * f0 b1 * / c= chas f0 b0 c? / c/\ cMEM b1 b0 * f0 b1 f1 * / c= chas f0 b0 c? / c/\ cMEM b1 b0 * f0 b1 f1
+ (!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))), (!a1. ((((count a1) ((cat s1) s2)) < n) ==> (((count a1) s1) = ((count a1) s2)))), (((MEM x) ((cat s1) s2)) /\ (a x)), (((count a) ((cat s1) s2)) < (SUC n)) |- ((((MEM x) ((cat s1) s2)) /\ (a x)) /\ (((count a) s1) = ((count a) s2)))
T c==> ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 c==> ! c==> c< ccount b0 ccat f0 f1 f2 c= ccount b0 f0 ccount b0 f1 c==> c/\ cMEM f3 ccat f0 f1 * f4 f3 c==> c< ccount f4 ccat f0 f1 cSUC f2 c/\ c/\ cMEM f3 ccat f0 f1 * f4 f3 c= ccount f4 f0 ccount f4 f1
+ (!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))), (!a1. ((((count a1) ((cat s1) s2)) < n) ==> (((count a1) s1) = ((count a1) s2)))), (((count a) ((cat s1) s2)) < (SUC n)) |- ((((count a) ((cat s1) s2)) < (SUC n)) /\ (((count a) s1) = ((count a) s2)))
T c==> ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 c==> ! c==> c< ccount b0 ccat f0 f1 f2 c= ccount b0 f0 ccount b0 f1 c==> c< ccount f3 ccat f0 f1 cSUC f2 c/\ c< ccount f3 ccat f0 f1 cSUC f2 c= ccount f3 f0 ccount f3 f1
+ |- ((\a. ((pred1 a) = (\x. (x = a)))) a)
T * / c= * part cpred1 b0 / c= b1 b0 f0
+ (a x) |- ((\s. (((count ((predI (pred1 x)) a)) s) = ((count (pred1 x)) s))) s3)
T c==> * f0 f1 * / c= ccount * * part cpredI * part cpred1 f1 f0 b0 ccount * part cpred1 f1 b0 f2
+ |- (((!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) ==> ((\P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) P)) = ((\P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) P))
T c= c==> ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 * / c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 f0 * / c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 f0
+ (!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))), (!a1. ((((count a1) ((cat s1) s2)) < n) ==> (((count a1) s1) = ((count a1) s2)))), ((((count a) ((cat s1) s2)) = (NUMERAL _0)) \/ ((NUMERAL _0) < ((count a) ((cat s1) s2)))), (((count a) ((cat s1) s2)) < (SUC n)) |- (((count a) s1) = ((count a) s2))
T c==> ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 c==> ! c==> c< ccount b0 ccat f0 f1 f2 c= ccount b0 f0 ccount b0 f1 c==> c\/ c= ccount f3 ccat f0 f1 cNUMERAL c_0 c< cNUMERAL c_0 ccount f3 ccat f0 f1 c==> c< ccount f3 ccat f0 f1 cSUC f2 c= ccount f3 f0 ccount f3 f1
+ (!s. (((count a) s) = (((count (pred1 x)) s) + ((count a') s)))) |- (((SUC ((count a') ((cat s1) s2))) <= (((count (pred1 x)) ((cat s1) s2)) + ((count a') ((cat s1) s2)))) = ((SUC ((count a') ((cat s1) s2))) <= ((count a) ((cat s1) s2))))
T c==> ! c= ccount f0 b0 c+ ccount * part cpred1 f1 b0 ccount f2 b0 c= c<= cSUC ccount f2 ccat f3 f4 c+ ccount * part cpred1 f1 ccat f3 f4 ccount f2 ccat f3 f4 c<= cSUC ccount f2 ccat f3 f4 ccount f0 ccat f3 f4
+ |- (((predI (\x'. (~ ((pred1 x) x')))) a) = ((predD1 a) x))
T c= * * part cpredI / c~ cpred1 f0 b0 f1 * * part cpredD1 f1 f0
+ |- (((!x. (((MEM x) ((cat s1) s2)) ==> (((same_count1 s1) s2) x))) = (!a. (((count a) s1) = ((count a) s2)))) = (((all ((same_count1 s1) s2)) ((cat s1) s2)) = (!a. (((count a) s1) = ((count a) s2)))))
T c= c= ! c==> cMEM b0 ccat f0 f1 csame_count1 f0 f1 b0 ! c= ccount b0 f0 ccount b0 f1 c= call * * part csame_count1 f0 f1 ccat f0 f1 ! c= ccount b0 f0 ccount b0 f1
+ (a x) |- (((\x'. (((\x'. (x' = x)) x') /\ (a x'))) y) = ((pred1 x) y))
T c==> * f0 f1 c= * / c/\ * / c= b1 f1 b0 * f0 b0 f2 cpred1 f1 f2
+ |- ((SUC n) = ((NUMERAL (BIT1 _0)) + n))
T c= cSUC f0 c+ cNUMERAL cBIT1 c_0 f0
+ |- ((((count a) ((cat s1) s2)) = (NUMERAL _0)) \/ ((NUMERAL _0) < ((count a) ((cat s1) s2))))
T c\/ c= ccount f0 ccat f1 f2 cNUMERAL c_0 c< cNUMERAL c_0 ccount f0 ccat f1 f2
+ (a x), (((predD1 a) x) = a') |- ((((count (pred1 x)) ((filter a) s)) + ((count (predC (pred1 x))) ((filter a) s))) = (((count (pred1 x)) s) + ((count a') s)))
T c==> * f0 f1 c==> c= * * part cpredD1 f0 f1 f2 c= c+ ccount * part cpred1 f1 cfilter f0 f3 ccount * part cpredC * part cpred1 f1 cfilter f0 f3 c+ ccount * part cpred1 f1 f3 ccount f2 f3
+ (!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))) |- (((\a1. (a = a1)) a1) ==> ((((count a) ((cat s1) s2)) < (SUC ((count a) ((cat s1) s2)))) ==> (((count a) s1) = ((count a) s2))))
T c==> ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 c==> * / c= f2 b0 f3 c==> c< ccount f2 ccat f0 f1 cSUC ccount f2 ccat f0 f1 c= ccount f2 f0 ccount f2 f1
- ((\x. ((SUC ((count a) ((cat s1) s2))) = x)) x) |- ((((SUC ((count a) ((cat s1) s2))) = x) ==> (?x. ((SUC ((count a) ((cat s1) s2))) = x))) = (?x. ((SUC ((count a) ((cat s1) s2))) = x)))
T c==> * / c= cSUC ccount f0 ccat f1 f2 b0 f3 c= c==> c= cSUC ccount f0 ccat f1 f2 f3 c? / c= cSUC ccount f0 ccat f1 f2 b0 c? / c= cSUC ccount f0 ccat f1 f2 b0
+ |- ((\s. (((has (pred1 x)) s) = ((MEM x) s))) s)
T * / c= chas * part cpred1 f0 b0 cMEM f0 b0 f1
- (!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))) |- ((((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2))) = T)
T c==> ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 c= c==> cMEM f2 ccat f0 f1 c= ccount * part cpred1 f2 f0 ccount * part cpred1 f2 f1 cT
+ |- (((!n. (((m + p) <= (n + p)) = (m <= n))) ==> ((\n. (((m + p) <= (n + p)) = (m <= n))) n)) = ((\n. (((m + p) <= (n + p)) = (m <= n))) n))
T c= c==> ! c= c<= c+ f0 f1 c+ b0 f1 c<= f0 b0 * / c= c<= c+ f0 f1 c+ b0 f1 c<= f0 b0 f2 * / c= c<= c+ f0 f1 c+ b0 f1 c<= f0 b0 f2
- |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
+ |- (((!p. (!m. (!n. (((m + p) <= (n + p)) = (m <= n))))) ==> ((\p. (!m. (!n. (((m + p) <= (n + p)) = (m <= n))))) p)) = ((\p. (!m. (!n. (((m + p) <= (n + p)) = (m <= n))))) p))
T c= c==> ! ! ! c= c<= c+ b1 b0 c+ b2 b0 c<= b1 b2 * / ! ! c= c<= c+ b1 b0 c+ b2 b0 c<= b1 b2 f0 * / ! ! c= c<= c+ b1 b0 c+ b2 b0 c<= b1 b2 f0
+ ((MEM x) ((cat s1) s2)) |- ((SUC (NUMERAL _0)) <= ((count (pred1 x)) ((cat s1) s2)))
T c==> cMEM f0 ccat f1 f2 c<= cSUC cNUMERAL c_0 ccount * part cpred1 f0 ccat f1 f2
+ |- (((!p2. (((predI p1) p2) = (\x. ((p1 x) /\ (p2 x))))) ==> ((\p2. (((predI p1) p2) = (\x. ((p1 x) /\ (p2 x))))) p2)) = ((\p2. (((predI p1) p2) = (\x. ((p1 x) /\ (p2 x))))) p2))
T c= c==> ! c= * * part cpredI f0 b0 / c/\ * f0 b1 * b0 b1 * / c= * * part cpredI f0 b0 / c/\ * f0 b1 * b0 b1 f1 * / c= * * part cpredI f0 b0 / c/\ * f0 b1 * b0 b1 f1
+ |- ((((count a') s1) = ((count a') s2)) ==> ((((count (pred1 x)) s2) + ((count a') s1)) = (((count (pred1 x)) s2) + ((count a') s2))))
T c==> c= ccount f0 f1 ccount f0 f2 c= c+ ccount * part cpred1 f3 f2 ccount f0 f1 c+ ccount * part cpred1 f3 f2 ccount f0 f2
+ |- ((((\x'. (((pred1 x) x') /\ (a x'))) y) = ((pred1 x) y)) = ((((predI (pred1 x)) a) y) = ((pred1 x) y)))
T c= c= * / c/\ cpred1 f0 b0 * f1 b0 f2 cpred1 f0 f2 c= cpredI * part cpred1 f0 f1 f2 cpred1 f0 f2
+ (a x) |- (!x'. ((((predI (pred1 x)) a) x') = ((pred1 x) x')))
T c==> * f0 f1 ! c= cpredI * part cpred1 f1 f0 b0 cpred1 f1 b0
+ (a x) |- ((y = x) ==> ((y = x) /\ (a y)))
T c==> * f0 f1 c==> c= f2 f1 c/\ c= f2 f1 * f0 f2
+ |- ((\x. (!s2. ((((same_count1 s1) s2) x) = (((count (pred1 x)) s1) = ((count (pred1 x)) s2))))) x)
T * / ! c= csame_count1 f0 b1 b0 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 b1 f1
+ |- (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q)))
T c= c==> c? / * f0 b0 f1 ! c==> * f0 b0 f1
+ (!a1. (!a2. ((!x. ((a1 x) = (a2 x))) ==> (!s. (((count a1) s) = ((count a2) s)))))), (a x) |- ((!a1. (!a2. ((!x. ((a1 x) = (a2 x))) ==> (!s. (((count a1) s) = ((count a2) s)))))) /\ (!s. (((count ((predI (pred1 x)) a)) s) = ((count (pred1 x)) s))))
T c==> ! ! c==> ! c= * b0 b2 * b1 b2 ! c= ccount b0 b2 ccount b1 b2 c==> * f0 f1 c/\ ! ! c==> ! c= * b0 b2 * b1 b2 ! c= ccount b0 b2 ccount b1 b2 ! c= ccount * * part cpredI * part cpred1 f1 f0 b0 ccount * part cpred1 f1 b0
+ (!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))) |- ((((\x. ((SUC ((count a) ((cat s1) s2))) = x)) x) ==> (!a1. ((((count a1) ((cat s1) s2)) < (SUC ((count a) ((cat s1) s2)))) ==> (((count a1) s1) = ((count a1) s2))))) = T)
T c==> ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 c= c==> * / c= cSUC ccount f2 ccat f0 f1 b0 f3 ! c==> c< ccount b0 ccat f0 f1 cSUC ccount f2 ccat f0 f1 c= ccount b0 f0 ccount b0 f1 cT
+ |- ((\n. (((m + p) <= (n + p)) = (m <= n))) n)
T * / c= c<= c+ f0 f1 c+ b0 f1 c<= f0 b0 f2
+ (((count a) s) = (sizel ((filter a) s))) |- ((sizel ((filter a) s)) = ((count a) s))
T c==> c= ccount f0 f1 csizel cfilter f0 f1 c= csizel cfilter f0 f1 ccount f0 f1
+ |- ((\p2. (!p1. (((predD p1) p2) = (\x. ((~ (p2 x)) /\ (p1 x)))))) p2)
T * / ! c= * * part cpredD b1 b0 / c/\ c~ * b0 b2 * b1 b2 f0
- (!a1. ((((count a1) ((cat s1) s2)) < n) ==> (((count a1) s1) = ((count a1) s2)))) |- (((((count a1) ((cat s1) s2)) < n) ==> (((count a1) s1) = ((count a1) s2))) = T)
T c==> ! c==> c< ccount b0 ccat f0 f1 f2 c= ccount b0 f0 ccount b0 f1 c= c==> c< ccount f3 ccat f0 f1 f2 c= ccount f3 f0 ccount f3 f1 cT
+ |- ((!x. (((MEM x) ((cat s1) s2)) ==> (((same_count1 s1) s2) x))) = (!a. (((count a) s1) = ((count a) s2))))
T c= ! c==> cMEM b0 ccat f0 f1 csame_count1 f0 f1 b0 ! c= ccount b0 f0 ccount b0 f1
+ (a x), (((predD1 a) x) = a') |- ((sizel ((filter a) s)) = (((count (pred1 x)) s) + ((count a') s)))
T c==> * f0 f1 c==> c= * * part cpredD1 f0 f1 f2 c= csizel cfilter f0 f3 c+ ccount * part cpred1 f1 f3 ccount f2 f3
+ ((?x. (((MEM x) s) /\ (a x))) = ((has a) s)) |- (((has a) s) = (?x. (((MEM x) s) /\ (a x))))
T c==> c= c? / c/\ cMEM b0 f0 * f1 b0 chas f1 f0 c= chas f1 f0 c? / c/\ cMEM b0 f0 * f1 b0
+ (!s. (((count a) s) = (((count (pred1 x)) s) + ((count a') s)))), (((count a) ((cat s1) s2)) < (SUC n)), ((MEM x) ((cat s1) s2)) |- ((((((count a') ((cat s1) s2)) < n) /\ ((((count a') s1) = ((count a') s2)) ==> ((((count (pred1 x)) s2) + ((count a') s1)) = (((count (pred1 x)) s2) + ((count a') s2))))) ==> (((((count a') ((cat s1) s2)) < n) ==> (((count a') s1) = ((count a') s2))) ==> ((((count (pred1 x)) s2) + ((count a') s1)) = (((count (pred1 x)) s2) + ((count a') s2))))) = (((((count a') ((cat s1) s2)) < n) ==> (((count a') s1) = ((count a') s2))) ==> ((((count (pred1 x)) s2) + ((count a') s1)) = (((count (pred1 x)) s2) + ((count a') s2)))))
T c==> ! c= ccount f0 b0 c+ ccount * part cpred1 f1 b0 ccount f2 b0 c==> c< ccount f0 ccat f3 f4 cSUC f5 c==> cMEM f1 ccat f3 f4 c= c==> c/\ c< ccount f2 ccat f3 f4 f5 c==> c= ccount f2 f3 ccount f2 f4 c= c+ ccount * part cpred1 f1 f4 ccount f2 f3 c+ ccount * part cpred1 f1 f4 ccount f2 f4 c==> c==> c< ccount f2 ccat f3 f4 f5 c= ccount f2 f3 ccount f2 f4 c= c+ ccount * part cpred1 f1 f4 ccount f2 f3 c+ ccount * part cpred1 f1 f4 ccount f2 f4 c==> c==> c< ccount f2 ccat f3 f4 f5 c= ccount f2 f3 ccount f2 f4 c= c+ ccount * part cpred1 f1 f4 ccount f2 f3 c+ ccount * part cpred1 f1 f4 ccount f2 f4
+ (!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))), (!a1. ((((count a1) ((cat s1) s2)) < n) ==> (((count a1) s1) = ((count a1) s2)))), ((((count a) ((cat s1) s2)) = (NUMERAL _0)) \/ ((NUMERAL _0) < ((count a) ((cat s1) s2)))), (((count a) ((cat s1) s2)) < (SUC n)) |- (((((count a) ((cat s1) s2)) = (NUMERAL _0)) \/ ((NUMERAL _0) < ((count a) ((cat s1) s2)))) /\ (((count a) s1) = ((count a) s2)))
T c==> ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 c==> ! c==> c< ccount b0 ccat f0 f1 f2 c= ccount b0 f0 ccount b0 f1 c==> c\/ c= ccount f3 ccat f0 f1 cNUMERAL c_0 c< cNUMERAL c_0 ccount f3 ccat f0 f1 c==> c< ccount f3 ccat f0 f1 cSUC f2 c/\ c\/ c= ccount f3 ccat f0 f1 cNUMERAL c_0 c< cNUMERAL c_0 ccount f3 ccat f0 f1 c= ccount f3 f0 ccount f3 f1
+ |- (T = (!a1. (F ==> (((count a1) s1) = ((count a1) s2)))))
T c= cT ! c==> cF c= ccount b0 f0 ccount b0 f1
+ |- (((!a. ((pred1 a) = (\x. (x = a)))) ==> ((\a. ((pred1 a) = (\x. (x = a)))) a)) = ((\a. ((pred1 a) = (\x. (x = a)))) a))
T c= c==> ! c= * part cpred1 b0 / c= b1 b0 * / c= * part cpred1 b0 / c= b1 b0 f0 * / c= * part cpred1 b0 / c= b1 b0 f0
+ (!s. (((count a) s) = (((count (pred1 x)) s) + ((count a') s)))), (((count a) ((cat s1) s2)) < (SUC n)), ((MEM x) ((cat s1) s2)) |- (((((count a') ((cat s1) s2)) < n) ==> (((count a') s1) = ((count a') s2))) ==> ((((count (pred1 x)) s2) + ((count a') s1)) = (((count (pred1 x)) s2) + ((count a') s2))))
T c==> ! c= ccount f0 b0 c+ ccount * part cpred1 f1 b0 ccount f2 b0 c==> c< ccount f0 ccat f3 f4 cSUC f5 c==> cMEM f1 ccat f3 f4 c==> c==> c< ccount f2 ccat f3 f4 f5 c= ccount f2 f3 ccount f2 f4 c= c+ ccount * part cpred1 f1 f4 ccount f2 f3 c+ ccount * part cpred1 f1 f4 ccount f2 f4
- (!n. (!m. (!p. ((m <= n) ==> ((n <= p) ==> (m <= p)))))) |- ((!n. (!m. (!p. ((m <= n) ==> ((n <= p) ==> (m <= p)))))) /\ (!n. (!m. (!p. ((m <= n) ==> ((n <= p) ==> (m <= p)))))))
T c==> ! ! ! c==> c<= b1 b0 c==> c<= b0 b2 c<= b1 b2 c/\ ! ! ! c==> c<= b1 b0 c==> c<= b0 b2 c<= b1 b2 ! ! ! c==> c<= b1 b0 c==> c<= b0 b2 c<= b1 b2
+ |- (((!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))) = (!a. (((count a) s1) = ((count a) s2)))) = ((!x. (((MEM x) ((cat s1) s2)) ==> (((same_count1 s1) s2) x))) = (!a. (((count a) s1) = ((count a) s2)))))
T c= c= ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 ! c= ccount b0 f0 ccount b0 f1 c= ! c==> cMEM b0 ccat f0 f1 csame_count1 f0 f1 b0 ! c= ccount b0 f0 ccount b0 f1
+ |- (((has (pred1 x)) ((cat s1) s2)) = ((NUMERAL _0) < ((count (pred1 x)) ((cat s1) s2))))
T c= chas * part cpred1 f0 ccat f1 f2 c< cNUMERAL c_0 ccount * part cpred1 f0 ccat f1 f2
+ |- (((((count ((predI (pred1 x)) a)) s) + (sizel ((filter ((predI (predC (pred1 x))) a)) s))) = (((count (pred1 x)) s) + ((count a') s))) = (((sizel ((filter ((predI (pred1 x)) a)) s)) + (sizel ((filter ((predI (predC (pred1 x))) a)) s))) = (((count (pred1 x)) s) + ((count a') s))))
T c= c= c+ ccount * * part cpredI * part cpred1 f0 f1 f2 csizel cfilter * * part cpredI * part cpredC * part cpred1 f0 f1 f2 c+ ccount * part cpred1 f0 f2 ccount f3 f2 c= c+ csizel cfilter * * part cpredI * part cpred1 f0 f1 f2 csizel cfilter * * part cpredI * part cpredC * part cpred1 f0 f1 f2 c+ ccount * part cpred1 f0 f2 ccount f3 f2
+ |- (((has a) s) = (?x. (((MEM x) s) /\ (a x))))
T c= chas f0 f1 c? / c/\ cMEM b0 f1 * f0 b0
+ ((\a1. (a = a1)) a1) |- (((a = a1) ==> ((((count a) ((cat s1) s2)) < (SUC ((count a) ((cat s1) s2)))) ==> (((count a) s1) = ((count a) s2)))) = ((((count a) ((cat s1) s2)) < (SUC ((count a) ((cat s1) s2)))) ==> (((count a) s1) = ((count a) s2))))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c==> c< ccount f0 ccat f2 f3 cSUC ccount f0 ccat f2 f3 c= ccount f0 f2 ccount f0 f3 c==> c< ccount f0 ccat f2 f3 cSUC ccount f0 ccat f2 f3 c= ccount f0 f2 ccount f0 f3
+ (!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))), (!a1. ((((count a1) ((cat s1) s2)) < n) ==> (((count a1) s1) = ((count a1) s2)))), (a x), (((count a) ((cat s1) s2)) < (SUC n)), ((MEM x) ((cat s1) s2)) |- (((\a'. (((predD1 a) x) = a')) a') ==> (((count a) s1) = ((count a) s2)))
T c==> ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 c==> ! c==> c< ccount b0 ccat f0 f1 f2 c= ccount b0 f0 ccount b0 f1 c==> * f3 f4 c==> c< ccount f3 ccat f0 f1 cSUC f2 c==> cMEM f4 ccat f0 f1 c==> * / c= * * part cpredD1 f3 f4 b0 f5 c= ccount f3 f0 ccount f3 f1
+ |- ((\a1. (!a2. (!s. (((filter a1) ((filter a2) s)) = ((filter ((predI a1) a2)) s))))) a1)
T * / ! ! c= cfilter b0 cfilter b1 b2 cfilter * * part cpredI b0 b1 b2 f0
+ |- (((!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) ==> ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)) = ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s))
T c= c==> ! c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
+ |- (!s. ((((count (pred1 x)) s) + ((count (predC (pred1 x))) s)) = (sizel s)))
T c= c+ ccount * part cpred1 f0 f1 ccount * part cpredC * part cpred1 f0 f1 csizel f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (((NUMERAL (BIT1 _0)) + n) = (SUC n)) |- ((SUC n) = ((NUMERAL (BIT1 _0)) + n))
T c==> c= c+ cNUMERAL cBIT1 c_0 f0 cSUC f0 c= cSUC f0 c+ cNUMERAL cBIT1 c_0 f0
+ (!a. (((count a) s1) = ((count a) s2))) |- (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))
T c==> ! c= ccount b0 f0 ccount b0 f1 c==> cMEM f2 ccat f0 f1 c= ccount * part cpred1 f2 f0 ccount * part cpred1 f2 f1
- (!n. (!m. (!p. ((m <= n) ==> ((n <= p) ==> (m <= p)))))) |- (((m <= n) ==> ((n <= p) ==> (m <= p))) = T)
T c==> ! ! ! c==> c<= b1 b0 c==> c<= b0 b2 c<= b1 b2 c= c==> c<= f0 f1 c==> c<= f1 f2 c<= f0 f2 cT
- |- (T = ((\x'. (((\x'. (~ ((pred1 x) x'))) x') /\ (a x'))) = (\x'. ((~ ((pred1 x) x')) /\ (a x')))))
T c= cT c= / c/\ * / c~ cpred1 f0 b1 b0 * f1 b0 / c/\ c~ cpred1 f0 b0 * f1 b0
+ (a x) |- (((y = x) /\ (a y)) = (y = x))
T c==> * f0 f1 c= c/\ c= f2 f1 * f0 f2 c= f2 f1
+ |- ((\m. (!n. (((m + p) <= (n + p)) = (m <= n)))) m)
T * / ! c= c<= c+ b0 f0 c+ b1 f0 c<= b0 b1 f1
+ (a x), (s = s3) |- (((count ((predI (pred1 x)) a)) s3) = ((count (pred1 x)) s))
T c==> * f0 f1 c==> c= f2 f3 c= ccount * * part cpredI * part cpred1 f1 f0 f3 ccount * part cpred1 f1 f2
- ((MEM x) ((cat s1) s2)) |- (((MEM x) ((cat s1) s2)) = T)
T c==> cMEM f0 ccat f1 f2 c= cMEM f0 ccat f1 f2 cT
+ |- (((NUMERAL _0) < ((count (pred1 x)) ((cat s1) s2))) = ((SUC (NUMERAL _0)) <= ((count (pred1 x)) ((cat s1) s2))))
T c= c< cNUMERAL c_0 ccount * part cpred1 f0 ccat f1 f2 c<= cSUC cNUMERAL c_0 ccount * part cpred1 f0 ccat f1 f2
+ (!s. (((count a) s) = (((count (pred1 x)) s) + ((count a') s)))), (((count a) ((cat s1) s2)) < (SUC n)), ((MEM x) ((cat s1) s2)) |- ((((count a') ((cat s1) s2)) < n) /\ ((((count a') s1) = ((count a') s2)) ==> ((((count (pred1 x)) s2) + ((count a') s1)) = (((count (pred1 x)) s2) + ((count a') s2)))))
T c==> ! c= ccount f0 b0 c+ ccount * part cpred1 f1 b0 ccount f2 b0 c==> c< ccount f0 ccat f3 f4 cSUC f5 c==> cMEM f1 ccat f3 f4 c/\ c< ccount f2 ccat f3 f4 f5 c==> c= ccount f2 f3 ccount f2 f4 c= c+ ccount * part cpred1 f1 f4 ccount f2 f3 c+ ccount * part cpred1 f1 f4 ccount f2 f4
+ |- (((!a. (!s. (((NUMERAL _0) < ((count a) s)) = ((has a) s)))) ==> ((\a. (!s. (((NUMERAL _0) < ((count a) s)) = ((has a) s)))) a)) = ((\a. (!s. (((NUMERAL _0) < ((count a) s)) = ((has a) s)))) a))
T c= c==> ! ! c= c< cNUMERAL c_0 ccount b0 b1 chas b0 b1 * / ! c= c< cNUMERAL c_0 ccount b0 b1 chas b0 b1 f0 * / ! c= c< cNUMERAL c_0 ccount b0 b1 chas b0 b1 f0
+ |- (((!a. (!x. (((predD1 a) x) = ((predD a) (pred1 x))))) ==> ((\a. (!x. (((predD1 a) x) = ((predD a) (pred1 x))))) a)) = ((\a. (!x. (((predD1 a) x) = ((predD a) (pred1 x))))) a))
T c= c==> ! ! c= * * part cpredD1 b0 b1 * * part cpredD b0 * part cpred1 b1 * / ! c= * * part cpredD1 b0 b1 * * part cpredD b0 * part cpred1 b1 f0 * / ! c= * * part cpredD1 b0 b1 * * part cpredD b0 * part cpred1 b1 f0
+ (y = x) |- (((x = x) /\ (a x)) = ((x = x) /\ (a y)))
T c==> c= f0 f1 c= c/\ c= f1 f1 * f2 f1 c/\ c= f1 f1 * f2 f0
+ |- (((!x. (!s2. ((((same_count1 s1) s2) x) = (((count (pred1 x)) s1) = ((count (pred1 x)) s2))))) ==> ((\x. (!s2. ((((same_count1 s1) s2) x) = (((count (pred1 x)) s1) = ((count (pred1 x)) s2))))) x)) = ((\x. (!s2. ((((same_count1 s1) s2) x) = (((count (pred1 x)) s1) = ((count (pred1 x)) s2))))) x))
T c= c==> ! ! c= csame_count1 f0 b1 b0 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 b1 * / ! c= csame_count1 f0 b1 b0 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 b1 f1 * / ! c= csame_count1 f0 b1 b0 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 b1 f1
+ |- (((!a1. (!a2. ((!x. ((a1 x) = (a2 x))) ==> (!s. (((count a1) s) = ((count a2) s)))))) ==> (!s. (((count ((predI (pred1 x)) a)) s) = ((count (pred1 x)) s)))) = (!s. (((count ((predI (pred1 x)) a)) s) = ((count (pred1 x)) s))))
T c= c==> ! ! c==> ! c= * b0 b2 * b1 b2 ! c= ccount b0 b2 ccount b1 b2 ! c= ccount * * part cpredI * part cpred1 f0 f1 b0 ccount * part cpred1 f0 b0 ! c= ccount * * part cpredI * part cpred1 f0 f1 b0 ccount * part cpred1 f0 b0
+ |- ((\s. (((NUMERAL _0) < ((count a) s)) = ((has a) s))) s)
T * / c= c< cNUMERAL c_0 ccount f0 b0 chas f0 b0 f1
+ |- (((!n. ((n = (NUMERAL _0)) \/ ((NUMERAL _0) < n))) ==> ((\n. ((n = (NUMERAL _0)) \/ ((NUMERAL _0) < n))) ((count a) ((cat s1) s2)))) = ((\n. ((n = (NUMERAL _0)) \/ ((NUMERAL _0) < n))) ((count a) ((cat s1) s2))))
T c= c==> ! c\/ c= b0 cNUMERAL c_0 c< cNUMERAL c_0 b0 * / c\/ c= b0 cNUMERAL c_0 c< cNUMERAL c_0 b0 ccount f0 ccat f1 f2 * / c\/ c= b0 cNUMERAL c_0 c< cNUMERAL c_0 b0 ccount f0 ccat f1 f2
- ((SUC ((count a) ((cat s1) s2))) = x) |- ((\x. ((SUC ((count a) ((cat s1) s2))) = x)) x)
T c==> c= cSUC ccount f0 ccat f1 f2 f3 * / c= cSUC ccount f0 ccat f1 f2 b0 f3
+ (!a1. (!a2. ((!x. ((a1 x) = (a2 x))) ==> (!s. (((count a1) s) = ((count a2) s)))))) |- ((\a1. (!a2. ((!x. ((a1 x) = (a2 x))) ==> (!s. (((count a1) s) = ((count a2) s)))))) a1)
T c==> ! ! c==> ! c= * b0 b2 * b1 b2 ! c= ccount b0 b2 ccount b1 b2 * / ! c==> ! c= * b0 b2 * b1 b2 ! c= ccount b0 b2 ccount b1 b2 f0
+ (!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))), (!a1. ((((count a1) ((cat s1) s2)) < n) ==> (((count a1) s1) = ((count a1) s2)))), (a x), (((count a) ((cat s1) s2)) < (SUC n)), ((MEM x) ((cat s1) s2)) |- (!a'. (((\a'. (((predD1 a) x) = a')) a') ==> (((count a) s1) = ((count a) s2))))
T c==> ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 c==> ! c==> c< ccount b0 ccat f0 f1 f2 c= ccount b0 f0 ccount b0 f1 c==> * f3 f4 c==> c< ccount f3 ccat f0 f1 cSUC f2 c==> cMEM f4 ccat f0 f1 ! c==> * / c= * * part cpredD1 f3 f4 b1 b0 c= ccount f3 f0 ccount f3 f1
+ |- (((!m. ((n < m) = ((SUC n) <= m))) ==> ((\m. ((n < m) = ((SUC n) <= m))) m)) = ((\m. ((n < m) = ((SUC n) <= m))) m))
T c= c==> ! c= c< f0 b0 c<= cSUC f0 b0 * / c= c< f0 b0 c<= cSUC f0 b0 f1 * / c= c< f0 b0 c<= cSUC f0 b0 f1
+ |- (((SUC ((count a') ((cat s1) s2))) <= n) = (((count a') ((cat s1) s2)) < n))
T c= c<= cSUC ccount f0 ccat f1 f2 f3 c< ccount f0 ccat f1 f2 f3
+ (a x) |- (((y = x) ==> ((y = x) /\ (a y))) = ((((y = x) /\ (a y)) ==> (y = x)) /\ ((y = x) ==> ((y = x) /\ (a y)))))
T c==> * f0 f1 c= c==> c= f2 f1 c/\ c= f2 f1 * f0 f2 c/\ c==> c/\ c= f2 f1 * f0 f2 c= f2 f1 c==> c= f2 f1 c/\ c= f2 f1 * f0 f2
+ |- ((\a. (!x. (((predD1 a) x) = ((predD a) (pred1 x))))) a)
T * / ! c= * * part cpredD1 b0 b1 * * part cpredD b0 * part cpred1 b1 f0
- (((predD1 a) x) = a') |- ((((predD1 a) x) = a') /\ (?a'. (((predD1 a) x) = a')))
T c==> c= * * part cpredD1 f0 f1 f2 c/\ c= * * part cpredD1 f0 f1 f2 c? / c= * * part cpredD1 f0 f1 b0
+ |- (((!s1. (!s2. (((count a) ((cat s1) s2)) = (((count a) s1) + ((count a) s2))))) ==> ((\s1. (!s2. (((count a) ((cat s1) s2)) = (((count a) s1) + ((count a) s2))))) s1)) = ((\s1. (!s2. (((count a) ((cat s1) s2)) = (((count a) s1) + ((count a) s2))))) s1))
T c= c==> ! ! c= ccount f0 ccat b0 b1 c+ ccount f0 b0 ccount f0 b1 * / ! c= ccount f0 ccat b0 b1 c+ ccount f0 b0 ccount f0 b1 f1 * / ! c= ccount f0 ccat b0 b1 c+ ccount f0 b0 ccount f0 b1 f1
+ |- ((\Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q)))) Q)
T * / c= c==> c? / * f0 b1 b0 ! c==> * f0 b1 b0 f1
- |- (!s3. (((\s3. (s = s3)) s3) ==> (?s3. (s = s3))))
T c==> * / c= f0 b0 f1 c? / c= f0 b0
+ (!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))) |- (((!x. (((\a1. (a = a1)) x) ==> ((((count a) ((cat s1) s2)) < (SUC ((count a) ((cat s1) s2)))) ==> (((count a) s1) = ((count a) s2))))) ==> ((?a1. (a = a1)) ==> ((((count a) ((cat s1) s2)) < (SUC ((count a) ((cat s1) s2)))) ==> (((count a) s1) = ((count a) s2))))) = ((?a1. (a = a1)) ==> ((((count a) ((cat s1) s2)) < (SUC ((count a) ((cat s1) s2)))) ==> (((count a) s1) = ((count a) s2)))))
T c==> ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 c= c==> ! c==> * / c= f2 b1 b0 c==> c< ccount f2 ccat f0 f1 cSUC ccount f2 ccat f0 f1 c= ccount f2 f0 ccount f2 f1 c==> c? / c= f2 b0 c==> c< ccount f2 ccat f0 f1 cSUC ccount f2 ccat f0 f1 c= ccount f2 f0 ccount f2 f1 c==> c? / c= f2 b0 c==> c< ccount f2 ccat f0 f1 cSUC ccount f2 ccat f0 f1 c= ccount f2 f0 ccount f2 f1
+ |- (((!P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) ==> ((\P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) P)) = ((\P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) P))
T c= c==> ! ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 * / ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 f0 * / ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 f0
+ |- ((\s3. (s = s3)) s)
T * / c= f0 b0 f0
+ (!a1. ((((count a1) ((cat s1) s2)) < n) ==> (((count a1) s1) = ((count a1) s2)))) |- ((((((count a') ((cat s1) s2)) < n) ==> (((count a') s1) = ((count a') s2))) ==> ((((count (pred1 x)) s2) + ((count a') s1)) = (((count (pred1 x)) s2) + ((count a') s2)))) = ((((count (pred1 x)) s2) + ((count a') s1)) = (((count (pred1 x)) s2) + ((count a') s2))))
T c==> ! c==> c< ccount b0 ccat f0 f1 f2 c= ccount b0 f0 ccount b0 f1 c= c==> c==> c< ccount f3 ccat f0 f1 f2 c= ccount f3 f0 ccount f3 f1 c= c+ ccount * part cpred1 f4 f1 ccount f3 f0 c+ ccount * part cpred1 f4 f1 ccount f3 f1 c= c+ ccount * part cpred1 f4 f1 ccount f3 f0 c+ ccount * part cpred1 f4 f1 ccount f3 f1
+ |- (((((count a) ((cat s1) s2)) < (SUC ((count a) ((cat s1) s2)))) ==> (((count a) s1) = ((count a) s2))) = (((count a) s1) = ((count a) s2)))
T c= c==> c< ccount f0 ccat f1 f2 cSUC ccount f0 ccat f1 f2 c= ccount f0 f1 ccount f0 f2 c= ccount f0 f1 ccount f0 f2
+ (!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))) |- ((?a1. (a = a1)) ==> ((((count a) ((cat s1) s2)) < (SUC ((count a) ((cat s1) s2)))) ==> (((count a) s1) = ((count a) s2))))
T c==> ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 c==> c? / c= f2 b0 c==> c< ccount f2 ccat f0 f1 cSUC ccount f2 ccat f0 f1 c= ccount f2 f0 ccount f2 f1
- ((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) |- ((!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) ==> (!n. (P n)))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 c==> ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 ! * f0 b0
- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))), ((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) |- (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) /\ (!n. (P n)))
T c==> ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 c/\ c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
+ |- (!a1. (F ==> (((count a1) s1) = ((count a1) s2))))
T c==> cF c= ccount f0 f1 ccount f0 f2
+ |- (((NUMERAL _0) < ((count a) s)) = ((has a) s))
T c= c< cNUMERAL c_0 ccount f0 f1 chas f0 f1
+ |- ((\m. (!n. ((m <= n) = (m < (SUC n))))) m)
T * / ! c= c<= b0 b1 c< b0 cSUC b1 f0
+ |- ((!x. ((((MEM x) ((cat s1) s2)) /\ (a x)) ==> (((count a) s1) = ((count a) s2)))) = ((?x. (((MEM x) ((cat s1) s2)) /\ (a x))) ==> (((count a) s1) = ((count a) s2))))
T c= ! c==> c/\ cMEM b0 ccat f0 f1 * f2 b0 c= ccount f2 f0 ccount f2 f1 c==> c? / c/\ cMEM b0 ccat f0 f1 * f2 b0 c= ccount f2 f0 ccount f2 f1
+ (!n. (!m. (!p. ((m <= n) ==> ((n <= p) ==> (m <= p)))))) |- (((!m. (!p. ((m <= n) ==> ((n <= p) ==> (m <= p))))) ==> ((\m. (!p. ((m <= n) ==> ((n <= p) ==> (m <= p))))) m)) = ((\m. (!p. ((m <= n) ==> ((n <= p) ==> (m <= p))))) m))
T c==> ! ! ! c==> c<= b1 b0 c==> c<= b0 b2 c<= b1 b2 c= c==> ! ! c==> c<= b0 f0 c==> c<= f0 b1 c<= b0 b1 * / ! c==> c<= b0 f0 c==> c<= f0 b1 c<= b0 b1 f1 * / ! c==> c<= b0 f0 c==> c<= f0 b1 c<= b0 b1 f1
- (!x. ((a1 x) = (a2 x))), (!a1. (!a2. ((!x. ((a1 x) = (a2 x))) ==> (!s. (((count a1) s) = ((count a2) s)))))) |- ((!x. ((a1 x) = (a2 x))) /\ (!s. (((count a1) s) = ((count a2) s))))
T c==> ! c= * f0 b0 * f1 b0 c==> ! ! c==> ! c= * b0 b2 * b1 b2 ! c= ccount b0 b2 ccount b1 b2 c/\ ! c= * f0 b0 * f1 b0 ! c= ccount f0 b0 ccount f1 b0
- (!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))), (!a1. ((((count a1) ((cat s1) s2)) < n) ==> (((count a1) s1) = ((count a1) s2)))), ((NUMERAL _0) < ((count a) ((cat s1) s2))), (((count a) ((cat s1) s2)) < (SUC n)) |- (((count a) s1) = ((count a) s2))
T c==> ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 c==> ! c==> c< ccount b0 ccat f0 f1 f2 c= ccount b0 f0 ccount b0 f1 c==> c< cNUMERAL c_0 ccount f3 ccat f0 f1 c==> c< ccount f3 ccat f0 f1 cSUC f2 c= ccount f3 f0 ccount f3 f1
- |- (!x. (((\x. ((SUC ((count a) ((cat s1) s2))) = x)) x) ==> (?x. ((SUC ((count a) ((cat s1) s2))) = x))))
T c==> * / c= cSUC ccount f0 ccat f1 f2 b0 f3 c? / c= cSUC ccount f0 ccat f1 f2 b0
- (!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))), (!a1. ((((count a1) ((cat s1) s2)) < n) ==> (((count a1) s1) = ((count a1) s2)))), (!s. (((count a) s) = (((count (pred1 x)) s) + ((count a') s)))), (((count a) ((cat s1) s2)) < (SUC n)), ((MEM x) ((cat s1) s2)) |- ((!s. (((count a) s) = (((count (pred1 x)) s) + ((count a') s)))) /\ (((count a) s1) = ((count a) s2)))
T c==> ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 c==> ! c==> c< ccount b0 ccat f0 f1 f2 c= ccount b0 f0 ccount b0 f1 c==> ! c= ccount f3 b0 c+ ccount * part cpred1 f4 b0 ccount f5 b0 c==> c< ccount f3 ccat f0 f1 cSUC f2 c==> cMEM f4 ccat f0 f1 c/\ ! c= ccount f3 b0 c+ ccount * part cpred1 f4 b0 ccount f5 b0 c= ccount f3 f0 ccount f3 f1
- |- ((s = s3) = ((\s3. (s = s3)) s3))
T c= c= f0 f1 * / c= f0 b0 f1
- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) |- ((\P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) P)
T c==> ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 * / c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 f0
- ((MEM x) ((cat s1) s2)) |- (T = ((MEM x) ((cat s1) s2)))
T c==> cMEM f0 ccat f1 f2 c= cT cMEM f0 ccat f1 f2
- |- (((!x. (((\x. ((SUC ((count a) ((cat s1) s2))) = x)) x) ==> (?x. ((SUC ((count a) ((cat s1) s2))) = x)))) ==> ((?x. ((SUC ((count a) ((cat s1) s2))) = x)) ==> (?x. ((SUC ((count a) ((cat s1) s2))) = x)))) = ((?x. ((SUC ((count a) ((cat s1) s2))) = x)) ==> (?x. ((SUC ((count a) ((cat s1) s2))) = x))))
T c= c==> ! c==> * / c= cSUC ccount f0 ccat f1 f2 b1 b0 c? / c= cSUC ccount f0 ccat f1 f2 b1 c==> c? / c= cSUC ccount f0 ccat f1 f2 b0 c? / c= cSUC ccount f0 ccat f1 f2 b0 c==> c? / c= cSUC ccount f0 ccat f1 f2 b0 c? / c= cSUC ccount f0 ccat f1 f2 b0
- (!n. (!m. (!p. ((m <= n) ==> ((n <= p) ==> (m <= p)))))), (m <= n) |- ((m <= n) /\ ((n <= p) ==> (m <= p)))
T c==> ! ! ! c==> c<= b1 b0 c==> c<= b0 b2 c<= b1 b2 c==> c<= f0 f1 c/\ c<= f0 f1 c==> c<= f1 f2 c<= f0 f2
- (!a. (((count a) s1) = ((count a) s2))) |- (T = (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))
T c==> ! c= ccount b0 f0 ccount b0 f1 c= cT c= ccount * part cpred1 f2 f0 ccount * part cpred1 f2 f1
- (m <= n) |- ((!n. (!m. (!p. ((m <= n) ==> ((n <= p) ==> (m <= p)))))) ==> ((n <= p) ==> (m <= p)))
T c==> c<= f0 f1 c==> ! ! ! c==> c<= b1 b0 c==> c<= b0 b2 c<= b1 b2 c==> c<= f1 f2 c<= f0 f2
- |- (T = ((((count (pred1 x)) s2) + ((count a') s2)) = (((count (pred1 x)) s2) + ((count a') s2))))
T c= cT c= c+ ccount * part cpred1 f0 f1 ccount f2 f1 c+ ccount * part cpred1 f0 f1 ccount f2 f1
- ((\x. ((SUC ((count a) ((cat s1) s2))) = x)) x) |- (((\x. ((SUC ((count a) ((cat s1) s2))) = x)) x) /\ (?x. ((SUC ((count a) ((cat s1) s2))) = x)))
T c==> * / c= cSUC ccount f0 ccat f1 f2 b0 f3 c/\ * / c= cSUC ccount f0 ccat f1 f2 b0 f3 c? / c= cSUC ccount f0 ccat f1 f2 b0
- |- (!a'. (((\a'. (((predD1 a) x) = a')) a') ==> (?a'. (((predD1 a) x) = a'))))
T c==> * / c= * * part cpredD1 f0 f1 b0 f2 c? / c= * * part cpredD1 f0 f1 b0
- |- ((?s3. (s = s3)) ==> (?s3. (s = s3)))
T c==> c? / c= f0 b0 c? / c= f0 b0
- |- ((((\x. ((SUC ((count a) ((cat s1) s2))) = x)) x) ==> (?x. ((SUC ((count a) ((cat s1) s2))) = x))) = T)
T c= c==> * / c= cSUC ccount f0 ccat f1 f2 b0 f3 c? / c= cSUC ccount f0 ccat f1 f2 b0 cT
- (!a1. (!a2. ((!x. ((a1 x) = (a2 x))) ==> (!s. (((count a1) s) = ((count a2) s)))))) |- ((!a2. ((!x. ((a1 x) = (a2 x))) ==> (!s. (((count a1) s) = ((count a2) s))))) = T)
T c==> ! ! c==> ! c= * b0 b2 * b1 b2 ! c= ccount b0 b2 ccount b1 b2 c= ! c==> ! c= * f0 b1 * b0 b1 ! c= ccount f0 b1 ccount b0 b1 cT
- |- ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)
T * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- (!n. (!m. (!p. ((m <= n) ==> ((n <= p) ==> (m <= p)))))) |- ((!p. ((m <= n) ==> ((n <= p) ==> (m <= p)))) = T)
T c==> ! ! ! c==> c<= b1 b0 c==> c<= b0 b2 c<= b1 b2 c= ! c==> c<= f0 f1 c==> c<= f1 b0 c<= f0 b0 cT
- (s = s3) |- (s3 = s)
T c==> c= f0 f1 c= f1 f0
- (!x. ((a1 x) = (a2 x))) |- ((!a1. (!a2. ((!x. ((a1 x) = (a2 x))) ==> (!s. (((count a1) s) = ((count a2) s)))))) ==> (!s. (((count a1) s) = ((count a2) s))))
T c==> ! c= * f0 b0 * f1 b0 c==> ! ! c==> ! c= * b0 b2 * b1 b2 ! c= ccount b0 b2 ccount b1 b2 ! c= ccount f0 b0 ccount f1 b0
- ((\s3. (s = s3)) s3) |- (((s = s3) ==> (?s3. (s = s3))) = (?s3. (s = s3)))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c? / c= f0 b0 c? / c= f0 b0
- |- (((!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) ==> (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))) = (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))))
T c= c==> ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1
- (!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))), (!a1. ((((count a1) ((cat s1) s2)) < n) ==> (((count a1) s1) = ((count a1) s2)))), (((count a) ((cat s1) s2)) < (SUC n)), ((MEM x) ((cat s1) s2)) |- ((!s. (((count a) s) = (((count (pred1 x)) s) + ((count a') s)))) ==> (((count a) s1) = ((count a) s2)))
T c==> ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 c==> ! c==> c< ccount b0 ccat f0 f1 f2 c= ccount b0 f0 ccount b0 f1 c==> c< ccount f3 ccat f0 f1 cSUC f2 c==> cMEM f4 ccat f0 f1 c==> ! c= ccount f3 b0 c+ ccount * part cpred1 f4 b0 ccount f5 b0 c= ccount f3 f0 ccount f3 f1
- |- ((((predD1 a) x) = a') = ((\a'. (((predD1 a) x) = a')) a'))
T c= c= * * part cpredD1 f0 f1 f2 * / c= * * part cpredD1 f0 f1 b0 f2
- |- ((!a1. (!a2. ((!x. ((a1 x) = (a2 x))) ==> (!s. (((count a1) s) = ((count a2) s)))))) ==> (!a1. (!a2. ((!x. ((a1 x) = (a2 x))) ==> (!s. (((count a1) s) = ((count a2) s)))))))
T c==> ! ! c==> ! c= * b0 b2 * b1 b2 ! c= ccount b0 b2 ccount b1 b2 ! ! c==> ! c= * b0 b2 * b1 b2 ! c= ccount b0 b2 ccount b1 b2
- (((count a') s1) = ((count a') s2)) |- (((((count (pred1 x)) s2) + ((count a') s2)) = (((count (pred1 x)) s2) + ((count a') s2))) = ((((count (pred1 x)) s2) + ((count a') s1)) = (((count (pred1 x)) s2) + ((count a') s2))))
T c==> c= ccount f0 f1 ccount f0 f2 c= c= c+ ccount * part cpred1 f3 f2 ccount f0 f2 c+ ccount * part cpred1 f3 f2 ccount f0 f2 c= c+ ccount * part cpred1 f3 f2 ccount f0 f1 c+ ccount * part cpred1 f3 f2 ccount f0 f2
- |- (((!P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) ==> ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)) = ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P))
T c= c==> ! ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- |- ((?a'. (((predD1 a) x) = a')) ==> (?a'. (((predD1 a) x) = a')))
T c==> c? / c= * * part cpredD1 f0 f1 b0 c? / c= * * part cpredD1 f0 f1 b0
- (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))) |- ((!x. ((P x) ==> Q)) = ((?x. (P x)) ==> Q))
T c==> c= c==> c? / * f0 b0 f1 ! c==> * f0 b0 f1 c= ! c==> * f0 b0 f1 c==> c? / * f0 b0 f1
- ((SUC ((count a) ((cat s1) s2))) = x) |- (x = (SUC ((count a) ((cat s1) s2))))
T c==> c= cSUC ccount f0 ccat f1 f2 f3 c= f3 cSUC ccount f0 ccat f1 f2
- (a x), (((predD1 a) x) = a') |- ((((predI (\x'. (~ ((pred1 x) x')))) a) = ((predD1 a) x)) ==> ((((count ((predI (pred1 x)) a)) s) + ((count ((predI (\x'. (~ ((pred1 x) x')))) a)) s)) = (((count (pred1 x)) s) + ((count a') s))))
T c==> * f0 f1 c==> c= * * part cpredD1 f0 f1 f2 c==> c= * * part cpredI / c~ cpred1 f1 b0 f0 * * part cpredD1 f0 f1 c= c+ ccount * * part cpredI * part cpred1 f1 f0 f3 ccount * * part cpredI / c~ cpred1 f1 b0 f0 f3 c+ ccount * part cpred1 f1 f3 ccount f2 f3
- (((predD1 a) x) = a') |- ((\a'. (((predD1 a) x) = a')) a')
T c==> c= * * part cpredD1 f0 f1 f2 * / c= * * part cpredD1 f0 f1 b0 f2
- (((count a) ((cat s1) s2)) = (NUMERAL _0)) |- ((((count a) ((cat s1) s2)) = (NUMERAL _0)) /\ (((count a) s1) = ((count a) s2)))
T c==> c= ccount f0 ccat f1 f2 cNUMERAL c_0 c/\ c= ccount f0 ccat f1 f2 cNUMERAL c_0 c= ccount f0 f1 ccount f0 f2
- (s = s3) |- ((s = s3) /\ (?s3. (s = s3)))
T c==> c= f0 f1 c/\ c= f0 f1 c? / c= f0 b0
- ((\s3. (s = s3)) s3) |- (((\s3. (s = s3)) s3) /\ (?s3. (s = s3)))
T c==> * / c= f0 b0 f1 c/\ * / c= f0 b0 f1 c? / c= f0 b0
- |- ((!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) ==> (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))))
T c==> ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1
- (((count a) s1) = (NUMERAL _0)) |- ((((count a) s1) = (NUMERAL _0)) /\ ((((count a) s2) = (NUMERAL _0)) ==> (((count a) s1) = ((count a) s2))))
T c==> c= ccount f0 f1 cNUMERAL c_0 c/\ c= ccount f0 f1 cNUMERAL c_0 c==> c= ccount f0 f2 cNUMERAL c_0 c= ccount f0 f1 ccount f0 f2
- (!a1. ((((count a1) ((cat s1) s2)) < n) ==> (((count a1) s1) = ((count a1) s2)))), (((count a') ((cat s1) s2)) < n) |- ((((count a') ((cat s1) s2)) < n) /\ (((count a') s1) = ((count a') s2)))
T c==> ! c==> c< ccount b0 ccat f0 f1 f2 c= ccount b0 f0 ccount b0 f1 c==> c< ccount f3 ccat f0 f1 f2 c/\ c< ccount f3 ccat f0 f1 f2 c= ccount f3 f0 ccount f3 f1
- ((SUC ((count a) ((cat s1) s2))) = x) |- (((SUC ((count a) ((cat s1) s2))) = x) /\ (?x. ((SUC ((count a) ((cat s1) s2))) = x)))
T c==> c= cSUC ccount f0 ccat f1 f2 f3 c/\ c= cSUC ccount f0 ccat f1 f2 f3 c? / c= cSUC ccount f0 ccat f1 f2 b0
- |- (((!x. (((\s3. (s = s3)) x) ==> (?s3. (s = s3)))) ==> ((?s3. (s = s3)) ==> (?s3. (s = s3)))) = ((?s3. (s = s3)) ==> (?s3. (s = s3))))
T c= c==> ! c==> * / c= f0 b1 b0 c? / c= f0 b1 c==> c? / c= f0 b0 c? / c= f0 b0 c==> c? / c= f0 b0 c? / c= f0 b0
- (!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))), (!a1. ((((count a1) ((cat s1) s2)) < n) ==> (((count a1) s1) = ((count a1) s2)))), (((count a) ((cat s1) s2)) < (SUC n)), ((MEM x) ((cat s1) s2)) |- (((MEM x) ((cat s1) s2)) /\ ((a x) ==> (((count a) s1) = ((count a) s2))))
T c==> ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 c==> ! c==> c< ccount b0 ccat f0 f1 f2 c= ccount b0 f0 ccount b0 f1 c==> c< ccount f3 ccat f0 f1 cSUC f2 c==> cMEM f4 ccat f0 f1 c/\ cMEM f4 ccat f0 f1 c==> * f3 f4 c= ccount f3 f0 ccount f3 f1
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))), ((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) |- (!n. (P n))
T c==> ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
- |- ((((predD1 a) x) = a') ==> (?a'. (((predD1 a) x) = a')))
T c==> c= * * part cpredD1 f0 f1 f2 c? / c= * * part cpredD1 f0 f1 b0
- ((\a'. (((predD1 a) x) = a')) a') |- (((((predD1 a) x) = a') ==> (?a'. (((predD1 a) x) = a'))) = (?a'. (((predD1 a) x) = a')))
T c==> * / c= * * part cpredD1 f0 f1 b0 f2 c= c==> c= * * part cpredD1 f0 f1 f2 c? / c= * * part cpredD1 f0 f1 b0 c? / c= * * part cpredD1 f0 f1 b0
- |- ((s = s3) ==> (?s3. (s = s3)))
T c==> c= f0 f1 c? / c= f0 b0
- |- ((!n. (!m. (!p. ((m <= n) ==> ((n <= p) ==> (m <= p)))))) ==> (!n. (!m. (!p. ((m <= n) ==> ((n <= p) ==> (m <= p)))))))
T c==> ! ! ! c==> c<= b1 b0 c==> c<= b0 b2 c<= b1 b2 ! ! ! c==> c<= b1 b0 c==> c<= b0 b2 c<= b1 b2
- ((!x. ((P x) ==> Q)) = ((?x. (P x)) ==> Q)) |- (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q)))
T c==> c= ! c==> * f0 b0 f1 c==> c? / * f0 b0 f1 c= c==> c? / * f0 b0 f1 ! c==> * f0 b0 f1
- (a x), (s = s3) |- (((count ((predI (pred1 x)) a)) s3) = ((count (pred1 x)) s3))
T c==> * f0 f1 c==> c= f2 f3 c= ccount * * part cpredI * part cpred1 f1 f0 f3 ccount * part cpred1 f1 f3
- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))) |- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))
T c==> c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0 c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
- (!x. ((a1 x) = (a2 x))), (!a1. (!a2. ((!x. ((a1 x) = (a2 x))) ==> (!s. (((count a1) s) = ((count a2) s)))))) |- ((!a1. (!a2. ((!x. ((a1 x) = (a2 x))) ==> (!s. (((count a1) s) = ((count a2) s)))))) /\ (!s. (((count a1) s) = ((count a2) s))))
T c==> ! c= * f0 b0 * f1 b0 c==> ! ! c==> ! c= * b0 b2 * b1 b2 ! c= ccount b0 b2 ccount b1 b2 c/\ ! ! c==> ! c= * b0 b2 * b1 b2 ! c= ccount b0 b2 ccount b1 b2 ! c= ccount f0 b0 ccount f1 b0
- (a = a1) |- (((((count a1) ((cat s1) s2)) < (SUC ((count a1) ((cat s1) s2)))) ==> (((count a1) s1) = ((count a1) s2))) = ((((count a) ((cat s1) s2)) < (SUC ((count a) ((cat s1) s2)))) ==> (((count a) s1) = ((count a) s2))))
T c==> c= f0 f1 c= c==> c< ccount f1 ccat f2 f3 cSUC ccount f1 ccat f2 f3 c= ccount f1 f2 ccount f1 f3 c==> c< ccount f0 ccat f2 f3 cSUC ccount f0 ccat f2 f3 c= ccount f0 f2 ccount f0 f3
- (!n. (!m. (!p. ((m <= n) ==> ((n <= p) ==> (m <= p)))))), (m <= n) |- ((!n. (!m. (!p. ((m <= n) ==> ((n <= p) ==> (m <= p)))))) /\ ((n <= p) ==> (m <= p)))
T c==> ! ! ! c==> c<= b1 b0 c==> c<= b0 b2 c<= b1 b2 c==> c<= f0 f1 c/\ ! ! ! c==> c<= b1 b0 c==> c<= b0 b2 c<= b1 b2 c==> c<= f1 f2 c<= f0 f2
- |- (((SUC ((count a) ((cat s1) s2))) = x) = ((\x. ((SUC ((count a) ((cat s1) s2))) = x)) x))
T c= c= cSUC ccount f0 ccat f1 f2 f3 * / c= cSUC ccount f0 ccat f1 f2 b0 f3
- (!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))), ((SUC ((count a) ((cat s1) s2))) = x) |- (!a1. ((((count a1) ((cat s1) s2)) < x) ==> (((count a1) s1) = ((count a1) s2))))
T c==> ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 c==> c= cSUC ccount f2 ccat f0 f1 f3 ! c==> c< ccount b0 ccat f0 f1 f3 c= ccount b0 f0 ccount b0 f1
- (s = s3) |- ((\s3. (s = s3)) s3)
T c==> c= f0 f1 * / c= f0 b0 f1
- |- (((!x. (((\a'. (((predD1 a) x) = a')) x) ==> (?a'. (((predD1 a) x) = a')))) ==> ((?a'. (((predD1 a) x) = a')) ==> (?a'. (((predD1 a) x) = a')))) = ((?a'. (((predD1 a) x) = a')) ==> (?a'. (((predD1 a) x) = a'))))
T c= c==> ! c==> * / c= * * part cpredD1 f0 f1 b1 b0 c? / c= * * part cpredD1 f0 f1 b1 c==> c? / c= * * part cpredD1 f0 f1 b0 c? / c= * * part cpredD1 f0 f1 b0 c==> c? / c= * * part cpredD1 f0 f1 b0 c? / c= * * part cpredD1 f0 f1 b0
- (((count a) ((cat s1) s2)) < (SUC n)) |- ((((count a) ((cat s1) s2)) < (SUC n)) = T)
T c==> c< ccount f0 ccat f1 f2 cSUC f3 c= c< ccount f0 ccat f1 f2 cSUC f3 cT
- |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- (a x), (((predI (\x'. (~ ((pred1 x) x')))) a) = ((predD1 a) x)), (((predD1 a) x) = a') |- ((((predI (\x'. (~ ((pred1 x) x')))) a) = ((predD1 a) x)) /\ ((((count ((predI (pred1 x)) a)) s) + ((count ((predI (\x'. (~ ((pred1 x) x')))) a)) s)) = (((count (pred1 x)) s) + ((count a') s))))
T c==> * f0 f1 c==> c= * * part cpredI / c~ cpred1 f1 b0 f0 * * part cpredD1 f0 f1 c==> c= * * part cpredD1 f0 f1 f2 c/\ c= * * part cpredI / c~ cpred1 f1 b0 f0 * * part cpredD1 f0 f1 c= c+ ccount * * part cpredI * part cpred1 f1 f0 f3 ccount * * part cpredI / c~ cpred1 f1 b0 f0 f3 c+ ccount * part cpred1 f1 f3 ccount f2 f3
- |- (((\x'. (f x')) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (T = ((NUMERAL _0) = (NUMERAL _0)))
T c= cT c= cNUMERAL c_0 cNUMERAL c_0
- (!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))), (!a1. ((((count a1) ((cat s1) s2)) < n) ==> (((count a1) s1) = ((count a1) s2)))), (((count a) ((cat s1) s2)) < (SUC n)) |- (((MEM x) ((cat s1) s2)) ==> ((a x) ==> (((count a) s1) = ((count a) s2))))
T c==> ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 c==> ! c==> c< ccount b0 ccat f0 f1 f2 c= ccount b0 f0 ccount b0 f1 c==> c< ccount f3 ccat f0 f1 cSUC f2 c==> cMEM f4 ccat f0 f1 c==> * f3 f4 c= ccount f3 f0 ccount f3 f1
- |- ((((\a'. (((predD1 a) x) = a')) a') ==> (?a'. (((predD1 a) x) = a'))) = T)
T c= c==> * / c= * * part cpredD1 f0 f1 b0 f2 c? / c= * * part cpredD1 f0 f1 b0 cT
- (!a1. (!a2. ((!x. ((a1 x) = (a2 x))) ==> (!s. (((count a1) s) = ((count a2) s)))))) |- ((!a1. (!a2. ((!x. ((a1 x) = (a2 x))) ==> (!s. (((count a1) s) = ((count a2) s)))))) /\ (!a1. (!a2. ((!x. ((a1 x) = (a2 x))) ==> (!s. (((count a1) s) = ((count a2) s)))))))
T c==> ! ! c==> ! c= * b0 b2 * b1 b2 ! c= ccount b0 b2 ccount b1 b2 c/\ ! ! c==> ! c= * b0 b2 * b1 b2 ! c= ccount b0 b2 ccount b1 b2 ! ! c==> ! c= * b0 b2 * b1 b2 ! c= ccount b0 b2 ccount b1 b2
- (!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))), (!a1. ((((count a1) ((cat s1) s2)) < n) ==> (((count a1) s1) = ((count a1) s2)))), ((NUMERAL _0) < ((count a) ((cat s1) s2))), (((count a) ((cat s1) s2)) < (SUC n)) |- (((NUMERAL _0) < ((count a) ((cat s1) s2))) /\ (((count a) s1) = ((count a) s2)))
T c==> ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 c==> ! c==> c< ccount b0 ccat f0 f1 f2 c= ccount b0 f0 ccount b0 f1 c==> c< cNUMERAL c_0 ccount f3 ccat f0 f1 c==> c< ccount f3 ccat f0 f1 cSUC f2 c/\ c< cNUMERAL c_0 ccount f3 ccat f0 f1 c= ccount f3 f0 ccount f3 f1
- |- (((!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) ==> ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)) = ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q))
T c= c==> ! c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) |- ((!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) /\ (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))))
T c==> ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 c/\ ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1
- |- ((((\s3. (s = s3)) s3) ==> (?s3. (s = s3))) = T)
T c= c==> * / c= f0 b0 f1 c? / c= f0 b0 cT
- (s = s3) |- ((((count ((predI (pred1 x)) a)) s3) = ((count (pred1 x)) s3)) = (((count ((predI (pred1 x)) a)) s) = ((count (pred1 x)) s)))
T c==> c= f0 f1 c= c= ccount * * part cpredI * part cpred1 f2 f3 f1 ccount * part cpred1 f2 f1 c= ccount * * part cpredI * part cpred1 f2 f3 f0 ccount * part cpred1 f2 f0
- ((\a'. (((predD1 a) x) = a')) a') |- (((\a'. (((predD1 a) x) = a')) a') /\ (?a'. (((predD1 a) x) = a')))
T c==> * / c= * * part cpredD1 f0 f1 b0 f2 c/\ * / c= * * part cpredD1 f0 f1 b0 f2 c? / c= * * part cpredD1 f0 f1 b0
- (!x. (((MEM x) ((cat s1) s2)) ==> (((count (pred1 x)) s1) = ((count (pred1 x)) s2)))), (!a1. ((((count a1) ((cat s1) s2)) < n) ==> (((count a1) s1) = ((count a1) s2)))), (a x), (((count a) ((cat s1) s2)) < (SUC n)), ((MEM x) ((cat s1) s2)) |- ((a x) /\ (((count a) s1) = ((count a) s2)))
T c==> ! c==> cMEM b0 ccat f0 f1 c= ccount * part cpred1 b0 f0 ccount * part cpred1 b0 f1 c==> ! c==> c< ccount b0 ccat f0 f1 f2 c= ccount b0 f0 ccount b0 f1 c==> * f3 f4 c==> c< ccount f3 ccat f0 f1 cSUC f2 c==> cMEM f4 ccat f0 f1 c/\ * f3 f4 c= ccount f3 f0 ccount f3 f1
- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))), ((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) |- ((!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n)))) /\ (!n. (P n)))
T c==> ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 c/\ ! c==> c/\ * b0 cNUMERAL c_0 ! c==> * b0 b1 * b0 cSUC b1 ! * b0 b1 ! * f0 b0
- |- (((SUC ((count a) ((cat s1) s2))) = x) ==> (?x. ((SUC ((count a) ((cat s1) s2))) = x)))
T c==> c= cSUC ccount f0 ccat f1 f2 f3 c? / c= cSUC ccount f0 ccat f1 f2 b0
