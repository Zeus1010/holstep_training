N OPEN_SEGMENT_1
C |- (!a. (!b. (open (open_segment (a , b)))))
T copen * part copen_segment c, f0 f1
D TRUTH
A |- T
T cT
D COND_ELIM_THM
A |- ((P (((COND c) x) y)) = ((c ==> (P x)) /\ ((~ c) ==> (P y))))
T c= * f0 cCOND f1 f2 f3 c/\ c==> f1 * f0 f2 c==> c~ f1 * f0 f3
D OPEN_INTERVAL
A |- (!a. (!b. (open (open_interval (a , b)))))
T copen * part copen_interval c, f0 f1
D SEGMENT_1
A |- ((!a. (!b. ((closed_segment ((CONS (a , b)) NIL)) = (((COND ((real_le (drop a)) (drop b))) (closed_interval ((CONS (a , b)) NIL))) (closed_interval ((CONS (b , a)) NIL)))))) /\ (!a. (!b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a)))))))
T c/\ ! ! c= * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND creal_le cdrop b0 cdrop b1 * part cclosed_interval cCONS c, b0 b1 cNIL * part cclosed_interval cCONS c, b1 b0 cNIL ! ! c= * part copen_segment c, b0 b1 * * * part cCOND creal_le cdrop b0 cdrop b1 * part copen_interval c, b0 b1 * part copen_interval c, b1 b0
+ |- (((!a. (!b. (open (open_interval (a , b))))) ==> ((\a. (!b. (open (open_interval (a , b))))) a)) = ((\a. (!b. (open (open_interval (a , b))))) a))
T c= c==> ! ! copen * part copen_interval c, b0 b1 * / ! copen * part copen_interval c, b0 b1 f0 * / ! copen * part copen_interval c, b0 b1 f0
+ |- (((~ ((real_le (drop a)) (drop b))) ==> (open (open_interval (b , a)))) = ((((real_le (drop a)) (drop b)) ==> (open (open_interval (a , b)))) /\ ((~ ((real_le (drop a)) (drop b))) ==> (open (open_interval (b , a))))))
T c= c==> c~ creal_le cdrop f0 cdrop f1 copen * part copen_interval c, f1 f0 c/\ c==> creal_le cdrop f0 cdrop f1 copen * part copen_interval c, f0 f1 c==> c~ creal_le cdrop f0 cdrop f1 copen * part copen_interval c, f1 f0
- (~ ((real_le (drop a)) (drop b))) |- (((real_le (drop a)) (drop b)) = F)
T c==> c~ creal_le cdrop f0 cdrop f1 c= creal_le cdrop f0 cdrop f1 cF
+ |- (((((real_le (drop a)) (drop b)) ==> (open (open_interval (a , b)))) /\ ((~ ((real_le (drop a)) (drop b))) ==> (open (open_interval (b , a))))) = (open (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a)))))
T c= c/\ c==> creal_le cdrop f0 cdrop f1 copen * part copen_interval c, f0 f1 c==> c~ creal_le cdrop f0 cdrop f1 copen * part copen_interval c, f1 f0 copen * * * part cCOND creal_le cdrop f0 cdrop f1 * part copen_interval c, f0 f1 * part copen_interval c, f1 f0
- (~ ((real_le (drop a)) (drop b))) |- ((open (open_interval (b , a))) = (open (open_interval (b , a))))
T c==> c~ creal_le cdrop f0 cdrop f1 c= copen * part copen_interval c, f1 f0 copen * part copen_interval c, f1 f0
- |- ((\b. ((closed_segment ((CONS (a , b)) NIL)) = (((COND ((real_le (drop a)) (drop b))) (closed_interval ((CONS (a , b)) NIL))) (closed_interval ((CONS (b , a)) NIL))))) b)
T * / c= * part cclosed_segment cCONS c, f0 b0 cNIL * * * part cCOND creal_le cdrop f0 cdrop b0 * part cclosed_interval cCONS c, f0 b0 cNIL * part cclosed_interval cCONS c, b0 f0 cNIL f1
+ |- ((\b. (open (open_interval (a , b)))) b)
T * / copen * part copen_interval c, f0 b0 f1
+ |- (T = (open (open_interval (b , a))))
T c= cT copen * part copen_interval c, f0 f1
+ |- (((!b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a))))) ==> ((\b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a))))) b)) = ((\b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a))))) b))
T c= c==> ! c= * part copen_segment c, f0 b0 * * * part cCOND creal_le cdrop f0 cdrop b0 * part copen_interval c, f0 b0 * part copen_interval c, b0 f0 * / c= * part copen_segment c, f0 b0 * * * part cCOND creal_le cdrop f0 cdrop b0 * part copen_interval c, f0 b0 * part copen_interval c, b0 f0 f1 * / c= * part copen_segment c, f0 b0 * * * part cCOND creal_le cdrop f0 cdrop b0 * part copen_interval c, f0 b0 * part copen_interval c, b0 f0 f1
+ |- (((!a. (!b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a)))))) ==> ((\a. (!b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a)))))) a)) = ((\a. (!b. ((open_segment (a , b)) = (((COND ((real_le (drop a)) (drop b))) (open_interval (a , b))) (open_interval (b , a)))))) a))
T c= c==> ! ! c= * part copen_segment c, b0 b1 * * * part cCOND creal_le cdrop b0 cdrop b1 * part copen_interval c, b0 b1 * part copen_interval c, b1 b0 * / ! c= * part copen_segment c, b0 b1 * * * part cCOND creal_le cdrop b0 cdrop b1 * part copen_interval c, b0 b1 * part copen_interval c, b1 b0 f0 * / ! c= * part copen_segment c, b0 b1 * * * part cCOND creal_le cdrop b0 cdrop b1 * part copen_interval c, b0 b1 * part copen_interval c, b1 b0 f0
- |- (((!b. ((closed_segment ((CONS (a , b)) NIL)) = (((COND ((real_le (drop a)) (drop b))) (closed_interval ((CONS (a , b)) NIL))) (closed_interval ((CONS (b , a)) NIL))))) ==> ((\b. ((closed_segment ((CONS (a , b)) NIL)) = (((COND ((real_le (drop a)) (drop b))) (closed_interval ((CONS (a , b)) NIL))) (closed_interval ((CONS (b , a)) NIL))))) b)) = ((\b. ((closed_segment ((CONS (a , b)) NIL)) = (((COND ((real_le (drop a)) (drop b))) (closed_interval ((CONS (a , b)) NIL))) (closed_interval ((CONS (b , a)) NIL))))) b))
T c= c==> ! c= * part cclosed_segment cCONS c, f0 b0 cNIL * * * part cCOND creal_le cdrop f0 cdrop b0 * part cclosed_interval cCONS c, f0 b0 cNIL * part cclosed_interval cCONS c, b0 f0 cNIL * / c= * part cclosed_segment cCONS c, f0 b0 cNIL * * * part cCOND creal_le cdrop f0 cdrop b0 * part cclosed_interval cCONS c, f0 b0 cNIL * part cclosed_interval cCONS c, b0 f0 cNIL f1 * / c= * part cclosed_segment cCONS c, f0 b0 cNIL * * * part cCOND creal_le cdrop f0 cdrop b0 * part cclosed_interval cCONS c, f0 b0 cNIL * part cclosed_interval cCONS c, b0 f0 cNIL f1
+ |- ((open (open_segment (a , b))) = T)
T c= copen * part copen_segment c, f0 f1 cT
+ |- ((((real_le (drop a)) (drop b)) ==> (open (open_interval (a , b)))) /\ ((~ ((real_le (drop a)) (drop b))) ==> (open (open_interval (b , a)))))
T c/\ c==> creal_le cdrop f0 cdrop f1 copen * part copen_interval c, f0 f1 c==> c~ creal_le cdrop f0 cdrop f1 copen * part copen_interval c, f1 f0
- ((real_le (drop a)) (drop b)) |- (((real_le (drop a)) (drop b)) = T)
T c==> creal_le cdrop f0 cdrop f1 c= creal_le cdrop f0 cdrop f1 cT
- |- ((closed_segment ((CONS (a , b)) NIL)) = (((COND ((real_le (drop a)) (drop b))) (closed_interval ((CONS (a , b)) NIL))) (closed_interval ((CONS (b , a)) NIL))))
T c= * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND creal_le cdrop f0 cdrop f1 * part cclosed_interval cCONS c, f0 f1 cNIL * part cclosed_interval cCONS c, f1 f0 cNIL
- ((real_le (drop a)) (drop b)) |- ((open (open_interval (a , b))) = (open (open_interval (a , b))))
T c==> creal_le cdrop f0 cdrop f1 c= copen * part copen_interval c, f0 f1 copen * part copen_interval c, f0 f1
- |- (((!a. (!b. ((closed_segment ((CONS (a , b)) NIL)) = (((COND ((real_le (drop a)) (drop b))) (closed_interval ((CONS (a , b)) NIL))) (closed_interval ((CONS (b , a)) NIL)))))) ==> ((\a. (!b. ((closed_segment ((CONS (a , b)) NIL)) = (((COND ((real_le (drop a)) (drop b))) (closed_interval ((CONS (a , b)) NIL))) (closed_interval ((CONS (b , a)) NIL)))))) a)) = ((\a. (!b. ((closed_segment ((CONS (a , b)) NIL)) = (((COND ((real_le (drop a)) (drop b))) (closed_interval ((CONS (a , b)) NIL))) (closed_interval ((CONS (b , a)) NIL)))))) a))
T c= c==> ! ! c= * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND creal_le cdrop b0 cdrop b1 * part cclosed_interval cCONS c, b0 b1 cNIL * part cclosed_interval cCONS c, b1 b0 cNIL * / ! c= * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND creal_le cdrop b0 cdrop b1 * part cclosed_interval cCONS c, b0 b1 cNIL * part cclosed_interval cCONS c, b1 b0 cNIL f0 * / ! c= * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND creal_le cdrop b0 cdrop b1 * part cclosed_interval cCONS c, b0 b1 cNIL * part cclosed_interval cCONS c, b1 b0 cNIL f0
- |- ((\a. (!b. ((closed_segment ((CONS (a , b)) NIL)) = (((COND ((real_le (drop a)) (drop b))) (closed_interval ((CONS (a , b)) NIL))) (closed_interval ((CONS (b , a)) NIL)))))) a)
T * / ! c= * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND creal_le cdrop b0 cdrop b1 * part cclosed_interval cCONS c, b0 b1 cNIL * part cclosed_interval cCONS c, b1 b0 cNIL f0
