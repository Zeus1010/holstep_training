N List_hypermap.size_list_pairs
C |- (!l. ((sizel (list_pairs l)) = (sizel l)))
T c= csizel clist_pairs f0 csizel f0
D TRUTH
A |- T
T cT
D LE_REFL
A |- (!n. (n <= n))
T c<= f0 f0
D Seq.size_rot
A |- (!n0. (!s. ((sizel ((rot n0) s)) = (sizel s))))
T c= csizel crot f0 f1 csizel f1
D Seq.size1_zip
A |- (!s. (!t. (((sizel s) <= (sizel t)) ==> ((sizel ((zip s) t)) = (sizel s)))))
T c==> c<= csizel f0 csizel f1 c= csizel czip f0 f1 csizel f0
D List_hypermap.list_pairs
A |- (!list. ((list_pairs list) = ((zip list) ((rot (NUMERAL (BIT1 _0))) list))))
T c= clist_pairs f0 czip f0 crot cNUMERAL cBIT1 c_0 f0
+ |- (((sizel l) <= (sizel l)) = ((sizel l) <= (sizel ((rot (NUMERAL (BIT1 _0))) l))))
T c= c<= csizel f0 csizel f0 c<= csizel f0 csizel crot cNUMERAL cBIT1 c_0 f0
+ |- (((sizel (list_pairs l)) = (sizel l)) = T)
T c= c= csizel clist_pairs f0 csizel f0 cT
- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))) |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c==> c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0 c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
+ |- ((\n0. (!s. ((sizel ((rot n0) s)) = (sizel s)))) n0)
T * / ! c= csizel crot b0 b1 csizel b1 f0
- |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
+ |- ((\t. (((sizel s) <= (sizel t)) ==> ((sizel ((zip s) t)) = (sizel s)))) t)
T * / c==> c<= csizel f0 csizel b0 c= csizel czip f0 b0 csizel f0 f1
+ |- ((\s. ((sizel ((rot n0) s)) = (sizel s))) s)
T * / c= csizel crot f0 b0 csizel b0 f1
- |- (T = ((sizel l) = (sizel l)))
T c= cT c= csizel f0 csizel f0
+ |- ((sizel ((zip l) ((rot (NUMERAL (BIT1 _0))) l))) = (sizel l))
T c= csizel czip f0 crot cNUMERAL cBIT1 c_0 f0 csizel f0
+ |- ((sizel l) <= (sizel ((rot (NUMERAL (BIT1 _0))) l)))
T c<= csizel f0 csizel crot cNUMERAL cBIT1 c_0 f0
+ |- ((((sizel l) <= (sizel ((rot (NUMERAL (BIT1 _0))) l))) ==> ((sizel ((zip l) ((rot (NUMERAL (BIT1 _0))) l))) = (sizel l))) ==> ((sizel ((zip l) ((rot (NUMERAL (BIT1 _0))) l))) = (sizel l)))
T c==> c==> c<= csizel f0 csizel crot cNUMERAL cBIT1 c_0 f0 c= csizel czip f0 crot cNUMERAL cBIT1 c_0 f0 csizel f0 c= csizel czip f0 crot cNUMERAL cBIT1 c_0 f0 csizel f0
+ |- ((\list. ((list_pairs list) = ((zip list) ((rot (NUMERAL (BIT1 _0))) list)))) list)
T * / c= clist_pairs b0 czip b0 crot cNUMERAL cBIT1 c_0 b0 f0
+ |- (((((sizel l) <= (sizel ((rot (NUMERAL (BIT1 _0))) l))) /\ (((sizel ((zip l) ((rot (NUMERAL (BIT1 _0))) l))) = (sizel l)) ==> ((sizel ((zip l) ((rot (NUMERAL (BIT1 _0))) l))) = (sizel l)))) ==> ((((sizel l) <= (sizel ((rot (NUMERAL (BIT1 _0))) l))) ==> ((sizel ((zip l) ((rot (NUMERAL (BIT1 _0))) l))) = (sizel l))) ==> ((sizel ((zip l) ((rot (NUMERAL (BIT1 _0))) l))) = (sizel l)))) = ((((sizel l) <= (sizel ((rot (NUMERAL (BIT1 _0))) l))) ==> ((sizel ((zip l) ((rot (NUMERAL (BIT1 _0))) l))) = (sizel l))) ==> ((sizel ((zip l) ((rot (NUMERAL (BIT1 _0))) l))) = (sizel l))))
T c= c==> c/\ c<= csizel f0 csizel crot cNUMERAL cBIT1 c_0 f0 c==> c= csizel czip f0 crot cNUMERAL cBIT1 c_0 f0 csizel f0 c= csizel czip f0 crot cNUMERAL cBIT1 c_0 f0 csizel f0 c==> c==> c<= csizel f0 csizel crot cNUMERAL cBIT1 c_0 f0 c= csizel czip f0 crot cNUMERAL cBIT1 c_0 f0 csizel f0 c= csizel czip f0 crot cNUMERAL cBIT1 c_0 f0 csizel f0 c==> c==> c<= csizel f0 csizel crot cNUMERAL cBIT1 c_0 f0 c= csizel czip f0 crot cNUMERAL cBIT1 c_0 f0 csizel f0 c= csizel czip f0 crot cNUMERAL cBIT1 c_0 f0 csizel f0
+ |- (((!s. (!t. (((sizel s) <= (sizel t)) ==> ((sizel ((zip s) t)) = (sizel s))))) ==> ((\s. (!t. (((sizel s) <= (sizel t)) ==> ((sizel ((zip s) t)) = (sizel s))))) s)) = ((\s. (!t. (((sizel s) <= (sizel t)) ==> ((sizel ((zip s) t)) = (sizel s))))) s))
T c= c==> ! ! c==> c<= csizel b0 csizel b1 c= csizel czip b0 b1 csizel b0 * / ! c==> c<= csizel b0 csizel b1 c= csizel czip b0 b1 csizel b0 f0 * / ! c==> c<= csizel b0 csizel b1 c= csizel czip b0 b1 csizel b0 f0
- ((sizel ((zip l) ((rot (NUMERAL (BIT1 _0))) l))) = (sizel l)) |- (((sizel l) = (sizel l)) = ((sizel ((zip l) ((rot (NUMERAL (BIT1 _0))) l))) = (sizel l)))
T c==> c= csizel czip f0 crot cNUMERAL cBIT1 c_0 f0 csizel f0 c= c= csizel f0 csizel f0 c= csizel czip f0 crot cNUMERAL cBIT1 c_0 f0 csizel f0
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)
T * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- |- (((!P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) ==> ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)) = ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P))
T c= c==> ! ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- ((sizel s) <= (sizel t)) |- (((sizel s) <= (sizel t)) /\ ((sizel ((zip s) t)) = (sizel s)))
T c==> c<= csizel f0 csizel f1 c/\ c<= csizel f0 csizel f1 c= csizel czip f0 f1 csizel f0
- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))) |- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))
T c==> c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0 c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
- |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- |- (((!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) ==> ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)) = ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q))
T c= c==> ! c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
