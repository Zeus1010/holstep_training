N Terminal.tau3_taum_40
C |- (!v0. (!v1. (!v2. (((v0 IN ball_annulus) /\ ((v1 IN ball_annulus) /\ ((v2 IN ball_annulus) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))))) ==> ((((tau3 v0) v1) v2) = ((((((taum (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1))))))))
T c==> c/\ cIN f0 part cball_annulus c/\ cIN f1 part cball_annulus c/\ cIN f2 part cball_annulus c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= ctau3 f0 f1 f2 ctaum cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D FORALL_BOOL_THM
A |- ((!b. (P b)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D DIST_SYM
A |- (!x. (!y. ((distance (x , y)) = (distance (y , x)))))
T c= cdistance c, f0 f1 cdistance c, f1 f0
D DIST_0
A |- (!x. (((distance (x , (vec (NUMERAL _0)))) = (vector_norm x)) /\ ((distance ((vec (NUMERAL _0)) , x)) = (vector_norm x))))
T c/\ c= cdistance c, f0 cvec cNUMERAL c_0 cvector_norm f0 c= cdistance c, cvec cNUMERAL c_0 f0 cvector_norm f0
D Sphere.rhazim
A |- (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((rhazim y1) y2) y3) y4) y5) y6) = ((real_mul (rho y1)) ((((((dih_y y1) y2) y3) y4) y5) y6)))))))))
T c= crhazim f0 f1 f2 f3 f4 f5 creal_mul crho f0 cdih_y f0 f1 f2 f3 f4 f5
D Sphere.node2_y
A |- (!f. (!y2. (!y3. (!y1. (!y5. (!y6. (!y4. ((((((((node2_y f) y1) y2) y3) y4) y5) y6) = ((((((f y2) y3) y1) y5) y6) y4)))))))))
T c= cnode2_y f0 f1 f2 f3 f4 f5 f6 * * * * * * f0 f2 f3 f1 f5 f6 f4
D Sphere.node3_y
A |- (!f. (!y3. (!y1. (!y2. (!y6. (!y4. (!y5. ((((((((node3_y f) y1) y2) y3) y4) y5) y6) = ((((((f y3) y1) y2) y6) y4) y5)))))))))
T c= cnode3_y f0 f1 f2 f3 f4 f5 f6 * * * * * * f0 f3 f1 f2 f6 f4 f5
D Sphere.rhazim2
A |- (rhazim2 = (node2_y rhazim))
T c= part crhazim2 * part cnode2_y part crhazim
D Sphere.rhazim3
A |- (rhazim3 = (node3_y rhazim))
T c= part crhazim3 * part cnode3_y part crhazim
D Nonlinear_lemma.sol0_const1
A |- (sol0 = ((real_mul pi) const1))
T c= csol0 creal_mul cpi cconst1
D Nonlinear_lemma.taum_123
A |- (!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((taum y1) y2) y3) y4) y5) y6) = ((real_add ((((((rhazim y1) y2) y3) y4) y5) y6)) ((real_add ((((((rhazim2 y1) y2) y3) y4) y5) y6)) ((real_sub ((((((rhazim3 y1) y2) y3) y4) y5) y6)) ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) const1)) pi)))))))))))
T c= ctaum f0 f1 f2 f3 f4 f5 creal_add crhazim f0 f1 f2 f3 f4 f5 creal_add crhazim2 f0 f1 f2 f3 f4 f5 creal_sub crhazim3 f0 f1 f2 f3 f4 f5 creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 cconst1 cpi
D Merge_ineq.DIHV_EQ_DIH_Y
A |- (!v0. (!v1. (!v2. (!v3. (((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) ==> ((LET (\v01. (LET_END ((LET (\v02. (LET_END ((LET (\v03. (LET_END ((LET (\v12. (LET_END ((LET (\v13. (LET_END ((LET (\v23. (LET_END (((((dihV v0) v1) v2) v3) = ((((((dih_y v01) v02) v03) v23) v13) v12))))) (distance (v2 , v3)))))) (distance (v1 , v3)))))) (distance (v1 , v2)))))) (distance (v0 , v3)))))) (distance (v0 , v2)))))) (distance (v0 , v1))))))))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= cdihV f0 f1 f2 f3 cdih_y b0 b1 b2 b5 b4 b3 cdistance c, f2 f3 cdistance c, f1 f3 cdistance c, f1 f2 cdistance c, f0 f3 cdistance c, f0 f2 cdistance c, f0 f1
D Appendix.tau3
A |- (!v3. (!v1. (!v2. ((((tau3 v1) v2) v3) = ((real_add ((real_mul (rho (vector_norm v1))) ((((dihV (vec (NUMERAL _0))) v1) v2) v3))) ((real_add ((real_mul (rho (vector_norm v2))) ((((dihV (vec (NUMERAL _0))) v2) v3) v1))) ((real_sub ((real_mul (rho (vector_norm v3))) ((((dihV (vec (NUMERAL _0))) v3) v1) v2))) ((real_add pi) sol0))))))))
T c= ctau3 f0 f1 f2 creal_add creal_mul crho cvector_norm f0 cdihV cvec cNUMERAL c_0 f0 f1 f2 creal_add creal_mul crho cvector_norm f1 cdihV cvec cNUMERAL c_0 f1 f2 f0 creal_sub creal_mul crho cvector_norm f2 cdihV cvec cNUMERAL c_0 f2 f0 f1 creal_add cpi csol0
D Terminal.NONPARALLEL_BALL_ANNULUS40_ALT
A |- (!v. (!w. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v , w))) /\ (((real_lt (distance (v , w))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v IN ball_annulus) /\ (w IN ball_annulus)))) ==> (~ (collinear ((vec (NUMERAL _0)) INSERT (v INSERT (w INSERT EMPTY))))))))
T c==> c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v0))) /\ (((real_lt (distance (v1 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ v) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))))))))
T * / ! c= * / * b0 b2 b1 * b0 b1 / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f1 part cball_annulus c/\ c~ b0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))) = ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ (((~ F) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))))
T c= c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c/\ creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f2 part cball_annulus c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c/\ creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f2 part cball_annulus c/\ c/\ c~ cF c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY
+ |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) = (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))))
T c= c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1
+ |- ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ (((~ v) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))))
T * / ! c= * / * b0 b2 b1 * b0 b1 / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ c~ b0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) |- (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) = T)
T c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c= creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cT
+ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1))))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))), ((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (v0 IN ball_annulus), (v1 IN ball_annulus), (v2 IN ball_annulus) |- ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v0))) /\ (((real_lt (distance (v1 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ F) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))))
T c==> c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c==> creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cIN f1 part cball_annulus c==> cIN f2 part cball_annulus c==> cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c~ cF c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
+ |- (((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2)))))) = ((((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2)))))) ==> (((real_add ((real_mul (rho (vector_norm v0))) ((((dihV (vec (NUMERAL _0))) v0) v1) v2))) ((real_add ((real_mul (rho (vector_norm v1))) ((((dihV (vec (NUMERAL _0))) v1) v2) v0))) ((real_sub ((real_mul (rho (vector_norm v2))) ((((dihV (vec (NUMERAL _0))) v2) v0) v1))) ((real_add pi) ((real_mul pi) const1))))) = ((real_add ((real_mul (rho (vector_norm v0))) ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1))))) ((real_add ((real_mul (rho (vector_norm v1))) ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2))))) ((real_sub ((real_mul (rho (vector_norm v2))) ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))) ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) const1)) pi)))))) /\ ((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))))
T c= c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 c/\ c==> c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 c= creal_add creal_mul crho cvector_norm f0 cdihV cvec cNUMERAL c_0 f0 f1 f2 creal_add creal_mul crho cvector_norm f1 cdihV cvec cNUMERAL c_0 f1 f2 f0 creal_sub creal_mul crho cvector_norm f2 cdihV cvec cNUMERAL c_0 f2 f0 f1 creal_add cpi creal_mul cpi cconst1 creal_add creal_mul crho cvector_norm f0 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 creal_add creal_mul crho cvector_norm f1 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 creal_sub creal_mul crho cvector_norm f2 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 cconst1 cpi c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2
+ |- (T = (((F ==> B) /\ F) ==> B))
T c= cT c==> c/\ c==> cF f0 cF f0
+ |- (!y. (((\x. ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))) /\ (((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v0 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v0))) /\ (((real_lt (distance (v1 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ (~ v))))))) x)) y) = ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))) /\ (((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v0 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v0))) /\ (((real_lt (distance (v1 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ (~ v))))))) y)))
T c= * / * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c/\ creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus c~ b1 b0 f3 * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c/\ creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus c~ b0 f3
+ |- (((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((taum y1) y2) y3) y4) y5) y6) = ((real_add ((((((rhazim y1) y2) y3) y4) y5) y6)) ((real_add ((((((rhazim2 y1) y2) y3) y4) y5) y6)) ((real_sub ((((((rhazim3 y1) y2) y3) y4) y5) y6)) ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) const1)) pi))))))))))) ==> ((\y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((taum y1) y2) y3) y4) y5) y6) = ((real_add ((((((rhazim y1) y2) y3) y4) y5) y6)) ((real_add ((((((rhazim2 y1) y2) y3) y4) y5) y6)) ((real_sub ((((((rhazim3 y1) y2) y3) y4) y5) y6)) ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) const1)) pi))))))))))) y1)) = ((\y1. (!y2. (!y3. (!y4. (!y5. (!y6. (((((((taum y1) y2) y3) y4) y5) y6) = ((real_add ((((((rhazim y1) y2) y3) y4) y5) y6)) ((real_add ((((((rhazim2 y1) y2) y3) y4) y5) y6)) ((real_sub ((((((rhazim3 y1) y2) y3) y4) y5) y6)) ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) const1)) pi))))))))))) y1))
T c= c==> ! ! ! ! ! ! c= ctaum b0 b1 b2 b3 b4 b5 creal_add crhazim b0 b1 b2 b3 b4 b5 creal_add crhazim2 b0 b1 b2 b3 b4 b5 creal_sub crhazim3 b0 b1 b2 b3 b4 b5 creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 cconst1 cpi * / ! ! ! ! ! c= ctaum b0 b1 b2 b3 b4 b5 creal_add crhazim b0 b1 b2 b3 b4 b5 creal_add crhazim2 b0 b1 b2 b3 b4 b5 creal_sub crhazim3 b0 b1 b2 b3 b4 b5 creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 cconst1 cpi f0 * / ! ! ! ! ! c= ctaum b0 b1 b2 b3 b4 b5 creal_add crhazim b0 b1 b2 b3 b4 b5 creal_add crhazim2 b0 b1 b2 b3 b4 b5 creal_sub crhazim3 b0 b1 b2 b3 b4 b5 creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 cconst1 cpi f0
+ |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
+ |- (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v1 INSERT EMPTY))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))))) = ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ (((~ F) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v1 INSERT EMPTY)))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))))))
T c= c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ c~ cF c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
+ |- (((!y4. (!y5. (!y6. (((((((rhazim y1) y2) y3) y4) y5) y6) = ((real_mul (rho y1)) ((((((dih_y y1) y2) y3) y4) y5) y6)))))) ==> ((\y4. (!y5. (!y6. (((((((rhazim y1) y2) y3) y4) y5) y6) = ((real_mul (rho y1)) ((((((dih_y y1) y2) y3) y4) y5) y6)))))) y4)) = ((\y4. (!y5. (!y6. (((((((rhazim y1) y2) y3) y4) y5) y6) = ((real_mul (rho y1)) ((((((dih_y y1) y2) y3) y4) y5) y6)))))) y4))
T c= c==> ! ! ! c= crhazim f0 f1 f2 b0 b1 b2 creal_mul crho f0 cdih_y f0 f1 f2 b0 b1 b2 * / ! ! c= crhazim f0 f1 f2 b0 b1 b2 creal_mul crho f0 cdih_y f0 f1 f2 b0 b1 b2 f3 * / ! ! c= crhazim f0 f1 f2 b0 b1 b2 creal_mul crho f0 cdih_y f0 f1 f2 b0 b1 b2 f3
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (~ F), (~ (P b)), (P c), (b = c) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ cF cF
- |- ((((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))) /\ ((((((((dih_y (distance ((vec (NUMERAL _0)) , v0))) (distance ((vec (NUMERAL _0)) , v1))) (distance ((vec (NUMERAL _0)) , v2))) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1))) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((((dih_y (distance ((vec (NUMERAL _0)) , v1))) (distance ((vec (NUMERAL _0)) , v2))) (distance ((vec (NUMERAL _0)) , v0))) (distance (v2 , v0))) (distance (v1 , v0))) (distance (v1 , v2))) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2)))))))) = ((\x. ((\v. (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))) /\ ((((((((dih_y (distance ((vec (NUMERAL _0)) , v0))) (distance ((vec (NUMERAL _0)) , v1))) (distance ((vec (NUMERAL _0)) , v2))) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1))) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((((dih_y (distance ((vec (NUMERAL _0)) , v1))) (distance ((vec (NUMERAL _0)) , v2))) (distance ((vec (NUMERAL _0)) , v0))) (distance (v2 , v0))) (distance (v1 , v0))) (distance (v1 , v2))) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (v = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))))) x)) ((((dihV (vec (NUMERAL _0))) v2) v0) v1)))
T c= c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c= cdih_y cdistance c, cvec cNUMERAL c_0 f2 cdistance c, cvec cNUMERAL c_0 f0 cdistance c, cvec cNUMERAL c_0 f1 cdistance c, f0 f1 cdistance c, f2 f1 cdistance c, f2 f0 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f2 f1 cdistance c, f2 f0 c/\ c= cdih_y cdistance c, cvec cNUMERAL c_0 f0 cdistance c, cvec cNUMERAL c_0 f1 cdistance c, cvec cNUMERAL c_0 f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f2 f1 cdistance c, f2 f0 cdistance c, f0 f1 c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f2 f0 cdistance c, f0 f1 cdistance c, f2 f1 * / * / c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c= cdih_y cdistance c, cvec cNUMERAL c_0 f2 cdistance c, cvec cNUMERAL c_0 f0 cdistance c, cvec cNUMERAL c_0 f1 cdistance c, f0 f1 cdistance c, f2 f1 cdistance c, f2 f0 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f2 f1 cdistance c, f2 f0 c/\ c= cdih_y cdistance c, cvec cNUMERAL c_0 f0 cdistance c, cvec cNUMERAL c_0 f1 cdistance c, cvec cNUMERAL c_0 f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f2 f1 cdistance c, f2 f0 cdistance c, f0 f1 c= b1 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f2 f0 cdistance c, f0 f1 cdistance c, f2 f1 b0 cdihV cvec cNUMERAL c_0 f1 f2 f0
+ |- (((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F) = F)
T c= c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF cF
+ |- ((\y. (((\x. ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v0))) /\ (((real_lt (distance (v1 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ v) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))))))) x)) y) = ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v0))) /\ (((real_lt (distance (v1 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ v) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))))))) y))) (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY)))))
T * / c= * / * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f1 part cball_annulus c/\ c~ b2 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 b0 * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f1 part cball_annulus c/\ c~ b1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
+ |- ((\y3. (!y4. (!y5. (!y6. (((((((taum y1) y2) y3) y4) y5) y6) = ((real_add ((((((rhazim y1) y2) y3) y4) y5) y6)) ((real_add ((((((rhazim2 y1) y2) y3) y4) y5) y6)) ((real_sub ((((((rhazim3 y1) y2) y3) y4) y5) y6)) ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) const1)) pi))))))))) y3)
T * / ! ! ! c= ctaum f0 f1 b0 b1 b2 b3 creal_add crhazim f0 f1 b0 b1 b2 b3 creal_add crhazim2 f0 f1 b0 b1 b2 b3 creal_sub crhazim3 f0 f1 b0 b1 b2 b3 creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 cconst1 cpi f2
+ (!v0. (!v1. (!v2. (!v3. (!P. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))))))) |- (((!v3. (!P. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3))))) ==> ((\v3. (!P. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3))))) v3)) = ((\v3. (!P. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3))))) v3))
T c==> ! ! ! ! ! c==> c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * b4 cdih_y cdistance c, b0 b1 cdistance c, b0 b2 cdistance c, b0 b3 cdistance c, b2 b3 cdistance c, b1 b3 cdistance c, b1 b2 * b4 cdihV b0 b1 b2 b3 c= c==> ! ! c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * b1 cdih_y cdistance c, f0 f1 cdistance c, f0 f2 cdistance c, f0 b0 cdistance c, f2 b0 cdistance c, f1 b0 cdistance c, f1 f2 * b1 cdihV f0 f1 f2 b0 * / ! c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * b1 cdih_y cdistance c, f0 f1 cdistance c, f0 f2 cdistance c, f0 b0 cdistance c, f2 b0 cdistance c, f1 b0 cdistance c, f1 f2 * b1 cdihV f0 f1 f2 b0 f3 * / ! c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * b1 cdih_y cdistance c, f0 f1 cdistance c, f0 f2 cdistance c, f0 b0 cdistance c, f2 b0 cdistance c, f1 b0 cdistance c, f1 f2 * b1 cdihV f0 f1 f2 b0 f3
+ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1))))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))), ((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (v0 IN ball_annulus), (v1 IN ball_annulus), (v2 IN ball_annulus) |- ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))) /\ (((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v0 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((\x. ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))) /\ (((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v0 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v0))) /\ (((real_lt (distance (v1 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ (~ v))))))) x)) F))
T c==> c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c==> creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cIN f1 part cball_annulus c==> cIN f2 part cball_annulus c==> cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c/\ creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f0 part cball_annulus * / * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c~ b1 b0 cF
- |- ((_8381611 = _8381613) ==> ((~ (_8381612 = _8381614)) \/ ((_8381611 , _8381612) = (_8381613 , _8381614))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ |- ((!v. (!w. (!P. (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v , w))) /\ (((real_lt (distance (v , w))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v IN ball_annulus) /\ (w IN ball_annulus)))) /\ (P F)) ==> (P (collinear ((vec (NUMERAL _0)) INSERT (v INSERT (w INSERT EMPTY))))))))) ==> (!P. (!v. (!w. (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v , w))) /\ (((real_lt (distance (v , w))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v IN ball_annulus) /\ (w IN ball_annulus)))) /\ (P F)) ==> (P (collinear ((vec (NUMERAL _0)) INSERT (v INSERT (w INSERT EMPTY))))))))))
T c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 c/\ creal_lt cdistance c, b0 b1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN b0 part cball_annulus cIN b1 part cball_annulus * b2 cF * b2 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b1 b2 c/\ creal_lt cdistance c, b1 b2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN b1 part cball_annulus cIN b2 part cball_annulus * b0 cF * b0 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ |- ((\v3. (!v1. (!v2. ((((tau3 v1) v2) v3) = ((real_add ((real_mul (rho (vector_norm v1))) ((((dihV (vec (NUMERAL _0))) v1) v2) v3))) ((real_add ((real_mul (rho (vector_norm v2))) ((((dihV (vec (NUMERAL _0))) v2) v3) v1))) ((real_sub ((real_mul (rho (vector_norm v3))) ((((dihV (vec (NUMERAL _0))) v3) v1) v2))) ((real_add pi) sol0)))))))) v3)
T * / ! ! c= ctau3 b1 b2 b0 creal_add creal_mul crho cvector_norm b1 cdihV cvec cNUMERAL c_0 b1 b2 b0 creal_add creal_mul crho cvector_norm b2 cdihV cvec cNUMERAL c_0 b2 b0 b1 creal_sub creal_mul crho cvector_norm b0 cdihV cvec cNUMERAL c_0 b0 b1 b2 creal_add cpi csol0 f0
+ |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
+ (!x. (!y. ((distance (x , y)) = (distance (y , x))))), (~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) |- F
T c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 cF
+ (!x. (!y. ((distance (x , y)) = (distance (y , x))))) |- ((~ ((distance (v2 , v0)) = (distance (v0 , v2)))) ==> F)
T c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> c~ c= cdistance c, f0 f1 cdistance c, f1 f0 cF
+ |- ((\c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))) c)
T * / c==> c==> f0 c= f1 b0 ! c==> c/\ f0 * b1 b0 * b1 f1 f2
+ |- (!y. (((\x. ((\v. (((~ v) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v1 INSERT EMPTY)))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))))) x)) y) = ((\v. (((~ v) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v1 INSERT EMPTY)))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))))) y)))
T c= * / * / c/\ c/\ c~ b1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY b0 f3 * / c/\ c/\ c~ b0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY f3
+ (P c), (b = c) |- (P b)
T c==> * f0 f1 c==> c= f2 f1 * f0 f2
+ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1))))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))), ((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (v0 IN ball_annulus), (v1 IN ball_annulus), (v2 IN ball_annulus) |- ((\x. ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ v) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))) x)) (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v1 INSERT EMPTY)))))
T c==> c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c==> creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cIN f1 part cball_annulus c==> cIN f2 part cball_annulus c==> cIN f0 part cball_annulus * / * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c~ b1 c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY b0 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ (~ ((distance (v1 , v0)) = (distance (v0 , v1)))) |- (((distance (v1 , v0)) = (distance (v0 , v1))) ==> F)
T c==> c~ c= cdistance c, f0 f1 cdistance c, f1 f0 c==> c= cdistance c, f0 f1 cdistance c, f1 f0 cF
+ |- (((b = c) ==> (!P. ((P c) ==> (P b)))) = T)
T c= c==> c= f0 f1 ! c==> * b0 f1 * b0 f0 cT
+ |- (!y. (((\x. ((\v. ((v = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))) x)) y) = ((\v. ((v = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))) y)))
T c= * / * / c/\ c= b1 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 b0 f3 * / c/\ c= b0 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 f3
+ (A = F) |- ((((A ==> B) /\ A) ==> B) = (((F ==> B) /\ F) ==> B))
T c==> c= f0 cF c= c==> c/\ c==> f0 f1 f0 f1 c==> c/\ c==> cF f1 cF f1
+ |- (((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) ==> (((((dihV v0) v1) v2) v3) = ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (!P. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3))))) = (!P. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))))
T c= c==> c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c= cdihV f0 f1 f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 f2 cdistance c, f0 f3 cdistance c, f2 f3 cdistance c, f1 f3 cdistance c, f1 f2 ! c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * b0 cdih_y cdistance c, f0 f1 cdistance c, f0 f2 cdistance c, f0 f3 cdistance c, f2 f3 cdistance c, f1 f3 cdistance c, f1 f2 * b0 cdihV f0 f1 f2 f3 ! c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * b0 cdih_y cdistance c, f0 f1 cdistance c, f0 f2 cdistance c, f0 f3 cdistance c, f2 f3 cdistance c, f1 f3 cdistance c, f1 f2 * b0 cdihV f0 f1 f2 f3
+ (!v0. (!v1. (!v2. (!v3. (!P. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))))))) |- (!v2. (!v3. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))))
T c==> ! ! ! ! ! c==> c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * b4 cdih_y cdistance c, b0 b1 cdistance c, b0 b2 cdistance c, b0 b3 cdistance c, b2 b3 cdistance c, b1 b3 cdistance c, b1 b2 * b4 cdihV b0 b1 b2 b3 ! ! c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY * f2 cdih_y cdistance c, f0 f1 cdistance c, f0 b0 cdistance c, f0 b1 cdistance c, b0 b1 cdistance c, f1 b1 cdistance c, f1 b0 * f2 cdihV f0 f1 b0 b1
+ |- (((!f. (!y. (((\x. (f x)) y) = (f y)))) ==> ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v0))) /\ (((real_lt (distance (v1 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ v) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))))))))) = ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v0))) /\ (((real_lt (distance (v1 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ v) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))))))
T c= c==> ! ! c= * / * b0 b2 b1 * b0 b1 * / ! c= * / * b0 b2 b1 * b0 b1 / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f1 part cball_annulus c/\ c~ b0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * / ! c= * / * b0 b2 b1 * b0 b1 / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f1 part cball_annulus c/\ c~ b0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))) /\ (((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v0 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))) /\ (((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v0 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v0))) /\ (((real_lt (distance (v1 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus))))))))) = ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))) /\ (((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v0 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))) /\ (((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v0 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v0))) /\ (((real_lt (distance (v1 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ (~ F))))))))
T c= c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f2 part cball_annulus c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c/\ creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c/\ creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f0 part cball_annulus c~ cF
+ |- ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))) /\ (((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v0 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v0))) /\ (((real_lt (distance (v1 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ (~ v))))))))
T * / ! c= * / * b0 b2 b1 * b0 b1 / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c/\ creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus c~ b0
+ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1))))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))), ((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (v0 IN ball_annulus), (v1 IN ball_annulus), (v2 IN ball_annulus) |- ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((\x. ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ (((~ v) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))) x)) F))
T c==> c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c==> creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cIN f1 part cball_annulus c==> cIN f2 part cball_annulus c==> cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus * / * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ c~ b1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY b0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\x. (((distance (x , (vec (NUMERAL _0)))) = (vector_norm x)) /\ ((distance ((vec (NUMERAL _0)) , x)) = (vector_norm x)))) x)
T * / c/\ c= cdistance c, b0 cvec cNUMERAL c_0 cvector_norm b0 c= cdistance c, cvec cNUMERAL c_0 b0 cvector_norm b0 f0
+ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1))))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))), ((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (v0 IN ball_annulus), (v1 IN ball_annulus), (v2 IN ball_annulus) |- ((((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((\x. ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ v) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))) x)) F)) ==> ((\x. ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ v) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))) x)) (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v1 INSERT EMPTY)))))) = ((\x. ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ v) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))) x)) (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v1 INSERT EMPTY))))))
T c==> c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c==> creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cIN f1 part cball_annulus c==> cIN f2 part cball_annulus c==> cIN f0 part cball_annulus c= c==> c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus * / * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c~ b1 c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY b0 cF * / * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c~ b1 c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY b0 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * / * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c~ b1 c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY b0 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- |- ((\v2. ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) v2)
T * / c==> c~ c/\ c= cdistance c, b0 f0 cdistance c, f0 b0 c/\ c= cdistance c, b0 f1 cdistance c, f1 b0 c= cdistance c, f1 f0 cdistance c, f0 f1 c==> ! ! c= cdistance c, b1 b2 cdistance c, b2 b1 c==> ! ! c= cdistance c, b1 b2 cdistance c, b2 b1 cF f2
+ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1))))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))), ((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (v0 IN ball_annulus), (v1 IN ball_annulus), (v2 IN ball_annulus) |- ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))) /\ (((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v0 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))) /\ (((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v0 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v0))) /\ (((real_lt (distance (v1 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))))))))
T c==> c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c==> creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cIN f1 part cball_annulus c==> cIN f2 part cball_annulus c==> cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c/\ creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus
+ |- ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. ((v = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))))
T * / ! c= * / * b0 b2 b1 * b0 b1 / c/\ c= b0 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2
+ |- (((!P. (!v. (!w. (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v , w))) /\ (((real_lt (distance (v , w))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v IN ball_annulus) /\ (w IN ball_annulus)))) /\ (P F)) ==> (P (collinear ((vec (NUMERAL _0)) INSERT (v INSERT (w INSERT EMPTY))))))))) ==> ((\P. (!v. (!w. (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v , w))) /\ (((real_lt (distance (v , w))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v IN ball_annulus) /\ (w IN ball_annulus)))) /\ (P F)) ==> (P (collinear ((vec (NUMERAL _0)) INSERT (v INSERT (w INSERT EMPTY))))))))) P)) = ((\P. (!v. (!w. (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v , w))) /\ (((real_lt (distance (v , w))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v IN ball_annulus) /\ (w IN ball_annulus)))) /\ (P F)) ==> (P (collinear ((vec (NUMERAL _0)) INSERT (v INSERT (w INSERT EMPTY))))))))) P))
T c= c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b1 b2 c/\ creal_lt cdistance c, b1 b2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN b1 part cball_annulus cIN b2 part cball_annulus * b0 cF * b0 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b1 b2 c/\ creal_lt cdistance c, b1 b2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN b1 part cball_annulus cIN b2 part cball_annulus * b0 cF * b0 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0 * / ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b1 b2 c/\ creal_lt cdistance c, b1 b2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN b1 part cball_annulus cIN b2 part cball_annulus * b0 cF * b0 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
+ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))), (v0 IN ball_annulus), (v1 IN ball_annulus), (v2 IN ball_annulus) |- (((real_add ((real_mul (rho (vector_norm v0))) ((((dihV (vec (NUMERAL _0))) v0) v1) v2))) ((real_add ((real_mul (rho (vector_norm v1))) ((((dihV (vec (NUMERAL _0))) v1) v2) v0))) ((real_sub ((real_mul (rho (vector_norm v2))) ((((dihV (vec (NUMERAL _0))) v2) v0) v1))) ((real_add pi) ((real_mul pi) const1))))) = ((real_add ((real_mul (rho (vector_norm v0))) ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1))))) ((real_add ((real_mul (rho (vector_norm v1))) ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2))))) ((real_sub ((real_mul (rho (vector_norm v2))) ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))) ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) const1)) pi)))))
T c==> c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c==> cIN f0 part cball_annulus c==> cIN f2 part cball_annulus c==> cIN f1 part cball_annulus c= creal_add creal_mul crho cvector_norm f0 cdihV cvec cNUMERAL c_0 f0 f2 f1 creal_add creal_mul crho cvector_norm f2 cdihV cvec cNUMERAL c_0 f2 f1 f0 creal_sub creal_mul crho cvector_norm f1 cdihV cvec cNUMERAL c_0 f1 f0 f2 creal_add cpi creal_mul cpi cconst1 creal_add creal_mul crho cvector_norm f0 cdih_y cvector_norm f0 cvector_norm f2 cvector_norm f1 cdistance c, f2 f1 cdistance c, f0 f1 cdistance c, f0 f2 creal_add creal_mul crho cvector_norm f2 cdih_y cvector_norm f2 cvector_norm f1 cvector_norm f0 cdistance c, f0 f1 cdistance c, f0 f2 cdistance c, f2 f1 creal_sub creal_mul crho cvector_norm f1 cdih_y cvector_norm f1 cvector_norm f0 cvector_norm f2 cdistance c, f0 f2 cdistance c, f2 f1 cdistance c, f0 f1 creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 cconst1 cpi
+ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1))))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))), ((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (v0 IN ball_annulus), (v1 IN ball_annulus), (v2 IN ball_annulus) |- ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))))))
T c==> c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c==> creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cIN f1 part cball_annulus c==> cIN f2 part cball_annulus c==> cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
+ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))), ((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (v0 IN ball_annulus), (v1 IN ball_annulus), (v2 IN ball_annulus) |- (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((\x. ((\v. (((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))) /\ ((((((((dih_y (distance ((vec (NUMERAL _0)) , v0))) (distance ((vec (NUMERAL _0)) , v1))) (distance ((vec (NUMERAL _0)) , v2))) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1))) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((v = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2)))))))) x)) ((((((dih_y (distance ((vec (NUMERAL _0)) , v1))) (distance ((vec (NUMERAL _0)) , v2))) (distance ((vec (NUMERAL _0)) , v0))) (distance (v2 , v0))) (distance (v1 , v0))) (distance (v1 , v2)))))
T c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c==> creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cIN f0 part cball_annulus c==> cIN f1 part cball_annulus c==> cIN f2 part cball_annulus c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * / * / c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c= cdih_y cdistance c, cvec cNUMERAL c_0 f0 cdistance c, cvec cNUMERAL c_0 f1 cdistance c, cvec cNUMERAL c_0 f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= b1 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 b0 cdih_y cdistance c, cvec cNUMERAL c_0 f1 cdistance c, cvec cNUMERAL c_0 f2 cdistance c, cvec cNUMERAL c_0 f0 cdistance c, f2 f0 cdistance c, f1 f0 cdistance c, f1 f2
+ |- (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ (((~ F) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))) = ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((\x. ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ (((~ v) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))) x)) F)))
T c= c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c/\ creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f2 part cball_annulus c/\ c/\ c~ cF c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus * / * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c/\ creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f2 part cball_annulus c/\ c/\ c~ b1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY b0 cF
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((!v3. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))) ==> ((\v3. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))) v3)) = ((\v3. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))) v3))
T c= c==> ! c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * f3 cdih_y cdistance c, f0 f1 cdistance c, f0 f2 cdistance c, f0 b0 cdistance c, f2 b0 cdistance c, f1 b0 cdistance c, f1 f2 * f3 cdihV f0 f1 f2 b0 * / c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * f3 cdih_y cdistance c, f0 f1 cdistance c, f0 f2 cdistance c, f0 b0 cdistance c, f2 b0 cdistance c, f1 b0 cdistance c, f1 f2 * f3 cdihV f0 f1 f2 b0 f4 * / c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * f3 cdih_y cdistance c, f0 f1 cdistance c, f0 f2 cdistance c, f0 b0 cdistance c, f2 b0 cdistance c, f1 b0 cdistance c, f1 f2 * f3 cdihV f0 f1 f2 b0 f4
+ |- ((((~ (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v0 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v1 INSERT EMPTY)))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))) /\ ((((((((dih_y (distance ((vec (NUMERAL _0)) , v0))) (distance ((vec (NUMERAL _0)) , v1))) (distance ((vec (NUMERAL _0)) , v2))) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1))) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((((dih_y (distance ((vec (NUMERAL _0)) , v1))) (distance ((vec (NUMERAL _0)) , v2))) (distance ((vec (NUMERAL _0)) , v0))) (distance (v2 , v0))) (distance (v1 , v0))) (distance (v1 , v2))) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((((dih_y (distance ((vec (NUMERAL _0)) , v2))) (distance ((vec (NUMERAL _0)) , v0))) (distance ((vec (NUMERAL _0)) , v1))) (distance (v0 , v1))) (distance (v2 , v1))) (distance (v2 , v0))) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))))) = (((~ (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v0 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v1 INSERT EMPTY)))))) /\ ((\x. ((\v. (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))) /\ ((((((((dih_y (distance ((vec (NUMERAL _0)) , v0))) (distance ((vec (NUMERAL _0)) , v1))) (distance ((vec (NUMERAL _0)) , v2))) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1))) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((((dih_y (distance ((vec (NUMERAL _0)) , v1))) (distance ((vec (NUMERAL _0)) , v2))) (distance ((vec (NUMERAL _0)) , v0))) (distance (v2 , v0))) (distance (v1 , v0))) (distance (v1 , v2))) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (v = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))))) x)) ((((((dih_y (distance ((vec (NUMERAL _0)) , v2))) (distance ((vec (NUMERAL _0)) , v0))) (distance ((vec (NUMERAL _0)) , v1))) (distance (v0 , v1))) (distance (v2 , v1))) (distance (v2 , v0))))))
T c= c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c/\ c= cdih_y cdistance c, cvec cNUMERAL c_0 f1 cdistance c, cvec cNUMERAL c_0 f2 cdistance c, cvec cNUMERAL c_0 f0 cdistance c, f2 f0 cdistance c, f1 f0 cdistance c, f1 f2 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f2 f0 cdistance c, f1 f0 cdistance c, f1 f2 c/\ c= cdih_y cdistance c, cvec cNUMERAL c_0 f2 cdistance c, cvec cNUMERAL c_0 f0 cdistance c, cvec cNUMERAL c_0 f1 cdistance c, f0 f1 cdistance c, f2 f1 cdistance c, f2 f0 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f1 f0 cdistance c, f1 f2 cdistance c, f2 f0 c= cdih_y cdistance c, cvec cNUMERAL c_0 f0 cdistance c, cvec cNUMERAL c_0 f1 cdistance c, cvec cNUMERAL c_0 f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f2 f0 cdistance c, f1 f0 c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * / * / c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c/\ c= cdih_y cdistance c, cvec cNUMERAL c_0 f1 cdistance c, cvec cNUMERAL c_0 f2 cdistance c, cvec cNUMERAL c_0 f0 cdistance c, f2 f0 cdistance c, f1 f0 cdistance c, f1 f2 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f2 f0 cdistance c, f1 f0 cdistance c, f1 f2 c/\ c= cdih_y cdistance c, cvec cNUMERAL c_0 f2 cdistance c, cvec cNUMERAL c_0 f0 cdistance c, cvec cNUMERAL c_0 f1 cdistance c, f0 f1 cdistance c, f2 f1 cdistance c, f2 f0 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f1 f0 cdistance c, f1 f2 cdistance c, f2 f0 c= b1 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f2 f0 cdistance c, f1 f0 b0 cdih_y cdistance c, cvec cNUMERAL c_0 f0 cdistance c, cvec cNUMERAL c_0 f1 cdistance c, cvec cNUMERAL c_0 f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1
- (_8381611 = _8381613), (_8381612 = _8381614) |- ((_8381612 = _8381614) /\ ((_8381611 , _8381612) = (_8381613 , _8381614)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= c, f0 f2 c, f1 f3
- |- (((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2)))))) = ((\x. ((\v. ((v = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))) x)) ((((dihV (vec (NUMERAL _0))) v0) v1) v2)))
T c= c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 * / * / c/\ c= b1 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 b0 cdihV cvec cNUMERAL c_0 f0 f1 f2
+ |- (((T ==> B) /\ T) ==> B)
T c==> c/\ c==> cT f0 cT f0
+ (((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))), ((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (v0 IN ball_annulus), (v1 IN ball_annulus), (v2 IN ball_annulus) |- (((real_add ((real_mul (rho (vector_norm v0))) ((((dihV (vec (NUMERAL _0))) v0) v1) v2))) ((real_add ((real_mul (rho (vector_norm v1))) ((((dihV (vec (NUMERAL _0))) v1) v2) v0))) ((real_sub ((real_mul (rho (vector_norm v2))) ((((dihV (vec (NUMERAL _0))) v2) v0) v1))) ((real_add pi) ((real_mul pi) const1))))) = ((real_add ((real_mul (rho (vector_norm v0))) ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1))))) ((real_add ((real_mul (rho (vector_norm v1))) ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2))))) ((real_sub ((real_mul (rho (vector_norm v2))) ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))) ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) const1)) pi)))))
T c==> c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c==> creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cIN f0 part cball_annulus c==> cIN f1 part cball_annulus c==> cIN f2 part cball_annulus c= creal_add creal_mul crho cvector_norm f0 cdihV cvec cNUMERAL c_0 f0 f1 f2 creal_add creal_mul crho cvector_norm f1 cdihV cvec cNUMERAL c_0 f1 f2 f0 creal_sub creal_mul crho cvector_norm f2 cdihV cvec cNUMERAL c_0 f2 f0 f1 creal_add cpi creal_mul cpi cconst1 creal_add creal_mul crho cvector_norm f0 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 creal_add creal_mul crho cvector_norm f1 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 creal_sub creal_mul crho cvector_norm f2 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 cconst1 cpi
+ (!v0. (!v1. (!v2. (!v3. (!P. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))))))) |- (((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3))) = T)
T c==> ! ! ! ! ! c==> c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * b4 cdih_y cdistance c, b0 b1 cdistance c, b0 b2 cdistance c, b0 b3 cdistance c, b2 b3 cdistance c, b1 b3 cdistance c, b1 b2 * b4 cdihV b0 b1 b2 b3 c= c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * f4 cdih_y cdistance c, f0 f1 cdistance c, f0 f2 cdistance c, f0 f3 cdistance c, f2 f3 cdistance c, f1 f3 cdistance c, f1 f2 * f4 cdihV f0 f1 f2 f3 cT
+ |- (((!v0. (!v1. (!v2. (!v3. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3))))))) ==> ((\v0. (!v1. (!v2. (!v3. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3))))))) v0)) = ((\v0. (!v1. (!v2. (!v3. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3))))))) v0))
T c= c==> ! ! ! ! c==> c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * f0 cdih_y cdistance c, b0 b1 cdistance c, b0 b2 cdistance c, b0 b3 cdistance c, b2 b3 cdistance c, b1 b3 cdistance c, b1 b2 * f0 cdihV b0 b1 b2 b3 * / ! ! ! c==> c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * f0 cdih_y cdistance c, b0 b1 cdistance c, b0 b2 cdistance c, b0 b3 cdistance c, b2 b3 cdistance c, b1 b3 cdistance c, b1 b2 * f0 cdihV b0 b1 b2 b3 f1 * / ! ! ! c==> c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * f0 cdih_y cdistance c, b0 b1 cdistance c, b0 b2 cdistance c, b0 b3 cdistance c, b2 b3 cdistance c, b1 b3 cdistance c, b1 b2 * f0 cdihV b0 b1 b2 b3 f1
- |- (((!v2. ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) ==> ((\v2. ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) v2)) = ((\v2. ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) v2))
T c= c==> ! c==> c~ c/\ c= cdistance c, b0 f0 cdistance c, f0 b0 c/\ c= cdistance c, b0 f1 cdistance c, f1 b0 c= cdistance c, f1 f0 cdistance c, f0 f1 c==> ! ! c= cdistance c, b1 b2 cdistance c, b2 b1 c==> ! ! c= cdistance c, b1 b2 cdistance c, b2 b1 cF * / c==> c~ c/\ c= cdistance c, b0 f0 cdistance c, f0 b0 c/\ c= cdistance c, b0 f1 cdistance c, f1 b0 c= cdistance c, f1 f0 cdistance c, f0 f1 c==> ! ! c= cdistance c, b1 b2 cdistance c, b2 b1 c==> ! ! c= cdistance c, b1 b2 cdistance c, b2 b1 cF f2 * / c==> c~ c/\ c= cdistance c, b0 f0 cdistance c, f0 b0 c/\ c= cdistance c, b0 f1 cdistance c, f1 b0 c= cdistance c, f1 f0 cdistance c, f0 f1 c==> ! ! c= cdistance c, b1 b2 cdistance c, b2 b1 c==> ! ! c= cdistance c, b1 b2 cdistance c, b2 b1 cF f2
- ((((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2)))))) ==> B) /\ ((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))), (((((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2)))))) ==> B) /\ ((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))) ==> B) |- (((((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2)))))) ==> B) /\ ((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))) /\ B)
T c==> c/\ c==> c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 f3 c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 c==> c==> c/\ c==> c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 f3 c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 f3 c/\ c/\ c==> c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 f3 c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 f3
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- (((!y2. (!y3. (!y1. (!y5. (!y6. (!y4. ((((((((node2_y f) y1) y2) y3) y4) y5) y6) = ((((((f y2) y3) y1) y5) y6) y4)))))))) ==> ((\y2. (!y3. (!y1. (!y5. (!y6. (!y4. ((((((((node2_y f) y1) y2) y3) y4) y5) y6) = ((((((f y2) y3) y1) y5) y6) y4)))))))) y2)) = ((\y2. (!y3. (!y1. (!y5. (!y6. (!y4. ((((((((node2_y f) y1) y2) y3) y4) y5) y6) = ((((((f y2) y3) y1) y5) y6) y4)))))))) y2))
T c= c==> ! ! ! ! ! ! c= cnode2_y f0 b2 b0 b1 b5 b3 b4 * * * * * * f0 b0 b1 b2 b3 b4 b5 * / ! ! ! ! ! c= cnode2_y f0 b2 b0 b1 b5 b3 b4 * * * * * * f0 b0 b1 b2 b3 b4 b5 f1 * / ! ! ! ! ! c= cnode2_y f0 b2 b0 b1 b5 b3 b4 * * * * * * f0 b0 b1 b2 b3 b4 b5 f1
+ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1))))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))), ((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (v0 IN ball_annulus), (v1 IN ball_annulus), (v2 IN ball_annulus) |- ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v0))) /\ (((real_lt (distance (v1 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))))))
T c==> c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c==> creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cIN f1 part cball_annulus c==> cIN f2 part cball_annulus c==> cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
- |- (((!v1. (!v0. (!v2. ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))))) ==> ((\v1. (!v0. (!v2. ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))))) v1)) = ((\v1. (!v0. (!v2. ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))))) v1))
T c= c==> ! ! ! c==> c~ c/\ c= cdistance c, b2 b1 cdistance c, b1 b2 c/\ c= cdistance c, b2 b0 cdistance c, b0 b2 c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b3 b4 cdistance c, b4 b3 c==> ! ! c= cdistance c, b3 b4 cdistance c, b4 b3 cF * / ! ! c==> c~ c/\ c= cdistance c, b2 b1 cdistance c, b1 b2 c/\ c= cdistance c, b2 b0 cdistance c, b0 b2 c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b3 b4 cdistance c, b4 b3 c==> ! ! c= cdistance c, b3 b4 cdistance c, b4 b3 cF f0 * / ! ! c==> c~ c/\ c= cdistance c, b2 b1 cdistance c, b1 b2 c/\ c= cdistance c, b2 b0 cdistance c, b0 b2 c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b3 b4 cdistance c, b4 b3 c==> ! ! c= cdistance c, b3 b4 cdistance c, b4 b3 cF f0
+ |- ((\y5. (!y6. (((((((rhazim y1) y2) y3) y4) y5) y6) = ((real_mul (rho y1)) ((((((dih_y y1) y2) y3) y4) y5) y6))))) y5)
T * / ! c= crhazim f0 f1 f2 f3 b0 b1 creal_mul crho f0 cdih_y f0 f1 f2 f3 b0 b1 f4
+ |- (((F ==> B) /\ F) ==> B)
T c==> c/\ c==> cF f0 cF f0
- ((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) |- (((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (((((dihV v0) v1) v2) v3) = ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2)))))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c= cdihV f0 f1 f2 f3 cdih_y cdistance c, f0 f1 cdistance c, f0 f2 cdistance c, f0 f3 cdistance c, f2 f3 cdistance c, f1 f3 cdistance c, f1 f2
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
- |- (((!v0. (!v2. ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))))) ==> ((\v0. (!v2. ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))))) v0)) = ((\v0. (!v2. ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))))) v0))
T c= c==> ! ! c==> c~ c/\ c= cdistance c, b1 b0 cdistance c, b0 b1 c/\ c= cdistance c, b1 f0 cdistance c, f0 b1 c= cdistance c, f0 b0 cdistance c, b0 f0 c==> ! ! c= cdistance c, b2 b3 cdistance c, b3 b2 c==> ! ! c= cdistance c, b2 b3 cdistance c, b3 b2 cF * / ! c==> c~ c/\ c= cdistance c, b1 b0 cdistance c, b0 b1 c/\ c= cdistance c, b1 f0 cdistance c, f0 b1 c= cdistance c, f0 b0 cdistance c, b0 f0 c==> ! ! c= cdistance c, b2 b3 cdistance c, b3 b2 c==> ! ! c= cdistance c, b2 b3 cdistance c, b3 b2 cF f1 * / ! c==> c~ c/\ c= cdistance c, b1 b0 cdistance c, b0 b1 c/\ c= cdistance c, b1 f0 cdistance c, f0 b1 c= cdistance c, f0 b0 cdistance c, b0 f0 c==> ! ! c= cdistance c, b2 b3 cdistance c, b3 b2 c==> ! ! c= cdistance c, b2 b3 cdistance c, b3 b2 cF f1
+ |- ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> F)
T c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 cF
- (~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) |- ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))
T c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
+ (!v0. (!v1. (!v2. (!v3. (!P. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))))))) |- ((\P. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))) P)
T c==> ! ! ! ! ! c==> c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * b4 cdih_y cdistance c, b0 b1 cdistance c, b0 b2 cdistance c, b0 b3 cdistance c, b2 b3 cdistance c, b1 b3 cdistance c, b1 b2 * b4 cdihV b0 b1 b2 b3 * / c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * b0 cdih_y cdistance c, f0 f1 cdistance c, f0 f2 cdistance c, f0 f3 cdistance c, f2 f3 cdistance c, f1 f3 cdistance c, f1 f2 * b0 cdihV f0 f1 f2 f3 f4
- (b = c) |- ((P c) = (P c))
T c==> c= f0 f1 c= * f2 f1 * f2 f1
+ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1))))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))), ((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (v0 IN ball_annulus), (v1 IN ball_annulus), (v2 IN ball_annulus) |- ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))) /\ (((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v0 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v0))) /\ (((real_lt (distance (v1 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))))))
T c==> c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c==> creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cIN f1 part cball_annulus c==> cIN f2 part cball_annulus c==> cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
+ ((v1 IN ball_annulus) /\ ((v2 IN ball_annulus) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))))), (v0 IN ball_annulus) |- (((real_add ((real_mul (rho (vector_norm v0))) ((((dihV (vec (NUMERAL _0))) v0) v1) v2))) ((real_add ((real_mul (rho (vector_norm v1))) ((((dihV (vec (NUMERAL _0))) v1) v2) v0))) ((real_sub ((real_mul (rho (vector_norm v2))) ((((dihV (vec (NUMERAL _0))) v2) v0) v1))) ((real_add pi) ((real_mul pi) const1))))) = ((real_add ((real_mul (rho (vector_norm v0))) ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1))))) ((real_add ((real_mul (rho (vector_norm v1))) ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2))))) ((real_sub ((real_mul (rho (vector_norm v2))) ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))) ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) const1)) pi)))))
T c==> c/\ cIN f0 part cball_annulus c/\ cIN f1 part cball_annulus c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cIN f2 part cball_annulus c= creal_add creal_mul crho cvector_norm f2 cdihV cvec cNUMERAL c_0 f2 f0 f1 creal_add creal_mul crho cvector_norm f0 cdihV cvec cNUMERAL c_0 f0 f1 f2 creal_sub creal_mul crho cvector_norm f1 cdihV cvec cNUMERAL c_0 f1 f2 f0 creal_add cpi creal_mul cpi cconst1 creal_add creal_mul crho cvector_norm f2 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f2 f1 cdistance c, f2 f0 creal_add creal_mul crho cvector_norm f0 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f2 f1 cdistance c, f2 f0 cdistance c, f0 f1 creal_sub creal_mul crho cvector_norm f1 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f2 f0 cdistance c, f0 f1 cdistance c, f2 f1 creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 cconst1 cpi
+ |- ((\y6. (!y4. ((((((((node2_y f) y1) y2) y3) y4) y5) y6) = ((((((f y2) y3) y1) y5) y6) y4)))) y6)
T * / ! c= cnode2_y f0 f1 f2 f3 b1 f4 b0 * * * * * * f0 f2 f3 f1 f4 b0 b1 f5
+ |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
+ |- (((\x. ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ v) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))))))) x)) (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY))))) = ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ v) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))))))) (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY))))))
T c= * / * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c/\ creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f2 part cball_annulus c/\ c~ b1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY b0 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c/\ creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f2 part cball_annulus c/\ c~ b0 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!v1. (!v2. (((v0 IN ball_annulus) /\ ((v1 IN ball_annulus) /\ ((v2 IN ball_annulus) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))))) ==> (((real_add ((real_mul (rho (vector_norm v0))) ((((dihV (vec (NUMERAL _0))) v0) v1) v2))) ((real_add ((real_mul (rho (vector_norm v1))) ((((dihV (vec (NUMERAL _0))) v1) v2) v0))) ((real_sub ((real_mul (rho (vector_norm v2))) ((((dihV (vec (NUMERAL _0))) v2) v0) v1))) ((real_add pi) ((real_mul pi) const1))))) = ((real_add ((real_mul (rho (vector_norm v0))) ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1))))) ((real_add ((real_mul (rho (vector_norm v1))) ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2))))) ((real_sub ((real_mul (rho (vector_norm v2))) ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))) ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) const1)) pi)))))))) = T)
T c= ! ! c==> c/\ cIN f0 part cball_annulus c/\ cIN b0 part cball_annulus c/\ cIN b1 part cball_annulus c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 b0 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 b1 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 c/\ creal_lt cdistance c, f0 b0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, f0 b1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_lt cdistance c, b0 b1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_add creal_mul crho cvector_norm f0 cdihV cvec cNUMERAL c_0 f0 b0 b1 creal_add creal_mul crho cvector_norm b0 cdihV cvec cNUMERAL c_0 b0 b1 f0 creal_sub creal_mul crho cvector_norm b1 cdihV cvec cNUMERAL c_0 b1 f0 b0 creal_add cpi creal_mul cpi cconst1 creal_add creal_mul crho cvector_norm f0 cdih_y cvector_norm f0 cvector_norm b0 cvector_norm b1 cdistance c, b0 b1 cdistance c, f0 b1 cdistance c, f0 b0 creal_add creal_mul crho cvector_norm b0 cdih_y cvector_norm b0 cvector_norm b1 cvector_norm f0 cdistance c, f0 b1 cdistance c, f0 b0 cdistance c, b0 b1 creal_sub creal_mul crho cvector_norm b1 cdih_y cvector_norm b1 cvector_norm f0 cvector_norm b0 cdistance c, f0 b0 cdistance c, b0 b1 cdistance c, f0 b1 creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 cconst1 cpi cT
+ |- (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ (((~ F) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v1 INSERT EMPTY)))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))))) = ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((\x. ((\v. (((~ v) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v1 INSERT EMPTY)))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))))) x)) F)))
T c= c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ c~ cF c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus * / * / c/\ c/\ c~ b1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY b0 cF
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ (!v0. (!v1. (!v2. (!v3. (!P. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))))))) |- ((!v3. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))) = T)
T c==> ! ! ! ! ! c==> c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * b4 cdih_y cdistance c, b0 b1 cdistance c, b0 b2 cdistance c, b0 b3 cdistance c, b2 b3 cdistance c, b1 b3 cdistance c, b1 b2 * b4 cdihV b0 b1 b2 b3 c= ! c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * f3 cdih_y cdistance c, f0 f1 cdistance c, f0 f2 cdistance c, f0 b0 cdistance c, f2 b0 cdistance c, f1 b0 cdistance c, f1 f2 * f3 cdihV f0 f1 f2 b0 cT
+ |- ((\y3. (!y1. (!y2. (!y6. (!y4. (!y5. ((((((((node3_y f) y1) y2) y3) y4) y5) y6) = ((((((f y3) y1) y2) y6) y4) y5)))))))) y3)
T * / ! ! ! ! ! c= cnode3_y f0 b1 b2 b0 b4 b5 b3 * * * * * * f0 b0 b1 b2 b3 b4 b5 f1
+ |- (((!v3. (((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) ==> (((((dihV v0) v1) v2) v3) = ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2)))))) ==> ((\v3. (((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) ==> (((((dihV v0) v1) v2) v3) = ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2)))))) v3)) = ((\v3. (((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) ==> (((((dihV v0) v1) v2) v3) = ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2)))))) v3))
T c= c==> ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= cdihV f0 f1 f2 b0 cdih_y cdistance c, f0 f1 cdistance c, f0 f2 cdistance c, f0 b0 cdistance c, f2 b0 cdistance c, f1 b0 cdistance c, f1 f2 * / c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= cdihV f0 f1 f2 b0 cdih_y cdistance c, f0 f1 cdistance c, f0 f2 cdistance c, f0 b0 cdistance c, f2 b0 cdistance c, f1 b0 cdistance c, f1 f2 f3 * / c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= cdihV f0 f1 f2 b0 cdih_y cdistance c, f0 f1 cdistance c, f0 f2 cdistance c, f0 b0 cdistance c, f2 b0 cdistance c, f1 b0 cdistance c, f1 f2 f3
+ |- ((\y6. (((((((taum y1) y2) y3) y4) y5) y6) = ((real_add ((((((rhazim y1) y2) y3) y4) y5) y6)) ((real_add ((((((rhazim2 y1) y2) y3) y4) y5) y6)) ((real_sub ((((((rhazim3 y1) y2) y3) y4) y5) y6)) ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) const1)) pi)))))) y6)
T * / c= ctaum f0 f1 f2 f3 f4 b0 creal_add crhazim f0 f1 f2 f3 f4 b0 creal_add crhazim2 f0 f1 f2 f3 f4 b0 creal_sub crhazim3 f0 f1 f2 f3 f4 b0 creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 cconst1 cpi f5
+ |- ((!v0. (!v1. (!v2. (((v0 IN ball_annulus) /\ ((v1 IN ball_annulus) /\ ((v2 IN ball_annulus) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))))) ==> (((real_add ((real_mul (rho (vector_norm v0))) ((((dihV (vec (NUMERAL _0))) v0) v1) v2))) ((real_add ((real_mul (rho (vector_norm v1))) ((((dihV (vec (NUMERAL _0))) v1) v2) v0))) ((real_sub ((real_mul (rho (vector_norm v2))) ((((dihV (vec (NUMERAL _0))) v2) v0) v1))) ((real_add pi) sol0)))) = ((real_add ((((((rhazim (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) ((real_add ((((((rhazim (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) ((real_sub ((((((rhazim (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2)))) ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) const1)) pi))))))))) = (!v0. (!v1. (!v2. (((v0 IN ball_annulus) /\ ((v1 IN ball_annulus) /\ ((v2 IN ball_annulus) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))))) ==> ((((tau3 v0) v1) v2) = ((((((taum (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))))))))
T c= ! ! ! c==> c/\ cIN b0 part cball_annulus c/\ cIN b1 part cball_annulus c/\ cIN b2 part cball_annulus c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b2 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b1 b2 c/\ creal_lt cdistance c, b0 b1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, b0 b2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_lt cdistance c, b1 b2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_add creal_mul crho cvector_norm b0 cdihV cvec cNUMERAL c_0 b0 b1 b2 creal_add creal_mul crho cvector_norm b1 cdihV cvec cNUMERAL c_0 b1 b2 b0 creal_sub creal_mul crho cvector_norm b2 cdihV cvec cNUMERAL c_0 b2 b0 b1 creal_add cpi csol0 creal_add crhazim cvector_norm b0 cvector_norm b1 cvector_norm b2 cdistance c, b1 b2 cdistance c, b0 b2 cdistance c, b0 b1 creal_add crhazim cvector_norm b1 cvector_norm b2 cvector_norm b0 cdistance c, b0 b2 cdistance c, b0 b1 cdistance c, b1 b2 creal_sub crhazim cvector_norm b2 cvector_norm b0 cvector_norm b1 cdistance c, b0 b1 cdistance c, b1 b2 cdistance c, b0 b2 creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 cconst1 cpi ! ! ! c==> c/\ cIN b0 part cball_annulus c/\ cIN b1 part cball_annulus c/\ cIN b2 part cball_annulus c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b2 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b1 b2 c/\ creal_lt cdistance c, b0 b1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, b0 b2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_lt cdistance c, b1 b2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= ctau3 b0 b1 b2 ctaum cvector_norm b0 cvector_norm b1 cvector_norm b2 cdistance c, b1 b2 cdistance c, b0 b2 cdistance c, b0 b1
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- (!v. (!w. (!P. (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v , w))) /\ (((real_lt (distance (v , w))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v IN ball_annulus) /\ (w IN ball_annulus)))) /\ (P F)) ==> (P (collinear ((vec (NUMERAL _0)) INSERT (v INSERT (w INSERT EMPTY))))))))), ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v , w))) /\ (((real_lt (distance (v , w))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v IN ball_annulus) /\ (w IN ball_annulus)))) /\ (P F)) |- (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v , w))) /\ (((real_lt (distance (v , w))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v IN ball_annulus) /\ (w IN ball_annulus)))) /\ (P F)) /\ (P (collinear ((vec (NUMERAL _0)) INSERT (v INSERT (w INSERT EMPTY))))))
T c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 c/\ creal_lt cdistance c, b0 b1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN b0 part cball_annulus cIN b1 part cball_annulus * b2 cF * b2 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus * f2 cF c/\ c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus * f2 cF * f2 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- (((\x. ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ (((~ v) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))) x)) (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) = ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ (((~ v) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))) (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))))
T c= * / * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ c~ b1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY b0 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ c~ b0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
- (!x. (!y. ((distance (x , y)) = (distance (y , x))))) |- ((~ ((distance (v1 , v0)) = (distance (v0 , v1)))) ==> ((distance (v1 , v0)) = (distance (v0 , v1))))
T c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> c~ c= cdistance c, f0 f1 cdistance c, f1 f0 c= cdistance c, f0 f1 cdistance c, f1 f0
+ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1))))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))), ((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (v0 IN ball_annulus), (v1 IN ball_annulus), (v2 IN ball_annulus) |- ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))
T c==> c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c==> creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cIN f1 part cball_annulus c==> cIN f2 part cball_annulus c==> cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
+ |- ((((~ (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v0 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v1 INSERT EMPTY)))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))) /\ ((((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v2 , v0))) (distance (v1 , v0))) (distance (v1 , v2))) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v2 , v1))) (distance (v2 , v0))) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2)))))))) = (((~ (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v0 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v1 INSERT EMPTY)))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))) /\ ((((((((dih_y (distance ((vec (NUMERAL _0)) , v0))) (distance ((vec (NUMERAL _0)) , v1))) (distance ((vec (NUMERAL _0)) , v2))) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1))) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((((dih_y (distance ((vec (NUMERAL _0)) , v1))) (distance ((vec (NUMERAL _0)) , v2))) (distance ((vec (NUMERAL _0)) , v0))) (distance (v2 , v0))) (distance (v1 , v0))) (distance (v1 , v2))) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((((dih_y (distance ((vec (NUMERAL _0)) , v2))) (distance ((vec (NUMERAL _0)) , v0))) (distance ((vec (NUMERAL _0)) , v1))) (distance (v0 , v1))) (distance (v2 , v1))) (distance (v2 , v0))) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))))))
T c= c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c/\ c= cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f2 f1 cdistance c, f2 f0 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f1 f0 cdistance c, f1 f2 cdistance c, f2 f0 c= cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f2 f0 cdistance c, f1 f0 c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c/\ c= cdih_y cdistance c, cvec cNUMERAL c_0 f1 cdistance c, cvec cNUMERAL c_0 f2 cdistance c, cvec cNUMERAL c_0 f0 cdistance c, f2 f0 cdistance c, f1 f0 cdistance c, f1 f2 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f2 f0 cdistance c, f1 f0 cdistance c, f1 f2 c/\ c= cdih_y cdistance c, cvec cNUMERAL c_0 f2 cdistance c, cvec cNUMERAL c_0 f0 cdistance c, cvec cNUMERAL c_0 f1 cdistance c, f0 f1 cdistance c, f2 f1 cdistance c, f2 f0 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f1 f0 cdistance c, f1 f2 cdistance c, f2 f0 c= cdih_y cdistance c, cvec cNUMERAL c_0 f0 cdistance c, cvec cNUMERAL c_0 f1 cdistance c, cvec cNUMERAL c_0 f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f2 f0 cdistance c, f1 f0
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ (A = T) |- ((A = T) /\ (((A ==> B) /\ A) ==> B))
T c==> c= f0 cT c/\ c= f0 cT c==> c/\ c==> f0 f1 f0 f1
- |- (((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))) = (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c= c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((_8381615 = _8381616) ==> ((distance _8381615) = (distance _8381616)))
T c==> c= f0 f1 c= cdistance f0 cdistance f1
- |- ((!v2. ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> (~ (!x. (!y. ((distance (x , y)) = (distance (y , x))))))))) = T)
T c= ! c==> c~ c/\ c= cdistance c, b0 f0 cdistance c, f0 b0 c/\ c= cdistance c, b0 f1 cdistance c, f1 b0 c= cdistance c, f1 f0 cdistance c, f0 f1 c==> ! ! c= cdistance c, b1 b2 cdistance c, b2 b1 c~ ! ! c= cdistance c, b1 b2 cdistance c, b2 b1 cT
- |- (((((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) ==> (((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))))) = (((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))))
T c= c==> c==> c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\y6. (((((((rhazim y1) y2) y3) y4) y5) y6) = ((real_mul (rho y1)) ((((((dih_y y1) y2) y3) y4) y5) y6)))) y6)
T * / c= crhazim f0 f1 f2 f3 f4 b0 creal_mul crho f0 cdih_y f0 f1 f2 f3 f4 b0 f5
+ (~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) |- ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)
T c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
+ |- ((\f. (!y2. (!y3. (!y1. (!y5. (!y6. (!y4. ((((((((node2_y f) y1) y2) y3) y4) y5) y6) = ((((((f y2) y3) y1) y5) y6) y4))))))))) f)
T * / ! ! ! ! ! ! c= cnode2_y b0 b3 b1 b2 b6 b4 b5 * * * * * * b0 b1 b2 b3 b4 b5 b6 f0
+ |- (!y. (((\x. ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v0))) /\ (((real_lt (distance (v1 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ v) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))))))) x)) y) = ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v0))) /\ (((real_lt (distance (v1 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ v) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))))))) y)))
T c= * / * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f1 part cball_annulus c/\ c~ b1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f3 * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f1 part cball_annulus c/\ c~ b0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ |- (((!y6. (((((((taum y1) y2) y3) y4) y5) y6) = ((real_add ((((((rhazim y1) y2) y3) y4) y5) y6)) ((real_add ((((((rhazim2 y1) y2) y3) y4) y5) y6)) ((real_sub ((((((rhazim3 y1) y2) y3) y4) y5) y6)) ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) const1)) pi)))))) ==> ((\y6. (((((((taum y1) y2) y3) y4) y5) y6) = ((real_add ((((((rhazim y1) y2) y3) y4) y5) y6)) ((real_add ((((((rhazim2 y1) y2) y3) y4) y5) y6)) ((real_sub ((((((rhazim3 y1) y2) y3) y4) y5) y6)) ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) const1)) pi)))))) y6)) = ((\y6. (((((((taum y1) y2) y3) y4) y5) y6) = ((real_add ((((((rhazim y1) y2) y3) y4) y5) y6)) ((real_add ((((((rhazim2 y1) y2) y3) y4) y5) y6)) ((real_sub ((((((rhazim3 y1) y2) y3) y4) y5) y6)) ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) const1)) pi)))))) y6))
T c= c==> ! c= ctaum f0 f1 f2 f3 f4 b0 creal_add crhazim f0 f1 f2 f3 f4 b0 creal_add crhazim2 f0 f1 f2 f3 f4 b0 creal_sub crhazim3 f0 f1 f2 f3 f4 b0 creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 cconst1 cpi * / c= ctaum f0 f1 f2 f3 f4 b0 creal_add crhazim f0 f1 f2 f3 f4 b0 creal_add crhazim2 f0 f1 f2 f3 f4 b0 creal_sub crhazim3 f0 f1 f2 f3 f4 b0 creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 cconst1 cpi f5 * / c= ctaum f0 f1 f2 f3 f4 b0 creal_add crhazim f0 f1 f2 f3 f4 b0 creal_add crhazim2 f0 f1 f2 f3 f4 b0 creal_sub crhazim3 f0 f1 f2 f3 f4 b0 creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 cconst1 cpi f5
- |- ((~ (_8381611 = _8381613)) \/ ((~ (_8381612 = _8381614)) \/ ((_8381611 , _8381612) = (_8381613 , _8381614))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ (!v. (!w. (!P. (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v , w))) /\ (((real_lt (distance (v , w))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v IN ball_annulus) /\ (w IN ball_annulus)))) /\ (P F)) ==> (P (collinear ((vec (NUMERAL _0)) INSERT (v INSERT (w INSERT EMPTY))))))))) |- ((((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v , w))) /\ (((real_lt (distance (v , w))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v IN ball_annulus) /\ (w IN ball_annulus)))) /\ (P F)) ==> (P (collinear ((vec (NUMERAL _0)) INSERT (v INSERT (w INSERT EMPTY)))))) = T)
T c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 c/\ creal_lt cdistance c, b0 b1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN b0 part cball_annulus cIN b1 part cball_annulus * b2 cF * b2 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= c==> c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus * f2 cF * f2 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
+ |- (!b. (!c. ((b = c) ==> (!P. ((P c) ==> (P b))))))
T c==> c= f0 f1 ! c==> * b0 f1 * b0 f0
+ (~ (P b)), (P c), (b = c) |- ((~ (P b)) /\ F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ * f0 f1 cF
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- ((\y4. (!y5. (!y6. (((((((taum y1) y2) y3) y4) y5) y6) = ((real_add ((((((rhazim y1) y2) y3) y4) y5) y6)) ((real_add ((((((rhazim2 y1) y2) y3) y4) y5) y6)) ((real_sub ((((((rhazim3 y1) y2) y3) y4) y5) y6)) ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) const1)) pi)))))))) y4)
T * / ! ! c= ctaum f0 f1 f2 b0 b1 b2 creal_add crhazim f0 f1 f2 b0 b1 b2 creal_add crhazim2 f0 f1 f2 b0 b1 b2 creal_sub crhazim3 f0 f1 f2 b0 b1 b2 creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 cconst1 cpi f3
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- ((\y. (((\x. ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ (((~ v) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))) x)) y) = ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ (((~ v) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))) y))) (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY)))))
T * / c= * / * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ c~ b2 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY b1 b0 * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ c~ b1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY b0 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
+ ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))), ((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (v0 IN ball_annulus), (v1 IN ball_annulus), (v2 IN ball_annulus) |- (((~ (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v0 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v1 INSERT EMPTY)))))) /\ ((\x. ((\v. (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))) /\ ((((((((dih_y (distance ((vec (NUMERAL _0)) , v0))) (distance ((vec (NUMERAL _0)) , v1))) (distance ((vec (NUMERAL _0)) , v2))) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1))) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((((dih_y (distance ((vec (NUMERAL _0)) , v1))) (distance ((vec (NUMERAL _0)) , v2))) (distance ((vec (NUMERAL _0)) , v0))) (distance (v2 , v0))) (distance (v1 , v0))) (distance (v1 , v2))) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (v = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))))) x)) ((((((dih_y (distance ((vec (NUMERAL _0)) , v2))) (distance ((vec (NUMERAL _0)) , v0))) (distance ((vec (NUMERAL _0)) , v1))) (distance (v0 , v1))) (distance (v2 , v1))) (distance (v2 , v0)))))
T c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c==> creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cIN f0 part cball_annulus c==> cIN f1 part cball_annulus c==> cIN f2 part cball_annulus c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * / * / c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c= cdih_y cdistance c, cvec cNUMERAL c_0 f0 cdistance c, cvec cNUMERAL c_0 f1 cdistance c, cvec cNUMERAL c_0 f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdih_y cdistance c, cvec cNUMERAL c_0 f1 cdistance c, cvec cNUMERAL c_0 f2 cdistance c, cvec cNUMERAL c_0 f0 cdistance c, f2 f0 cdistance c, f1 f0 cdistance c, f1 f2 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= b1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 b0 cdih_y cdistance c, cvec cNUMERAL c_0 f2 cdistance c, cvec cNUMERAL c_0 f0 cdistance c, cvec cNUMERAL c_0 f1 cdistance c, f0 f1 cdistance c, f2 f1 cdistance c, f2 f0
- ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))), (((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) |- ((((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) /\ ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))))
T c==> c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c==> c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c/\ c==> c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
+ |- ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))
T c==> c==> f0 c= f1 f2 ! c==> c/\ f0 * b0 f2 * b0 f1
+ (!v. (!w. (!P. (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v , w))) /\ (((real_lt (distance (v , w))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v IN ball_annulus) /\ (w IN ball_annulus)))) /\ (P F)) ==> (P (collinear ((vec (NUMERAL _0)) INSERT (v INSERT (w INSERT EMPTY))))))))) |- (!w. (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v , w))) /\ (((real_lt (distance (v , w))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v IN ball_annulus) /\ (w IN ball_annulus)))) /\ (P F)) ==> (P (collinear ((vec (NUMERAL _0)) INSERT (v INSERT (w INSERT EMPTY)))))))
T c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 c/\ creal_lt cdistance c, b0 b1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN b0 part cball_annulus cIN b1 part cball_annulus * b2 cF * b2 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 b0 c/\ creal_lt cdistance c, f0 b0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN b0 part cball_annulus * f1 cF * f1 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY
+ (b = c) |- ((b = c) /\ (!P. ((P c) ==> (P b))))
T c==> c= f0 f1 c/\ c= f0 f1 ! c==> * b0 f1 * b0 f0
+ |- ((\y2. (!y6. (!y4. (!y5. ((((((((node3_y f) y1) y2) y3) y4) y5) y6) = ((((((f y3) y1) y2) y6) y4) y5)))))) y2)
T * / ! ! ! c= cnode3_y f0 f1 b0 f2 b2 b3 b1 * * * * * * f0 f2 f1 b0 b1 b2 b3 f3
+ (!v0. (!v1. (!v2. (!v3. (!P. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))))))) |- ((!v0. (!v1. (!v2. (!v3. (!P. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))))))) /\ (!P. (!v0. (!v1. (!v2. (!v3. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))))))))
T c==> ! ! ! ! ! c==> c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * b4 cdih_y cdistance c, b0 b1 cdistance c, b0 b2 cdistance c, b0 b3 cdistance c, b2 b3 cdistance c, b1 b3 cdistance c, b1 b2 * b4 cdihV b0 b1 b2 b3 c/\ ! ! ! ! ! c==> c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * b4 cdih_y cdistance c, b0 b1 cdistance c, b0 b2 cdistance c, b0 b3 cdistance c, b2 b3 cdistance c, b1 b3 cdistance c, b1 b2 * b4 cdihV b0 b1 b2 b3 ! ! ! ! ! c==> c/\ c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY * b0 cdih_y cdistance c, b1 b2 cdistance c, b1 b3 cdistance c, b1 b4 cdistance c, b3 b4 cdistance c, b2 b4 cdistance c, b2 b3 * b0 cdihV b1 b2 b3 b4
+ |- ((\y6. (!y4. (!y5. ((((((((node3_y f) y1) y2) y3) y4) y5) y6) = ((((((f y3) y1) y2) y6) y4) y5))))) y6)
T * / ! ! c= cnode3_y f0 f1 f2 f3 b1 b2 b0 * * * * * * f0 f3 f1 f2 b0 b1 b2 f4
+ |- (((!y2. (!y6. (!y4. (!y5. ((((((((node3_y f) y1) y2) y3) y4) y5) y6) = ((((((f y3) y1) y2) y6) y4) y5)))))) ==> ((\y2. (!y6. (!y4. (!y5. ((((((((node3_y f) y1) y2) y3) y4) y5) y6) = ((((((f y3) y1) y2) y6) y4) y5)))))) y2)) = ((\y2. (!y6. (!y4. (!y5. ((((((((node3_y f) y1) y2) y3) y4) y5) y6) = ((((((f y3) y1) y2) y6) y4) y5)))))) y2))
T c= c==> ! ! ! ! c= cnode3_y f0 f1 b0 f2 b2 b3 b1 * * * * * * f0 f2 f1 b0 b1 b2 b3 * / ! ! ! c= cnode3_y f0 f1 b0 f2 b2 b3 b1 * * * * * * f0 f2 f1 b0 b1 b2 b3 f3 * / ! ! ! c= cnode3_y f0 f1 b0 f2 b2 b3 b1 * * * * * * f0 f2 f1 b0 b1 b2 b3 f3
+ |- ((~ (((real_add ((real_mul (rho (vector_norm v0))) ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1))))) ((real_add ((real_mul (rho (vector_norm v1))) ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2))))) ((real_sub ((real_mul (rho (vector_norm v2))) ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))) ((real_add pi) ((real_mul pi) const1))))) = ((real_add ((real_mul (rho (vector_norm v0))) ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1))))) ((real_add ((real_mul (rho (vector_norm v1))) ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2))))) ((real_sub ((real_mul (rho (vector_norm v2))) ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))) ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) const1)) pi)))))) ==> F)
T c==> c~ c= creal_add creal_mul crho cvector_norm f0 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 creal_add creal_mul crho cvector_norm f1 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 creal_sub creal_mul crho cvector_norm f2 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 creal_add cpi creal_mul cpi cconst1 creal_add creal_mul crho cvector_norm f0 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 creal_add creal_mul crho cvector_norm f1 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 creal_sub creal_mul crho cvector_norm f2 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 cconst1 cpi cF
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((\P. (!v0. (!v1. (!v2. (!v3. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))))))) P)
T * / ! ! ! ! c==> c/\ c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY * b0 cdih_y cdistance c, b1 b2 cdistance c, b1 b3 cdistance c, b1 b4 cdistance c, b3 b4 cdistance c, b2 b4 cdistance c, b2 b3 * b0 cdihV b1 b2 b3 b4 f0
- |- ((((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) = ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))))
T c= c==> c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
+ |- ((\v2. ((((tau3 v1) v2) v3) = ((real_add ((real_mul (rho (vector_norm v1))) ((((dihV (vec (NUMERAL _0))) v1) v2) v3))) ((real_add ((real_mul (rho (vector_norm v2))) ((((dihV (vec (NUMERAL _0))) v2) v3) v1))) ((real_sub ((real_mul (rho (vector_norm v3))) ((((dihV (vec (NUMERAL _0))) v3) v1) v2))) ((real_add pi) sol0)))))) v2)
T * / c= ctau3 f0 b0 f1 creal_add creal_mul crho cvector_norm f0 cdihV cvec cNUMERAL c_0 f0 b0 f1 creal_add creal_mul crho cvector_norm b0 cdihV cvec cNUMERAL c_0 b0 f1 f0 creal_sub creal_mul crho cvector_norm f1 cdihV cvec cNUMERAL c_0 f1 f0 b0 creal_add cpi csol0 f2
+ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))) /\ (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))), (v0 IN ball_annulus), (v1 IN ball_annulus), (v2 IN ball_annulus) |- (((real_add ((real_mul (rho (vector_norm v0))) ((((dihV (vec (NUMERAL _0))) v0) v1) v2))) ((real_add ((real_mul (rho (vector_norm v1))) ((((dihV (vec (NUMERAL _0))) v1) v2) v0))) ((real_sub ((real_mul (rho (vector_norm v2))) ((((dihV (vec (NUMERAL _0))) v2) v0) v1))) ((real_add pi) ((real_mul pi) const1))))) = ((real_add ((real_mul (rho (vector_norm v0))) ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1))))) ((real_add ((real_mul (rho (vector_norm v1))) ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2))))) ((real_sub ((real_mul (rho (vector_norm v2))) ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))) ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) const1)) pi)))))
T c==> c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c==> cIN f0 part cball_annulus c==> cIN f1 part cball_annulus c==> cIN f2 part cball_annulus c= creal_add creal_mul crho cvector_norm f0 cdihV cvec cNUMERAL c_0 f0 f1 f2 creal_add creal_mul crho cvector_norm f1 cdihV cvec cNUMERAL c_0 f1 f2 f0 creal_sub creal_mul crho cvector_norm f2 cdihV cvec cNUMERAL c_0 f2 f0 f1 creal_add cpi creal_mul cpi cconst1 creal_add creal_mul crho cvector_norm f0 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 creal_add creal_mul crho cvector_norm f1 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 creal_sub creal_mul crho cvector_norm f2 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 cconst1 cpi
+ (A = F) |- ((((F ==> B) /\ F) ==> B) = (((A ==> B) /\ A) ==> B))
T c==> c= f0 cF c= c==> c/\ c==> cF f1 cF f1 c==> c/\ c==> f0 f1 f0 f1
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ (!v0. (!v1. (!v2. (!v3. (!P. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))))))) |- (((!v2. (!v3. (!P. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))))) ==> ((\v2. (!v3. (!P. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))))) v2)) = ((\v2. (!v3. (!P. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))))) v2))
T c==> ! ! ! ! ! c==> c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * b4 cdih_y cdistance c, b0 b1 cdistance c, b0 b2 cdistance c, b0 b3 cdistance c, b2 b3 cdistance c, b1 b3 cdistance c, b1 b2 * b4 cdihV b0 b1 b2 b3 c= c==> ! ! ! c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY * b2 cdih_y cdistance c, f0 f1 cdistance c, f0 b0 cdistance c, f0 b1 cdistance c, b0 b1 cdistance c, f1 b1 cdistance c, f1 b0 * b2 cdihV f0 f1 b0 b1 * / ! ! c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY * b2 cdih_y cdistance c, f0 f1 cdistance c, f0 b0 cdistance c, f0 b1 cdistance c, b0 b1 cdistance c, f1 b1 cdistance c, f1 b0 * b2 cdihV f0 f1 b0 b1 f2 * / ! ! c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY * b2 cdih_y cdistance c, f0 f1 cdistance c, f0 b0 cdistance c, f0 b1 cdistance c, b0 b1 cdistance c, f1 b1 cdistance c, f1 b0 * b2 cdihV f0 f1 b0 b1 f2
+ |- (((\x. ((\v. ((v = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))) x)) ((((dihV (vec (NUMERAL _0))) v0) v1) v2)) = ((\v. ((v = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))) ((((dihV (vec (NUMERAL _0))) v0) v1) v2)))
T c= * / * / c/\ c= b1 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 b0 cdihV cvec cNUMERAL c_0 f0 f1 f2 * / c/\ c= b0 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 cdihV cvec cNUMERAL c_0 f0 f1 f2
+ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1))))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v2))), ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))), ((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v0 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (v0 IN ball_annulus), (v1 IN ball_annulus), (v2 IN ball_annulus) |- (((~ (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v0 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v1 INSERT EMPTY)))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))) /\ ((((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v2 , v0))) (distance (v1 , v0))) (distance (v1 , v2))) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v2 , v1))) (distance (v2 , v0))) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))))
T c==> c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c==> creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c==> creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cIN f1 part cball_annulus c==> cIN f2 part cball_annulus c==> cIN f0 part cball_annulus c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c/\ c= cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f2 f1 cdistance c, f2 f0 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f1 f0 cdistance c, f1 f2 cdistance c, f2 f0 c= cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f2 f0 cdistance c, f1 f0
+ (P c), (b = c) |- ((~ (P b)) ==> F)
T c==> * f0 f1 c==> c= f2 f1 c==> c~ * f0 f2 cF
+ |- ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ v) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))))
T * / ! c= * / * b0 b2 b1 * b0 b1 / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c~ b0 c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((distance (x , (vec (NUMERAL _0)))) = (vector_norm x))
T c= cdistance c, f0 cvec cNUMERAL c_0 cvector_norm f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) ==> (((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))))
T c==> c==> c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((((~ (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v0 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v1 INSERT EMPTY)))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))) = ((\x. ((\v. (((~ v) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v1 INSERT EMPTY)))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))))) x)) (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v0 INSERT EMPTY))))))
T c= c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * / * / c/\ c/\ c~ b1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY b0 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- (((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> (~ (!x. (!y. ((distance (x , y)) = (distance (y , x)))))))) = T)
T c= c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c~ ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cT
- |- (((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)) = ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))
T c= c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) |- ((((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) ==> ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))))
T c==> c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c==> c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
- (!x. (!y. ((distance (x , y)) = (distance (y , x))))), (~ F), (~ ((distance (v1 , v0)) = (distance (v0 , v1)))) |- ((~ F) /\ F)
T c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> c~ cF c==> c~ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c~ cF cF
- |- ((~ (_8381615 = _8381616)) \/ ((distance _8381615) = (distance _8381616)))
T c\/ c~ c= f0 f1 c= cdistance f0 cdistance f1
- (~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) |- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) /\ F)
T c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 c/\ c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (!x. (!y. ((distance (x , y)) = (distance (y , x))))), (~ ((distance (v1 , v0)) = (distance (v0 , v1)))) |- ((~ F) ==> F)
T c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> c~ c= cdistance c, f0 f1 cdistance c, f1 f0 c==> c~ cF cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (b = c) |- (F = F)
T c==> c= f0 f1 c= cF cF
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (!x. (!y. ((distance (x , y)) = (distance (y , x))))), (~ ((distance (v1 , v0)) = (distance (v0 , v1)))) |- ((~ ((distance (v1 , v0)) = (distance (v0 , v1)))) /\ ((distance (v1 , v0)) = (distance (v0 , v1))))
T c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> c~ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c~ c= cdistance c, f0 f1 cdistance c, f1 f0 c= cdistance c, f0 f1 cdistance c, f1 f0
- |- (!v1. (!v0. (!v2. ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> (~ (!x. (!y. ((distance (x , y)) = (distance (y , x)))))))))))
T c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c~ ! ! c= cdistance c, b0 b1 cdistance c, b1 b0
- |- (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v0))) /\ (((real_lt (distance (v1 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))) = ((\x. ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v0))) /\ (((real_lt (distance (v1 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ v) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))))))) x)) (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))))
T c= c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f1 part cball_annulus c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * / * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f1 part cball_annulus c/\ c~ b1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
- |- ((!v0. (!v2. ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> (~ (!x. (!y. ((distance (x , y)) = (distance (y , x)))))))))) = T)
T c= ! ! c==> c~ c/\ c= cdistance c, b1 b0 cdistance c, b0 b1 c/\ c= cdistance c, b1 f0 cdistance c, f0 b1 c= cdistance c, f0 b0 cdistance c, b0 f0 c==> ! ! c= cdistance c, b2 b3 cdistance c, b3 b2 c~ ! ! c= cdistance c, b2 b3 cdistance c, b3 b2 cT
- |- (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v1 INSERT EMPTY))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))))) = ((\x. ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ v) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))) x)) (collinear ((vec (NUMERAL _0)) INSERT (v2 INSERT (v1 INSERT EMPTY))))))
T c= c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * / * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c~ b1 c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY b0 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- (!x. (!y. ((distance (x , y)) = (distance (y , x))))), (~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) |- ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) /\ (~ (!x. (!y. ((distance (x , y)) = (distance (y , x)))))))
T c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c/\ ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c~ ! ! c= cdistance c, b0 b1 cdistance c, b1 b0
- (~ (P c)), (P c) |- ((~ (P c)) /\ (P c))
T c==> c~ * f0 f1 c==> * f0 f1 c/\ c~ * f0 f1 * f0 f1
- |- ((((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))) /\ ((((((((dih_y (distance ((vec (NUMERAL _0)) , v0))) (distance ((vec (NUMERAL _0)) , v1))) (distance ((vec (NUMERAL _0)) , v2))) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1))) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))) = ((\x. ((\v. (((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))) /\ ((((((((dih_y (distance ((vec (NUMERAL _0)) , v0))) (distance ((vec (NUMERAL _0)) , v1))) (distance ((vec (NUMERAL _0)) , v2))) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1))) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((v = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2)))))))) x)) ((((dihV (vec (NUMERAL _0))) v1) v2) v0)))
T c= c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c= cdih_y cdistance c, cvec cNUMERAL c_0 f0 cdistance c, cvec cNUMERAL c_0 f1 cdistance c, cvec cNUMERAL c_0 f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 * / * / c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c= cdih_y cdistance c, cvec cNUMERAL c_0 f0 cdistance c, cvec cNUMERAL c_0 f1 cdistance c, cvec cNUMERAL c_0 f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= b1 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 b0 cdihV cvec cNUMERAL c_0 f1 f2 f0
- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((((((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2)))))) ==> B) /\ ((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))) ==> B) ==> (((((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2)))))) ==> B) /\ ((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))) ==> B))
T c==> c==> c/\ c==> c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 f3 c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 f3 c==> c/\ c==> c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 f3 c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 f3
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) |- (~ (!x. (!y. ((distance (x , y)) = (distance (y , x))))))
T c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c~ ! ! c= cdistance c, b0 b1 cdistance c, b1 b0
- ((((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2)))))) ==> B) /\ ((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))) |- ((((((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2)))))) ==> B) /\ ((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))) ==> B) ==> B)
T c==> c/\ c==> c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 f3 c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 c==> c==> c/\ c==> c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 f3 c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 f3 f3
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (_8381611 = _8381613) |- ((_8381611 = _8381613) /\ ((~ (_8381612 = _8381614)) \/ ((_8381611 , _8381612) = (_8381613 , _8381614))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!v0. (!v1. (!v2. (!v3. (!P. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))))))), (((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) |- ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) /\ (P ((((dihV v0) v1) v2) v3)))
T c==> ! ! ! ! ! c==> c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * b4 cdih_y cdistance c, b0 b1 cdistance c, b0 b2 cdistance c, b0 b3 cdistance c, b2 b3 cdistance c, b1 b3 cdistance c, b1 b2 * b4 cdihV b0 b1 b2 b3 c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * f4 cdih_y cdistance c, f0 f1 cdistance c, f0 f2 cdistance c, f0 f3 cdistance c, f2 f3 cdistance c, f1 f3 cdistance c, f1 f2 c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * f4 cdih_y cdistance c, f0 f1 cdistance c, f0 f2 cdistance c, f0 f3 cdistance c, f2 f3 cdistance c, f1 f3 cdistance c, f1 f2 * f4 cdihV f0 f1 f2 f3
- |- ((\v1. (!v0. (!v2. ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))))) v1)
T * / ! ! c==> c~ c/\ c= cdistance c, b2 b1 cdistance c, b1 b2 c/\ c= cdistance c, b2 b0 cdistance c, b0 b2 c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b3 b4 cdistance c, b4 b3 c==> ! ! c= cdistance c, b3 b4 cdistance c, b4 b3 cF f0
- (_8381615 = _8381616) |- ((_8381615 = _8381616) /\ ((distance _8381615) = (distance _8381616)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cdistance f0 cdistance f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) |- ((((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) /\ (((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))))
T c==> c==> c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c/\ c==> c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
- ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v , w))) /\ (((real_lt (distance (v , w))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v IN ball_annulus) /\ (w IN ball_annulus)))) /\ (P F)) |- ((!v. (!w. (!P. (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v , w))) /\ (((real_lt (distance (v , w))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v IN ball_annulus) /\ (w IN ball_annulus)))) /\ (P F)) ==> (P (collinear ((vec (NUMERAL _0)) INSERT (v INSERT (w INSERT EMPTY))))))))) ==> (P (collinear ((vec (NUMERAL _0)) INSERT (v INSERT (w INSERT EMPTY))))))
T c==> c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus * f2 cF c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 c/\ creal_lt cdistance c, b0 b1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN b0 part cball_annulus cIN b1 part cball_annulus * b2 cF * b2 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * f2 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (P c) |- ((~ (P c)) ==> (P c))
T c==> * f0 f1 c==> c~ * f0 f1 * f0 f1
- ((((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2)))))) ==> B) /\ ((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))), (((((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2)))))) ==> B) /\ ((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))) ==> B) |- ((((((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2)))))) ==> B) /\ ((((((dihV (vec (NUMERAL _0))) v0) v1) v2) = ((((((dih_y (vector_norm v0)) (vector_norm v1)) (vector_norm v2)) (distance (v1 , v2))) (distance (v0 , v2))) (distance (v0 , v1)))) /\ ((((((dihV (vec (NUMERAL _0))) v1) v2) v0) = ((((((dih_y (vector_norm v1)) (vector_norm v2)) (vector_norm v0)) (distance (v0 , v2))) (distance (v0 , v1))) (distance (v1 , v2)))) /\ (((((dihV (vec (NUMERAL _0))) v2) v0) v1) = ((((((dih_y (vector_norm v2)) (vector_norm v0)) (vector_norm v1)) (distance (v0 , v1))) (distance (v1 , v2))) (distance (v0 , v2))))))) ==> B) /\ B)
T c==> c/\ c==> c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 f3 c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 c==> c==> c/\ c==> c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 f3 c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 f3 c/\ c==> c/\ c==> c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 f3 c/\ c= cdihV cvec cNUMERAL c_0 f0 f1 f2 cdih_y cvector_norm f0 cvector_norm f1 cvector_norm f2 cdistance c, f1 f2 cdistance c, f0 f2 cdistance c, f0 f1 c/\ c= cdihV cvec cNUMERAL c_0 f1 f2 f0 cdih_y cvector_norm f1 cvector_norm f2 cvector_norm f0 cdistance c, f0 f2 cdistance c, f0 f1 cdistance c, f1 f2 c= cdihV cvec cNUMERAL c_0 f2 f0 f1 cdih_y cvector_norm f2 cvector_norm f0 cvector_norm f1 cdistance c, f0 f1 cdistance c, f1 f2 cdistance c, f0 f2 f3 f3
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) = ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c= c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) |- ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) /\ ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> (~ (!x. (!y. ((distance (x , y)) = (distance (y , x))))))))
T c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c/\ c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c~ ! ! c= cdistance c, b0 b1 cdistance c, b1 b0
- |- (((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))))
T c==> c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
- |- (((\v23. (f v23)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (!v0. (!v1. (!v2. (!v3. (!P. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))))))), (((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) |- ((!v0. (!v1. (!v2. (!v3. (!P. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))))))) /\ (P ((((dihV v0) v1) v2) v3)))
T c==> ! ! ! ! ! c==> c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * b4 cdih_y cdistance c, b0 b1 cdistance c, b0 b2 cdistance c, b0 b3 cdistance c, b2 b3 cdistance c, b1 b3 cdistance c, b1 b2 * b4 cdihV b0 b1 b2 b3 c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * f4 cdih_y cdistance c, f0 f1 cdistance c, f0 f2 cdistance c, f0 f3 cdistance c, f2 f3 cdistance c, f1 f3 cdistance c, f1 f2 c/\ ! ! ! ! ! c==> c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * b4 cdih_y cdistance c, b0 b1 cdistance c, b0 b2 cdistance c, b0 b3 cdistance c, b2 b3 cdistance c, b1 b3 cdistance c, b1 b2 * b4 cdihV b0 b1 b2 b3 * f4 cdihV f0 f1 f2 f3
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))), (((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) |- (((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) /\ ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))))
T c==> c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c==> c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c/\ c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
- |- (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))) = ((\x. ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((~ v) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))))))) x)) (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY))))))
T c= c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c/\ creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f2 part cball_annulus c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * / * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c/\ creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f2 part cball_annulus c/\ c~ b1 c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY b0 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\v0. (!v2. ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))))) v0)
T * / ! c==> c~ c/\ c= cdistance c, b1 b0 cdistance c, b0 b1 c/\ c= cdistance c, b1 f0 cdistance c, f0 b1 c= cdistance c, f0 b0 cdistance c, b0 f0 c==> ! ! c= cdistance c, b2 b3 cdistance c, b3 b2 c==> ! ! c= cdistance c, b2 b3 cdistance c, b3 b2 cF f1
- (_8381611 = _8381613) |- ((_8381612 = _8381614) ==> ((_8381611 , _8381612) = (_8381613 , _8381614)))
T c==> c= f0 f1 c==> c= f2 f3 c= c, f0 f2 c, f1 f3
- |- (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))) /\ (((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v0 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v0))) /\ (((real_lt (distance (v1 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))) = ((\x. ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v0 , v1))) /\ (((real_lt (distance (v0 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v0 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v0))) /\ (((real_lt (distance (v1 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v1 , v2))) /\ (((real_lt (distance (v1 , v2))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v1 IN ball_annulus) /\ (v2 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ (~ v))))))) x)) (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))
T c= c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c/\ creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * / * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f0 c/\ creal_lt cdistance c, f1 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f0 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f1 f2 c/\ creal_lt cdistance c, f1 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f1 part cball_annulus cIN f2 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f1 c/\ creal_lt cdistance c, f2 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f2 f0 c/\ creal_lt cdistance c, f2 f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f2 part cball_annulus cIN f0 part cball_annulus c~ b1 b0 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) |- (((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) /\ ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))))
T c==> c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c/\ c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c/\ c= cdistance c, f0 f1 cdistance c, f1 f0 c/\ c= cdistance c, f0 f2 cdistance c, f2 f0 c= cdistance c, f2 f1 cdistance c, f1 f2 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) |- ((!v0. (!v1. (!v2. (!v3. (!P. ((((~ (collinear (v0 INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (v3 INSERT EMPTY)))))) /\ (P ((((((dih_y (distance (v0 , v1))) (distance (v0 , v2))) (distance (v0 , v3))) (distance (v2 , v3))) (distance (v1 , v3))) (distance (v1 , v2))))) ==> (P ((((dihV v0) v1) v2) v3)))))))) ==> (P ((((dihV v0) v1) v2) v3)))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * f4 cdih_y cdistance c, f0 f1 cdistance c, f0 f2 cdistance c, f0 f3 cdistance c, f2 f3 cdistance c, f1 f3 cdistance c, f1 f2 c==> ! ! ! ! ! c==> c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * b4 cdih_y cdistance c, b0 b1 cdistance c, b0 b2 cdistance c, b0 b3 cdistance c, b2 b3 cdistance c, b1 b3 cdistance c, b1 b2 * b4 cdihV b0 b1 b2 b3 * f4 cdihV f0 f1 f2 f3
- |- (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY))))))))) = ((\x. ((\v. ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v1))) /\ (((real_lt (distance (v2 , v1))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v1 IN ball_annulus)))) /\ ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v2 , v0))) /\ (((real_lt (distance (v2 , v0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v2 IN ball_annulus) /\ (v0 IN ball_annulus)))) /\ (((~ v) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v0 INSERT EMPTY)))))) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (v0 INSERT (v2 INSERT EMPTY)))))))))) x)) (collinear ((vec (NUMERAL _0)) INSERT (v1 INSERT (v2 INSERT EMPTY))))))
T c= c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * / * / c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f2 c/\ creal_lt cdistance c, f0 f2 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f2 part cball_annulus c/\ c/\ c~ b1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY b0 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
- (~ (P b)), (P c), (b = c) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c==> c~ cF cF
- (!v. (!w. (!P. (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v , w))) /\ (((real_lt (distance (v , w))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v IN ball_annulus) /\ (w IN ball_annulus)))) /\ (P F)) ==> (P (collinear ((vec (NUMERAL _0)) INSERT (v INSERT (w INSERT EMPTY))))))))), ((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v , w))) /\ (((real_lt (distance (v , w))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v IN ball_annulus) /\ (w IN ball_annulus)))) /\ (P F)) |- ((!v. (!w. (!P. (((((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v , w))) /\ (((real_lt (distance (v , w))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((v IN ball_annulus) /\ (w IN ball_annulus)))) /\ (P F)) ==> (P (collinear ((vec (NUMERAL _0)) INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (P (collinear ((vec (NUMERAL _0)) INSERT (v INSERT (w INSERT EMPTY))))))
T c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 c/\ creal_lt cdistance c, b0 b1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN b0 part cball_annulus cIN b1 part cball_annulus * b2 cF * b2 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ creal_lt cdistance c, f0 f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN f0 part cball_annulus cIN f1 part cball_annulus * f2 cF c/\ ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 c/\ creal_lt cdistance c, b0 b1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cIN b0 part cball_annulus cIN b1 part cball_annulus * b2 cF * b2 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * f2 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!v1. (!v0. (!v2. ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> (~ (!x. (!y. ((distance (x , y)) = (distance (y , x))))))))))) = (!v1. (!v0. (!v2. ((~ (((distance (v2 , v0)) = (distance (v0 , v2))) /\ (((distance (v2 , v1)) = (distance (v1 , v2))) /\ ((distance (v1 , v0)) = (distance (v0 , v1)))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))))))
T c= ! ! ! c==> c~ c/\ c= cdistance c, b2 b1 cdistance c, b1 b2 c/\ c= cdistance c, b2 b0 cdistance c, b0 b2 c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b3 b4 cdistance c, b4 b3 c~ ! ! c= cdistance c, b3 b4 cdistance c, b4 b3 ! ! ! c==> c~ c/\ c= cdistance c, b2 b1 cdistance c, b1 b2 c/\ c= cdistance c, b2 b0 cdistance c, b0 b2 c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b3 b4 cdistance c, b4 b3 c==> ! ! c= cdistance c, b3 b4 cdistance c, b4 b3 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
