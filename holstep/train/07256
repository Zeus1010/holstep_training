N Reduction3.batch_k
C |- (!f. (!L. (!N. (!r. (!x. (!k. ((k = ((((transform_count L) N) r) x)) ==> (((((((batch0 f) L) N) r) x) k) = (((dest_triple0 f) NIL) ((((core_triple_v4 L) N) r) x))))))))))
T c==> c= f0 ctransform_count f1 f2 f3 f4 c= cbatch0 f5 f1 f2 f3 f4 f0 cdest_triple0 f5 cNIL ccore_triple_v4 f1 f2 f3 f4
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D FORALL_BOOL_THM
A |- ((!b. (P b)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_LE
A |- (!x. (!y. ((~ ((int_le x) y)) = ((int_lt y) x))))
T c= c~ cint_le f0 f1 cint_lt f1 f0
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D Seq.take_oversize
A |- (!n. (!s. (((sizel s) <= n) ==> (((take n) s) = s))))
T c==> c<= csizel f0 f1 c= ctake f1 f0 f0
D Seq.flatten0
A |- ((flatten NIL) = NIL)
T c= cflatten cNIL cNIL
D Reduction3.batch
A |- (!f0. (!L. (!N. (!r. (!x. (!i. (((((((batch0 f0) L) N) r) x) i) = (flatten (((foldl (dest_triple0_step f0)) NIL) ((take i) ((((core_triple_v4 L) N) r) x)))))))))))
T c= cbatch0 f0 f1 f2 f3 f4 f5 cflatten cfoldl * part cdest_triple0_step f0 cNIL ctake f5 ccore_triple_v4 f1 f2 f3 f4
D Reduction3.size_core_triple
A |- (!L. (!N. (!r. (!x. ((sizel ((((core_triple_v4 L) N) r) x)) = ((((transform_count L) N) r) x))))))
T c= csizel ccore_triple_v4 f0 f1 f2 f3 ctransform_count f0 f1 f2 f3
D Reduction3.dest_triple0_foldl_steps
A |- (!uvns. (!f. (!s. (((~ (NIL = s)) ==> (~ (NIL = (LAST s)))) ==> ((((dest_triple0 f) (flatten s)) uvns) = (flatten (((foldl (dest_triple0_step f)) s) uvns)))))))
T c==> c==> c~ c= cNIL f0 c~ c= cNIL cLAST f0 c= cdest_triple0 f1 cflatten f0 f2 cflatten cfoldl * part cdest_triple0_step f1 f0 f2
+ (((((transform_count L) N) r) x) = k) |- ((((((transform_count L) N) r) x) = k) /\ ((((dest_triple0 f) NIL) ((((core_triple_v4 L) N) r) x)) = (flatten (((foldl (dest_triple0_step f)) NIL) ((take k) ((((core_triple_v4 L) N) r) x))))))
T c==> c= ctransform_count f0 f1 f2 f3 f4 c/\ c= ctransform_count f0 f1 f2 f3 f4 c= cdest_triple0 f5 cNIL ccore_triple_v4 f0 f1 f2 f3 cflatten cfoldl * part cdest_triple0_step f5 cNIL ctake f4 ccore_triple_v4 f0 f1 f2 f3
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _11069360)) /\ ((real_le ((real_add (real_of_int _11069360)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11069360))) = (~ (((int_le (int_of_num (NUMERAL _0))) _11069360) ==> ((int_le _11069360) _11069360))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 cint_le f0 f0
+ |- ((\P. (!f. (!s. (!uvns. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns)))))))) P)
T * / ! ! ! c==> c/\ c==> c~ c= b2 cNIL c~ c= cLAST b2 cNIL * b0 cdest_triple0 b1 cflatten b2 b3 * b0 cflatten cfoldl * part cdest_triple0_step b1 b2 b3 f0
+ |- (((\x. ((\v. ((((dest_triple0 f) NIL) ((((core_triple_v4 L) N) r) x)) = v)) x)) (flatten (((foldl (dest_triple0_step f)) NIL) ((take k) ((((core_triple_v4 L) N) r) x))))) = ((\v. ((((dest_triple0 f) NIL) ((((core_triple_v4 L) N) r) x)) = v)) (flatten (((foldl (dest_triple0_step f)) NIL) ((take k) ((((core_triple_v4 L) N) r) x))))))
T c= * / * / c= cdest_triple0 f0 cNIL ccore_triple_v4 f1 f2 f3 f4 b1 b0 cflatten cfoldl * part cdest_triple0_step f0 cNIL ctake f5 ccore_triple_v4 f1 f2 f3 f4 * / c= cdest_triple0 f0 cNIL ccore_triple_v4 f1 f2 f3 f4 b0 cflatten cfoldl * part cdest_triple0_step f0 cNIL ctake f5 ccore_triple_v4 f1 f2 f3 f4
+ |- (((!n. (!s. (!P. ((((sizel s) <= n) /\ (P s)) ==> (P ((take n) s)))))) ==> (!P. (!n. (!s. ((((sizel s) <= n) /\ (P s)) ==> (P ((take n) s))))))) = (!P. (!n. (!s. ((((sizel s) <= n) /\ (P s)) ==> (P ((take n) s)))))))
T c= c==> ! ! ! c==> c/\ c<= csizel b1 b0 * b2 b1 * b2 ctake b0 b1 ! ! ! c==> c/\ c<= csizel b2 b1 * b0 b2 * b0 ctake b1 b2 ! ! ! c==> c/\ c<= csizel b2 b1 * b0 b2 * b0 ctake b1 b2
+ |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) = (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))))
T c= c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1
+ (!f. (!s. (!uvns. (!P. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns)))))))) |- ((\uvns. (!P. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns)))))) uvns)
T c==> ! ! ! ! c==> c/\ c==> c~ c= b1 cNIL c~ c= cLAST b1 cNIL * b3 cdest_triple0 b0 cflatten b1 b2 * b3 cflatten cfoldl * part cdest_triple0_step b0 b1 b2 * / ! c==> c/\ c==> c~ c= f0 cNIL c~ c= cLAST f0 cNIL * b1 cdest_triple0 f1 cflatten f0 b0 * b1 cflatten cfoldl * part cdest_triple0_step f1 f0 b0 f2
+ |- ((\x. (!i. (((((((batch0 f0) L) N) r) x) i) = (flatten (((foldl (dest_triple0_step f0)) NIL) ((take i) ((((core_triple_v4 L) N) r) x))))))) x)
T * / ! c= cbatch0 f0 f1 f2 f3 b0 b1 cflatten cfoldl * part cdest_triple0_step f0 cNIL ctake b1 ccore_triple_v4 f1 f2 f3 b0 f4
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (!f. (!s. (!uvns. (!P. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns)))))))) |- ((\P. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns))))) P)
T c==> ! ! ! ! c==> c/\ c==> c~ c= b1 cNIL c~ c= cLAST b1 cNIL * b3 cdest_triple0 b0 cflatten b1 b2 * b3 cflatten cfoldl * part cdest_triple0_step b0 b1 b2 * / c==> c/\ c==> c~ c= f0 cNIL c~ c= cLAST f0 cNIL * b0 cdest_triple0 f1 cflatten f0 f2 * b0 cflatten cfoldl * part cdest_triple0_step f1 f0 f2 f3
+ |- ((\uvns. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns))))) uvns)
T * / c==> c/\ c==> c~ c= f0 cNIL c~ c= cLAST f0 cNIL * f1 cdest_triple0 f2 cflatten f0 b0 * f1 cflatten cfoldl * part cdest_triple0_step f2 f0 b0 f3
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (~ F), (~ (P b)), (P c), (b = c) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ cF cF
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ |- ((\c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))) c)
T * / c==> c==> f0 c= f1 b0 ! c==> c/\ f0 * b1 b0 * b1 f1 f2
+ (P c), (b = c) |- (P b)
T c==> * f0 f1 c==> c= f2 f1 * f0 f2
+ |- (((b = c) ==> (!P. ((P c) ==> (P b)))) = T)
T c= c==> c= f0 f1 ! c==> * b0 f1 * b0 f0 cT
+ |- ((!P. ((((sizel s) <= n) /\ (P s)) ==> (P ((take n) s)))) = T)
T c= ! c==> c/\ c<= csizel f0 f1 * b0 f0 * b0 ctake f1 f0 cT
+ (((((transform_count L) N) r) x) = k) |- ((((dest_triple0 f) NIL) ((((core_triple_v4 L) N) r) x)) = (((dest_triple0 f) (flatten NIL)) ((take k) ((((core_triple_v4 L) N) r) x))))
T c==> c= ctransform_count f0 f1 f2 f3 f4 c= cdest_triple0 f5 cNIL ccore_triple_v4 f0 f1 f2 f3 cdest_triple0 f5 cflatten cNIL ctake f4 ccore_triple_v4 f0 f1 f2 f3
+ |- (((!f. (!s. (!uvns. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns))))))) ==> ((\f. (!s. (!uvns. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns))))))) f)) = ((\f. (!s. (!uvns. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns))))))) f))
T c= c==> ! ! ! c==> c/\ c==> c~ c= b1 cNIL c~ c= cLAST b1 cNIL * f0 cdest_triple0 b0 cflatten b1 b2 * f0 cflatten cfoldl * part cdest_triple0_step b0 b1 b2 * / ! ! c==> c/\ c==> c~ c= b1 cNIL c~ c= cLAST b1 cNIL * f0 cdest_triple0 b0 cflatten b1 b2 * f0 cflatten cfoldl * part cdest_triple0_step b0 b1 b2 f1 * / ! ! c==> c/\ c==> c~ c= b1 cNIL c~ c= cLAST b1 cNIL * f0 cdest_triple0 b0 cflatten b1 b2 * f0 cflatten cfoldl * part cdest_triple0_step b0 b1 b2 f1
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _11069360)) /\ ((real_le ((real_add (real_of_int _11069360)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11069360))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _11069360)) /\ ((real_le ((real_add (real_of_int _11069360)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11069360))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _11069360)) /\ ((real_le ((real_add (real_of_int _11069360)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11069360)))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
+ (!n. (!s. (!P. ((((sizel s) <= n) /\ (P s)) ==> (P ((take n) s)))))) |- (!s. ((((sizel s) <= n) /\ (P s)) ==> (P ((take n) s))))
T c==> ! ! ! c==> c/\ c<= csizel b1 b0 * b2 b1 * b2 ctake b0 b1 ! c==> c/\ c<= csizel b0 f0 * f1 b0 * f1 ctake f0 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!f. (!s. (!uvns. (!P. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns)))))))) |- (((!P. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns))))) ==> ((\P. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns))))) P)) = ((\P. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns))))) P))
T c==> ! ! ! ! c==> c/\ c==> c~ c= b1 cNIL c~ c= cLAST b1 cNIL * b3 cdest_triple0 b0 cflatten b1 b2 * b3 cflatten cfoldl * part cdest_triple0_step b0 b1 b2 c= c==> ! c==> c/\ c==> c~ c= f0 cNIL c~ c= cLAST f0 cNIL * b0 cdest_triple0 f1 cflatten f0 f2 * b0 cflatten cfoldl * part cdest_triple0_step f1 f0 f2 * / c==> c/\ c==> c~ c= f0 cNIL c~ c= cLAST f0 cNIL * b0 cdest_triple0 f1 cflatten f0 f2 * b0 cflatten cfoldl * part cdest_triple0_step f1 f0 f2 f3 * / c==> c/\ c==> c~ c= f0 cNIL c~ c= cLAST f0 cNIL * b0 cdest_triple0 f1 cflatten f0 f2 * b0 cflatten cfoldl * part cdest_triple0_step f1 f0 f2 f3
+ |- ((!N. (!r. (!x. (!k. ((((((transform_count L) N) r) x) = k) ==> ((((dest_triple0 f) NIL) ((((core_triple_v4 L) N) r) x)) = (flatten (((foldl (dest_triple0_step f)) NIL) ((take k) ((((core_triple_v4 L) N) r) x)))))))))) = T)
T c= ! ! ! ! c==> c= ctransform_count f0 b0 b1 b2 b3 c= cdest_triple0 f1 cNIL ccore_triple_v4 f0 b0 b1 b2 cflatten cfoldl * part cdest_triple0_step f1 cNIL ctake b3 ccore_triple_v4 f0 b0 b1 b2 cT
+ |- (!y. (((\x. ((\v. ((((dest_triple0 f) NIL) ((((core_triple_v4 L) N) r) x)) = (((dest_triple0 f) (flatten NIL)) v))) x)) y) = ((\v. ((((dest_triple0 f) NIL) ((((core_triple_v4 L) N) r) x)) = (((dest_triple0 f) (flatten NIL)) v))) y)))
T c= * / * / c= cdest_triple0 f0 cNIL ccore_triple_v4 f1 f2 f3 f4 cdest_triple0 f0 cflatten cNIL b1 b0 f5 * / c= cdest_triple0 f0 cNIL ccore_triple_v4 f1 f2 f3 f4 cdest_triple0 f0 cflatten cNIL b0 f5
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((!s. (!P. ((((sizel s) <= n) /\ (P s)) ==> (P ((take n) s))))) = T)
T c= ! ! c==> c/\ c<= csizel b0 f0 * b1 b0 * b1 ctake f0 b0 cT
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- ((\uvns. (!f. (!s. (((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) ==> ((flatten (((foldl (dest_triple0_step f)) s) uvns)) = (((dest_triple0 f) (flatten s)) uvns)))))) uvns)
T * / ! ! c==> c==> c~ c= b2 cNIL c~ c= cLAST b2 cNIL c= cflatten cfoldl * part cdest_triple0_step b1 b2 b0 cdest_triple0 b1 cflatten b2 b0 f0
+ (((((transform_count L) N) r) x) = k) |- ((\x. ((\v. ((((dest_triple0 f) NIL) ((((core_triple_v4 L) N) r) x)) = v)) x)) (flatten (((foldl (dest_triple0_step f)) NIL) ((take k) ((((core_triple_v4 L) N) r) x)))))
T c==> c= ctransform_count f0 f1 f2 f3 f4 * / * / c= cdest_triple0 f5 cNIL ccore_triple_v4 f0 f1 f2 f3 b1 b0 cflatten cfoldl * part cdest_triple0_step f5 cNIL ctake f4 ccore_triple_v4 f0 f1 f2 f3
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- (((!s. (((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) ==> ((flatten (((foldl (dest_triple0_step f)) s) uvns)) = (((dest_triple0 f) (flatten s)) uvns)))) ==> ((\s. (((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) ==> ((flatten (((foldl (dest_triple0_step f)) s) uvns)) = (((dest_triple0 f) (flatten s)) uvns)))) s)) = ((\s. (((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) ==> ((flatten (((foldl (dest_triple0_step f)) s) uvns)) = (((dest_triple0 f) (flatten s)) uvns)))) s))
T c= c==> ! c==> c==> c~ c= b0 cNIL c~ c= cLAST b0 cNIL c= cflatten cfoldl * part cdest_triple0_step f0 b0 f1 cdest_triple0 f0 cflatten b0 f1 * / c==> c==> c~ c= b0 cNIL c~ c= cLAST b0 cNIL c= cflatten cfoldl * part cdest_triple0_step f0 b0 f1 cdest_triple0 f0 cflatten b0 f1 f2 * / c==> c==> c~ c= b0 cNIL c~ c= cLAST b0 cNIL c= cflatten cfoldl * part cdest_triple0_step f0 b0 f1 cdest_triple0 f0 cflatten b0 f1 f2
+ (!f. (!s. (!uvns. (!P. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns)))))))) |- (!uvns. (!P. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns))))))
T c==> ! ! ! ! c==> c/\ c==> c~ c= b1 cNIL c~ c= cLAST b1 cNIL * b3 cdest_triple0 b0 cflatten b1 b2 * b3 cflatten cfoldl * part cdest_triple0_step b0 b1 b2 ! ! c==> c/\ c==> c~ c= f0 cNIL c~ c= cLAST f0 cNIL * b1 cdest_triple0 f1 cflatten f0 b0 * b1 cflatten cfoldl * part cdest_triple0_step f1 f0 b0
- (b = c) |- ((P c) = (P c))
T c==> c= f0 f1 c= * f2 f1 * f2 f1
+ |- ((\N. (!r. (!x. ((sizel ((((core_triple_v4 L) N) r) x)) = ((((transform_count L) N) r) x))))) N)
T * / ! ! c= csizel ccore_triple_v4 f0 b0 b1 b2 ctransform_count f0 b0 b1 b2 f1
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ (!n. (!s. (!P. ((((sizel s) <= n) /\ (P s)) ==> (P ((take n) s)))))) |- ((\s. (!P. ((((sizel s) <= n) /\ (P s)) ==> (P ((take n) s))))) s)
T c==> ! ! ! c==> c/\ c<= csizel b1 b0 * b2 b1 * b2 ctake b0 b1 * / ! c==> c/\ c<= csizel b0 f0 * b1 b0 * b1 ctake f0 b0 f1
+ |- (((((dest_triple0 f) NIL) ((((core_triple_v4 L) N) r) x)) = (((dest_triple0 f) (flatten NIL)) ((take k) ((((core_triple_v4 L) N) r) x)))) = (((~ (NIL = NIL)) ==> (~ ((LAST NIL) = NIL))) /\ ((((dest_triple0 f) NIL) ((((core_triple_v4 L) N) r) x)) = (((dest_triple0 f) (flatten NIL)) ((take k) ((((core_triple_v4 L) N) r) x))))))
T c= c= cdest_triple0 f0 cNIL ccore_triple_v4 f1 f2 f3 f4 cdest_triple0 f0 cflatten cNIL ctake f5 ccore_triple_v4 f1 f2 f3 f4 c/\ c==> c~ c= cNIL cNIL c~ c= cLAST cNIL cNIL c= cdest_triple0 f0 cNIL ccore_triple_v4 f1 f2 f3 f4 cdest_triple0 f0 cflatten cNIL ctake f5 ccore_triple_v4 f1 f2 f3 f4
+ |- (((!x. (!y. ((x = y) = (y = x)))) ==> ((\x. (!y. ((x = y) = (y = x)))) x)) = ((\x. (!y. ((x = y) = (y = x)))) x))
T c= c==> ! ! c= c= b0 b1 c= b1 b0 * / ! c= c= b0 b1 c= b1 b0 f0 * / ! c= c= b0 b1 c= b1 b0 f0
+ |- (((!f. (!s. (((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) ==> ((flatten (((foldl (dest_triple0_step f)) s) uvns)) = (((dest_triple0 f) (flatten s)) uvns))))) ==> ((\f. (!s. (((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) ==> ((flatten (((foldl (dest_triple0_step f)) s) uvns)) = (((dest_triple0 f) (flatten s)) uvns))))) f)) = ((\f. (!s. (((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) ==> ((flatten (((foldl (dest_triple0_step f)) s) uvns)) = (((dest_triple0 f) (flatten s)) uvns))))) f))
T c= c==> ! ! c==> c==> c~ c= b1 cNIL c~ c= cLAST b1 cNIL c= cflatten cfoldl * part cdest_triple0_step b0 b1 f0 cdest_triple0 b0 cflatten b1 f0 * / ! c==> c==> c~ c= b1 cNIL c~ c= cLAST b1 cNIL c= cflatten cfoldl * part cdest_triple0_step b0 b1 f0 cdest_triple0 b0 cflatten b1 f0 f1 * / ! c==> c==> c~ c= b1 cNIL c~ c= cLAST b1 cNIL c= cflatten cfoldl * part cdest_triple0_step b0 b1 f0 cdest_triple0 b0 cflatten b1 f0 f1
+ |- (((!s. (!uvns. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns)))))) ==> ((\s. (!uvns. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns)))))) s)) = ((\s. (!uvns. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns)))))) s))
T c= c==> ! ! c==> c/\ c==> c~ c= b0 cNIL c~ c= cLAST b0 cNIL * f0 cdest_triple0 f1 cflatten b0 b1 * f0 cflatten cfoldl * part cdest_triple0_step f1 b0 b1 * / ! c==> c/\ c==> c~ c= b0 cNIL c~ c= cLAST b0 cNIL * f0 cdest_triple0 f1 cflatten b0 b1 * f0 cflatten cfoldl * part cdest_triple0_step f1 b0 b1 f2 * / ! c==> c/\ c==> c~ c= b0 cNIL c~ c= cLAST b0 cNIL * f0 cdest_triple0 f1 cflatten b0 b1 * f0 cflatten cfoldl * part cdest_triple0_step f1 b0 b1 f2
- ((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) |- (((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ ((flatten (((foldl (dest_triple0_step f)) s) uvns)) = (((dest_triple0 f) (flatten s)) uvns)))
T c==> c==> c~ c= f0 cNIL c~ c= cLAST f0 cNIL c/\ c==> c~ c= f0 cNIL c~ c= cLAST f0 cNIL c= cflatten cfoldl * part cdest_triple0_step f1 f0 f2 cdest_triple0 f1 cflatten f0 f2
+ (!f. (!s. (!uvns. (!P. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns)))))))) |- ((\s. (!uvns. (!P. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns))))))) s)
T c==> ! ! ! ! c==> c/\ c==> c~ c= b1 cNIL c~ c= cLAST b1 cNIL * b3 cdest_triple0 b0 cflatten b1 b2 * b3 cflatten cfoldl * part cdest_triple0_step b0 b1 b2 * / ! ! c==> c/\ c==> c~ c= b0 cNIL c~ c= cLAST b0 cNIL * b2 cdest_triple0 f0 cflatten b0 b1 * b2 cflatten cfoldl * part cdest_triple0_step f0 b0 b1 f1
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ |- (((!y. ((x = y) = (y = x))) ==> ((\y. ((x = y) = (y = x))) y)) = ((\y. ((x = y) = (y = x))) y))
T c= c==> ! c= c= f0 b0 c= b0 f0 * / c= c= f0 b0 c= b0 f0 f1 * / c= c= f0 b0 c= b0 f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))) = (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c= c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ |- ((\f0. (!L. (!N. (!r. (!x. (!i. (((((((batch0 f0) L) N) r) x) i) = (flatten (((foldl (dest_triple0_step f0)) NIL) ((take i) ((((core_triple_v4 L) N) r) x))))))))))) f0)
T * / ! ! ! ! ! c= cbatch0 b0 b1 b2 b3 b4 b5 cflatten cfoldl * part cdest_triple0_step b0 cNIL ctake b5 ccore_triple_v4 b1 b2 b3 b4 f0
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _11069360)) /\ ((real_le ((real_add (real_of_int _11069360)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11069360))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _11069360)) /\ ((real_le ((real_add (real_of_int _11069360)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11069360))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF
+ (!n. (!s. (!P. ((((sizel s) <= n) /\ (P s)) ==> (P ((take n) s)))))) |- ((\P. ((((sizel s) <= n) /\ (P s)) ==> (P ((take n) s)))) P)
T c==> ! ! ! c==> c/\ c<= csizel b1 b0 * b2 b1 * b2 ctake b0 b1 * / c==> c/\ c<= csizel f0 f1 * b0 f0 * b0 ctake f1 f0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!f. (!s. (!uvns. (!P. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns)))))))) |- ((!f. (!s. (!uvns. (!P. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns)))))))) /\ (!P. (!f. (!s. (!uvns. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns)))))))))
T c==> ! ! ! ! c==> c/\ c==> c~ c= b1 cNIL c~ c= cLAST b1 cNIL * b3 cdest_triple0 b0 cflatten b1 b2 * b3 cflatten cfoldl * part cdest_triple0_step b0 b1 b2 c/\ ! ! ! ! c==> c/\ c==> c~ c= b1 cNIL c~ c= cLAST b1 cNIL * b3 cdest_triple0 b0 cflatten b1 b2 * b3 cflatten cfoldl * part cdest_triple0_step b0 b1 b2 ! ! ! ! c==> c/\ c==> c~ c= b2 cNIL c~ c= cLAST b2 cNIL * b0 cdest_triple0 b1 cflatten b2 b3 * b0 cflatten cfoldl * part cdest_triple0_step b1 b2 b3
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _11069360)) /\ ((real_le ((real_add (real_of_int _11069360)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11069360))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
+ |- (!b. (!c. ((b = c) ==> (!P. ((P c) ==> (P b))))))
T c==> c= f0 f1 ! c==> * b0 f1 * b0 f0
+ (~ (P b)), (P c), (b = c) |- ((~ (P b)) /\ F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ * f0 f1 cF
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))
T c==> c==> f0 c= f1 f2 ! c==> c/\ f0 * b0 f2 * b0 f1
+ (b = c) |- ((b = c) /\ (!P. ((P c) ==> (P b))))
T c==> c= f0 f1 c/\ c= f0 f1 ! c==> * b0 f1 * b0 f0
+ (!f. (!s. (!uvns. (!P. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns)))))))) |- ((\f. (!s. (!uvns. (!P. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns)))))))) f)
T c==> ! ! ! ! c==> c/\ c==> c~ c= b1 cNIL c~ c= cLAST b1 cNIL * b3 cdest_triple0 b0 cflatten b1 b2 * b3 cflatten cfoldl * part cdest_triple0_step b0 b1 b2 * / ! ! ! c==> c/\ c==> c~ c= b1 cNIL c~ c= cLAST b1 cNIL * b3 cdest_triple0 b0 cflatten b1 b2 * b3 cflatten cfoldl * part cdest_triple0_step b0 b1 b2 f0
+ |- ((!x. (!k. ((((((transform_count L) N) r) x) = k) ==> ((((dest_triple0 f) NIL) ((((core_triple_v4 L) N) r) x)) = (flatten (((foldl (dest_triple0_step f)) NIL) ((take k) ((((core_triple_v4 L) N) r) x)))))))) = T)
T c= ! ! c==> c= ctransform_count f0 f1 f2 b0 b1 c= cdest_triple0 f3 cNIL ccore_triple_v4 f0 f1 f2 b0 cflatten cfoldl * part cdest_triple0_step f3 cNIL ctake b1 ccore_triple_v4 f0 f1 f2 b0 cT
+ |- ((x = y) = (y = x))
T c= c= f0 f1 c= f1 f0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((\r. (!x. ((sizel ((((core_triple_v4 L) N) r) x)) = ((((transform_count L) N) r) x)))) r)
T * / ! c= csizel ccore_triple_v4 f0 f1 b0 b1 ctransform_count f0 f1 b0 b1 f2
+ |- (((!N. (!r. (!x. (!i. (((((((batch0 f0) L) N) r) x) i) = (flatten (((foldl (dest_triple0_step f0)) NIL) ((take i) ((((core_triple_v4 L) N) r) x))))))))) ==> ((\N. (!r. (!x. (!i. (((((((batch0 f0) L) N) r) x) i) = (flatten (((foldl (dest_triple0_step f0)) NIL) ((take i) ((((core_triple_v4 L) N) r) x))))))))) N)) = ((\N. (!r. (!x. (!i. (((((((batch0 f0) L) N) r) x) i) = (flatten (((foldl (dest_triple0_step f0)) NIL) ((take i) ((((core_triple_v4 L) N) r) x))))))))) N))
T c= c==> ! ! ! ! c= cbatch0 f0 f1 b0 b1 b2 b3 cflatten cfoldl * part cdest_triple0_step f0 cNIL ctake b3 ccore_triple_v4 f1 b0 b1 b2 * / ! ! ! c= cbatch0 f0 f1 b0 b1 b2 b3 cflatten cfoldl * part cdest_triple0_step f0 cNIL ctake b3 ccore_triple_v4 f1 b0 b1 b2 f2 * / ! ! ! c= cbatch0 f0 f1 b0 b1 b2 b3 cflatten cfoldl * part cdest_triple0_step f0 cNIL ctake b3 ccore_triple_v4 f1 b0 b1 b2 f2
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ |- ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns))))
T c==> c/\ c==> c~ c= f0 cNIL c~ c= cLAST f0 cNIL * f1 cdest_triple0 f2 cflatten f0 f3 * f1 cflatten cfoldl * part cdest_triple0_step f2 f0 f3
+ (P c), (b = c) |- ((~ (P b)) ==> F)
T c==> * f0 f1 c==> c= f2 f1 c==> c~ * f0 f2 cF
+ (~ (P b)), (b = c) |- (~ (P c))
T c==> c~ * f0 f1 c==> c= f1 f2 c~ * f0 f2
+ ((LAST s) = NIL) |- (NIL = (LAST s))
T c==> c= cLAST f0 cNIL c= cNIL cLAST f0
+ |- ((\f. (!s. (!uvns. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns))))))) f)
T * / ! ! c==> c/\ c==> c~ c= b1 cNIL c~ c= cLAST b1 cNIL * f0 cdest_triple0 b0 cflatten b1 b2 * f0 cflatten cfoldl * part cdest_triple0_step b0 b1 b2 f1
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) |- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) /\ F)
T c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 c/\ c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (b = c) |- (F = F)
T c==> c= f0 f1 c= cF cF
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((((dest_triple0 f) NIL) ((((core_triple_v4 L) N) r) x)) = (((dest_triple0 f) (flatten NIL)) ((take k) ((((core_triple_v4 L) N) r) x)))) = ((\x. ((\v. ((((dest_triple0 f) NIL) ((((core_triple_v4 L) N) r) x)) = (((dest_triple0 f) (flatten NIL)) v))) x)) ((take k) ((((core_triple_v4 L) N) r) x))))
T c= c= cdest_triple0 f0 cNIL ccore_triple_v4 f1 f2 f3 f4 cdest_triple0 f0 cflatten cNIL ctake f5 ccore_triple_v4 f1 f2 f3 f4 * / * / c= cdest_triple0 f0 cNIL ccore_triple_v4 f1 f2 f3 f4 cdest_triple0 f0 cflatten cNIL b1 b0 ctake f5 ccore_triple_v4 f1 f2 f3 f4
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- (((((dest_triple0 f) NIL) ((((core_triple_v4 L) N) r) x)) = (flatten (((foldl (dest_triple0_step f)) NIL) ((take k) ((((core_triple_v4 L) N) r) x))))) = ((\x. ((\v. ((((dest_triple0 f) NIL) ((((core_triple_v4 L) N) r) x)) = v)) x)) (flatten (((foldl (dest_triple0_step f)) NIL) ((take k) ((((core_triple_v4 L) N) r) x))))))
T c= c= cdest_triple0 f0 cNIL ccore_triple_v4 f1 f2 f3 f4 cflatten cfoldl * part cdest_triple0_step f0 cNIL ctake f5 ccore_triple_v4 f1 f2 f3 f4 * / * / c= cdest_triple0 f0 cNIL ccore_triple_v4 f1 f2 f3 f4 b1 b0 cflatten cfoldl * part cdest_triple0_step f0 cNIL ctake f5 ccore_triple_v4 f1 f2 f3 f4
- (((sizel s) <= n) /\ (P s)) |- ((!n. (!s. (!P. ((((sizel s) <= n) /\ (P s)) ==> (P ((take n) s)))))) ==> (P ((take n) s)))
T c==> c/\ c<= csizel f0 f1 * f2 f0 c==> ! ! ! c==> c/\ c<= csizel b1 b0 * b2 b1 * b2 ctake b0 b1 * f2 ctake f1 f0
- ((sizel s) <= n) |- (((sizel s) <= n) /\ (((take n) s) = s))
T c==> c<= csizel f0 f1 c/\ c<= csizel f0 f1 c= ctake f1 f0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (P c)), (P c) |- ((~ (P c)) /\ (P c))
T c==> c~ * f0 f1 c==> * f0 f1 c/\ c~ * f0 f1 * f0 f1
- (!n. (!s. (!P. ((((sizel s) <= n) /\ (P s)) ==> (P ((take n) s)))))), (((sizel s) <= n) /\ (P s)) |- ((!n. (!s. (!P. ((((sizel s) <= n) /\ (P s)) ==> (P ((take n) s)))))) /\ (P ((take n) s)))
T c==> ! ! ! c==> c/\ c<= csizel b1 b0 * b2 b1 * b2 ctake b0 b1 c==> c/\ c<= csizel f0 f1 * f2 f0 c/\ ! ! ! c==> c/\ c<= csizel b1 b0 * b2 b1 * b2 ctake b0 b1 * f2 ctake f1 f0
- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!f. (!s. (!uvns. (!P. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns)))))))), (((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) |- ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) /\ (P (flatten (((foldl (dest_triple0_step f)) s) uvns))))
T c==> ! ! ! ! c==> c/\ c==> c~ c= b1 cNIL c~ c= cLAST b1 cNIL * b3 cdest_triple0 b0 cflatten b1 b2 * b3 cflatten cfoldl * part cdest_triple0_step b0 b1 b2 c==> c/\ c==> c~ c= f0 cNIL c~ c= cLAST f0 cNIL * f1 cdest_triple0 f2 cflatten f0 f3 c/\ c/\ c==> c~ c= f0 cNIL c~ c= cLAST f0 cNIL * f1 cdest_triple0 f2 cflatten f0 f3 * f1 cflatten cfoldl * part cdest_triple0_step f2 f0 f3
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) |- ((!f. (!s. (!uvns. (!P. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns)))))))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns))))
T c==> c/\ c==> c~ c= f0 cNIL c~ c= cLAST f0 cNIL * f1 cdest_triple0 f2 cflatten f0 f3 c==> ! ! ! ! c==> c/\ c==> c~ c= b1 cNIL c~ c= cLAST b1 cNIL * b3 cdest_triple0 b0 cflatten b1 b2 * b3 cflatten cfoldl * part cdest_triple0_step b0 b1 b2 * f1 cflatten cfoldl * part cdest_triple0_step f2 f0 f3
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (P c) |- ((~ (P c)) ==> (P c))
T c==> * f0 f1 c==> c~ * f0 f1 * f0 f1
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) = ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c= c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (!n. (!s. (!P. ((((sizel s) <= n) /\ (P s)) ==> (P ((take n) s)))))), (((sizel s) <= n) /\ (P s)) |- ((((sizel s) <= n) /\ (P s)) /\ (P ((take n) s)))
T c==> ! ! ! c==> c/\ c<= csizel b1 b0 * b2 b1 * b2 ctake b0 b1 c==> c/\ c<= csizel f0 f1 * f2 f0 c/\ c/\ c<= csizel f0 f1 * f2 f0 * f2 ctake f1 f0
- (!f. (!s. (!uvns. (!P. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns)))))))), (((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) |- ((!f. (!s. (!uvns. (!P. ((((~ (s = NIL)) ==> (~ ((LAST s) = NIL))) /\ (P (((dest_triple0 f) (flatten s)) uvns))) ==> (P (flatten (((foldl (dest_triple0_step f)) s) uvns)))))))) /\ (P (flatten (((foldl (dest_triple0_step f)) s) uvns))))
T c==> ! ! ! ! c==> c/\ c==> c~ c= b1 cNIL c~ c= cLAST b1 cNIL * b3 cdest_triple0 b0 cflatten b1 b2 * b3 cflatten cfoldl * part cdest_triple0_step b0 b1 b2 c==> c/\ c==> c~ c= f0 cNIL c~ c= cLAST f0 cNIL * f1 cdest_triple0 f2 cflatten f0 f3 c/\ ! ! ! ! c==> c/\ c==> c~ c= b1 cNIL c~ c= cLAST b1 cNIL * b3 cdest_triple0 b0 cflatten b1 b2 * b3 cflatten cfoldl * part cdest_triple0_step b0 b1 b2 * f1 cflatten cfoldl * part cdest_triple0_step f2 f0 f3
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (P b)), (P c), (b = c) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c==> c~ cF cF
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
