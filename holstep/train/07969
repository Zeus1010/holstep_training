N Aq1.f_list_power_ytrans_not_mem_flatten_v0
C |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (!j. ((j < ((((l'p L) N) r) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) (NUMERAL _0)))) (flatten N))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 ! c==> c< b0 cl'p f0 f1 f2 f3 c~ cMEM cPOWER * part cf_list f0 cSUC b0 cytrans f0 f1 f2 f3 cNUMERAL c_0 cflatten f1
D TRUTH
A |- T
T cT
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D Fan.POWER
A |- ((!f. (((POWER f) (NUMERAL _0)) = I)) /\ (!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))))
T c/\ ! c= * * part cPOWER b0 cNUMERAL c_0 part cI ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Tame_defs2.l_p
A |- (!L. (!N. (!r. (!x. (((((l'p L) N) r) x) = (min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))))))))
T c= cl'p f0 f1 f2 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 cl'y f0 f2 f3 cflatten f1 b1
D Tame_defs2.rtrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= crtrans f0 f1 f2 f3 f4 cSND cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.ytrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))))
T c= cytrans f0 f1 f2 f3 f4 cl'y f0 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Pwssrat.minnum_not
A |- ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) (P m)) m))))) = n) /\ (i < n)) ==> (~ (P i)))
T c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 c< f2 f1 c~ * f0 f2
+ (j < ((((l'p L) N) r) x)) |- (((((l'y L) r) x) = y) ==> (~ ((MEM (((POWER (f_list L)) j) ((f_list L) (((l'y L) r) x)))) (flatten N))))
T c==> c< f0 cl'p f1 f2 f3 f4 c==> c= cl'y f1 f3 f4 f5 c~ cMEM cPOWER * part cf_list f1 f0 cf_list f1 cl'y f1 f3 f4 cflatten f2
+ |- ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)
T * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
- |- (((!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) ==> ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i)) = ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i))
T c= c==> ! c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
+ |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (!j. ((j < ((((l'p L) N) r) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) (NUMERAL _0)))) (flatten N)))))) = T)
T c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 ! c==> c< b0 cl'p f0 f1 f2 f3 c~ cMEM cPOWER * part cf_list f0 cSUC b0 cytrans f0 f1 f2 f3 cNUMERAL c_0 cflatten f1 cT
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))), (j < ((((l'p L) N) r) x)) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))) /\ (~ ((MEM (((POWER (f_list L)) j) ((f_list L) (((l'y L) r) x)))) (flatten N))))
T c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 cs_flag_list f0 f1 f2 f3 c==> c< f4 cl'p f0 f1 f2 f3 c/\ c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 cs_flag_list f0 f1 f2 f3 c~ cMEM cPOWER * part cf_list f0 f4 cf_list f0 cl'y f0 f2 f3 cflatten f1
- |- ((?y. ((((l'y L) r) x) = y)) ==> (?y. ((((l'y L) r) x) = y)))
T c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
- ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ |- ((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (!j. ((j < ((((l'p L) N) r) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) (NUMERAL _0)))) (flatten N))))))))) = T)
T c= ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 ! c==> c< b3 cl'p f0 b0 b1 b2 c~ cMEM cPOWER * part cf_list f0 cSUC b3 cytrans f0 b0 b1 b2 cNUMERAL c_0 cflatten b0 cT
- (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
+ ((\y. ((((l'y L) r) x) = y)) y) |- ((((((l'y L) r) x) = y) ==> (~ ((MEM (((POWER (f_list L)) j) ((f_list L) (((l'y L) r) x)))) (flatten N)))) = (~ ((MEM (((POWER (f_list L)) j) ((f_list L) (((l'y L) r) x)))) (flatten N))))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c= c==> c= cl'y f0 f1 f2 f3 c~ cMEM cPOWER * part cf_list f0 f4 cf_list f0 cl'y f0 f1 f2 cflatten f5 c~ cMEM cPOWER * part cf_list f0 f4 cf_list f0 cl'y f0 f1 f2 cflatten f5
+ |- (((!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) ==> ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r)) = ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r))
T c= c==> ! ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2
+ ((((l'y L) r) x) = y), (j < ((((l'p L) N) r) x)) |- (((((l'y L) r) x) = y) /\ (~ ((MEM (((POWER (f_list L)) j) ((f_list L) (((l'y L) r) x)))) (flatten N))))
T c==> c= cl'y f0 f1 f2 f3 c==> c< f4 cl'p f0 f5 f1 f2 c/\ c= cl'y f0 f1 f2 f3 c~ cMEM cPOWER * part cf_list f0 f4 cf_list f0 cl'y f0 f1 f2 cflatten f5
- |- ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)
T * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
+ |- ((\P. (!i. ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) (P m)) m))))) = ((((l'p L) N) r) x)) /\ (i < ((((l'p L) N) r) x))) ==> (~ (P i))))) (\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))))
T * / ! c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 cl'p f0 f1 f2 f3 c< b1 cl'p f0 f1 f2 f3 c~ * b0 b1 / cMEM cPOWER * part cf_list f0 cSUC b0 cl'y f0 f2 f3 cflatten f1
- |- ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- |- (((!x'. (((\y. ((((l'y L) r) x) = y)) x') ==> (?y. ((((l'y L) r) x) = y)))) ==> ((?y. ((((l'y L) r) x) = y)) ==> (?y. ((((l'y L) r) x) = y)))) = ((?y. ((((l'y L) r) x) = y)) ==> (?y. ((((l'y L) r) x) = y))))
T c= c==> ! c==> * / c= cl'y f0 f1 f2 b1 b0 c? / c= cl'y f0 f1 f2 b1 c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0 c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
+ |- (((!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) ==> ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)) = ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f))
T c= c==> ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- (?y. ((((l'y L) r) x) = y))
T c? / c= cl'y f0 f1 f2 b0
- |- ((!j. t) = t)
T c= ! f0 f0
+ |- ((\x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))) x)
T * / ! c= crtrans f0 f1 f2 b0 b1 cSND cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
+ |- (((!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) ==> ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N)) = ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N))
T c= c==> ! ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ ((((l'y L) r) x) = y) |- (T = ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((MEM (((POWER (f_list L)) (SUC m)) y)) (flatten N))) m))))) = ((((l'p L) N) r) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) y)) (flatten N)))) ==> (~ ((MEM (((POWER (f_list L)) j) ((f_list L) y))) (flatten N)))))
T c==> c= cl'y f0 f1 f2 f3 c= cT c==> c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 f3 cflatten f4 b1 cl'p f0 f4 f1 f2 c~ cMEM cPOWER * part cf_list f0 cSUC f5 f3 cflatten f4 c~ cMEM cPOWER * part cf_list f0 f5 cf_list f0 f3 cflatten f4
- |- ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L)
T * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- (((!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) ==> ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i)) = ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i))
T c= c==> ! c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4
- (~ ((final_list L) r)), ((((marked_list L) N) r) x) |- ((j < ((((l'p L) N) r) x)) ==> (~ ((MEM (((POWER (f_list L)) j) ((f_list L) (((l'y L) r) x)))) (flatten N))))
T c==> c~ cfinal_list f0 f1 c==> cmarked_list f0 f2 f1 f3 c==> c< f4 cl'p f0 f2 f1 f3 c~ cMEM cPOWER * part cf_list f0 f4 cf_list f0 cl'y f0 f1 f3 cflatten f2
- (~ ((final_list L) r)), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ ((j < ((((l'p L) N) r) x)) ==> (~ ((MEM (((POWER (f_list L)) j) ((f_list L) (((l'y L) r) x)))) (flatten N)))))
T c==> c~ cfinal_list f0 f1 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 c==> c< f4 cl'p f0 f2 f1 f3 c~ cMEM cPOWER * part cf_list f0 f4 cf_list f0 cl'y f0 f1 f3 cflatten f2
+ |- ((\r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))) r)
T * / ! ! c= cytrans f0 f1 b0 b1 b2 cl'y f0 crtrans f0 f1 b0 b1 b2 b1 f2
- ((((l'y L) r) x) = y), (((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((MEM (((POWER (f_list L)) (SUC m)) y)) (flatten N))) m))))) = ((((l'p L) N) r) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) y)) (flatten N)))) |- ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((MEM (((POWER (f_list L)) (SUC m)) y)) (flatten N))) m))))) = ((((l'p L) N) r) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) y)) (flatten N)))) /\ (~ ((MEM (((POWER (f_list L)) j) ((f_list L) y))) (flatten N))))
T c==> c= cl'y f0 f1 f2 f3 c==> c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 f3 cflatten f4 b1 cl'p f0 f4 f1 f2 c~ cMEM cPOWER * part cf_list f0 cSUC f5 f3 cflatten f4 c/\ c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 f3 cflatten f4 b1 cl'p f0 f4 f1 f2 c~ cMEM cPOWER * part cf_list f0 cSUC f5 f3 cflatten f4 c~ cMEM cPOWER * part cf_list f0 f5 cf_list f0 f3 cflatten f4
- |- ((?p. t) = t)
T c= c? / f0 f0
- (((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((MEM (((POWER (f_list L)) (SUC m)) y)) (flatten N))) m))))) = ((((l'p L) N) r) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) y)) (flatten N)))) |- ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((MEM (((POWER (f_list L)) (SUC m)) y)) (flatten N))) m))))) = ((((l'p L) N) r) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) y)) (flatten N)))) = T)
T c==> c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 f1 cflatten f2 b1 cl'p f0 f2 f3 f4 c~ cMEM cPOWER * part cf_list f0 cSUC f5 f1 cflatten f2 c= c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 f1 cflatten f2 b1 cl'p f0 f2 f3 f4 c~ cMEM cPOWER * part cf_list f0 cSUC f5 f1 cflatten f2 cT
- |- (((!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) ==> ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x)) = ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x))
T c= c==> ! ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ ((((l'y L) r) x) = y), (j < ((((l'p L) N) r) x)) |- (((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) m)) m))))) = ((((l'p L) N) r) x)) /\ (j < ((((l'p L) N) r) x))) ==> (~ ((\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) j))) ==> (~ ((MEM (((POWER (f_list L)) j) ((f_list L) y))) (flatten N))))
T c==> c= cl'y f0 f1 f2 f3 c==> c< f4 cl'p f0 f5 f1 f2 c==> c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b0 * / cMEM cPOWER * part cf_list f0 cSUC b2 cl'y f0 f1 f2 cflatten f5 b1 b1 cl'p f0 f5 f1 f2 c< f4 cl'p f0 f5 f1 f2 c~ * / cMEM cPOWER * part cf_list f0 cSUC b0 cl'y f0 f1 f2 cflatten f5 f4 c~ cMEM cPOWER * part cf_list f0 f4 cf_list f0 f3 cflatten f5
- ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x)) |- (((((l'p L) N) r) x) = (min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))))
T c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 cl'y f0 f1 f2 cflatten f3 b1 cl'p f0 f3 f1 f2 c= cl'p f0 f3 f1 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 cl'y f0 f1 f2 cflatten f3 b1
- (((((l'p L) N) r) x) = (min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p)))))) |- ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x))
T c==> c= cl'p f0 f1 f2 f3 cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 cl'y f0 f2 f3 cflatten f1 b1 c= cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 cl'y f0 f2 f3 cflatten f1 b1 cl'p f0 f1 f2 f3
+ |- (((!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) ==> ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)) = ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x))
T c= c==> ! c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
- ((normal_list L) N) |- (((normal_list L) N) = T)
T c==> cnormal_list f0 f1 c= cnormal_list f0 f1 cT
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- (((!L. (!N. (!r. (!x. (((((l'p L) N) r) x) = (min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p)))))))))) ==> ((\L. (!N. (!r. (!x. (((((l'p L) N) r) x) = (min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p)))))))))) L)) = ((\L. (!N. (!r. (!x. (((((l'p L) N) r) x) = (min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p)))))))))) L))
T c= c==> ! ! ! ! c= cl'p b0 b1 b2 b3 cmin_num * part cGSPEC / c? / cSETSPEC b4 cMEM cPOWER * part cf_list b0 cSUC b5 cl'y b0 b2 b3 cflatten b1 b5 * / ! ! ! c= cl'p b0 b1 b2 b3 cmin_num * part cGSPEC / c? / cSETSPEC b4 cMEM cPOWER * part cf_list b0 cSUC b5 cl'y b0 b2 b3 cflatten b1 b5 f0 * / ! ! ! c= cl'p b0 b1 b2 b3 cmin_num * part cGSPEC / c? / cSETSPEC b4 cMEM cPOWER * part cf_list b0 cSUC b5 cl'y b0 b2 b3 cflatten b1 b5 f0
+ |- (((?y. ((((l'y L) r) x) = y)) ==> (~ ((MEM (((POWER (f_list L)) j) ((f_list L) (((l'y L) r) x)))) (flatten N)))) = (~ ((MEM (((POWER (f_list L)) j) ((f_list L) (((l'y L) r) x)))) (flatten N))))
T c= c==> c? / c= cl'y f0 f1 f2 b0 c~ cMEM cPOWER * part cf_list f0 f3 cf_list f0 cl'y f0 f1 f2 cflatten f4 c~ cMEM cPOWER * part cf_list f0 f3 cf_list f0 cl'y f0 f1 f2 cflatten f4
- |- (((((l'y L) r) x) = y) = ((\y. ((((l'y L) r) x) = y)) y))
T c= c= cl'y f0 f1 f2 f3 * / c= cl'y f0 f1 f2 b0 f3
+ |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ |- (((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) (P m)) m))))) = n) /\ (i < n)) ==> (~ (P i))) = T)
T c= c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 c< f2 f1 c~ * f0 f2 cT
- |- (!y. (((\y. ((((l'y L) r) x) = y)) y) ==> (?y. ((((l'y L) r) x) = y))))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0
- ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) (NUMERAL _0)))) (flatten N)) |- (((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) (NUMERAL _0)))) (flatten N)) = T)
T c==> cMEM cPOWER * part cf_list f0 cSUC f1 cytrans f0 f2 f3 f4 cNUMERAL c_0 cflatten f2 c= cMEM cPOWER * part cf_list f0 cSUC f1 cytrans f0 f2 f3 f4 cNUMERAL c_0 cflatten f2 cT
+ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) |- (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) /\ (!j. ((j < ((((l'p L) N) r) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) (NUMERAL _0)))) (flatten N))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c/\ c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 ! c==> c< b0 cl'p f0 f1 f2 f3 c~ cMEM cPOWER * part cf_list f0 cSUC b0 cytrans f0 f1 f2 f3 cNUMERAL c_0 cflatten f1
+ (~ ((final_list L) r)), (j < ((((l'p L) N) r) x)), ((((marked_list L) N) r) x) |- ((j < ((((l'p L) N) r) x)) /\ (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) (NUMERAL _0)))) (flatten N))))
T c==> c~ cfinal_list f0 f1 c==> c< f2 cl'p f0 f3 f1 f4 c==> cmarked_list f0 f3 f1 f4 c/\ c< f2 cl'p f0 f3 f1 f4 c~ cMEM cPOWER * part cf_list f0 cSUC f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 cflatten f3
+ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))), ((((marked_list L) N) r) x) |- (!j. ((j < ((((l'p L) N) r) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) (NUMERAL _0)))) (flatten N)))))
T c==> c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c==> cmarked_list f0 f1 f2 f3 ! c==> c< b0 cl'p f0 f1 f2 f3 c~ cMEM cPOWER * part cf_list f0 cSUC b0 cytrans f0 f1 f2 f3 cNUMERAL c_0 cflatten f1
+ |- (((!f. (((POWER f) (NUMERAL _0)) = I)) ==> ((\f. (((POWER f) (NUMERAL _0)) = I)) f)) = ((\f. (((POWER f) (NUMERAL _0)) = I)) f))
T c= c==> ! c= * * part cPOWER b0 cNUMERAL c_0 part cI * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0 * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
+ |- ((\i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))) i)
T * / c= crtrans f0 f1 f2 f3 b0 cSND cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
- |- ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))
T c= cztrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
- ((((l'y L) r) x) = y) |- ((\y. ((((l'y L) r) x) = y)) y)
T c==> c= cl'y f0 f1 f2 f3 * / c= cl'y f0 f1 f2 b0 f3
- (~ ((final_list L) r)), (j < ((((l'p L) N) r) x)), ((((marked_list L) N) r) x) |- ((j < ((((l'p L) N) r) x)) /\ (~ ((MEM (((POWER (f_list L)) j) ((f_list L) (((l'y L) r) x)))) (flatten N))))
T c==> c~ cfinal_list f0 f1 c==> c< f2 cl'p f0 f3 f1 f4 c==> cmarked_list f0 f3 f1 f4 c/\ c< f2 cl'p f0 f3 f1 f4 c~ cMEM cPOWER * part cf_list f0 f2 cf_list f0 cl'y f0 f1 f4 cflatten f3
+ |- (((!r. (!x. (((((l'p L) N) r) x) = (min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p)))))))) ==> ((\r. (!x. (((((l'p L) N) r) x) = (min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p)))))))) r)) = ((\r. (!x. (((((l'p L) N) r) x) = (min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p)))))))) r))
T c= c==> ! ! c= cl'p f0 f1 b0 b1 cmin_num * part cGSPEC / c? / cSETSPEC b2 cMEM cPOWER * part cf_list f0 cSUC b3 cl'y f0 b0 b1 cflatten f1 b3 * / ! c= cl'p f0 f1 b0 b1 cmin_num * part cGSPEC / c? / cSETSPEC b2 cMEM cPOWER * part cf_list f0 cSUC b3 cl'y f0 b0 b1 cflatten f1 b3 f2 * / ! c= cl'p f0 f1 b0 b1 cmin_num * part cGSPEC / c? / cSETSPEC b2 cMEM cPOWER * part cf_list f0 cSUC b3 cl'y f0 b0 b1 cflatten f1 b3 f2
- |- ((\N. (!r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x))))) N)
T * / ! ! c= cmin_num * part cGSPEC / c? / cSETSPEC b3 cMEM cPOWER * part cf_list f0 cSUC b4 cl'y f0 b1 b2 cflatten b0 b4 cl'p f0 b0 b1 b2 f1
+ |- (((!P. (!i. ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) (P m)) m))))) = ((((l'p L) N) r) x)) /\ (i < ((((l'p L) N) r) x))) ==> (~ (P i))))) ==> ((\P. (!i. ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) (P m)) m))))) = ((((l'p L) N) r) x)) /\ (i < ((((l'p L) N) r) x))) ==> (~ (P i))))) (\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))))) = ((\P. (!i. ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) (P m)) m))))) = ((((l'p L) N) r) x)) /\ (i < ((((l'p L) N) r) x))) ==> (~ (P i))))) (\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N)))))
T c= c==> ! ! c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 cl'p f0 f1 f2 f3 c< b1 cl'p f0 f1 f2 f3 c~ * b0 b1 * / ! c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 cl'p f0 f1 f2 f3 c< b1 cl'p f0 f1 f2 f3 c~ * b0 b1 / cMEM cPOWER * part cf_list f0 cSUC b0 cl'y f0 f2 f3 cflatten f1 * / ! c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 cl'p f0 f1 f2 f3 c< b1 cl'p f0 f1 f2 f3 c~ * b0 b1 / cMEM cPOWER * part cf_list f0 cSUC b0 cl'y f0 f2 f3 cflatten f1
+ |- (((!L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))))) ==> ((\L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))))) L)) = ((\L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))))) L))
T c= c==> ! ! ! ! ! c= crtrans b0 b1 b2 b3 b4 cSND cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 * / ! ! ! ! c= crtrans b0 b1 b2 b3 b4 cSND cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0 * / ! ! ! ! c= crtrans b0 b1 b2 b3 b4 cSND cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
+ |- ((\N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cytrans f0 b0 b1 b2 b3 cl'y f0 crtrans f0 b0 b1 b2 b3 b2 f1
- |- (((((l'y L) r) x) = y) ==> (?y. ((((l'y L) r) x) = y)))
T c==> c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0
+ |- (((((l'y L) r) x) = (((l'y L) r) x)) = ((\y. ((((l'y L) r) x) = y)) (((l'y L) r) x)))
T c= c= cl'y f0 f1 f2 cl'y f0 f1 f2 * / c= cl'y f0 f1 f2 b0 cl'y f0 f1 f2
- |- (((!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) ==> ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)) = ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x))
T c= c==> ! ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3 * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
+ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))) |- (!j. ((j < ((((l'p L) N) r) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) (NUMERAL _0)))) (flatten N)))))
T c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 ! c==> c< b0 cl'p f0 f1 f2 f3 c~ cMEM cPOWER * part cf_list f0 cSUC b0 cytrans f0 f1 f2 f3 cNUMERAL c_0 cflatten f1
- |- ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x))
T c= cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 cl'y f0 f1 f2 cflatten f3 b1 cl'p f0 f3 f1 f2
+ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))) |- (!j. ((j < ((((l'p L) N) r) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) (NUMERAL _0)))) (flatten N)))))
T c==> c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 ! c==> c< b0 cl'p f0 f1 f2 f3 c~ cMEM cPOWER * part cf_list f0 cSUC b0 cytrans f0 f1 f2 f3 cNUMERAL c_0 cflatten f1
- |- (((!L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) ==> ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L)) = ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L))
T c= c==> ! ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0 * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
- ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) ==> ((j < ((((l'p L) N) r) x)) ==> (~ ((MEM (((POWER (f_list L)) j) ((f_list L) (((l'y L) r) x)))) (flatten N)))))
T c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c< f4 cl'p f0 f1 f2 f3 c~ cMEM cPOWER * part cf_list f0 f4 cf_list f0 cl'y f0 f2 f3 cflatten f1
- (good_list_nodes L) |- ((good_list_nodes L) = T)
T c==> cgood_list_nodes f0 c= cgood_list_nodes f0 cT
+ (j < ((((l'p L) N) r) x)) |- (~ ((MEM (((POWER (f_list L)) j) ((f_list L) (((l'y L) r) x)))) (flatten N)))
T c==> c< f0 cl'p f1 f2 f3 f4 c~ cMEM cPOWER * part cf_list f1 f0 cf_list f1 cl'y f1 f3 f4 cflatten f2
+ |- ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i)
T * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ ((((l'y L) r) x) = y), (j < ((((l'p L) N) r) x)) |- (~ ((MEM (((POWER (f_list L)) j) ((f_list L) y))) (flatten N)))
T c==> c= cl'y f0 f1 f2 f3 c==> c< f4 cl'p f0 f5 f1 f2 c~ cMEM cPOWER * part cf_list f0 f4 cf_list f0 f3 cflatten f5
- |- ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x)
T * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ |- ((\x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))) x)
T * / ! c= cytrans f0 f1 f2 b0 b1 cl'y f0 crtrans f0 f1 f2 b0 b1 b0 f3
+ |- ((\n. (!P. (!i. ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) (P m)) m))))) = n) /\ (i < n)) ==> (~ (P i)))))) ((((l'p L) N) r) x))
T * / ! ! c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b3 * b1 b4 b4 b0 c< b2 b0 c~ * b1 b2 cl'p f0 f1 f2 f3
+ ((((l'y L) r) x) = y), (j < ((((l'p L) N) r) x)) |- (((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((MEM (((POWER (f_list L)) (SUC m)) y)) (flatten N))) m))))) = ((((l'p L) N) r) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) y)) (flatten N)))) ==> (~ ((MEM (((POWER (f_list L)) j) ((f_list L) y))) (flatten N)))) = (((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) m)) m))))) = ((((l'p L) N) r) x)) /\ (j < ((((l'p L) N) r) x))) ==> (~ ((\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) j))) ==> (~ ((MEM (((POWER (f_list L)) j) ((f_list L) y))) (flatten N)))))
T c==> c= cl'y f0 f1 f2 f3 c==> c< f4 cl'p f0 f5 f1 f2 c= c==> c==> c= cmin_num * part cGSPEC / c? / cSETSPEC b0 cMEM cPOWER * part cf_list f0 cSUC b1 f3 cflatten f5 b1 cl'p f0 f5 f1 f2 c~ cMEM cPOWER * part cf_list f0 cSUC f4 f3 cflatten f5 c~ cMEM cPOWER * part cf_list f0 f4 cf_list f0 f3 cflatten f5 c==> c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b0 * / cMEM cPOWER * part cf_list f0 cSUC b2 cl'y f0 f1 f2 cflatten f5 b1 b1 cl'p f0 f5 f1 f2 c< f4 cl'p f0 f5 f1 f2 c~ * / cMEM cPOWER * part cf_list f0 cSUC b0 cl'y f0 f1 f2 cflatten f5 f4 c~ cMEM cPOWER * part cf_list f0 f4 cf_list f0 f3 cflatten f5
- |- (((!L. (!N. (!r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x)))))) ==> ((\L. (!N. (!r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x)))))) L)) = ((\L. (!N. (!r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x)))))) L))
T c= c==> ! ! ! ! c= cmin_num * part cGSPEC / c? / cSETSPEC b4 cMEM cPOWER * part cf_list b0 cSUC b5 cl'y b0 b2 b3 cflatten b1 b5 cl'p b0 b1 b2 b3 * / ! ! ! c= cmin_num * part cGSPEC / c? / cSETSPEC b4 cMEM cPOWER * part cf_list b0 cSUC b5 cl'y b0 b2 b3 cflatten b1 b5 cl'p b0 b1 b2 b3 f0 * / ! ! ! c= cmin_num * part cGSPEC / c? / cSETSPEC b4 cMEM cPOWER * part cf_list b0 cSUC b5 cl'y b0 b2 b3 cflatten b1 b5 cl'p b0 b1 b2 b3 f0
+ (~ ((final_list L) r)), (j < ((((l'p L) N) r) x)), ((((marked_list L) N) r) x) |- (~ ((MEM (((POWER (f_list L)) j) ((f_list L) (((l'y L) r) x)))) (flatten N)))
T c==> c~ cfinal_list f0 f1 c==> c< f2 cl'p f0 f3 f1 f4 c==> cmarked_list f0 f3 f1 f4 c~ cMEM cPOWER * part cf_list f0 f2 cf_list f0 cl'y f0 f1 f4 cflatten f3
+ |- (((POWER f) (SUC n)) = (((POWER f) n) o f))
T c= * * part cPOWER f0 cSUC f1 * * part co * * part cPOWER f0 f1 f0
- |- (((!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) ==> ((\r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) r)) = ((\r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) r))
T c= c==> ! ! ! c= cztrans f0 f1 b0 b1 b2 cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 * / ! ! c= cztrans f0 f1 b0 b1 b2 cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 f2 * / ! ! c= cztrans f0 f1 b0 b1 b2 cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 f2
+ |- (((!i. ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) m)) m))))) = ((((l'p L) N) r) x)) /\ (i < ((((l'p L) N) r) x))) ==> (~ ((\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) i)))) ==> ((\i. ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) m)) m))))) = ((((l'p L) N) r) x)) /\ (i < ((((l'p L) N) r) x))) ==> (~ ((\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) i)))) j)) = ((\i. ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) m)) m))))) = ((((l'p L) N) r) x)) /\ (i < ((((l'p L) N) r) x))) ==> (~ ((\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) i)))) j))
T c= c==> ! c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b1 * / cMEM cPOWER * part cf_list f0 cSUC b3 cl'y f0 f1 f2 cflatten f3 b2 b2 cl'p f0 f3 f1 f2 c< b0 cl'p f0 f3 f1 f2 c~ * / cMEM cPOWER * part cf_list f0 cSUC b1 cl'y f0 f1 f2 cflatten f3 b0 * / c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b1 * / cMEM cPOWER * part cf_list f0 cSUC b3 cl'y f0 f1 f2 cflatten f3 b2 b2 cl'p f0 f3 f1 f2 c< b0 cl'p f0 f3 f1 f2 c~ * / cMEM cPOWER * part cf_list f0 cSUC b1 cl'y f0 f1 f2 cflatten f3 b0 f4 * / c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b1 * / cMEM cPOWER * part cf_list f0 cSUC b3 cl'y f0 f1 f2 cflatten f3 b2 b2 cl'p f0 f3 f1 f2 c< b0 cl'p f0 f3 f1 f2 c~ * / cMEM cPOWER * part cf_list f0 cSUC b1 cl'y f0 f1 f2 cflatten f3 b0 f4
- |- (((!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x))) ==> ((\x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x))) x)) = ((\x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x))) x))
T c= c==> ! c= cmin_num * part cGSPEC / c? / cSETSPEC b1 cMEM cPOWER * part cf_list f0 cSUC b2 cl'y f0 f1 b0 cflatten f2 b2 cl'p f0 f2 f1 b0 * / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 cMEM cPOWER * part cf_list f0 cSUC b2 cl'y f0 f1 b0 cflatten f2 b2 cl'p f0 f2 f1 b0 f3 * / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 cMEM cPOWER * part cf_list f0 cSUC b2 cl'y f0 f1 b0 cflatten f2 b2 cl'p f0 f2 f1 b0 f3
+ |- (((!n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) ==> ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n)) = ((\n. (((POWER f) (SUC n)) = (((POWER f) n) o f))) n))
T c= c==> ! c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1 * / c= * * part cPOWER f0 cSUC b0 * * part co * * part cPOWER f0 b0 f0 f1
- |- (((!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) ==> ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N)) = ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N))
T c= c==> ! ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1 * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1
- |- ((\i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) i)
T * / c= cztrans f0 f1 f2 f3 b0 cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 f4
- |- (((!r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x)))) ==> ((\r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x)))) r)) = ((\r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x)))) r))
T c= c==> ! ! c= cmin_num * part cGSPEC / c? / cSETSPEC b2 cMEM cPOWER * part cf_list f0 cSUC b3 cl'y f0 b0 b1 cflatten f1 b3 cl'p f0 f1 b0 b1 * / ! c= cmin_num * part cGSPEC / c? / cSETSPEC b2 cMEM cPOWER * part cf_list f0 cSUC b3 cl'y f0 b0 b1 cflatten f1 b3 cl'p f0 f1 b0 b1 f2 * / ! c= cmin_num * part cGSPEC / c? / cSETSPEC b2 cMEM cPOWER * part cf_list f0 cSUC b3 cl'y f0 b0 b1 cflatten f1 b3 cl'p f0 f1 b0 b1 f2
+ (~ ((final_list L) r)), ((((marked_list L) N) r) x) |- (((j < ((((l'p L) N) r) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) (NUMERAL _0)))) (flatten N)))) = T)
T c==> c~ cfinal_list f0 f1 c==> cmarked_list f0 f2 f1 f3 c= c==> c< f4 cl'p f0 f2 f1 f3 c~ cMEM cPOWER * part cf_list f0 cSUC f4 cytrans f0 f2 f1 f3 cNUMERAL c_0 cflatten f2 cT
- |- (((!L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) ==> ((\L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) L)) = ((\L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) L))
T c= c==> ! ! ! ! ! c= cztrans b0 b1 b2 b3 b4 cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 * / ! ! ! ! c= cztrans b0 b1 b2 b3 b4 cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 f0 * / ! ! ! ! c= cztrans b0 b1 b2 b3 b4 cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 f0
+ (j < ((((l'p L) N) r) x)) |- (((\y. ((((l'y L) r) x) = y)) y) ==> (~ ((MEM (((POWER (f_list L)) j) ((f_list L) (((l'y L) r) x)))) (flatten N))))
T c==> c< f0 cl'p f1 f2 f3 f4 c==> * / c= cl'y f1 f3 f4 b0 f5 c~ cMEM cPOWER * part cf_list f1 f0 cf_list f1 cl'y f1 f3 f4 cflatten f2
+ |- ((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (!j. ((j < ((((l'p L) N) r) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) (NUMERAL _0)))) (flatten N))))))) = T)
T c= ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 ! c==> c< b1 cl'p f0 f1 f2 b0 c~ cMEM cPOWER * part cf_list f0 cSUC b1 cytrans f0 f1 f2 b0 cNUMERAL c_0 cflatten f1 cT
+ |- ((\N. (!r. (!x. (((((l'p L) N) r) x) = (min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))))))) N)
T * / ! ! c= cl'p f0 b0 b1 b2 cmin_num * part cGSPEC / c? / cSETSPEC b3 cMEM cPOWER * part cf_list f0 cSUC b4 cl'y f0 b1 b2 cflatten b0 b4 f1
+ |- ((((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))) ==> (~ ((MEM (((POWER (f_list L)) j) ((f_list L) (((l'y L) r) x)))) (flatten N)))) = (((((marked_list L) N) r) x) ==> (~ ((MEM (((POWER (f_list L)) j) ((f_list L) (((l'y L) r) x)))) (flatten N)))))
T c= c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 c~ cMEM cPOWER * part cf_list f0 f4 cf_list f0 cl'y f0 f2 f3 cflatten f1 c==> cmarked_list f0 f1 f2 f3 c~ cMEM cPOWER * part cf_list f0 f4 cf_list f0 cl'y f0 f2 f3 cflatten f1
+ (~ ((final_list L) r)), ((((marked_list L) N) r) x) |- (!j. ((j < ((((l'p L) N) r) x)) ==> (~ ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) (NUMERAL _0)))) (flatten N)))))
T c==> c~ cfinal_list f0 f1 c==> cmarked_list f0 f2 f1 f3 ! c==> c< b0 cl'p f0 f2 f1 f3 c~ cMEM cPOWER * part cf_list f0 cSUC b0 cytrans f0 f2 f1 f3 cNUMERAL c_0 cflatten f2
- |- ((\L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) L)
T * / ! ! ! ! c= cztrans b0 b1 b2 b3 b4 cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 f0
+ |- (((!n. (!P. (!i. ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) (P m)) m))))) = n) /\ (i < n)) ==> (~ (P i)))))) ==> ((\n. (!P. (!i. ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) (P m)) m))))) = n) /\ (i < n)) ==> (~ (P i)))))) ((((l'p L) N) r) x))) = ((\n. (!P. (!i. ((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) (P m)) m))))) = n) /\ (i < n)) ==> (~ (P i)))))) ((((l'p L) N) r) x)))
T c= c==> ! ! ! c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b3 * b1 b4 b4 b0 c< b2 b0 c~ * b1 b2 * / ! ! c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b3 * b1 b4 b4 b0 c< b2 b0 c~ * b1 b2 cl'p f0 f1 f2 f3 * / ! ! c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b3 * b1 b4 b4 b0 c< b2 b0 c~ * b1 b2 cl'p f0 f1 f2 f3
+ |- (((!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) ==> ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)) = ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r))
T c= c==> ! ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2 * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
+ |- ((\L. (!N. (!r. (!x. (((((l'p L) N) r) x) = (min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p)))))))))) L)
T * / ! ! ! c= cl'p b0 b1 b2 b3 cmin_num * part cGSPEC / c? / cSETSPEC b4 cMEM cPOWER * part cf_list b0 cSUC b5 cl'y b0 b2 b3 cflatten b1 b5 f0
+ (~ ((final_list L) r)) |- (((final_list L) r) = F)
T c==> c~ cfinal_list f0 f1 c= cfinal_list f0 f1 cF
+ |- ((\L. (!N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))))) L)
T * / ! ! ! ! c= cytrans b0 b1 b2 b3 b4 cl'y b0 crtrans b0 b1 b2 b3 b4 b3 f0
- |- (((!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))) ==> ((\r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))) r)) = ((\r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))) r))
T c= c==> ! ! ! c= cntrans f0 f1 b0 b1 b2 cFST cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 * / ! ! c= cntrans f0 f1 b0 b1 b2 cFST cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2 * / ! ! c= cntrans f0 f1 b0 b1 b2 cFST cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2
- ((((s_flag_list L) N) r) x) |- (((((s_flag_list L) N) r) x) = T)
T c==> cs_flag_list f0 f1 f2 f3 c= cs_flag_list f0 f1 f2 f3 cT
- ((\y. ((((l'y L) r) x) = y)) y) |- ((((((l'y L) r) x) = y) ==> (?y. ((((l'y L) r) x) = y))) = (?y. ((((l'y L) r) x) = y)))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c= c==> c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
+ (~ ((final_list L) r)), (j < ((((l'p L) N) r) x)) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))) ==> (~ ((MEM (((POWER (f_list L)) j) ((f_list L) (((l'y L) r) x)))) (flatten N))))
T c==> c~ cfinal_list f0 f1 c==> c< f2 cl'p f0 f3 f1 f4 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f3 c/\ cMEM f1 f3 c/\ cMEM f4 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c/\ c= cnext_el f1 f4 cf_list f0 f4 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f4 c/\ c==> cfinal_list f0 f1 cflag_list f0 f3 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f3 f1 f4 c~ cMEM cPOWER * part cf_list f0 f2 cf_list f0 cl'y f0 f1 f4 cflatten f3
- |- ((((\y. ((((l'y L) r) x) = y)) y) ==> (?y. ((((l'y L) r) x) = y))) = T)
T c= c==> * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0 cT
+ |- ((((((min_num (GSPEC (\GEN%PVAR%8671. (?m. (((SETSPEC GEN%PVAR%8671) ((\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) m)) m))))) = ((((l'p L) N) r) x)) /\ (j < ((((l'p L) N) r) x))) ==> (~ ((\p. ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) j))) ==> (~ ((MEM (((POWER (f_list L)) j) ((f_list L) y))) (flatten N)))) = (~ ((MEM (((POWER (f_list L)) j) ((f_list L) y))) (flatten N))))
T c= c==> c==> c/\ c= cmin_num * part cGSPEC / c? / cSETSPEC b0 * / cMEM cPOWER * part cf_list f0 cSUC b2 cl'y f0 f1 f2 cflatten f3 b1 b1 cl'p f0 f3 f1 f2 c< f4 cl'p f0 f3 f1 f2 c~ * / cMEM cPOWER * part cf_list f0 cSUC b0 cl'y f0 f1 f2 cflatten f3 f4 c~ cMEM cPOWER * part cf_list f0 f4 cf_list f0 f5 cflatten f3 c~ cMEM cPOWER * part cf_list f0 f4 cf_list f0 f5 cflatten f3
- |- ((\N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))))) N)
T * / ! ! ! c= cntrans f0 b0 b1 b2 b3 cFST cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1
- |- ((\r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))) r)
T * / ! ! c= cntrans f0 f1 b0 b1 b2 cFST cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((\x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x))) x)
T * / c= cmin_num * part cGSPEC / c? / cSETSPEC b1 cMEM cPOWER * part cf_list f0 cSUC b2 cl'y f0 f1 b0 cflatten f2 b2 cl'p f0 f2 f1 b0 f3
- |- ((\r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x)))) r)
T * / ! c= cmin_num * part cGSPEC / c? / cSETSPEC b2 cMEM cPOWER * part cf_list f0 cSUC b3 cl'y f0 b0 b1 cflatten f1 b3 cl'p f0 f1 b0 b1 f2
- (good_list L) |- ((good_list L) = T)
T c==> cgood_list f0 c= cgood_list f0 cT
- (~ ((final_list L) r)), (j < ((((l'p L) N) r) x)), ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) (NUMERAL _0)))) (flatten N)), ((((marked_list L) N) r) x) |- (((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) (NUMERAL _0)))) (flatten N)) /\ F)
T c==> c~ cfinal_list f0 f1 c==> c< f2 cl'p f0 f3 f1 f4 c==> cMEM cPOWER * part cf_list f0 cSUC f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 cflatten f3 c==> cmarked_list f0 f3 f1 f4 c/\ cMEM cPOWER * part cf_list f0 cSUC f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 cflatten f3 cF
- |- ((\L. (!N. (!r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x)))))) L)
T * / ! ! ! c= cmin_num * part cGSPEC / c? / cSETSPEC b4 cMEM cPOWER * part cf_list b0 cSUC b5 cl'y b0 b2 b3 cflatten b1 b5 cl'p b0 b1 b2 b3 f0
- |- ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))
T c= cntrans f0 f1 f2 f3 f4 cFST cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
- |- ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i)
T * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
- |- (((!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))))) ==> ((\N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))))) N)) = ((\N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))))) N))
T c= c==> ! ! ! ! c= cntrans f0 b0 b1 b2 b3 cFST cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 * / ! ! ! c= cntrans f0 b0 b1 b2 b3 cFST cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1 * / ! ! ! c= cntrans f0 b0 b1 b2 b3 cFST cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c= cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 cT
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 cT
- |- (((\p. (f p)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) ==> ((\i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) i)) = ((\i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) i))
T c= c==> ! c= cztrans f0 f1 f2 f3 b0 cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 * / c= cztrans f0 f1 f2 f3 b0 cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 f4 * / c= cztrans f0 f1 f2 f3 b0 cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 f4
- |- (((!N. (!r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x))))) ==> ((\N. (!r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x))))) N)) = ((\N. (!r. (!x. ((min_num (GSPEC (\GEN%PVAR%8606. (?p. (((SETSPEC GEN%PVAR%8606) ((MEM (((POWER (f_list L)) (SUC p)) (((l'y L) r) x))) (flatten N))) p))))) = ((((l'p L) N) r) x))))) N))
T c= c==> ! ! ! c= cmin_num * part cGSPEC / c? / cSETSPEC b3 cMEM cPOWER * part cf_list f0 cSUC b4 cl'y f0 b1 b2 cflatten b0 b4 cl'p f0 b0 b1 b2 * / ! ! c= cmin_num * part cGSPEC / c? / cSETSPEC b3 cMEM cPOWER * part cf_list f0 cSUC b4 cl'y f0 b1 b2 cflatten b0 b4 cl'p f0 b0 b1 b2 f1 * / ! ! c= cmin_num * part cGSPEC / c? / cSETSPEC b3 cMEM cPOWER * part cf_list f0 cSUC b4 cl'y f0 b1 b2 cflatten b0 b4 cl'p f0 b0 b1 b2 f1
- |- ((\r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) r)
T * / ! ! c= cztrans f0 f1 b0 b1 b2 cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 f2
- (~ ((final_list L) r)), (j < ((((l'p L) N) r) x)), ((MEM (((POWER (f_list L)) (SUC j)) (((((ytrans L) N) r) x) (NUMERAL _0)))) (flatten N)), ((((marked_list L) N) r) x) |- F
T c==> c~ cfinal_list f0 f1 c==> c< f2 cl'p f0 f3 f1 f4 c==> cMEM cPOWER * part cf_list f0 cSUC f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 cflatten f3 c==> cmarked_list f0 f3 f1 f4 cF
- ((\y. ((((l'y L) r) x) = y)) y) |- (((\y. ((((l'y L) r) x) = y)) y) /\ (?y. ((((l'y L) r) x) = y)))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c/\ * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0
- ((((l'y L) r) x) = y) |- (((((l'y L) r) x) = y) /\ (?y. ((((l'y L) r) x) = y)))
T c==> c= cl'y f0 f1 f2 f3 c/\ c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0
- ((MEM x) r) |- (((MEM x) r) = T)
T c==> cMEM f0 f1 c= cMEM f0 f1 cT
