N Bump.MCELL3_EDGE
C |- (!V. (!ul. (!u. (!v. (((packing V) /\ ((saturated V) /\ ((~ (negligible ((mcell3 V) ul))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)))) ==> (((u INSERT (v INSERT EMPTY)) IN ((edgeX V) ((mcell3 V) ul))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c~ cnegligible * * part cmcell3 f0 f1 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cedgeX f0 * * part cmcell3 f0 f1 c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D Misc_defs_and_lemmas.IN_ELIM_THM'
A |- ((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D Geomdetail.PAIR_EQ_EXPAND
A |- (((a INSERT (b INSERT EMPTY)) = (c INSERT (d INSERT EMPTY))) = (((a = c) /\ (b = d)) \/ ((a = d) /\ (b = c))))
T c= c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c/\ c= f0 f2 c= f1 f3 c/\ c= f0 f3 c= f1 f2
D Pack_defs.edgeX
A |- (!V. (!X. (((edgeX V) X) = (GSPEC (\GEN%PVAR%5988. (?u. (?v. (((SETSPEC GEN%PVAR%5988) ((((VX V) X) u) /\ ((((VX V) X) v) /\ (~ (u = v))))) (u INSERT (v INSERT EMPTY))))))))))
T c= * * part cedgeX f0 f1 * part cGSPEC / c? / c? / cSETSPEC b0 c/\ cVX f0 f1 b1 c/\ cVX f0 f1 b2 c~ c= b1 b2 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
D Bump.HDTFNFZ_ALT
A |- (!V. (!ul. (!k. (!X. (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((X = (((mcell k) V) ul)) /\ (~ (negligible X)))))) ==> (((VX V) X) = (V INTER X)))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f2 * * * part cmcell f3 f0 f1 c~ cnegligible f2 c= * * part cVX f0 f2 * * part cINTER f0 f2
D Bump.MCELL3
A |- (!V. (!ul. (((mcell3 V) ul) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ul))))
T c= * * part cmcell3 f0 f1 * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 f1
D Bump.MCELL3_SET_OF_LIST_VX
A |- (!V. (!ul. (!X. (((packing V) /\ ((saturated V) /\ ((X = ((mcell3 V) ul)) /\ ((~ (negligible X)) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))))) ==> ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) = (V INTER X))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c= f1 * * part cmcell3 f0 f2 c/\ c~ cnegligible f1 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f2 c= * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINTER f0 f1
+ (~ (negligible ((mcell3 V) ul))), (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((?u'. (?v'. ((((V INTER ((mcell3 V) ul)) u') /\ (((V INTER ((mcell3 V) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))
T c==> c~ cnegligible * * part cmcell3 f0 f1 c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= c? / c? / c/\ c/\ cINTER f0 * * part cmcell3 f0 f1 b0 c/\ cINTER f0 * * part cmcell3 f0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
+ (!P. (!x. ((x IN P) = (P x)))) |- (((\x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))) x) ==> F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> * / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= b0 f3 c= b0 f4 c~ cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c= b1 b2 c/\ c\/ c~ c= f3 b1 c~ c= f4 b2 c\/ c~ c= f3 b2 c~ c= f4 b1 c/\ c~ c= f3 f4 ! c\/ c/\ c~ c= b1 f3 c~ c= b1 f4 cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f5 cF
+ (!P. (!x. ((x IN P) = (P x)))), (x = v), ((u = u') /\ (v = v')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))), (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))) |- ((x = v) /\ F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c= f0 f1 c==> c/\ c= f2 f3 c= f1 f4 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f3 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f4 c~ c= f3 f4 c\/ c/\ c= f2 f3 c= f1 f4 c/\ c= f2 f4 c= f1 f3 c\/ c= f2 f1 c/\ c\/ c= f0 f2 c= f0 f1 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c==> c/\ c\/ c= f0 f2 c= f0 f1 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c/\ c= f0 f1 cF
+ ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((_6432189 = u) ==> ((I ((I IN) _6432189)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))
T c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c==> c= f3 f1 cI * * part cI part cIN f3 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0
+ ((u = u') /\ (v = v')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))), ((((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))) ==> F) |- F
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3 c~ c= f1 f3 c\/ c/\ c= f0 f1 c= f2 f3 c/\ c= f0 f3 c= f2 f1 c\/ c= f0 f2 c/\ c\/ c= f5 f0 c= f5 f2 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c==> c==> c/\ c\/ c= f5 f0 c= f5 f2 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 cF cF
+ (!P. (!x. ((x IN P) = (P x)))) |- (((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= f5 f3 c= f5 f4 c~ cIN f5 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f3 b0 c~ c= f4 b1 c\/ c~ c= f3 b1 c~ c= f4 b0 c/\ c~ c= f3 f4 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 cF
- (_6432654 = _6432656), (_6432655 = _6432657) |- ((_6432655 = _6432657) /\ (((I _6432654) _6432655) = ((I _6432656) _6432657)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
+ |- (((!ul. (((mcell3 V) ul) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ul))) ==> ((\ul. (((mcell3 V) ul) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ul))) ul)) = ((\ul. (((mcell3 V) ul) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ul))) ul))
T c= c==> ! c= * * part cmcell3 f0 b0 * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 b0 * / c= * * part cmcell3 f0 b0 * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 b0 f1 * / c= * * part cmcell3 f0 b0 * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 b0 f1
+ ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- (!x. (((~ (x = u)) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))) /\ ((~ (x = v)) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))
T c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 ! c/\ c\/ c~ c= b0 f1 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c\/ c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0
+ (~ (negligible ((mcell3 V) ul))), (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (((((VX V) ((mcell3 V) ul)) = (V INTER ((mcell3 V) ul))) ==> ((?u'. (?v'. (((((VX V) ((mcell3 V) ul)) u') /\ ((((VX V) ((mcell3 V) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))) = (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((((mcell3 V) ul) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ul)) /\ (~ (negligible ((mcell3 V) ul))))))) /\ ((((VX V) ((mcell3 V) ul)) = (V INTER ((mcell3 V) ul))) ==> ((?u'. (?v'. (((((VX V) ((mcell3 V) ul)) u') /\ ((((VX V) ((mcell3 V) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))
T c==> c~ cnegligible * * part cmcell3 f0 f1 c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= c==> c= * * part cVX f0 * * part cmcell3 f0 f1 * * part cINTER f0 * * part cmcell3 f0 f1 c= c? / c? / c/\ c/\ cVX f0 * * part cmcell3 f0 f1 b0 c/\ cVX f0 * * part cmcell3 f0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1 c/\ c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= * * part cmcell3 f0 f1 * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c~ cnegligible * * part cmcell3 f0 f1 c==> c= * * part cVX f0 * * part cmcell3 f0 f1 * * part cINTER f0 * * part cmcell3 f0 f1 c= c? / c? / c/\ c/\ cVX f0 * * part cmcell3 f0 f1 b0 c/\ cVX f0 * * part cmcell3 f0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
- |- ((((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)) ==> ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F))) = ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)))
T c= c==> c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((\u'. (!v'. ((((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ ((~ (u = u')) \/ (~ (v = v')))) /\ (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ ((~ (u = v')) \/ (~ (v = u'))))))) _6432187)
T c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 * / ! c/\ c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 f3
+ ((u = v') /\ (v = u')) |- ((~ ((I ((I IN) v)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))) = (~ ((I ((I IN) u')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))))
T c==> c/\ c= f0 f1 c= f2 f3 c= c~ cI * * part cI part cIN f2 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c~ cI * * part cI part cIN f3 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4
- (!P. (!x. ((x IN P) = (P x)))), (~ F), ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ F) /\ F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c~ cF c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c/\ c~ cF cF
+ |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- (!ul. (!v. (!u. ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> (~ (!P. (!x. ((x IN P) = (P x)))))))))
T c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c~ ! ! c= cIN b1 b0 * b0 b1
- (!P. (!x. ((x IN P) = (P x)))), (~ ((I ((I IN) v')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ ((I ((I IN) v')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))) /\ ((I ((I IN) v')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1 f2 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1 f0 c~ c= f2 f0 c\/ c/\ c= f3 f2 c= f4 f0 c/\ c= f3 f0 c= f4 f2 c\/ c= f3 f4 c/\ c\/ c= f5 f3 c= f5 f4 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1 c/\ c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1 cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1
+ ((u = v') /\ (v = u')) |- ((v = v') = (u' = v'))
T c==> c/\ c= f0 f1 c= f2 f3 c= c= f2 f1 c= f3 f1
+ (u = v), ((u = u') /\ (v = v')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((u' = u') ==> F)
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f2 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3 c~ c= f2 f3 c\/ c/\ c= f0 f2 c= f1 f3 c/\ c= f0 f3 c= f1 f2 c\/ c= f0 f1 c/\ c\/ c= f5 f0 c= f5 f1 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c==> c= f2 f2 cF
+ |- (((!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) ==> ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)) = ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s))
T c= c==> ! ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
+ (!P. (!x. ((x IN P) = (P x)))), ((\x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))) x) |- (((\x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))) x) /\ F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> * / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= b0 f3 c= b0 f4 c~ cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c= b1 b2 c/\ c\/ c~ c= f3 b1 c~ c= f4 b2 c\/ c~ c= f3 b2 c~ c= f4 b1 c/\ c~ c= f3 f4 ! c\/ c/\ c~ c= b1 f3 c~ c= b1 f4 cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f5 c/\ * / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= b0 f3 c= b0 f4 c~ cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c= b1 b2 c/\ c\/ c~ c= f3 b1 c~ c= f4 b2 c\/ c~ c= f3 b2 c~ c= f4 b1 c/\ c~ c= f3 f4 ! c\/ c/\ c~ c= b1 f3 c~ c= b1 f4 cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f5 cF
+ |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (v = v)) ==> (v = v))
T c==> c~ c= f0 f0 c= f0 f0
+ |- ((\V. (!X. (((edgeX V) X) = (GSPEC (\GEN%PVAR%5988. (?u. (?v. (((SETSPEC GEN%PVAR%5988) ((((VX V) X) u) /\ ((((VX V) X) v) /\ (~ (u = v))))) (u INSERT (v INSERT EMPTY)))))))))) V)
T * / ! c= * * part cedgeX b0 b1 * part cGSPEC / c? / c? / cSETSPEC b2 c/\ cVX b0 b1 b3 c/\ cVX b0 b1 b4 c~ c= b3 b4 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f0
+ (!P. (!x. ((x IN P) = (P x)))) |- ((((\v'. (?x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))))) v') ==> F) = T)
T c==> ! ! c= cIN b1 b0 * b0 b1 c= c==> * / c? / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c~ c= f1 b0 c\/ c/\ c= f2 f1 c= f3 b0 c/\ c= f2 b0 c= f3 f1 c\/ c= f2 f3 c/\ c\/ c= b1 f2 c= b1 f3 c~ cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b3 c= b2 b3 c/\ c\/ c~ c= f2 b2 c~ c= f3 b3 c\/ c~ c= f2 b3 c~ c= f3 b2 c/\ c~ c= f2 f3 ! c\/ c/\ c~ c= b2 f2 c~ c= b2 f3 cIN b2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f4 cF cT
+ |- (((?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u'))))) /\ (?x. ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) = (?v'. (((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ (?x. ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))))
T c= c/\ c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c~ c= f1 b0 c\/ c/\ c= f2 f1 c= f3 b0 c/\ c= f2 b0 c= f3 f1 c? / c\/ c= f2 f3 c/\ c\/ c= b0 f2 c= b0 f3 c~ cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c? / c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c~ c= f1 b0 c\/ c/\ c= f2 f1 c= f3 b0 c/\ c= f2 b0 c= f3 f1 c? / c\/ c= f2 f3 c/\ c\/ c= b1 f2 c= b1 f3 c~ cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
+ ((\v'. (?x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))))) v') |- (((?x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))) ==> F) = F)
T c==> * / c? / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c~ c= f1 b0 c\/ c/\ c= f2 f1 c= f3 b0 c/\ c= f2 b0 c= f3 f1 c\/ c= f2 f3 c/\ c\/ c= b1 f2 c= b1 f3 c~ cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b3 c= b2 b3 c/\ c\/ c~ c= f2 b2 c~ c= f3 b3 c\/ c~ c= f2 b3 c~ c= f3 b2 c/\ c~ c= f2 f3 ! c\/ c/\ c~ c= b2 f2 c~ c= b2 f3 cIN b2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f4 c= c==> c? / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f4 c~ c= f1 f4 c\/ c/\ c= f2 f1 c= f3 f4 c/\ c= f2 f4 c= f3 f1 c\/ c= f2 f3 c/\ c\/ c= b0 f2 c= b0 f3 c~ cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c= b1 b2 c/\ c\/ c~ c= f2 b1 c~ c= f3 b2 c\/ c~ c= f2 b2 c~ c= f3 b1 c/\ c~ c= f2 f3 ! c\/ c/\ c~ c= b1 f2 c~ c= b1 f3 cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 cF cF
- |- (((!ul. (!v. (!u. ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F))))) ==> ((\ul. (!v. (!u. ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F))))) ul)) = ((\ul. (!v. (!u. ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F))))) ul))
T c= c==> ! ! ! c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 b0 b3 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 b0 b4 c~ c= b3 b4 c\/ c/\ c= b2 b3 c= b1 b4 c/\ c= b2 b4 c= b1 b3 c/\ c~ c= b2 b1 ! c==> c\/ c= b3 b2 c= b3 b1 cIN b3 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 b0 c==> ! ! c= cIN b4 b3 * b3 b4 cF * / ! ! c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 b0 b3 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 b0 b4 c~ c= b3 b4 c\/ c/\ c= b2 b3 c= b1 b4 c/\ c= b2 b4 c= b1 b3 c/\ c~ c= b2 b1 ! c==> c\/ c= b3 b2 c= b3 b1 cIN b3 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 b0 c==> ! ! c= cIN b4 b3 * b3 b4 cF f0 * / ! ! c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 b0 b3 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 b0 b4 c~ c= b3 b4 c\/ c/\ c= b2 b3 c= b1 b4 c/\ c= b2 b4 c= b1 b3 c/\ c~ c= b2 b1 ! c==> c\/ c= b3 b2 c= b3 b1 cIN b3 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 b0 c==> ! ! c= cIN b4 b3 * b3 b4 cF f0
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
- (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) ==> ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u'))
T c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= f5 f3 c= f5 f4 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c==> c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1
+ |- ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))
T c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c= * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f1 f2 cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)) |- (((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)) /\ ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)))
T c==> c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c/\ c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF
- |- ((!x'. (((~ (x = u)) /\ (~ (x = v))) \/ (x' IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))) = (((~ (x = u)) /\ (~ (x = v))) \/ (!x. (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))
T c= ! c\/ c/\ c~ c= f0 f1 c~ c= f0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f3 c\/ c/\ c~ c= f0 f1 c~ c= f0 f2 ! cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f3
+ ((\u'. (?v'. (?x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))))) u') |- (((?v'. (?x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))))) ==> F) = F)
T c==> * / c? / c? / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c\/ c= f1 f2 c/\ c\/ c= b2 f1 c= b2 f2 c~ cIN b2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b3 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b3 c= b3 b3 c/\ c\/ c~ c= f1 b3 c~ c= f2 b3 c\/ c~ c= f1 b3 c~ c= f2 b3 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b3 f1 c~ c= b3 f2 cIN b3 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f3 c= c==> c? / c? / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f3 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c~ c= f3 b0 c\/ c/\ c= f1 f3 c= f2 b0 c/\ c= f1 b0 c= f2 f3 c\/ c= f1 f2 c/\ c\/ c= b1 f1 c= b1 f2 c~ cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b3 c= b2 b3 c/\ c\/ c~ c= f1 b2 c~ c= f2 b3 c\/ c~ c= f1 b3 c~ c= f2 b2 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b2 f1 c~ c= b2 f2 cIN b2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 cF cF
- (_6432659 = _6432661) |- ((_6432658 = _6432660) ==> (((I _6432658) _6432659) = ((I _6432660) _6432661)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cI f2 f0 * * part cI f3 f1
+ |- (((?x. (P x)) \/ Q) = (?x. ((P x) \/ Q)))
T c= c\/ c? / * f0 b0 f1 c? / c\/ * f0 b0 f1
+ |- (T = (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) _6432187)) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) _6432188)) \/ ((_6432187 = _6432188) \/ ((~ (u = _6432187)) \/ (~ (v = _6432188)))))) = ((_6432187 = _6432188) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) _6432187)) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) _6432188)) \/ ((~ (u = _6432187)) \/ (~ (v = _6432188))))))))
T c= cT c= c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c\/ c= f1 f2 c\/ c~ c= f3 f1 c~ c= f4 f2 c\/ c= f1 f2 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c\/ c~ c= f3 f1 c~ c= f4 f2
+ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) = (V INTER X)) |- ((V INTER X) = (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))
T c==> c= * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 * * part cINTER f1 f2 c= * * part cINTER f1 f2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0
- |- ((_6432659 = _6432661) ==> ((~ (_6432658 = _6432660)) \/ (((I _6432658) _6432659) = ((I _6432660) _6432661))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f2 f0 * * part cI f3 f1
+ (~ (negligible ((mcell3 V) ul))), (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (((u INSERT (v INSERT EMPTY)) IN ((edgeX V) ((mcell3 V) ul))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))
T c==> c~ cnegligible * * part cmcell3 f0 f1 c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cedgeX f0 * * part cmcell3 f0 f1 c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
- |- ((!u. ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> (~ (!P. (!x. ((x IN P) = (P x))))))) = T)
T c= ! c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c~ c= b1 b2 c\/ c/\ c= b0 b1 c= f1 b2 c/\ c= b0 b2 c= f1 b1 c/\ c~ c= b0 f1 ! c==> c\/ c= b1 b0 c= b1 f1 cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c~ ! ! c= cIN b2 b1 * b1 b2 cT
- |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ (u = v), ((u = u') /\ (v = v')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- (~ (u' = u'))
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f2 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3 c~ c= f2 f3 c\/ c/\ c= f0 f2 c= f1 f3 c/\ c= f0 f3 c= f1 f2 c\/ c= f0 f1 c/\ c\/ c= f5 f0 c= f5 f1 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c~ c= f2 f2
- (!P. (!x. ((x IN P) = (P x)))), ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u)) ==> ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u))
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c==> c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1
+ (!P. (!x. ((x IN P) = (P x)))) |- (((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) ==> F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 cF
+ (!P. (!x. ((x IN P) = (P x)))), ((u = v') /\ (v = u')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))), (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))) |- ((((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))) /\ F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f1 c~ c= f3 f1 c\/ c/\ c= f0 f3 c= f2 f1 c/\ c= f0 f1 c= f2 f3 c\/ c= f0 f2 c/\ c\/ c= f5 f0 c= f5 f2 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c==> c/\ c\/ c= f5 f0 c= f5 f2 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c/\ c/\ c\/ c= f5 f0 c= f5 f2 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 cF
+ (!P. (!x. ((x IN P) = (P x)))), ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1
+ ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((u = v) ==> F)
T c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c==> c= f1 f2 cF
- |- ((_6432654 = _6432656) ==> ((~ (_6432655 = _6432657)) \/ (((I _6432654) _6432655) = ((I _6432656) _6432657))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
- (!P. (!x. ((x IN P) = (P x)))), (x = v), ((u = v') /\ (v = u')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))), (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))) |- ((~ F) ==> F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c= f0 f1 c==> c/\ c= f2 f3 c= f1 f4 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f4 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f3 c~ c= f4 f3 c\/ c/\ c= f2 f4 c= f1 f3 c/\ c= f2 f3 c= f1 f4 c\/ c= f2 f1 c/\ c\/ c= f0 f2 c= f0 f1 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c==> c/\ c\/ c= f0 f2 c= f0 f1 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c==> c~ cF cF
+ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) = T)
T c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 cT
- |- ((?v'. (P v')) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
+ (!P. (!x. ((x IN P) = (P x)))) |- (((\v'. (?x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))))) v') ==> F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> * / c? / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c~ c= f1 b0 c\/ c/\ c= f2 f1 c= f3 b0 c/\ c= f2 b0 c= f3 f1 c\/ c= f2 f3 c/\ c\/ c= b1 f2 c= b1 f3 c~ cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b3 c= b2 b3 c/\ c\/ c~ c= f2 b2 c~ c= f3 b3 c\/ c~ c= f2 b3 c~ c= f3 b2 c/\ c~ c= f2 f3 ! c\/ c/\ c~ c= b2 f2 c~ c= b2 f3 cIN b2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f4 cF
- |- ((\u. ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F))) u)
T * / c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c~ c= b1 b2 c\/ c/\ c= b0 b1 c= f1 b2 c/\ c= b0 b2 c= f1 b1 c/\ c~ c= b0 f1 ! c==> c\/ c= b1 b0 c= b1 f1 cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b2 b1 * b1 b2 cF f2
+ (u = v), ((u = u') /\ (v = v')) |- ((~ (u' = v')) = (~ (u' = u')))
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c= c~ c= f2 f3 c~ c= f2 f2
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ (!P. (!x. ((x IN P) = (P x)))), ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- (((u = u) /\ (v = v)) = (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v) /\ ((u = u) /\ (v = v))))
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c= c/\ c= f1 f1 c= f2 f2 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c/\ c= f1 f1 c= f2 f2
+ (!P. (!x. ((x IN P) = (P x)))), ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v) /\ ((u = u) /\ (v = v))) = (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u) /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v) /\ ((u = u) /\ (v = v)))))
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c= c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c/\ c= f1 f1 c= f2 f2 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c/\ c= f1 f1 c= f2 f2
+ |- (((?v'. (P v')) /\ Q) = (?v'. ((P v') /\ Q)))
T c= c/\ c? / * f0 b0 f1 c? / c/\ * f0 b0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (u = v), ((u = v') /\ (v = u')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f2 c~ c= f3 f2 c\/ c/\ c= f0 f3 c= f1 f2 c/\ c= f0 f2 c= f1 f3 c\/ c= f0 f1 c/\ c\/ c= f5 f0 c= f5 f1 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c==> c~ cF cF
- (u = v), ((u = u') /\ (v = v')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f2 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3 c~ c= f2 f3 c\/ c/\ c= f0 f2 c= f1 f3 c/\ c= f0 f3 c= f1 f2 c\/ c= f0 f1 c/\ c\/ c= f5 f0 c= f5 f1 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f2
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ (!P. (!x. ((x IN P) = (P x)))), ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u) /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v) /\ ((u = u) /\ (v = v))))
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c/\ c= f1 f1 c= f2 f2
- (_6432638 = _6432640), (_6432639 = _6432641) |- (((((I _6432638) _6432639) = ((I _6432640) _6432641)) ==> (((I _6432640) _6432641) \/ (~ ((I _6432638) _6432639)))) = (((I _6432640) _6432641) \/ (~ ((I _6432638) _6432639))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cI f0 f2 cI f1 f3 c\/ cI f1 f3 c~ cI f0 f2 c\/ cI f1 f3 c~ cI f0 f2
+ (!P. (!x. ((x IN P) = (P x)))) |- (!u'. (((\u'. (?v'. (?x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))))) u') ==> F))
T c==> ! ! c= cIN b1 b0 * b0 b1 ! c==> * / c? / c? / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b1 b1 c\/ c/\ c= f1 b1 c= f2 b1 c/\ c= f1 b1 c= f2 b1 c\/ c= f1 f2 c/\ c\/ c= b2 f1 c= b2 f2 c~ cIN b2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b3 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b3 c= b3 b3 c/\ c\/ c~ c= f1 b3 c~ c= f2 b3 c\/ c~ c= f1 b3 c~ c= f2 b3 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b3 f1 c~ c= b3 f2 cIN b3 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 cF
+ (!P. (!x. ((x IN P) = (P x)))), ((u = u') /\ (v = v')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- F
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3 c~ c= f1 f3 c\/ c/\ c= f0 f1 c= f2 f3 c/\ c= f0 f3 c= f2 f1 c\/ c= f0 f2 c/\ c\/ c= f5 f0 c= f5 f2 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 cF
+ |- (((?x. (((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) = (?x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))))
T c= c\/ c? / c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= b0 f3 c= b0 f4 c~ cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f3 b0 c~ c= f4 b1 c\/ c~ c= f3 b1 c~ c= f4 b0 c/\ c~ c= f3 f4 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c? / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= b0 f3 c= b0 f4 c~ cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c= b1 b2 c/\ c\/ c~ c= f3 b1 c~ c= f4 b2 c\/ c~ c= f3 b2 c~ c= f4 b1 c/\ c~ c= f3 f4 ! c\/ c/\ c~ c= b1 f3 c~ c= b1 f4 cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0
+ (packing V), (saturated V), ((saturated V) /\ ((~ (negligible ((mcell3 V) ul))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))) |- (((u INSERT (v INSERT EMPTY)) IN ((edgeX V) ((mcell3 V) ul))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ csaturated f0 c/\ c~ cnegligible * * part cmcell3 f0 f1 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cedgeX f0 * * part cmcell3 f0 f1 c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
- (!P. (!x. ((x IN P) = (P x)))), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ ((I ((I IN) v')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))) ==> ((I ((I IN) v')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= f5 f3 c= f5 f4 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c==> c~ cI * * part cI part cIN f2 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 cI * * part cI part cIN f2 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0
- |- ((((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)) ==> ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F))) ==> (((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)) ==> ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F))))
T c==> c==> c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF
+ ((u = v') /\ (v = u')) |- ((~ ((I ((I IN) u)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))) = (~ ((I ((I IN) v')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))))
T c==> c/\ c= f0 f1 c= f2 f3 c= c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c~ cI * * part cI part cIN f1 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4
+ |- (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) _6432187)) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) _6432188)) \/ ((_6432187 = _6432188) \/ ((~ (u = _6432187)) \/ (~ (v = _6432188)))))) = ((_6432187 = _6432188) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) _6432187)) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) _6432188)) \/ ((~ (u = _6432187)) \/ (~ (v = _6432188)))))))
T c= c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c\/ c= f1 f2 c\/ c~ c= f3 f1 c~ c= f4 f2 c\/ c= f1 f2 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c\/ c~ c= f3 f1 c~ c= f4 f2
+ |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ ((u = v') /\ (v = u')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((u = v) ==> F)
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f1 c~ c= f3 f1 c\/ c/\ c= f0 f3 c= f2 f1 c/\ c= f0 f1 c= f2 f3 c\/ c= f0 f2 c/\ c\/ c= f5 f0 c= f5 f2 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c==> c= f0 f2 cF
+ (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))
T c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= f5 f3 c= f5 f4 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1
- ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)), (((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)) ==> ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F))) |- (((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)) /\ ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)))
T c==> c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c==> c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c/\ c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF
+ |- (((?u'. (?v'. (((((VX V) ((mcell3 V) ul)) u') /\ ((((VX V) ((mcell3 V) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))) = (((u INSERT (v INSERT EMPTY)) IN ((edgeX V) ((mcell3 V) ul))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))
T c= c= c? / c? / c/\ c/\ cVX f0 * * part cmcell3 f0 f1 b0 c/\ cVX f0 * * part cmcell3 f0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1 c= cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cedgeX f0 * * part cmcell3 f0 f1 c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
+ |- ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ (?x. ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) = (?x. (((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))))
T c= c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c? / c\/ c= f3 f4 c/\ c\/ c= b0 f3 c= b0 f4 c~ cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c? / c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= b0 f3 c= b0 f4 c~ cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0
+ (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v'))))
T c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= f5 f3 c= f5 f4 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c~ c= f1 f2
- (~ F), (u = v), ((u = v') /\ (v = u')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f2 c~ c= f3 f2 c\/ c/\ c= f0 f3 c= f1 f2 c/\ c= f0 f2 c= f1 f3 c\/ c= f0 f1 c/\ c\/ c= f5 f0 c= f5 f1 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c/\ c~ cF cF
+ (!P. (!x. ((x IN P) = (P x)))), ((u = v') /\ (v = u')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- (((u = v') /\ (v = u')) /\ F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f1 c~ c= f3 f1 c\/ c/\ c= f0 f3 c= f2 f1 c/\ c= f0 f1 c= f2 f3 c\/ c= f0 f2 c/\ c\/ c= f5 f0 c= f5 f2 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c/\ c/\ c= f0 f1 c= f2 f3 cF
+ (~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) |- ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) /\ F)
T c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 cF
+ ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ (_6432189 = u)) \/ ((I ((I IN) _6432189)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))
T c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c\/ c~ c= f3 f1 cI * * part cI part cIN f3 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- (T = (((~ (_6432189 = v)) \/ ((I ((I IN) _6432189)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))) = (((I ((I IN) _6432189)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) \/ (~ (_6432189 = v)))))
T c= cT c= c\/ c~ c= f0 f1 cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f2 c\/ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f2 c~ c= f0 f1
+ (u = v), ((u = v') /\ (v = u')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- F
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f2 c~ c= f3 f2 c\/ c/\ c= f0 f3 c= f1 f2 c/\ c= f0 f2 c= f1 f3 c\/ c= f0 f1 c/\ c\/ c= f5 f0 c= f5 f1 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 cF
- |- ((!v'. t) = t)
T c= ! f0 f0
+ (~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) |- (((?u'. (?v'. (?x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))))) ==> F) = F)
T c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c= c==> c? / c? / c? / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c\/ c= f1 f2 c/\ c\/ c= b2 f1 c= b2 f2 c~ cIN b2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b3 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b3 c= b3 b3 c/\ c\/ c~ c= f1 b3 c~ c= f2 b3 c\/ c~ c= f1 b3 c~ c= f2 b3 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b3 f1 c~ c= b3 f2 cIN b3 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 cF cF
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ |- (!X. (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((X = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ul)) /\ (~ (negligible X)))))) ==> (((VX V) X) = (V INTER X))))
T c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= f2 * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c~ cnegligible f2 c= * * part cVX f0 f2 * * part cINTER f0 f2
+ (!P. (!x. ((x IN P) = (P x)))), (x = u), ((u = u') /\ (v = v')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))), (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))) |- F
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c= f0 f1 c==> c/\ c= f1 f2 c= f3 f4 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f2 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f4 c~ c= f2 f4 c\/ c/\ c= f1 f2 c= f3 f4 c/\ c= f1 f4 c= f3 f2 c\/ c= f1 f3 c/\ c\/ c= f0 f1 c= f0 f3 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c==> c/\ c\/ c= f0 f1 c= f0 f3 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 cF
+ |- (((!V. (!X. (((edgeX V) X) = (GSPEC (\GEN%PVAR%5988. (?u. (?v. (((SETSPEC GEN%PVAR%5988) ((((VX V) X) u) /\ ((((VX V) X) v) /\ (~ (u = v))))) (u INSERT (v INSERT EMPTY)))))))))) ==> ((\V. (!X. (((edgeX V) X) = (GSPEC (\GEN%PVAR%5988. (?u. (?v. (((SETSPEC GEN%PVAR%5988) ((((VX V) X) u) /\ ((((VX V) X) v) /\ (~ (u = v))))) (u INSERT (v INSERT EMPTY)))))))))) V)) = ((\V. (!X. (((edgeX V) X) = (GSPEC (\GEN%PVAR%5988. (?u. (?v. (((SETSPEC GEN%PVAR%5988) ((((VX V) X) u) /\ ((((VX V) X) v) /\ (~ (u = v))))) (u INSERT (v INSERT EMPTY)))))))))) V))
T c= c==> ! ! c= * * part cedgeX b0 b1 * part cGSPEC / c? / c? / cSETSPEC b2 c/\ cVX b0 b1 b3 c/\ cVX b0 b1 b4 c~ c= b3 b4 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * / ! c= * * part cedgeX b0 b1 * part cGSPEC / c? / c? / cSETSPEC b2 c/\ cVX b0 b1 b3 c/\ cVX b0 b1 b4 c~ c= b3 b4 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f0 * / ! c= * * part cedgeX b0 b1 * part cGSPEC / c? / c? / cSETSPEC b2 c/\ cVX b0 b1 b3 c/\ cVX b0 b1 b4 c~ c= b3 b4 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f0
- (!P. (!x. ((x IN P) = (P x)))), (~ F), (x = u), ((u = u') /\ (v = v')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))), (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))) |- ((~ F) /\ F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c~ cF c==> c= f0 f1 c==> c/\ c= f1 f2 c= f3 f4 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f2 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f4 c~ c= f2 f4 c\/ c/\ c= f1 f2 c= f3 f4 c/\ c= f1 f4 c= f3 f2 c\/ c= f1 f3 c/\ c\/ c= f0 f1 c= f0 f3 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c==> c/\ c\/ c= f0 f1 c= f0 f3 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c/\ c~ cF cF
+ |- ((!u. (!v. (((packing V) /\ ((saturated V) /\ ((~ (negligible ((mcell3 V) ul))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)))) ==> (((u INSERT (v INSERT EMPTY)) IN ((edgeX V) ((mcell3 V) ul))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) = T)
T c= ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c~ cnegligible * * part cmcell3 f0 f1 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cedgeX f0 * * part cmcell3 f0 f1 c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1 cT
+ |- ((v = v) = ((u = u) /\ (v = v)))
T c= c= f0 f0 c/\ c= f1 f1 c= f0 f0
+ |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ |- (((!ul. (!k. (!X. (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((X = (((mcell k) V) ul)) /\ (~ (negligible X)))))) ==> (((VX V) X) = (V INTER X)))))) ==> ((\ul. (!k. (!X. (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((X = (((mcell k) V) ul)) /\ (~ (negligible X)))))) ==> (((VX V) X) = (V INTER X)))))) ul)) = ((\ul. (!k. (!X. (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((X = (((mcell k) V) ul)) /\ (~ (negligible X)))))) ==> (((VX V) X) = (V INTER X)))))) ul))
T c= c==> ! ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ c= b2 * * * part cmcell b1 f0 b0 c~ cnegligible b2 c= * * part cVX f0 b2 * * part cINTER f0 b2 * / ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ c= b2 * * * part cmcell b1 f0 b0 c~ cnegligible b2 c= * * part cVX f0 b2 * * part cINTER f0 b2 f1 * / ! ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ c= b2 * * * part cmcell b1 f0 b0 c~ cnegligible b2 c= * * part cVX f0 b2 * * part cINTER f0 b2 f1
+ |- ((f x) = ((I f) x))
T c= * f0 f1 cI f0 f1
+ ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((I ((I IN) v)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))
T c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 cI * * part cI part cIN f2 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- |- ((~ (_6432639 = _6432641)) \/ ((~ (_6432638 = _6432640)) \/ (((I _6432640) _6432641) \/ (~ ((I _6432638) _6432639)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
+ (!P. (!x. ((x IN P) = (P x)))) |- (!x. (((\x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))) x) ==> F))
T c==> ! ! c= cIN b1 b0 * b0 b1 ! c==> * / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= b1 f3 c= b1 f4 c~ cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c= b1 b2 c/\ c\/ c~ c= f3 b1 c~ c= f4 b2 c\/ c~ c= f3 b2 c~ c= f4 b1 c/\ c~ c= f3 f4 ! c\/ c/\ c~ c= b1 f3 c~ c= b1 f4 cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 cF
+ ((\x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))) x) |- ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))
T c==> * / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= b0 f3 c= b0 f4 c~ cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c= b1 b2 c/\ c\/ c~ c= f3 b1 c~ c= f4 b2 c\/ c~ c= f3 b2 c~ c= f4 b1 c/\ c~ c= f3 f4 ! c\/ c/\ c~ c= b1 f3 c~ c= b1 f4 cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f5 c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= f5 f3 c= f5 f4 c~ cIN f5 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f3 b0 c~ c= f4 b1 c\/ c~ c= f3 b1 c~ c= f4 b0 c/\ c~ c= f3 f4 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0
+ (u = v), ((u = v') /\ (v = u')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((u = v) /\ F)
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f2 c~ c= f3 f2 c\/ c/\ c= f0 f3 c= f1 f2 c/\ c= f0 f2 c= f1 f3 c\/ c= f0 f1 c/\ c\/ c= f5 f0 c= f5 f1 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c/\ c= f0 f1 cF
- (!P. (!x. ((x IN P) = (P x)))), (~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u)), ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u)) /\ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u))
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c/\ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1
+ ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((((I ((I IN) v)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) ==> ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v)) = ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v))
T c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c= c==> cI * * part cI part cIN f2 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2
- (x = v) |- ((v = u') = (v = u'))
T c==> c= f0 f1 c= c= f1 f2 c= f1 f2
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?x. t) = t)
T c= c? / f0 f0
- (_6432658 = _6432660), (_6432659 = _6432661) |- ((_6432658 = _6432660) /\ (((I _6432658) _6432659) = ((I _6432660) _6432661)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cI f0 f2 * * part cI f1 f3
+ ((V INTER ((mcell3 V) ul)) = (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))) |- (((?u'. (?v'. ((((V INTER ((mcell3 V) ul)) u') /\ (((V INTER ((mcell3 V) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))) = ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))
T c==> c= * * part cINTER f0 * * part cmcell3 f0 f1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1 c= c= c? / c? / c/\ c/\ cINTER f0 * * part cmcell3 f0 f1 b0 c/\ cINTER f0 * * part cmcell3 f0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1 c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
+ (~ (negligible ((mcell3 V) ul))), (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((((VX V) ((mcell3 V) ul)) = (V INTER ((mcell3 V) ul))) ==> ((?u'. (?v'. (((((VX V) ((mcell3 V) ul)) u') /\ ((((VX V) ((mcell3 V) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))
T c==> c~ cnegligible * * part cmcell3 f0 f1 c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= * * part cVX f0 * * part cmcell3 f0 f1 * * part cINTER f0 * * part cmcell3 f0 f1 c= c? / c? / c/\ c/\ cVX f0 * * part cmcell3 f0 f1 b0 c/\ cVX f0 * * part cmcell3 f0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
- (x = v) |- ((~ (u' = v')) = (~ (u' = v')))
T c==> c= f0 f1 c= c~ c= f2 f3 c~ c= f2 f3
+ |- (((V INTER ((mcell3 V) ul)) = (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))) ==> ((?u'. (?v'. ((((V INTER ((mcell3 V) ul)) u') /\ (((V INTER ((mcell3 V) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))
T c==> c= * * part cINTER f0 * * part cmcell3 f0 f1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1 c= c? / c? / c/\ c/\ cINTER f0 * * part cmcell3 f0 f1 b0 c/\ cINTER f0 * * part cmcell3 f0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
+ (~ (negligible ((mcell3 V) ul))), (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (T = ((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((((mcell3 V) ul) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ul)) /\ (~ (negligible ((mcell3 V) ul))))))))
T c==> c~ cnegligible * * part cmcell3 f0 f1 c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= cT c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= * * part cmcell3 f0 f1 * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c~ cnegligible * * part cmcell3 f0 f1
+ |- (((((packing V) /\ ((saturated V) /\ ((((mcell3 V) ul) = ((mcell3 V) ul)) /\ ((~ (negligible ((mcell3 V) ul))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))))) ==> ((V INTER ((mcell3 V) ul)) = (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))) ==> ((?u'. (?v'. ((((V INTER ((mcell3 V) ul)) u') /\ (((V INTER ((mcell3 V) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))) = ((?u'. (?v'. ((((V INTER ((mcell3 V) ul)) u') /\ (((V INTER ((mcell3 V) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))
T c= c==> c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c= * * part cmcell3 f0 f1 * * part cmcell3 f0 f1 c/\ c~ cnegligible * * part cmcell3 f0 f1 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= * * part cINTER f0 * * part cmcell3 f0 f1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1 c= c? / c? / c/\ c/\ cINTER f0 * * part cmcell3 f0 f1 b0 c/\ cINTER f0 * * part cmcell3 f0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1 c= c? / c? / c/\ c/\ cINTER f0 * * part cmcell3 f0 f1 b0 c/\ cINTER f0 * * part cmcell3 f0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
- |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ (~ (negligible ((mcell3 V) ul))), (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((((packing V) /\ ((saturated V) /\ ((((mcell3 V) ul) = ((mcell3 V) ul)) /\ ((~ (negligible ((mcell3 V) ul))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))))) ==> ((V INTER ((mcell3 V) ul)) = (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))) ==> ((?u'. (?v'. ((((V INTER ((mcell3 V) ul)) u') /\ (((V INTER ((mcell3 V) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))
T c==> c~ cnegligible * * part cmcell3 f0 f1 c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c= * * part cmcell3 f0 f1 * * part cmcell3 f0 f1 c/\ c~ cnegligible * * part cmcell3 f0 f1 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= * * part cINTER f0 * * part cmcell3 f0 f1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1 c= c? / c? / c/\ c/\ cINTER f0 * * part cmcell3 f0 f1 b0 c/\ cINTER f0 * * part cmcell3 f0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
+ (!P. (!x. ((x IN P) = (P x)))), ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v) /\ ((u = u) /\ (v = v)))
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c/\ c= f1 f1 c= f2 f2
- (_6432650 = _6432652), (_6432651 = _6432653) |- ((_6432651 = _6432653) /\ (((I _6432650) _6432651) = ((I _6432652) _6432653)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= cI f0 f2 cI f1 f3
+ ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((I ((I IN) u)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))
T c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 cI * * part cI part cIN f1 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0
+ (!P. (!x. ((x IN P) = (P x)))), ((u = u') /\ (v = v')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))), (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))) |- ((x = v) ==> F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3 c~ c= f1 f3 c\/ c/\ c= f0 f1 c= f2 f3 c/\ c= f0 f3 c= f2 f1 c\/ c= f0 f2 c/\ c\/ c= f5 f0 c= f5 f2 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c==> c/\ c\/ c= f5 f0 c= f5 f2 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c==> c= f5 f2 cF
- |- ((!v. (!u. ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> (~ (!P. (!x. ((x IN P) = (P x)))))))) = T)
T c= ! ! c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b3 c~ c= b2 b3 c\/ c/\ c= b1 b2 c= b0 b3 c/\ c= b1 b3 c= b0 b2 c/\ c~ c= b1 b0 ! c==> c\/ c= b2 b1 c= b2 b0 cIN b2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c~ ! ! c= cIN b3 b2 * b2 b3 cT
+ |- (((((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((((mcell3 V) ul) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ul)) /\ (~ (negligible ((mcell3 V) ul))))))) ==> (((VX V) ((mcell3 V) ul)) = (V INTER ((mcell3 V) ul)))) ==> ((?u'. (?v'. (((((VX V) ((mcell3 V) ul)) u') /\ ((((VX V) ((mcell3 V) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))) = ((?u'. (?v'. (((((VX V) ((mcell3 V) ul)) u') /\ ((((VX V) ((mcell3 V) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))
T c= c==> c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= * * part cmcell3 f0 f1 * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c~ cnegligible * * part cmcell3 f0 f1 c= * * part cVX f0 * * part cmcell3 f0 f1 * * part cINTER f0 * * part cmcell3 f0 f1 c= c? / c? / c/\ c/\ cVX f0 * * part cmcell3 f0 f1 b0 c/\ cVX f0 * * part cmcell3 f0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1 c= c? / c? / c/\ c/\ cVX f0 * * part cmcell3 f0 f1 b0 c/\ cVX f0 * * part cmcell3 f0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
+ (u = v), ((u = v') /\ (v = u')) |- (u' = v')
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c= f3 f2
+ |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ (!P. (!x. ((x IN P) = (P x)))) |- (((!x. (((\v'. (?x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))))) x) ==> F)) ==> ((?v'. (?x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))))) ==> F)) = ((?v'. (?x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))))) ==> F))
T c==> ! ! c= cIN b1 b0 * b0 b1 c= c==> ! c==> * / c? / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= f1 b1 c\/ c/\ c= f2 f1 c= f3 b1 c/\ c= f2 b1 c= f3 f1 c\/ c= f2 f3 c/\ c\/ c= b2 f2 c= b2 f3 c~ cIN b2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b3 c= b2 b3 c/\ c\/ c~ c= f2 b2 c~ c= f3 b3 c\/ c~ c= f2 b3 c~ c= f3 b2 c/\ c~ c= f2 f3 ! c\/ c/\ c~ c= b2 f2 c~ c= b2 f3 cIN b2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 cF c==> c? / c? / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c~ c= f1 b0 c\/ c/\ c= f2 f1 c= f3 b0 c/\ c= f2 b0 c= f3 f1 c\/ c= f2 f3 c/\ c\/ c= b1 f2 c= b1 f3 c~ cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b3 c= b2 b3 c/\ c\/ c~ c= f2 b2 c~ c= f3 b3 c\/ c~ c= f2 b3 c~ c= f3 b2 c/\ c~ c= f2 f3 ! c\/ c/\ c~ c= b2 f2 c~ c= b2 f3 cIN b2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 cF c==> c? / c? / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c~ c= f1 b0 c\/ c/\ c= f2 f1 c= f3 b0 c/\ c= f2 b0 c= f3 f1 c\/ c= f2 f3 c/\ c\/ c= b1 f2 c= b1 f3 c~ cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b3 c= b2 b3 c/\ c\/ c~ c= f2 b2 c~ c= f3 b3 c\/ c~ c= f2 b3 c~ c= f3 b2 c/\ c~ c= f2 f3 ! c\/ c/\ c~ c= b2 f2 c~ c= b2 f3 cIN b2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 cF
+ (~ (negligible ((mcell3 V) ul))), (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((?u'. (?v'. (((((VX V) ((mcell3 V) ul)) u') /\ ((((VX V) ((mcell3 V) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))
T c==> c~ cnegligible * * part cmcell3 f0 f1 c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= c? / c? / c/\ c/\ cVX f0 * * part cmcell3 f0 f1 b0 c/\ cVX f0 * * part cmcell3 f0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
- (!P. (!x. ((x IN P) = (P x)))), (~ F), (x = v), ((u = u') /\ (v = v')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))), (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))) |- ((~ F) /\ F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c~ cF c==> c= f0 f1 c==> c/\ c= f2 f3 c= f1 f4 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f3 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f4 c~ c= f3 f4 c\/ c/\ c= f2 f3 c= f1 f4 c/\ c= f2 f4 c= f1 f3 c\/ c= f2 f1 c/\ c\/ c= f0 f2 c= f0 f1 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c==> c/\ c\/ c= f0 f2 c= f0 f1 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c/\ c~ cF cF
+ (!P. (!x. ((x IN P) = (P x)))), (x = u), ((u = v') /\ (v = u')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))), (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))) |- F
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c= f0 f1 c==> c/\ c= f1 f2 c= f3 f4 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f4 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f2 c~ c= f4 f2 c\/ c/\ c= f1 f4 c= f3 f2 c/\ c= f1 f2 c= f3 f4 c\/ c= f1 f3 c/\ c\/ c= f0 f1 c= f0 f3 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c==> c/\ c\/ c= f0 f1 c= f0 f3 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 cF
+ (~ (negligible ((mcell3 V) ul))), (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((((mcell3 V) ul) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ul)) /\ (~ (negligible ((mcell3 V) ul))))))) ==> (((VX V) ((mcell3 V) ul)) = (V INTER ((mcell3 V) ul)))) ==> ((?u'. (?v'. (((((VX V) ((mcell3 V) ul)) u') /\ ((((VX V) ((mcell3 V) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))
T c==> c~ cnegligible * * part cmcell3 f0 f1 c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= * * part cmcell3 f0 f1 * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c~ cnegligible * * part cmcell3 f0 f1 c= * * part cVX f0 * * part cmcell3 f0 f1 * * part cINTER f0 * * part cmcell3 f0 f1 c= c? / c? / c/\ c/\ cVX f0 * * part cmcell3 f0 f1 b0 c/\ cVX f0 * * part cmcell3 f0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
+ |- (((?v'. (?x. (((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) = (?v'. ((?x. (((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))))
T c= c\/ c? / c? / c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c~ c= f1 b0 c\/ c/\ c= f2 f1 c= f3 b0 c/\ c= f2 b0 c= f3 f1 c\/ c= f2 f3 c/\ c\/ c= b1 f2 c= b1 f3 c~ cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f2 b0 c~ c= f3 b1 c\/ c~ c= f2 b1 c~ c= f3 b0 c/\ c~ c= f2 f3 ! c\/ c/\ c~ c= b0 f2 c~ c= b0 f3 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c? / c\/ c? / c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c~ c= f1 b0 c\/ c/\ c= f2 f1 c= f3 b0 c/\ c= f2 b0 c= f3 f1 c\/ c= f2 f3 c/\ c\/ c= b1 f2 c= b1 f3 c~ cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c= b1 b2 c/\ c\/ c~ c= f2 b1 c~ c= f3 b2 c\/ c~ c= f2 b2 c~ c= f3 b1 c/\ c~ c= f2 f3 ! c\/ c/\ c~ c= b1 f2 c~ c= b1 f3 cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- (((!x. (~ (x IN EMPTY))) ==> ((\x. (~ (x IN EMPTY))) x)) = ((\x. (~ (x IN EMPTY))) x))
T c= c==> ! c~ cIN b0 part cEMPTY * / c~ cIN b0 part cEMPTY f0 * / c~ cIN b0 part cEMPTY f0
+ |- ((\k. (!X. (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((X = (((mcell k) V) ul)) /\ (~ (negligible X)))))) ==> (((VX V) X) = (V INTER X))))) (NUMERAL (BIT1 (BIT1 _0))))
T * / ! c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= b1 * * * part cmcell b0 f0 f1 c~ cnegligible b1 c= * * part cVX f0 b1 * * part cINTER f0 b1 cNUMERAL cBIT1 cBIT1 c_0
+ (!P. (!x. ((x IN P) = (P x)))) |- (((!x. (((\x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))) x) ==> F)) ==> ((?x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))) ==> F)) = ((?x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))) ==> F))
T c==> ! ! c= cIN b1 b0 * b0 b1 c= c==> ! c==> * / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= b1 f3 c= b1 f4 c~ cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c= b1 b2 c/\ c\/ c~ c= f3 b1 c~ c= f4 b2 c\/ c~ c= f3 b2 c~ c= f4 b1 c/\ c~ c= f3 f4 ! c\/ c/\ c~ c= b1 f3 c~ c= b1 f4 cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 cF c==> c? / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= b0 f3 c= b0 f4 c~ cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c= b1 b2 c/\ c\/ c~ c= f3 b1 c~ c= f4 b2 c\/ c~ c= f3 b2 c~ c= f4 b1 c/\ c~ c= f3 f4 ! c\/ c/\ c~ c= b1 f3 c~ c= b1 f4 cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 cF c==> c? / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= b0 f3 c= b0 f4 c~ cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c= b1 b2 c/\ c\/ c~ c= f3 b1 c~ c= f4 b2 c\/ c~ c= f3 b2 c~ c= f4 b1 c/\ c~ c= f3 f4 ! c\/ c/\ c~ c= b1 f3 c~ c= b1 f4 cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 cF
+ (!P. (!x. ((x IN P) = (P x)))), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))), (((u = v') /\ (v = u')) ==> F) |- F
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= f5 f3 c= f5 f4 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c==> c==> c/\ c= f3 f2 c= f4 f1 cF cF
+ (~ (negligible ((mcell3 V) ul))), (packing V), (saturated V), (((VX V) ((mcell3 V) ul)) = (V INTER ((mcell3 V) ul))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((((VX V) ((mcell3 V) ul)) = (V INTER ((mcell3 V) ul))) /\ ((?u'. (?v'. (((((VX V) ((mcell3 V) ul)) u') /\ ((((VX V) ((mcell3 V) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))
T c==> c~ cnegligible * * part cmcell3 f0 f1 c==> cpacking f0 c==> csaturated f0 c==> c= * * part cVX f0 * * part cmcell3 f0 f1 * * part cINTER f0 * * part cmcell3 f0 f1 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= * * part cVX f0 * * part cmcell3 f0 f1 * * part cINTER f0 * * part cmcell3 f0 f1 c= c? / c? / c/\ c/\ cVX f0 * * part cmcell3 f0 f1 b0 c/\ cVX f0 * * part cmcell3 f0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
+ |- ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)
T * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
+ |- (((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) = ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))
T c= c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c= * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f1 f2 cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0
- |- ((!x'. ((x IN P) \/ (~ (P x')))) = ((x IN P) \/ (!x. (~ (P x)))))
T c= ! c\/ cIN f0 f1 c~ * f1 b0 c\/ cIN f0 f1 ! c~ * f1 b0
- (!P. (!x. ((x IN P) = (P x)))), (~ F), (x = v), ((u = v') /\ (v = u')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))), (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))) |- ((~ F) /\ F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c~ cF c==> c= f0 f1 c==> c/\ c= f2 f3 c= f1 f4 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f4 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f3 c~ c= f4 f3 c\/ c/\ c= f2 f4 c= f1 f3 c/\ c= f2 f3 c= f1 f4 c\/ c= f2 f1 c/\ c\/ c= f0 f2 c= f0 f1 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c==> c/\ c\/ c= f0 f2 c= f0 f1 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c/\ c~ cF cF
- (_6432654 = _6432656) |- ((_6432655 = _6432657) ==> (((I _6432654) _6432655) = ((I _6432656) _6432657)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
- (~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) /\ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u'))
T c==> c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= f5 f3 c= f5 f4 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c/\ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1
- (x = v) |- ((u = v') = (u = v'))
T c==> c= f0 f1 c= c= f2 f3 c= f2 f3
- (u = v), ((u = v') /\ (v = u')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f2 c~ c= f3 f2 c\/ c/\ c= f0 f3 c= f1 f2 c/\ c= f0 f2 c= f1 f3 c\/ c= f0 f1 c/\ c\/ c= f5 f0 c= f5 f1 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f2
+ (!P. (!x. ((x IN P) = (P x)))), ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u) /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v) /\ ((u = u) /\ (v = v)))) ==> (u = v)) = (u = v))
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c= c==> c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c/\ c= f1 f1 c= f2 f2 c= f1 f2 c= f1 f2
+ (!P. (!x. ((x IN P) = (P x)))), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((I ((I IN) u')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= f5 f3 c= f5 f4 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 cI * * part cI part cIN f1 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0
+ ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- (((!u'. (!v'. ((((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ ((~ (u = u')) \/ (~ (v = v')))) /\ (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ ((~ (u = v')) \/ (~ (v = u'))))))) ==> ((\u'. (!v'. ((((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ ((~ (u = u')) \/ (~ (v = v')))) /\ (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ ((~ (u = v')) \/ (~ (v = u'))))))) _6432187)) = ((\u'. (!v'. ((((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ ((~ (u = u')) \/ (~ (v = v')))) /\ (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ ((~ (u = v')) \/ (~ (v = u'))))))) _6432187))
T c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c= c==> ! ! c/\ c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 * / ! c/\ c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 f3 * / ! c/\ c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 f3
+ (!P. (!x. ((x IN P) = (P x)))), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) /\ F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= f5 f3 c= f5 f4 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c/\ c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= f5 f3 c= f5 f4 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 cF
+ |- ((\ul. (!X. (((packing V) /\ ((saturated V) /\ ((((mcell3 V) ul) = X) /\ ((~ (negligible X)) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))))) ==> ((V INTER X) = (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))) ul)
T * / ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c= * * part cmcell3 f0 b0 b1 c/\ c~ cnegligible b1 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c= * * part cINTER f0 b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 b0 f1
+ (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))), (((u = u') /\ (v = v')) ==> F), (((u = v') /\ (v = u')) ==> F) |- F
T c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= f5 f3 c= f5 f4 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c==> c==> c/\ c= f3 f1 c= f4 f2 cF c==> c==> c/\ c= f3 f2 c= f4 f1 cF cF
+ (packing V), ((saturated V) /\ ((~ (negligible ((mcell3 V) ul))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))) |- (((u INSERT (v INSERT EMPTY)) IN ((edgeX V) ((mcell3 V) ul))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))
T c==> cpacking f0 c==> c/\ csaturated f0 c/\ c~ cnegligible * * part cmcell3 f0 f1 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cedgeX f0 * * part cmcell3 f0 f1 c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
+ ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) _6432187)) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) _6432188)) \/ ((_6432187 = _6432188) \/ ((~ (u = _6432187)) \/ (~ (v = _6432188))))))
T c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f3 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f4 c\/ c= f3 f4 c\/ c~ c= f1 f3 c~ c= f2 f4
+ |- (!X. (((packing V) /\ ((saturated V) /\ ((((mcell3 V) ul) = X) /\ ((~ (negligible X)) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))))) ==> ((V INTER X) = (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c= * * part cmcell3 f0 f1 f2 c/\ c~ cnegligible f2 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= * * part cINTER f0 f2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
+ |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!x. ((P x) \/ Q)) = ((!x. (P x)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- (u = v), ((u = v') /\ (v = u')) |- (F = F)
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c= cF cF
+ (!P. (!x. ((x IN P) = (P x)))) |- (!P. (!x. ((~ ((I ((I IN) x)) P)) \/ ((I P) x))))
T c==> ! ! c= cIN b1 b0 * b0 b1 ! ! c\/ c~ cI * * part cI part cIN b1 b0 cI b0 b1
+ (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') ==> ((I ((I IN) u')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))) = ((I ((I IN) u')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))
T c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= f5 f3 c= f5 f4 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c= c==> cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 cI * * part cI part cIN f1 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 cI * * part cI part cIN f1 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0
- |- (((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)) ==> ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)))
T c==> c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF
- ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)), (((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)) ==> ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F))) |- ((((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)) ==> ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F))) /\ ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)))
T c==> c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c==> c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c/\ c==> c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF
+ (!P. (!x. ((x IN P) = (P x)))), (~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) |- F
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 cF
- ((u = v') /\ (v = u')) |- (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') = ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u'))
T c==> c/\ c= f0 f1 c= f2 f3 c= cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3 cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3
+ (!P. (!x. ((x IN P) = (P x)))), (((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) ==> F), ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) |- F
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 cF c==> c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f3 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f4 c~ c= f3 f4 c\/ c/\ c= f1 f3 c= f2 f4 c/\ c= f1 f4 c= f2 f3 c\/ c= f1 f2 c/\ c\/ c= f5 f1 c= f5 f2 c~ cIN f5 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 cF
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ |- (((v' = v') ==> F) = F)
T c= c==> c= f0 f0 cF cF
+ (x = v), (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))) |- (~ ((I ((I IN) v)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f3 c~ cI * * part cI part cIN f1 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f3
+ (!P. (!x. ((x IN P) = (P x)))), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((((I ((I IN) v')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) ==> F) = F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= f5 f3 c= f5 f4 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c= c==> cI * * part cI part cIN f2 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 cF cF
+ (!P. (!x. ((x IN P) = (P x)))), ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- (u = v)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c= f1 f2
- (!P. (!x. ((x IN P) = (P x)))), (~ ((I ((I IN) u')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ ((I ((I IN) u')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))) /\ ((I ((I IN) u')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1 f0 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1 f2 c~ c= f0 f2 c\/ c/\ c= f3 f0 c= f4 f2 c/\ c= f3 f2 c= f4 f0 c\/ c= f3 f4 c/\ c\/ c= f5 f3 c= f5 f4 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1 c/\ c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1 cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1
- (_6432659 = _6432661) |- ((_6432659 = _6432661) /\ ((~ (_6432658 = _6432660)) \/ (((I _6432658) _6432659) = ((I _6432660) _6432661))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f2 f0 * * part cI f3 f1
+ |- (((~ (x IN EMPTY)) ==> ((x IN EMPTY) = F)) = ((x IN EMPTY) = F))
T c= c==> c~ cIN f0 part cEMPTY c= cIN f0 part cEMPTY cF c= cIN f0 part cEMPTY cF
- (x = v) |- (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') = ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v'))
T c==> c= f0 f1 c= cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f2 f3 cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f2 f3
+ (!P. (!x. ((x IN P) = (P x)))) |- ((!P. (!x. ((x IN P) \/ (~ (P x))))) /\ (!P. (!x. ((~ (x IN P)) \/ (P x)))))
T c==> ! ! c= cIN b1 b0 * b0 b1 c/\ ! ! c\/ cIN b1 b0 c~ * b0 b1 ! ! c\/ c~ cIN b1 b0 * b0 b1
+ |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x)
T * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ (!P. (!x. ((x IN P) = (P x)))), (x = u), ((u = u') /\ (v = v')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))), (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))) |- ((x = u) /\ F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c= f0 f1 c==> c/\ c= f1 f2 c= f3 f4 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f2 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f4 c~ c= f2 f4 c\/ c/\ c= f1 f2 c= f3 f4 c/\ c= f1 f4 c= f3 f2 c\/ c= f1 f3 c/\ c\/ c= f0 f1 c= f0 f3 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c==> c/\ c\/ c= f0 f1 c= f0 f3 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c/\ c= f0 f1 cF
+ (u = v), ((u = v') /\ (v = u')) |- ((~ (u' = v')) = (~ (v' = v')))
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c= c~ c= f3 f2 c~ c= f2 f2
+ (~ (negligible ((mcell3 V) ul))), (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((((mcell3 V) ul) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ul)) /\ (~ (negligible ((mcell3 V) ul))))))) /\ ((((VX V) ((mcell3 V) ul)) = (V INTER ((mcell3 V) ul))) ==> ((?u'. (?v'. (((((VX V) ((mcell3 V) ul)) u') /\ ((((VX V) ((mcell3 V) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))
T c==> c~ cnegligible * * part cmcell3 f0 f1 c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= * * part cmcell3 f0 f1 * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c~ cnegligible * * part cmcell3 f0 f1 c==> c= * * part cVX f0 * * part cmcell3 f0 f1 * * part cINTER f0 * * part cmcell3 f0 f1 c= c? / c? / c/\ c/\ cVX f0 * * part cmcell3 f0 f1 b0 c/\ cVX f0 * * part cmcell3 f0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
+ (x = u), ((u = v') /\ (v = u')), (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))) |- (((I ((I IN) v')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) ==> F)
T c==> c= f0 f1 c==> c/\ c= f1 f2 c= f3 f4 c==> c/\ c\/ c= f0 f1 c= f0 f3 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c==> cI * * part cI part cIN f2 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 cF
+ ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- (((I ((I IN) _6432189)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) \/ (~ (_6432189 = v)))
T c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c\/ cI * * part cI part cIN f3 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c~ c= f3 f2
+ |- ((u = u) /\ (v = v))
T c/\ c= f0 f0 c= f1 f1
+ ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((((I ((I IN) u)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) ==> ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u)) = ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u))
T c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c= c==> cI * * part cI part cIN f1 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1
+ (!P. (!x. ((x IN P) = (P x)))), ((u = v') /\ (v = u')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- F
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f1 c~ c= f3 f1 c\/ c/\ c= f0 f3 c= f2 f1 c/\ c= f0 f1 c= f2 f3 c\/ c= f0 f2 c/\ c\/ c= f5 f0 c= f5 f2 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 cF
+ (!P. (!x. ((x IN P) = (P x)))), ((u = v') /\ (v = u')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))), (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))) |- ((x = v) ==> F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f1 c~ c= f3 f1 c\/ c/\ c= f0 f3 c= f2 f1 c/\ c= f0 f1 c= f2 f3 c\/ c= f0 f2 c/\ c\/ c= f5 f0 c= f5 f2 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c==> c/\ c\/ c= f5 f0 c= f5 f2 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c==> c= f5 f2 cF
- |- ((_6432650 = _6432652) ==> ((~ (_6432651 = _6432653)) \/ (((I _6432650) _6432651) = ((I _6432652) _6432653))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ (!P. (!x. ((x IN P) = (P x)))), (x = u), ((u = v') /\ (v = u')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))), (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))) |- ((x = u) /\ F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c= f0 f1 c==> c/\ c= f1 f2 c= f3 f4 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f4 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f2 c~ c= f4 f2 c\/ c/\ c= f1 f4 c= f3 f2 c/\ c= f1 f2 c= f3 f4 c\/ c= f1 f3 c/\ c\/ c= f0 f1 c= f0 f3 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c==> c/\ c\/ c= f0 f1 c= f0 f3 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c/\ c= f0 f1 cF
- (_6432638 = _6432640), (_6432639 = _6432641) |- ((_6432638 = _6432640) /\ (((I _6432640) _6432641) \/ (~ ((I _6432638) _6432639))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cI f1 f3 c~ cI f0 f2
- (~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) /\ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v'))
T c==> c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c~ c= f2 f1 c\/ c/\ c= f3 f2 c= f4 f1 c/\ c= f3 f1 c= f4 f2 c\/ c= f3 f4 c/\ c\/ c= f5 f3 c= f5 f4 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c/\ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1
- (x = v) |- (((~ ((I ((I IN) _6432182)) _6432181)) \/ ((I _6432181) _6432182)) = ((~ ((I ((I IN) _6432182)) _6432181)) \/ ((I _6432181) _6432182)))
T c==> c= f0 f1 c= c\/ c~ cI * * part cI part cIN f2 f3 cI f3 f2 c\/ c~ cI * * part cI part cIN f2 f3 cI f3 f2
+ |- (((!V. (!ul. (!k. (!X. (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((X = (((mcell k) V) ul)) /\ (~ (negligible X)))))) ==> (((VX V) X) = (V INTER X))))))) ==> ((\V. (!ul. (!k. (!X. (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((X = (((mcell k) V) ul)) /\ (~ (negligible X)))))) ==> (((VX V) X) = (V INTER X))))))) V)) = ((\V. (!ul. (!k. (!X. (((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((X = (((mcell k) V) ul)) /\ (~ (negligible X)))))) ==> (((VX V) X) = (V INTER X))))))) V))
T c= c==> ! ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c/\ c= b3 * * * part cmcell b2 b0 b1 c~ cnegligible b3 c= * * part cVX b0 b3 * * part cINTER b0 b3 * / ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c/\ c= b3 * * * part cmcell b2 b0 b1 c~ cnegligible b3 c= * * part cVX b0 b3 * * part cINTER b0 b3 f0 * / ! ! ! c==> c/\ csaturated b0 c/\ cpacking b0 c/\ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b1 c/\ c= b3 * * * part cmcell b2 b0 b1 c~ cnegligible b3 c= * * part cVX b0 b3 * * part cINTER b0 b3 f0
+ (~ (negligible ((mcell3 V) ul))), (packing V), (saturated V), (((VX V) ((mcell3 V) ul)) = (V INTER ((mcell3 V) ul))), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((?u'. (?v'. (((((VX V) ((mcell3 V) ul)) u') /\ ((((VX V) ((mcell3 V) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))
T c==> c~ cnegligible * * part cmcell3 f0 f1 c==> cpacking f0 c==> csaturated f0 c==> c= * * part cVX f0 * * part cmcell3 f0 f1 * * part cINTER f0 * * part cmcell3 f0 f1 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= c? / c? / c/\ c/\ cVX f0 * * part cmcell3 f0 f1 b0 c/\ cVX f0 * * part cmcell3 f0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
+ (x = v), ((u = v') /\ (v = u')), (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))) |- (~ ((I ((I IN) u')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))
T c==> c= f0 f1 c==> c/\ c= f2 f3 c= f1 f4 c==> c/\ c\/ c= f0 f2 c= f0 f1 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c~ cI * * part cI part cIN f4 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5
- |- ((!x'. (((~ (x' = u)) /\ (~ (x' = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))) = ((!x. ((~ (x = u)) /\ (~ (x = v)))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))
T c= ! c\/ c/\ c~ c= b0 f0 c~ c= b0 f1 cIN f2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f3 c\/ ! c/\ c~ c= b0 f0 c~ c= b0 f1 cIN f2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f3
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
- (!P. (!x. ((x IN P) = (P x)))), (?x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))) |- ((?x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))) /\ F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c? / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= b0 f3 c= b0 f4 c~ cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c= b1 b2 c/\ c\/ c~ c= f3 b1 c~ c= f4 b2 c\/ c~ c= f3 b2 c~ c= f4 b1 c/\ c~ c= f3 f4 ! c\/ c/\ c~ c= b1 f3 c~ c= b1 f4 cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c? / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= b0 f3 c= b0 f4 c~ cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c= b1 b2 c/\ c\/ c~ c= f3 b1 c~ c= f4 b2 c\/ c~ c= f3 b2 c~ c= f4 b1 c/\ c~ c= f3 f4 ! c\/ c/\ c~ c= b1 f3 c~ c= b1 f4 cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 cF
+ |- ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))
T c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- (((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) /\ (?x. ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) = (?u'. ((?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u'))))) /\ (?x. ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))))
T c= c/\ c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c? / c\/ c= f1 f2 c/\ c\/ c= b0 f1 c= b0 f2 c~ cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c? / c/\ c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c? / c\/ c= f1 f2 c/\ c\/ c= b1 f1 c= b1 f2 c~ cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y)
T * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1
- |- (((((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)) ==> ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F))) ==> (((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)) ==> ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)))) = (((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)) ==> ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F))))
T c= c==> c==> c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF
+ (~ (negligible ((mcell3 V) ul))), (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- ((((V INTER ((mcell3 V) ul)) = (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))) ==> ((?u'. (?v'. ((((V INTER ((mcell3 V) ul)) u') /\ (((V INTER ((mcell3 V) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))) = (((packing V) /\ ((saturated V) /\ ((((mcell3 V) ul) = ((mcell3 V) ul)) /\ ((~ (negligible ((mcell3 V) ul))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))))) /\ (((V INTER ((mcell3 V) ul)) = (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))) ==> ((?u'. (?v'. ((((V INTER ((mcell3 V) ul)) u') /\ (((V INTER ((mcell3 V) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))
T c==> c~ cnegligible * * part cmcell3 f0 f1 c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= c==> c= * * part cINTER f0 * * part cmcell3 f0 f1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1 c= c? / c? / c/\ c/\ cINTER f0 * * part cmcell3 f0 f1 b0 c/\ cINTER f0 * * part cmcell3 f0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1 c/\ c/\ cpacking f0 c/\ csaturated f0 c/\ c= * * part cmcell3 f0 f1 * * part cmcell3 f0 f1 c/\ c~ cnegligible * * part cmcell3 f0 f1 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c= * * part cINTER f0 * * part cmcell3 f0 f1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1 c= c? / c? / c/\ c/\ cINTER f0 * * part cmcell3 f0 f1 b0 c/\ cINTER f0 * * part cmcell3 f0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ |- ((\ul. (((mcell3 V) ul) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ul))) ul)
T * / c= * * part cmcell3 f0 b0 * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 b0 f1
- |- ((?x'. (((x = u) \/ (x = v)) /\ (~ (x' IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))) = (((x = u) \/ (x = v)) /\ (?x. (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))
T c= c? / c/\ c\/ c= f0 f1 c= f0 f2 c~ cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f3 c/\ c\/ c= f0 f1 c= f0 f2 c? / c~ cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f3
- ((u = v') /\ (v = u')) |- ((((I ((I IN) _6432180)) _6432179) \/ (~ ((I _6432179) _6432180))) = (((I ((I IN) _6432180)) _6432179) \/ (~ ((I _6432179) _6432180))))
T c==> c/\ c= f0 f1 c= f2 f3 c= c\/ cI * * part cI part cIN f4 f5 c~ cI f5 f4 c\/ cI * * part cI part cIN f4 f5 c~ cI f5 f4
- |- ((\v. (!u. ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)))) v)
T * / ! c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b3 c~ c= b2 b3 c\/ c/\ c= b1 b2 c= b0 b3 c/\ c= b1 b3 c= b0 b2 c/\ c~ c= b1 b0 ! c==> c\/ c= b2 b1 c= b2 b0 cIN b2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b3 b2 * b2 b3 cF f1
+ |- (((packing V) /\ ((saturated V) /\ ((((mcell3 V) ul) = ((mcell3 V) ul)) /\ ((~ (negligible ((mcell3 V) ul))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul))))) ==> ((V INTER ((mcell3 V) ul)) = (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c= * * part cmcell3 f0 f1 * * part cmcell3 f0 f1 c/\ c~ cnegligible * * part cmcell3 f0 f1 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= * * part cINTER f0 * * part cmcell3 f0 f1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
+ ((u = u') /\ (v = v')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((u = v) ==> F)
T c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3 c~ c= f1 f3 c\/ c/\ c= f0 f1 c= f2 f3 c/\ c= f0 f3 c= f2 f1 c\/ c= f0 f2 c/\ c\/ c= f5 f0 c= f5 f2 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c==> c= f0 f2 cF
- |- ((!v''. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v''))) /\ ((~ (u = v'')) \/ (~ (v = u')))))) = (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (!v'. (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u')))))))
T c= ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f2 c= f1 f2 c/\ c\/ c~ c= f3 f1 c~ c= f4 b0 c\/ c~ c= f3 b0 c~ c= f4 f1 c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f2 c= f1 f2 ! c/\ c\/ c~ c= f3 f1 c~ c= f4 b0 c\/ c~ c= f3 b0 c~ c= f4 f1
+ ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- (~ (u = v))
T c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c~ c= f1 f2
+ ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) _6432187)) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) _6432188)) \/ (_6432187 = _6432188))) \/ ((~ (u = _6432187)) \/ (~ (v = _6432188))))
T c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f3 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f4 c= f3 f4 c\/ c~ c= f1 f3 c~ c= f2 f4
+ ((V INTER X) = (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))) |- ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) = (V INTER X))
T c==> c= * * part cINTER f0 f1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f2 c= * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f2 * * part cINTER f0 f1
+ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))), ((x = u) ==> F), ((x = v) ==> F) |- F
T c==> c/\ c\/ c= f0 f1 c= f0 f2 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f3 c==> c==> c= f0 f1 cF c==> c==> c= f0 f2 cF cF
+ |- ((((packing V) /\ ((saturated V) /\ ((~ (negligible ((mcell3 V) ul))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)))) ==> (((u INSERT (v INSERT EMPTY)) IN ((edgeX V) ((mcell3 V) ul))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))) = T)
T c= c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c~ cnegligible * * part cmcell3 f0 f1 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cedgeX f0 * * part cmcell3 f0 f1 c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1 cT
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ (!P. (!x. ((x IN P) = (P x)))) |- (((I _6432185) _6432186) \/ (~ ((I ((I IN) _6432186)) _6432185)))
T c==> ! ! c= cIN b1 b0 * b0 b1 c\/ cI f0 f1 c~ cI * * part cI part cIN f1 f0
+ (~ (negligible ((mcell3 V) ul))), (packing V), (saturated V), (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) |- (((((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((((mcell3 V) ul) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ul)) /\ (~ (negligible ((mcell3 V) ul))))))) /\ ((((VX V) ((mcell3 V) ul)) = (V INTER ((mcell3 V) ul))) ==> ((?u'. (?v'. (((((VX V) ((mcell3 V) ul)) u') /\ ((((VX V) ((mcell3 V) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) ==> ((((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((((mcell3 V) ul) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ul)) /\ (~ (negligible ((mcell3 V) ul))))))) ==> (((VX V) ((mcell3 V) ul)) = (V INTER ((mcell3 V) ul)))) ==> ((?u'. (?v'. (((((VX V) ((mcell3 V) ul)) u') /\ ((((VX V) ((mcell3 V) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) = ((((saturated V) /\ ((packing V) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((((mcell3 V) ul) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ul)) /\ (~ (negligible ((mcell3 V) ul))))))) ==> (((VX V) ((mcell3 V) ul)) = (V INTER ((mcell3 V) ul)))) ==> ((?u'. (?v'. (((((VX V) ((mcell3 V) ul)) u') /\ ((((VX V) ((mcell3 V) ul)) v') /\ (~ (u' = v')))) /\ ((u INSERT (v INSERT EMPTY)) = (u' INSERT (v' INSERT EMPTY)))))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))
T c==> c~ cnegligible * * part cmcell3 f0 f1 c==> cpacking f0 c==> csaturated f0 c==> cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= c==> c/\ c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= * * part cmcell3 f0 f1 * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c~ cnegligible * * part cmcell3 f0 f1 c==> c= * * part cVX f0 * * part cmcell3 f0 f1 * * part cINTER f0 * * part cmcell3 f0 f1 c= c? / c? / c/\ c/\ cVX f0 * * part cmcell3 f0 f1 b0 c/\ cVX f0 * * part cmcell3 f0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= * * part cmcell3 f0 f1 * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c~ cnegligible * * part cmcell3 f0 f1 c= * * part cVX f0 * * part cmcell3 f0 f1 * * part cINTER f0 * * part cmcell3 f0 f1 c= c? / c? / c/\ c/\ cVX f0 * * part cmcell3 f0 f1 b0 c/\ cVX f0 * * part cmcell3 f0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> c/\ csaturated f0 c/\ cpacking f0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= * * part cmcell3 f0 f1 * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c~ cnegligible * * part cmcell3 f0 f1 c= * * part cVX f0 * * part cmcell3 f0 f1 * * part cINTER f0 * * part cmcell3 f0 f1 c= c? / c? / c/\ c/\ cVX f0 * * part cmcell3 f0 f1 b0 c/\ cVX f0 * * part cmcell3 f0 f1 b1 c~ c= b0 b1 c= * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
+ (!P. (!x. ((x IN P) = (P x)))) |- ((((\x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))))) x) ==> F) = T)
T c==> ! ! c= cIN b1 b0 * b0 b1 c= c==> * / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= b0 f3 c= b0 f4 c~ cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c= b1 b2 c/\ c\/ c~ c= f3 b1 c~ c= f4 b2 c\/ c~ c= f3 b2 c~ c= f4 b1 c/\ c~ c= f3 f4 ! c\/ c/\ c~ c= b1 f3 c~ c= b1 f4 cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f5 cF cT
+ ((packing V) /\ ((saturated V) /\ ((~ (negligible ((mcell3 V) ul))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)))) |- (((packing V) /\ ((saturated V) /\ ((~ (negligible ((mcell3 V) ul))) /\ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul)))) /\ (((u INSERT (v INSERT EMPTY)) IN ((edgeX V) ((mcell3 V) ul))) = ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ c~ cnegligible * * part cmcell3 f0 f1 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c/\ cpacking f0 c/\ csaturated f0 c/\ c~ cnegligible * * part cmcell3 f0 f1 cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c= cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cedgeX f0 * * part cmcell3 f0 f1 c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f1
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
- |- (((!u. ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F))) ==> ((\u. ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F))) u)) = ((\u. ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F))) u))
T c= c==> ! c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c~ c= b1 b2 c\/ c/\ c= b0 b1 c= f1 b2 c/\ c= b0 b2 c= f1 b1 c/\ c~ c= b0 f1 ! c==> c\/ c= b1 b0 c= b1 f1 cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b2 b1 * b1 b2 cF * / c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c~ c= b1 b2 c\/ c/\ c= b0 b1 c= f1 b2 c/\ c= b0 b2 c= f1 b1 c/\ c~ c= b0 f1 ! c==> c\/ c= b1 b0 c= b1 f1 cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b2 b1 * b1 b2 cF f2 * / c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c~ c= b1 b2 c\/ c/\ c= b0 b1 c= f1 b2 c/\ c= b0 b2 c= f1 b1 c/\ c~ c= b0 f1 ! c==> c\/ c= b1 b0 c= b1 f1 cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b2 b1 * b1 b2 cF f2
- (x = v) |- ((((I ((I IN) _6432180)) _6432179) \/ (~ ((I _6432179) _6432180))) = (((I ((I IN) _6432180)) _6432179) \/ (~ ((I _6432179) _6432180))))
T c==> c= f0 f1 c= c\/ cI * * part cI part cIN f2 f3 c~ cI f3 f2 c\/ cI * * part cI part cIN f2 f3 c~ cI f3 f2
- (_6432639 = _6432641) |- ((_6432639 = _6432641) /\ ((~ (_6432638 = _6432640)) \/ (((I _6432640) _6432641) \/ (~ ((I _6432638) _6432639)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
- (!P. (!x. ((x IN P) = (P x)))), (x = u), ((u = v') /\ (v = u')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))), (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))) |- ((~ F) ==> F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c= f0 f1 c==> c/\ c= f1 f2 c= f3 f4 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f4 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f2 c~ c= f4 f2 c\/ c/\ c= f1 f4 c= f3 f2 c/\ c= f1 f2 c= f3 f4 c\/ c= f1 f3 c/\ c\/ c= f0 f1 c= f0 f3 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c==> c/\ c\/ c= f0 f1 c= f0 f3 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c==> c~ cF cF
+ (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') ==> ((I ((I IN) v')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))) = ((I ((I IN) v')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))
T c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= f5 f3 c= f5 f4 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c= c==> cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 cI * * part cI part cIN f2 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 cI * * part cI part cIN f2 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0
+ (!P. (!x. ((x IN P) = (P x)))), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((((I ((I IN) u')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) ==> F) = F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= f5 f3 c= f5 f4 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c= c==> cI * * part cI part cIN f1 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 cF cF
- (x = v) |- (F = F)
T c==> c= f0 f1 c= cF cF
- (~ ((I ((I IN) v)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))), ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ ((I ((I IN) v)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))) /\ ((I ((I IN) v)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))
T c==> c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1 c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1 b1 c= b0 b1 c/\ c\/ c~ c= f2 b0 c~ c= f0 b1 c\/ c~ c= f2 b1 c~ c= f0 b0 c/\ c~ c= f2 f0 ! c\/ c/\ c~ c= b0 f2 c~ c= b0 f0 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1 c/\ c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1 cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1
+ (packing V) |- ((packing V) = T)
T c==> cpacking f0 c= cpacking f0 cT
+ ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- (((~ (_6432189 = u)) \/ ((I ((I IN) _6432189)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))) /\ ((~ (_6432189 = v)) \/ ((I ((I IN) _6432189)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))))
T c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c/\ c\/ c~ c= f3 f1 cI * * part cI part cIN f3 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c\/ c~ c= f3 f2 cI * * part cI part cIN f3 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0
- ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)) |- ((((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)) ==> ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F))) ==> ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)))
T c==> c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c==> c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF
- |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ (!P. (!x. ((x IN P) = (P x)))), ((\v'. (?x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))))) v') |- (((\v'. (?x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))))) v') /\ F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> * / c? / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c~ c= f1 b0 c\/ c/\ c= f2 f1 c= f3 b0 c/\ c= f2 b0 c= f3 f1 c\/ c= f2 f3 c/\ c\/ c= b1 f2 c= b1 f3 c~ cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b3 c= b2 b3 c/\ c\/ c~ c= f2 b2 c~ c= f3 b3 c\/ c~ c= f2 b3 c~ c= f3 b2 c/\ c~ c= f2 f3 ! c\/ c/\ c~ c= b2 f2 c~ c= b2 f3 cIN b2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f4 c/\ * / c? / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c~ c= f1 b0 c\/ c/\ c= f2 f1 c= f3 b0 c/\ c= f2 b0 c= f3 f1 c\/ c= f2 f3 c/\ c\/ c= b1 f2 c= b1 f3 c~ cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b3 c= b2 b3 c/\ c\/ c~ c= f2 b2 c~ c= f3 b3 c\/ c~ c= f2 b3 c~ c= f3 b2 c/\ c~ c= f2 f3 ! c\/ c/\ c~ c= b2 f2 c~ c= b2 f3 cIN b2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f4 cF
+ |- (((!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) ==> ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s)) = ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s))
T c= c==> ! c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2 * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2
+ (!P. (!x. ((x IN P) = (P x)))), ((u = v') /\ (v = u')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))), (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))), ((x = v) ==> F) |- F
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ c= f0 f1 c= f2 f3 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f1 c~ c= f3 f1 c\/ c/\ c= f0 f3 c= f2 f1 c/\ c= f0 f1 c= f2 f3 c\/ c= f0 f2 c/\ c\/ c= f5 f0 c= f5 f2 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c==> c/\ c\/ c= f5 f0 c= f5 f2 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c==> c==> c= f5 f2 cF cF
- ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) _6432187)) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) _6432188)) \/ (_6432187 = _6432188))) \/ ((~ (u = _6432188)) \/ (~ (v = _6432187))))
T c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f3 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f4 c= f3 f4 c\/ c~ c= f1 f4 c~ c= f2 f3
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- ((?v''. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v'') /\ (~ (u' = v'')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u'))))) = ((?v'. (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v'))))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))
T c= c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c~ c= f1 b0 c\/ c/\ c= f2 f1 c= f3 f4 c/\ c= f2 f4 c= f3 f1 c/\ c? / c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c~ c= f1 b0 c\/ c/\ c= f2 f1 c= f3 f4 c/\ c= f2 f4 c= f3 f1
- |- (((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> (~ (!P. (!x. ((x IN P) = (P x)))))) = T)
T c= c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c~ ! ! c= cIN b1 b0 * b0 b1 cT
- ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ ((I ((I IN) v)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))) ==> ((I ((I IN) v)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))
T c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c==> c~ cI * * part cI part cIN f2 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 cI * * part cI part cIN f2 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0
- (~ F), (u = v), ((u = u') /\ (v = v')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f2 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3 c~ c= f2 f3 c\/ c/\ c= f0 f2 c= f1 f3 c/\ c= f0 f3 c= f1 f2 c\/ c= f0 f1 c/\ c\/ c= f5 f0 c= f5 f1 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c/\ c~ cF cF
- (((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)) ==> ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F))) |- ((((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)) ==> ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F))) /\ (((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)) ==> ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F))))
T c==> c==> c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c/\ c==> c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b1 b0 * b0 b1 cF
- (!P. (!x. ((x IN P) = (P x)))), (~ F), (x = u), ((u = v') /\ (v = u')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))), (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))) |- ((~ F) /\ F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c~ cF c==> c= f0 f1 c==> c/\ c= f1 f2 c= f3 f4 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f4 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f2 c~ c= f4 f2 c\/ c/\ c= f1 f4 c= f3 f2 c/\ c= f1 f2 c= f3 f4 c\/ c= f1 f3 c/\ c\/ c= f0 f1 c= f0 f3 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c==> c/\ c\/ c= f0 f1 c= f0 f3 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c/\ c~ cF cF
- |- ((!x'. ((x' IN P) \/ (~ (P x)))) = ((!x. (x IN P)) \/ (~ (P x))))
T c= ! c\/ cIN b0 f0 c~ * f0 f1 c\/ ! cIN b0 f0 c~ * f0 f1
- |- (((!v. (!u. ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)))) ==> ((\v. (!u. ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)))) v)) = ((\v. (!u. ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F)))) v))
T c= c==> ! ! c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b3 c~ c= b2 b3 c\/ c/\ c= b1 b2 c= b0 b3 c/\ c= b1 b3 c= b0 b2 c/\ c~ c= b1 b0 ! c==> c\/ c= b2 b1 c= b2 b0 cIN b2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b3 b2 * b2 b3 cF * / ! c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b3 c~ c= b2 b3 c\/ c/\ c= b1 b2 c= b0 b3 c/\ c= b1 b3 c= b0 b2 c/\ c~ c= b1 b0 ! c==> c\/ c= b2 b1 c= b2 b0 cIN b2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b3 b2 * b2 b3 cF f1 * / ! c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b3 c~ c= b2 b3 c\/ c/\ c= b1 b2 c= b0 b3 c/\ c= b1 b3 c= b0 b2 c/\ c~ c= b1 b0 ! c==> c\/ c= b2 b1 c= b2 b0 cIN b2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c==> ! ! c= cIN b3 b2 * b2 b3 cF f1
- (!P. (!x. ((x IN P) = (P x)))), (?v'. (?x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))))) |- ((?v'. (?x. ((((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) \/ ((!u'. (!v'. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))))) /\ F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c? / c? / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c~ c= f1 b0 c\/ c/\ c= f2 f1 c= f3 b0 c/\ c= f2 b0 c= f3 f1 c\/ c= f2 f3 c/\ c\/ c= b1 f2 c= b1 f3 c~ cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b3 c= b2 b3 c/\ c\/ c~ c= f2 b2 c~ c= f3 b3 c\/ c~ c= f2 b3 c~ c= f3 b2 c/\ c~ c= f2 f3 ! c\/ c/\ c~ c= b2 f2 c~ c= b2 f3 cIN b2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c? / c? / c\/ c/\ c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c~ c= f1 b0 c\/ c/\ c= f2 f1 c= f3 b0 c/\ c= f2 b0 c= f3 f1 c\/ c= f2 f3 c/\ c\/ c= b1 f2 c= b1 f3 c~ cIN b1 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ ! ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b2 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b3 c= b2 b3 c/\ c\/ c~ c= f2 b2 c~ c= f3 b3 c\/ c~ c= f2 b3 c~ c= f3 b2 c/\ c~ c= f2 f3 ! c\/ c/\ c~ c= b2 f2 c~ c= b2 f3 cIN b2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 cF
- |- (T = (((~ ((I ((I IN) _6432186)) _6432185)) \/ ((I _6432185) _6432186)) = (((I _6432185) _6432186) \/ (~ ((I ((I IN) _6432186)) _6432185)))))
T c= cT c= c\/ c~ cI * * part cI part cIN f0 f1 cI f1 f0 c\/ cI f1 f0 c~ cI * * part cI part cIN f0 f1
- |- ((~ (_6432654 = _6432656)) \/ ((~ (_6432655 = _6432657)) \/ (((I _6432654) _6432655) = ((I _6432656) _6432657))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
- |- ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- (u = v), ((u = v') /\ (v = u')) |- ((((I ((I IN) _6432172)) _6432171) \/ (~ ((I _6432171) _6432172))) = (((I ((I IN) _6432172)) _6432171) \/ (~ ((I _6432171) _6432172))))
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c= c\/ cI * * part cI part cIN f4 f5 c~ cI f5 f4 c\/ cI * * part cI part cIN f4 f5 c~ cI f5 f4
- (!P. (!x. ((x IN P) = (P x)))), ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ (u = v)) ==> (u = v))
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c==> c~ c= f1 f2 c= f1 f2
- ((u = v') /\ (v = u')) |- (F = F)
T c==> c/\ c= f0 f1 c= f2 f3 c= cF cF
- (!P. (!x. ((x IN P) = (P x)))), (~ (u = v)), ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ (u = v)) /\ (u = v))
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c~ c= f0 f1 c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f2 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f2 b1 c= b0 b1 c/\ c\/ c~ c= f0 b0 c~ c= f1 b1 c\/ c~ c= f0 b1 c~ c= f1 b0 c/\ c~ c= f0 f1 ! c\/ c/\ c~ c= b0 f0 c~ c= b0 f1 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f2 c/\ c~ c= f0 f1 c= f0 f1
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- (!P. (!x. ((x IN P) = (P x)))), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ ((I ((I IN) u')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))) ==> ((I ((I IN) u')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= f5 f3 c= f5 f4 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c==> c~ cI * * part cI part cIN f1 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 cI * * part cI part cIN f1 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0
- (u = v), ((u = v') /\ (v = u')) |- (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') = ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v'))
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c= cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f2 cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f2
- (_6432638 = _6432640), (_6432639 = _6432641) |- (((I _6432640) _6432641) \/ (~ ((I _6432638) _6432639)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
- (~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) |- ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) /\ (~ (!P. (!x. ((x IN P) = (P x))))))
T c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b1 c~ c= b0 b1 c\/ c/\ c= f1 b0 c= f2 b1 c/\ c= f1 b1 c= f2 b0 c/\ c~ c= f1 f2 ! c==> c\/ c= b0 f1 c= b0 f2 cIN b0 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 c~ ! ! c= cIN b1 b0 * b0 b1
- |- ((!ul. (!v. (!u. ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> (~ (!P. (!x. ((x IN P) = (P x))))))))) = (!ul. (!v. (!u. ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F))))))
T c= ! ! ! c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 b0 b3 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 b0 b4 c~ c= b3 b4 c\/ c/\ c= b2 b3 c= b1 b4 c/\ c= b2 b4 c= b1 b3 c/\ c~ c= b2 b1 ! c==> c\/ c= b3 b2 c= b3 b1 cIN b3 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 b0 c~ ! ! c= cIN b4 b3 * b3 b4 ! ! ! c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 b0 b3 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 b0 b4 c~ c= b3 b4 c\/ c/\ c= b2 b3 c= b1 b4 c/\ c= b2 b4 c= b1 b3 c/\ c~ c= b2 b1 ! c==> c\/ c= b3 b2 c= b3 b1 cIN b3 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 b0 c==> ! ! c= cIN b4 b3 * b3 b4 cF
- ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) _6432187)) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) _6432188)) \/ ((_6432187 = _6432188) \/ ((~ (u = _6432188)) \/ (~ (v = _6432187))))))
T c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f3 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f4 c\/ c= f3 f4 c\/ c~ c= f1 f4 c~ c= f2 f3
- ((u = v') /\ (v = u')) |- ((~ ((I ((I IN) u')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))) = (~ ((I ((I IN) u')) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))))
T c==> c/\ c= f0 f1 c= f2 f3 c= c~ cI * * part cI part cIN f3 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c~ cI * * part cI part cIN f3 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4
- ((u = v') /\ (v = u')) |- (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') = ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v'))
T c==> c/\ c= f0 f1 c= f2 f3 c= cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f1 cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f1
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- |- ((\ul. (!v. (!u. ((~ ((?u'. (?v'. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))))) = ((~ (u = v)) /\ (!x. (((x = u) \/ (x = v)) ==> (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> F))))) ul)
T * / ! ! c==> c~ c= c? / c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 b0 b3 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 b0 b4 c~ c= b3 b4 c\/ c/\ c= b2 b3 c= b1 b4 c/\ c= b2 b4 c= b1 b3 c/\ c~ c= b2 b1 ! c==> c\/ c= b3 b2 c= b3 b1 cIN b3 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 b0 c==> ! ! c= cIN b4 b3 * b3 b4 cF f0
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- (~ ((I ((I IN) u)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))), ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ ((I ((I IN) u)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))) /\ ((I ((I IN) u)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))
T c==> c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1 c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1 b1 c= b0 b1 c/\ c\/ c~ c= f0 b0 c~ c= f2 b1 c\/ c~ c= f0 b1 c~ c= f2 b0 c/\ c~ c= f0 f2 ! c\/ c/\ c~ c= b0 f0 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1 c/\ c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1 cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f1
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- ((!v''. (((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v'')) \/ (u' = v''))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u')))))) = ((!v'. ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u')) \/ ((~ ((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v')) \/ (u' = v')))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))
T c= ! c\/ c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c= f1 b0 c/\ c\/ c~ c= f2 f1 c~ c= f3 f4 c\/ c~ c= f2 f4 c~ c= f3 f1 c\/ ! c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c\/ c~ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 b0 c= f1 b0 c/\ c\/ c~ c= f2 f1 c~ c= f3 f4 c\/ c~ c= f2 f4 c~ c= f3 f1
- |- ((_6432639 = _6432641) ==> ((~ (_6432638 = _6432640)) \/ (((I _6432640) _6432641) \/ (~ ((I _6432638) _6432639)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
- (_6432650 = _6432652) |- ((_6432650 = _6432652) /\ ((~ (_6432651 = _6432653)) \/ (((I _6432650) _6432651) = ((I _6432652) _6432653))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
- ((u = v') /\ (v = u')) |- ((u = v') = (u = v'))
T c==> c/\ c= f0 f1 c= f2 f3 c= c= f0 f1 c= f0 f1
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- ((~ (_6432650 = _6432652)) \/ ((~ (_6432651 = _6432653)) \/ (((I _6432650) _6432651) = ((I _6432652) _6432653))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
- (_6432639 = _6432641) |- ((_6432638 = _6432640) ==> (((I _6432640) _6432641) \/ (~ ((I _6432638) _6432639))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
- (u = v), ((u = v') /\ (v = u')) |- (((~ ((I ((I IN) _6432174)) _6432173)) \/ ((I _6432173) _6432174)) = ((~ ((I ((I IN) _6432174)) _6432173)) \/ ((I _6432173) _6432174)))
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c= c\/ c~ cI * * part cI part cIN f4 f5 cI f5 f4 c\/ c~ cI * * part cI part cIN f4 f5 cI f5 f4
- |- ((!P. (P P)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- (_6432650 = _6432652) |- ((_6432651 = _6432653) ==> (((I _6432650) _6432651) = ((I _6432652) _6432653)))
T c==> c= f0 f1 c==> c= f2 f3 c= cI f0 f2 cI f1 f3
- (u = v), ((u = u') /\ (v = v')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f2 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3 c~ c= f2 f3 c\/ c/\ c= f0 f2 c= f1 f3 c/\ c= f0 f3 c= f1 f2 c\/ c= f0 f1 c/\ c\/ c= f5 f0 c= f5 f1 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c==> c~ cF cF
- ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ ((I ((I IN) u)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))) ==> ((I ((I IN) u)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))
T c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c==> c~ cI * * part cI part cIN f1 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 cI * * part cI part cIN f1 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0
- ((u = v') /\ (v = u')) |- ((~ ((I ((I IN) u)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))) = (~ ((I ((I IN) u)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul)))))
T c==> c/\ c= f0 f1 c= f2 f3 c= c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4
- |- ((?v''. ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v'')) \/ ((u = v'') /\ (v = u'))))) = ((((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) u') /\ (((set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)) v') /\ (~ (u' = v')))) /\ (?v'. (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u'))))))
T c= c? / c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 b0 c/\ c= f3 b0 c= f4 f1 c/\ c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f0 f2 c~ c= f1 f2 c? / c\/ c/\ c= f3 f1 c= f4 b0 c/\ c= f3 b0 c= f4 f1
- (_6432654 = _6432656) |- ((_6432654 = _6432656) /\ ((~ (_6432655 = _6432657)) \/ (((I _6432654) _6432655) = ((I _6432656) _6432657))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
- |- (((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) ==> ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)) = ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
- (u = v), ((u = v') /\ (v = u')) |- (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') = ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v'))
T c==> c= f0 f1 c==> c/\ c= f0 f2 c= f1 f3 c= cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f3 cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f4 f2
- |- ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
- (!P. (!x. ((x IN P) = (P x)))), (~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v)), ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v)) /\ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v))
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f2 b0 c~ c= f1 b1 c\/ c~ c= f2 b1 c~ c= f1 b0 c/\ c~ c= f2 f1 ! c\/ c/\ c~ c= b0 f2 c~ c= b0 f1 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c/\ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1
- |- (((\t. (f t)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- ((u = v') /\ (v = u')) |- ((~ (u' = v')) = (~ (u' = v')))
T c==> c/\ c= f0 f1 c= f2 f3 c= c~ c= f3 f1 c~ c= f3 f1
- (!P. (!x. ((x IN P) = (P x)))), ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ F) ==> F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c==> c~ cF cF
- (~ (v = v)) |- ((~ (v = v)) /\ (v = v))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- (!P. (!x. ((x IN P) = (P x)))), (x = v), ((u = u') /\ (v = v')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))), (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))) |- ((~ F) ==> F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c= f0 f1 c==> c/\ c= f2 f3 c= f1 f4 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f3 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f4 c~ c= f3 f4 c\/ c/\ c= f2 f3 c= f1 f4 c/\ c= f2 f4 c= f1 f3 c\/ c= f2 f1 c/\ c\/ c= f0 f2 c= f0 f1 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c==> c/\ c\/ c= f0 f2 c= f0 f1 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c==> c~ cF cF
- (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) ==> ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v'))
T c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f1 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 c~ c= f1 f2 c\/ c/\ c= f3 f1 c= f4 f2 c/\ c= f3 f2 c= f4 f1 c\/ c= f3 f4 c/\ c\/ c= f5 f3 c= f5 f4 c~ cI * * part cI part cIN f5 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c==> c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2
- ((u = u') /\ (v = v')) |- ((~ (u' = v')) = (~ (u' = v')))
T c==> c/\ c= f0 f1 c= f2 f3 c= c~ c= f1 f3 c~ c= f1 f3
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- (!P. (!x. ((x IN P) = (P x)))), ((!u'. (!v'. (((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u')) \/ ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v')) \/ (u' = v'))) \/ (((~ (u = u')) \/ (~ (v = v'))) /\ ((~ (u = v')) \/ (~ (v = u'))))))) /\ ((~ (u = v)) /\ (!x. (((~ (x = u)) /\ (~ (x = v))) \/ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))) |- ((~ ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v)) ==> ((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v))
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c/\ ! ! c\/ c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b0 c\/ c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 b1 c= b0 b1 c/\ c\/ c~ c= f1 b0 c~ c= f2 b1 c\/ c~ c= f1 b1 c~ c= f2 b0 c/\ c~ c= f1 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 cI * * part cI part cIN b0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 c==> c~ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2 cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f0 f2
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- ((!x'. ((~ (x' IN P)) \/ (P x))) = ((!x. (~ (x IN P))) \/ (P x)))
T c= ! c\/ c~ cIN b0 f0 * f0 f1 c\/ ! c~ cIN b0 f0 * f0 f1
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- ((u = v') /\ (v = u')) |- (((~ ((I ((I IN) _6432182)) _6432181)) \/ ((I _6432181) _6432182)) = ((~ ((I ((I IN) _6432182)) _6432181)) \/ ((I _6432181) _6432182)))
T c==> c/\ c= f0 f1 c= f2 f3 c= c\/ c~ cI * * part cI part cIN f4 f5 cI f5 f4 c\/ c~ cI * * part cI part cIN f4 f5 cI f5 f4
- (!P. (!x. ((x IN P) = (P x)))), (x = u), ((u = u') /\ (v = v')), (((((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) u') /\ (((I ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))) v') /\ (~ (u' = v')))) /\ (((u = u') /\ (v = v')) \/ ((u = v') /\ (v = u')))) /\ ((u = v) \/ (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))))), (((x = u) \/ (x = v)) /\ (~ ((I ((I IN) x)) ((I set_of_list) ((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ul))))) |- ((~ F) ==> F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c= f0 f1 c==> c/\ c= f1 f2 c= f3 f4 c==> c/\ c/\ c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f2 c/\ cI * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 f4 c~ c= f2 f4 c\/ c/\ c= f1 f2 c= f3 f4 c/\ c= f1 f4 c= f3 f2 c\/ c= f1 f3 c/\ c\/ c= f0 f1 c= f0 f3 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c==> c/\ c\/ c= f0 f1 c= f0 f3 c~ cI * * part cI part cIN f0 * * part cI part cset_of_list cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 f5 c==> c~ cF cF
- |- ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 * f1 b1 b1 * f1 f0
- |- ((?x. ((P x) /\ Q)) = ((?x. (P x)) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((?x'. (((x' = u) \/ (x' = v)) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul)))))) = ((?x. ((x = u) \/ (x = v))) /\ (~ (x IN (set_of_list ((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ul))))))
T c= c? / c/\ c\/ c= b0 f0 c= b0 f1 c~ cIN f2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f3 c/\ c? / c\/ c= b0 f0 c= b0 f1 c~ cIN f2 * part cset_of_list ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 f3
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((~ (_6432659 = _6432661)) \/ ((~ (_6432658 = _6432660)) \/ (((I _6432658) _6432659) = ((I _6432660) _6432661))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f2 f0 * * part cI f3 f1
