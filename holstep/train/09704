N Rogers.MHFTTZN3
C |- (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> ((((hull affine) ((voronoi_list V) ul)) INTER ((hull affine) (set_of_list ul))) = ((circumcenter (set_of_list ul)) INSERT EMPTY))))))
T c==> c/\ cpacking f0 cbarV f0 f1 f2 c= * * part cINTER * * part chull part caffine * * part cvoronoi_list f0 f2 * * part chull part caffine * part cset_of_list f2 * * part cINSERT ccircumcenter * part cset_of_list f2 part cEMPTY
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LE_REFL
A |- (!n. (n <= n))
T c<= f0 f0
D LE_TRANS
A |- (!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p)))))
T c==> c/\ c<= f0 f1 c<= f1 f2 c<= f0 f2
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D int_sub_th
A |- (!x. (!y. ((real_of_int ((int_sub x) y)) = ((real_sub (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_sub f0 f1 creal_sub creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_EQ
A |- (!x. (!y. ((~ (x = y)) = (((int_lt x) y) \/ ((int_lt y) x)))))
T c= c~ c= f0 f1 c\/ cint_lt f0 f1 cint_lt f1 f0
D INT_NOT_LE
A |- (!x. (!y. ((~ ((int_le x) y)) = ((int_lt y) x))))
T c= c~ cint_le f0 f1 cint_lt f1 f0
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_EQ
A |- (!m. (!n. (((int_of_num m) = (int_of_num n)) = (m = n))))
T c= c= cint_of_num f0 cint_of_num f1 c= f0 f1
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D Misc_defs_and_lemmas.IN_ELIM_THM'
A |- ((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_INTERS
A |- (!s. (!x. ((x IN (INTERS s)) = (!t. ((t IN s) ==> (x IN t))))))
T c= cIN f0 * part cINTERS f1 ! c==> cIN b0 f1 cIN f0 b0
D IN_SING
A |- (!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y))))
T c= cIN f0 * * part cINSERT f1 part cEMPTY c= f0 f1
D MEMBER_NOT_EMPTY
A |- (!s. ((?x. (x IN s)) = (~ (s = EMPTY))))
T c= c? / cIN b0 f0 c~ c= f0 part cEMPTY
D FINITE_SET_OF_LIST
A |- (!l. (FINITE (set_of_list l)))
T cFINITE * part cset_of_list f0
D CARD_SET_OF_LIST_LE
A |- (!l. ((CARD (set_of_list l)) <= (LENGTH l)))
T c<= cCARD * part cset_of_list f0 cLENGTH f0
D DIST_SYM
A |- (!x. (!y. ((distance (x , y)) = (distance (y , x)))))
T c= cdistance c, f0 f1 cdistance c, f1 f0
D AFF_DIM_LE_CARD
A |- (!s. ((FINITE s) ==> ((int_le (aff_dim s)) ((int_sub (int_of_num (CARD s))) (int_of_num (NUMERAL (BIT1 _0)))))))
T c==> cFINITE f0 cint_le caff_dim f0 cint_sub cint_of_num cCARD f0 cint_of_num cNUMERAL cBIT1 c_0
D AFFINE_INDEPENDENT_IFF_CARD
A |- (!s. ((~ (affine_dependent s)) = ((FINITE s) /\ ((aff_dim s) = ((int_sub (int_of_num (CARD s))) (int_of_num (NUMERAL (BIT1 _0))))))))
T c= c~ caffine_dependent f0 c/\ cFINITE f0 c= caff_dim f0 cint_sub cint_of_num cCARD f0 cint_of_num cNUMERAL cBIT1 c_0
D Sphere.BARV
A |- (!k. (!ul. (!V. ((((barV V) k) ul) = (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))))))))
T c= cbarV f0 f1 f2 c/\ c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f2 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0
D Sphere.bis
A |- (!u. (!v. (((bis u) v) = (GSPEC (\GEN%PVAR%5245. (?x. (((SETSPEC GEN%PVAR%5245) ((distance (x , u)) = (distance (x , v)))) x)))))))
T c= * * part cbis f0 f1 * part cGSPEC / c? / cSETSPEC b0 c= cdistance c, b1 f0 cdistance c, b1 f1 b1
D Packing3.HD_IN_SET_OF_LIST
A |- (!ul. (((NUMERAL (BIT1 _0)) <= (LENGTH ul)) ==> ((HD ul) IN (set_of_list ul))))
T c==> c<= cNUMERAL cBIT1 c_0 cLENGTH f0 cIN cHD f0 * part cset_of_list f0
D Rogers.OAPVION1
A |- (!S. (((~ (S = EMPTY)) /\ (~ (affine_dependent S))) ==> ((circumcenter S) IN ((hull affine) S))))
T c==> c/\ c~ c= f0 part cEMPTY c~ caffine_dependent f0 cIN ccircumcenter f0 * * part chull part caffine f0
D Rogers.OAPVION2
A |- (!S. ((~ (affine_dependent S)) ==> (!w. ((w IN S) ==> ((radV S) = (distance ((circumcenter S) , w)))))))
T c==> c~ caffine_dependent f0 ! c==> cIN b0 f0 c= cradV f0 cdistance c, ccircumcenter f0 b0
D Rogers.OAPVION3
A |- (!S. ((~ (affine_dependent S)) ==> (!p. (((p IN ((hull affine) S)) /\ (?c. (!w. ((w IN S) ==> ((distance (p , w)) = c))))) ==> (p = (circumcenter S))))))
T c==> c~ caffine_dependent f0 ! c==> c/\ cIN b0 * * part chull part caffine f0 c? / ! c==> cIN b2 f0 c= cdistance c, b0 b2 b1 c= b0 ccircumcenter f0
D Rogers.MHFTTZN_lemma
A |- (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((hull affine) ((voronoi_list V) ul)) = (INTERS (GSPEC (\GEN%PVAR%6122. (?u. (((SETSPEC GEN%PVAR%6122) (u IN (set_of_list ul))) ((bis (HD ul)) u)))))))))))
T c==> c/\ cpacking f0 cbarV f0 f1 f2 c= * * part chull part caffine * * part cvoronoi_list f0 f2 * part cINTERS * part cGSPEC / c? / cSETSPEC b0 cIN b1 * part cset_of_list f2 * * part cbis cHD f2 b1
D Rogers.MHFTTZN_lemma2
A |- (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((aff_dim (set_of_list ul)) = (int_of_num k)) /\ (!u. (!v. (((u IN ((hull affine) ((voronoi_list V) ul))) /\ (v IN ((hull affine) (set_of_list ul)))) ==> (((dot ((vector_sub u) (circumcenter (set_of_list ul)))) ((vector_sub v) (circumcenter (set_of_list ul)))) = (real_of_num (NUMERAL _0)))))))))))
T c==> c/\ cpacking f0 cbarV f0 f1 f2 c/\ c= caff_dim * part cset_of_list f2 cint_of_num f1 ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cvoronoi_list f0 f2 cIN b1 * * part chull part caffine * part cset_of_list f2 c= cdot cvector_sub b0 ccircumcenter * part cset_of_list f2 cvector_sub b1 ccircumcenter * part cset_of_list f2 creal_of_num cNUMERAL c_0
- (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))) |- ((\t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))) t)
T c==> ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN f1 b0 * / c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN f1 b0 f2
+ ((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) |- (T = ((NUMERAL (BIT1 _0)) <= (LENGTH ul)))
T c==> c= cLENGTH f0 c+ f1 cNUMERAL cBIT1 c_0 c= cT c<= cNUMERAL cBIT1 c_0 cLENGTH f0
+ |- ((!k. (((packing V) /\ (((barV V) k) ul)) ==> ((((hull affine) ((voronoi_list V) ul)) INTER ((hull affine) (set_of_list ul))) = ((circumcenter (set_of_list ul)) INSERT EMPTY)))) = T)
T c= ! c==> c/\ cpacking f0 cbarV f0 b0 f1 c= * * part cINTER * * part chull part caffine * * part cvoronoi_list f0 f1 * * part chull part caffine * part cset_of_list f1 * * part cINSERT ccircumcenter * part cset_of_list f1 part cEMPTY cT
+ (~ (affine_dependent (set_of_list ul))), (~ ((set_of_list ul) = EMPTY)) |- (((x = (circumcenter (set_of_list ul))) ==> (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))) = ((x = (circumcenter (set_of_list ul))) ==> ((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))) /\ (x IN ((hull affine) (set_of_list ul))))))
T c==> c~ caffine_dependent * part cset_of_list f0 c==> c~ c= * part cset_of_list f0 part cEMPTY c= c==> c= f1 ccircumcenter * part cset_of_list f0 ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN ccircumcenter * part cset_of_list f0 b0 c==> c= f1 ccircumcenter * part cset_of_list f0 c/\ ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN f1 b0 cIN f1 * * part chull part caffine * part cset_of_list f0
+ |- ((\k. (((packing V) /\ (((barV V) k) ul)) ==> (((aff_dim (set_of_list ul)) = (int_of_num k)) /\ (!u. (!v. (((u IN ((hull affine) ((voronoi_list V) ul))) /\ (v IN ((hull affine) (set_of_list ul)))) ==> (((dot ((vector_sub u) (circumcenter (set_of_list ul)))) ((vector_sub v) (circumcenter (set_of_list ul)))) = (real_of_num (NUMERAL _0))))))))) k)
T * / c==> c/\ cpacking f0 cbarV f0 b0 f1 c/\ c= caff_dim * part cset_of_list f1 cint_of_num b0 ! ! c==> c/\ cIN b1 * * part chull part caffine * * part cvoronoi_list f0 f1 cIN b2 * * part chull part caffine * part cset_of_list f1 c= cdot cvector_sub b1 ccircumcenter * part cset_of_list f1 cvector_sub b2 ccircumcenter * part cset_of_list f1 creal_of_num cNUMERAL c_0 f2
+ |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- (((NUMERAL (BIT1 _0)) <= (k + (NUMERAL (BIT1 _0)))) = T)
T c= c<= cNUMERAL cBIT1 c_0 c+ f0 cNUMERAL cBIT1 c_0 cT
- (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))) |- (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t)) = T)
T c==> ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN f1 b0 c= c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f2 * * part cbis cHD f0 b0 cIN f1 f2 cT
+ |- (((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((aff_dim (set_of_list ul)) = (int_of_num k)) /\ (!u. (!v. (((u IN ((hull affine) ((voronoi_list V) ul))) /\ (v IN ((hull affine) (set_of_list ul)))) ==> (((dot ((vector_sub u) (circumcenter (set_of_list ul)))) ((vector_sub v) (circumcenter (set_of_list ul)))) = (real_of_num (NUMERAL _0))))))))))) ==> ((\V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((aff_dim (set_of_list ul)) = (int_of_num k)) /\ (!u. (!v. (((u IN ((hull affine) ((voronoi_list V) ul))) /\ (v IN ((hull affine) (set_of_list ul)))) ==> (((dot ((vector_sub u) (circumcenter (set_of_list ul)))) ((vector_sub v) (circumcenter (set_of_list ul)))) = (real_of_num (NUMERAL _0))))))))))) V)) = ((\V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((aff_dim (set_of_list ul)) = (int_of_num k)) /\ (!u. (!v. (((u IN ((hull affine) ((voronoi_list V) ul))) /\ (v IN ((hull affine) (set_of_list ul)))) ==> (((dot ((vector_sub u) (circumcenter (set_of_list ul)))) ((vector_sub v) (circumcenter (set_of_list ul)))) = (real_of_num (NUMERAL _0))))))))))) V))
T c= c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= caff_dim * part cset_of_list b1 cint_of_num b2 ! ! c==> c/\ cIN b3 * * part chull part caffine * * part cvoronoi_list b0 b1 cIN b4 * * part chull part caffine * part cset_of_list b1 c= cdot cvector_sub b3 ccircumcenter * part cset_of_list b1 cvector_sub b4 ccircumcenter * part cset_of_list b1 creal_of_num cNUMERAL c_0 * / ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= caff_dim * part cset_of_list b1 cint_of_num b2 ! ! c==> c/\ cIN b3 * * part chull part caffine * * part cvoronoi_list b0 b1 cIN b4 * * part chull part caffine * part cset_of_list b1 c= cdot cvector_sub b3 ccircumcenter * part cset_of_list b1 cvector_sub b4 ccircumcenter * part cset_of_list b1 creal_of_num cNUMERAL c_0 f0 * / ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c/\ c= caff_dim * part cset_of_list b1 cint_of_num b2 ! ! c==> c/\ cIN b3 * * part chull part caffine * * part cvoronoi_list b0 b1 cIN b4 * * part chull part caffine * part cset_of_list b1 c= cdot cvector_sub b3 ccircumcenter * part cset_of_list b1 cvector_sub b4 ccircumcenter * part cset_of_list b1 creal_of_num cNUMERAL c_0 f0
- |- ((((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) = (((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl)))) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> q')))) = (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> q'))))
T c= c==> c= c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 c==> c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 c= cvoronoi_nondg f2 f0 f3 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0 c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 f3 c==> c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 c= cvoronoi_nondg f2 f0 f3 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0 c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 f3
+ |- (((!p'. (!q'. (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) = p') ==> ((p' ==> ((x IN t) = q')) ==> (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t)) = (p' ==> q')))))) ==> ((\p'. (!q'. (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) = p') ==> ((p' ==> ((x IN t) = q')) ==> (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t)) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) = p') ==> ((p' ==> ((x IN t) = q')) ==> (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t)) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c? / c/\ cIN b2 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b2 b0 c==> c==> b0 c= cIN f2 f1 b1 c= c==> c? / c/\ cIN b2 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b2 cIN f2 f1 c==> b0 b1 * / ! c==> c= c? / c/\ cIN b2 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b2 b0 c==> c==> b0 c= cIN f2 f1 b1 c= c==> c? / c/\ cIN b2 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b2 cIN f2 f1 c==> b0 b1 f3 * / ! c==> c= c? / c/\ cIN b2 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b2 b0 c==> c==> b0 c= cIN f2 f1 b1 c= c==> c? / c/\ cIN b2 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b2 cIN f2 f1 c==> b0 b1 f3
+ |- (((!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) ==> (!m. (!p. ((?n. ((m <= n) /\ (n <= p))) ==> (m <= p))))) = (!m. (!p. ((?n. ((m <= n) /\ (n <= p))) ==> (m <= p)))))
T c= c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 ! ! c==> c? / c/\ c<= b0 b2 c<= b2 b1 c<= b0 b1 ! ! c==> c? / c/\ c<= b0 b2 c<= b2 b1 c<= b0 b1
+ |- ((((packing V) /\ (((barV V) k) ul)) = p') ==> ((p' ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) = q')) ==> ((((packing V) /\ (((barV V) k) ul)) ==> ((LENGTH ul) = (k + (NUMERAL (BIT1 _0))))) = (p' ==> q'))))
T c==> c= c/\ cpacking f0 cbarV f0 f1 f2 f3 c==> c==> f3 c= c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 f4 c= c==> c/\ cpacking f0 cbarV f0 f1 f2 c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 c==> f3 f4
+ |- (((!q'. (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) = p') ==> ((p' ==> ((x IN t) = q')) ==> (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t)) = (p' ==> q'))))) ==> ((\q'. (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) = p') ==> ((p' ==> ((x IN t) = q')) ==> (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t)) = (p' ==> q'))))) q')) = ((\q'. (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) = p') ==> ((p' ==> ((x IN t) = q')) ==> (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t)) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c? / c/\ cIN b1 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b1 f2 c==> c==> f2 c= cIN f3 f1 b0 c= c==> c? / c/\ cIN b1 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b1 cIN f3 f1 c==> f2 b0 * / c==> c= c? / c/\ cIN b1 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b1 f2 c==> c==> f2 c= cIN f3 f1 b0 c= c==> c? / c/\ cIN b1 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b1 cIN f3 f1 c==> f2 b0 f4 * / c==> c= c? / c/\ cIN b1 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b1 f2 c==> c==> f2 c= cIN f3 f1 b0 c= c==> c? / c/\ cIN b1 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b1 cIN f3 f1 c==> f2 b0 f4
+ |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ ((packing V) /\ (((barV V) k) ul)) |- (((packing V) /\ (((barV V) k) ul)) /\ ((((hull affine) ((voronoi_list V) ul)) INTER ((hull affine) (set_of_list ul))) = ((circumcenter (set_of_list ul)) INSERT EMPTY)))
T c==> c/\ cpacking f0 cbarV f0 f1 f2 c/\ c/\ cpacking f0 cbarV f0 f1 f2 c= * * part cINTER * * part chull part caffine * * part cvoronoi_list f0 f2 * * part chull part caffine * part cset_of_list f2 * * part cINSERT ccircumcenter * part cset_of_list f2 part cEMPTY
- |- ((!w. ((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul))))))) ==> (!w. ((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul))))))))
T c==> ! c==> cIN b0 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, b0 ccircumcenter * part cset_of_list f0 ! c==> cIN b0 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, b0 ccircumcenter * part cset_of_list f0
+ (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))), (x IN ((hull affine) (set_of_list ul))) |- ((!p. (((p IN ((hull affine) (set_of_list ul))) /\ (?c. (!w. ((w IN (set_of_list ul)) ==> ((distance (p , w)) = c))))) ==> (p = (circumcenter (set_of_list ul))))) ==> (x = (circumcenter (set_of_list ul))))
T c==> ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN f1 b0 c==> cIN f1 * * part chull part caffine * part cset_of_list f0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * part cset_of_list f0 c? / ! c==> cIN b2 * part cset_of_list f0 c= cdistance c, b0 b2 b1 c= b0 ccircumcenter * part cset_of_list f0 c= f1 ccircumcenter * part cset_of_list f0
- |- ((\p'. (!q'. (((x = (circumcenter (set_of_list ul))) = p') ==> ((p' ==> ((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t))) = q')) ==> (((x = (circumcenter (set_of_list ul))) ==> (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))) = (p' ==> q')))))) p')
T * / ! c==> c= c= f0 ccircumcenter * part cset_of_list f1 b0 c==> c==> b0 c= ! c==> c? / c/\ cIN b3 * part cset_of_list f1 c= b2 * * part cbis cHD f1 b3 cIN ccircumcenter * part cset_of_list f1 b2 b1 c= c==> c= f0 ccircumcenter * part cset_of_list f1 ! c==> c? / c/\ cIN b3 * part cset_of_list f1 c= b2 * * part cbis cHD f1 b3 cIN ccircumcenter * part cset_of_list f1 b2 c==> b0 b1 f2
+ |- (((int_le (int_of_num (NUMERAL (BIT1 _0)))) ((int_add (int_of_num k)) (int_of_num (NUMERAL (BIT1 _0))))) = ((NUMERAL (BIT1 _0)) <= (k + (NUMERAL (BIT1 _0)))))
T c= cint_le cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 c+ f0 cNUMERAL cBIT1 c_0
- (!ul. (((NUMERAL (BIT1 _0)) <= (LENGTH ul)) ==> ((HD ul) IN (set_of_list ul)))), ((NUMERAL (BIT1 _0)) <= (LENGTH ul)) |- ((HD ul) IN (set_of_list ul))
T c==> ! c==> c<= cNUMERAL cBIT1 c_0 cLENGTH b0 cIN cHD b0 * part cset_of_list b0 c==> c<= cNUMERAL cBIT1 c_0 cLENGTH f0 cIN cHD f0 * part cset_of_list f0
+ (!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))), (?y. ((x = y) /\ (y = z))) |- ((?y. ((x = y) /\ (y = z))) /\ (x = z))
T c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 c==> c? / c/\ c= f0 b0 c= b0 f1 c/\ c? / c/\ c= f0 b0 c= b0 f1 c= f0 f1
+ |- (T = ((x IN ((bis (HD ul)) w)) ==> ((distance (x , w)) = (distance (x , (HD ul))))))
T c= cT c==> cIN f0 * * part cbis cHD f1 f2 c= cdistance c, f0 f2 cdistance c, f0 cHD f1
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ (~ (~ (((real_le (real_of_num k)) ((real_sub (real_of_num (CARD (set_of_list ul)))) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (CARD (set_of_list ul)))) ((real_add (real_of_num k)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le ((real_add (real_of_num (CARD (set_of_list ul)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_num k)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_num k)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))))))) |- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul)))))) (real_of_num (NUMERAL _0))))) \/ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))))
T c==> c~ c~ c/\ creal_le creal_of_num f0 creal_sub creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cCARD * part cset_of_list f1 creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 c\/ creal_le creal_add creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 c\/ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!y. ((x IN (y INSERT EMPTY)) = (x = y))) ==> ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y)) = ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y))
T c= c==> ! c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1
+ (~ (affine_dependent (set_of_list ul))), (t = ((bis (HD ul)) u)), (u IN (set_of_list ul)), ((HD ul) IN (set_of_list ul)) |- ((circumcenter (set_of_list ul)) IN t)
T c==> c~ caffine_dependent * part cset_of_list f0 c==> c= f1 * * part cbis cHD f0 f2 c==> cIN f2 * part cset_of_list f0 c==> cIN cHD f0 * part cset_of_list f0 cIN ccircumcenter * part cset_of_list f0 f1
+ (~ (affine_dependent (set_of_list ul))), ((HD ul) IN (set_of_list ul)) |- (((!x. (((\u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) x) ==> ((circumcenter (set_of_list ul)) IN t))) ==> ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t))) = ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))
T c==> c~ caffine_dependent * part cset_of_list f0 c==> cIN cHD f0 * part cset_of_list f0 c= c==> ! c==> * / c/\ cIN b1 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b1 b0 cIN ccircumcenter * part cset_of_list f0 f1 c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 cIN ccircumcenter * part cset_of_list f0 f1 c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 cIN ccircumcenter * part cset_of_list f0 f1
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ (~ (affine_dependent (set_of_list ul))) |- (((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))) /\ (x IN ((hull affine) (set_of_list ul)))) ==> (x = (circumcenter (set_of_list ul))))
T c==> c~ caffine_dependent * part cset_of_list f0 c==> c/\ ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN f1 b0 cIN f1 * * part chull part caffine * part cset_of_list f0 c= f1 ccircumcenter * part cset_of_list f0
+ (!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) |- (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))
T c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 ! ! c==> c/\ c<= f0 b0 c<= b0 b1 c<= f0 b1
+ (!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) |- (!p. (((m <= n) /\ (n <= p)) ==> (m <= p)))
T c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 ! c==> c/\ c<= f0 f1 c<= f1 b0 c<= f0 b0
+ |- ((\x. ((x IN (INTERS s)) = (!t. ((t IN s) ==> (x IN t))))) x)
T * / c= cIN b0 * part cINTERS f0 ! c==> cIN b1 f0 cIN b0 b1 f1
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ ((x = y) /\ (y = z)) |- (((x = y) /\ (y = z)) /\ ((!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) ==> (x = z)))
T c==> c/\ c= f0 f1 c= f1 f2 c/\ c/\ c= f0 f1 c= f1 f2 c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 c= f0 f2
- |- ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (((circumcenter (set_of_list ul)) IN t) = ((circumcenter (set_of_list ul)) IN t)))
T c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 c= cIN ccircumcenter * part cset_of_list f0 f1 cIN ccircumcenter * part cset_of_list f0 f1
+ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) |- (((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul)))))) (real_of_num (NUMERAL _0))))) |- (((real_ge ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul)))))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul)))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0
+ (((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) |- F
T c==> c\/ creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- ((packing V) /\ (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))))) |- ((\vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))) vl)
T c==> c/\ cpacking f0 c/\ c= cLENGTH f1 c+ f2 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f1 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0 * / c==> c/\ cinitial_sublist b0 f1 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0 f3
+ (~ (affine_dependent (set_of_list ul))), (u IN (set_of_list ul)), ((HD ul) IN (set_of_list ul)) |- (((?y. (((distance ((circumcenter (set_of_list ul)) , (HD ul))) = y) /\ (y = (distance ((circumcenter (set_of_list ul)) , u))))) ==> ((distance ((circumcenter (set_of_list ul)) , (HD ul))) = (distance ((circumcenter (set_of_list ul)) , u)))) = ((distance ((circumcenter (set_of_list ul)) , (HD ul))) = (distance ((circumcenter (set_of_list ul)) , u))))
T c==> c~ caffine_dependent * part cset_of_list f0 c==> cIN f1 * part cset_of_list f0 c==> cIN cHD f0 * part cset_of_list f0 c= c==> c? / c/\ c= cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 b0 c= b0 cdistance c, ccircumcenter * part cset_of_list f0 f1 c= cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 cdistance c, ccircumcenter * part cset_of_list f0 f1 c= cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 cdistance c, ccircumcenter * part cset_of_list f0 f1
- |- (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) = p') ==> ((p' ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = (p' ==> q'))))
T c==> c= c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 f2 c==> c==> f2 c= cvoronoi_nondg f3 f0 f4 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f3 f0 c==> f2 f4
+ (~ (affine_dependent (set_of_list ul))) |- (((!w. ((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul))))))) ==> (((distance ((HD ul) , (circumcenter (set_of_list ul)))) = (radV (set_of_list ul))) /\ ((radV (set_of_list ul)) = (distance (u , (circumcenter (set_of_list ul))))))) = (((~ (affine_dependent (set_of_list ul))) ==> (!w. ((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance ((circumcenter (set_of_list ul)) , w)))))) ==> (((distance ((circumcenter (set_of_list ul)) , (HD ul))) = (radV (set_of_list ul))) /\ ((radV (set_of_list ul)) = (distance ((circumcenter (set_of_list ul)) , u))))))
T c==> c~ caffine_dependent * part cset_of_list f0 c= c==> ! c==> cIN b0 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, b0 ccircumcenter * part cset_of_list f0 c/\ c= cdistance c, cHD f0 ccircumcenter * part cset_of_list f0 cradV * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, f1 ccircumcenter * part cset_of_list f0 c==> c==> c~ caffine_dependent * part cset_of_list f0 ! c==> cIN b0 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, ccircumcenter * part cset_of_list f0 b0 c/\ c= cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 cradV * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, ccircumcenter * part cset_of_list f0 f1
+ |- (((~ (S = EMPTY)) /\ (~ (affine_dependent S))) ==> (((circumcenter S) IN ((hull affine) S)) = T))
T c==> c/\ c~ c= f0 part cEMPTY c~ caffine_dependent f0 c= cIN ccircumcenter f0 * * part chull part caffine f0 cT
+ (!x. (!y. ((x = y) ==> (y = x)))) |- (!y. ((x = y) ==> (y = x)))
T c==> ! ! c==> c= b0 b1 c= b1 b0 ! c==> c= f0 b0 c= b0 f0
+ |- ((?y. ((x = y) /\ (y = z))) ==> (x = z))
T c==> c? / c/\ c= f0 b0 c= b0 f1 c= f0 f1
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ ((HD ul) IN (set_of_list ul)) |- (~ ((set_of_list ul) = EMPTY))
T c==> cIN cHD f0 * part cset_of_list f0 c~ c= * part cset_of_list f0 part cEMPTY
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!x. (!y. ((x = y) ==> (y = x)))), (x = y) |- ((!x. (!y. ((x = y) ==> (y = x)))) /\ (y = x))
T c==> ! ! c==> c= b0 b1 c= b1 b0 c==> c= f0 f1 c/\ ! ! c==> c= b0 b1 c= b1 b0 c= f1 f0
+ (!w. ((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul))))))), ((HD ul) IN (set_of_list ul)) |- (((radV (set_of_list ul)) = (distance (u , (circumcenter (set_of_list ul))))) = (((distance ((HD ul) , (circumcenter (set_of_list ul)))) = (radV (set_of_list ul))) /\ ((radV (set_of_list ul)) = (distance (u , (circumcenter (set_of_list ul)))))))
T c==> ! c==> cIN b0 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, b0 ccircumcenter * part cset_of_list f0 c==> cIN cHD f0 * part cset_of_list f0 c= c= cradV * part cset_of_list f0 cdistance c, f1 ccircumcenter * part cset_of_list f0 c/\ c= cdistance c, cHD f0 ccircumcenter * part cset_of_list f0 cradV * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, f1 ccircumcenter * part cset_of_list f0
+ (!x. (!y. ((x = y) ==> (y = x)))) |- ((\x. (!y. ((x = y) ==> (y = x)))) x)
T c==> ! ! c==> c= b0 b1 c= b1 b0 * / ! c==> c= b0 b1 c= b1 b0 f0
+ (!w. ((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul))))))) |- ((\w. ((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul))))))) w)
T c==> ! c==> cIN b0 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, b0 ccircumcenter * part cset_of_list f0 * / c==> cIN b0 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, b0 ccircumcenter * part cset_of_list f0 f1
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ (x = (circumcenter (set_of_list ul))) |- (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t)) = ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))
T c==> c= f0 ccircumcenter * part cset_of_list f1 c= c==> c? / c/\ cIN b0 * part cset_of_list f1 c= f2 * * part cbis cHD f1 b0 cIN f0 f2 c==> c? / c/\ cIN b0 * part cset_of_list f1 c= f2 * * part cbis cHD f1 b0 cIN ccircumcenter * part cset_of_list f1 f2
+ (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))), (~ (affine_dependent (set_of_list ul))), ((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))) /\ (x IN ((hull affine) (set_of_list ul)))) |- (x = (circumcenter (set_of_list ul)))
T c==> ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN f1 b0 c==> c~ caffine_dependent * part cset_of_list f0 c==> c/\ ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN f1 b0 cIN f1 * * part chull part caffine * part cset_of_list f0 c= f1 ccircumcenter * part cset_of_list f0
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul)))))) (real_of_num (NUMERAL _0))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0
+ |- (((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((hull affine) ((voronoi_list V) ul)) = (INTERS (GSPEC (\GEN%PVAR%6122. (?u. (((SETSPEC GEN%PVAR%6122) (u IN (set_of_list ul))) ((bis (HD ul)) u))))))))))) ==> ((\V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((hull affine) ((voronoi_list V) ul)) = (INTERS (GSPEC (\GEN%PVAR%6122. (?u. (((SETSPEC GEN%PVAR%6122) (u IN (set_of_list ul))) ((bis (HD ul)) u))))))))))) V)) = ((\V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((hull affine) ((voronoi_list V) ul)) = (INTERS (GSPEC (\GEN%PVAR%6122. (?u. (((SETSPEC GEN%PVAR%6122) (u IN (set_of_list ul))) ((bis (HD ul)) u))))))))))) V))
T c= c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c= * * part chull part caffine * * part cvoronoi_list b0 b1 * part cINTERS * part cGSPEC / c? / cSETSPEC b3 cIN b4 * part cset_of_list b1 * * part cbis cHD b1 b4 * / ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c= * * part chull part caffine * * part cvoronoi_list b0 b1 * part cINTERS * part cGSPEC / c? / cSETSPEC b3 cIN b4 * part cset_of_list b1 * * part cbis cHD b1 b4 f0 * / ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 c= * * part chull part caffine * * part cvoronoi_list b0 b1 * part cINTERS * part cGSPEC / c? / cSETSPEC b3 cIN b4 * part cset_of_list b1 * * part cbis cHD b1 b4 f0
+ (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))), (~ (affine_dependent (set_of_list ul))), (x IN ((hull affine) (set_of_list ul))) |- (x = (circumcenter (set_of_list ul)))
T c==> ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN f1 b0 c==> c~ caffine_dependent * part cset_of_list f0 c==> cIN f1 * * part chull part caffine * part cset_of_list f0 c= f1 ccircumcenter * part cset_of_list f0
- |- ((\m. ((SUC m) = (m + (NUMERAL (BIT1 _0))))) m)
T * / c= cSUC b0 c+ b0 cNUMERAL cBIT1 c_0 f0
+ |- ((\y. ((distance (x , y)) = (distance (y , x)))) y)
T * / c= cdistance c, f0 b0 cdistance c, b0 f0 f1
+ ((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) |- ((HD ul) IN (set_of_list ul))
T c==> c= cLENGTH f0 c+ f1 cNUMERAL cBIT1 c_0 cIN cHD f0 * part cset_of_list f0
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ |- ((((real_le ((real_add (real_of_num k)) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((real_add (real_of_num k)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_sub ((real_add (real_of_num k)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) = (~ ((int_of_num k) = ((int_sub ((int_add (int_of_num k)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))))
T c= c\/ creal_le creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_sub creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 c~ c= cint_of_num f0 cint_sub cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0
+ |- ((\n. ((m <= n) = ((int_le (int_of_num m)) (int_of_num n)))) n)
T * / c= c<= f0 b0 cint_le cint_of_num f0 cint_of_num b0 f1
- (~ ((set_of_list ul) = EMPTY)) |- (((~ (EMPTY = (set_of_list ul))) ==> ((EMPTY = (set_of_list ul)) = F)) = ((EMPTY = (set_of_list ul)) = F))
T c==> c~ c= * part cset_of_list f0 part cEMPTY c= c==> c~ c= part cEMPTY * part cset_of_list f0 c= c= part cEMPTY * part cset_of_list f0 cF c= c= part cEMPTY * part cset_of_list f0 cF
- (!ul. (((NUMERAL (BIT1 _0)) <= (LENGTH ul)) ==> ((HD ul) IN (set_of_list ul)))), ((NUMERAL (BIT1 _0)) <= (LENGTH ul)) |- (((NUMERAL (BIT1 _0)) <= (LENGTH ul)) /\ ((HD ul) IN (set_of_list ul)))
T c==> ! c==> c<= cNUMERAL cBIT1 c_0 cLENGTH b0 cIN cHD b0 * part cset_of_list b0 c==> c<= cNUMERAL cBIT1 c_0 cLENGTH f0 c/\ c<= cNUMERAL cBIT1 c_0 cLENGTH f0 cIN cHD f0 * part cset_of_list f0
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ ((~ (S = EMPTY)) /\ (~ (affine_dependent S))) |- (((~ (S = EMPTY)) /\ (~ (affine_dependent S))) /\ (((circumcenter S) IN ((hull affine) S)) = T))
T c==> c/\ c~ c= f0 part cEMPTY c~ caffine_dependent f0 c/\ c/\ c~ c= f0 part cEMPTY c~ caffine_dependent f0 c= cIN ccircumcenter f0 * * part chull part caffine f0 cT
+ |- ((\ul. (!V. ((((barV V) k) ul) = (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))))))) ul)
T * / ! c= cbarV b1 f0 b0 c/\ c= cLENGTH b0 c+ f0 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b2 b0 c< cNUMERAL c_0 cLENGTH b2 cvoronoi_nondg b1 b2 f1
+ ((HD ul) IN (set_of_list ul)) |- (?x. (x IN (set_of_list ul)))
T c==> cIN cHD f0 * part cset_of_list f0 c? / cIN b0 * part cset_of_list f0
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- (((!k. (((packing V) /\ (((barV V) k) ul)) ==> (((hull affine) ((voronoi_list V) ul)) = (INTERS (GSPEC (\GEN%PVAR%6122. (?u. (((SETSPEC GEN%PVAR%6122) (u IN (set_of_list ul))) ((bis (HD ul)) u))))))))) ==> ((\k. (((packing V) /\ (((barV V) k) ul)) ==> (((hull affine) ((voronoi_list V) ul)) = (INTERS (GSPEC (\GEN%PVAR%6122. (?u. (((SETSPEC GEN%PVAR%6122) (u IN (set_of_list ul))) ((bis (HD ul)) u))))))))) k)) = ((\k. (((packing V) /\ (((barV V) k) ul)) ==> (((hull affine) ((voronoi_list V) ul)) = (INTERS (GSPEC (\GEN%PVAR%6122. (?u. (((SETSPEC GEN%PVAR%6122) (u IN (set_of_list ul))) ((bis (HD ul)) u))))))))) k))
T c= c==> ! c==> c/\ cpacking f0 cbarV f0 b0 f1 c= * * part chull part caffine * * part cvoronoi_list f0 f1 * part cINTERS * part cGSPEC / c? / cSETSPEC b1 cIN b2 * part cset_of_list f1 * * part cbis cHD f1 b2 * / c==> c/\ cpacking f0 cbarV f0 b0 f1 c= * * part chull part caffine * * part cvoronoi_list f0 f1 * part cINTERS * part cGSPEC / c? / cSETSPEC b1 cIN b2 * part cset_of_list f1 * * part cbis cHD f1 b2 f2 * / c==> c/\ cpacking f0 cbarV f0 b0 f1 c= * * part chull part caffine * * part cvoronoi_list f0 f1 * part cINTERS * part cGSPEC / c? / cSETSPEC b1 cIN b2 * part cset_of_list f1 * * part cbis cHD f1 b2 f2
+ |- ((\x. ((x = y) ==> (y = x))) x)
T * / c==> c= b0 f0 c= f0 b0 f1
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) |- (!z. ((?y. ((x = y) /\ (y = z))) ==> (x = z)))
T c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 ! c==> c? / c/\ c= f0 b1 c= b1 b0 c= f0 b0
+ |- ((\m. (!n. ((m = n) = ((int_of_num m) = (int_of_num n))))) m)
T * / ! c= c= b0 b1 c= cint_of_num b0 cint_of_num b1 f0
- ((packing V) /\ (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))))), (((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) |- ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) /\ (((voronoi_nondg V) vl) = T))
T c==> c/\ cpacking f0 c/\ c= cLENGTH f1 c+ f2 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f1 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0 c==> c/\ cinitial_sublist f3 f1 c< cNUMERAL c_0 cLENGTH f3 c/\ c/\ cinitial_sublist f3 f1 c< cNUMERAL c_0 cLENGTH f3 c= cvoronoi_nondg f0 f3 cT
+ |- ((\x. (!y. ((distance (x , y)) = (distance (y , x))))) x)
T * / ! c= cdistance c, b0 b1 cdistance c, b1 b0 f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul)))))) (real_of_num (NUMERAL _0))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0
+ (w IN (set_of_list ul)) |- ((w IN (set_of_list ul)) /\ (((bis (HD ul)) w) = ((bis (HD ul)) w)))
T c==> cIN f0 * part cset_of_list f1 c/\ cIN f0 * part cset_of_list f1 c= * * part cbis cHD f1 f0 * * part cbis cHD f1 f0
+ |- ((!x. ((x IN ((INTERS (GSPEC (\GEN%PVAR%6122. (?u. (((SETSPEC GEN%PVAR%6122) (u IN (set_of_list ul))) ((bis (HD ul)) u)))))) INTER ((hull affine) (set_of_list ul)))) = (x = (circumcenter (set_of_list ul))))) = (((INTERS (GSPEC (\GEN%PVAR%6122. (?u. (((SETSPEC GEN%PVAR%6122) (u IN (set_of_list ul))) ((bis (HD ul)) u)))))) INTER ((hull affine) (set_of_list ul))) = ((circumcenter (set_of_list ul)) INSERT EMPTY)))
T c= ! c= cIN b0 * * part cINTER * part cINTERS * part cGSPEC / c? / cSETSPEC b1 cIN b2 * part cset_of_list f0 * * part cbis cHD f0 b2 * * part chull part caffine * part cset_of_list f0 c= b0 ccircumcenter * part cset_of_list f0 c= * * part cINTER * part cINTERS * part cGSPEC / c? / cSETSPEC b0 cIN b1 * part cset_of_list f0 * * part cbis cHD f0 b1 * * part chull part caffine * part cset_of_list f0 * * part cINSERT ccircumcenter * part cset_of_list f0 part cEMPTY
- ((packing V) /\ (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))))) |- (((!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))) ==> ((\vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))) vl)) = ((\vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))) vl))
T c==> c/\ cpacking f0 c/\ c= cLENGTH f1 c+ f2 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f1 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0 c= c==> ! c==> c/\ cinitial_sublist b0 f1 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0 * / c==> c/\ cinitial_sublist b0 f1 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0 f3 * / c==> c/\ cinitial_sublist b0 f1 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0 f3
- ((packing V) /\ (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))))), (((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) |- ((voronoi_nondg V) vl)
T c==> c/\ cpacking f0 c/\ c= cLENGTH f1 c+ f2 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f1 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0 c==> c/\ cinitial_sublist f3 f1 c< cNUMERAL c_0 cLENGTH f3 cvoronoi_nondg f0 f3
+ |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _3496493)) /\ ((real_le ((real_add ((real_add (real_of_int _3496493)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _3496493) ==> ((int_le (int_of_num (NUMERAL (BIT1 _0)))) ((int_add _3496493) (int_of_num (NUMERAL (BIT1 _0))))))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 cint_le cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0
- (!w. ((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul))))))) |- ((!w. ((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul))))))) /\ (!w. ((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul))))))))
T c==> ! c==> cIN b0 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, b0 ccircumcenter * part cset_of_list f0 c/\ ! c==> cIN b0 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, b0 ccircumcenter * part cset_of_list f0 ! c==> cIN b0 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, b0 ccircumcenter * part cset_of_list f0
- |- (((!q'. (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) = p') ==> ((p' ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = (p' ==> q'))))) ==> ((\q'. (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) = p') ==> ((p' ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = (p' ==> q'))))) q')) = ((\q'. (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) = p') ==> ((p' ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 f2 c==> c==> f2 c= cvoronoi_nondg f3 f0 b0 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f3 f0 c==> f2 b0 * / c==> c= c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 f2 c==> c==> f2 c= cvoronoi_nondg f3 f0 b0 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f3 f0 c==> f2 b0 f4 * / c==> c= c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 f2 c==> c==> f2 c= cvoronoi_nondg f3 f0 b0 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f3 f0 c==> f2 b0 f4
+ (!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) |- ((?n. ((m <= n) /\ (n <= p))) ==> (m <= p))
T c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 c==> c? / c/\ c<= f0 b0 c<= b0 f1 c<= f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((x IN ((bis (HD ul)) w)) ==> ((distance (x , w)) = (distance (x , (HD ul))))) = (((distance (x , (HD ul))) = (distance (x , w))) ==> T))
T c= c==> cIN f0 * * part cbis cHD f1 f2 c= cdistance c, f0 f2 cdistance c, f0 cHD f1 c==> c= cdistance c, f0 cHD f1 cdistance c, f0 f2 cT
+ (~ (affine_dependent (set_of_list ul))), (~ ((set_of_list ul) = EMPTY)), (x = (circumcenter (set_of_list ul))) |- ((x = (circumcenter (set_of_list ul))) /\ (((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))) /\ (x IN ((hull affine) (set_of_list ul)))) = (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))))
T c==> c~ caffine_dependent * part cset_of_list f0 c==> c~ c= * part cset_of_list f0 part cEMPTY c==> c= f1 ccircumcenter * part cset_of_list f0 c/\ c= f1 ccircumcenter * part cset_of_list f0 c= c/\ ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN f1 b0 cIN f1 * * part chull part caffine * part cset_of_list f0 ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN ccircumcenter * part cset_of_list f0 b0
+ |- ((\S. ((~ (affine_dependent S)) ==> (!p. (((p IN ((hull affine) S)) /\ (?c. (!w. ((w IN S) ==> ((distance (p , w)) = c))))) ==> (p = (circumcenter S)))))) (set_of_list ul))
T * / c==> c~ caffine_dependent b0 ! c==> c/\ cIN b1 * * part chull part caffine b0 c? / ! c==> cIN b3 b0 c= cdistance c, b1 b3 b2 c= b1 ccircumcenter b0 * part cset_of_list f0
- ((set_of_list ul) = EMPTY) |- (EMPTY = (set_of_list ul))
T c==> c= * part cset_of_list f0 part cEMPTY c= part cEMPTY * part cset_of_list f0
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- ((!ul. (((NUMERAL (BIT1 _0)) <= (LENGTH ul)) ==> ((HD ul) IN (set_of_list ul)))) ==> (!ul. (((NUMERAL (BIT1 _0)) <= (LENGTH ul)) ==> ((HD ul) IN (set_of_list ul)))))
T c==> ! c==> c<= cNUMERAL cBIT1 c_0 cLENGTH b0 cIN cHD b0 * part cset_of_list b0 ! c==> c<= cNUMERAL cBIT1 c_0 cLENGTH b0 cIN cHD b0 * part cset_of_list b0
- |- ((!w. t) = t)
T c= ! f0 f0
+ |- (((!n. ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))) ==> ((\n. ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))) n)) = ((\n. ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))) n))
T c= c==> ! c= cint_of_num c+ f0 b0 cint_add cint_of_num f0 cint_of_num b0 * / c= cint_of_num c+ f0 b0 cint_add cint_of_num f0 cint_of_num b0 f1 * / c= cint_of_num c+ f0 b0 cint_add cint_of_num f0 cint_of_num b0 f1
+ |- (((((distance (x , (HD ul))) = (distance (x , w))) ==> (((distance (x , w)) = (distance (x , (HD ul)))) = T)) ==> (((x IN ((bis (HD ul)) w)) ==> ((distance (x , w)) = (distance (x , (HD ul))))) = (((distance (x , (HD ul))) = (distance (x , w))) ==> T))) = (((x IN ((bis (HD ul)) w)) ==> ((distance (x , w)) = (distance (x , (HD ul))))) = (((distance (x , (HD ul))) = (distance (x , w))) ==> T)))
T c= c==> c==> c= cdistance c, f0 cHD f1 cdistance c, f0 f2 c= c= cdistance c, f0 f2 cdistance c, f0 cHD f1 cT c= c==> cIN f0 * * part cbis cHD f1 f2 c= cdistance c, f0 f2 cdistance c, f0 cHD f1 c==> c= cdistance c, f0 cHD f1 cdistance c, f0 f2 cT c= c==> cIN f0 * * part cbis cHD f1 f2 c= cdistance c, f0 f2 cdistance c, f0 cHD f1 c==> c= cdistance c, f0 cHD f1 cdistance c, f0 f2 cT
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- (((!m. ((SUC m) = (m + (NUMERAL (BIT1 _0))))) ==> ((\m. ((SUC m) = (m + (NUMERAL (BIT1 _0))))) m)) = ((\m. ((SUC m) = (m + (NUMERAL (BIT1 _0))))) m))
T c= c==> ! c= cSUC b0 c+ b0 cNUMERAL cBIT1 c_0 * / c= cSUC b0 c+ b0 cNUMERAL cBIT1 c_0 f0 * / c= cSUC b0 c+ b0 cNUMERAL cBIT1 c_0 f0
+ |- ((\q'. (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) = p') ==> ((p' ==> ((x IN t) = q')) ==> (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t)) = (p' ==> q'))))) q')
T * / c==> c= c? / c/\ cIN b1 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b1 f2 c==> c==> f2 c= cIN f3 f1 b0 c= c==> c? / c/\ cIN b1 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b1 cIN f3 f1 c==> f2 b0 f4
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((distance (x , (HD ul))) = (distance (x , w))) ==> (((distance (x , w)) = (distance (x , (HD ul)))) = T))
T c==> c= cdistance c, f0 cHD f1 cdistance c, f0 f2 c= c= cdistance c, f0 f2 cdistance c, f0 cHD f1 cT
+ ((aff_dim (set_of_list ul)) = (int_of_num k)), ((CARD (set_of_list ul)) <= (k + (NUMERAL (BIT1 _0)))) |- ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))
T c==> c= caff_dim * part cset_of_list f0 cint_of_num f1 c==> c<= cCARD * part cset_of_list f0 c+ f1 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list f0 c+ f1 cNUMERAL cBIT1 c_0
+ |- ((\n. ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))) n)
T * / c= cint_of_num c+ f0 b0 cint_add cint_of_num f0 cint_of_num b0 f1
+ |- ((~ (~ (((real_le ((real_add (real_of_num k)) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((real_add (real_of_num k)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_sub ((real_add (real_of_num k)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))))) ==> F)
T c==> c~ c~ c\/ creal_le creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_sub creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 cF
+ |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
+ (w IN (set_of_list ul)) |- (((x IN ((bis (HD ul)) w)) ==> ((distance (x , w)) = (distance (x , (HD ul))))) = ((?u. ((u IN (set_of_list ul)) /\ (((bis (HD ul)) w) = ((bis (HD ul)) u)))) /\ ((x IN ((bis (HD ul)) w)) ==> ((distance (x , w)) = (distance (x , (HD ul)))))))
T c==> cIN f0 * part cset_of_list f1 c= c==> cIN f2 * * part cbis cHD f1 f0 c= cdistance c, f2 f0 cdistance c, f2 cHD f1 c/\ c? / c/\ cIN b0 * part cset_of_list f1 c= * * part cbis cHD f1 f0 * * part cbis cHD f1 b0 c==> cIN f2 * * part cbis cHD f1 f0 c= cdistance c, f2 f0 cdistance c, f2 cHD f1
+ ((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))), ((aff_dim (set_of_list ul)) = (int_of_num k)) |- ((x IN ((INTERS (GSPEC (\GEN%PVAR%6122. (?u. (((SETSPEC GEN%PVAR%6122) (u IN (set_of_list ul))) ((bis (HD ul)) u)))))) INTER ((hull affine) (set_of_list ul)))) = (x = (circumcenter (set_of_list ul))))
T c==> c= cLENGTH f0 c+ f1 cNUMERAL cBIT1 c_0 c==> c= caff_dim * part cset_of_list f0 cint_of_num f1 c= cIN f2 * * part cINTER * part cINTERS * part cGSPEC / c? / cSETSPEC b0 cIN b1 * part cset_of_list f0 * * part cbis cHD f0 b1 * * part chull part caffine * part cset_of_list f0 c= f2 ccircumcenter * part cset_of_list f0
+ |- ((~ (affine_dependent (set_of_list ul))) ==> (!w. ((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance ((circumcenter (set_of_list ul)) , w))))))
T c==> c~ caffine_dependent * part cset_of_list f0 ! c==> cIN b0 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, ccircumcenter * part cset_of_list f0 b0
+ (!w. ((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul))))))), ((HD ul) IN (set_of_list ul)) |- ((radV (set_of_list ul)) = (distance ((HD ul) , (circumcenter (set_of_list ul)))))
T c==> ! c==> cIN b0 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, b0 ccircumcenter * part cset_of_list f0 c==> cIN cHD f0 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, cHD f0 ccircumcenter * part cset_of_list f0
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (t = ((bis (HD ul)) u)) |- (((circumcenter (set_of_list ul)) IN ((bis (HD ul)) u)) = ((circumcenter (set_of_list ul)) IN t))
T c==> c= f0 * * part cbis cHD f1 f2 c= cIN ccircumcenter * part cset_of_list f1 * * part cbis cHD f1 f2 cIN ccircumcenter * part cset_of_list f1 f0
+ |- ((((distance ((circumcenter (set_of_list ul)) , (HD ul))) = (radV (set_of_list ul))) /\ ((radV (set_of_list ul)) = (distance ((circumcenter (set_of_list ul)) , u)))) = ((\y. (((distance ((circumcenter (set_of_list ul)) , (HD ul))) = y) /\ (y = (distance ((circumcenter (set_of_list ul)) , u))))) (radV (set_of_list ul))))
T c= c/\ c= cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 cradV * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, ccircumcenter * part cset_of_list f0 f1 * / c/\ c= cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 b0 c= b0 cdistance c, ccircumcenter * part cset_of_list f0 f1 cradV * part cset_of_list f0
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ ((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) |- ((\n. (((CARD (set_of_list ul)) <= n) /\ (n <= (k + (NUMERAL (BIT1 _0)))))) (LENGTH ul))
T c==> c= cLENGTH f0 c+ f1 cNUMERAL cBIT1 c_0 * / c/\ c<= cCARD * part cset_of_list f0 b0 c<= b0 c+ f1 cNUMERAL cBIT1 c_0 cLENGTH f0
+ (~ (affine_dependent (set_of_list ul))), (u IN (set_of_list ul)), ((HD ul) IN (set_of_list ul)) |- (((~ (affine_dependent (set_of_list ul))) ==> (!w. ((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance ((circumcenter (set_of_list ul)) , w)))))) ==> (((distance ((circumcenter (set_of_list ul)) , (HD ul))) = (radV (set_of_list ul))) /\ ((radV (set_of_list ul)) = (distance ((circumcenter (set_of_list ul)) , u)))))
T c==> c~ caffine_dependent * part cset_of_list f0 c==> cIN f1 * part cset_of_list f0 c==> cIN cHD f0 * part cset_of_list f0 c==> c==> c~ caffine_dependent * part cset_of_list f0 ! c==> cIN b0 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, ccircumcenter * part cset_of_list f0 b0 c/\ c= cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 cradV * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, ccircumcenter * part cset_of_list f0 f1
+ (!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))), ((x = y) /\ (y = z)) |- (x = z)
T c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 c==> c/\ c= f0 f1 c= f1 f2 c= f0 f2
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_add ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ ((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) |- (((CARD (set_of_list ul)) <= (LENGTH ul)) /\ ((LENGTH ul) <= (k + (NUMERAL (BIT1 _0)))))
T c==> c= cLENGTH f0 c+ f1 cNUMERAL cBIT1 c_0 c/\ c<= cCARD * part cset_of_list f0 cLENGTH f0 c<= cLENGTH f0 c+ f1 cNUMERAL cBIT1 c_0
- |- (((int_of_num k) = ((int_sub ((int_add (int_of_num k)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))) = T)
T c= c= cint_of_num f0 cint_sub cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 cT
+ |- (((!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) ==> ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)) = ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x))
T c= c==> ! ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
+ |- ((((packing V) /\ (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))))) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) = q')) ==> ((((packing V) /\ (((barV V) k) ul)) ==> ((LENGTH ul) = (k + (NUMERAL (BIT1 _0))))) = (((packing V) /\ (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))))) ==> q')))
T c==> c==> c/\ cpacking f0 c/\ c= cLENGTH f1 c+ f2 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f1 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0 c= c= cLENGTH f1 c+ f2 cNUMERAL cBIT1 c_0 f3 c= c==> c/\ cpacking f0 cbarV f0 f2 f1 c= cLENGTH f1 c+ f2 cNUMERAL cBIT1 c_0 c==> c/\ cpacking f0 c/\ c= cLENGTH f1 c+ f2 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f1 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0 f3
+ (?n. ((m <= n) /\ (n <= p))) |- ((!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) ==> (m <= p))
T c==> c? / c/\ c<= f0 b0 c<= b0 f1 c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 c<= f0 f1
- (((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) |- (((NUMERAL _0) < (LENGTH vl)) = T)
T c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 c= c< cNUMERAL c_0 cLENGTH f0 cT
- |- ((?x. t) = t)
T c= c? / f0 f0
+ |- ((\V. ((((barV V) k) ul) = (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))))) V)
T * / c= cbarV b0 f0 f1 c/\ c= cLENGTH f1 c+ f0 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b1 f1 c< cNUMERAL c_0 cLENGTH b1 cvoronoi_nondg b0 b1 f2
+ (!x. (!y. ((x = y) ==> (y = x)))) |- ((\y. ((x = y) ==> (y = x))) y)
T c==> ! ! c==> c= b0 b1 c= b1 b0 * / c==> c= f0 b0 c= b0 f0 f1
+ (!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))), ((x = y) /\ (y = z)) |- ((!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) /\ (x = z))
T c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 c==> c/\ c= f0 f1 c= f1 f2 c/\ ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 c= f0 f2
+ (!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) |- ((\x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) x)
T c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 * / ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 f0
+ |- (((m <= n) /\ (n <= p)) ==> ((!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) ==> (m <= p)))
T c==> c/\ c<= f0 f1 c<= f1 f2 c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 c<= f0 f2
+ (~ (affine_dependent (set_of_list ul))), (x = (circumcenter (set_of_list ul))), ((HD ul) IN (set_of_list ul)) |- ((x = (circumcenter (set_of_list ul))) /\ (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t))))
T c==> c~ caffine_dependent * part cset_of_list f0 c==> c= f1 ccircumcenter * part cset_of_list f0 c==> cIN cHD f0 * part cset_of_list f0 c/\ c= f1 ccircumcenter * part cset_of_list f0 ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN ccircumcenter * part cset_of_list f0 b0
+ (!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) |- ((!z. ((?y. ((x = y) /\ (y = z))) ==> (x = z))) = T)
T c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 c= ! c==> c? / c/\ c= f0 b1 c= b1 b0 c= f0 b0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _3496493)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496493))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496493))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496493))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496493))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!x. (!y. ((x = y) ==> (y = x)))) |- (!x. ((x = y) ==> (y = x)))
T c==> ! ! c==> c= b0 b1 c= b1 b0 ! c==> c= b0 f0 c= f0 b0
+ (!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) |- (((?n. ((m <= n) /\ (n <= p))) ==> (m <= p)) = T)
T c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 c= c==> c? / c/\ c<= f0 b0 c<= b0 f1 c<= f0 f1 cT
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ ((aff_dim (set_of_list ul)) = (int_of_num k)), ((packing V) /\ (((barV V) k) ul)) |- (((x IN ((INTERS (GSPEC (\GEN%PVAR%6122. (?u. (((SETSPEC GEN%PVAR%6122) (u IN (set_of_list ul))) ((bis (HD ul)) u)))))) INTER ((hull affine) (set_of_list ul)))) = (x = (circumcenter (set_of_list ul)))) = T)
T c==> c= caff_dim * part cset_of_list f0 cint_of_num f1 c==> c/\ cpacking f2 cbarV f2 f1 f0 c= c= cIN f3 * * part cINTER * part cINTERS * part cGSPEC / c? / cSETSPEC b0 cIN b1 * part cset_of_list f0 * * part cbis cHD f0 b1 * * part chull part caffine * part cset_of_list f0 c= f3 ccircumcenter * part cset_of_list f0 cT
+ ((\n. ((m <= n) /\ (n <= p))) n) |- (((\n. ((m <= n) /\ (n <= p))) n) /\ ((!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) ==> (m <= p)))
T c==> * / c/\ c<= f0 b0 c<= b0 f1 f2 c/\ * / c/\ c<= f0 b0 c<= b0 f1 f2 c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 c<= f0 f1
- |- (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (((circumcenter (set_of_list ul)) IN t) = q')) ==> (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)) = ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> q')))
T c==> c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 c= cIN ccircumcenter * part cset_of_list f0 f1 f2 c= c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 cIN ccircumcenter * part cset_of_list f0 f1 c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) ==> (!x. (!z. ((?y. ((x = y) /\ (y = z))) ==> (x = z))))) = (!x. (!z. ((?y. ((x = y) /\ (y = z))) ==> (x = z)))))
T c= c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 ! ! c==> c? / c/\ c= b0 b2 c= b2 b1 c= b0 b1 ! ! c==> c? / c/\ c= b0 b2 c= b2 b1 c= b0 b1
+ |- ((\S. ((~ (affine_dependent S)) ==> (!w. ((w IN S) ==> ((radV S) = (distance ((circumcenter S) , w))))))) (set_of_list ul))
T * / c==> c~ caffine_dependent b0 ! c==> cIN b1 b0 c= cradV b0 cdistance c, ccircumcenter b0 b1 * part cset_of_list f0
+ |- ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x)
T * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2
+ ((aff_dim (set_of_list ul)) = (int_of_num k)), ((packing V) /\ (((barV V) k) ul)) |- ((((hull affine) ((voronoi_list V) ul)) = (INTERS (GSPEC (\GEN%PVAR%6122. (?u. (((SETSPEC GEN%PVAR%6122) (u IN (set_of_list ul))) ((bis (HD ul)) u))))))) ==> ((((hull affine) ((voronoi_list V) ul)) INTER ((hull affine) (set_of_list ul))) = ((circumcenter (set_of_list ul)) INSERT EMPTY)))
T c==> c= caff_dim * part cset_of_list f0 cint_of_num f1 c==> c/\ cpacking f2 cbarV f2 f1 f0 c==> c= * * part chull part caffine * * part cvoronoi_list f2 f0 * part cINTERS * part cGSPEC / c? / cSETSPEC b0 cIN b1 * part cset_of_list f0 * * part cbis cHD f0 b1 c= * * part cINTER * * part chull part caffine * * part cvoronoi_list f2 f0 * * part chull part caffine * part cset_of_list f0 * * part cINSERT ccircumcenter * part cset_of_list f0 part cEMPTY
+ (!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) |- (!z. (((x = y) /\ (y = z)) ==> (x = z)))
T c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 ! c==> c/\ c= f0 f1 c= f1 b0 c= f0 b0
+ |- ((\l. (FINITE (set_of_list l))) l)
T * / cFINITE * part cset_of_list b0 f0
- |- (T = (((int_le (int_of_num k)) ((int_sub (int_of_num (CARD (set_of_list ul)))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((int_le (int_of_num (CARD (set_of_list ul)))) ((int_add (int_of_num k)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((int_of_num (CARD (set_of_list ul))) = ((int_add (int_of_num k)) (int_of_num (NUMERAL (BIT1 _0))))))))
T c= cT c==> cint_le cint_of_num f0 cint_sub cint_of_num cCARD * part cset_of_list f1 cint_of_num cNUMERAL cBIT1 c_0 c==> cint_le cint_of_num cCARD * part cset_of_list f1 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c= cint_of_num cCARD * part cset_of_list f1 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- ((\k. (!ul. (!V. ((((barV V) k) ul) = (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))))))) k)
T * / ! ! c= cbarV b2 b0 b1 c/\ c= cLENGTH b1 c+ b0 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b3 b1 c< cNUMERAL c_0 cLENGTH b3 cvoronoi_nondg b2 b3 f0
+ ((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) |- ((NUMERAL (BIT1 _0)) <= (LENGTH ul))
T c==> c= cLENGTH f0 c+ f1 cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cLENGTH f0
+ (!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))), (?n. ((m <= n) /\ (n <= p))) |- ((?n. ((m <= n) /\ (n <= p))) /\ (m <= p))
T c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 c==> c? / c/\ c<= f0 b0 c<= b0 f1 c/\ c? / c/\ c<= f0 b0 c<= b0 f1 c<= f0 f1
+ |- (((!x'. (((\y. ((x = y) /\ (y = z))) x') ==> ((!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) ==> (x = z)))) ==> ((?y. ((x = y) /\ (y = z))) ==> ((!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) ==> (x = z)))) = ((?y. ((x = y) /\ (y = z))) ==> ((!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) ==> (x = z))))
T c= c==> ! c==> * / c/\ c= f0 b1 c= b1 f1 b0 c==> ! ! ! c==> c/\ c= b1 b2 c= b2 b3 c= b1 b3 c= f0 f1 c==> c? / c/\ c= f0 b0 c= b0 f1 c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 c= f0 f1 c==> c? / c/\ c= f0 b0 c= b0 f1 c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 c= f0 f1
+ |- (((!V. ((((barV V) k) ul) = (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))))) ==> ((\V. ((((barV V) k) ul) = (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))))) V)) = ((\V. ((((barV V) k) ul) = (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))))) V))
T c= c==> ! c= cbarV b0 f0 f1 c/\ c= cLENGTH f1 c+ f0 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b1 f1 c< cNUMERAL c_0 cLENGTH b1 cvoronoi_nondg b0 b1 * / c= cbarV b0 f0 f1 c/\ c= cLENGTH f1 c+ f0 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b1 f1 c< cNUMERAL c_0 cLENGTH b1 cvoronoi_nondg b0 b1 f2 * / c= cbarV b0 f0 f1 c/\ c= cLENGTH f1 c+ f0 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b1 f1 c< cNUMERAL c_0 cLENGTH b1 cvoronoi_nondg b0 b1 f2
+ ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n))) |- (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))
T c==> c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1 c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
+ (((real_ge (real_of_int _3496493)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496493))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496493))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _3496493)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496493))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _3496493))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496493))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _3496493))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- (((!S. ((~ (affine_dependent S)) ==> (!w. ((w IN S) ==> ((radV S) = (distance ((circumcenter S) , w))))))) ==> ((\S. ((~ (affine_dependent S)) ==> (!w. ((w IN S) ==> ((radV S) = (distance ((circumcenter S) , w))))))) (set_of_list ul))) = ((\S. ((~ (affine_dependent S)) ==> (!w. ((w IN S) ==> ((radV S) = (distance ((circumcenter S) , w))))))) (set_of_list ul)))
T c= c==> ! c==> c~ caffine_dependent b0 ! c==> cIN b1 b0 c= cradV b0 cdistance c, ccircumcenter b0 b1 * / c==> c~ caffine_dependent b0 ! c==> cIN b1 b0 c= cradV b0 cdistance c, ccircumcenter b0 b1 * part cset_of_list f0 * / c==> c~ caffine_dependent b0 ! c==> cIN b1 b0 c= cradV b0 cdistance c, ccircumcenter b0 b1 * part cset_of_list f0
+ ((aff_dim (set_of_list ul)) = (int_of_num k)) |- (((FINITE (set_of_list ul)) ==> ((int_le (aff_dim (set_of_list ul))) ((int_sub (int_of_num (CARD (set_of_list ul)))) (int_of_num (NUMERAL (BIT1 _0)))))) ==> (((CARD (set_of_list ul)) <= (k + (NUMERAL (BIT1 _0)))) ==> ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0))))))
T c==> c= caff_dim * part cset_of_list f0 cint_of_num f1 c==> c==> cFINITE * part cset_of_list f0 cint_le caff_dim * part cset_of_list f0 cint_sub cint_of_num cCARD * part cset_of_list f0 cint_of_num cNUMERAL cBIT1 c_0 c==> c<= cCARD * part cset_of_list f0 c+ f1 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list f0 c+ f1 cNUMERAL cBIT1 c_0
+ ((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) |- ((CARD (set_of_list ul)) <= (k + (NUMERAL (BIT1 _0))))
T c==> c= cLENGTH f0 c+ f1 cNUMERAL cBIT1 c_0 c<= cCARD * part cset_of_list f0 c+ f1 cNUMERAL cBIT1 c_0
+ |- (((!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((hull affine) ((voronoi_list V) ul)) = (INTERS (GSPEC (\GEN%PVAR%6122. (?u. (((SETSPEC GEN%PVAR%6122) (u IN (set_of_list ul))) ((bis (HD ul)) u)))))))))) ==> ((\ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((hull affine) ((voronoi_list V) ul)) = (INTERS (GSPEC (\GEN%PVAR%6122. (?u. (((SETSPEC GEN%PVAR%6122) (u IN (set_of_list ul))) ((bis (HD ul)) u)))))))))) ul)) = ((\ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((hull affine) ((voronoi_list V) ul)) = (INTERS (GSPEC (\GEN%PVAR%6122. (?u. (((SETSPEC GEN%PVAR%6122) (u IN (set_of_list ul))) ((bis (HD ul)) u)))))))))) ul))
T c= c==> ! ! c==> c/\ cpacking f0 cbarV f0 b1 b0 c= * * part chull part caffine * * part cvoronoi_list f0 b0 * part cINTERS * part cGSPEC / c? / cSETSPEC b2 cIN b3 * part cset_of_list b0 * * part cbis cHD b0 b3 * / ! c==> c/\ cpacking f0 cbarV f0 b1 b0 c= * * part chull part caffine * * part cvoronoi_list f0 b0 * part cINTERS * part cGSPEC / c? / cSETSPEC b2 cIN b3 * part cset_of_list b0 * * part cbis cHD b0 b3 f1 * / ! c==> c/\ cpacking f0 cbarV f0 b1 b0 c= * * part chull part caffine * * part cvoronoi_list f0 b0 * part cINTERS * part cGSPEC / c? / cSETSPEC b2 cIN b3 * part cset_of_list b0 * * part cbis cHD b0 b3 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (affine_dependent (set_of_list ul))), ((HD ul) IN (set_of_list ul)) |- ((((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))) /\ (x IN ((hull affine) (set_of_list ul)))) ==> (x = (circumcenter (set_of_list ul)))) /\ ((x = (circumcenter (set_of_list ul))) ==> ((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))) /\ (x IN ((hull affine) (set_of_list ul))))))
T c==> c~ caffine_dependent * part cset_of_list f0 c==> cIN cHD f0 * part cset_of_list f0 c/\ c==> c/\ ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN f1 b0 cIN f1 * * part chull part caffine * part cset_of_list f0 c= f1 ccircumcenter * part cset_of_list f0 c==> c= f1 ccircumcenter * part cset_of_list f0 c/\ ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN f1 b0 cIN f1 * * part chull part caffine * part cset_of_list f0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))), (x IN ((hull affine) (set_of_list ul))) |- ((x IN ((hull affine) (set_of_list ul))) /\ (?c. (!w. ((w IN (set_of_list ul)) ==> ((distance (x , w)) = c)))))
T c==> ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN f1 b0 c==> cIN f1 * * part chull part caffine * part cset_of_list f0 c/\ cIN f1 * * part chull part caffine * part cset_of_list f0 c? / ! c==> cIN b1 * part cset_of_list f0 c= cdistance c, f1 b1 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!p'. (!q'. (((x = (circumcenter (set_of_list ul))) = p') ==> ((p' ==> (((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))) /\ (x IN ((hull affine) (set_of_list ul)))) = q')) ==> (((x = (circumcenter (set_of_list ul))) ==> ((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))) /\ (x IN ((hull affine) (set_of_list ul))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((x = (circumcenter (set_of_list ul))) = p') ==> ((p' ==> (((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))) /\ (x IN ((hull affine) (set_of_list ul)))) = q')) ==> (((x = (circumcenter (set_of_list ul))) ==> ((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))) /\ (x IN ((hull affine) (set_of_list ul))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((x = (circumcenter (set_of_list ul))) = p') ==> ((p' ==> (((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))) /\ (x IN ((hull affine) (set_of_list ul)))) = q')) ==> (((x = (circumcenter (set_of_list ul))) ==> ((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))) /\ (x IN ((hull affine) (set_of_list ul))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c= f0 ccircumcenter * part cset_of_list f1 b0 c==> c==> b0 c= c/\ ! c==> c? / c/\ cIN b3 * part cset_of_list f1 c= b2 * * part cbis cHD f1 b3 cIN f0 b2 cIN f0 * * part chull part caffine * part cset_of_list f1 b1 c= c==> c= f0 ccircumcenter * part cset_of_list f1 c/\ ! c==> c? / c/\ cIN b3 * part cset_of_list f1 c= b2 * * part cbis cHD f1 b3 cIN f0 b2 cIN f0 * * part chull part caffine * part cset_of_list f1 c==> b0 b1 * / ! c==> c= c= f0 ccircumcenter * part cset_of_list f1 b0 c==> c==> b0 c= c/\ ! c==> c? / c/\ cIN b3 * part cset_of_list f1 c= b2 * * part cbis cHD f1 b3 cIN f0 b2 cIN f0 * * part chull part caffine * part cset_of_list f1 b1 c= c==> c= f0 ccircumcenter * part cset_of_list f1 c/\ ! c==> c? / c/\ cIN b3 * part cset_of_list f1 c= b2 * * part cbis cHD f1 b3 cIN f0 b2 cIN f0 * * part chull part caffine * part cset_of_list f1 c==> b0 b1 f2 * / ! c==> c= c= f0 ccircumcenter * part cset_of_list f1 b0 c==> c==> b0 c= c/\ ! c==> c? / c/\ cIN b3 * part cset_of_list f1 c= b2 * * part cbis cHD f1 b3 cIN f0 b2 cIN f0 * * part chull part caffine * part cset_of_list f1 b1 c= c==> c= f0 ccircumcenter * part cset_of_list f1 c/\ ! c==> c? / c/\ cIN b3 * part cset_of_list f1 c= b2 * * part cbis cHD f1 b3 cIN f0 b2 cIN f0 * * part chull part caffine * part cset_of_list f1 c==> b0 b1 f2
- (!ul. (((NUMERAL (BIT1 _0)) <= (LENGTH ul)) ==> ((HD ul) IN (set_of_list ul)))) |- ((!ul. (((NUMERAL (BIT1 _0)) <= (LENGTH ul)) ==> ((HD ul) IN (set_of_list ul)))) /\ (!ul. (((NUMERAL (BIT1 _0)) <= (LENGTH ul)) ==> ((HD ul) IN (set_of_list ul)))))
T c==> ! c==> c<= cNUMERAL cBIT1 c_0 cLENGTH b0 cIN cHD b0 * part cset_of_list b0 c/\ ! c==> c<= cNUMERAL cBIT1 c_0 cLENGTH b0 cIN cHD b0 * part cset_of_list b0 ! c==> c<= cNUMERAL cBIT1 c_0 cLENGTH b0 cIN cHD b0 * part cset_of_list b0
- (w IN (set_of_list ul)) |- ((!w. ((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul))))))) ==> ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul))))))
T c==> cIN f0 * part cset_of_list f1 c==> ! c==> cIN b0 * part cset_of_list f1 c= cradV * part cset_of_list f1 cdistance c, b0 ccircumcenter * part cset_of_list f1 c= cradV * part cset_of_list f1 cdistance c, f0 ccircumcenter * part cset_of_list f1
+ ((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) |- ((((NUMERAL (BIT1 _0)) <= (LENGTH ul)) ==> ((HD ul) IN (set_of_list ul))) = ((HD ul) IN (set_of_list ul)))
T c==> c= cLENGTH f0 c+ f1 cNUMERAL cBIT1 c_0 c= c==> c<= cNUMERAL cBIT1 c_0 cLENGTH f0 cIN cHD f0 * part cset_of_list f0 cIN cHD f0 * part cset_of_list f0
+ |- ((\z. ((?y. ((x = y) /\ (y = z))) ==> (x = z))) z)
T * / c==> c? / c/\ c= f0 b1 c= b1 b0 c= f0 b0 f1
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- ((\k. (((packing V) /\ (((barV V) k) ul)) ==> (((hull affine) ((voronoi_list V) ul)) = (INTERS (GSPEC (\GEN%PVAR%6122. (?u. (((SETSPEC GEN%PVAR%6122) (u IN (set_of_list ul))) ((bis (HD ul)) u))))))))) k)
T * / c==> c/\ cpacking f0 cbarV f0 b0 f1 c= * * part chull part caffine * * part cvoronoi_list f0 f1 * part cINTERS * part cGSPEC / c? / cSETSPEC b1 cIN b2 * part cset_of_list f1 * * part cbis cHD f1 b2 f2
+ (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))) |- ((\t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))) ((bis (HD ul)) w))
T c==> ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN f1 b0 * / c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN f1 b0 * * part cbis cHD f0 f2
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) = (?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u))))) ==> (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (((circumcenter (set_of_list ul)) IN t) = q')) ==> (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)) = ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> q')))) = (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (((circumcenter (set_of_list ul)) IN t) = q')) ==> (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)) = ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> q'))))
T c= c==> c= c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 c==> c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 c= cIN ccircumcenter * part cset_of_list f0 f1 f2 c= c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 cIN ccircumcenter * part cset_of_list f0 f1 c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 f2 c==> c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 c= cIN ccircumcenter * part cset_of_list f0 f1 f2 c= c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 cIN ccircumcenter * part cset_of_list f0 f1 c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 f2
+ (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))) |- (!w. ((w IN (set_of_list ul)) ==> ((distance (x , w)) = (distance (x , (HD ul))))))
T c==> ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN f1 b0 ! c==> cIN b0 * part cset_of_list f0 c= cdistance c, f1 b0 cdistance c, f1 cHD f0
- |- ((SUC m) = (m + (NUMERAL (BIT1 _0))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
+ |- (((!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) ==> ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x)) = ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x))
T c= c==> ! c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2 * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2
- (((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) |- ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) /\ (((voronoi_nondg V) vl) = ((voronoi_nondg V) vl)))
T c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 c/\ c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 c= cvoronoi_nondg f2 f0 cvoronoi_nondg f2 f0
- (?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) |- ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) = T)
T c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 c= c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 cT
+ |- ((NUMERAL (BIT1 _0)) <= (k + (NUMERAL (BIT1 _0))))
T c<= cNUMERAL cBIT1 c_0 c+ f0 cNUMERAL cBIT1 c_0
+ (!x. (!y. ((x = y) ==> (y = x)))) |- ((!x. (!y. ((x = y) ==> (y = x)))) /\ (!y. (!x. ((x = y) ==> (y = x)))))
T c==> ! ! c==> c= b0 b1 c= b1 b0 c/\ ! ! c==> c= b0 b1 c= b1 b0 ! ! c==> c= b1 b0 c= b0 b1
- |- ((\p'. (!q'. (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) = p') ==> ((p' ==> (((circumcenter (set_of_list ul)) IN t) = q')) ==> (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)) = (p' ==> q')))))) p')
T * / ! c==> c= c? / c/\ cIN b2 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b2 b0 c==> c==> b0 c= cIN ccircumcenter * part cset_of_list f0 f1 b1 c= c==> c? / c/\ cIN b2 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b2 cIN ccircumcenter * part cset_of_list f0 f1 c==> b0 b1 f2
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) |- ((!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) /\ (!m. (!p. ((?n. ((m <= n) /\ (n <= p))) ==> (m <= p)))))
T c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 c/\ ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 ! ! c==> c? / c/\ c<= b0 b2 c<= b2 b1 c<= b0 b1
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- ((packing V) /\ (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))))) |- ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> (((voronoi_nondg V) vl) = T))
T c==> c/\ cpacking f0 c/\ c= cLENGTH f1 c+ f2 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f1 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0 c==> c/\ cinitial_sublist f3 f1 c< cNUMERAL c_0 cLENGTH f3 c= cvoronoi_nondg f0 f3 cT
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!w. ((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul))))))), (u IN (set_of_list ul)), ((HD ul) IN (set_of_list ul)) |- (((distance ((HD ul) , (circumcenter (set_of_list ul)))) = (radV (set_of_list ul))) /\ ((radV (set_of_list ul)) = (distance (u , (circumcenter (set_of_list ul))))))
T c==> ! c==> cIN b0 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, b0 ccircumcenter * part cset_of_list f0 c==> cIN f1 * part cset_of_list f0 c==> cIN cHD f0 * part cset_of_list f0 c/\ c= cdistance c, cHD f0 ccircumcenter * part cset_of_list f0 cradV * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, f1 ccircumcenter * part cset_of_list f0
+ ((packing V) /\ (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))))) |- ((LENGTH ul) = (k + (NUMERAL (BIT1 _0))))
T c==> c/\ cpacking f0 c/\ c= cLENGTH f1 c+ f2 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f1 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0 c= cLENGTH f1 c+ f2 cNUMERAL cBIT1 c_0
+ (!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) |- ((!p. ((?n. ((m <= n) /\ (n <= p))) ==> (m <= p))) = T)
T c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 c= ! c==> c? / c/\ c<= f0 b1 c<= b1 b0 c<= f0 b0 cT
+ (((int_of_num m) = (int_of_num n)) = (m = n)) |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c==> c= c= cint_of_num f0 cint_of_num f1 c= f0 f1 c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
+ (~ (affine_dependent (set_of_list ul))) |- ((affine_dependent (set_of_list ul)) = F)
T c==> c~ caffine_dependent * part cset_of_list f0 c= caffine_dependent * part cset_of_list f0 cF
+ |- (((!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) ==> ((\t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) t)) = ((\t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) t))
T c= c==> ! ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 * / ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 f1 * / ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 f1
+ (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))) |- ((w IN (set_of_list ul)) ==> ((distance (x , w)) = (distance (x , (HD ul)))))
T c==> ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN f1 b0 c==> cIN f2 * part cset_of_list f0 c= cdistance c, f1 f2 cdistance c, f1 cHD f0
- |- (((!p'. (!q'. (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) = p') ==> ((p' ==> (((circumcenter (set_of_list ul)) IN t) = q')) ==> (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)) = (p' ==> q')))))) ==> ((\p'. (!q'. (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) = p') ==> ((p' ==> (((circumcenter (set_of_list ul)) IN t) = q')) ==> (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) = p') ==> ((p' ==> (((circumcenter (set_of_list ul)) IN t) = q')) ==> (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c? / c/\ cIN b2 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b2 b0 c==> c==> b0 c= cIN ccircumcenter * part cset_of_list f0 f1 b1 c= c==> c? / c/\ cIN b2 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b2 cIN ccircumcenter * part cset_of_list f0 f1 c==> b0 b1 * / ! c==> c= c? / c/\ cIN b2 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b2 b0 c==> c==> b0 c= cIN ccircumcenter * part cset_of_list f0 f1 b1 c= c==> c? / c/\ cIN b2 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b2 cIN ccircumcenter * part cset_of_list f0 f1 c==> b0 b1 f2 * / ! c==> c= c? / c/\ cIN b2 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b2 b0 c==> c==> b0 c= cIN ccircumcenter * part cset_of_list f0 f1 b1 c= c==> c? / c/\ cIN b2 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b2 cIN ccircumcenter * part cset_of_list f0 f1 c==> b0 b1 f2
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) |- (?n. (((CARD (set_of_list ul)) <= n) /\ (n <= (k + (NUMERAL (BIT1 _0))))))
T c==> c= cLENGTH f0 c+ f1 cNUMERAL cBIT1 c_0 c? / c/\ c<= cCARD * part cset_of_list f0 b0 c<= b0 c+ f1 cNUMERAL cBIT1 c_0
+ |- ((((packing V) /\ (((barV V) k) ul)) ==> ((LENGTH ul) = (k + (NUMERAL (BIT1 _0))))) = (((packing V) /\ (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))))) ==> T))
T c= c==> c/\ cpacking f0 cbarV f0 f1 f2 c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 c==> c/\ cpacking f0 c/\ c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f2 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0 cT
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> ((((hull affine) ((voronoi_list V) ul)) INTER ((hull affine) (set_of_list ul))) = ((circumcenter (set_of_list ul)) INSERT EMPTY))))) = T)
T c= ! ! c==> c/\ cpacking f0 cbarV f0 b1 b0 c= * * part cINTER * * part chull part caffine * * part cvoronoi_list f0 b0 * * part chull part caffine * part cset_of_list b0 * * part cINSERT ccircumcenter * part cset_of_list b0 part cEMPTY cT
+ |- (((packing V) /\ (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))))) ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) = T))
T c==> c/\ cpacking f0 c/\ c= cLENGTH f1 c+ f2 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f1 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0 c= c= cLENGTH f1 c+ f2 cNUMERAL cBIT1 c_0 cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!n. (n <= n)) ==> ((\n. (n <= n)) n)) = ((\n. (n <= n)) n))
T c= c==> ! c<= b0 b0 * / c<= b0 b0 f0 * / c<= b0 b0 f0
+ |- (((!m. (!p. ((?n. ((m <= n) /\ (n <= p))) ==> (m <= p)))) ==> ((\m. (!p. ((?n. ((m <= n) /\ (n <= p))) ==> (m <= p)))) m)) = ((\m. (!p. ((?n. ((m <= n) /\ (n <= p))) ==> (m <= p)))) m))
T c= c==> ! ! c==> c? / c/\ c<= b0 b2 c<= b2 b1 c<= b0 b1 * / ! c==> c? / c/\ c<= b0 b2 c<= b2 b1 c<= b0 b1 f0 * / ! c==> c? / c/\ c<= b0 b2 c<= b2 b1 c<= b0 b1 f0
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _3496493)) /\ ((real_le ((real_add ((real_add (real_of_int _3496493)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) |- (((real_ge (real_of_int _3496493)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496493))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) |- ((!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) /\ (!x. (!z. ((?y. ((x = y) /\ (y = z))) ==> (x = z)))))
T c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 c/\ ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 ! ! c==> c? / c/\ c= b0 b2 c= b2 b1 c= b0 b1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (x = (circumcenter (set_of_list ul))) |- ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((x IN t) = ((circumcenter (set_of_list ul)) IN t)))
T c==> c= f0 ccircumcenter * part cset_of_list f1 c==> c? / c/\ cIN b0 * part cset_of_list f1 c= f2 * * part cbis cHD f1 b0 c= cIN f0 f2 cIN ccircumcenter * part cset_of_list f1 f2
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((real_ge x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 f1 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- ((NUMERAL (BIT1 _0)) <= (LENGTH ul)) |- ((!ul. (((NUMERAL (BIT1 _0)) <= (LENGTH ul)) ==> ((HD ul) IN (set_of_list ul)))) ==> ((HD ul) IN (set_of_list ul)))
T c==> c<= cNUMERAL cBIT1 c_0 cLENGTH f0 c==> ! c==> c<= cNUMERAL cBIT1 c_0 cLENGTH b0 cIN cHD b0 * part cset_of_list b0 cIN cHD f0 * part cset_of_list f0
+ |- ((((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))) /\ (x IN ((hull affine) (set_of_list ul)))) = (x = (circumcenter (set_of_list ul)))) = ((x IN ((INTERS (GSPEC (\GEN%PVAR%6122. (?u. (((SETSPEC GEN%PVAR%6122) (u IN (set_of_list ul))) ((bis (HD ul)) u)))))) INTER ((hull affine) (set_of_list ul)))) = (x = (circumcenter (set_of_list ul)))))
T c= c= c/\ ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN f1 b0 cIN f1 * * part chull part caffine * part cset_of_list f0 c= f1 ccircumcenter * part cset_of_list f0 c= cIN f1 * * part cINTER * part cINTERS * part cGSPEC / c? / cSETSPEC b0 cIN b1 * part cset_of_list f0 * * part cbis cHD f0 b1 * * part chull part caffine * part cset_of_list f0 c= f1 ccircumcenter * part cset_of_list f0
+ |- (((!x. ((x IN (INTERS s)) = (!t. ((t IN s) ==> (x IN t))))) ==> ((\x. ((x IN (INTERS s)) = (!t. ((t IN s) ==> (x IN t))))) x)) = ((\x. ((x IN (INTERS s)) = (!t. ((t IN s) ==> (x IN t))))) x))
T c= c==> ! c= cIN b0 * part cINTERS f0 ! c==> cIN b1 f0 cIN b0 b1 * / c= cIN b0 * part cINTERS f0 ! c==> cIN b1 f0 cIN b0 b1 f1 * / c= cIN b0 * part cINTERS f0 ! c==> cIN b1 f0 cIN b0 b1 f1
+ |- (((!p'. (!q'. ((((packing V) /\ (((barV V) k) ul)) = p') ==> ((p' ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) = q')) ==> ((((packing V) /\ (((barV V) k) ul)) ==> ((LENGTH ul) = (k + (NUMERAL (BIT1 _0))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((packing V) /\ (((barV V) k) ul)) = p') ==> ((p' ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) = q')) ==> ((((packing V) /\ (((barV V) k) ul)) ==> ((LENGTH ul) = (k + (NUMERAL (BIT1 _0))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((packing V) /\ (((barV V) k) ul)) = p') ==> ((p' ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) = q')) ==> ((((packing V) /\ (((barV V) k) ul)) ==> ((LENGTH ul) = (k + (NUMERAL (BIT1 _0))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cpacking f0 cbarV f0 f1 f2 b0 c==> c==> b0 c= c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 b1 c= c==> c/\ cpacking f0 cbarV f0 f1 f2 c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 c==> b0 b1 * / ! c==> c= c/\ cpacking f0 cbarV f0 f1 f2 b0 c==> c==> b0 c= c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 b1 c= c==> c/\ cpacking f0 cbarV f0 f1 f2 c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 c==> b0 b1 f3 * / ! c==> c= c/\ cpacking f0 cbarV f0 f1 f2 b0 c==> c==> b0 c= c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 b1 c= c==> c/\ cpacking f0 cbarV f0 f1 f2 c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 c==> b0 b1 f3
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (affine_dependent (set_of_list ul))), ((HD ul) IN (set_of_list ul)) |- (((\u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) u) ==> ((circumcenter (set_of_list ul)) IN t))
T c==> c~ caffine_dependent * part cset_of_list f0 c==> cIN cHD f0 * part cset_of_list f0 c==> * / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 f2 cIN ccircumcenter * part cset_of_list f0 f1
+ |- (((!x. ((x = y) ==> (y = x))) ==> ((\x. ((x = y) ==> (y = x))) x)) = ((\x. ((x = y) ==> (y = x))) x))
T c= c==> ! c==> c= b0 f0 c= f0 b0 * / c==> c= b0 f0 c= f0 b0 f1 * / c==> c= b0 f0 c= f0 b0 f1
+ |- (((!p'. (!q'. (((x IN ((bis (HD ul)) w)) = p') ==> ((p' ==> (((distance (x , w)) = (distance (x , (HD ul)))) = q')) ==> (((x IN ((bis (HD ul)) w)) ==> ((distance (x , w)) = (distance (x , (HD ul))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((x IN ((bis (HD ul)) w)) = p') ==> ((p' ==> (((distance (x , w)) = (distance (x , (HD ul)))) = q')) ==> (((x IN ((bis (HD ul)) w)) ==> ((distance (x , w)) = (distance (x , (HD ul))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((x IN ((bis (HD ul)) w)) = p') ==> ((p' ==> (((distance (x , w)) = (distance (x , (HD ul)))) = q')) ==> (((x IN ((bis (HD ul)) w)) ==> ((distance (x , w)) = (distance (x , (HD ul))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN f0 * * part cbis cHD f1 f2 b0 c==> c==> b0 c= c= cdistance c, f0 f2 cdistance c, f0 cHD f1 b1 c= c==> cIN f0 * * part cbis cHD f1 f2 c= cdistance c, f0 f2 cdistance c, f0 cHD f1 c==> b0 b1 * / ! c==> c= cIN f0 * * part cbis cHD f1 f2 b0 c==> c==> b0 c= c= cdistance c, f0 f2 cdistance c, f0 cHD f1 b1 c= c==> cIN f0 * * part cbis cHD f1 f2 c= cdistance c, f0 f2 cdistance c, f0 cHD f1 c==> b0 b1 f3 * / ! c==> c= cIN f0 * * part cbis cHD f1 f2 b0 c==> c==> b0 c= c= cdistance c, f0 f2 cdistance c, f0 cHD f1 b1 c= c==> cIN f0 * * part cbis cHD f1 f2 c= cdistance c, f0 f2 cdistance c, f0 cHD f1 c==> b0 b1 f3
+ |- ((\m. (!p. ((?n. ((m <= n) /\ (n <= p))) ==> (m <= p)))) m)
T * / ! c==> c? / c/\ c<= b0 b2 c<= b2 b1 c<= b0 b1 f0
+ (!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) |- (!p. ((?n. ((m <= n) /\ (n <= p))) ==> (m <= p)))
T c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 ! c==> c? / c/\ c<= f0 b1 c<= b1 b0 c<= f0 b0
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _3496493)) /\ ((real_le ((real_add ((real_add (real_of_int _3496493)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _3496493)) /\ ((real_le ((real_add ((real_add (real_of_int _3496493)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _3496493)) /\ ((real_le ((real_add ((real_add (real_of_int _3496493)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))), ((m <= n) /\ (n <= p)) |- ((!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) /\ (m <= p))
T c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 c==> c/\ c<= f0 f1 c<= f1 f2 c/\ ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 c<= f0 f2
+ ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0)))), ((aff_dim (set_of_list ul)) = (int_of_num k)) |- (~ (affine_dependent (set_of_list ul)))
T c==> c= cCARD * part cset_of_list f0 c+ f1 cNUMERAL cBIT1 c_0 c==> c= caff_dim * part cset_of_list f0 cint_of_num f1 c~ caffine_dependent * part cset_of_list f0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ (~ (affine_dependent (set_of_list ul))), ((HD ul) IN (set_of_list ul)) |- ((x = (circumcenter (set_of_list ul))) ==> ((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))) /\ (x IN ((hull affine) (set_of_list ul)))))
T c==> c~ caffine_dependent * part cset_of_list f0 c==> cIN cHD f0 * part cset_of_list f0 c==> c= f1 ccircumcenter * part cset_of_list f0 c/\ ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN f1 b0 cIN f1 * * part chull part caffine * part cset_of_list f0
- (!w. ((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul))))))), (w IN (set_of_list ul)) |- ((!w. ((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul))))))) /\ ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul))))))
T c==> ! c==> cIN b0 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, b0 ccircumcenter * part cset_of_list f0 c==> cIN f1 * part cset_of_list f0 c/\ ! c==> cIN b0 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, b0 ccircumcenter * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, f1 ccircumcenter * part cset_of_list f0
+ |- ((\p. ((?n. ((m <= n) /\ (n <= p))) ==> (m <= p))) p)
T * / c==> c? / c/\ c<= f0 b1 c<= b1 b0 c<= f0 b0 f1
+ |- (~ (((real_le (real_of_num k)) ((real_sub (real_of_num (CARD (set_of_list ul)))) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le (real_of_num (CARD (set_of_list ul)))) ((real_add (real_of_num k)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le ((real_add (real_of_num (CARD (set_of_list ul)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_num k)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_num k)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))))))
T c~ c/\ creal_le creal_of_num f0 creal_sub creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cCARD * part cset_of_list f1 creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 c\/ creal_le creal_add creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1
+ |- (((!q'. ((((packing V) /\ (((barV V) k) ul)) = p') ==> ((p' ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) = q')) ==> ((((packing V) /\ (((barV V) k) ul)) ==> ((LENGTH ul) = (k + (NUMERAL (BIT1 _0))))) = (p' ==> q'))))) ==> ((\q'. ((((packing V) /\ (((barV V) k) ul)) = p') ==> ((p' ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) = q')) ==> ((((packing V) /\ (((barV V) k) ul)) ==> ((LENGTH ul) = (k + (NUMERAL (BIT1 _0))))) = (p' ==> q'))))) q')) = ((\q'. ((((packing V) /\ (((barV V) k) ul)) = p') ==> ((p' ==> (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) = q')) ==> ((((packing V) /\ (((barV V) k) ul)) ==> ((LENGTH ul) = (k + (NUMERAL (BIT1 _0))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cpacking f0 cbarV f0 f1 f2 f3 c==> c==> f3 c= c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 b0 c= c==> c/\ cpacking f0 cbarV f0 f1 f2 c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 c==> f3 b0 * / c==> c= c/\ cpacking f0 cbarV f0 f1 f2 f3 c==> c==> f3 c= c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 b0 c= c==> c/\ cpacking f0 cbarV f0 f1 f2 c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 c==> f3 b0 f4 * / c==> c= c/\ cpacking f0 cbarV f0 f1 f2 f3 c==> c==> f3 c= c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 b0 c= c==> c/\ cpacking f0 cbarV f0 f1 f2 c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 c==> f3 b0 f4
+ (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))), (x IN ((hull affine) (set_of_list ul))) |- ((((x IN ((hull affine) (set_of_list ul))) /\ (?c. (!w. ((w IN (set_of_list ul)) ==> ((distance (x , w)) = c))))) ==> (x = (circumcenter (set_of_list ul)))) = (x = (circumcenter (set_of_list ul))))
T c==> ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN f1 b0 c==> cIN f1 * * part chull part caffine * part cset_of_list f0 c= c==> c/\ cIN f1 * * part chull part caffine * part cset_of_list f0 c? / ! c==> cIN b1 * part cset_of_list f0 c= cdistance c, f1 b1 b0 c= f1 ccircumcenter * part cset_of_list f0 c= f1 ccircumcenter * part cset_of_list f0
+ |- ((m <= n) = ((int_le (int_of_num m)) (int_of_num n)))
T c= c<= f0 f1 cint_le cint_of_num f0 cint_of_num f1
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!w. ((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul))))))), (u IN (set_of_list ul)), ((HD ul) IN (set_of_list ul)) |- ((!w. ((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul))))))) /\ (((distance ((HD ul) , (circumcenter (set_of_list ul)))) = (radV (set_of_list ul))) /\ ((radV (set_of_list ul)) = (distance (u , (circumcenter (set_of_list ul)))))))
T c==> ! c==> cIN b0 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, b0 ccircumcenter * part cset_of_list f0 c==> cIN f1 * part cset_of_list f0 c==> cIN cHD f0 * part cset_of_list f0 c/\ ! c==> cIN b0 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, b0 ccircumcenter * part cset_of_list f0 c/\ c= cdistance c, cHD f0 ccircumcenter * part cset_of_list f0 cradV * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, f1 ccircumcenter * part cset_of_list f0
- |- ((((x = (circumcenter (set_of_list ul))) ==> ((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t))) = (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t))))) ==> (((x = (circumcenter (set_of_list ul))) ==> (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))) = ((x = (circumcenter (set_of_list ul))) ==> (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))))) = (((x = (circumcenter (set_of_list ul))) ==> (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))) = ((x = (circumcenter (set_of_list ul))) ==> (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t))))))
T c= c==> c==> c= f0 ccircumcenter * part cset_of_list f1 c= ! c==> c? / c/\ cIN b1 * part cset_of_list f1 c= b0 * * part cbis cHD f1 b1 cIN ccircumcenter * part cset_of_list f1 b0 ! c==> c? / c/\ cIN b1 * part cset_of_list f1 c= b0 * * part cbis cHD f1 b1 cIN ccircumcenter * part cset_of_list f1 b0 c= c==> c= f0 ccircumcenter * part cset_of_list f1 ! c==> c? / c/\ cIN b1 * part cset_of_list f1 c= b0 * * part cbis cHD f1 b1 cIN ccircumcenter * part cset_of_list f1 b0 c==> c= f0 ccircumcenter * part cset_of_list f1 ! c==> c? / c/\ cIN b1 * part cset_of_list f1 c= b0 * * part cbis cHD f1 b1 cIN ccircumcenter * part cset_of_list f1 b0 c= c==> c= f0 ccircumcenter * part cset_of_list f1 ! c==> c? / c/\ cIN b1 * part cset_of_list f1 c= b0 * * part cbis cHD f1 b1 cIN ccircumcenter * part cset_of_list f1 b0 c==> c= f0 ccircumcenter * part cset_of_list f1 ! c==> c? / c/\ cIN b1 * part cset_of_list f1 c= b0 * * part cbis cHD f1 b1 cIN ccircumcenter * part cset_of_list f1 b0
+ |- ((((int_le (int_of_num k)) ((int_sub (int_of_num (CARD (set_of_list ul)))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((int_le (int_of_num (CARD (set_of_list ul)))) ((int_add (int_of_num k)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((int_of_num (CARD (set_of_list ul))) = ((int_add (int_of_num k)) (int_of_num (NUMERAL (BIT1 _0))))))) = (((int_le (int_of_num k)) ((int_sub (int_of_num (CARD (set_of_list ul)))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((CARD (set_of_list ul)) <= (k + (NUMERAL (BIT1 _0)))) ==> ((CARD (set_of_list ul)) = (k + (NUMERAL (BIT1 _0)))))))
T c= c==> cint_le cint_of_num f0 cint_sub cint_of_num cCARD * part cset_of_list f1 cint_of_num cNUMERAL cBIT1 c_0 c==> cint_le cint_of_num cCARD * part cset_of_list f1 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c= cint_of_num cCARD * part cset_of_list f1 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c==> cint_le cint_of_num f0 cint_sub cint_of_num cCARD * part cset_of_list f1 cint_of_num cNUMERAL cBIT1 c_0 c==> c<= cCARD * part cset_of_list f1 c+ f0 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_list f1 c+ f0 cNUMERAL cBIT1 c_0
+ |- (((!s. (!x. ((x IN (INTERS s)) = (!t. ((t IN s) ==> (x IN t)))))) ==> ((\s. (!x. ((x IN (INTERS s)) = (!t. ((t IN s) ==> (x IN t)))))) s)) = ((\s. (!x. ((x IN (INTERS s)) = (!t. ((t IN s) ==> (x IN t)))))) s))
T c= c==> ! ! c= cIN b1 * part cINTERS b0 ! c==> cIN b2 b0 cIN b1 b2 * / ! c= cIN b1 * part cINTERS b0 ! c==> cIN b2 b0 cIN b1 b2 f0 * / ! c= cIN b1 * part cINTERS b0 ! c==> cIN b2 b0 cIN b1 b2 f0
+ |- ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) k)
T * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\x. (!z. ((?y. ((x = y) /\ (y = z))) ==> (x = z)))) x)
T * / ! c==> c? / c/\ c= b0 b2 c= b2 b1 c= b0 b1 f0
+ (!w. ((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul))))))), ((HD ul) IN (set_of_list ul)) |- ((distance ((HD ul) , (circumcenter (set_of_list ul)))) = (radV (set_of_list ul)))
T c==> ! c==> cIN b0 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, b0 ccircumcenter * part cset_of_list f0 c==> cIN cHD f0 * part cset_of_list f0 c= cdistance c, cHD f0 ccircumcenter * part cset_of_list f0 cradV * part cset_of_list f0
+ |- (((!x. (!y. ((x = y) ==> (y = x)))) ==> (!y. (!x. ((x = y) ==> (y = x))))) = (!y. (!x. ((x = y) ==> (y = x)))))
T c= c==> ! ! c==> c= b0 b1 c= b1 b0 ! ! c==> c= b1 b0 c= b0 b1 ! ! c==> c= b1 b0 c= b0 b1
+ |- ((\s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) s)
T * / ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 f0
+ |- ((int_of_num k) = ((int_sub ((int_add (int_of_num k)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0)))))
T c= cint_of_num f0 cint_sub cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0
+ |- (((!S. (((~ (S = EMPTY)) /\ (~ (affine_dependent S))) ==> ((circumcenter S) IN ((hull affine) S)))) ==> ((\S. (((~ (S = EMPTY)) /\ (~ (affine_dependent S))) ==> ((circumcenter S) IN ((hull affine) S)))) S)) = ((\S. (((~ (S = EMPTY)) /\ (~ (affine_dependent S))) ==> ((circumcenter S) IN ((hull affine) S)))) S))
T c= c==> ! c==> c/\ c~ c= b0 part cEMPTY c~ caffine_dependent b0 cIN ccircumcenter b0 * * part chull part caffine b0 * / c==> c/\ c~ c= b0 part cEMPTY c~ caffine_dependent b0 cIN ccircumcenter b0 * * part chull part caffine b0 f0 * / c==> c/\ c~ c= b0 part cEMPTY c~ caffine_dependent b0 cIN ccircumcenter b0 * * part chull part caffine b0 f0
+ |- ((FINITE (set_of_list l)) = T)
T c= cFINITE * part cset_of_list f0 cT
- (?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))), (~ (affine_dependent (set_of_list ul))), ((HD ul) IN (set_of_list ul)) |- ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) /\ ((circumcenter (set_of_list ul)) IN t))
T c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 c==> c~ caffine_dependent * part cset_of_list f0 c==> cIN cHD f0 * part cset_of_list f0 c/\ c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 cIN ccircumcenter * part cset_of_list f0 f1
+ |- ((((\n. ((m <= n) /\ (n <= p))) n) ==> ((!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) ==> (m <= p))) = T)
T c= c==> * / c/\ c<= f0 b0 c<= b0 f1 f2 c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 c<= f0 f1 cT
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul)))))) (real_of_num (NUMERAL _0))))) |- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul)))))) (real_of_num (NUMERAL _0))))) /\ F)
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0 cF
+ |- ((\ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (((aff_dim (set_of_list ul)) = (int_of_num k)) /\ (!u. (!v. (((u IN ((hull affine) ((voronoi_list V) ul))) /\ (v IN ((hull affine) (set_of_list ul)))) ==> (((dot ((vector_sub u) (circumcenter (set_of_list ul)))) ((vector_sub v) (circumcenter (set_of_list ul)))) = (real_of_num (NUMERAL _0)))))))))) ul)
T * / ! c==> c/\ cpacking f0 cbarV f0 b1 b0 c/\ c= caff_dim * part cset_of_list b0 cint_of_num b1 ! ! c==> c/\ cIN b2 * * part chull part caffine * * part cvoronoi_list f0 b0 cIN b3 * * part chull part caffine * part cset_of_list b0 c= cdot cvector_sub b2 ccircumcenter * part cset_of_list b0 cvector_sub b3 ccircumcenter * part cset_of_list b0 creal_of_num cNUMERAL c_0 f1
- (?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) |- ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) /\ (((circumcenter (set_of_list ul)) IN t) = ((circumcenter (set_of_list ul)) IN t)))
T c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 c/\ c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 c= cIN ccircumcenter * part cset_of_list f0 f1 cIN ccircumcenter * part cset_of_list f0 f1
+ (~ (~ (((real_le ((real_add (real_of_num k)) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((real_add (real_of_num k)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_sub ((real_add (real_of_num k)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))))) |- (((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))
T c==> c~ c~ c\/ creal_le creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_sub creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 c\/ creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\q'. (((x IN ((bis (HD ul)) w)) = p') ==> ((p' ==> (((distance (x , w)) = (distance (x , (HD ul)))) = q')) ==> (((x IN ((bis (HD ul)) w)) ==> ((distance (x , w)) = (distance (x , (HD ul))))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 * * part cbis cHD f1 f2 f3 c==> c==> f3 c= c= cdistance c, f0 f2 cdistance c, f0 cHD f1 b0 c= c==> cIN f0 * * part cbis cHD f1 f2 c= cdistance c, f0 f2 cdistance c, f0 cHD f1 c==> f3 b0 f4
+ (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))), (!p. (((p IN ((hull affine) (set_of_list ul))) /\ (?c. (!w. ((w IN (set_of_list ul)) ==> ((distance (p , w)) = c))))) ==> (p = (circumcenter (set_of_list ul))))), (x IN ((hull affine) (set_of_list ul))) |- (x = (circumcenter (set_of_list ul)))
T c==> ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN f1 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * part cset_of_list f0 c? / ! c==> cIN b2 * part cset_of_list f0 c= cdistance c, b0 b2 b1 c= b0 ccircumcenter * part cset_of_list f0 c==> cIN f1 * * part chull part caffine * part cset_of_list f0 c= f1 ccircumcenter * part cset_of_list f0
+ ((~ (s = EMPTY)) = (?x. (x IN s))) |- ((?x. (x IN s)) = (~ (s = EMPTY)))
T c==> c= c~ c= f0 part cEMPTY c? / cIN b0 f0 c= c? / cIN b0 f0 c~ c= f0 part cEMPTY
+ ((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) |- (T = (((CARD (set_of_list ul)) <= (LENGTH ul)) /\ ((LENGTH ul) <= (k + (NUMERAL (BIT1 _0))))))
T c==> c= cLENGTH f0 c+ f1 cNUMERAL cBIT1 c_0 c= cT c/\ c<= cCARD * part cset_of_list f0 cLENGTH f0 c<= cLENGTH f0 c+ f1 cNUMERAL cBIT1 c_0
- |- (((!q'. (((x = (circumcenter (set_of_list ul))) = p') ==> ((p' ==> ((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t))) = q')) ==> (((x = (circumcenter (set_of_list ul))) ==> (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))) = (p' ==> q'))))) ==> ((\q'. (((x = (circumcenter (set_of_list ul))) = p') ==> ((p' ==> ((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t))) = q')) ==> (((x = (circumcenter (set_of_list ul))) ==> (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))) = (p' ==> q'))))) q')) = ((\q'. (((x = (circumcenter (set_of_list ul))) = p') ==> ((p' ==> ((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t))) = q')) ==> (((x = (circumcenter (set_of_list ul))) ==> (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c= f0 ccircumcenter * part cset_of_list f1 f2 c==> c==> f2 c= ! c==> c? / c/\ cIN b2 * part cset_of_list f1 c= b1 * * part cbis cHD f1 b2 cIN ccircumcenter * part cset_of_list f1 b1 b0 c= c==> c= f0 ccircumcenter * part cset_of_list f1 ! c==> c? / c/\ cIN b2 * part cset_of_list f1 c= b1 * * part cbis cHD f1 b2 cIN ccircumcenter * part cset_of_list f1 b1 c==> f2 b0 * / c==> c= c= f0 ccircumcenter * part cset_of_list f1 f2 c==> c==> f2 c= ! c==> c? / c/\ cIN b2 * part cset_of_list f1 c= b1 * * part cbis cHD f1 b2 cIN ccircumcenter * part cset_of_list f1 b1 b0 c= c==> c= f0 ccircumcenter * part cset_of_list f1 ! c==> c? / c/\ cIN b2 * part cset_of_list f1 c= b1 * * part cbis cHD f1 b2 cIN ccircumcenter * part cset_of_list f1 b1 c==> f2 b0 f3 * / c==> c= c= f0 ccircumcenter * part cset_of_list f1 f2 c==> c==> f2 c= ! c==> c? / c/\ cIN b2 * part cset_of_list f1 c= b1 * * part cbis cHD f1 b2 cIN ccircumcenter * part cset_of_list f1 b1 b0 c= c==> c= f0 ccircumcenter * part cset_of_list f1 ! c==> c? / c/\ cIN b2 * part cset_of_list f1 c= b1 * * part cbis cHD f1 b2 cIN ccircumcenter * part cset_of_list f1 b1 c==> f2 b0 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!w. ((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul))))))), (w IN (set_of_list ul)) |- ((w IN (set_of_list ul)) /\ ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul))))))
T c==> ! c==> cIN b0 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, b0 ccircumcenter * part cset_of_list f0 c==> cIN f1 * part cset_of_list f0 c/\ cIN f1 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, f1 ccircumcenter * part cset_of_list f0
- (!p. (((p IN ((hull affine) (set_of_list ul))) /\ (?c. (!w. ((w IN (set_of_list ul)) ==> ((distance (p , w)) = c))))) ==> (p = (circumcenter (set_of_list ul))))), ((p IN ((hull affine) (set_of_list ul))) /\ (?c. (!w. ((w IN (set_of_list ul)) ==> ((distance (p , w)) = c))))) |- ((!p. (((p IN ((hull affine) (set_of_list ul))) /\ (?c. (!w. ((w IN (set_of_list ul)) ==> ((distance (p , w)) = c))))) ==> (p = (circumcenter (set_of_list ul))))) /\ (p = (circumcenter (set_of_list ul))))
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * part cset_of_list f0 c? / ! c==> cIN b2 * part cset_of_list f0 c= cdistance c, b0 b2 b1 c= b0 ccircumcenter * part cset_of_list f0 c==> c/\ cIN f1 * * part chull part caffine * part cset_of_list f0 c? / ! c==> cIN b1 * part cset_of_list f0 c= cdistance c, f1 b1 b0 c/\ ! c==> c/\ cIN b0 * * part chull part caffine * part cset_of_list f0 c? / ! c==> cIN b2 * part cset_of_list f0 c= cdistance c, b0 b2 b1 c= b0 ccircumcenter * part cset_of_list f0 c= f1 ccircumcenter * part cset_of_list f0
- ((packing V) /\ (((barV V) k) ul)) |- ((packing V) = T)
T c==> c/\ cpacking f0 cbarV f0 f1 f2 c= cpacking f0 cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!p. (((p IN ((hull affine) (set_of_list ul))) /\ (?c. (!w. ((w IN (set_of_list ul)) ==> ((distance (p , w)) = c))))) ==> (p = (circumcenter (set_of_list ul))))) |- ((!p. (((p IN ((hull affine) (set_of_list ul))) /\ (?c. (!w. ((w IN (set_of_list ul)) ==> ((distance (p , w)) = c))))) ==> (p = (circumcenter (set_of_list ul))))) /\ (!p. (((p IN ((hull affine) (set_of_list ul))) /\ (?c. (!w. ((w IN (set_of_list ul)) ==> ((distance (p , w)) = c))))) ==> (p = (circumcenter (set_of_list ul))))))
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * part cset_of_list f0 c? / ! c==> cIN b2 * part cset_of_list f0 c= cdistance c, b0 b2 b1 c= b0 ccircumcenter * part cset_of_list f0 c/\ ! c==> c/\ cIN b0 * * part chull part caffine * part cset_of_list f0 c? / ! c==> cIN b2 * part cset_of_list f0 c= cdistance c, b0 b2 b1 c= b0 ccircumcenter * part cset_of_list f0 ! c==> c/\ cIN b0 * * part chull part caffine * part cset_of_list f0 c? / ! c==> cIN b2 * part cset_of_list f0 c= cdistance c, b0 b2 b1 c= b0 ccircumcenter * part cset_of_list f0
- |- (((real_ge (real_of_int _3496493)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _3496493)) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- (!ul. (((NUMERAL (BIT1 _0)) <= (LENGTH ul)) ==> ((HD ul) IN (set_of_list ul)))) |- ((((NUMERAL (BIT1 _0)) <= (LENGTH ul)) ==> ((HD ul) IN (set_of_list ul))) = T)
T c==> ! c==> c<= cNUMERAL cBIT1 c_0 cLENGTH b0 cIN cHD b0 * part cset_of_list b0 c= c==> c<= cNUMERAL cBIT1 c_0 cLENGTH f0 cIN cHD f0 * part cset_of_list f0 cT
- |- (((x = (circumcenter (set_of_list ul))) ==> ((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t))) = q')) ==> (((x = (circumcenter (set_of_list ul))) ==> (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))) = ((x = (circumcenter (set_of_list ul))) ==> q')))
T c==> c==> c= f0 ccircumcenter * part cset_of_list f1 c= ! c==> c? / c/\ cIN b1 * part cset_of_list f1 c= b0 * * part cbis cHD f1 b1 cIN ccircumcenter * part cset_of_list f1 b0 f2 c= c==> c= f0 ccircumcenter * part cset_of_list f1 ! c==> c? / c/\ cIN b1 * part cset_of_list f1 c= b0 * * part cbis cHD f1 b1 cIN ccircumcenter * part cset_of_list f1 b0 c==> c= f0 ccircumcenter * part cset_of_list f1 f2
- ((packing V) /\ (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))))) |- ((packing V) = T)
T c==> c/\ cpacking f0 c/\ c= cLENGTH f1 c+ f2 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f1 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0 c= cpacking f0 cT
- |- ((x = (circumcenter (set_of_list ul))) ==> ((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t))) = (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))))
T c==> c= f0 ccircumcenter * part cset_of_list f1 c= ! c==> c? / c/\ cIN b1 * part cset_of_list f1 c= b0 * * part cbis cHD f1 b1 cIN ccircumcenter * part cset_of_list f1 b0 ! c==> c? / c/\ cIN b1 * part cset_of_list f1 c= b0 * * part cbis cHD f1 b1 cIN ccircumcenter * part cset_of_list f1 b0
- |- (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) = p') ==> ((p' ==> (((circumcenter (set_of_list ul)) IN t) = q')) ==> (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)) = (p' ==> q'))))
T c==> c= c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 f2 c==> c==> f2 c= cIN ccircumcenter * part cset_of_list f0 f1 f3 c= c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 cIN ccircumcenter * part cset_of_list f0 f1 c==> f2 f3
- |- ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul)))))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _3496493)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496493))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _3496493)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _3496493))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _3496493))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- (!p. (((p IN ((hull affine) (set_of_list ul))) /\ (?c. (!w. ((w IN (set_of_list ul)) ==> ((distance (p , w)) = c))))) ==> (p = (circumcenter (set_of_list ul))))), ((p IN ((hull affine) (set_of_list ul))) /\ (?c. (!w. ((w IN (set_of_list ul)) ==> ((distance (p , w)) = c))))) |- (((p IN ((hull affine) (set_of_list ul))) /\ (?c. (!w. ((w IN (set_of_list ul)) ==> ((distance (p , w)) = c))))) /\ (p = (circumcenter (set_of_list ul))))
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * part cset_of_list f0 c? / ! c==> cIN b2 * part cset_of_list f0 c= cdistance c, b0 b2 b1 c= b0 ccircumcenter * part cset_of_list f0 c==> c/\ cIN f1 * * part chull part caffine * part cset_of_list f0 c? / ! c==> cIN b1 * part cset_of_list f0 c= cdistance c, f1 b1 b0 c/\ c/\ cIN f1 * * part chull part caffine * part cset_of_list f0 c? / ! c==> cIN b1 * part cset_of_list f0 c= cdistance c, f1 b1 b0 c= f1 ccircumcenter * part cset_of_list f0
- |- (((x = (circumcenter (set_of_list ul))) = p') ==> ((p' ==> ((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t))) = q')) ==> (((x = (circumcenter (set_of_list ul))) ==> (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))) = (p' ==> q'))))
T c==> c= c= f0 ccircumcenter * part cset_of_list f1 f2 c==> c==> f2 c= ! c==> c? / c/\ cIN b1 * part cset_of_list f1 c= b0 * * part cbis cHD f1 b1 cIN ccircumcenter * part cset_of_list f1 b0 f3 c= c==> c= f0 ccircumcenter * part cset_of_list f1 ! c==> c? / c/\ cIN b1 * part cset_of_list f1 c= b0 * * part cbis cHD f1 b1 cIN ccircumcenter * part cset_of_list f1 b0 c==> f2 f3
- (!ul. (((NUMERAL (BIT1 _0)) <= (LENGTH ul)) ==> ((HD ul) IN (set_of_list ul)))) |- ((\ul. (((NUMERAL (BIT1 _0)) <= (LENGTH ul)) ==> ((HD ul) IN (set_of_list ul)))) ul)
T c==> ! c==> c<= cNUMERAL cBIT1 c_0 cLENGTH b0 cIN cHD b0 * part cset_of_list b0 * / c==> c<= cNUMERAL cBIT1 c_0 cLENGTH b0 cIN cHD b0 * part cset_of_list b0 f0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> q')))
T c==> c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 c= cvoronoi_nondg f2 f0 f3 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0 c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 f3
- |- ((((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> (((voronoi_nondg V) vl) = ((voronoi_nondg V) vl))) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))) = (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))))
T c= c==> c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 c= cvoronoi_nondg f2 f0 cvoronoi_nondg f2 f0 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0 c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0 c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (((circumcenter (set_of_list ul)) IN t) = ((circumcenter (set_of_list ul)) IN t))) ==> (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)) = ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))) = (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)) = ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t))))
T c= c==> c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 c= cIN ccircumcenter * part cset_of_list f0 f1 cIN ccircumcenter * part cset_of_list f0 f1 c= c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 cIN ccircumcenter * part cset_of_list f0 f1 c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 cIN ccircumcenter * part cset_of_list f0 f1 c= c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 cIN ccircumcenter * part cset_of_list f0 f1 c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 cIN ccircumcenter * part cset_of_list f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (u IN (set_of_list ul)) |- (T = (u IN (set_of_list ul)))
T c==> cIN f0 * part cset_of_list f1 c= cT cIN f0 * part cset_of_list f1
- (((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) |- (((initial_sublist vl) ul) = T)
T c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 c= cinitial_sublist f0 f1 cT
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\q'. (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) = p') ==> ((p' ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = (p' ==> q'))))) q')
T * / c==> c= c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 f2 c==> c==> f2 c= cvoronoi_nondg f3 f0 b0 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f3 f0 c==> f2 b0 f4
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))), (~ (affine_dependent (set_of_list ul))), ((HD ul) IN (set_of_list ul)) |- ((circumcenter (set_of_list ul)) IN t)
T c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 c==> c~ caffine_dependent * part cset_of_list f0 c==> cIN cHD f0 * part cset_of_list f0 cIN ccircumcenter * part cset_of_list f0 f1
- (((real_ge (real_of_int _3496493)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496493))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496493))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\q'. (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) = p') ==> ((p' ==> (((circumcenter (set_of_list ul)) IN t) = q')) ==> (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)) = (p' ==> q'))))) q')
T * / c==> c= c? / c/\ cIN b1 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b1 f2 c==> c==> f2 c= cIN ccircumcenter * part cset_of_list f0 f1 b0 c= c==> c? / c/\ cIN b1 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b1 cIN ccircumcenter * part cset_of_list f0 f1 c==> f2 b0 f3
- (~ ((set_of_list ul) = EMPTY)) |- (~ (EMPTY = (set_of_list ul)))
T c==> c~ c= * part cset_of_list f0 part cEMPTY c~ c= part cEMPTY * part cset_of_list f0
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((((int_le (int_of_num k)) ((int_sub (int_of_num (CARD (set_of_list ul)))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((int_le (int_of_num (CARD (set_of_list ul)))) ((int_add (int_of_num k)) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((int_of_num (CARD (set_of_list ul))) = ((int_add (int_of_num k)) (int_of_num (NUMERAL (BIT1 _0))))))) = T)
T c= c==> cint_le cint_of_num f0 cint_sub cint_of_num cCARD * part cset_of_list f1 cint_of_num cNUMERAL cBIT1 c_0 c==> cint_le cint_of_num cCARD * part cset_of_list f1 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c= cint_of_num cCARD * part cset_of_list f1 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cT
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p'. (!q'. (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) = p') ==> ((p' ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 b0 c==> c==> b0 c= cvoronoi_nondg f2 f0 b1 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0 c==> b0 b1 f3
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- ((packing V) /\ (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))))) |- (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))
T c==> c/\ cpacking f0 c/\ c= cLENGTH f1 c+ f2 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f1 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0 ! c==> c/\ cinitial_sublist b0 f1 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x = y) |- ((!x. (!y. ((x = y) ==> (y = x)))) ==> (y = x))
T c==> c= f0 f1 c==> ! ! c==> c= b0 b1 c= b1 b0 c= f1 f0
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- (((real_ge (real_of_int _3496493)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496493))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _3496493))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!q'. (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) = p') ==> ((p' ==> (((circumcenter (set_of_list ul)) IN t) = q')) ==> (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)) = (p' ==> q'))))) ==> ((\q'. (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) = p') ==> ((p' ==> (((circumcenter (set_of_list ul)) IN t) = q')) ==> (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)) = (p' ==> q'))))) q')) = ((\q'. (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) = p') ==> ((p' ==> (((circumcenter (set_of_list ul)) IN t) = q')) ==> (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c? / c/\ cIN b1 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b1 f2 c==> c==> f2 c= cIN ccircumcenter * part cset_of_list f0 f1 b0 c= c==> c? / c/\ cIN b1 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b1 cIN ccircumcenter * part cset_of_list f0 f1 c==> f2 b0 * / c==> c= c? / c/\ cIN b1 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b1 f2 c==> c==> f2 c= cIN ccircumcenter * part cset_of_list f0 f1 b0 c= c==> c? / c/\ cIN b1 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b1 cIN ccircumcenter * part cset_of_list f0 f1 c==> f2 b0 f3 * / c==> c= c? / c/\ cIN b1 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b1 f2 c==> c==> f2 c= cIN ccircumcenter * part cset_of_list f0 f1 b0 c= c==> c? / c/\ cIN b1 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b1 cIN ccircumcenter * part cset_of_list f0 f1 c==> f2 b0 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul)))))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0
- (!ul. (((NUMERAL (BIT1 _0)) <= (LENGTH ul)) ==> ((HD ul) IN (set_of_list ul)))), ((NUMERAL (BIT1 _0)) <= (LENGTH ul)) |- ((!ul. (((NUMERAL (BIT1 _0)) <= (LENGTH ul)) ==> ((HD ul) IN (set_of_list ul)))) /\ ((HD ul) IN (set_of_list ul)))
T c==> ! c==> c<= cNUMERAL cBIT1 c_0 cLENGTH b0 cIN cHD b0 * part cset_of_list b0 c==> c<= cNUMERAL cBIT1 c_0 cLENGTH f0 c/\ ! c==> c<= cNUMERAL cBIT1 c_0 cLENGTH b0 cIN cHD b0 * part cset_of_list b0 cIN cHD f0 * part cset_of_list f0
- |- ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> (((voronoi_nondg V) vl) = ((voronoi_nondg V) vl)))
T c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 c= cvoronoi_nondg f2 f0 cvoronoi_nondg f2 f0
- ((HD ul) IN (set_of_list ul)) |- (T = ((HD ul) IN (set_of_list ul)))
T c==> cIN cHD f0 * part cset_of_list f0 c= cT cIN cHD f0 * part cset_of_list f0
- (((real_ge (real_of_int _3496493)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496493))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496493))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (x = (circumcenter (set_of_list ul))) |- ((x = (circumcenter (set_of_list ul))) /\ ((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t))) = (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))))
T c==> c= f0 ccircumcenter * part cset_of_list f1 c/\ c= f0 ccircumcenter * part cset_of_list f1 c= ! c==> c? / c/\ cIN b1 * part cset_of_list f1 c= b0 * * part cbis cHD f1 b1 cIN ccircumcenter * part cset_of_list f1 b0 ! c==> c? / c/\ cIN b1 * part cset_of_list f1 c= b0 * * part cbis cHD f1 b1 cIN ccircumcenter * part cset_of_list f1 b0
- |- ((((x = (circumcenter (set_of_list ul))) = (x = (circumcenter (set_of_list ul)))) ==> (((x = (circumcenter (set_of_list ul))) ==> ((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t))) = q')) ==> (((x = (circumcenter (set_of_list ul))) ==> (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))) = ((x = (circumcenter (set_of_list ul))) ==> q')))) = (((x = (circumcenter (set_of_list ul))) ==> ((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t))) = q')) ==> (((x = (circumcenter (set_of_list ul))) ==> (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))) = ((x = (circumcenter (set_of_list ul))) ==> q'))))
T c= c==> c= c= f0 ccircumcenter * part cset_of_list f1 c= f0 ccircumcenter * part cset_of_list f1 c==> c==> c= f0 ccircumcenter * part cset_of_list f1 c= ! c==> c? / c/\ cIN b1 * part cset_of_list f1 c= b0 * * part cbis cHD f1 b1 cIN ccircumcenter * part cset_of_list f1 b0 f2 c= c==> c= f0 ccircumcenter * part cset_of_list f1 ! c==> c? / c/\ cIN b1 * part cset_of_list f1 c= b0 * * part cbis cHD f1 b1 cIN ccircumcenter * part cset_of_list f1 b0 c==> c= f0 ccircumcenter * part cset_of_list f1 f2 c==> c==> c= f0 ccircumcenter * part cset_of_list f1 c= ! c==> c? / c/\ cIN b1 * part cset_of_list f1 c= b0 * * part cbis cHD f1 b1 cIN ccircumcenter * part cset_of_list f1 b0 f2 c= c==> c= f0 ccircumcenter * part cset_of_list f1 ! c==> c? / c/\ cIN b1 * part cset_of_list f1 c= b0 * * part cbis cHD f1 b1 cIN ccircumcenter * part cset_of_list f1 b0 c==> c= f0 ccircumcenter * part cset_of_list f1 f2
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((packing V) /\ (((barV V) k) ul)) |- ((((barV V) k) ul) = T)
T c==> c/\ cpacking f0 cbarV f0 f1 f2 c= cbarV f0 f1 f2 cT
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!p. (((p IN ((hull affine) (set_of_list ul))) /\ (?c. (!w. ((w IN (set_of_list ul)) ==> ((distance (p , w)) = c))))) ==> (p = (circumcenter (set_of_list ul))))) |- ((((p IN ((hull affine) (set_of_list ul))) /\ (?c. (!w. ((w IN (set_of_list ul)) ==> ((distance (p , w)) = c))))) ==> (p = (circumcenter (set_of_list ul)))) = T)
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * part cset_of_list f0 c? / ! c==> cIN b2 * part cset_of_list f0 c= cdistance c, b0 b2 b1 c= b0 ccircumcenter * part cset_of_list f0 c= c==> c/\ cIN f1 * * part chull part caffine * part cset_of_list f0 c? / ! c==> cIN b1 * part cset_of_list f0 c= cdistance c, f1 b1 b0 c= f1 ccircumcenter * part cset_of_list f0 cT
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!x. (!y. ((x = y) ==> (y = x)))), (x = y) |- ((x = y) /\ (y = x))
T c==> ! ! c==> c= b0 b1 c= b1 b0 c==> c= f0 f1 c/\ c= f0 f1 c= f1 f0
- |- (T = ((int_of_num k) = ((int_sub ((int_add (int_of_num k)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))))
T c= cT c= cint_of_num f0 cint_sub cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0
- |- (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))
T c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0 c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496493))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496493))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul)))))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0
- |- (((!p'. (!q'. (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) = p') ==> ((p' ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) = p') ==> ((p' ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) = p') ==> ((p' ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 b0 c==> c==> b0 c= cvoronoi_nondg f2 f0 b1 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0 c==> b0 b1 * / ! c==> c= c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 b0 c==> c==> b0 c= cvoronoi_nondg f2 f0 b1 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0 c==> b0 b1 f3 * / ! c==> c= c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 b0 c==> c==> b0 c= cvoronoi_nondg f2 f0 b1 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0 c==> b0 b1 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)) = ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))
T c= c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 cIN ccircumcenter * part cset_of_list f0 f1 c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f1 * * part cbis cHD f0 b0 cIN ccircumcenter * part cset_of_list f0 f1
- (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))) |- ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> (x IN t))
T c==> ! c==> c? / c/\ cIN b1 * part cset_of_list f0 c= b0 * * part cbis cHD f0 b1 cIN f1 b0 c==> c? / c/\ cIN b0 * part cset_of_list f0 c= f2 * * part cbis cHD f0 b0 cIN f1 f2
- |- (((\t'. (f t')) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((\q'. (((x = (circumcenter (set_of_list ul))) = p') ==> ((p' ==> ((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t))) = q')) ==> (((x = (circumcenter (set_of_list ul))) ==> (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))) = (p' ==> q'))))) q')
T * / c==> c= c= f0 ccircumcenter * part cset_of_list f1 f2 c==> c==> f2 c= ! c==> c? / c/\ cIN b2 * part cset_of_list f1 c= b1 * * part cbis cHD f1 b2 cIN ccircumcenter * part cset_of_list f1 b1 b0 c= c==> c= f0 ccircumcenter * part cset_of_list f1 ! c==> c? / c/\ cIN b2 * part cset_of_list f1 c= b1 * * part cbis cHD f1 b2 cIN ccircumcenter * part cset_of_list f1 b1 c==> f2 b0 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!p'. (!q'. (((x = (circumcenter (set_of_list ul))) = p') ==> ((p' ==> ((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t))) = q')) ==> (((x = (circumcenter (set_of_list ul))) ==> (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((x = (circumcenter (set_of_list ul))) = p') ==> ((p' ==> ((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t))) = q')) ==> (((x = (circumcenter (set_of_list ul))) ==> (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((x = (circumcenter (set_of_list ul))) = p') ==> ((p' ==> ((!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t))) = q')) ==> (((x = (circumcenter (set_of_list ul))) ==> (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c= f0 ccircumcenter * part cset_of_list f1 b0 c==> c==> b0 c= ! c==> c? / c/\ cIN b3 * part cset_of_list f1 c= b2 * * part cbis cHD f1 b3 cIN ccircumcenter * part cset_of_list f1 b2 b1 c= c==> c= f0 ccircumcenter * part cset_of_list f1 ! c==> c? / c/\ cIN b3 * part cset_of_list f1 c= b2 * * part cbis cHD f1 b3 cIN ccircumcenter * part cset_of_list f1 b2 c==> b0 b1 * / ! c==> c= c= f0 ccircumcenter * part cset_of_list f1 b0 c==> c==> b0 c= ! c==> c? / c/\ cIN b3 * part cset_of_list f1 c= b2 * * part cbis cHD f1 b3 cIN ccircumcenter * part cset_of_list f1 b2 b1 c= c==> c= f0 ccircumcenter * part cset_of_list f1 ! c==> c? / c/\ cIN b3 * part cset_of_list f1 c= b2 * * part cbis cHD f1 b3 cIN ccircumcenter * part cset_of_list f1 b2 c==> b0 b1 f2 * / ! c==> c= c= f0 ccircumcenter * part cset_of_list f1 b0 c==> c==> b0 c= ! c==> c? / c/\ cIN b3 * part cset_of_list f1 c= b2 * * part cbis cHD f1 b3 cIN ccircumcenter * part cset_of_list f1 b2 b1 c= c==> c= f0 ccircumcenter * part cset_of_list f1 ! c==> c? / c/\ cIN b3 * part cset_of_list f1 c= b2 * * part cbis cHD f1 b3 cIN ccircumcenter * part cset_of_list f1 b2 c==> b0 b1 f2
- |- ((!p. (((p IN ((hull affine) (set_of_list ul))) /\ (?c. (!w. ((w IN (set_of_list ul)) ==> ((distance (p , w)) = c))))) ==> (p = (circumcenter (set_of_list ul))))) ==> (!p. (((p IN ((hull affine) (set_of_list ul))) /\ (?c. (!w. ((w IN (set_of_list ul)) ==> ((distance (p , w)) = c))))) ==> (p = (circumcenter (set_of_list ul))))))
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * part cset_of_list f0 c? / ! c==> cIN b2 * part cset_of_list f0 c= cdistance c, b0 b2 b1 c= b0 ccircumcenter * part cset_of_list f0 ! c==> c/\ cIN b0 * * part chull part caffine * part cset_of_list f0 c? / ! c==> cIN b2 * part cset_of_list f0 c= cdistance c, b0 b2 b1 c= b0 ccircumcenter * part cset_of_list f0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((x = (circumcenter (set_of_list ul))) ==> (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))) = ((x = (circumcenter (set_of_list ul))) ==> (!t. ((?u. ((u IN (set_of_list ul)) /\ (t = ((bis (HD ul)) u)))) ==> ((circumcenter (set_of_list ul)) IN t)))))
T c= c==> c= f0 ccircumcenter * part cset_of_list f1 ! c==> c? / c/\ cIN b1 * part cset_of_list f1 c= b0 * * part cbis cHD f1 b1 cIN ccircumcenter * part cset_of_list f1 b0 c==> c= f0 ccircumcenter * part cset_of_list f1 ! c==> c? / c/\ cIN b1 * part cset_of_list f1 c= b0 * * part cbis cHD f1 b1 cIN ccircumcenter * part cset_of_list f1 b0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (~ ((set_of_list ul) = EMPTY)) |- ((EMPTY = (set_of_list ul)) = F)
T c==> c~ c= * part cset_of_list f0 part cEMPTY c= c= part cEMPTY * part cset_of_list f0 cF
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul)))))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _3496493)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496493))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _3496493)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- (EMPTY = (set_of_list ul)) |- ((set_of_list ul) = EMPTY)
T c==> c= part cEMPTY * part cset_of_list f0 c= * part cset_of_list f0 part cEMPTY
- |- (((!ul. (((NUMERAL (BIT1 _0)) <= (LENGTH ul)) ==> ((HD ul) IN (set_of_list ul)))) ==> (!ul. (((NUMERAL (BIT1 _0)) <= (LENGTH ul)) ==> ((HD ul) IN (set_of_list ul))))) = (!ul. (((NUMERAL (BIT1 _0)) <= (LENGTH ul)) ==> ((HD ul) IN (set_of_list ul)))))
T c= c==> ! c==> c<= cNUMERAL cBIT1 c_0 cLENGTH b0 cIN cHD b0 * part cset_of_list b0 ! c==> c<= cNUMERAL cBIT1 c_0 cLENGTH b0 cIN cHD b0 * part cset_of_list b0 ! c==> c<= cNUMERAL cBIT1 c_0 cLENGTH b0 cIN cHD b0 * part cset_of_list b0
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_ge ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num k))) ((real_add (real_of_num (CARD (set_of_list ul)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_num k)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_add (real_of_num k)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (set_of_list ul))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_add creal_of_num cCARD * part cset_of_list f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_num f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * part cset_of_list f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- (!w. ((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul))))))) |- (((w IN (set_of_list ul)) ==> ((radV (set_of_list ul)) = (distance (w , (circumcenter (set_of_list ul)))))) = T)
T c==> ! c==> cIN b0 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, b0 ccircumcenter * part cset_of_list f0 c= c==> cIN f1 * part cset_of_list f0 c= cradV * part cset_of_list f0 cdistance c, f1 ccircumcenter * part cset_of_list f0 cT
- ((HD ul) IN (set_of_list ul)) |- (((HD ul) IN (set_of_list ul)) = T)
T c==> cIN cHD f0 * part cset_of_list f0 c= cIN cHD f0 * part cset_of_list f0 cT
- ((p IN ((hull affine) (set_of_list ul))) /\ (?c. (!w. ((w IN (set_of_list ul)) ==> ((distance (p , w)) = c))))) |- ((!p. (((p IN ((hull affine) (set_of_list ul))) /\ (?c. (!w. ((w IN (set_of_list ul)) ==> ((distance (p , w)) = c))))) ==> (p = (circumcenter (set_of_list ul))))) ==> (p = (circumcenter (set_of_list ul))))
T c==> c/\ cIN f0 * * part chull part caffine * part cset_of_list f1 c? / ! c==> cIN b1 * part cset_of_list f1 c= cdistance c, f0 b1 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * part cset_of_list f1 c? / ! c==> cIN b2 * part cset_of_list f1 c= cdistance c, b0 b2 b1 c= b0 ccircumcenter * part cset_of_list f1 c= f0 ccircumcenter * part cset_of_list f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
