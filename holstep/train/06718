N ROTATION_ROTATE2D
C |- (!f. (((orthogonal_transformation f) /\ ((det (matrix f)) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))))
T c==> c/\ corthogonal_transformation f0 c= cdet cmatrix f0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D ARITH_EQ
A |- ((!m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) /\ (((_0 = _0) = T) /\ ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))))))
T c/\ ! ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 c/\ c= c= c_0 c_0 cT c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D REAL_MUL_LINV
A |- (!x. ((~ (x = (real_of_num (NUMERAL _0)))) ==> (((real_mul (real_inv x)) x) = (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= creal_mul creal_inv f0 f0 creal_of_num cNUMERAL cBIT1 c_0
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_div
A |- (!x. (!y. (((real_div x) y) = ((real_mul x) (real_inv y)))))
T c= creal_div f0 f1 creal_mul f0 creal_inv f1
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_EQ_ADD_LCANCEL
A |- (!x. (!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))))
T c= c= creal_add f0 f1 creal_add f0 f2 c= f1 f2
D Real_ext.REAL_SV_LMUL_0
A |- (!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0))))
T c= creal_mul creal_of_num cNUMERAL c_0 f0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_MUL_RID
A |- (!x. (((real_mul x) (real_of_num (NUMERAL (BIT1 _0)))) = x))
T c= creal_mul f0 creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_NEG_MINUS1
A |- (!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)))
T c= creal_neg f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_MUL_AC
A |- ((((real_mul m) n) = ((real_mul n) m)) /\ ((((real_mul ((real_mul m) n)) p) = ((real_mul m) ((real_mul n) p))) /\ (((real_mul m) ((real_mul n) p)) = ((real_mul n) ((real_mul m) p)))))
T c/\ c= creal_mul f0 f1 creal_mul f1 f0 c/\ c= creal_mul creal_mul f0 f1 f2 creal_mul f0 creal_mul f1 f2 c= creal_mul f0 creal_mul f1 f2 creal_mul f1 creal_mul f0 f2
D REAL_MUL_RINV
A |- (!x. ((~ (x = (real_of_num (NUMERAL _0)))) ==> (((real_mul x) (real_inv x)) = (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0
D REAL_DIV_1
A |- (!x. (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x))
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_INV_MUL
A |- (!x. (!y. ((real_inv ((real_mul x) y)) = ((real_mul (real_inv x)) (real_inv y)))))
T c= creal_inv creal_mul f0 f1 creal_mul creal_inv f0 creal_inv f1
D DECIMAL
A |- (!x. (!y. (((DECIMAL x) y) = ((real_div (real_of_num x)) (real_of_num y)))))
T c= cDECIMAL f0 f1 creal_div creal_of_num f0 creal_of_num f1
D IN_NUMSEG
A |- (!m. (!n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n))))))
T c= cIN f0 * * part c.. f1 f2 c/\ c<= f1 f0 c<= f0 f2
D SUM_EQ
A |- (!f. (!g. (!s. ((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((sum s) f) = ((sum s) g))))))
T c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= csum f0 f1 csum f0 f2
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D DIMINDEX_2
A |- ((dimindex UNIV) = (NUMERAL (BIT0 (BIT1 _0))))
T c= cdimindex part cUNIV cNUMERAL cBIT0 cBIT1 c_0
D FORALL_2
A |- (!P. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (P i))) = ((P (NUMERAL (BIT1 _0))) /\ (P (NUMERAL (BIT0 (BIT1 _0)))))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT0 cBIT1 c_0 * f0 b0 c/\ * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0
D SUM_2
A |- (!t. (((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT0 (BIT1 _0))))) t) = ((real_add (t (NUMERAL (BIT1 _0)))) (t (NUMERAL (BIT0 (BIT1 _0)))))))
T c= csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 f0 creal_add * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0
D VECTOR_2
A |- ((((vector ((CONS x) ((CONS y) NIL))) $ (NUMERAL (BIT1 _0))) = x) /\ (((vector ((CONS x) ((CONS y) NIL))) $ (NUMERAL (BIT0 (BIT1 _0)))) = y))
T c/\ c= c$ cvector cCONS f0 cCONS f1 cNIL cNUMERAL cBIT1 c_0 f0 c= c$ cvector cCONS f0 cCONS f1 cNIL cNUMERAL cBIT0 cBIT1 c_0 f1
D matrix_mul
A |- (!A. (!B. (((matrix_mul A) B) = (lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ j)))))))))
T c= cmatrix_mul f0 f1 clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b2 c$ c$ f1 b2 b1
D mat
A |- (!k. ((mat k) = (lambdai. (lambdaj. (((COND (i = j)) (real_of_num k)) (real_of_num (NUMERAL _0)))))))
T c= cmat f0 clambda / clambda / cCOND c= b0 b1 creal_of_num f0 creal_of_num cNUMERAL c_0
D transp
A |- (!A. ((transp A) = (lambdai. (lambdaj. ((A $ j) $ i)))))
T c= ctransp f0 clambda / clambda / c$ c$ f0 b1 b0
D LINEAR_EQ_MATRIX
A |- (!f. (!g. (((linear f) /\ ((linear g) /\ ((matrix f) = (matrix g)))) ==> (f = g))))
T c==> c/\ clinear f0 c/\ clinear f1 c= cmatrix f0 cmatrix f1 c= f0 f1
D DET_2
A |- (!A. ((det A) = ((real_sub ((real_mul ((A $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) ((A $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul ((A $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) ((A $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))))
T c= cdet f0 creal_sub creal_mul c$ c$ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
D orthogonal_matrix
A |- (!Q. ((orthogonal_matrix Q) = ((((matrix_mul (transp Q)) Q) = (mat (NUMERAL (BIT1 _0)))) /\ (((matrix_mul Q) (transp Q)) = (mat (NUMERAL (BIT1 _0)))))))
T c= corthogonal_matrix f0 c/\ c= cmatrix_mul ctransp f0 f0 cmat cNUMERAL cBIT1 c_0 c= cmatrix_mul f0 ctransp f0 cmat cNUMERAL cBIT1 c_0
D ORTHOGONAL_TRANSFORMATION_MATRIX
A |- (!f. ((orthogonal_transformation f) = ((linear f) /\ (orthogonal_matrix (matrix f)))))
T c= corthogonal_transformation f0 c/\ clinear f0 corthogonal_matrix cmatrix f0
D SINCOS_TOTAL_2PI
A |- (!x. (!y. ((((real_add ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow y) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ ((x = (cos t)) /\ (y = (sin t)))))))))
T c==> c= creal_add creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= f0 ccos b0 c= f1 csin b0
D LINEAR_ROTATE2D
A |- (!t. (linear (rotate2d t)))
T clinear * part crotate2d f0
D MATRIX_ROTATE2D
A |- (!t. ((matrix (rotate2d t)) = (vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL)))))
T c= cmatrix * part crotate2d f0 cvector cCONS cvector cCONS ccos f0 cCONS creal_neg csin f0 cNIL cCONS cvector cCONS csin f0 cCONS ccos f0 cNIL cNIL
+ |- ((\g'. (!t'. (!e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL c_0 b2 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND b0 b1 b2 f0
+ |- ((\q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b1 b3 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b3 b2 f3 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f3 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b1 b3 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b3 b2 f3 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f3 f0 c==> f1 b0 f4
- |- ((\m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) m)
T * / ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 f0
- |- (((!n. (((BIT0 n) + _0) = (BIT0 n))) ==> ((\n. (((BIT0 n) + _0) = (BIT0 n))) n)) = ((\n. (((BIT0 n) + _0) = (BIT0 n))) n))
T c= c==> ! c= c+ cBIT0 b0 c_0 cBIT0 b0 * / c= c+ cBIT0 b0 c_0 cBIT0 b0 f0 * / c= c+ cBIT0 b0 c_0 cBIT0 b0 f0
+ |- (T = ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_neg (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0))))))))))
T c= cT c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (((matrix f) $ i) $ x)) ((lambdaj. (((matrix f) $ j) $ x)) $ j)) = ((real_mul (((matrix f) $ i) $ x)) ((lambdaj. (((matrix f) $ j) $ x)) $ j)))) = T)
T c= c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f1 f2 f0 c$ clambda / c$ c$ cmatrix f1 b0 f0 f3 creal_mul c$ c$ cmatrix f1 f2 f0 c$ clambda / c$ c$ cmatrix f1 b0 f0 f3 cT
+ |- (((!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))) = (p' ==> q'))))) ==> ((\q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))) = (p' ==> q'))))) q')) = ((\q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ c$ cmatrix f2 f3 f0 c$ c$ cvector cCONS cvector cCONS ccos f4 cCONS creal_neg csin f4 cNIL cCONS cvector cCONS csin f4 cCONS ccos f4 cNIL cNIL f3 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ cmatrix f2 f3 f0 c$ c$ cvector cCONS cvector cCONS ccos f4 cCONS creal_neg csin f4 cNIL cCONS cvector cCONS csin f4 cCONS ccos f4 cNIL cNIL f3 f0 c==> f1 b0 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ c$ cmatrix f2 f3 f0 c$ c$ cvector cCONS cvector cCONS ccos f4 cCONS creal_neg csin f4 cNIL cCONS cvector cCONS csin f4 cCONS ccos f4 cNIL cNIL f3 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ cmatrix f2 f3 f0 c$ c$ cvector cCONS cvector cCONS ccos f4 cCONS creal_neg csin f4 cNIL cCONS cvector cCONS csin f4 cCONS ccos f4 cNIL cNIL f3 f0 c==> f1 b0 f5 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ c$ cmatrix f2 f3 f0 c$ c$ cvector cCONS cvector cCONS ccos f4 cCONS creal_neg csin f4 cNIL cCONS cvector cCONS csin f4 cCONS ccos f4 cNIL cNIL f3 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ cmatrix f2 f3 f0 c$ c$ cvector cCONS cvector cCONS ccos f4 cCONS creal_neg csin f4 cNIL cCONS cvector cCONS csin f4 cCONS ccos f4 cNIL cNIL f3 f0 c==> f1 b0 f5
- ((NUMERAL (BIT1 _0)) = i) |- (i = (NUMERAL (BIT1 _0)))
T c==> c= cNUMERAL cBIT1 c_0 f0 c= f0 cNUMERAL cBIT1 c_0
- |- (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))
T c= cEXP cBIT0 f0 cBIT0 f1 c* cEXP cBIT0 f0 f1 cEXP cBIT0 f0 f1
- |- (((!m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) ==> ((\m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) m)) = ((\m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) m))
T c= c==> ! ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 * / ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 f0 * / ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 f0
- |- ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))
T c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- (((!n. (((BIT1 n) * _0) = _0)) ==> ((\n. (((BIT1 n) * _0) = _0)) n)) = ((\n. (((BIT1 n) * _0) = _0)) n))
T c= c==> ! c= c* cBIT1 b0 c_0 c_0 * / c= c* cBIT1 b0 c_0 c_0 f0 * / c= c* cBIT1 b0 c_0 c_0 f0
+ |- (((BIT0 m) = (BIT1 n)) = F)
T c= c= cBIT0 f0 cBIT1 f1 cF
- |- (((!n. (((BIT0 n) * _0) = _0)) ==> ((\n. (((BIT0 n) * _0) = _0)) n)) = ((\n. (((BIT0 n) * _0) = _0)) n))
T c= c==> ! c= c* cBIT0 b0 c_0 c_0 * / c= c* cBIT0 b0 c_0 c_0 f0 * / c= c* cBIT0 b0 c_0 c_0 f0
- |- (((!n. ((BIT1 n) > _0)) ==> ((\n. ((BIT1 n) > _0)) n)) = ((\n. ((BIT1 n) > _0)) n))
T c= c==> ! c> cBIT1 b0 c_0 * / c> cBIT1 b0 c_0 f0 * / c> cBIT1 b0 c_0 f0
- |- (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))
T c= c+ cBIT0 f0 cBIT1 f1 cBIT1 c+ f0 f1
+ |- ((~ F) ==> ((real_of_num (NUMERAL _0)) = (real_of_num (NUMERAL _0))))
T c==> c~ cF c= creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((SUC _0) = (BIT1 _0))
T c= cSUC c_0 cBIT1 c_0
- |- (((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) m))
T c= c==> ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 * / ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 f0 * / ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 f0
+ |- ((\y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) y)
T * / ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 f1
- |- ((_0 <= (BIT0 n)) = T)
T c= c<= c_0 cBIT0 f0 cT
+ |- (((BIT1 m) = (BIT0 n)) = F)
T c= c= cBIT1 f0 cBIT0 f1 cF
- |- ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))))))
T c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
- |- (((PRE _0) = _0) /\ ((!n. ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))) /\ (!n. ((PRE (BIT1 n)) = (BIT0 n)))))
T c/\ c= cPRE c_0 c_0 c/\ ! c= cPRE cBIT0 b0 cCOND c= b0 c_0 c_0 cBIT1 cPRE b0 ! c= cPRE cBIT1 b0 cBIT0 b0
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((lambdaj. (((matrix f) $ j) $ (NUMERAL (BIT1 _0)))) $ i') = ((\j. (((matrix f) $ j) $ (NUMERAL (BIT1 _0)))) i'))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ clambda / c$ c$ cmatrix f1 b0 cNUMERAL cBIT1 c_0 f0 * / c$ c$ cmatrix f1 b0 cNUMERAL cBIT1 c_0 f0
- |- (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n))))
T c= c* cBIT0 f0 cBIT0 f1 cBIT0 cBIT0 c* f0 f1
+ |- (((!g. ((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)) = (g k)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)) = (g k)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)) = (g k)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f0 b3 b2 f1 b1 c$ c$ cmatrix f0 b1 f2 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f0 b3 b2 f1 b1 c$ c$ cmatrix f0 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f0 b3 b2 f1 b1 c$ c$ cmatrix f0 b1 f2 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f0 b3 b2 f1 b1 c$ c$ cmatrix f0 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f0 b3 b2 f1 b1 c$ c$ cmatrix f0 b1 f2 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f0 b3 b2 f1 b1 c$ c$ cmatrix f0 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3
+ |- ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))))
T c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- (~ (i = (NUMERAL (BIT0 (BIT1 _0))))) |- (~ ((NUMERAL (BIT0 (BIT1 _0))) = i))
T c==> c~ c= f0 cNUMERAL cBIT0 cBIT1 c_0 c~ c= cNUMERAL cBIT0 cBIT1 c_0 f0
- |- (((BIT1 m) < (BIT0 n)) = (m < n))
T c= c< cBIT1 f0 cBIT0 f1 c< f0 f1
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> (((((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))) = (p' ==> q'))))
T c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= c/\ c= creal_add creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> f1 f3
+ |- (((!Q. ((orthogonal_matrix Q) = ((((matrix_mul (transp Q)) Q) = (mat (NUMERAL (BIT1 _0)))) /\ (((matrix_mul Q) (transp Q)) = (mat (NUMERAL (BIT1 _0))))))) ==> ((\Q. ((orthogonal_matrix Q) = ((((matrix_mul (transp Q)) Q) = (mat (NUMERAL (BIT1 _0)))) /\ (((matrix_mul Q) (transp Q)) = (mat (NUMERAL (BIT1 _0))))))) Q)) = ((\Q. ((orthogonal_matrix Q) = ((((matrix_mul (transp Q)) Q) = (mat (NUMERAL (BIT1 _0)))) /\ (((matrix_mul Q) (transp Q)) = (mat (NUMERAL (BIT1 _0))))))) Q))
T c= c==> ! c= corthogonal_matrix b0 c/\ c= cmatrix_mul ctransp b0 b0 cmat cNUMERAL cBIT1 c_0 c= cmatrix_mul b0 ctransp b0 cmat cNUMERAL cBIT1 c_0 * / c= corthogonal_matrix b0 c/\ c= cmatrix_mul ctransp b0 b0 cmat cNUMERAL cBIT1 c_0 c= cmatrix_mul b0 ctransp b0 cmat cNUMERAL cBIT1 c_0 f0 * / c= corthogonal_matrix b0 c/\ c= cmatrix_mul ctransp b0 b0 cmat cNUMERAL cBIT1 c_0 c= cmatrix_mul b0 ctransp b0 cmat cNUMERAL cBIT1 c_0 f0
- |- ((\m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) m)
T * / ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0
- |- (((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) ==> ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m)) = ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m))
T c= c==> ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0 * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0
- |- ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))
T c= cEXP c_0 cBIT0 f0 c* cEXP c_0 f0 cEXP c_0 f0
- (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) |- ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) = (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= creal_add creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b2 b1 f0 b0 c$ c$ cmatrix f1 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 f0 c$ c$ cmatrix f1 b0 f2
+ (linear f), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))), (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t)))), ((real_le (real_of_num (NUMERAL _0))) t) |- (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t))))
T c==> clinear f0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c/\ creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos f1 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin f1 c==> creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d f1
- |- (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))
T c= cEXP cNUMERAL f0 cNUMERAL f1 cNUMERAL cEXP f0 f1
- |- (((!n. ((SUC (BIT0 n)) = (BIT1 n))) ==> ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n)) = ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n))
T c= c==> ! c= cSUC cBIT0 b0 cBIT1 b0 * / c= cSUC cBIT0 b0 cBIT1 b0 f0 * / c= cSUC cBIT0 b0 cBIT1 b0 f0
- |- ((!n. ((EVEN (BIT0 n)) = T)) /\ (!n. ((EVEN (BIT1 n)) = F)))
T c/\ ! c= cEVEN cBIT0 b0 cT ! c= cEVEN cBIT1 b0 cF
- |- (((!n. ((ODD (BIT0 n)) = F)) ==> ((\n. ((ODD (BIT0 n)) = F)) n)) = ((\n. ((ODD (BIT0 n)) = F)) n))
T c= c==> ! c= cODD cBIT0 b0 cF * / c= cODD cBIT0 b0 cF f0 * / c= cODD cBIT0 b0 cF f0
- |- ((\m. (((BIT1 m) EXP _0) = (BIT1 _0))) m)
T * / c= cEXP cBIT1 b0 c_0 cBIT1 c_0 f0
+ |- (T = ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c= cT c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- (((!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) ==> ((\n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) n)) = ((\n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) n))
T c= c==> ! c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 * / c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1 * / c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1
+ (linear f), (((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))), ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0))))), ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))), (((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))) /\ ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))))) |- (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))
T c==> clinear f0 c==> c= creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c/\ c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
- |- ((((i = i') ==> ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (((~ (i = i')) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) e')))) = (((~ (i = i')) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) e'))))
T c= c==> c==> c= f0 f1 c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c==> c~ c= f0 f1 c= creal_of_num cNUMERAL c_0 f2 c= cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ c= f0 f1 c= creal_of_num cNUMERAL c_0 f2 c= cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_neg (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))))))))
T c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!n. ((_0 * (BIT0 n)) = _0)) ==> ((\n. ((_0 * (BIT0 n)) = _0)) n)) = ((\n. ((_0 * (BIT0 n)) = _0)) n))
T c= c==> ! c= c* c_0 cBIT0 b0 c_0 * / c= c* c_0 cBIT0 b0 c_0 f0 * / c= c* c_0 cBIT0 b0 c_0 f0
- |- (((!n. ((EVEN (BIT1 n)) = F)) ==> ((\n. ((EVEN (BIT1 n)) = F)) n)) = ((\n. ((EVEN (BIT1 n)) = F)) n))
T c= c==> ! c= cEVEN cBIT1 b0 cF * / c= cEVEN cBIT1 b0 cF f0 * / c= cEVEN cBIT1 b0 cF f0
- |- (((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) ==> ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m)) = ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m))
T c= c==> ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0 * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0
- |- (((!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) ==> ((\m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) m)) = ((\m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) m))
T c= c==> ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 * / ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0 * / ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0
- |- (((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (((matrix f) $ i) $ x)) ((lambdaj. (((matrix f) $ j) $ x)) $ j)) = ((real_mul (((matrix f) $ i) $ x)) ((lambdaj. (((matrix f) $ j) $ x)) $ j))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (((matrix f) $ i) $ x)) ((lambdaj. (((matrix f) $ j) $ x)) $ j)))))) = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (((matrix f) $ i) $ x)) ((lambdaj. (((matrix f) $ j) $ x)) $ j))))))
T c= c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f0 f1 b0 c$ clambda / c$ c$ cmatrix f0 b1 b0 f2 creal_mul c$ c$ cmatrix f0 f1 b0 c$ clambda / c$ c$ cmatrix f0 b1 b0 f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b0 c$ clambda / c$ c$ cmatrix f0 b1 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b0 c$ clambda / c$ c$ cmatrix f0 b1 b0 f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b0 c$ clambda / c$ c$ cmatrix f0 b1 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b0 c$ clambda / c$ c$ cmatrix f0 b1 b0 f2
- |- ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n)
T * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1
- |- (((i = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))
T c==> c= c= f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f1 c= creal_of_num cNUMERAL c_0 f3 c= cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f1 f2 f3
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) /\ (((((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = ((((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c/\ c= creal_add creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = (p' ==> q'))))
T c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= c= creal_add creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f3 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f0 creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f0 cCOND c= f3 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f4 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f3 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f0 creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f0 cCOND c= f3 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> f1 f4
- |- ((\n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) n)
T * / c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 f1
- |- ((\t'. (!e'. (((i = i') = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f2 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f2 b0 b1 f3
- |- (((!t'. (!e'. (((i = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((i = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((i = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f1 b0 b1 * / ! c==> c= c= f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f1 b0 b1 f2 * / ! c==> c= c= f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f1 b0 b1 f2
+ |- ((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)) = (g k)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f0 b2 b1 f1 b0 c$ c$ cmatrix f0 b0 f2 * f3 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f0 b2 b1 f1 b0 c$ c$ cmatrix f0 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f3
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((NUMERAL (BIT1 _0)) <= i') = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c<= cNUMERAL cBIT1 c_0 f0 cT
- |- ((\n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) n)
T * / c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 f0
- |- ((\t'. (!e'. (((i = (NUMERAL (BIT1 _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f1 b0 b1 f2
+ (linear f), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))), (((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))) /\ ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))))) |- (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))
T c==> clinear f0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
- |- ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))
T c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
+ |- (T = ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0))))))))))
T c= cT c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))))))
T c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) = (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q'))))
T c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f3
+ |- (((!t. ((matrix (rotate2d t)) = (vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))))) ==> ((\t. ((matrix (rotate2d t)) = (vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))))) t)) = ((\t. ((matrix (rotate2d t)) = (vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))))) t))
T c= c==> ! c= cmatrix * part crotate2d b0 cvector cCONS cvector cCONS ccos b0 cCONS creal_neg csin b0 cNIL cCONS cvector cCONS csin b0 cCONS ccos b0 cNIL cNIL * / c= cmatrix * part crotate2d b0 cvector cCONS cvector cCONS ccos b0 cCONS creal_neg csin b0 cNIL cCONS cvector cCONS csin b0 cCONS ccos b0 cNIL cNIL f0 * / c= cmatrix * part crotate2d b0 cvector cCONS cvector cCONS ccos b0 cCONS creal_neg csin b0 cNIL cCONS cvector cCONS csin b0 cCONS ccos b0 cNIL cNIL f0
- |- ((_0 < _0) = F)
T c= c< c_0 c_0 cF
- |- (((!g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (((matrix f) $ x) $ i)) (((matrix f) $ x) $ j)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (((matrix f) $ x) $ i)) (((matrix f) $ x) $ j)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (((matrix f) $ x) $ i)) (((matrix f) $ x) $ j)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f0 b1 f1 c$ c$ cmatrix f0 b1 f2 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 b1 f1 c$ c$ cmatrix f0 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f0 b1 f1 c$ c$ cmatrix f0 b1 f2 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 b1 f1 c$ c$ cmatrix f0 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f0 b1 f1 c$ c$ cmatrix f0 b1 f2 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 b1 f1 c$ c$ cmatrix f0 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3
- |- (((!n. (((BIT1 n) < _0) = F)) ==> ((\n. (((BIT1 n) < _0) = F)) n)) = ((\n. (((BIT1 n) < _0) = F)) n))
T c= c==> ! c= c< cBIT1 b0 c_0 cF * / c= c< cBIT1 b0 c_0 cF f0 * / c= c< cBIT1 b0 c_0 cF f0
- |- ((_0 + (BIT0 n)) = (BIT0 n))
T c= c+ c_0 cBIT0 f0 cBIT0 f0
+ |- ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))
T c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))
T c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- ((\n. ((BIT0 n) >= _0)) n)
T * / c>= cBIT0 b0 c_0 f0
- |- (((BIT1 n) - _0) = (BIT1 n))
T c= c- cBIT1 f0 c_0 cBIT1 f0
+ (linear f), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))), ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0))))), (((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))) /\ ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))))) |- (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))
T c==> clinear f0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
- |- (((!n. ((_0 - (BIT0 n)) = _0)) ==> ((\n. ((_0 - (BIT0 n)) = _0)) n)) = ((\n. ((_0 - (BIT0 n)) = _0)) n))
T c= c==> ! c= c- c_0 cBIT0 b0 c_0 * / c= c- c_0 cBIT0 b0 c_0 f0 * / c= c- c_0 cBIT0 b0 c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (linear f), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t)), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) |- (f = (rotate2d t))
T c==> clinear f0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin f1 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos f1 c= f0 * part crotate2d f1
+ |- ((((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q'))))
T c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b2 b1 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b2 b1 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b2 b1 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b2 b1 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f3
- |- (((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) ==> ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n)) = ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n))
T c= c==> ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0 * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0
+ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) |- ((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m)
T * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))))
T c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) /\ (((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j)) = ((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f1 f2 f0 c$ clambda / c$ c$ cmatrix f1 b0 f0 f3 creal_mul c$ c$ cmatrix f1 f2 f0 c$ clambda / c$ c$ cmatrix f1 b0 f0 f3
- |- (((!n. (((BIT1 n) <= _0) = F)) ==> ((\n. (((BIT1 n) <= _0) = F)) n)) = ((\n. (((BIT1 n) <= _0) = F)) n))
T c= c==> ! c= c<= cBIT1 b0 c_0 cF * / c= c<= cBIT1 b0 c_0 cF f0 * / c= c<= cBIT1 b0 c_0 cF f0
- |- ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n)
T * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1
- |- ((((i = i') = (i = i')) ==> (((i = i') ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ (i = i')) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND (i = i')) t') e'))))) = (((i = i') ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ (i = i')) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND (i = i')) t') e')))))
T c= c==> c= c= f0 f1 c= f0 f1 c==> c==> c= f0 f1 c= creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ c= f0 f1 c= creal_of_num cNUMERAL c_0 f3 c= cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c= f0 f1 f2 f3 c==> c==> c= f0 f1 c= creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ c= f0 f1 c= creal_of_num cNUMERAL c_0 f3 c= cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c= f0 f1 f2 f3
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))
T c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((\n. (~ (_0 >= (BIT1 n)))) n)
T * / c~ c>= c_0 cBIT1 b0 f0
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b0 b2 c$ c$ cmatrix f1 b2 b1 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c/\ c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!n. ((_0 + (BIT0 n)) = (BIT0 n))) ==> ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n)) = ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n))
T c= c==> ! c= c+ c_0 cBIT0 b0 cBIT0 b0 * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0 * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0
- |- (((!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) ==> ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n)) = ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n))
T c= c==> ! c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1 * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1
+ |- (((vector ((CONS x) ((CONS y) NIL))) $ (NUMERAL (BIT0 (BIT1 _0)))) = y)
T c= c$ cvector cCONS f0 cCONS f1 cNIL cNUMERAL cBIT0 cBIT1 c_0 f1
+ (linear f), (((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))), ((linear f) /\ ((((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))) /\ ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))))) /\ (((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))) /\ ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))))))) |- (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))
T c==> clinear f0 c==> c= creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ clinear f0 c/\ c/\ c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
+ |- (((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) ==> ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m)) = ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m))
T c= c==> ! ! c= c= cBIT1 b0 cBIT0 b1 cF * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0 * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0
- |- ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n)
T * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1
- |- ((SUC (BIT1 n)) = (BIT0 (SUC n)))
T c= cSUC cBIT1 f0 cBIT0 cSUC f0
- |- (((BIT1 m) < (BIT1 n)) = (m < n))
T c= c< cBIT1 f0 cBIT1 f1 c< f0 f1
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((lambdaj. (((COND (i = j)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) $ i') = ((\j. (((COND (i = j)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) i'))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ clambda / cCOND c= f1 b0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f0 * / cCOND c= f1 b0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f0
+ |- ((\t. (((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT0 (BIT1 _0))))) t) = ((real_add (t (NUMERAL (BIT1 _0)))) (t (NUMERAL (BIT0 (BIT1 _0))))))) t)
T * / c= csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 b0 creal_add * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m)
T * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0
- |- (((!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) ==> ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m)) = ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m))
T c= c==> ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- ((((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))))) = (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b3 b3 b0 b2 c$ c$ cmatrix f2 b2 b1 f0 f1 c$ c$ cmat cNUMERAL cBIT1 c_0 f0 f1 c= creal_add creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f1 creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f1 cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b3 b3 b0 b2 c$ c$ cmatrix f2 b2 b1 f0 f1 c$ c$ cmat cNUMERAL cBIT1 c_0 f0 f1 c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f1 creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f1 cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b3 b3 b0 b2 c$ c$ cmatrix f2 b2 b1 f0 f1 c$ c$ cmat cNUMERAL cBIT1 c_0 f0 f1 c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f1 creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f1 cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (linear f), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) |- ((((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t))))) ==> (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))
T c==> clinear f0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos f1 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin f1 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d f1
- |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c/\ c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((NUMERAL (NUMERAL _0)) = (NUMERAL _0))
T c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0
+ |- (((F ==> ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) e')))) = (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) e'))))
T c= c==> c==> cF c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f0 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f0 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 f0
+ (((real_add ((real_pow (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) |- (((?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t)))))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))) = (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t))))))
T c==> c= creal_add creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c==> c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos b0 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin b0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
- |- (((!n. ((PRE (BIT1 n)) = (BIT0 n))) ==> ((\n. ((PRE (BIT1 n)) = (BIT0 n))) n)) = ((\n. ((PRE (BIT1 n)) = (BIT0 n))) n))
T c= c==> ! c= cPRE cBIT1 b0 cBIT0 b0 * / c= cPRE cBIT1 b0 cBIT0 b0 f0 * / c= cPRE cBIT1 b0 cBIT0 b0 f0
+ (linear f), (((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))), ((((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))) /\ ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))))) /\ (((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))) /\ ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0))))))) |- (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))
T c==> clinear f0 c==> c= creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c/\ c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))))) = (((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) /\ ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 b0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 b0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 b0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 b0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= b0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) ==> ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n)) = ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n))
T c= c==> ! c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1 * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1
+ |- (((!B. (((matrix_mul A) B) = (lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ j)))))))) ==> ((\B. (((matrix_mul A) B) = (lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ j)))))))) B)) = ((\B. (((matrix_mul A) B) = (lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ j)))))))) B))
T c= c==> ! c= cmatrix_mul f0 b0 clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b1 b3 c$ c$ b0 b3 b2 * / c= cmatrix_mul f0 b0 clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b1 b3 c$ c$ b0 b3 b2 f1 * / c= cmatrix_mul f0 b0 clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b1 b3 c$ c$ b0 b3 b2 f1
- |- (((BIT1 m) <= (BIT1 n)) = (m <= n))
T c= c<= cBIT1 f0 cBIT1 f1 c<= f0 f1
+ |- ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))
T c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 f2 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 f1 f2
- (~ (i = i')) |- ((~ (i = i')) /\ ((real_of_num (NUMERAL _0)) = (real_of_num (NUMERAL _0))))
T c==> c~ c= f0 f1 c/\ c~ c= f0 f1 c= creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) ==> ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m)) = ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m))
T c= c==> ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0 * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0
+ (linear f), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))), ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0))))) |- (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))
T c==> clinear f0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
+ |- (!f. ((((linear f) /\ (orthogonal_matrix (matrix f))) /\ ((det (matrix f)) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))))
T c==> c/\ c/\ clinear f0 corthogonal_matrix cmatrix f0 c= cdet cmatrix f0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ (i = (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_of_num (NUMERAL _0)) = (real_of_num (NUMERAL _0)))) ==> ((((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = ((((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))
T c= c==> c==> c~ c= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((EVEN _0) = T) /\ ((!n. ((EVEN (BIT0 n)) = T)) /\ (!n. ((EVEN (BIT1 n)) = F))))
T c/\ c= cEVEN c_0 cT c/\ ! c= cEVEN cBIT0 b0 cT ! c= cEVEN cBIT1 b0 cF
- |- (((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) ==> ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m)) = ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m))
T c= c==> ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (((matrix f) $ i) $ x)) ((lambdaj. (((matrix f) $ j) $ x)) $ j)) = ((real_mul (((matrix f) $ i) $ x)) ((lambdaj. (((matrix f) $ j) $ x)) $ j)))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f1 f2 f0 c$ clambda / c$ c$ cmatrix f1 b0 f0 f3 creal_mul c$ c$ cmatrix f1 f2 f0 c$ clambda / c$ c$ cmatrix f1 b0 f0 f3
- |- ((\n. (((BIT0 m) <= (BIT0 n)) = (m <= n))) n)
T * / c= c<= cBIT0 f0 cBIT0 b0 c<= f0 b0 f1
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((\i. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) i))) = (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((\i. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b0 b2 c$ c$ cmatrix f1 b2 b1 f0 * / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b0 b2 c$ c$ cmatrix f1 b2 b1 f0 c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b0 b2 c$ c$ cmatrix f1 b2 b1 f0 * / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b0 b2 c$ c$ cmatrix f1 b2 b1 f0
- |- (((NUMERAL n) > (NUMERAL m)) = (n > m))
T c= c> cNUMERAL f0 cNUMERAL f1 c> f0 f1
- |- ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))
T c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((BIT0 m) < (BIT0 n)) = (m < n))
T c= c< cBIT0 f0 cBIT0 f1 c< f0 f1
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- ((PRE (NUMERAL n)) = (NUMERAL (PRE n)))
T c= cPRE cNUMERAL f0 cNUMERAL cPRE f0
- |- (((!x. ((P x) ==> (Q x))) ==> ((?x. (P x)) ==> (?x. (Q x)))) ==> ((!x. ((P x) ==> (Q x))) ==> ((?x. (P x)) ==> (?x. (Q x)))))
T c==> c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0 c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0
- (x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) |- ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) = T)
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV cT
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) = ((\i. (lambdaj. (((matrix f) $ j) $ i))) i))) = (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) = ((\i. (lambdaj. (((matrix f) $ j) $ i))) i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / c$ c$ cmatrix f1 b1 b0 f0 * / clambda / c$ c$ cmatrix f1 b1 b0 f0 c= c$ clambda / clambda / c$ c$ cmatrix f1 b1 b0 f0 * / clambda / c$ c$ cmatrix f1 b1 b0 f0
- |- (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))
T c= c+ cBIT1 f0 cBIT1 f1 cBIT0 cSUC c+ f0 f1
- |- (((!n. ((_0 EXP (BIT1 n)) = _0)) ==> ((\n. ((_0 EXP (BIT1 n)) = _0)) n)) = ((\n. ((_0 EXP (BIT1 n)) = _0)) n))
T c= c==> ! c= cEXP c_0 cBIT1 b0 c_0 * / c= cEXP c_0 cBIT1 b0 c_0 f0 * / c= cEXP c_0 cBIT1 b0 c_0 f0
+ |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = (p' ==> q'))))
T c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b3 b3 b0 b2 c$ c$ cmatrix f2 b2 b1 f3 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f3 f0 f4 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b3 b3 b0 b2 c$ c$ cmatrix f2 b2 b1 f3 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f3 f0 c==> f1 f4
- |- ((!i'. t) = t)
T c= ! f0 f0
- |- ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((_0 >= (BIT0 n)) = (_0 >= n))
T c= c>= c_0 cBIT0 f0 c>= c_0 f0
+ (linear f) |- (((matrix f) = (vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL)))) = ((linear f) /\ ((linear (rotate2d t)) /\ ((matrix f) = (matrix (rotate2d t))))))
T c==> clinear f0 c= c= cmatrix f0 cvector cCONS cvector cCONS ccos f1 cCONS creal_neg csin f1 cNIL cCONS cvector cCONS csin f1 cCONS ccos f1 cNIL cNIL c/\ clinear f0 c/\ clinear * part crotate2d f1 c= cmatrix f0 cmatrix * part crotate2d f1
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- |- ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> b0 b1 f3
+ |- (((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)) = ((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j)))))) = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j))))))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f0 f1 b0 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b2 b1 b0 f2 creal_mul c$ c$ cmatrix f0 f1 b0 c$ clambda / c$ c$ cmatrix f0 b1 b0 f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b0 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b2 b1 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b0 c$ clambda / c$ c$ cmatrix f0 b1 b0 f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b0 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b2 b1 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b0 c$ clambda / c$ c$ cmatrix f0 b1 b0 f2
- |- ((((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = (p' ==> q'))))) ==> ((\q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = (p' ==> q'))))) q')) = ((\q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b1 b3 c$ c$ cmatrix f2 b3 b2 f3 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f3 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b1 b3 c$ c$ cmatrix f2 b3 b2 f3 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f3 f0 c==> f1 b0 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b1 b3 c$ c$ cmatrix f2 b3 b2 f3 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f3 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b1 b3 c$ c$ cmatrix f2 b3 b2 f3 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f3 f0 c==> f1 b0 f4 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b1 b3 c$ c$ cmatrix f2 b3 b2 f3 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f3 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b1 b3 c$ c$ cmatrix f2 b3 b2 f3 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f3 f0 c==> f1 b0 f4
+ (linear f) |- ((linear f) = T)
T c==> clinear f0 c= clinear f0 cT
+ |- (((_0 = _0) = T) /\ ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))))))
T c/\ c= c= c_0 c_0 cT c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((BIT0 n) - _0) = (BIT0 n))
T c= c- cBIT0 f0 c_0 cBIT0 f0
- (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- (((NUMERAL (BIT1 _0)) <= k) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c<= cNUMERAL cBIT1 c_0 f0 cT
- |- ((((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) = (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))))) = (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))))
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= creal_add creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_neg (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))
T c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- (((!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) ==> ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n)) = ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n))
T c= c==> ! c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1 * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')) = ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0
- |- ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m)
T * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0
- |- (((BIT1 n) <= _0) = F)
T c= c<= cBIT1 f0 c_0 cF
+ |- ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))
T c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ |- ((\n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) n)
T * / c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 f1
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))), (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) |- ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) /\ (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cNUMERAL cBIT0 cBIT1 c_0 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b3 b3 b2 b1 f0 f1 c$ c$ cmat cNUMERAL cBIT1 c_0 f0 f1 c= creal_add creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f2 f1 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f2 f1 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((i = i') ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ (i = i')) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND (i = i')) t') e'))))
T c==> c==> c= f0 f1 c= creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ c= f0 f1 c= creal_of_num cNUMERAL c_0 f3 c= cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c= f0 f1 f2 f3
+ |- (((!g. (((linear f) /\ ((linear g) /\ ((matrix f) = (matrix g)))) ==> (f = g))) ==> ((\g. (((linear f) /\ ((linear g) /\ ((matrix f) = (matrix g)))) ==> (f = g))) g)) = ((\g. (((linear f) /\ ((linear g) /\ ((matrix f) = (matrix g)))) ==> (f = g))) g))
T c= c==> ! c==> c/\ clinear f0 c/\ clinear b0 c= cmatrix f0 cmatrix b0 c= f0 b0 * / c==> c/\ clinear f0 c/\ clinear b0 c= cmatrix f0 cmatrix b0 c= f0 b0 f1 * / c==> c/\ clinear f0 c/\ clinear b0 c= cmatrix f0 cmatrix b0 c= f0 b0 f1
- |- ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n)
T * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1
- |- ((\n. ((EVEN (BIT0 n)) = T)) n)
T * / c= cEVEN cBIT0 b0 cT f0
- |- ((_0 + _0) = _0)
T c= c+ c_0 c_0 c_0
+ |- (((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)) = ((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j)))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f1 f2 f0 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b1 b0 f0 f3 creal_mul c$ c$ cmatrix f1 f2 f0 c$ clambda / c$ c$ cmatrix f1 b0 f0 f3 cT
- (!f. (!g. (((linear f) /\ ((linear g) /\ ((matrix f) = (matrix g)))) ==> (f = g)))) |- ((!f. (!g. (((linear f) /\ ((linear g) /\ ((matrix f) = (matrix g)))) ==> (f = g)))) /\ (!f. (!g. (((linear f) /\ ((linear g) /\ ((matrix f) = (matrix g)))) ==> (f = g)))))
T c==> ! ! c==> c/\ clinear b0 c/\ clinear b1 c= cmatrix b0 cmatrix b1 c= b0 b1 c/\ ! ! c==> c/\ clinear b0 c/\ clinear b1 c= cmatrix b0 cmatrix b1 c= b0 b1 ! ! c==> c/\ clinear b0 c/\ clinear b1 c= cmatrix b0 cmatrix b1 c= b0 b1
- |- (((!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) ==> ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n)) = ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n))
T c= c==> ! c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1 * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1
- |- ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))
T c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((_0 * (BIT0 n)) = _0)
T c= c* c_0 cBIT0 f0 c_0
- |- (((!n. (((BIT0 n) > (BIT1 m)) = (n > m))) ==> ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n)) = ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n))
T c= c==> ! c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1 * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1
- |- (((BIT0 n) >= (BIT0 m)) = (n >= m))
T c= c>= cBIT0 f0 cBIT0 f1 c>= f0 f1
- |- (((BIT0 m) <= (BIT1 n)) = (m <= n))
T c= c<= cBIT0 f0 cBIT1 f1 c<= f0 f1
- |- ((\m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) m)
T * / ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 f0
- |- (((!n. ((_0 * (BIT1 n)) = _0)) ==> ((\n. ((_0 * (BIT1 n)) = _0)) n)) = ((\n. ((_0 * (BIT1 n)) = _0)) n))
T c= c==> ! c= c* c_0 cBIT1 b0 c_0 * / c= c* c_0 cBIT1 b0 c_0 f0 * / c= c* c_0 cBIT1 b0 c_0 f0
- |- ((\m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) m)
T * / ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 f0
- |- ((EVEN (BIT1 n)) = F)
T c= cEVEN cBIT1 f0 cF
- |- ((((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) m)
T * / ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 f0
- |- ((PRE _0) = _0)
T c= cPRE c_0 c_0
- |- (((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j)) = ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j)))))) = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j))))))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f0 b0 f1 c$ c$ cmatrix f0 b0 f2 creal_mul c$ c$ cmatrix f0 b0 f1 c$ c$ cmatrix f0 b0 f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 b0 f1 c$ c$ cmatrix f0 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 b0 f1 c$ c$ cmatrix f0 b0 f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 b0 f1 c$ c$ cmatrix f0 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 b0 f1 c$ c$ cmatrix f0 b0 f2
- |- ((?t. t) = t)
T c= c? / f0 f0
- ((real_le (real_of_num (NUMERAL _0))) t) |- (((real_le (real_of_num (NUMERAL _0))) t) = T)
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c= creal_le creal_of_num cNUMERAL c_0 f0 cT
- |- (((!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = (p' ==> q'))))) ==> ((\q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = (p' ==> q'))))) q')) = ((\q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= c= creal_add creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f3 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f0 creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f0 cCOND c= f3 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f3 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f0 creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f0 cCOND c= f3 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> f1 b0 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= c= creal_add creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f3 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f0 creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f0 cCOND c= f3 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f3 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f0 creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f0 cCOND c= f3 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> f1 b0 f4 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= c= creal_add creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f3 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f0 creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f0 cCOND c= f3 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f3 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f0 creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f0 cCOND c= f3 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> f1 b0 f4
- |- ((\n. (((BIT0 m) < (BIT1 n)) = (m <= n))) n)
T * / c= c< cBIT0 f0 cBIT1 b0 c<= f0 b0 f1
- |- ((\n. ((BIT1 n) > _0)) n)
T * / c> cBIT1 b0 c_0 f0
- |- (((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) ==> ((\m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) m)) = ((\m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) m))
T c= c==> ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 * / ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 f0 * / ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 f0
+ |- ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b2 b4 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b4 b3 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b2 b4 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b4 b3 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 c==> b0 b1 f3
- |- (((!n. ((BIT1 n) >= _0)) ==> ((\n. ((BIT1 n) >= _0)) n)) = ((\n. ((BIT1 n) >= _0)) n))
T c= c==> ! c>= cBIT1 b0 c_0 * / c>= cBIT1 b0 c_0 f0 * / c>= cBIT1 b0 c_0 f0
- |- (((!n. (((BIT1 n) > (BIT0 m)) = (n >= m))) ==> ((\n. (((BIT1 n) > (BIT0 m)) = (n >= m))) n)) = ((\n. (((BIT1 n) > (BIT0 m)) = (n >= m))) n))
T c= c==> ! c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 * / c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 f1 * / c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> (((((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= c/\ c= creal_add creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> f1 b0 f3
- |- ((_0 > (BIT0 n)) = F)
T c= c> c_0 cBIT0 f0 cF
- |- (((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((sum s) (\k. (f k))) = ((sum s) g))) = T)
T c= c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= csum f0 / * f1 b0 csum f0 f2 cT
- |- (((!n. (((BIT1 n) - _0) = (BIT1 n))) ==> ((\n. (((BIT1 n) - _0) = (BIT1 n))) n)) = ((\n. (((BIT1 n) - _0) = (BIT1 n))) n))
T c= c==> ! c= c- cBIT1 b0 c_0 cBIT1 b0 * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0 * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0
- |- (((!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) ==> ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n)) = ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n))
T c= c==> ! c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1 * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
+ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) /\ (((real_mul ((real_sub (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))))))))) |- ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= creal_mul creal_sub c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) /\ (((real_mul ((real_sub (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))))))))) ==> F)
T c==> c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= creal_mul creal_sub c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((EVEN _0) = T)
T c= cEVEN c_0 cT
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambda g) $ i) = (g i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
- |- (((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) ==> ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m)) = ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m))
T c= c==> ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0 * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0
- |- ((((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0))))))))) ==> (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))
T c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (((matrix f) $ i) $ x)) ((lambdaj. (((matrix f) $ j) $ x)) $ j)))))
T c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b0 c$ clambda / c$ c$ cmatrix f0 b1 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b0 c$ clambda / c$ c$ cmatrix f0 b1 b0 f2
+ |- ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))))))))
T c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n)
T * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1
- |- (((!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) ==> ((\m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) m)) = ((\m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) m))
T c= c==> ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 * / ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 f0 * / ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 f0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (i = (NUMERAL (BIT1 _0)))) |- (((NUMERAL (BIT1 _0)) = i) = F)
T c==> c~ c= f0 cNUMERAL cBIT1 c_0 c= c= cNUMERAL cBIT1 c_0 f0 cF
+ |- ((\Q. ((orthogonal_matrix Q) = ((((matrix_mul (transp Q)) Q) = (mat (NUMERAL (BIT1 _0)))) /\ (((matrix_mul Q) (transp Q)) = (mat (NUMERAL (BIT1 _0))))))) Q)
T * / c= corthogonal_matrix b0 c/\ c= cmatrix_mul ctransp b0 b0 cmat cNUMERAL cBIT1 c_0 c= cmatrix_mul b0 ctransp b0 cmat cNUMERAL cBIT1 c_0 f0
+ |- (((!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = (p' ==> q'))))) ==> ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = (p' ==> q'))))) q')) = ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b1 b3 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b3 b2 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b1 b3 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b3 b2 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> f1 b0 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b1 b3 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b3 b2 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b1 b3 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b3 b2 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> f1 b0 f3 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b1 b3 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b3 b2 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b1 b3 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b3 b2 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> f1 b0 f3
- |- (((!n. (((BIT0 n) > _0) = (n > _0))) ==> ((\n. (((BIT0 n) > _0) = (n > _0))) n)) = ((\n. (((BIT0 n) > _0) = (n > _0))) n))
T c= c==> ! c= c> cBIT0 b0 c_0 c> b0 c_0 * / c= c> cBIT0 b0 c_0 c> b0 c_0 f0 * / c= c> cBIT0 b0 c_0 c> b0 c_0 f0
- |- ((_0 = (BIT1 n)) = F)
T c= c= c_0 cBIT1 f0 cF
- |- (((!n. (~ (_0 > (BIT0 n)))) ==> ((\n. (~ (_0 > (BIT0 n)))) n)) = ((\n. (~ (_0 > (BIT0 n)))) n))
T c= c==> ! c~ c> c_0 cBIT0 b0 * / c~ c> c_0 cBIT0 b0 f0 * / c~ c> c_0 cBIT0 b0 f0
+ |- ((((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (?z. (((real_of_num (NUMERAL (BIT1 _0))) = ((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) /\ ((((real_mul ((real_sub ((real_add ((real_pow (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))) \/ ((((real_mul ((real_sub (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))) \/ (((real_mul ((real_sub (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))))) = (?z. (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) /\ ((((real_mul ((real_sub ((real_add ((real_pow (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))) \/ ((((real_mul ((real_sub (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))) \/ (((real_mul ((real_sub (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))))))
T c= c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c? / c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c\/ c= creal_mul creal_sub creal_add creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c= creal_mul creal_sub c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c\/ c= creal_mul creal_sub creal_add creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c= creal_mul creal_sub c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0))) = F) ==> ((F ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) t') e'))))) = ((F ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) t') e')))))
T c= c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cF c==> c==> cF c= creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f1 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF f0 f1 c==> c==> cF c= creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f1 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF f0 f1
- |- (((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j)) = ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j)))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f1 f0 f2 c$ c$ cmatrix f1 f0 f3 creal_mul c$ c$ cmatrix f1 f0 f2 c$ c$ cmatrix f1 f0 f3 cT
+ |- (((!f. (!g. (((linear f) /\ ((linear g) /\ ((matrix f) = (matrix g)))) ==> (f = g)))) ==> ((\f. (!g. (((linear f) /\ ((linear g) /\ ((matrix f) = (matrix g)))) ==> (f = g)))) f)) = ((\f. (!g. (((linear f) /\ ((linear g) /\ ((matrix f) = (matrix g)))) ==> (f = g)))) f))
T c= c==> ! ! c==> c/\ clinear b0 c/\ clinear b1 c= cmatrix b0 cmatrix b1 c= b0 b1 * / ! c==> c/\ clinear b0 c/\ clinear b1 c= cmatrix b0 cmatrix b1 c= b0 b1 f0 * / ! c==> c/\ clinear b0 c/\ clinear b1 c= cmatrix b0 cmatrix b1 c= b0 b1 f0
- |- ((SUC (BIT0 n)) = (BIT1 n))
T c= cSUC cBIT0 f0 cBIT1 f0
+ |- (((!A. ((det A) = ((real_sub ((real_mul ((A $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) ((A $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul ((A $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) ((A $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))))) ==> ((\A. ((det A) = ((real_sub ((real_mul ((A $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) ((A $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul ((A $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) ((A $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))))) A)) = ((\A. ((det A) = ((real_sub ((real_mul ((A $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) ((A $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul ((A $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) ((A $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))))) A))
T c= c==> ! c= cdet b0 creal_sub creal_mul c$ c$ b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ b0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ b0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 * / c= cdet b0 creal_sub creal_mul c$ c$ b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ b0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ b0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * / c= cdet b0 creal_sub creal_mul c$ c$ b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ b0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ b0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f0
- |- (((i = i') = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))
T c==> c= c= f0 f1 f2 c==> c==> f2 c= creal_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> c~ f2 c= creal_of_num cNUMERAL c_0 f4 c= cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f2 f3 f4
- |- ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n)
T * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1
+ (linear f), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t)), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)), ((real_le (real_of_num (NUMERAL _0))) t), ((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t))))
T c==> clinear f0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin f1 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos f1 c==> creal_le creal_of_num cNUMERAL c_0 f1 c==> creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d f1
- |- ((\n. ((_0 = (BIT1 n)) = F)) n)
T * / c= c= c_0 cBIT1 b0 cF f0
- |- ((\n. (((BIT1 n) - _0) = (BIT1 n))) n)
T * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0
- |- (((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) ==> ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m)) = ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m))
T c= c==> ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))))
T c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
- |- ((\n. ((BIT1 n) >= _0)) n)
T * / c>= cBIT1 b0 c_0 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)) = ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b1 b0 f0 f1 c$ c$ cmatrix f2 f1 f3 creal_mul c$ c$ cmatrix f2 f1 f0 c$ c$ cmatrix f2 f1 f3
+ |- ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m)
T * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0
- |- ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (((matrix f) $ x) $ i)) (((matrix f) $ x) $ j)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f0 b0 f1 c$ c$ cmatrix f0 b0 f2 * f3 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 b0 f1 c$ c$ cmatrix f0 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f3
+ (linear f), (((real_add ((real_pow (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) |- (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))
T c==> clinear f0 c==> c= creal_add creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b3 b3 b0 b2 c$ c$ cmatrix f2 b2 b1 f0 f1 c$ c$ cmat cNUMERAL cBIT1 c_0 f0 f1 c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f1 creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f1 cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((BIT0 n) > (BIT0 m)) = (n > m))
T c= c> cBIT0 f0 cBIT0 f1 c> f0 f1
+ |- ((\t. (linear (rotate2d t))) t)
T * / clinear * part crotate2d b0 f0
- |- ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))
T c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
- |- ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n)
T * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
+ |- (((!A. (!B. (((matrix_mul A) B) = (lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ j))))))))) ==> ((\A. (!B. (((matrix_mul A) B) = (lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ j))))))))) A)) = ((\A. (!B. (((matrix_mul A) B) = (lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ j))))))))) A))
T c= c==> ! ! c= cmatrix_mul b0 b1 clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ b0 b2 b4 c$ c$ b1 b4 b3 * / ! c= cmatrix_mul b0 b1 clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ b0 b2 b4 c$ c$ b1 b4 b3 f0 * / ! c= cmatrix_mul b0 b1 clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ b0 b2 b4 c$ c$ b1 b4 b3 f0
- |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> ((((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = (p' ==> q'))))
T c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= c= creal_add creal_mul c$ c$ cmatrix f2 f3 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 f3 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f3 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f4 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f2 f3 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 f3 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f3 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> f1 f4
- |- (((!e'. (((i = (NUMERAL (BIT1 _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) ==> ((\e'. (((i = (NUMERAL (BIT1 _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) e')) = ((\e'. (((i = (NUMERAL (BIT1 _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f1 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f1 f2 b0 * / c==> c= c= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f1 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f1 f2 b0 f3 * / c==> c= c= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f1 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f1 f2 b0 f3
- |- (((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) /\ (((_0 < _0) = F) /\ ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))))))) /\ (((!m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) /\ ((_0 >= _0) /\ ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))))) /\ (((!m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) /\ ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))) /\ ((!m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) /\ (((_0 - _0) = _0) /\ ((!n. ((_0 - (BIT0 n)) = _0)) /\ ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))))))))))
T c/\ c/\ ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 c/\ c= c< c_0 c_0 cF c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 c/\ c/\ ! ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 c/\ c>= c_0 c_0 c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0 c/\ c/\ ! ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 c/\ ! ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 c/\ c= c- c_0 c_0 c_0 c/\ ! c= c- c_0 cBIT0 b0 c_0 c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ |- ((\f. ((orthogonal_transformation f) = ((linear f) /\ (orthogonal_matrix (matrix f))))) f)
T * / c= corthogonal_transformation b0 c/\ clinear b0 corthogonal_matrix cmatrix b0 f0
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
- |- ((\n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))) n)
T * / c= cEXP cNUMERAL f0 cNUMERAL b0 cNUMERAL cEXP f0 b0 f1
+ |- (((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) ==> ((\m. (!n. (((BIT0 m) = (BIT1 n)) = F))) m)) = ((\m. (!n. (((BIT0 m) = (BIT1 n)) = F))) m))
T c= c==> ! ! c= c= cBIT0 b0 cBIT1 b1 cF * / ! c= c= cBIT0 b0 cBIT1 b1 cF f0 * / ! c= c= cBIT0 b0 cBIT1 b1 cF f0
- |- (((ODD _0) = F) /\ ((!n. ((ODD (BIT0 n)) = F)) /\ (!n. ((ODD (BIT1 n)) = T))))
T c/\ c= cODD c_0 cF c/\ ! c= cODD cBIT0 b0 cF ! c= cODD cBIT1 b0 cT
- |- (((!g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (((matrix f) $ i) $ x)) ((lambdaj. (((matrix f) $ j) $ x)) $ j)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (((matrix f) $ i) $ x)) ((lambdaj. (((matrix f) $ j) $ x)) $ j)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (((matrix f) $ i) $ x)) ((lambdaj. (((matrix f) $ j) $ x)) $ j)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f0 f1 b1 c$ clambda / c$ c$ cmatrix f0 b2 b1 f2 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b1 c$ clambda / c$ c$ cmatrix f0 b2 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f0 f1 b1 c$ clambda / c$ c$ cmatrix f0 b2 b1 f2 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b1 c$ clambda / c$ c$ cmatrix f0 b2 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f0 f1 b1 c$ clambda / c$ c$ cmatrix f0 b2 b1 f2 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b1 c$ clambda / c$ c$ cmatrix f0 b2 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3
- |- (((!n. (((BIT1 n) > (BIT1 m)) = (n > m))) ==> ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n)) = ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n))
T c= c==> ! c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1 * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1
+ |- ((\q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ c$ cmatrix f2 f3 f0 c$ c$ cvector cCONS cvector cCONS ccos f4 cCONS creal_neg csin f4 cNIL cCONS cvector cCONS csin f4 cCONS ccos f4 cNIL cNIL f3 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ cmatrix f2 f3 f0 c$ c$ cvector cCONS cvector cCONS ccos f4 cCONS creal_neg csin f4 cNIL cCONS cvector cCONS csin f4 cCONS ccos f4 cNIL cNIL f3 f0 c==> f1 b0 f5
- |- (((!e'. (((i = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) ==> ((\e'. (((i = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) e')) = ((\e'. (((i = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f1 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f1 f2 b0 * / c==> c= c= f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f1 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f1 f2 b0 f3 * / c==> c= c= f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f1 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f1 f2 b0 f3
- |- ((i = (NUMERAL (BIT1 _0))) ==> ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c= f0 cNUMERAL cBIT1 c_0 c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))
T c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
- |- (((~ (_0 >= (BIT1 n))) ==> ((_0 >= (BIT1 n)) = F)) = ((_0 >= (BIT1 n)) = F))
T c= c==> c~ c>= c_0 cBIT1 f0 c= c>= c_0 cBIT1 f0 cF c= c>= c_0 cBIT1 f0 cF
- |- ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))
T c= cSUC cNUMERAL f0 cNUMERAL cSUC f0
- |- (((BIT0 n) >= _0) = T)
T c= c>= cBIT0 f0 c_0 cT
+ |- ((((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q'))))
T c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 f4 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 f4 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f4
- |- ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))))
T c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
- |- (((!n. (((BIT1 n) = _0) = F)) ==> ((\n. (((BIT1 n) = _0) = F)) n)) = ((\n. (((BIT1 n) = _0) = F)) n))
T c= c==> ! c= c= cBIT1 b0 c_0 cF * / c= c= cBIT1 b0 c_0 cF f0 * / c= c= cBIT1 b0 c_0 cF f0
+ |- ((!f. ((((linear f) /\ (orthogonal_matrix (matrix f))) /\ ((det (matrix f)) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t))))))) = (!f. (((orthogonal_transformation f) /\ ((det (matrix f)) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t))))))))
T c= ! c==> c/\ c/\ clinear b0 corthogonal_matrix cmatrix b0 c= cdet cmatrix b0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_lt b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= b0 * part crotate2d b1 ! c==> c/\ corthogonal_transformation b0 c= cdet cmatrix b0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_lt b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= b0 * part crotate2d b1
- |- ((\m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) m)
T * / ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 f0
- |- (((!m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) /\ ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))) /\ ((!m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) /\ (((_0 - _0) = _0) /\ ((!n. ((_0 - (BIT0 n)) = _0)) /\ ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))))))))
T c/\ c/\ ! ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 c/\ ! ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 c/\ c= c- c_0 c_0 c_0 c/\ ! c= c- c_0 cBIT0 b0 c_0 c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) ==> ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n)) = ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n))
T c= c==> ! c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1 * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1
+ |- ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 c==> b0 b1 f4
- |- (((!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> ((((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = (p' ==> q'))))) ==> ((\q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> ((((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = (p' ==> q'))))) q')) = ((\q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> ((((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= c= creal_add creal_mul c$ c$ cmatrix f2 f3 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 f3 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f3 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f2 f3 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 f3 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f3 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> f1 b0 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= c= creal_add creal_mul c$ c$ cmatrix f2 f3 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 f3 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f3 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f2 f3 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 f3 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f3 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> f1 b0 f4 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= c= creal_add creal_mul c$ c$ cmatrix f2 f3 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 f3 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f3 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f2 f3 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 f3 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f3 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> f1 b0 f4
+ (linear f), (((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))), (((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))) /\ ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))))), (((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))) /\ ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))))) |- (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))
T c==> clinear f0 c==> c= creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
- |- (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))))))))
T c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
+ |- ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b2 b4 c$ c$ cmatrix f1 b4 b3 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b2 b4 c$ c$ cmatrix f1 b4 b3 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> b0 b1 f2
+ |- ((\t'. (!e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 b0 b1 f1
- |- (((!n. (((BIT0 n) = _0) = (n = _0))) ==> ((\n. (((BIT0 n) = _0) = (n = _0))) n)) = ((\n. (((BIT0 n) = _0) = (n = _0))) n))
T c= c==> ! c= c= cBIT0 b0 c_0 c= b0 c_0 * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0 * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0
- (((linear f) /\ ((((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))) /\ ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))))) /\ (((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))) /\ ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0))))) |- (linear f)
T c==> c/\ c/\ clinear f0 c/\ c/\ c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 clinear f0
- |- (((BIT0 n) > (BIT1 m)) = (n > m))
T c= c> cBIT0 f0 cBIT1 f1 c> f0 f1
- |- (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j)) = ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f1 f0 f2 c$ c$ cmatrix f1 f0 f3 creal_mul c$ c$ cmatrix f1 f0 f2 c$ c$ cmatrix f1 f0 f3
+ |- (((!e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) ==> ((\e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) e')) = ((\e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 f1 b0 * / c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 f1 b0 f2 * / c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 f1 b0 f2
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((\i. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) i))) = (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((\i. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b2 b1 f0 * / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b2 b1 f0 c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b2 b1 f0 * / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b2 b1 f0
- |- ((\n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) n)
T * / c= cSUC cBIT1 b0 cBIT0 cSUC b0 f0
- ((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- (T = ((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))
T c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cT creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi
- |- (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))))))
T c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- ((\n. (((BIT1 n) >= (BIT0 m)) = (n >= m))) n)
T * / c= c>= cBIT1 b0 cBIT0 f0 c>= b0 f0 f1
- |- (((!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) ==> ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n)) = ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n))
T c= c==> ! c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1 * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1
- |- (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n)))
T c= c+ cBIT0 f0 cBIT0 f1 cBIT0 c+ f0 f1
+ |- ((\B. (((matrix_mul A) B) = (lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ j)))))))) B)
T * / c= cmatrix_mul f0 b0 clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b1 b3 c$ c$ b0 b3 b2 f1
- |- (((!n. ((_0 + (BIT1 n)) = (BIT1 n))) ==> ((\n. ((_0 + (BIT1 n)) = (BIT1 n))) n)) = ((\n. ((_0 + (BIT1 n)) = (BIT1 n))) n))
T c= c==> ! c= c+ c_0 cBIT1 b0 cBIT1 b0 * / c= c+ c_0 cBIT1 b0 cBIT1 b0 f0 * / c= c+ c_0 cBIT1 b0 cBIT1 b0 f0
- |- ((\n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) n)
T * / c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- |- ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))))
T c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
- |- ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n)
T * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((lambdaj. (((matrix f) $ j) $ (NUMERAL (BIT0 (BIT1 _0))))) $ i') = ((\j. (((matrix f) $ j) $ (NUMERAL (BIT0 (BIT1 _0))))) i'))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ clambda / c$ c$ cmatrix f1 b0 cNUMERAL cBIT0 cBIT1 c_0 f0 * / c$ c$ cmatrix f1 b0 cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- (((!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) ==> ((\y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) y)) = ((\y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) y))
T c= c==> ! ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 * / ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 f1 * / ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 f1
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) ==> ((\n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) n)) = ((\n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) n))
T c= c==> ! c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 * / c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1 * / c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- (~ (i = i')) |- (((~ (i' = i)) ==> ((i' = i) = F)) = ((i' = i) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
- |- (((!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) ==> ((\n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) n)) = ((\n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) n))
T c= c==> ! c= cSUC cBIT1 b0 cBIT0 cSUC b0 * / c= cSUC cBIT1 b0 cBIT0 cSUC b0 f0 * / c= cSUC cBIT1 b0 cBIT0 cSUC b0 f0
- (~ (i = (NUMERAL (BIT1 _0)))) |- ((~ (i = (NUMERAL (BIT1 _0)))) /\ ((real_of_num (NUMERAL _0)) = (real_of_num (NUMERAL _0))))
T c==> c~ c= f0 cNUMERAL cBIT1 c_0 c/\ c~ c= f0 cNUMERAL cBIT1 c_0 c= creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))))))))
T c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))
T c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- (~ (i = i')) |- ((i = i') = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
+ |- (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j)))))
T c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b0 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b2 b1 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b0 c$ clambda / c$ c$ cmatrix f0 b1 b0 f2
- |- (((!n. (((BIT0 m) < (BIT0 n)) = (m < n))) ==> ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n)) = ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n))
T c= c==> ! c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1 * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1
- |- ((\n. (((BIT0 n) = _0) = (n = _0))) n)
T * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (linear f), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))), (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t))), ((real_le (real_of_num (NUMERAL _0))) t), ((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t))))
T c==> clinear f0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos f1 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin f1 c==> creal_le creal_of_num cNUMERAL c_0 f1 c==> creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d f1
+ |- (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)) = ((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f1 f2 f0 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b1 b0 f0 f3 creal_mul c$ c$ cmatrix f1 f2 f0 c$ clambda / c$ c$ cmatrix f1 b0 f0 f3
+ |- ((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)) = ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f0 b2 b1 f1 b0 c$ c$ cmatrix f0 b0 f2 creal_mul c$ c$ cmatrix f0 b0 f1 c$ c$ cmatrix f0 b0 f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f0 b2 b1 f1 b0 c$ c$ cmatrix f0 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 b0 f1 c$ c$ cmatrix f0 b0 f2
- |- ((\m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) m)
T * / ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL n) >= (NUMERAL m)) = (n >= m))
T c= c>= cNUMERAL f0 cNUMERAL f1 c>= f0 f1
- |- (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n)))
T c= c- cBIT0 f0 cBIT0 f1 cBIT0 c- f0 f1
+ |- (((!n. (((BIT1 m) = (BIT0 n)) = F)) ==> ((\n. (((BIT1 m) = (BIT0 n)) = F)) n)) = ((\n. (((BIT1 m) = (BIT0 n)) = F)) n))
T c= c==> ! c= c= cBIT1 f0 cBIT0 b0 cF * / c= c= cBIT1 f0 cBIT0 b0 cF f1 * / c= c= cBIT1 f0 cBIT0 b0 cF f1
+ |- (((vector ((CONS x) ((CONS y) NIL))) $ (NUMERAL (BIT1 _0))) = x)
T c= c$ cvector cCONS f0 cCONS f1 cNIL cNUMERAL cBIT1 c_0 f0
+ |- (((real_mul ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_mul creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. ((_0 EXP (BIT1 n)) = _0)) n)
T * / c= cEXP c_0 cBIT1 b0 c_0 f0
- |- (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j)) = ((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f1 f2 f0 c$ clambda / c$ c$ cmatrix f1 b0 f0 f3 creal_mul c$ c$ cmatrix f1 f2 f0 c$ clambda / c$ c$ cmatrix f1 b0 f0 f3
+ (((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))), ((linear f) /\ ((((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))) /\ ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))))) /\ (((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))) /\ ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))))))) |- (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))
T c==> c= creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ clinear f0 c/\ c/\ c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
+ |- ((\A. ((det A) = ((real_sub ((real_mul ((A $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) ((A $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul ((A $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) ((A $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))))) A)
T * / c= cdet b0 creal_sub creal_mul c$ c$ b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ b0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ b0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) ==> ((\n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) n)) = ((\n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) n))
T c= c==> ! c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 * / c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 f1 * / c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 f1
- |- ((_0 EXP (BIT1 n)) = _0)
T c= cEXP c_0 cBIT1 f0 c_0
+ |- ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))))
T c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q'))))
T c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b2 b1 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b2 b1 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b2 b1 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b2 b1 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f2
- |- ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))
T c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j)) = ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f0 b0 f1 c$ c$ cmatrix f0 b0 f2 creal_mul c$ c$ cmatrix f0 b0 f1 c$ c$ cmatrix f0 b0 f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 b0 f1 c$ c$ cmatrix f0 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 b0 f1 c$ c$ cmatrix f0 b0 f2
- (~ (i = (NUMERAL (BIT0 (BIT1 _0))))) |- (((~ ((NUMERAL (BIT0 (BIT1 _0))) = i)) ==> (((NUMERAL (BIT0 (BIT1 _0))) = i) = F)) = (((NUMERAL (BIT0 (BIT1 _0))) = i) = F))
T c==> c~ c= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c~ c= cNUMERAL cBIT0 cBIT1 c_0 f0 c= c= cNUMERAL cBIT0 cBIT1 c_0 f0 cF c= c= cNUMERAL cBIT0 cBIT1 c_0 f0 cF
- |- ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n)
T * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- |- (((!p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> (((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> (((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> (((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 c==> b0 b1 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 c==> b0 b1 f4 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 c==> b0 b1 f4
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))
T c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ |- (((((linear f) /\ (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) = (mat (NUMERAL (BIT1 _0)))) /\ ((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) = (mat (NUMERAL (BIT1 _0)))))) /\ ((det (matrix f)) = (real_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t))))) = q')) ==> (((((linear f) /\ (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) = (mat (NUMERAL (BIT1 _0)))) /\ ((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) = (mat (NUMERAL (BIT1 _0)))))) /\ ((det (matrix f)) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))) = (p' ==> q'))))
T c==> c= c/\ c/\ clinear f0 c/\ c= clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f0 b3 b3 b0 b2 c$ c$ cmatrix f0 b2 b1 cmat cNUMERAL cBIT1 c_0 c= clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b3 b3 b2 b1 cmat cNUMERAL cBIT1 c_0 c= cdet cmatrix f0 creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0 f2 c= c==> c/\ c/\ clinear f0 c/\ c= clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f0 b3 b3 b0 b2 c$ c$ cmatrix f0 b2 b1 cmat cNUMERAL cBIT1 c_0 c= clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b3 b3 b2 b1 cmat cNUMERAL cBIT1 c_0 c= cdet cmatrix f0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0 c==> f1 f2
+ (linear f), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))), (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t))))) |- ((((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t))))) /\ (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))
T c==> clinear f0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos f1 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin f1 c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos f1 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin f1 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d f1
+ |- ((((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) /\ (((real_mul ((real_sub (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))))))))) ==> F)
T c==> c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= creal_mul creal_sub c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j)) = ((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j)))))) = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j))))))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f0 f1 b0 c$ clambda / c$ c$ cmatrix f0 b1 b0 f2 creal_mul c$ c$ cmatrix f0 f1 b0 c$ clambda / c$ c$ cmatrix f0 b1 b0 f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b0 c$ clambda / c$ c$ cmatrix f0 b1 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b0 c$ clambda / c$ c$ cmatrix f0 b1 b0 f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b0 c$ clambda / c$ c$ cmatrix f0 b1 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b0 c$ clambda / c$ c$ cmatrix f0 b1 b0 f2
- |- (((!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) ==> ((\m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) m)) = ((\m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) m))
T c= c==> ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 * / ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 f0 * / ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 f0
- |- ((\n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n)))) n)
T * / c= c- cNUMERAL f0 cNUMERAL b0 cNUMERAL c- f0 b0 f1
- |- ((\n. ((PRE (NUMERAL n)) = (NUMERAL (PRE n)))) n)
T * / c= cPRE cNUMERAL b0 cNUMERAL cPRE b0 f0
- |- (((!n. ((_0 <= (BIT0 n)) = T)) ==> ((\n. ((_0 <= (BIT0 n)) = T)) n)) = ((\n. ((_0 <= (BIT0 n)) = T)) n))
T c= c==> ! c= c<= c_0 cBIT0 b0 cT * / c= c<= c_0 cBIT0 b0 cT f0 * / c= c<= c_0 cBIT0 b0 cT f0
- |- (((!n. ((_0 < (BIT0 n)) = (_0 < n))) ==> ((\n. ((_0 < (BIT0 n)) = (_0 < n))) n)) = ((\n. ((_0 < (BIT0 n)) = (_0 < n))) n))
T c= c==> ! c= c< c_0 cBIT0 b0 c< c_0 b0 * / c= c< c_0 cBIT0 b0 c< c_0 b0 f0 * / c= c< c_0 cBIT0 b0 c< c_0 b0 f0
- |- (((real_mul ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_mul creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ (i = i')) ==> ((real_of_num (NUMERAL _0)) = (real_of_num (NUMERAL _0)))) ==> ((((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = ((((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))
T c= c==> c==> c~ c= f0 f1 c= creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))), (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) /\ (((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)) = ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b1 b0 f0 f1 c$ c$ cmatrix f2 f1 f3 creal_mul c$ c$ cmatrix f2 f1 f0 c$ c$ cmatrix f2 f1 f3
- |- ((~ (i = (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_of_num (NUMERAL _0)) = (real_of_num (NUMERAL _0))))
T c==> c~ c= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- ((!x. ((P x) ==> (Q x))) ==> ((?x. (P x)) ==> (?x. (Q x)))) |- (((!x. ((P x) ==> (Q x))) ==> ((?x. (P x)) ==> (?x. (Q x)))) /\ ((!x. ((P x) ==> (Q x))) ==> ((?x. (P x)) ==> (?x. (Q x)))))
T c==> c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0 c/\ c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0 c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0
- (i = (NUMERAL (BIT0 (BIT1 _0)))) |- ((NUMERAL (BIT0 (BIT1 _0))) = i)
T c==> c= f0 cNUMERAL cBIT0 cBIT1 c_0 c= cNUMERAL cBIT0 cBIT1 c_0 f0
- |- (((BIT1 n) = _0) = F)
T c= c= cBIT1 f0 c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))
T c= c- cBIT0 f0 cBIT1 f1 cPRE cBIT0 c- f0 f1
+ (linear f), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) |- (!t. ((((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t))))) ==> (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t))))))
T c==> clinear f0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos b0 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin b0 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
- |- ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))
T c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) = ((\i. (lambdaj. (((matrix f) $ j) $ i))) k))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / c$ c$ cmatrix f1 b1 b0 f0 * / clambda / c$ c$ cmatrix f1 b1 b0 f0
- |- ((((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) = (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q'))))
T c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= creal_add creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= creal_add creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f3
- |- ((\m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) m)
T * / ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((\i. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) i))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b0 b2 c$ c$ cmatrix f1 b2 b1 f0 * / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b0 b2 c$ c$ cmatrix f1 b2 b1 f0
- |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = ((((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c/\ c= creal_add creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((_0 < (BIT0 n)) = (_0 < n))
T c= c< c_0 cBIT0 f0 c< c_0 f0
- |- ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m)
T * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
+ (linear f), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t)), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) |- ((((linear f) /\ ((linear (rotate2d t)) /\ ((matrix f) = (matrix (rotate2d t))))) ==> (f = (rotate2d t))) = (f = (rotate2d t)))
T c==> clinear f0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin f1 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos f1 c= c==> c/\ clinear f0 c/\ clinear * part crotate2d f1 c= cmatrix f0 cmatrix * part crotate2d f1 c= f0 * part crotate2d f1 c= f0 * part crotate2d f1
- |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0
+ |- (((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = F) ==> ((F ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) t') e'))))) = ((F ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) t') e')))))
T c= c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c==> cF c= creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f1 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF f0 f1 c==> c==> cF c= creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f1 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF f0 f1
- |- (((!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))) ==> ((\n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))) n)) = ((\n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))) n))
T c= c==> ! c= c- cBIT0 f0 cBIT1 b0 cPRE cBIT0 c- f0 b0 * / c= c- cBIT0 f0 cBIT1 b0 cPRE cBIT0 c- f0 b0 f1 * / c= c- cBIT0 f0 cBIT1 b0 cPRE cBIT0 c- f0 b0 f1
- (!f. (!g. (((linear f) /\ ((linear g) /\ ((matrix f) = (matrix g)))) ==> (f = g)))) |- ((((linear f) /\ ((linear g) /\ ((matrix f) = (matrix g)))) ==> (f = g)) = T)
T c==> ! ! c==> c/\ clinear b0 c/\ clinear b1 c= cmatrix b0 cmatrix b1 c= b0 b1 c= c==> c/\ clinear f0 c/\ clinear f1 c= cmatrix f0 cmatrix f1 c= f0 f1 cT
- |- ((\m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) m)
T * / ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 f0
- |- (((BIT0 n) + _0) = (BIT0 n))
T c= c+ cBIT0 f0 c_0 cBIT0 f0
- |- ((\n. (((NUMERAL m) < (NUMERAL n)) = (m < n))) n)
T * / c= c< cNUMERAL f0 cNUMERAL b0 c< f0 b0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((BIT1 n) > _0) = T)
T c= c> cBIT1 f0 c_0 cT
- |- ((\n. ((_0 <= (BIT1 n)) = T)) n)
T * / c= c<= c_0 cBIT1 b0 cT f0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (((matrix f) $ x) $ i)) (((matrix f) $ x) $ j)) = ((real_mul (((matrix f) $ x) $ i)) (((matrix f) $ x) $ j))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (((matrix f) $ x) $ i)) (((matrix f) $ x) $ j))))))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f0 b0 f1 c$ c$ cmatrix f0 b0 f2 creal_mul c$ c$ cmatrix f0 b0 f1 c$ c$ cmatrix f0 b0 f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 b0 f1 c$ c$ cmatrix f0 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 b0 f1 c$ c$ cmatrix f0 b0 f2
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q')))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ cmatrix f1 f0 c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cmatrix f1 f0 c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f3
- |- ((((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) = (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q'))))
T c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 f4 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 f4 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f4
- |- (((!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m))
T c= c==> ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0 * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0
+ |- (((!x. (!y. ((((real_add ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow y) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ ((x = (cos t)) /\ (y = (sin t))))))))) ==> ((\x. (!y. ((((real_add ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow y) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ ((x = (cos t)) /\ (y = (sin t))))))))) x)) = ((\x. (!y. ((((real_add ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow y) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ ((x = (cos t)) /\ (y = (sin t))))))))) x))
T c= c==> ! ! c==> c= creal_add creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_lt b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= b0 ccos b2 c= b1 csin b2 * / ! c==> c= creal_add creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_lt b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= b0 ccos b2 c= b1 csin b2 f0 * / ! c==> c= creal_add creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_lt b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= b0 ccos b2 c= b1 csin b2 f0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (i = i') |- ((i = i') /\ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c= f0 f1 c/\ c= f0 f1 c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (((BIT1 n) < _0) = F)) n)
T * / c= c< cBIT1 b0 c_0 cF f0
- |- (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n))))))
T c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
+ |- ((y = z) = (((real_add (real_neg z)) y) = ((real_add (real_neg z)) z)))
T c= c= f0 f1 c= creal_add creal_neg f1 f0 creal_add creal_neg f1 f1
+ |- ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ cmatrix f2 f0 c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cmatrix f2 f0 c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f0 c==> f1 b0 f4
- |- ((\n. ((_0 >= (BIT0 n)) = (_0 >= n))) n)
T * / c= c>= c_0 cBIT0 b0 c>= c_0 b0 f0
- |- ((\n. (((BIT1 n) * _0) = _0)) n)
T * / c= c* cBIT1 b0 c_0 c_0 f0
- |- ((_0 - _0) = _0)
T c= c- c_0 c_0 c_0
+ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) |- ((((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_of_num (NUMERAL (BIT1 _0))) = ((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) ==> ((((real_add ((real_pow (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))))))) = (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_of_num (NUMERAL (BIT1 _0))) = ((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) ==> ((((real_add ((real_pow (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))))))))
T c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c==> c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c==> c= creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c==> c= creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- (((!t'. (!e'. (((i = (NUMERAL (BIT1 _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((i = (NUMERAL (BIT1 _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((i = (NUMERAL (BIT1 _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f1 b0 b1 * / ! c==> c= c= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f1 b0 b1 f2 * / ! c==> c= c= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f1 b0 b1 f2
- (!f. (!g. (((linear f) /\ ((linear g) /\ ((matrix f) = (matrix g)))) ==> (f = g)))), ((linear f) /\ ((linear g) /\ ((matrix f) = (matrix g)))) |- (((linear f) /\ ((linear g) /\ ((matrix f) = (matrix g)))) /\ (f = g))
T c==> ! ! c==> c/\ clinear b0 c/\ clinear b1 c= cmatrix b0 cmatrix b1 c= b0 b1 c==> c/\ clinear f0 c/\ clinear f1 c= cmatrix f0 cmatrix f1 c/\ c/\ clinear f0 c/\ clinear f1 c= cmatrix f0 cmatrix f1 c= f0 f1
- |- (((!n. ((_0 = (BIT1 n)) = F)) ==> ((\n. ((_0 = (BIT1 n)) = F)) n)) = ((\n. ((_0 = (BIT1 n)) = F)) n))
T c= c==> ! c= c= c_0 cBIT1 b0 cF * / c= c= c_0 cBIT1 b0 cF f0 * / c= c= c_0 cBIT1 b0 cF f0
- |- (((!n. (((BIT1 m) = (BIT1 n)) = (m = n))) ==> ((\n. (((BIT1 m) = (BIT1 n)) = (m = n))) n)) = ((\n. (((BIT1 m) = (BIT1 n)) = (m = n))) n))
T c= c==> ! c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 * / c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 f1 * / c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 f1
- (x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) |- ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) /\ (((real_mul (((matrix f) $ x) $ i)) (((matrix f) $ x) $ j)) = ((real_mul (((matrix f) $ x) $ i)) (((matrix f) $ x) $ j))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f1 f0 f2 c$ c$ cmatrix f1 f0 f3 creal_mul c$ c$ cmatrix f1 f0 f2 c$ c$ cmatrix f1 f0 f3
- |- ((\m. (((BIT0 m) EXP _0) = (BIT1 _0))) m)
T * / c= cEXP cBIT0 b0 c_0 cBIT1 c_0 f0
- |- ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n)
T * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1
+ |- (((?z. (((real_mul ((real_sub ((real_add ((real_pow (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (?z. ((((real_mul ((real_sub (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))) \/ (((real_mul ((real_sub (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) = (?z. ((((real_mul ((real_sub ((real_add ((real_pow (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))) \/ ((((real_mul ((real_sub (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))) \/ (((real_mul ((real_sub (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c\/ c? / c= creal_mul creal_sub creal_add creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c? / c\/ c= creal_mul creal_sub c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c? / c\/ c= creal_mul creal_sub creal_add creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c= creal_mul creal_sub c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0
- ((NUMERAL (BIT0 (BIT1 _0))) = i) |- (i = (NUMERAL (BIT0 (BIT1 _0))))
T c==> c= cNUMERAL cBIT0 cBIT1 c_0 f0 c= f0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((\e'. (((i = i') = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) e')
T * / c==> c= c= f0 f1 f2 c==> c==> f2 c= creal_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> c~ f2 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f2 f3 b0 f4
+ |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- |- ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> ((((((matrix f) $ i) $ (NUMERAL (BIT1 _0))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ (NUMERAL (BIT1 _0)))) /\ ((((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((matrix f) $ i) $ (NUMERAL (BIT1 _0))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ (NUMERAL (BIT1 _0)))) /\ ((((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= c/\ c= c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f0 cNUMERAL cBIT1 c_0 c= c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f0 cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f0 cNUMERAL cBIT1 c_0 c= c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f0 cNUMERAL cBIT0 cBIT1 c_0 c==> f1 b0 f4
- (~ F) |- ((F = F) = T)
T c==> c~ cF c= c= cF cF cT
- |- ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) = (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) ==> ((\m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) m)) = ((\m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) m))
T c= c==> ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 * / ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 f0 * / ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 f0
- |- ((\n. ((_0 < (BIT0 n)) = (_0 < n))) n)
T * / c= c< c_0 cBIT0 b0 c< c_0 b0 f0
+ |- ((\A. ((transp A) = (lambdai. (lambdaj. ((A $ j) $ i))))) A)
T * / c= ctransp b0 clambda / clambda / c$ c$ b0 b2 b1 f0
+ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) |- ((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))))
T c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- ((~ (i = (NUMERAL (BIT1 _0)))) ==> ((real_of_num (NUMERAL _0)) = (real_of_num (NUMERAL _0))))
T c==> c~ c= f0 cNUMERAL cBIT1 c_0 c= creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((~ (x = y)) = (?z. (((real_mul ((real_sub x) y)) z) = (real_of_num (NUMERAL (BIT1 _0))))))
T c= c~ c= f0 f1 c? / c= creal_mul creal_sub f0 f1 b0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) ==> ((\n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) n)) = ((\n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) n))
T c= c==> ! c= cEXP cBIT1 f0 cBIT1 b0 c* cBIT1 f0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 * / c= cEXP cBIT1 f0 cBIT1 b0 c* cBIT1 f0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1 * / c= cEXP cBIT1 f0 cBIT1 b0 c* cBIT1 f0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1
- |- ((_0 EXP _0) = (BIT1 _0))
T c= cEXP c_0 c_0 cBIT1 c_0
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q')))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c/\ c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f2
+ |- (((((linear f) /\ ((((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))) /\ ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))))) /\ (((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))) /\ ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))) = T)
T c= c==> c/\ c/\ clinear f0 c/\ c/\ c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0 cT
- |- ((\m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) m)
T * / ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0
- |- (((!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))) ==> ((\n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))) n)) = ((\n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))) n))
T c= c==> ! c= c- cBIT1 f0 cBIT1 b0 cBIT0 c- f0 b0 * / c= c- cBIT1 f0 cBIT1 b0 cBIT0 c- f0 b0 f1 * / c= c- cBIT1 f0 cBIT1 b0 cBIT0 c- f0 b0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) |- ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) /\ (((real_mul (((matrix f) $ i) $ x)) ((lambdaj. (((matrix f) $ j) $ x)) $ j)) = ((real_mul (((matrix f) $ i) $ x)) ((lambdaj. (((matrix f) $ j) $ x)) $ j))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f1 f2 f0 c$ clambda / c$ c$ cmatrix f1 b0 f0 f3 creal_mul c$ c$ cmatrix f1 f2 f0 c$ clambda / c$ c$ cmatrix f1 b0 f0 f3
- |- (((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) ==> ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m)) = ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m))
T c= c==> ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0 * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0
- |- ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n)
T * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0
- |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (((matrix f) $ x) $ i)) (((matrix f) $ x) $ j)) = ((real_mul (((matrix f) $ x) $ i)) (((matrix f) $ x) $ j)))) = T)
T c= c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f1 f0 f2 c$ c$ cmatrix f1 f0 f3 creal_mul c$ c$ cmatrix f1 f0 f2 c$ c$ cmatrix f1 f0 f3 cT
- |- ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m)
T * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0
- |- (((!n. (~ (_0 >= (BIT1 n)))) ==> ((\n. (~ (_0 >= (BIT1 n)))) n)) = ((\n. (~ (_0 >= (BIT1 n)))) n))
T c= c==> ! c~ c>= c_0 cBIT1 b0 * / c~ c>= c_0 cBIT1 b0 f0 * / c~ c>= c_0 cBIT1 b0 f0
- (~ (i = (NUMERAL (BIT0 (BIT1 _0))))) |- (((NUMERAL (BIT0 (BIT1 _0))) = i) = F)
T c==> c~ c= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= cNUMERAL cBIT0 cBIT1 c_0 f0 cF
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) = ((\i. (lambdaj. (((matrix f) $ j) $ i))) i))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ clambda / clambda / c$ c$ cmatrix f1 b1 b0 f0 * / clambda / c$ c$ cmatrix f1 b1 b0 f0
- |- (((!p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> b0 b1 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> b0 b1 f3 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> b0 b1 f3
- |- ((!x. (!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z))))) /\ (!w. (!x. (!y. (!z. ((((real_add ((real_mul w) y)) ((real_mul x) z)) = ((real_add ((real_mul w) z)) ((real_mul x) y))) = ((w = x) \/ (y = z))))))))
T c/\ ! ! ! c= c= creal_add b0 b1 creal_add b0 b2 c= b1 b2 ! ! ! ! c= c= creal_add creal_mul b0 b2 creal_mul b1 b3 creal_add creal_mul b0 b3 creal_mul b1 b2 c\/ c= b0 b1 c= b2 b3
- |- ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m)
T * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> (((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))) = (p' ==> q'))))
T c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> f1 c= c/\ c= creal_add creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> f1 f3
- |- (((_0 <= _0) = T) /\ ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))))))
T c/\ c= c<= c_0 c_0 cT c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))
T c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. ((ODD (BIT0 n)) = F)) n)
T * / c= cODD cBIT0 b0 cF f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((\i. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) i))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b2 b1 f0 * / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b2 b1 f0
+ |- (((!z. ((((real_add x) y) = ((real_add x) z)) = (y = z))) ==> ((\z. ((((real_add x) y) = ((real_add x) z)) = (y = z))) z)) = ((\z. ((((real_add x) y) = ((real_add x) z)) = (y = z))) z))
T c= c==> ! c= c= creal_add f0 f1 creal_add f0 b0 c= f1 b0 * / c= c= creal_add f0 f1 creal_add f0 b0 c= f1 b0 f2 * / c= c= creal_add f0 f1 creal_add f0 b0 c= f1 b0 f2
- |- ((_0 - (BIT1 n)) = _0)
T c= c- c_0 cBIT1 f0 c_0
- (i = (NUMERAL (BIT0 (BIT1 _0)))) |- ((i = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n)))))
T c= c* cBIT0 f0 cBIT1 f1 c+ cBIT0 f0 cBIT0 cBIT0 c* f0 f1
- |- ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))))))
T c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
- |- ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) = (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= creal_add creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f2 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m)
T * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0
- |- (((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) ==> ((\m. (((BIT0 m) EXP _0) = (BIT1 _0))) m)) = ((\m. (((BIT0 m) EXP _0) = (BIT1 _0))) m))
T c= c==> ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 * / c= cEXP cBIT0 b0 c_0 cBIT1 c_0 f0 * / c= cEXP cBIT0 b0 c_0 cBIT1 c_0 f0
- |- ((!n. ((ODD (BIT0 n)) = F)) /\ (!n. ((ODD (BIT1 n)) = T)))
T c/\ ! c= cODD cBIT0 b0 cF ! c= cODD cBIT1 b0 cT
- |- (((!n. ((EVEN (NUMERAL n)) = (EVEN n))) ==> ((\n. ((EVEN (NUMERAL n)) = (EVEN n))) n)) = ((\n. ((EVEN (NUMERAL n)) = (EVEN n))) n))
T c= c==> ! c= cEVEN cNUMERAL b0 cEVEN b0 * / c= cEVEN cNUMERAL b0 cEVEN b0 f0 * / c= cEVEN cNUMERAL b0 cEVEN b0 f0
- (!f. (!g. (((linear f) /\ ((linear g) /\ ((matrix f) = (matrix g)))) ==> (f = g)))) |- ((\f. (!g. (((linear f) /\ ((linear g) /\ ((matrix f) = (matrix g)))) ==> (f = g)))) f)
T c==> ! ! c==> c/\ clinear b0 c/\ clinear b1 c= cmatrix b0 cmatrix b1 c= b0 b1 * / ! c==> c/\ clinear b0 c/\ clinear b1 c= cmatrix b0 cmatrix b1 c= b0 b1 f0
- |- ((\n. ((ODD (BIT1 n)) = T)) n)
T * / c= cODD cBIT1 b0 cT f0
+ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) |- ((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))))
T c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- (!f. ((((linear f) /\ ((((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))) /\ ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))))) /\ (((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))) /\ ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))))
T c==> c/\ c/\ clinear f0 c/\ c/\ c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
+ |- (((!p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b2 b4 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b4 b3 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b2 b4 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b4 b3 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> b0 b1 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b2 b4 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b4 b3 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b2 b4 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b4 b3 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> b0 b1 f2 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b2 b4 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b4 b3 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b2 b4 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b4 b3 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> b0 b1 f2
- |- (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (((matrix f) $ x) $ i)) (((matrix f) $ x) $ j)))))
T c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 b0 f1 c$ c$ cmatrix f0 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 b0 f1 c$ c$ cmatrix f0 b0 f2
- |- (((!g'. (!t'. (!e'. (((i = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((i = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((i = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= f0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL c_0 b2 c= cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND b0 b1 b2 * / ! ! c==> c= c= f0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL c_0 b2 c= cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND b0 b1 b2 f1 * / ! ! c==> c= c= f0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL c_0 b2 c= cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND b0 b1 b2 f1
- |- ((\n. ((_0 = (BIT0 n)) = (_0 = n))) n)
T * / c= c= c_0 cBIT0 b0 c= c_0 b0 f0
- (!f. (!g. (((linear f) /\ ((linear g) /\ ((matrix f) = (matrix g)))) ==> (f = g)))), ((linear f) /\ ((linear g) /\ ((matrix f) = (matrix g)))) |- ((!f. (!g. (((linear f) /\ ((linear g) /\ ((matrix f) = (matrix g)))) ==> (f = g)))) /\ (f = g))
T c==> ! ! c==> c/\ clinear b0 c/\ clinear b1 c= cmatrix b0 cmatrix b1 c= b0 b1 c==> c/\ clinear f0 c/\ clinear f1 c= cmatrix f0 cmatrix f1 c/\ ! ! c==> c/\ clinear b0 c/\ clinear b1 c= cmatrix b0 cmatrix b1 c= b0 b1 c= f0 f1
- (i' = i) |- (i = i')
T c==> c= f0 f1 c= f1 f0
- |- ((_0 = _0) = T)
T c= c= c_0 c_0 cT
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> (((lambdaj. ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ j))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ j)))) $ i') = ((\j. ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ j))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ j)))) i'))) = (((lambdaj. ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ j))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ j)))) $ i') = ((\j. ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ j))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ j)))) i')))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 b0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f0 * / creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 b0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f0 c= c$ clambda / creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 b0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f0 * / creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 b0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f0
+ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))) |- ((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\g. ((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)) = (g k)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f0 b3 b2 f1 b1 c$ c$ cmatrix f0 b1 f2 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f0 b3 b2 f1 b1 c$ c$ cmatrix f0 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)) = ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b2 b1 f0 b0 c$ c$ cmatrix f1 b0 f2 creal_mul c$ c$ cmatrix f1 b0 f0 c$ c$ cmatrix f1 b0 f2
+ (linear f), ((((real_add ((real_pow (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))))) |- (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))
T c==> clinear f0 c==> c/\ c= creal_add creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
+ |- ((!t. ((P t) ==> (Q t))) ==> ((?t. (P t)) ==> (?t. (Q t))))
T c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q'))))
T c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ cmatrix f1 f0 c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cmatrix f1 f0 c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ cmatrix f1 f0 c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cmatrix f1 f0 c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f3
+ |- (((!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = (p' ==> q'))))) ==> ((\q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = (p' ==> q'))))) q')) = ((\q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b1 b3 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b3 b2 f3 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f3 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b1 b3 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b3 b2 f3 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f3 f0 c==> f1 b0 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b1 b3 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b3 b2 f3 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f3 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b1 b3 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b3 b2 f3 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f3 f0 c==> f1 b0 f4 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b1 b3 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b3 b2 f3 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f3 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b1 b3 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b3 b2 f3 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f3 f0 c==> f1 b0 f4
+ |- ((\q'. (((((linear f) /\ (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) = (mat (NUMERAL (BIT1 _0)))) /\ ((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) = (mat (NUMERAL (BIT1 _0)))))) /\ ((det (matrix f)) = (real_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t))))) = q')) ==> (((((linear f) /\ (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) = (mat (NUMERAL (BIT1 _0)))) /\ ((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) = (mat (NUMERAL (BIT1 _0)))))) /\ ((det (matrix f)) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c/\ clinear f0 c/\ c= clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f0 b4 b4 b1 b3 c$ c$ cmatrix f0 b3 b2 cmat cNUMERAL cBIT1 c_0 c= clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 b1 b3 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b4 b4 b3 b2 cmat cNUMERAL cBIT1 c_0 c= cdet cmatrix f0 creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_lt b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b1 b0 c= c==> c/\ c/\ clinear f0 c/\ c= clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f0 b4 b4 b1 b3 c$ c$ cmatrix f0 b3 b2 cmat cNUMERAL cBIT1 c_0 c= clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 b1 b3 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b4 b4 b3 b2 cmat cNUMERAL cBIT1 c_0 c= cdet cmatrix f0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_lt b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b1 c==> f1 b0 f2
+ |- ((\e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) e')
T * / c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 f1 b0 f2
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))))) = (((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) /\ ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 b0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 b0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND c= b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 b0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 b0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= b0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV
+ |- (((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))
T c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) |- ((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b2 b4 c$ c$ cmatrix f1 b4 b3 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b2 b4 c$ c$ cmatrix f1 b4 b3 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> b0 b1 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b2 b4 c$ c$ cmatrix f1 b4 b3 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b2 b4 c$ c$ cmatrix f1 b4 b3 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> b0 b1 f2 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b2 b4 c$ c$ cmatrix f1 b4 b3 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b2 b4 c$ c$ cmatrix f1 b4 b3 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> b0 b1 f2
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((lambdaj. ((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) ((lambdaj. (((matrix f) $ j) $ (NUMERAL (BIT1 _0)))) $ j))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) ((lambdaj. (((matrix f) $ j) $ (NUMERAL (BIT0 (BIT1 _0))))) $ j)))) $ i') = ((\j. ((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) ((lambdaj. (((matrix f) $ j) $ (NUMERAL (BIT1 _0)))) $ j))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) ((lambdaj. (((matrix f) $ j) $ (NUMERAL (BIT0 (BIT1 _0))))) $ j)))) i'))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ clambda / creal_add creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT1 c_0 c$ clambda / c$ c$ cmatrix f1 b1 cNUMERAL cBIT1 c_0 b0 creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ clambda / c$ c$ cmatrix f1 b1 cNUMERAL cBIT0 cBIT1 c_0 b0 f0 * / creal_add creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT1 c_0 c$ clambda / c$ c$ cmatrix f1 b1 cNUMERAL cBIT1 c_0 b0 creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ clambda / c$ c$ cmatrix f1 b1 cNUMERAL cBIT0 cBIT1 c_0 b0 f0
+ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))) |- ((((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_of_num (NUMERAL (BIT1 _0))) = ((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) ==> ((((real_add ((real_pow (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))))))) = (((real_of_num (NUMERAL (BIT1 _0))) = ((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) ==> ((((real_add ((real_pow (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))))))
T c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c==> c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c==> c= creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ (linear f), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t)), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)), ((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))
T c==> clinear f0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin f1 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos f1 c==> creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d f1
+ |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))) = (p' ==> q'))))
T c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ c$ cmatrix f2 f3 f0 c$ c$ cvector cCONS cvector cCONS ccos f4 cCONS creal_neg csin f4 cNIL cCONS cvector cCONS csin f4 cCONS ccos f4 cNIL cNIL f3 f0 f5 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ cmatrix f2 f3 f0 c$ c$ cvector cCONS cvector cCONS ccos f4 cCONS creal_neg csin f4 cNIL cCONS cvector cCONS csin f4 cCONS ccos f4 cNIL cNIL f3 f0 c==> f1 f5
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i)) = (((((matrix f) $ i) $ (NUMERAL (BIT1 _0))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ (NUMERAL (BIT1 _0)))) /\ ((((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ cmatrix f1 f0 c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 c/\ c= c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 cNUMERAL cBIT1 c_0 c= c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\g'. (!t'. (!e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL c_0 b2 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND b0 b1 b2 f0
+ |- (((!p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b2 b4 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b4 b3 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b2 b4 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b4 b3 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 c==> b0 b1 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b2 b4 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b4 b3 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b2 b4 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b4 b3 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 c==> b0 b1 f3 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b2 b4 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b4 b3 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b2 b4 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b4 b3 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 c==> b0 b1 f3
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = ((((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b2 b1 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c/\ c= creal_add creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b3 b3 b2 b1 f0 f1 c$ c$ cmat cNUMERAL cBIT1 c_0 f0 f1 c= creal_add creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f2 f1 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f2 f1 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!g. ((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)) = (g k)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)) = (g k)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)) = (g k)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f0 f1 b1 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b3 b2 b1 f2 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b1 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b3 b2 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f0 f1 b1 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b3 b2 b1 f2 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b1 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b3 b2 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f0 f1 b1 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b3 b2 b1 f2 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b1 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b3 b2 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3
+ |- ((!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))) = ((((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f0 f1 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 b0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 b0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f1 b0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 f1 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 f1 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> (((lambdaj. (((matrix f) $ j) $ (NUMERAL (BIT1 _0)))) $ i') = ((\j. (((matrix f) $ j) $ (NUMERAL (BIT1 _0)))) i'))) = (((lambdaj. (((matrix f) $ j) $ (NUMERAL (BIT1 _0)))) $ i') = ((\j. (((matrix f) $ j) $ (NUMERAL (BIT1 _0)))) i')))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / c$ c$ cmatrix f1 b0 cNUMERAL cBIT1 c_0 f0 * / c$ c$ cmatrix f1 b0 cNUMERAL cBIT1 c_0 f0 c= c$ clambda / c$ c$ cmatrix f1 b0 cNUMERAL cBIT1 c_0 f0 * / c$ c$ cmatrix f1 b0 cNUMERAL cBIT1 c_0 f0
+ |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
+ |- ((((~ F) ==> ((real_of_num (NUMERAL _0)) = (real_of_num (NUMERAL _0)))) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))
T c= c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (linear f), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) |- (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))
T c==> clinear f0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
+ (linear f), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) |- ((?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t)))))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t))))))
T c==> clinear f0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos b0 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin b0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
+ |- (((!k. (((a <= k) /\ (k <= b)) ==> ((f k) = (g k)))) ==> (((sum (a .. b)) (\k. (f k))) = ((sum (a .. b)) g))) = T)
T c= c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 / * f2 b0 csum * * part c.. f0 f1 f3 cT
+ |- (((!y. ((((real_add ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow y) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ ((x = (cos t)) /\ (y = (sin t)))))))) ==> ((\y. ((((real_add ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow y) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ ((x = (cos t)) /\ (y = (sin t)))))))) y)) = ((\y. ((((real_add ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow y) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ ((x = (cos t)) /\ (y = (sin t)))))))) y))
T c= c==> ! c==> c= creal_add creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_lt b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= f0 ccos b1 c= b0 csin b1 * / c==> c= creal_add creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_lt b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= f0 ccos b1 c= b0 csin b1 f1 * / c==> c= creal_add creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_lt b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= f0 ccos b1 c= b0 csin b1 f1
+ |- (((real_mul (real_of_num m)) (real_neg (real_of_num n))) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_of_num f0 creal_neg creal_of_num f1 creal_neg creal_of_num c* f0 f1
+ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t)), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) |- ((matrix f) = (vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))))
T c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin f1 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos f1 c= cmatrix f0 cvector cCONS cvector cCONS ccos f1 cCONS creal_neg csin f1 cNIL cCONS cvector cCONS csin f1 cCONS ccos f1 cNIL cNIL
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> (((lambdaj. (((COND (i = j)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) $ i') = ((\j. (((COND (i = j)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) i'))) = (((lambdaj. (((COND (i = j)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) $ i') = ((\j. (((COND (i = j)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) i')))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / cCOND c= f1 b0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f0 * / cCOND c= f1 b0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f0 c= c$ clambda / cCOND c= f1 b0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f0 * / cCOND c= f1 b0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f0
+ |- (((real_of_num m) = (real_of_num n)) = (m = n))
T c= c= creal_of_num f0 creal_of_num f1 c= f0 f1
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = (p' ==> q'))))
T c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b3 b3 b0 b2 c$ c$ cmatrix f2 b2 b1 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b3 b3 b0 b2 c$ c$ cmatrix f2 b2 b1 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> f1 f3
+ (linear f), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) |- (((!t. ((((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t))))) ==> (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))) ==> ((?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t)))))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t))))))) = ((?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t)))))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))))
T c==> clinear f0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= c==> ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos b0 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin b0 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0 c==> c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos b0 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin b0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0 c==> c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos b0 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin b0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
+ |- ((\A. (!B. (((matrix_mul A) B) = (lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ j))))))))) A)
T * / ! c= cmatrix_mul b0 b1 clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ b0 b2 b4 c$ c$ b1 b4 b3 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b3 b3 b2 b1 f0 f1 c$ c$ cmat cNUMERAL cBIT1 c_0 f0 f1 c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f2 f1 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f2 f1 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q'))))
T c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b0 b2 c$ c$ cmatrix f1 b2 b1 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b0 b2 c$ c$ cmatrix f1 b2 b1 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f2 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b0 b2 c$ c$ cmatrix f1 b2 b1 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b0 b2 c$ c$ cmatrix f1 b2 b1 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f2
+ |- (((!P. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (P i))) = ((P (NUMERAL (BIT1 _0))) /\ (P (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((\P. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (P i))) = ((P (NUMERAL (BIT1 _0))) /\ (P (NUMERAL (BIT0 (BIT1 _0))))))) P)) = ((\P. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (P i))) = ((P (NUMERAL (BIT1 _0))) /\ (P (NUMERAL (BIT0 (BIT1 _0))))))) P))
T c= c==> ! c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cNUMERAL cBIT0 cBIT1 c_0 * b0 b1 c/\ * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 * / c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cNUMERAL cBIT0 cBIT1 c_0 * b0 b1 c/\ * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 f0 * / c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cNUMERAL cBIT0 cBIT1 c_0 * b0 b1 c/\ * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 f0
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) |- (T = (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= cT c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i)) = (((((matrix f) $ i) $ (NUMERAL (BIT1 _0))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ (NUMERAL (BIT1 _0)))) /\ ((((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ cmatrix f1 f0 c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 c/\ c= c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 cNUMERAL cBIT1 c_0 c= c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 cNUMERAL cBIT0 cBIT1 c_0
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((lambdaj. ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ j))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ j)))) $ i') = ((\j. ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ j))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ j)))) i'))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ clambda / creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 b0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f0 * / creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 b0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f2 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f0
+ |- ((\m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) m)
T * / ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 f0
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- (((!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = (p' ==> q'))))) ==> ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = (p' ==> q'))))) q')) = ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b1 b3 c$ c$ cmatrix f2 b3 b2 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b1 b3 c$ c$ cmatrix f2 b3 b2 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> f1 b0 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b1 b3 c$ c$ cmatrix f2 b3 b2 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b1 b3 c$ c$ cmatrix f2 b3 b2 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> f1 b0 f3 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b1 b3 c$ c$ cmatrix f2 b3 b2 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b1 b3 c$ c$ cmatrix f2 b3 b2 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> f1 b0 f3
+ |- (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))), (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) |- ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) /\ (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cNUMERAL cBIT0 cBIT1 c_0 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b3 b3 b0 b2 c$ c$ cmatrix f2 b2 b1 f0 f1 c$ c$ cmat cNUMERAL cBIT1 c_0 f0 f1 c= creal_add creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f1 creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f1 cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\x. (!y. ((((real_add ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow y) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ ((x = (cos t)) /\ (y = (sin t))))))))) x)
T * / ! c==> c= creal_add creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_lt b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= b0 ccos b2 c= b1 csin b2 f0
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) |- ((i' <= (NUMERAL (BIT0 (BIT1 _0)))) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c<= f0 cNUMERAL cBIT0 cBIT1 c_0 cT
+ |- (((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t)), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) |- (T = ((matrix f) = (vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL)))))
T c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin f1 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos f1 c= cT c= cmatrix f0 cvector cCONS cvector cCONS ccos f1 cCONS creal_neg csin f1 cNIL cCONS cvector cCONS csin f1 cCONS ccos f1 cNIL cNIL
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) |- ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) /\ (((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')) = ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0
+ |- (!g. ((!k. (((a <= k) /\ (k <= b)) ==> ((f k) = (g k)))) ==> (((sum (a .. b)) (\k. (f k))) = ((sum (a .. b)) g))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 / * f2 b0 csum * * part c.. f0 f1 f3
+ |- (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) e')))
T c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- ((((real_of_num (NUMERAL (BIT1 _0))) = ((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) /\ (?z. ((((real_mul ((real_sub ((real_add ((real_pow (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))) \/ ((((real_mul ((real_sub (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))) \/ (((real_mul ((real_sub (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))) = (?z. (((real_of_num (NUMERAL (BIT1 _0))) = ((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) /\ ((((real_mul ((real_sub ((real_add ((real_pow (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))) \/ ((((real_mul ((real_sub (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))) \/ (((real_mul ((real_sub (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c? / c\/ c= creal_mul creal_sub creal_add creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c= creal_mul creal_sub c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c\/ c= creal_mul creal_sub creal_add creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c= creal_mul creal_sub c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q'))))
T c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b0 b2 c$ c$ cmatrix f1 b2 b1 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b0 b2 c$ c$ cmatrix f1 b2 b1 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b0 b2 c$ c$ cmatrix f1 b2 b1 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b0 b2 c$ c$ cmatrix f1 b2 b1 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f3
+ |- (((!m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) ==> ((\m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) m)) = ((\m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) m))
T c= c==> ! ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 * / ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 f0 * / ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 f0
+ |- ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b1 b3 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b3 b2 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b1 b3 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b3 b2 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> f1 b0 f3
+ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) |- ((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((F ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) t') e'))))
T c==> c==> cF c= creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f1 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF f0 f1
+ |- (!f. ((((linear f) /\ (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) = (mat (NUMERAL (BIT1 _0)))) /\ ((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) = (mat (NUMERAL (BIT1 _0)))))) /\ ((det (matrix f)) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))))
T c==> c/\ c/\ clinear f0 c/\ c= clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f0 b3 b3 b0 b2 c$ c$ cmatrix f0 b2 b1 cmat cNUMERAL cBIT1 c_0 c= clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b3 b3 b2 b1 cmat cNUMERAL cBIT1 c_0 c= cdet cmatrix f0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
+ |- ((F ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) t') e'))))
T c==> c==> cF c= creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f1 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF f0 f1
+ |- ((!f. ((((linear f) /\ (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) = (mat (NUMERAL (BIT1 _0)))) /\ ((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) = (mat (NUMERAL (BIT1 _0)))))) /\ ((det (matrix f)) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t))))))) = (!f. ((((linear f) /\ (orthogonal_matrix (matrix f))) /\ ((det (matrix f)) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t))))))))
T c= ! c==> c/\ c/\ clinear b0 c/\ c= clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix b0 b4 b4 b1 b3 c$ c$ cmatrix b0 b3 b2 cmat cNUMERAL cBIT1 c_0 c= clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix b0 b1 b3 c$ c$ clambda / clambda / c$ c$ cmatrix b0 b4 b4 b3 b2 cmat cNUMERAL cBIT1 c_0 c= cdet cmatrix b0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_lt b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= b0 * part crotate2d b1 ! c==> c/\ c/\ clinear b0 corthogonal_matrix cmatrix b0 c= cdet cmatrix b0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_lt b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= b0 * part crotate2d b1
+ |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
+ |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0
+ |- ((\t. ((matrix (rotate2d t)) = (vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))))) t)
T * / c= cmatrix * part crotate2d b0 cvector cCONS cvector cCONS ccos b0 cCONS creal_neg csin b0 cNIL cCONS cvector cCONS csin b0 cCONS ccos b0 cNIL cNIL f0
+ |- (((!t. (linear (rotate2d t))) ==> ((\t. (linear (rotate2d t))) t)) = ((\t. (linear (rotate2d t))) t))
T c= c==> ! clinear * part crotate2d b0 * / clinear * part crotate2d b0 f0 * / clinear * part crotate2d b0 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)) = ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j)))) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b1 b0 f0 f1 c$ c$ cmatrix f2 f1 f3 creal_mul c$ c$ cmatrix f2 f1 f0 c$ c$ cmatrix f2 f1 f3 cT
+ |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\n. (((BIT1 m) = (BIT0 n)) = F)) n)
T * / c= c= cBIT1 f0 cBIT0 b0 cF f1
+ |- ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b1 b3 c$ c$ cmatrix f2 b3 b2 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b1 b3 c$ c$ cmatrix f2 b3 b2 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> f1 b0 f3
+ |- ((\g. ((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)) = (g k)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f0 f1 b1 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b3 b2 b1 f2 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b1 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b3 b2 b1 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3
+ (linear f), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) |- (((((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t))))) ==> (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t))))) = T)
T c==> clinear f0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos f1 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin f1 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d f1 cT
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q')))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b0 b2 c$ c$ cmatrix f1 b2 b1 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b0 b2 c$ c$ cmatrix f1 b2 b1 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f2
+ |- (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 cF
+ |- ((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)) = (g k)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f0 f1 b0 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b2 b1 b0 f2 * f3 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b0 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b2 b1 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f3
+ |- (((!t. (((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT0 (BIT1 _0))))) t) = ((real_add (t (NUMERAL (BIT1 _0)))) (t (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((\t. (((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT0 (BIT1 _0))))) t) = ((real_add (t (NUMERAL (BIT1 _0)))) (t (NUMERAL (BIT0 (BIT1 _0))))))) t)) = ((\t. (((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT0 (BIT1 _0))))) t) = ((real_add (t (NUMERAL (BIT1 _0)))) (t (NUMERAL (BIT0 (BIT1 _0))))))) t))
T c= c==> ! c= csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 b0 creal_add * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 * / c= csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 b0 creal_add * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 f0 * / c= csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 b0 creal_add * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- (((NUMERAL m) = (NUMERAL n)) = (m = n))
T c= c= cNUMERAL f0 cNUMERAL f1 c= f0 f1
+ |- ((\z. ((((real_add x) y) = ((real_add x) z)) = (y = z))) z)
T * / c= c= creal_add f0 f1 creal_add f0 b0 c= f1 b0 f2
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = ((((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b2 b1 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c/\ c= creal_add creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\k. ((mat k) = (lambdai. (lambdaj. (((COND (i = j)) (real_of_num k)) (real_of_num (NUMERAL _0))))))) k)
T * / c= cmat b0 clambda / clambda / cCOND c= b1 b2 creal_of_num b0 creal_of_num cNUMERAL c_0 f0
+ |- (((!n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) ==> ((\n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) n)) = ((\n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) n))
T c= c==> ! c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 * / c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 f1 * / c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 f1
+ |- ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))
T c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 f2 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 f1 f2
+ |- ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b2 b4 c$ c$ cmatrix f1 b4 b3 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b2 b4 c$ c$ cmatrix f1 b4 b3 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 c==> b0 b1 f3
+ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) /\ (((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)) = ((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f1 f2 f0 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b1 b0 f0 f3 creal_mul c$ c$ cmatrix f1 f2 f0 c$ clambda / c$ c$ cmatrix f1 b0 f0 f3
+ |- ((linear (rotate2d t)) = T)
T c= clinear * part crotate2d f0 cT
+ |- (((!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i))) = (p' ==> q'))))) ==> ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i))) = (p' ==> q'))))) q')) = ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ cmatrix f2 f0 c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cmatrix f2 f0 c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f0 c==> f1 b0 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ cmatrix f2 f0 c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cmatrix f2 f0 c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f0 c==> f1 b0 f4 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ cmatrix f2 f0 c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cmatrix f2 f0 c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f0 c==> f1 b0 f4
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b0 b2 c$ c$ cmatrix f1 b2 b1 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i))) = (p' ==> q'))))
T c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ cmatrix f2 f0 c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f0 f4 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cmatrix f2 f0 c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f0 c==> f1 f4
+ |- ((((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_neg (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0))))))))) ==> (((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) |- ((real_of_num (NUMERAL (BIT1 _0))) = ((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))))
T c==> c= creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((matrix f) $ i) $ (NUMERAL (BIT1 _0))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ (NUMERAL (BIT1 _0)))) /\ ((((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cmatrix f1 f0 c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 cNUMERAL cBIT1 c_0 c= c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\f. (!g. (((linear f) /\ ((linear g) /\ ((matrix f) = (matrix g)))) ==> (f = g)))) f)
T * / ! c==> c/\ clinear b0 c/\ clinear b1 c= cmatrix b0 cmatrix b1 c= b0 b1 f0
+ |- (((!A. ((transp A) = (lambdai. (lambdaj. ((A $ j) $ i))))) ==> ((\A. ((transp A) = (lambdai. (lambdaj. ((A $ j) $ i))))) A)) = ((\A. ((transp A) = (lambdai. (lambdaj. ((A $ j) $ i))))) A))
T c= c==> ! c= ctransp b0 clambda / clambda / c$ c$ b0 b2 b1 * / c= ctransp b0 clambda / clambda / c$ c$ b0 b2 b1 f0 * / c= ctransp b0 clambda / clambda / c$ c$ b0 b2 b1 f0
+ |- ((\x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i))))))) x)
T * / ! c= c= b0 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c= c$ b0 b2 c$ b1 b2 f0
+ |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q')))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b2 b1 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b2 b1 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f3
+ |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = (p' ==> q'))))
T c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b3 b3 b2 b1 f3 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f3 f0 f4 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b3 b3 b2 b1 f3 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f3 f0 c==> f1 f4
+ |- ((((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')) = ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')))) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))))) = (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')))))
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0
+ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- (((lambdaj. (((matrix f) $ j) $ i)) $ k) = ((\j. (((matrix f) $ j) $ i)) k))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / c$ c$ cmatrix f1 b0 f2 f0 * / c$ c$ cmatrix f1 b0 f2 f0
+ |- (((!k. ((mat k) = (lambdai. (lambdaj. (((COND (i = j)) (real_of_num k)) (real_of_num (NUMERAL _0))))))) ==> ((\k. ((mat k) = (lambdai. (lambdaj. (((COND (i = j)) (real_of_num k)) (real_of_num (NUMERAL _0))))))) k)) = ((\k. ((mat k) = (lambdai. (lambdaj. (((COND (i = j)) (real_of_num k)) (real_of_num (NUMERAL _0))))))) k))
T c= c==> ! c= cmat b0 clambda / clambda / cCOND c= b1 b2 creal_of_num b0 creal_of_num cNUMERAL c_0 * / c= cmat b0 clambda / clambda / cCOND c= b1 b2 creal_of_num b0 creal_of_num cNUMERAL c_0 f0 * / c= cmat b0 clambda / clambda / cCOND c= b1 b2 creal_of_num b0 creal_of_num cNUMERAL c_0 f0
+ |- ((~ F) = T)
T c= c~ cF cT
+ |- ((\y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))) y)
T * / c= c= f0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ f0 b1 c$ b0 b1 f1
+ |- (((!t'. (!e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 b0 b1 * / ! c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 b0 b1 f1 * / ! c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 b0 b1 f1
+ (((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) |- ((((real_of_num (NUMERAL (BIT1 _0))) = ((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) ==> ((((real_add ((real_pow (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))))) = ((((real_add ((real_pow (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))))))
T c==> c= creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c==> c= creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- (((?z. (P z)) \/ (?z. (Q z))) = (?z. ((P z) \/ (Q z))))
T c= c\/ c? / * f0 b0 c? / * f1 b0 c? / c\/ * f0 b0 * f1 b0
+ |- ((((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) ==> (((real_mul ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_mul ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q')))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 f4 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f4
+ |- ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) /\ (((real_mul ((real_sub (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))))))))) |- ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= creal_mul creal_sub c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b2 b4 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b4 b3 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b2 b4 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b4 b3 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> b0 b1 f2
+ |- ((!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))) = ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 f1 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 b0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 b0 cCOND c= f1 b0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 f1 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND c= f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 f1 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q')))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b0 b2 c$ c$ cmatrix f1 b2 b1 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b0 b2 c$ c$ cmatrix f1 b2 b1 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f3
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ i'))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i'))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b3 b3 b0 b2 c$ c$ cmatrix f2 b2 b1 f0 f1 c$ c$ cmat cNUMERAL cBIT1 c_0 f0 f1 c= creal_add creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f2 cNUMERAL cBIT1 c_0 f1 creal_mul c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f2 cNUMERAL cBIT0 cBIT1 c_0 f1 cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\x. (!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z))))) x)
T * / ! ! c= c= creal_add b0 b1 creal_add b0 b2 c= b1 b2 f0
+ |- (((?z. (((real_mul ((real_sub (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (?z. (((real_mul ((real_sub (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) = (?z. ((((real_mul ((real_sub (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))) \/ (((real_mul ((real_sub (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c\/ c? / c= creal_mul creal_sub c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c? / c= creal_mul creal_sub c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c? / c\/ c= creal_mul creal_sub c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b1 b3 c$ c$ cmatrix f2 b3 b2 f3 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f3 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f2 b4 b4 b1 b3 c$ c$ cmatrix f2 b3 b2 f3 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f3 f0 c==> f1 b0 f4
+ |- ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b2 b1 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_add creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))) |- ((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((p ==> F) ==> (((~ q) = p) ==> q))
T c==> c==> f0 cF c==> c= c~ f1 f0 f1
+ F |- (F /\ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> cF c/\ cF c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((matrix f) $ i) $ (NUMERAL (BIT1 _0))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ (NUMERAL (BIT1 _0)))) /\ ((((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ (NUMERAL (BIT0 (BIT1 _0)))))))) = ((((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) /\ ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c$ c$ cmatrix f0 b0 cNUMERAL cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f1 cCONS creal_neg csin f1 cNIL cCONS cvector cCONS csin f1 cCONS ccos f1 cNIL cNIL b0 cNUMERAL cBIT1 c_0 c= c$ c$ cmatrix f0 b0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f1 cCONS creal_neg csin f1 cNIL cCONS cvector cCONS csin f1 cCONS ccos f1 cNIL cNIL b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f1 cCONS creal_neg csin f1 cNIL cCONS cvector cCONS csin f1 cCONS ccos f1 cNIL cNIL cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f1 cCONS creal_neg csin f1 cNIL cCONS cvector cCONS csin f1 cCONS ccos f1 cNIL cNIL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f1 cCONS creal_neg csin f1 cNIL cCONS cvector cCONS csin f1 cCONS ccos f1 cNIL cNIL cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f1 cCONS creal_neg csin f1 cNIL cCONS cvector cCONS csin f1 cCONS ccos f1 cNIL cNIL cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))) |- ((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((lambdai. (lambdaj. (((COND (i = j)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) $ i) = ((\i. (lambdaj. (((COND (i = j)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) i))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ clambda / clambda / cCOND c= b0 b1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f0 * / clambda / cCOND c= b0 b1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f0
+ (linear f), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))), (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t))))), ((real_le (real_of_num (NUMERAL _0))) t) |- (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t))))
T c==> clinear f0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos f1 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin f1 c==> creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d f1
+ |- ((\t'. (!e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 b0 b1 f1
+ |- ((\P. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (P i))) = ((P (NUMERAL (BIT1 _0))) /\ (P (NUMERAL (BIT0 (BIT1 _0))))))) P)
T * / c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cNUMERAL cBIT0 cBIT1 c_0 * b0 b1 c/\ * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 f0
+ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) /\ (((real_mul ((real_sub (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))))))))) |- ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= creal_mul creal_sub c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!t'. (!e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 b0 b1 * / ! c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 b0 b1 f1 * / ! c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 b0 b1 f1
+ |- (((!x. (!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z))))) ==> ((\x. (!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z))))) x)) = ((\x. (!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z))))) x))
T c= c==> ! ! ! c= c= creal_add b0 b1 creal_add b0 b2 c= b1 b2 * / ! ! c= c= creal_add b0 b1 creal_add b0 b2 c= b1 b2 f0 * / ! ! c= c= creal_add b0 b1 creal_add b0 b2 c= b1 b2 f0
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i)) = (((((matrix f) $ i) $ (NUMERAL (BIT1 _0))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ (NUMERAL (BIT1 _0)))) /\ ((((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((matrix f) $ i) $ (NUMERAL (BIT1 _0))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ (NUMERAL (BIT1 _0)))) /\ ((((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))))))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((matrix f) $ i) $ (NUMERAL (BIT1 _0))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ (NUMERAL (BIT1 _0)))) /\ ((((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ (NUMERAL (BIT0 (BIT1 _0)))))))))
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ cmatrix f1 f0 c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 c/\ c= c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 cNUMERAL cBIT1 c_0 c= c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cmatrix f1 f0 c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 cNUMERAL cBIT1 c_0 c= c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cmatrix f1 f0 c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c$ c$ cmatrix f1 f0 cNUMERAL cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 cNUMERAL cBIT1 c_0 c= c$ c$ cmatrix f1 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (!p'. (!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3
+ |- (((!n. (((BIT0 m) = (BIT1 n)) = F)) ==> ((\n. (((BIT0 m) = (BIT1 n)) = F)) n)) = ((\n. (((BIT0 m) = (BIT1 n)) = F)) n))
T c= c==> ! c= c= cBIT0 f0 cBIT1 b0 cF * / c= c= cBIT0 f0 cBIT1 b0 cF f1 * / c= c= cBIT0 f0 cBIT1 b0 cF f1
+ (linear f), (((real_add ((real_pow (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))), (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) |- (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))
T c==> clinear f0 c==> c= creal_add creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
+ |- (((!g'. (!t'. (!e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL c_0 b2 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND b0 b1 b2 * / ! ! c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL c_0 b2 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND b0 b1 b2 f0 * / ! ! c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL c_0 b2 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND b0 b1 b2 f0
+ (~ F) |- ((~ F) /\ ((real_of_num (NUMERAL _0)) = (real_of_num (NUMERAL _0))))
T c==> c~ cF c/\ c~ cF c= creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q')))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3 cT
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. (((COND (i = j)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) $ i) = ((\i. (lambdaj. (((COND (i = j)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) i))) = (((lambdai. (lambdaj. (((COND (i = j)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) $ i) = ((\i. (lambdaj. (((COND (i = j)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / cCOND c= b0 b1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f0 * / clambda / cCOND c= b0 b1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f0 c= c$ clambda / clambda / cCOND c= b0 b1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f0 * / clambda / cCOND c= b0 b1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (((COND (i = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ i)) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ i)) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b0 b2 c$ c$ cmatrix f1 b2 b1 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c/\ c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 f0 c$ c$ cmatrix f1 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')))) = (((((matrix f) $ i) $ (NUMERAL (BIT1 _0))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ (NUMERAL (BIT1 _0)))) /\ ((((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ (NUMERAL (BIT0 (BIT1 _0)))))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ c$ cmatrix f0 f1 b0 c$ c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f1 b0 c/\ c= c$ c$ cmatrix f0 f1 cNUMERAL cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f1 cNUMERAL cBIT1 c_0 c= c$ c$ cmatrix f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f1 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\p'. (!q'. (((((linear f) /\ (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) = (mat (NUMERAL (BIT1 _0)))) /\ ((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) = (mat (NUMERAL (BIT1 _0)))))) /\ ((det (matrix f)) = (real_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t))))) = q')) ==> (((((linear f) /\ (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) = (mat (NUMERAL (BIT1 _0)))) /\ ((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) = (mat (NUMERAL (BIT1 _0)))))) /\ ((det (matrix f)) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c/\ clinear f0 c/\ c= clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f0 b5 b5 b2 b4 c$ c$ cmatrix f0 b4 b3 cmat cNUMERAL cBIT1 c_0 c= clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 b2 b4 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b5 b5 b4 b3 cmat cNUMERAL cBIT1 c_0 c= cdet cmatrix f0 creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_lt b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b2 b1 c= c==> c/\ c/\ clinear f0 c/\ c= clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f0 b5 b5 b2 b4 c$ c$ cmatrix f0 b4 b3 cmat cNUMERAL cBIT1 c_0 c= clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 b2 b4 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b5 b5 b4 b3 cmat cNUMERAL cBIT1 c_0 c= cdet cmatrix f0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_lt b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b2 c==> b0 b1 f1
+ (linear f), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))), (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))), ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0))))), ((((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))) |- (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))
T c==> clinear f0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
+ |- ((\m. (!n. (((BIT0 m) = (BIT1 n)) = F))) m)
T * / ! c= c= cBIT0 b0 cBIT1 b1 cF f0
+ |- ((\y. ((((real_add ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow y) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ ((x = (cos t)) /\ (y = (sin t)))))))) y)
T * / c==> c= creal_add creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_lt b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= f0 ccos b1 c= b0 csin b1 f1
+ |- ((P /\ (?z. (Q z))) = (?z. (P /\ (Q z))))
T c= c/\ f0 c? / * f1 b0 c? / c/\ f0 * f1 b0
+ |- ((T /\ t) = t)
T c= c/\ cT f0 f0
+ (linear f), (((real_add ((real_pow (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))), (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) |- (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))
T c==> clinear f0 c==> c= creal_add creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
+ |- ((!t. ((((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t))))) ==> (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))) ==> ((?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t)))))) ==> (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))))
T c==> ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos b0 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin b0 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0 c==> c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos b0 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin b0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
+ |- ((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)) = ((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) ((lambdaj. (((matrix f) $ j) $ k)) $ j))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ c$ cmatrix f0 f1 b0 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b2 b1 b0 f2 creal_mul c$ c$ cmatrix f0 f1 b0 c$ clambda / c$ c$ cmatrix f0 b1 b0 f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b0 c$ c$ clambda / clambda / c$ c$ cmatrix f0 b2 b1 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f0 f1 b0 c$ clambda / c$ c$ cmatrix f0 b1 b0 f2
+ |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((~ F) ==> ((real_of_num (NUMERAL _0)) = (real_of_num (NUMERAL _0)))) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))
T c= c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = (p' ==> q'))))
T c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b3 b3 b2 b1 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b3 b3 b2 b1 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> f1 f3
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)) = ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j)))))) = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ k) $ i)) (((matrix f) $ k) $ j))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b2 b1 f0 b0 c$ c$ cmatrix f1 b0 f2 creal_mul c$ c$ cmatrix f1 b0 f0 c$ c$ cmatrix f1 b0 f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b2 b1 f0 b0 c$ c$ cmatrix f1 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 f0 c$ c$ cmatrix f1 b0 f2 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b2 b1 f0 b0 c$ c$ cmatrix f1 b0 f2 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 f0 c$ c$ cmatrix f1 b0 f2
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) = ((mat (NUMERAL (BIT1 _0))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) ==> q')))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b2 b1 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f1 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f1 b3 b3 b2 b1 f0 c$ cmat cNUMERAL cBIT1 c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 f2
+ |- (((!p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ cmatrix f1 f0 c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cmatrix f1 f0 c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 c==> b0 b1 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ cmatrix f1 f0 c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cmatrix f1 f0 c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 c==> b0 b1 f3 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ cmatrix f1 f0 c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cmatrix f1 f0 c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 c==> b0 b1 f3
+ |- (((!g'. (!t'. (!e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL c_0 b2 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND b0 b1 b2 * / ! ! c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL c_0 b2 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND b0 b1 b2 f0 * / ! ! c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL c_0 b2 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND b0 b1 b2 f0
+ |- ((((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0))))))))) ==> (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))) ==> ((\y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))) y)) = ((\y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))) y))
T c= c==> ! c= c= f0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ f0 b1 c$ b0 b1 * / c= c= f0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ f0 b1 c$ b0 b1 f1 * / c= c= f0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ f0 b1 c$ b0 b1 f1
+ (linear f), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t)), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) |- ((linear f) /\ ((linear (rotate2d t)) /\ ((matrix f) = (matrix (rotate2d t)))))
T c==> clinear f0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin f1 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos f1 c/\ clinear f0 c/\ clinear * part crotate2d f1 c= cmatrix f0 cmatrix * part crotate2d f1
+ |- (((F ==> ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) e')))) = (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) e'))))
T c= c==> c==> cF c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((!p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((matrix f) $ i) $ i') = (((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i) $ i'))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 c==> b0 b1 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 c==> b0 b1 f4 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ cmatrix f1 f2 f0 c$ c$ cvector cCONS cvector cCONS ccos f3 cCONS creal_neg csin f3 cNIL cCONS cvector cCONS csin f3 cCONS ccos f3 cNIL cNIL f2 f0 c==> b0 b1 f4
+ (linear f), (((real_add ((real_pow (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))), ((((real_add ((real_pow (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))))) |- (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t)))))
T c==> clinear f0 c==> c= creal_add creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c= creal_add creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d b0
+ |- (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) e')))
T c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f0 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((!f. ((orthogonal_transformation f) = ((linear f) /\ (orthogonal_matrix (matrix f))))) ==> ((\f. ((orthogonal_transformation f) = ((linear f) /\ (orthogonal_matrix (matrix f))))) f)) = ((\f. ((orthogonal_transformation f) = ((linear f) /\ (orthogonal_matrix (matrix f))))) f))
T c= c==> ! c= corthogonal_transformation b0 c/\ clinear b0 corthogonal_matrix cmatrix b0 * / c= corthogonal_transformation b0 c/\ clinear b0 corthogonal_matrix cmatrix b0 f0 * / c= corthogonal_transformation b0 c/\ clinear b0 corthogonal_matrix cmatrix b0 f0
+ |- (F ==> ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> cF c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) e')
T * / c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 f1 b0 f2
+ |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
+ |- (((!e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) ==> ((\e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) e')) = ((\e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 f1 b0 * / c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 f1 b0 f2 * / c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 f1 b0 f2
+ |- ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))
T c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\g. (((linear f) /\ ((linear g) /\ ((matrix f) = (matrix g)))) ==> (f = g))) g)
T * / c==> c/\ clinear f0 c/\ clinear b0 c= cmatrix f0 cmatrix b0 c= f0 b0 f1
+ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL _0)) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_add ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((real_of_num (NUMERAL (BIT1 _0))) = ((real_sub ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) /\ (((real_mul ((real_sub (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0))))) (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))))))))) |- ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= creal_mul creal_sub c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (linear f), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))), (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t)))), ((real_le (real_of_num (NUMERAL _0))) t), ((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t))))
T c==> clinear f0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c/\ creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos f1 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin f1 c==> creal_le creal_of_num cNUMERAL c_0 f1 c==> creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d f1
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT0 (BIT1 _0))))) |- ((((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))))) = (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((matrix f) $ i) $ k)) (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) (((matrix f) $ i') $ (NUMERAL (BIT1 _0))))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) (((matrix f) $ i') $ (NUMERAL (BIT0 (BIT1 _0)))))) = (((COND (i = i')) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cNUMERAL cBIT0 cBIT1 c_0 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b3 b3 b2 b1 f0 f1 c$ c$ cmat cNUMERAL cBIT1 c_0 f0 f1 c= creal_add creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f2 f1 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f2 f1 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b3 b3 b2 b1 f0 f1 c$ c$ cmat cNUMERAL cBIT1 c_0 f0 f1 c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f2 f1 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f2 f1 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ cmatrix f2 b0 b2 c$ c$ clambda / clambda / c$ c$ cmatrix f2 b3 b3 b2 b1 f0 f1 c$ c$ cmat cNUMERAL cBIT1 c_0 f0 f1 c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT1 c_0 c$ c$ cmatrix f2 f1 cNUMERAL cBIT1 c_0 creal_mul c$ c$ cmatrix f2 f0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f2 f1 cNUMERAL cBIT0 cBIT1 c_0 cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (linear f), ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_neg (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))))), ((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)), (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t))), ((real_le (real_of_num (NUMERAL _0))) t), ((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (f = (rotate2d t))))
T c==> clinear f0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_neg c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos f1 c==> c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos f1 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin f1 c==> creal_le creal_of_num cNUMERAL c_0 f1 c==> creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f0 * part crotate2d f1
+ |- ((\n. (((BIT0 m) = (BIT1 n)) = F)) n)
T * / c= c= cBIT0 f0 cBIT1 b0 cF f1
+ |- (((!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i))))))) ==> ((\x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i))))))) x)) = ((\x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i))))))) x))
T c= c==> ! ! c= c= b0 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c= c$ b0 b2 c$ b1 b2 * / ! c= c= b0 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c= c$ b0 b2 c$ b1 b2 f0 * / ! c= c= b0 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV c= c$ b0 b2 c$ b1 b2 f0
+ |- (((!p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> (((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i')) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul (((lambdai. (lambdaj. (((matrix f) $ j) $ i))) $ i) $ k)) (((matrix f) $ k) $ j)))))) $ i) $ i') = (((mat (NUMERAL (BIT1 _0))) $ i) $ i'))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b2 b4 c$ c$ cmatrix f1 b4 b3 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b2 b4 c$ c$ cmatrix f1 b4 b3 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 c==> b0 b1 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b2 b4 c$ c$ cmatrix f1 b4 b3 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b2 b4 c$ c$ cmatrix f1 b4 b3 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 c==> b0 b1 f3 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b2 b4 c$ c$ cmatrix f1 b4 b3 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ clambda / clambda / c$ c$ cmatrix f1 b5 b5 b2 b4 c$ c$ cmatrix f1 b4 b3 f2 f0 c$ c$ cmat cNUMERAL cBIT1 c_0 f2 f0 c==> b0 b1 f3
+ (((real_add ((real_pow (((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) |- (?t. (((real_le (real_of_num (NUMERAL _0))) t) /\ (((real_lt t) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (((((matrix f) $ (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (cos t)) /\ ((((matrix f) $ (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (sin t))))))
T c==> c= creal_add creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c= c$ c$ cmatrix f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 ccos b0 c= c$ c$ cmatrix f0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 csin b0
+ |- ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((matrix f) $ i) = ((vector ((CONS (vector ((CONS (cos t)) ((CONS (real_neg (sin t))) NIL)))) ((CONS (vector ((CONS (sin t)) ((CONS (cos t)) NIL)))) NIL))) $ i))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ cmatrix f1 f0 c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cmatrix f1 f0 c$ cvector cCONS cvector cCONS ccos f2 cCONS creal_neg csin f2 cNIL cCONS cvector cCONS csin f2 cCONS ccos f2 cNIL cNIL f0 c==> b0 b1 f3
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> (((lambdaj. ((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) ((lambdaj. (((matrix f) $ j) $ (NUMERAL (BIT1 _0)))) $ j))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) ((lambdaj. (((matrix f) $ j) $ (NUMERAL (BIT0 (BIT1 _0))))) $ j)))) $ i') = ((\j. ((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) ((lambdaj. (((matrix f) $ j) $ (NUMERAL (BIT1 _0)))) $ j))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) ((lambdaj. (((matrix f) $ j) $ (NUMERAL (BIT0 (BIT1 _0))))) $ j)))) i'))) = (((lambdaj. ((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) ((lambdaj. (((matrix f) $ j) $ (NUMERAL (BIT1 _0)))) $ j))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) ((lambdaj. (((matrix f) $ j) $ (NUMERAL (BIT0 (BIT1 _0))))) $ j)))) $ i') = ((\j. ((real_add ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT1 _0)))) ((lambdaj. (((matrix f) $ j) $ (NUMERAL (BIT1 _0)))) $ j))) ((real_mul (((matrix f) $ i) $ (NUMERAL (BIT0 (BIT1 _0))))) ((lambdaj. (((matrix f) $ j) $ (NUMERAL (BIT0 (BIT1 _0))))) $ j)))) i')))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT1 c_0 c$ clambda / c$ c$ cmatrix f1 b1 cNUMERAL cBIT1 c_0 b0 creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ clambda / c$ c$ cmatrix f1 b1 cNUMERAL cBIT0 cBIT1 c_0 b0 f0 * / creal_add creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT1 c_0 c$ clambda / c$ c$ cmatrix f1 b1 cNUMERAL cBIT1 c_0 b0 creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ clambda / c$ c$ cmatrix f1 b1 cNUMERAL cBIT0 cBIT1 c_0 b0 f0 c= c$ clambda / creal_add creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT1 c_0 c$ clambda / c$ c$ cmatrix f1 b1 cNUMERAL cBIT1 c_0 b0 creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ clambda / c$ c$ cmatrix f1 b1 cNUMERAL cBIT0 cBIT1 c_0 b0 f0 * / creal_add creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT1 c_0 c$ clambda / c$ c$ cmatrix f1 b1 cNUMERAL cBIT1 c_0 b0 creal_mul c$ c$ cmatrix f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c$ clambda / c$ c$ cmatrix f1 b1 cNUMERAL cBIT0 cBIT1 c_0 b0 f0
+ |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))) = T)
T c= ! ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= f3 b1 c= cCOND f0 f2 f3 cCOND f1 b0 b1 cT
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT0 (BIT1 _0))))) |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> (((lambdaj. (((matrix f) $ j) $ (NUMERAL (BIT0 (BIT1 _0))))) $ i') = ((\j. (((matrix f) $ j) $ (NUMERAL (BIT0 (BIT1 _0))))) i'))) = (((lambdaj. (((matrix f) $ j) $ (NUMERAL (BIT0 (BIT1 _0))))) $ i') = ((\j. (((matrix f) $ j) $ (NUMERAL (BIT0 (BIT1 _0))))) i')))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / c$ c$ cmatrix f1 b0 cNUMERAL cBIT0 cBIT1 c_0 f0 * / c$ c$ cmatrix f1 b0 cNUMERAL cBIT0 cBIT1 c_0 f0 c= c$ clambda / c$ c$ cmatrix f1 b0 cNUMERAL cBIT0 cBIT1 c_0 f0 * / c$ c$ cmatrix f1 b0 cNUMERAL cBIT0 cBIT1 c_0 f0
