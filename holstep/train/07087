N Polyhedron.GRAPH_LINEAR_IMAGE_EQ
C |- (!f. (!E. (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> ((graph ((IMAGE (IMAGE f)) E)) = (graph E)))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= cgraph * * part cIMAGE * part cIMAGE f0 f1 cgraph f1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D LEFT_OR_FORALL_THM
A |- (!P. (!Q. (((!x. (P x)) \/ Q) = (!x. ((P x) \/ Q)))))
T c= c\/ ! * f0 b0 f1 ! c\/ * f0 b0 f1
D RIGHT_OR_FORALL_THM
A |- (!P. (!Q. ((P \/ (!x. (Q x))) = (!x. (P \/ (Q x))))))
T c= c\/ f0 ! * f1 b0 ! c\/ f0 * f1 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D SKOLEM_THM
A |- (!P. ((!x. (?y. ((P x) y))) = (?y. (!x. ((P x) (y x))))))
T c= ! c? / * * f0 b0 b1 c? / ! * * f0 b1 * b0 b1
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D PSUBSET
A |- (!s. (!t. ((s PSUBSET t) = ((s SUBSET t) /\ (~ (s = t))))))
T c= cPSUBSET f0 f1 c/\ cSUBSET f0 f1 c~ c= f0 f1
D DISJOINT
A |- (!s. (!t. (((DISJOINT s) t) = ((s INTER t) = EMPTY))))
T c= cDISJOINT f0 f1 c= * * part cINTER f0 f1 part cEMPTY
D INFINITE
A |- (!s. ((INFINITE s) = (~ (FINITE s))))
T c= cINFINITE f0 c~ cFINITE f0
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_UNION
A |- (!s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))))
T c= cIN f0 * * part cUNION f1 f2 c\/ cIN f0 f1 cIN f0 f2
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_DIFF
A |- (!s. (!t. (!x. ((x IN (s DIFF t)) = ((x IN s) /\ (~ (x IN t)))))))
T c= cIN f0 * * part cDIFF f1 f2 c/\ cIN f0 f1 c~ cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D IN_DELETE
A |- (!s. (!x. (!y. ((x IN (s DELETE y)) = ((x IN s) /\ (~ (x = y)))))))
T c= cIN f0 * * part cDELETE f1 f2 c/\ cIN f0 f1 c~ c= f0 f2
D IN_IMAGE
A |- (!y. (!s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s)))))))
T c= cIN f0 * * part cIMAGE f1 f2 c? / c/\ c= f0 * f1 b0 cIN b0 f2
D IMAGE_o
A |- (!f. (!g. (!s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s))))))
T c= * * part cIMAGE * * part co f0 f1 f2 * * part cIMAGE f0 * * part cIMAGE f1 f2
D IMAGE_UNIONS
A |- (!f. (!s. (((IMAGE f) (UNIONS s)) = (UNIONS ((IMAGE (IMAGE f)) s)))))
T c= * * part cIMAGE f0 * part cUNIONS f1 * part cUNIONS * * part cIMAGE * part cIMAGE f0 f1
D FINITE_IMAGE_INJ_EQ
A |- (!f. (!s. ((!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y)))) ==> ((FINITE ((IMAGE f) s)) = (FINITE s)))))
T c==> ! ! c==> c/\ cIN b0 f0 c/\ cIN b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c= cFINITE * * part cIMAGE f1 f0 cFINITE f0
D HAS_SIZE
A |- (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))))
T c= cHAS_SIZE f0 f1 c/\ cFINITE f0 c= cCARD f0 f1
D CARD_IMAGE_INJ
A |- (!f. (!s. (((!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y)))) /\ (FINITE s)) ==> ((CARD ((IMAGE f) s)) = (CARD s)))))
T c==> c/\ ! ! c==> c/\ cIN b0 f0 c/\ cIN b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 cFINITE f0 c= cCARD * * part cIMAGE f1 f0 cCARD f0
D COUNTABLE_IMAGE_INJ_EQ
A |- (!f. (!s. ((!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y)))) ==> ((COUNTABLE ((IMAGE f) s)) = (COUNTABLE s)))))
T c==> ! ! c==> c/\ cIN b0 f0 c/\ cIN b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c= cCOUNTABLE * * part cIMAGE f1 f0 cCOUNTABLE f0
D Fan.GRAPH
A |- (!E. ((graph E) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))))))
T c= cgraph f0 ! c==> cIN b0 f0 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!s. ((connected ((IMAGE f) s)) = (connected s)))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= cconnected * * part cIMAGE f0 b0 cconnected b0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!t. ((((IMAGE (IMAGE f)) s) UNION ((IMAGE (IMAGE f)) t)) = ((IMAGE (IMAGE f)) (s UNION t)))) ==> ((\t. ((((IMAGE (IMAGE f)) s) UNION ((IMAGE (IMAGE f)) t)) = ((IMAGE (IMAGE f)) (s UNION t)))) t)) = ((\t. ((((IMAGE (IMAGE f)) s) UNION ((IMAGE (IMAGE f)) t)) = ((IMAGE (IMAGE f)) (s UNION t)))) t))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! c= * * part cUNION * * part cIMAGE * part cIMAGE f0 f1 * * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 * * part cUNION f1 b0 * / c= * * part cUNION * * part cIMAGE * part cIMAGE f0 f1 * * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 * * part cUNION f1 b0 f2 * / c= * * part cUNION * * part cIMAGE * part cIMAGE f0 f1 * * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 * * part cUNION f1 b0 f2
- |- ((\f. (!u. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((UNIONS ((IMAGE (IMAGE (IMAGE f))) u)) = ((IMAGE (IMAGE f)) (UNIONS u)))))) f)
T * / ! c==> ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 c= * part cUNIONS * * part cIMAGE * part cIMAGE * part cIMAGE b0 b1 * * part cIMAGE * part cIMAGE b0 * part cUNIONS b1 f0
- |- ((!z. (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> (((between (f x)) ((f y) , (f z))) = ((between x) (y , z))))) = (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> (!z. (((between (f x)) ((f y) , (f z))) = ((between x) (y , z))))))
T c= ! c==> c/\ clinear f0 ! ! c==> c= * f0 b1 * f0 b2 c= b1 b2 c= cbetween * f0 f1 c, * f0 f2 * f0 b0 cbetween f1 c, f2 b0 c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= cbetween * f0 f1 c, * f0 f2 * f0 b0 cbetween f1 c, f2 b0
- |- ((!t. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((((IMAGE (IMAGE f)) s) DIFF ((IMAGE (IMAGE f)) t)) = ((IMAGE (IMAGE f)) (s DIFF t))))) = ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!t. ((((IMAGE (IMAGE f)) s) DIFF ((IMAGE (IMAGE f)) t)) = ((IMAGE (IMAGE f)) (s DIFF t))))))
T c= ! c==> ! ! c==> c= * f0 b1 * f0 b2 c= b1 b2 c= * * part cDIFF * * part cIMAGE * part cIMAGE f0 f1 * * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 * * part cDIFF f1 b0 c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= * * part cDIFF * * part cIMAGE * part cIMAGE f0 f1 * * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 * * part cDIFF f1 b0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!s. (!t. ((((IMAGE (IMAGE f)) s) SUBSET ((IMAGE (IMAGE f)) t)) = (s SUBSET t))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= cSUBSET * * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 b1 cSUBSET b0 b1
- |- (((!f. (!tr. (((linear f) /\ ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) /\ (!y. (?x. ((f x) = y))))) ==> ((triangulation ((IMAGE (IMAGE f)) tr)) = (triangulation tr))))) ==> ((\f. (!tr. (((linear f) /\ ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) /\ (!y. (?x. ((f x) = y))))) ==> ((triangulation ((IMAGE (IMAGE f)) tr)) = (triangulation tr))))) f)) = ((\f. (!tr. (((linear f) /\ ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) /\ (!y. (?x. ((f x) = y))))) ==> ((triangulation ((IMAGE (IMAGE f)) tr)) = (triangulation tr))))) f))
T c= c==> ! ! c==> c/\ clinear b0 c/\ ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 ! c? / c= * b0 b3 b2 c= ctriangulation * * part cIMAGE * part cIMAGE b0 b1 ctriangulation b1 * / ! c==> c/\ clinear b0 c/\ ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 ! c? / c= * b0 b3 b2 c= ctriangulation * * part cIMAGE * part cIMAGE b0 b1 ctriangulation b1 f0 * / ! c==> c/\ clinear b0 c/\ ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 ! c? / c= * b0 b3 b2 c= ctriangulation * * part cIMAGE * part cIMAGE b0 b1 ctriangulation b1 f0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!x. (!s. (((f x) IN ((IMAGE f) s)) = (x IN s))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= cIN * f0 b0 * * part cIMAGE f0 b1 cIN b0 b1
- |- (((!f. (!s. (((linear f) /\ ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) /\ (!y. (?x. ((f x) = y))))) ==> ((interior ((IMAGE f) s)) = ((IMAGE f) (interior s)))))) ==> ((\f. (!s. (((linear f) /\ ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) /\ (!y. (?x. ((f x) = y))))) ==> ((interior ((IMAGE f) s)) = ((IMAGE f) (interior s)))))) f)) = ((\f. (!s. (((linear f) /\ ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) /\ (!y. (?x. ((f x) = y))))) ==> ((interior ((IMAGE f) s)) = ((IMAGE f) (interior s)))))) f))
T c= c==> ! ! c==> c/\ clinear b0 c/\ ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 ! c? / c= * b0 b3 b2 c= * part cinterior * * part cIMAGE b0 b1 * * part cIMAGE b0 * part cinterior b1 * / ! c==> c/\ clinear b0 c/\ ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 ! c? / c= * b0 b3 b2 c= * part cinterior * * part cIMAGE b0 b1 * * part cIMAGE b0 * part cinterior b1 f0 * / ! c==> c/\ clinear b0 c/\ ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 ! c? / c= * b0 b3 b2 c= * part cinterior * * part cIMAGE b0 b1 * * part cIMAGE b0 * part cinterior b1 f0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\s. (!P. ((!y. ((y IN ((IMAGE f) s)) ==> (P y))) = (!x. ((x IN s) ==> (P (f x))))))) s)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / ! c= ! c==> cIN b2 * * part cIMAGE f0 b0 * b1 b2 ! c==> cIN b2 b0 * b1 * f0 b2 f1
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\g. (!k. (((IMAGE (f o g)) k) = ((IMAGE f) ((IMAGE g) k))))) g)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / ! c= * * part cIMAGE * * part co f0 b0 b1 * * part cIMAGE f0 * * part cIMAGE b0 b1 f1
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!s. (!x. ((((IMAGE f) s) (f x)) = (s x))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= cIMAGE f0 b0 * f0 b1 * b0 b1
- |- (!s. (((linear f) /\ ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) /\ (!y. (?x. ((f x) = y))))) ==> ((components ((IMAGE f) s)) = ((IMAGE (IMAGE f)) (components s)))))
T c==> c/\ clinear f0 c/\ ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c? / c= * f0 b1 b0 c= * part ccomponents * * part cIMAGE f0 f1 * * part cIMAGE * part cIMAGE f0 * part ccomponents f1
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\s. (((locally path_connected) ((IMAGE f) s)) = ((locally path_connected) s))) s)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / c= clocally part cpath_connected * * part cIMAGE f0 b0 clocally part cpath_connected b0 f1
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!t. (((homotopy_equivalent s) ((IMAGE f) t)) = ((homotopy_equivalent s) t))) ==> ((\t. (((homotopy_equivalent s) ((IMAGE f) t)) = ((homotopy_equivalent s) t))) t)) = ((\t. (((homotopy_equivalent s) ((IMAGE f) t)) = ((homotopy_equivalent s) t))) t))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! c= chomotopy_equivalent f1 * * part cIMAGE f0 b0 chomotopy_equivalent f1 b0 * / c= chomotopy_equivalent f1 * * part cIMAGE f0 b0 chomotopy_equivalent f1 b0 f2 * / c= chomotopy_equivalent f1 * * part cIMAGE f0 b0 chomotopy_equivalent f1 b0 f2
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!s. (!t. ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t)))))) = (!s. (!t. ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= * * part cDIFF * * part cIMAGE f0 b0 * * part cIMAGE f0 b1 * * part cIMAGE f0 * * part cDIFF b0 b1 ! ! c= * * part cDIFF * * part cIMAGE f0 b0 * * part cIMAGE f0 b1 * * part cIMAGE f0 * * part cDIFF b0 b1
- |- ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!u. ((UNIONS ((IMAGE (IMAGE (IMAGE f))) u)) = ((IMAGE (IMAGE f)) (UNIONS u)))))
T c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= * part cUNIONS * * part cIMAGE * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 * part cUNIONS b0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!x. ((((IMAGE f) s) DELETE (f x)) = ((IMAGE f) (s DELETE x))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= * * part cDELETE * * part cIMAGE f0 f1 * f0 b0 * * part cIMAGE f0 * * part cDELETE f1 b0
- |- ((!t. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t))))) = ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!t. ((((IMAGE f) s) DIFF ((IMAGE f) t)) = ((IMAGE f) (s DIFF t))))))
T c= ! c==> ! ! c==> c= * f0 b1 * f0 b2 c= b1 b2 c= * * part cDIFF * * part cIMAGE f0 f1 * * part cIMAGE f0 b0 * * part cIMAGE f0 * * part cDIFF f1 b0 c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= * * part cDIFF * * part cIMAGE f0 f1 * * part cIMAGE f0 b0 * * part cIMAGE f0 * * part cDIFF f1 b0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\v. ((((affsign sgn) ((IMAGE f) s)) ((IMAGE f) t)) = ((IMAGE f) (((affsign sgn) s) t)))) v)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / c= * * * part caffsign f1 * * part cIMAGE f0 f2 * * part cIMAGE f0 f3 * * part cIMAGE f0 * * * part caffsign f1 f2 f3 f4
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((FINITE ((IMAGE (IMAGE f)) s)) = (FINITE s))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= cFINITE * * part cIMAGE * part cIMAGE f0 f1 cFINITE f1
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((span ((IMAGE f) s)) = ((IMAGE f) (span s)))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= * part cspan * * part cIMAGE f0 f1 * * part cIMAGE f0 * part cspan f1
- |- ((!c. (((linear f) /\ (!x. ((vector_norm (f x)) = (vector_norm x)))) ==> ((((arcV (f a)) (f b)) (f c)) = (((arcV a) b) c)))) = (((linear f) /\ (!x. ((vector_norm (f x)) = (vector_norm x)))) ==> (!c. ((((arcV (f a)) (f b)) (f c)) = (((arcV a) b) c)))))
T c= ! c==> c/\ clinear f0 ! c= cvector_norm * f0 b1 cvector_norm b1 c= carcV * f0 f1 * f0 f2 * f0 b0 carcV f1 f2 b0 c==> c/\ clinear f0 ! c= cvector_norm * f0 b0 cvector_norm b0 ! c= carcV * f0 f1 * f0 f2 * f0 b0 carcV f1 f2 b0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!l. (((MEM (f x)) ((MAP f) l)) = ((MEM x) l))) ==> ((\l. (((MEM (f x)) ((MAP f) l)) = ((MEM x) l))) l)) = ((\l. (((MEM (f x)) ((MAP f) l)) = ((MEM x) l))) l))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! c= cMEM * f0 f1 cMAP f0 b0 cMEM f1 b0 * / c= cMEM * f0 f1 cMAP f0 b0 cMEM f1 b0 f2 * / c= cMEM * f0 f1 cMAP f0 b0 cMEM f1 b0 f2
- |- (((!f. (!g. (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> ((simple_path (f o g)) = (simple_path g))))) ==> ((\f. (!g. (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> ((simple_path (f o g)) = (simple_path g))))) f)) = ((\f. (!g. (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> ((simple_path (f o g)) = (simple_path g))))) f))
T c= c==> ! ! c==> c/\ clinear b0 ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 c= csimple_path * * part co b0 b1 csimple_path b1 * / ! c==> c/\ clinear b0 ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 c= csimple_path * * part co b0 b1 csimple_path b1 f0 * / ! c==> c/\ clinear b0 ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 c= csimple_path * * part co b0 b1 csimple_path b1 f0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\s. (!t. ((((IMAGE f) s) PSUBSET ((IMAGE f) t)) = (s PSUBSET t)))) s)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / ! c= cPSUBSET * * part cIMAGE f0 b0 * * part cIMAGE f0 b1 cPSUBSET b0 b1 f1
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\s. (((edge_of ((IMAGE f) c)) ((IMAGE f) s)) = ((edge_of c) s))) s)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / c= cedge_of * * part cIMAGE f0 f1 * * part cIMAGE f0 b0 cedge_of f1 b0 f2
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!a. (!b. ((midpoint ((f a) , (f b))) = (f (midpoint (a , b))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= cmidpoint c, * f0 b0 * f0 b1 * f0 cmidpoint c, b0 b1
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!p. (!x. (!y. ((((COND p) (f x)) (f y)) = (f (((COND p) x) y))))))) = (!p. (!x. (!y. ((((COND p) (f x)) (f y)) = (f (((COND p) x) y)))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! ! c= cCOND b0 * f0 b1 * f0 b2 * f0 cCOND b0 b1 b2 ! ! ! c= cCOND b0 * f0 b1 * f0 b2 * f0 cCOND b0 b1 b2
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!t. ((((IMAGE (IMAGE f)) s) DIFF ((IMAGE (IMAGE f)) t)) = ((IMAGE (IMAGE f)) (s DIFF t)))) ==> ((\t. ((((IMAGE (IMAGE f)) s) DIFF ((IMAGE (IMAGE f)) t)) = ((IMAGE (IMAGE f)) (s DIFF t)))) t)) = ((\t. ((((IMAGE (IMAGE f)) s) DIFF ((IMAGE (IMAGE f)) t)) = ((IMAGE (IMAGE f)) (s DIFF t)))) t))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! c= * * part cDIFF * * part cIMAGE * part cIMAGE f0 f1 * * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 * * part cDIFF f1 b0 * / c= * * part cDIFF * * part cIMAGE * part cIMAGE f0 f1 * * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 * * part cDIFF f1 b0 f2 * / c= * * part cDIFF * * part cIMAGE * part cIMAGE f0 f1 * * part cIMAGE * part cIMAGE f0 b0 * * part cIMAGE * part cIMAGE f0 * * part cDIFF f1 b0 f2
- |- (((linear f) /\ (!x. ((vector_norm (f x)) = (vector_norm x)))) ==> (!a. (!b. (!c. ((angle ((f a) , ((f b) , (f c)))) = (angle (a , (b , c))))))))
T c==> c/\ clinear f0 ! c= cvector_norm * f0 b0 cvector_norm b0 ! ! ! c= cangle c, * f0 b0 c, * f0 b1 * f0 b2 cangle c, b0 c, b1 b2
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!t. ((s >_c ((IMAGE f) t)) = (s >_c t))) ==> ((\t. ((s >_c ((IMAGE f) t)) = (s >_c t))) t)) = ((\t. ((s >_c ((IMAGE f) t)) = (s >_c t))) t))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! c= c>_c f1 * * part cIMAGE f0 b0 c>_c f1 b0 * / c= c>_c f1 * * part cIMAGE f0 b0 c>_c f1 b0 f2 * / c= c>_c f1 * * part cIMAGE f0 b0 c>_c f1 b0 f2
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((linepath ((f b) , (f c))) = (f o (linepath (b , c))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= * part clinepath c, * f0 f1 * f0 f2 * * part co f0 * part clinepath c, f1 f2
- |- (((!f. (!s. (((linear f) /\ ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) /\ (!y. (?x. ((f x) = y))))) ==> ((inside ((IMAGE f) s)) = ((IMAGE f) (inside s)))))) ==> ((\f. (!s. (((linear f) /\ ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) /\ (!y. (?x. ((f x) = y))))) ==> ((inside ((IMAGE f) s)) = ((IMAGE f) (inside s)))))) f)) = ((\f. (!s. (((linear f) /\ ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) /\ (!y. (?x. ((f x) = y))))) ==> ((inside ((IMAGE f) s)) = ((IMAGE f) (inside s)))))) f))
T c= c==> ! ! c==> c/\ clinear b0 c/\ ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 ! c? / c= * b0 b3 b2 c= * part cinside * * part cIMAGE b0 b1 * * part cIMAGE b0 * part cinside b1 * / ! c==> c/\ clinear b0 c/\ ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 ! c? / c= * b0 b3 b2 c= * part cinside * * part cIMAGE b0 b1 * * part cIMAGE b0 * part cinside b1 f0 * / ! c==> c/\ clinear b0 c/\ ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 ! c? / c= * b0 b3 b2 c= * part cinside * * part cIMAGE b0 b1 * * part cIMAGE b0 * part cinside b1 f0
- |- (!s. (!t. (((linear f) /\ (!x. ((vector_norm (f x)) = (vector_norm x)))) ==> ((setdist (((IMAGE f) s) , ((IMAGE f) t))) = (setdist (s , t))))))
T c==> c/\ clinear f0 ! c= cvector_norm * f0 b0 cvector_norm b0 c= csetdist c, * * part cIMAGE f0 f1 * * part cIMAGE f0 f2 csetdist c, f1 f2
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\g. ((pathstart (f o g)) = (f (pathstart g)))) g)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / c= cpathstart * * part co f0 b0 * f0 cpathstart b0 f1
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!v. ((((subpath u) v) (f o g)) = (f o (((subpath u) v) g))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= * * * part csubpath f1 b0 * * part co f0 f2 * * part co f0 * * * part csubpath f1 b0 f2
- |- (((!f. (!x. (!r. (((linear f) /\ ((!y. (?x. ((f x) = y))) /\ (!x. ((vector_norm (f x)) = (vector_norm x))))) ==> ((ball ((f x) , r)) = ((IMAGE f) (ball (x , r)))))))) ==> ((\f. (!x. (!r. (((linear f) /\ ((!y. (?x. ((f x) = y))) /\ (!x. ((vector_norm (f x)) = (vector_norm x))))) ==> ((ball ((f x) , r)) = ((IMAGE f) (ball (x , r)))))))) f)) = ((\f. (!x. (!r. (((linear f) /\ ((!y. (?x. ((f x) = y))) /\ (!x. ((vector_norm (f x)) = (vector_norm x))))) ==> ((ball ((f x) , r)) = ((IMAGE f) (ball (x , r)))))))) f))
T c= c==> ! ! ! c==> c/\ clinear b0 c/\ ! c? / c= * b0 b4 b3 ! c= cvector_norm * b0 b3 cvector_norm b3 c= * part cball c, * b0 b1 b2 * * part cIMAGE b0 * part cball c, b1 b2 * / ! ! c==> c/\ clinear b0 c/\ ! c? / c= * b0 b4 b3 ! c= cvector_norm * b0 b3 cvector_norm b3 c= * part cball c, * b0 b1 b2 * * part cIMAGE b0 * part cball c, b1 b2 f0 * / ! ! c==> c/\ clinear b0 c/\ ! c? / c= * b0 b4 b3 ! c= cvector_norm * b0 b3 cvector_norm b3 c= * part cball c, * b0 b1 b2 * * part cIMAGE b0 * part cball c, b1 b2 f0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!s. (!x. ((((IMAGE f) s) DELETE (f x)) = ((IMAGE f) (s DELETE x)))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= * * part cDELETE * * part cIMAGE f0 b0 * f0 b1 * * part cIMAGE f0 * * part cDELETE b0 b1
- |- ((\f. (!s. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((INFINITE ((IMAGE f) s)) = (INFINITE s))))) f)
T * / ! c==> ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 c= cINFINITE * * part cIMAGE b0 b1 cINFINITE b1 f0
- |- (((!f. (!s. ((linear f) ==> ((span ((IMAGE f) s)) = ((IMAGE f) (span s)))))) ==> ((\f. (!s. ((linear f) ==> ((span ((IMAGE f) s)) = ((IMAGE f) (span s)))))) f)) = ((\f. (!s. ((linear f) ==> ((span ((IMAGE f) s)) = ((IMAGE f) (span s)))))) f))
T c= c==> ! ! c==> clinear b0 c= * part cspan * * part cIMAGE b0 b1 * * part cIMAGE b0 * part cspan b1 * / ! c==> clinear b0 c= * part cspan * * part cIMAGE b0 b1 * * part cIMAGE b0 * part cspan b1 f0 * / ! c==> clinear b0 c= * part cspan * * part cIMAGE b0 b1 * * part cIMAGE b0 * part cspan b1 f0
- |- (((!f. (!s. (!t. (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> (((aff_ge ((IMAGE f) s)) ((IMAGE f) t)) = ((IMAGE f) ((aff_ge s) t))))))) ==> ((\f. (!s. (!t. (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> (((aff_ge ((IMAGE f) s)) ((IMAGE f) t)) = ((IMAGE f) ((aff_ge s) t))))))) f)) = ((\f. (!s. (!t. (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> (((aff_ge ((IMAGE f) s)) ((IMAGE f) t)) = ((IMAGE f) ((aff_ge s) t))))))) f))
T c= c==> ! ! ! c==> c/\ clinear b0 ! ! c==> c= * b0 b3 * b0 b4 c= b3 b4 c= * * part caff_ge * * part cIMAGE b0 b1 * * part cIMAGE b0 b2 * * part cIMAGE b0 * * part caff_ge b1 b2 * / ! ! c==> c/\ clinear b0 ! ! c==> c= * b0 b3 * b0 b4 c= b3 b4 c= * * part caff_ge * * part cIMAGE b0 b1 * * part cIMAGE b0 b2 * * part cIMAGE b0 * * part caff_ge b1 b2 f0 * / ! ! c==> c/\ clinear b0 ! ! c==> c= * b0 b3 * b0 b4 c= b3 b4 c= * * part caff_ge * * part cIMAGE b0 b1 * * part cIMAGE b0 b2 * * part cIMAGE b0 * * part caff_ge b1 b2 f0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!n. ((((IMAGE f) o xs) n) = ((IMAGE f) (xs n))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= * * * part co * part cIMAGE f0 f1 b0 * * part cIMAGE f0 * f1 b0
- |- ((!r. (((linear f) /\ ((!y. (?x. ((f x) = y))) /\ (!x. ((vector_norm (f x)) = (vector_norm x))))) ==> ((sphere ((f x) , r)) = ((IMAGE f) (sphere (x , r)))))) = (((linear f) /\ ((!y. (?x. ((f x) = y))) /\ (!x. ((vector_norm (f x)) = (vector_norm x))))) ==> (!r. ((sphere ((f x) , r)) = ((IMAGE f) (sphere (x , r)))))))
T c= ! c==> c/\ clinear f0 c/\ ! c? / c= * f0 b2 b1 ! c= cvector_norm * f0 b1 cvector_norm b1 c= * part csphere c, * f0 f1 b0 * * part cIMAGE f0 * part csphere c, f1 b0 c==> c/\ clinear f0 c/\ ! c? / c= * f0 b1 b0 ! c= cvector_norm * f0 b0 cvector_norm b0 ! c= * part csphere c, * f0 f1 b0 * * part cIMAGE f0 * part csphere c, f1 b0
- ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((vector_sub (f x)) (f y)) = (f ((vector_sub x) y)))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= cvector_sub * f0 f1 * f0 f2 * f0 cvector_sub f1 f2
+ |- (((!f. (!s. (!P. ((!u. ((u IN ((IMAGE (IMAGE f)) s)) ==> (P u))) = (!t. ((t IN s) ==> (P ((IMAGE f) t)))))))) ==> ((\f. (!s. (!P. ((!u. ((u IN ((IMAGE (IMAGE f)) s)) ==> (P u))) = (!t. ((t IN s) ==> (P ((IMAGE f) t)))))))) f)) = ((\f. (!s. (!P. ((!u. ((u IN ((IMAGE (IMAGE f)) s)) ==> (P u))) = (!t. ((t IN s) ==> (P ((IMAGE f) t)))))))) f))
T c= c==> ! ! ! c= ! c==> cIN b3 * * part cIMAGE * part cIMAGE b0 b1 * b2 b3 ! c==> cIN b3 b1 * b2 * * part cIMAGE b0 b3 * / ! ! c= ! c==> cIN b3 * * part cIMAGE * part cIMAGE b0 b1 * b2 b3 ! c==> cIN b3 b1 * b2 * * part cIMAGE b0 b3 f0 * / ! ! c= ! c==> cIN b3 * * part cIMAGE * part cIMAGE b0 b1 * b2 b3 ! c==> cIN b3 b1 * b2 * * part cIMAGE b0 b3 f0
+ |- ((!s. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!n. ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n))))) = ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!s. (!n. ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n))))))
T c= ! c==> ! ! c==> c= * f0 b1 * f0 b2 c= b1 b2 ! c= cHAS_SIZE * * part cIMAGE f0 b0 b1 cHAS_SIZE b0 b1 c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= cHAS_SIZE * * part cIMAGE f0 b0 b1 cHAS_SIZE b0 b1
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\P. ((!u. ((u IN ((IMAGE (IMAGE f)) s)) ==> (P u))) = (!t. ((t IN s) ==> (P ((IMAGE f) t)))))) P)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / c= ! c==> cIN b1 * * part cIMAGE * part cIMAGE f0 f1 * b0 b1 ! c==> cIN b1 f1 * b0 * * part cIMAGE f0 b1 f2
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= cHAS_SIZE * * part cIMAGE f0 f1 f2 cHAS_SIZE f1 f2
+ |- (!s. (!n. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n)))))
T c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= cHAS_SIZE * * part cIMAGE f0 f1 f2 cHAS_SIZE f1 f2
+ |- ((((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> ((!e. ((e IN ((IMAGE (IMAGE f)) E)) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))))) = T)
T c= c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= ! c==> cIN b0 * * part cIMAGE * part cIMAGE f0 f1 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> cIN b0 f1 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 cT
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!n. ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n)))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= cHAS_SIZE * * part cIMAGE f0 f1 b0 cHAS_SIZE f1 b0
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\s. (!P. ((!u. ((u IN ((IMAGE (IMAGE f)) s)) ==> (P u))) = (!t. ((t IN s) ==> (P ((IMAGE f) t))))))) s)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / ! c= ! c==> cIN b2 * * part cIMAGE * part cIMAGE f0 b0 * b1 b2 ! c==> cIN b2 b0 * b1 * * part cIMAGE f0 b2 f1
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!s. (!n. ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n)))) ==> ((\s. (!n. ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n)))) s)) = ((\s. (!n. ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n)))) s))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! ! c= cHAS_SIZE * * part cIMAGE f0 b0 b1 cHAS_SIZE b0 b1 * / ! c= cHAS_SIZE * * part cIMAGE f0 b0 b1 cHAS_SIZE b0 b1 f1 * / ! c= cHAS_SIZE * * part cIMAGE f0 b0 b1 cHAS_SIZE b0 b1 f1
+ |- (((!P. (!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))))) ==> ((\P. (!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))))) P)) = ((\P. (!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))))) P))
T c= c==> ! ! c= ! c==> b0 * b1 b2 c==> b0 ! * b1 b2 * / ! c= ! c==> b0 * b1 b2 c==> b0 ! * b1 b2 f0 * / ! c= ! c==> b0 * b1 b2 c==> b0 ! * b1 b2 f0
+ |- ((!n. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n)))) = ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!n. ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n)))))
T c= ! c==> ! ! c==> c= * f0 b1 * f0 b2 c= b1 b2 c= cHAS_SIZE * * part cIMAGE f0 f1 b0 cHAS_SIZE f1 b0 c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= cHAS_SIZE * * part cIMAGE f0 f1 b0 cHAS_SIZE f1 b0
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!s. (!n. ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= cHAS_SIZE * * part cIMAGE f0 b0 b1 cHAS_SIZE b0 b1
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\s. (!n. ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n)))) s)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / ! c= cHAS_SIZE * * part cIMAGE f0 b0 b1 cHAS_SIZE b0 b1 f1
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) /\ ((!e. ((e IN ((IMAGE (IMAGE f)) E)) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c/\ c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= ! c==> cIN b0 * * part cIMAGE * part cIMAGE f0 f1 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> cIN b0 f1 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((!e. ((e IN ((IMAGE (IMAGE f)) s)) ==> (P e))) = (!t. ((t IN s) ==> (P ((IMAGE f) t)))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= ! c==> cIN b0 * * part cIMAGE * part cIMAGE f0 f1 * f2 b0 ! c==> cIN b0 f1 * f2 * * part cIMAGE f0 b0
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!n. ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n))) ==> ((\n. ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n))) n)) = ((\n. ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n))) n))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! c= cHAS_SIZE * * part cIMAGE f0 f1 b0 cHAS_SIZE f1 b0 * / c= cHAS_SIZE * * part cIMAGE f0 f1 b0 cHAS_SIZE f1 b0 f2 * / c= cHAS_SIZE * * part cIMAGE f0 f1 b0 cHAS_SIZE f1 b0 f2
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!s. (!P. ((!u. ((u IN ((IMAGE (IMAGE f)) s)) ==> (P u))) = (!t. ((t IN s) ==> (P ((IMAGE f) t)))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= ! c==> cIN b2 * * part cIMAGE * part cIMAGE f0 b0 * b1 b2 ! c==> cIN b2 b0 * b1 * * part cIMAGE f0 b2
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!P. ((!u. ((u IN ((IMAGE (IMAGE f)) s)) ==> (P u))) = (!t. ((t IN s) ==> (P ((IMAGE f) t)))))) ==> ((\P. ((!u. ((u IN ((IMAGE (IMAGE f)) s)) ==> (P u))) = (!t. ((t IN s) ==> (P ((IMAGE f) t)))))) P)) = ((\P. ((!u. ((u IN ((IMAGE (IMAGE f)) s)) ==> (P u))) = (!t. ((t IN s) ==> (P ((IMAGE f) t)))))) P))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! c= ! c==> cIN b1 * * part cIMAGE * part cIMAGE f0 f1 * b0 b1 ! c==> cIN b1 f1 * b0 * * part cIMAGE f0 b1 * / c= ! c==> cIN b1 * * part cIMAGE * part cIMAGE f0 f1 * b0 b1 ! c==> cIN b1 f1 * b0 * * part cIMAGE f0 b1 f2 * / c= ! c==> cIN b1 * * part cIMAGE * part cIMAGE f0 f1 * b0 b1 ! c==> cIN b1 f1 * b0 * * part cIMAGE f0 b1 f2
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((!t. ((t IN E) ==> (((IMAGE f) t) HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= ! c==> cIN b0 f1 cHAS_SIZE * * part cIMAGE f0 b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> cIN b0 f1 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((!E. (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> ((!e. ((e IN ((IMAGE (IMAGE f)) E)) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))))))) = T)
T c= ! c==> c/\ clinear f0 ! ! c==> c= * f0 b1 * f0 b2 c= b1 b2 c= ! c==> cIN b1 * * part cIMAGE * part cIMAGE f0 b0 cHAS_SIZE b1 cNUMERAL cBIT0 cBIT1 c_0 ! c==> cIN b1 b0 cHAS_SIZE b1 cNUMERAL cBIT0 cBIT1 c_0 cT
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((!f. (!s. (!n. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n)))))) ==> ((\f. (!s. (!n. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n)))))) f)) = ((\f. (!s. (!n. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n)))))) f))
T c= c==> ! ! ! c==> ! ! c==> c= * b0 b3 * b0 b4 c= b3 b4 c= cHAS_SIZE * * part cIMAGE b0 b1 b2 cHAS_SIZE b1 b2 * / ! ! c==> ! ! c==> c= * b0 b3 * b0 b4 c= b3 b4 c= cHAS_SIZE * * part cIMAGE b0 b1 b2 cHAS_SIZE b1 b2 f0 * / ! ! c==> ! ! c==> c= * b0 b3 * b0 b4 c= b3 b4 c= cHAS_SIZE * * part cIMAGE b0 b1 b2 cHAS_SIZE b1 b2 f0
+ |- ((!t. ((t IN E) ==> (t HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))))
T c= ! c==> cIN b0 f0 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> cIN b0 f0 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (!f. (!E. (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> ((!e. ((e IN ((IMAGE (IMAGE f)) E)) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= ! c==> cIN b0 * * part cIMAGE * part cIMAGE f0 f1 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> cIN b0 f1 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (T = ((!t. ((t IN E) ==> (t HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))))))
T c= cT c= ! c==> cIN b0 f0 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> cIN b0 f0 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!t. ((t IN E) ==> (((IMAGE f) t) HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))))) = ((!e. ((e IN ((IMAGE (IMAGE f)) E)) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c= ! c==> cIN b0 f1 cHAS_SIZE * * part cIMAGE f0 b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> cIN b0 f1 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 c= ! c==> cIN b0 * * part cIMAGE * part cIMAGE f0 f1 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> cIN b0 f1 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\f. (!s. (!P. ((!u. ((u IN ((IMAGE (IMAGE f)) s)) ==> (P u))) = (!t. ((t IN s) ==> (P ((IMAGE f) t)))))))) f)
T * / ! ! c= ! c==> cIN b3 * * part cIMAGE * part cIMAGE b0 b1 * b2 b3 ! c==> cIN b3 b1 * b2 * * part cIMAGE b0 b3 f0
+ |- ((!f. (!E. (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> ((!e. ((e IN ((IMAGE (IMAGE f)) E)) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))))))) = (!f. (!E. (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) ==> ((graph ((IMAGE (IMAGE f)) E)) = (graph E))))))
T c= ! ! c==> c/\ clinear b0 ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 c= ! c==> cIN b2 * * part cIMAGE * part cIMAGE b0 b1 cHAS_SIZE b2 cNUMERAL cBIT0 cBIT1 c_0 ! c==> cIN b2 b1 cHAS_SIZE b2 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c/\ clinear b0 ! ! c==> c= * b0 b2 * b0 b3 c= b2 b3 c= cgraph * * part cIMAGE * part cIMAGE b0 b1 cgraph b1
+ |- ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!s. (!n. ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n)))))
T c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= cHAS_SIZE * * part cIMAGE f0 b0 b1 cHAS_SIZE b0 b1
+ |- (((!t. ((t IN E) ==> (t HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))))) = T)
T c= c= ! c==> cIN b0 f0 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> cIN b0 f0 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 cT
+ |- (((!E. ((graph E) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))))) ==> ((\E. ((graph E) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))))) E)) = ((\E. ((graph E) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))))) E))
T c= c==> ! c= cgraph b0 ! c==> cIN b1 b0 cHAS_SIZE b1 cNUMERAL cBIT0 cBIT1 c_0 * / c= cgraph b0 ! c==> cIN b1 b0 cHAS_SIZE b1 cNUMERAL cBIT0 cBIT1 c_0 f0 * / c= cgraph b0 ! c==> cIN b1 b0 cHAS_SIZE b1 cNUMERAL cBIT0 cBIT1 c_0 f0
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> (!s. (!n. ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n))))) = (!s. (!n. ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n)))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= cHAS_SIZE * * part cIMAGE f0 b0 b1 cHAS_SIZE b0 b1 ! ! c= cHAS_SIZE * * part cIMAGE f0 b0 b1 cHAS_SIZE b0 b1
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((\n. ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n))) n)
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 * / c= cHAS_SIZE * * part cIMAGE f0 f1 b0 cHAS_SIZE f1 b0 f2
+ |- ((\f. (!s. (!n. ((!x. (!y. (((f x) = (f y)) ==> (x = y)))) ==> ((((IMAGE f) s) HAS_SIZE n) = (s HAS_SIZE n)))))) f)
T * / ! ! c==> ! ! c==> c= * b0 b3 * b0 b4 c= b3 b4 c= cHAS_SIZE * * part cIMAGE b0 b1 b2 cHAS_SIZE b1 b2 f0
+ |- ((\E. ((graph E) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))))) E)
T * / c= cgraph b0 ! c==> cIN b1 b0 cHAS_SIZE b1 cNUMERAL cBIT0 cBIT1 c_0 f0
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (!P. ((!u. ((u IN ((IMAGE (IMAGE f)) s)) ==> (P u))) = (!t. ((t IN s) ==> (P ((IMAGE f) t))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! c= ! c==> cIN b1 * * part cIMAGE * part cIMAGE f0 f1 * b0 b1 ! c==> cIN b1 f1 * b0 * * part cIMAGE f0 b1
+ |- (((!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))) ==> ((\Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))) Q)) = ((\Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))) Q))
T c= c==> ! c= ! c==> f0 * b0 b1 c==> f0 ! * b0 b1 * / c= ! c==> f0 * b0 b1 c==> f0 ! * b0 b1 f1 * / c= ! c==> f0 * b0 b1 c==> f0 ! * b0 b1 f1
+ |- ((\Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))) Q)
T * / c= ! c==> f0 * b0 b1 c==> f0 ! * b0 b1 f1
+ |- ((\P. (!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))))) P)
T * / ! c= ! c==> b0 * b1 b2 c==> b0 ! * b1 b2 f0
+ |- ((((!t. ((t IN E) ==> (t HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))) = (!t. ((t IN E) ==> (t HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))))) = T) = (((!t. ((t IN E) ==> (t HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))))) = T))
T c= c= c= ! c==> cIN b0 f0 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> cIN b0 f0 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 cT c= c= ! c==> cIN b0 f0 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> cIN b0 f0 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 cT
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!t. ((t IN E) ==> (t HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))))) = ((!t. ((t IN E) ==> (((IMAGE f) t) HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c= ! c==> cIN b0 f1 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> cIN b0 f1 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 c= ! c==> cIN b0 f1 cHAS_SIZE * * part cIMAGE f0 b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> cIN b0 f1 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) /\ (!s. (!P. ((!u. ((u IN ((IMAGE (IMAGE f)) s)) ==> (P u))) = (!t. ((t IN s) ==> (P ((IMAGE f) t))))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c/\ c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= ! c==> cIN b2 * * part cIMAGE * part cIMAGE f0 b0 * b1 b2 ! c==> cIN b2 b0 * b1 * * part cIMAGE f0 b2
+ |- (!s. (!P. ((!u. ((u IN ((IMAGE (IMAGE f)) s)) ==> (P u))) = (!t. ((t IN s) ==> (P ((IMAGE f) t)))))))
T c= ! c==> cIN b0 * * part cIMAGE * part cIMAGE f0 f1 * f2 b0 ! c==> cIN b0 f1 * f2 * * part cIMAGE f0 b0
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- ((!e. ((e IN ((IMAGE (IMAGE f)) E)) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))) = (!t. ((t IN E) ==> (((IMAGE f) t) HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= ! c==> cIN b0 * * part cIMAGE * part cIMAGE f0 f1 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> cIN b0 f1 cHAS_SIZE * * part cIMAGE f0 b0 cNUMERAL cBIT0 cBIT1 c_0
+ ((linear f) /\ (!x. (!y. (((f x) = (f y)) ==> (x = y))))) |- (((!s. (!P. ((!u. ((u IN ((IMAGE (IMAGE f)) s)) ==> (P u))) = (!t. ((t IN s) ==> (P ((IMAGE f) t))))))) ==> ((\s. (!P. ((!u. ((u IN ((IMAGE (IMAGE f)) s)) ==> (P u))) = (!t. ((t IN s) ==> (P ((IMAGE f) t))))))) s)) = ((\s. (!P. ((!u. ((u IN ((IMAGE (IMAGE f)) s)) ==> (P u))) = (!t. ((t IN s) ==> (P ((IMAGE f) t))))))) s))
T c==> c/\ clinear f0 ! ! c==> c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! ! c= ! c==> cIN b2 * * part cIMAGE * part cIMAGE f0 b0 * b1 b2 ! c==> cIN b2 b0 * b1 * * part cIMAGE f0 b2 * / ! c= ! c==> cIN b2 * * part cIMAGE * part cIMAGE f0 b0 * b1 b2 ! c==> cIN b2 b0 * b1 * * part cIMAGE f0 b2 f1 * / ! c= ! c==> cIN b2 * * part cIMAGE * part cIMAGE f0 b0 * b1 b2 ! c==> cIN b2 b0 * b1 * * part cIMAGE f0 b2 f1
