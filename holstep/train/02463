N Hypermap.lemma_face_map_walkup_in_dart
C |- (!H. (!x. (((x IN (dart H)) /\ (~ (((face_map H) x) = x))) ==> ((((face_map H) x) IN (dart ((edge_walkup H) x))) /\ (((inverse (face_map H)) x) IN (dart ((edge_walkup H) x)))))))
T c==> c/\ cIN f0 * part cdart f1 c~ c= cface_map f1 f0 f0 c/\ cIN cface_map f1 f0 * part cdart cedge_walkup f1 f0 cIN cinverse * part cface_map f1 f0 * part cdart cedge_walkup f1 f0
D TRUTH
A |- T
T cT
D IN_DELETE
A |- (!s. (!x. (!y. ((x IN (s DELETE y)) = ((x IN s) /\ (~ (x = y)))))))
T c= cIN f0 * * part cDELETE f1 f2 c/\ cIN f0 f1 c~ c= f0 f2
D Hypermap.face_map_and_darts
A |- (!H. ((FINITE (dart H)) /\ ((permutes (face_map H)) (dart H))))
T c/\ cFINITE * part cdart f0 cpermutes * part cface_map f0 * part cdart f0
D Hypermap.lemma_dart_invariant
A |- (!H. (!x. ((x IN (dart H)) ==> ((((edge_map H) x) IN (dart H)) /\ ((((node_map H) x) IN (dart H)) /\ (((face_map H) x) IN (dart H)))))))
T c==> cIN f0 * part cdart f1 c/\ cIN cedge_map f1 f0 * part cdart f1 c/\ cIN cnode_map f1 f0 * part cdart f1 cIN cface_map f1 f0 * part cdart f1
D Hypermap.lemma_dart_inveriant_under_inverse_maps
A |- (!H. (!x. ((x IN (dart H)) ==> ((((inverse (edge_map H)) x) IN (dart H)) /\ ((((inverse (node_map H)) x) IN (dart H)) /\ (((inverse (face_map H)) x) IN (dart H)))))))
T c==> cIN f0 * part cdart f1 c/\ cIN cinverse * part cedge_map f1 f0 * part cdart f1 c/\ cIN cinverse * part cnode_map f1 f0 * part cdart f1 cIN cinverse * part cface_map f1 f0 * part cdart f1
D Hypermap.lemma_edge_walkup
A |- (!H. (!x. (((dart ((edge_walkup H) x)) = ((dart H) DELETE x)) /\ (((edge_map ((edge_walkup H) x)) = ((inverse ((swap (x , ((face_map H) x))) o (face_map H))) o (inverse ((swap (x , ((node_map H) x))) o (node_map H))))) /\ (((node_map ((edge_walkup H) x)) = ((swap (x , ((node_map H) x))) o (node_map H))) /\ ((face_map ((edge_walkup H) x)) = ((swap (x , ((face_map H) x))) o (face_map H))))))))
T c/\ c= * part cdart cedge_walkup f0 f1 * * part cDELETE * part cdart f0 f1 c/\ c= * part cedge_map cedge_walkup f0 f1 * * part co * part cinverse * * part co * part cswap c, f1 cface_map f0 f1 * part cface_map f0 * part cinverse * * part co * part cswap c, f1 cnode_map f0 f1 * part cnode_map f0 c/\ c= * part cnode_map cedge_walkup f0 f1 * * part co * part cswap c, f1 cnode_map f0 f1 * part cnode_map f0 c= * part cface_map cedge_walkup f0 f1 * * part co * part cswap c, f1 cface_map f0 f1 * part cface_map f0
D Hypermap.non_fixed_point_lemma
A |- (!s. (!p. (((permutes p) s) ==> (!x. ((~ ((p x) = x)) = (~ (((inverse p) x) = x)))))))
T c==> cpermutes f0 f1 ! c= c~ c= * f0 b0 b0 c~ c= cinverse f0 b0 b0
+ |- (((!s. (!p. (((permutes p) s) ==> (!x. ((~ ((p x) = x)) = (~ (((inverse p) x) = x))))))) ==> ((\s. (!p. (((permutes p) s) ==> (!x. ((~ ((p x) = x)) = (~ (((inverse p) x) = x))))))) s)) = ((\s. (!p. (((permutes p) s) ==> (!x. ((~ ((p x) = x)) = (~ (((inverse p) x) = x))))))) s))
T c= c==> ! ! c==> cpermutes b1 b0 ! c= c~ c= * b1 b2 b2 c~ c= cinverse b1 b2 b2 * / ! c==> cpermutes b1 b0 ! c= c~ c= * b1 b2 b2 c~ c= cinverse b1 b2 b2 f0 * / ! c==> cpermutes b1 b0 ! c= c~ c= * b1 b2 b2 c~ c= cinverse b1 b2 b2 f0
+ (~ (((face_map H) x) = x)), (x IN (dart H)) |- ((((face_map H) x) IN (dart ((edge_walkup H) x))) /\ (((inverse (face_map H)) x) IN (dart ((edge_walkup H) x))))
T c==> c~ c= cface_map f0 f1 f1 c==> cIN f1 * part cdart f0 c/\ cIN cface_map f0 f1 * part cdart cedge_walkup f0 f1 cIN cinverse * part cface_map f0 f1 * part cdart cedge_walkup f0 f1
+ |- ((\p. (((permutes p) s) ==> (!x. ((~ ((p x) = x)) = (~ (((inverse p) x) = x)))))) p)
T * / c==> cpermutes b0 f0 ! c= c~ c= * b0 b1 b1 c~ c= cinverse b0 b1 b1 f1
- |- (((edge_map ((edge_walkup H) x)) = ((inverse ((swap (x , ((face_map H) x))) o (face_map H))) o (inverse ((swap (x , ((node_map H) x))) o (node_map H))))) /\ (((node_map ((edge_walkup H) x)) = ((swap (x , ((node_map H) x))) o (node_map H))) /\ ((face_map ((edge_walkup H) x)) = ((swap (x , ((face_map H) x))) o (face_map H)))))
T c/\ c= * part cedge_map cedge_walkup f0 f1 * * part co * part cinverse * * part co * part cswap c, f1 cface_map f0 f1 * part cface_map f0 * part cinverse * * part co * part cswap c, f1 cnode_map f0 f1 * part cnode_map f0 c/\ c= * part cnode_map cedge_walkup f0 f1 * * part co * part cswap c, f1 cnode_map f0 f1 * part cnode_map f0 c= * part cface_map cedge_walkup f0 f1 * * part co * part cswap c, f1 cface_map f0 f1 * part cface_map f0
+ (x IN (dart H)) |- (((inverse (face_map H)) x) IN (dart H))
T c==> cIN f0 * part cdart f1 cIN cinverse * part cface_map f1 f0 * part cdart f1
+ |- ((\s. (!p. (((permutes p) s) ==> (!x. ((~ ((p x) = x)) = (~ (((inverse p) x) = x))))))) s)
T * / ! c==> cpermutes b1 b0 ! c= c~ c= * b1 b2 b2 c~ c= cinverse b1 b2 b2 f0
+ (x IN (dart H)) |- ((((inverse (node_map H)) x) IN (dart H)) /\ (((inverse (face_map H)) x) IN (dart H)))
T c==> cIN f0 * part cdart f1 c/\ cIN cinverse * part cnode_map f1 f0 * part cdart f1 cIN cinverse * part cface_map f1 f0 * part cdart f1
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((!H. (!x. ((x IN (dart H)) ==> ((((inverse (edge_map H)) x) IN (dart H)) /\ ((((inverse (node_map H)) x) IN (dart H)) /\ (((inverse (face_map H)) x) IN (dart H))))))) ==> ((\H. (!x. ((x IN (dart H)) ==> ((((inverse (edge_map H)) x) IN (dart H)) /\ ((((inverse (node_map H)) x) IN (dart H)) /\ (((inverse (face_map H)) x) IN (dart H))))))) H)) = ((\H. (!x. ((x IN (dart H)) ==> ((((inverse (edge_map H)) x) IN (dart H)) /\ ((((inverse (node_map H)) x) IN (dart H)) /\ (((inverse (face_map H)) x) IN (dart H))))))) H))
T c= c==> ! ! c==> cIN b1 * part cdart b0 c/\ cIN cinverse * part cedge_map b0 b1 * part cdart b0 c/\ cIN cinverse * part cnode_map b0 b1 * part cdart b0 cIN cinverse * part cface_map b0 b1 * part cdart b0 * / ! c==> cIN b1 * part cdart b0 c/\ cIN cinverse * part cedge_map b0 b1 * part cdart b0 c/\ cIN cinverse * part cnode_map b0 b1 * part cdart b0 cIN cinverse * part cface_map b0 b1 * part cdart b0 f0 * / ! c==> cIN b1 * part cdart b0 c/\ cIN cinverse * part cedge_map b0 b1 * part cdart b0 c/\ cIN cinverse * part cnode_map b0 b1 * part cdart b0 cIN cinverse * part cface_map b0 b1 * part cdart b0 f0
+ |- (((!x. (!y. ((x IN (s DELETE y)) = ((x IN s) /\ (~ (x = y)))))) ==> ((\x. (!y. ((x IN (s DELETE y)) = ((x IN s) /\ (~ (x = y)))))) x)) = ((\x. (!y. ((x IN (s DELETE y)) = ((x IN s) /\ (~ (x = y)))))) x))
T c= c==> ! ! c= cIN b0 * * part cDELETE f0 b1 c/\ cIN b0 f0 c~ c= b0 b1 * / ! c= cIN b0 * * part cDELETE f0 b1 c/\ cIN b0 f0 c~ c= b0 b1 f1 * / ! c= cIN b0 * * part cDELETE f0 b1 c/\ cIN b0 f0 c~ c= b0 b1 f1
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((~ (((face_map H) x) = x)) = (~ (((inverse (face_map H)) x) = x)))
T c= c~ c= cface_map f0 f1 f1 c~ c= cinverse * part cface_map f0 f1 f1
+ (x IN (dart H)) |- (((face_map H) x) IN (dart H))
T c==> cIN f0 * part cdart f1 cIN cface_map f1 f0 * part cdart f1
+ ((x IN (dart H)) /\ (~ (((face_map H) x) = x))), (x IN (dart H)) |- ((((face_map H) x) IN (dart ((edge_walkup H) x))) /\ (((inverse (face_map H)) x) IN (dart ((edge_walkup H) x))))
T c==> c/\ cIN f0 * part cdart f1 c~ c= cface_map f1 f0 f0 c==> cIN f0 * part cdart f1 c/\ cIN cface_map f1 f0 * part cdart cedge_walkup f1 f0 cIN cinverse * part cface_map f1 f0 * part cdart cedge_walkup f1 f0
+ (x IN (dart H)) |- ((((inverse (face_map H)) x) IN (dart H)) = T)
T c==> cIN f0 * part cdart f1 c= cIN cinverse * part cface_map f1 f0 * part cdart f1 cT
+ |- (((!y. ((x IN (s DELETE y)) = ((x IN s) /\ (~ (x = y))))) ==> ((\y. ((x IN (s DELETE y)) = ((x IN s) /\ (~ (x = y))))) y)) = ((\y. ((x IN (s DELETE y)) = ((x IN s) /\ (~ (x = y))))) y))
T c= c==> ! c= cIN f0 * * part cDELETE f1 b0 c/\ cIN f0 f1 c~ c= f0 b0 * / c= cIN f0 * * part cDELETE f1 b0 c/\ cIN f0 f1 c~ c= f0 b0 f2 * / c= cIN f0 * * part cDELETE f1 b0 c/\ cIN f0 f1 c~ c= f0 b0 f2
- |- ((edge_map ((edge_walkup H) x)) = ((inverse ((swap (x , ((face_map H) x))) o (face_map H))) o (inverse ((swap (x , ((node_map H) x))) o (node_map H)))))
T c= * part cedge_map cedge_walkup f0 f1 * * part co * part cinverse * * part co * part cswap c, f1 cface_map f0 f1 * part cface_map f0 * part cinverse * * part co * part cswap c, f1 cnode_map f0 f1 * part cnode_map f0
- |- ((node_map ((edge_walkup H) x)) = ((swap (x , ((node_map H) x))) o (node_map H)))
T c= * part cnode_map cedge_walkup f0 f1 * * part co * part cswap c, f1 cnode_map f0 f1 * part cnode_map f0
- (x = ((face_map H) x)) |- (((face_map H) x) = x)
T c==> c= f0 cface_map f1 f0 c= cface_map f1 f0 f0
- |- (((node_map ((edge_walkup H) x)) = ((swap (x , ((node_map H) x))) o (node_map H))) /\ ((face_map ((edge_walkup H) x)) = ((swap (x , ((face_map H) x))) o (face_map H))))
T c/\ c= * part cnode_map cedge_walkup f0 f1 * * part co * part cswap c, f1 cnode_map f0 f1 * part cnode_map f0 c= * part cface_map cedge_walkup f0 f1 * * part co * part cswap c, f1 cface_map f0 f1 * part cface_map f0
- |- ((x = x) = T)
T c= c= f0 f0 cT
- (((face_map H) x) = x) |- (x = ((face_map H) x))
T c==> c= cface_map f0 f1 f1 c= f1 cface_map f0 f1
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((face_map ((edge_walkup H) x)) = ((swap (x , ((face_map H) x))) o (face_map H)))
T c= * part cface_map cedge_walkup f0 f1 * * part co * part cswap c, f1 cface_map f0 f1 * part cface_map f0
- (~ (((face_map H) x) = x)) |- (((~ (x = ((face_map H) x))) ==> ((x = ((face_map H) x)) = F)) = ((x = ((face_map H) x)) = F))
T c==> c~ c= cface_map f0 f1 f1 c= c==> c~ c= f1 cface_map f0 f1 c= c= f1 cface_map f0 f1 cF c= c= f1 cface_map f0 f1 cF
- (~ (((face_map H) x) = x)) |- ((x = ((face_map H) x)) = F)
T c==> c~ c= cface_map f0 f1 f1 c= c= f1 cface_map f0 f1 cF
- (x IN (dart H)) |- ((x IN (dart H)) = T)
T c==> cIN f0 * part cdart f1 c= cIN f0 * part cdart f1 cT
- (~ (((face_map H) x) = x)) |- (~ (x = ((face_map H) x)))
T c==> c~ c= cface_map f0 f1 f1 c~ c= f1 cface_map f0 f1
