N List_hypermap_iso.hypermap_of_split_list_eq3
C |- (!L. (!d. ((((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (uniq (list_of_darts L))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))))
T c==> c/\ c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cuniq clist_of_darts f0 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D list_INDUCT
A |- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))))
T c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
D ALL2
A |- (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))
T c/\ c= cALL2 f0 cNIL cNIL cT c/\ c= cALL2 f0 cCONS f1 f2 cNIL cF c/\ c= cALL2 f0 cNIL cCONS f3 f4 cF c= cALL2 f0 cCONS f1 f2 cCONS f3 f4 c/\ * * f0 f1 f3 cALL2 f0 f2 f4
D ssreflect_eq_def
A |- (!v. (!P. (((ssreflect_eq v) P) = P)))
T c= cssreflect_eq f0 f1 f1
D bool_elim
A |- (!P. (((P T) /\ (P F)) ==> (!x. (P x))))
T c==> c/\ * f0 cT * f0 cF ! * f0 b0
D Seq.size_cons
A |- (!h. (!t. ((sizel ((CONS h) t)) = (SUC (sizel t)))))
T c= csizel cCONS f0 f1 cSUC csizel f1
D Seq.rot0
A |- (!s. (((rot (NUMERAL _0)) s) = s))
T c= crot cNUMERAL c_0 f0 f0
D Seq.rotr
A |- (!n. (!s. (((rotr n) s) = ((rot ((sizel s) - n)) s))))
T c= crotr f0 f1 crot c- csizel f1 f0 f1
D Seq.size_rot
A |- (!n0. (!s. ((sizel ((rot n0) s)) = (sizel s))))
T c= csizel crot f0 f1 csizel f1
D Seq.size_rotr
A |- (!n0. (!s. ((sizel ((rotr n0) s)) = (sizel s))))
T c= csizel crotr f0 f1 csizel f1
D Seq2.ALL2_cat
A |- (!f. (!s1. (!t1. (!s2. (!t2. (((sizel s1) = (sizel s2)) ==> ((((ALL2 f) ((cat s1) t1)) ((cat s2) t2)) = ((((ALL2 f) s1) s2) /\ (((ALL2 f) t1) t2)))))))))
T c==> c= csizel f0 csizel f1 c= cALL2 f2 ccat f0 f3 ccat f1 f4 c/\ cALL2 f2 f0 f1 cALL2 f2 f3 f4
D Seq2.rot_rot_eq_rot
A |- (!s. (!m. (!n. (?k. (((rot m) ((rot n) s)) = ((rot k) s))))))
T c? / c= crot f0 crot f1 f2 crot b0 f2
D List_hypermap.find_face_alt
A |- (!L. (!d. (((find_face L) d) = (list_pairs ((find_pair_list L) d)))))
T c= cfind_face f0 f1 clist_pairs cfind_pair_list f0 f1
D List_hypermap.size_list_pairs
A |- (!l. ((sizel (list_pairs l)) = (sizel l)))
T c= csizel clist_pairs f0 csizel f0
D List_hypermap_iso.split_list_face
A |- (!f. ((split_list_face f) = (((COND ((sizel f) <= (NUMERAL (BIT1 (BIT1 _0))))) ((CONS f) NIL)) ((CONS ((take (NUMERAL (BIT1 (BIT1 _0)))) f)) ((CONS ((CONS (HD f)) ((dropl (NUMERAL (BIT0 (BIT1 _0)))) f))) NIL)))))
T c= csplit_list_face f0 cCOND c<= csizel f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cNIL cCONS ctake cNUMERAL cBIT1 cBIT1 c_0 f0 cCONS cCONS cHD f0 cdropl cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL
D List_hypermap_iso.split_list_hyp_alt
A |- (!L. (!d. (((MEM d) (list_of_darts L)) ==> (((LET (\f. (\n. (LET_END (((split_list_hyp L) d) = ((cat ((take n) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))))) ((find_pair_list L) d)) ((indexl ((find_pair_list L) d)) L)))))
T c==> cMEM f0 clist_of_darts f1 cLET / / cLET_END c= csplit_list_hyp f1 f0 ccat ctake b1 f1 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs b0 b0 cdropl c+ b1 cNUMERAL cBIT1 c_0 f1 cfind_pair_list f1 f0 cindexl cfind_pair_list f1 f0 f1
D List_hypermap_iso.d_not_in_dart_split_eq
A |- (!L. (!d. ((~ ((MEM d) (list_of_darts L))) ==> (((split_list_hyp L) d) = L))))
T c==> c~ cMEM f0 clist_of_darts f1 c= csplit_list_hyp f1 f0 f1
D List_hypermap_iso.list_eq_cat_find_pair_list
A |- (!L. (!d. (((MEM d) (list_of_darts L)) ==> (((LET (\f. (\n. (LET_END (L = ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))))) ((find_pair_list L) d)) ((indexl ((find_pair_list L) d)) L)))))
T c==> cMEM f0 clist_of_darts f1 cLET / / cLET_END c= f1 ccat ctake b1 f1 ccat cCONS b0 cNIL cdropl c+ b1 cNUMERAL cBIT1 c_0 f1 cfind_pair_list f1 f0 cindexl cfind_pair_list f1 f0 f1
D List_hypermap_iso.rot_hypermap_of_list_eq
A |- (!L1. (!L2. (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) /\ (uniq (list_of_darts L1))) ==> ((hypermap_of_list L2) = (hypermap_of_list L1)))))
T c==> c/\ cALL2 / / c? / c= b1 crot b2 b0 f0 f1 cuniq clist_of_darts f0 c= chypermap_of_list f1 chypermap_of_list f0
+ |- (T = (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) NIL) NIL))
T c= cT cALL2 / / c? / c= b1 crot b2 b0 cNIL cNIL
- |- (!f. (((\f. (((find_pair_list L) d) = f)) f) ==> (?f. (((find_pair_list L) d) = f))))
T c==> * / c= cfind_pair_list f0 f1 b0 f2 c? / c= cfind_pair_list f0 f1 b0
- |- ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q'))))
T c==> c= cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 f3 c==> c==> f3 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 f4 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> f3 f4
+ |- ((((~ ((MEM d) (list_of_darts L))) ==> (((split_list_hyp L) d) = L)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))
T c= c==> c==> c~ cMEM f0 clist_of_darts f1 c= csplit_list_hyp f1 f0 f1 c= chypermap_of_list csplit_list_hyp f1 f0 chypermap_of_list f1 c= chypermap_of_list csplit_list_hyp f1 f0 chypermap_of_list f1
+ (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i) |- ((((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i) /\ (?n. (((rot ((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0)))) ((rot ((indexl d) (list_pairs f))) f)) = ((rot n) f))))
T c==> c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 f2 c/\ c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 f2 c? / c= crot c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 crot b0 f1
- |- ((((find_pair_list L) d) = f) ==> (?f. (((find_pair_list L) d) = f)))
T c==> c= cfind_pair_list f0 f1 f2 c? / c= cfind_pair_list f0 f1 b0
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
+ ((\i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)) i) |- (((\i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)) i) /\ (?n. (((rot ((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0)))) ((rot ((indexl d) (list_pairs f))) f)) = ((rot n) f))))
T c==> * / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0 f2 c/\ * / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0 f2 c? / c= crot c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 crot b0 f1
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)) |- ((((find_pair_list L) d) = f) ==> (((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c==> c= cfind_pair_list f0 f1 f2 c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0
+ ((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) |- (~ ((MEM d) (list_of_darts L)))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c~ cMEM f1 clist_of_darts f2
+ (((split_list_hyp L) d) = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) = (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) ((split_list_hyp L) d)))
T c==> c= csplit_list_hyp f0 f1 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 c= cALL2 / / c? / c= b1 crot b2 b0 f0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 cALL2 / / c? / c= b1 crot b2 b0 f0 csplit_list_hyp f0 f1
- |- ((((\i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)) i) ==> (?i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i))) = T)
T c= c==> * / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0 f2 c? / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0 cT
+ ((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) |- (((((split_list_hyp L) d) = L) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = ((~ ((MEM d) (list_of_darts L))) /\ ((((split_list_hyp L) d) = L) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= c==> c= csplit_list_hyp f2 f1 f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c/\ c~ cMEM f1 clist_of_darts f2 c==> c= csplit_list_hyp f2 f1 f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)) |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((take n) L)) ((take n) L)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c/\ cALL2 / / c? / c= b1 crot b2 b0 ctake f0 f1 ctake f0 f1 cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1
- ((P T) /\ (P F)) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!x. (P x)))
T c==> c/\ * f0 cT * f0 cF c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! * f0 b0
+ |- (?n. (h = ((rot n) h)))
T c? / c= f0 crot b0 f0
+ |- ((\L. (!d. (((MEM d) (list_of_darts L)) ==> (L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))))) L)
T * / ! c==> cMEM b1 clist_of_darts b0 c= b0 ccat ctake cindexl cfind_pair_list b0 b1 b0 b0 ccat cCONS cfind_pair_list b0 b1 cNIL cdropl c+ cindexl cfind_pair_list b0 b1 b0 cNUMERAL cBIT1 c_0 b0 f0
- |- (((!q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q'))))) ==> ((\q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q'))))) q')) = ((\q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 f3 c==> c==> f3 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b0 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> f3 b0 * / c==> c= cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 f3 c==> c==> f3 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b0 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> f3 b0 f4 * / c==> c= cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 f3 c==> c==> f3 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b0 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> f3 b0 f4
+ |- (((!q'. ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q'))))) ==> ((\q'. ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q'))))) q')) = ((\q'. ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT f3 c==> c==> f3 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> f3 b0 * / c==> c= cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT f3 c==> c==> f3 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> f3 b0 f4 * / c==> c= cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT f3 c==> c==> f3 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> f3 b0 f4
- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))) |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c==> c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0 c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
+ (((MEM d) (list_of_darts L)) = x) |- ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = x)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))
T c==> c= cMEM f0 clist_of_darts f1 f2 c= c==> cssreflect_eq f3 c= cMEM f0 clist_of_darts f1 f2 c= chypermap_of_list csplit_list_hyp f1 f0 chypermap_of_list f1 c= chypermap_of_list csplit_list_hyp f1 f0 chypermap_of_list f1
+ |- ((SUC (sizel NIL)) = (SUC (sizel NIL)))
T c= cSUC csizel cNIL cSUC csizel cNIL
+ |- (P = ((ssreflect_eq mem_d) P))
T c= f0 cssreflect_eq f1 f0
- |- ((?f. (((find_pair_list L) d) = f)) ==> (?f. (((find_pair_list L) d) = f)))
T c==> c? / c= cfind_pair_list f0 f1 b0 c? / c= cfind_pair_list f0 f1 b0
+ |- (?j. (((indexl d) (list_pairs f)) = j))
T c? / c= cindexl f0 clist_pairs f1 b0
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)) |- (T /\ ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS f) NIL)) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((dropl (n + (NUMERAL (BIT1 _0)))) L)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c/\ cT c/\ cALL2 / / c? / c= b1 crot b2 b0 cCONS f0 cNIL cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cALL2 / / c? / c= b1 crot b2 b0 cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 cdropl c+ f2 cNUMERAL cBIT1 c_0 f3
- |- ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))))
T c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2
- ((\n. (((indexl f) L) = n)) n) |- (((\n. (((indexl f) L) = n)) n) /\ (?n. (((indexl f) L) = n)))
T c==> * / c= cindexl f0 f1 b0 f2 c/\ * / c= cindexl f0 f1 b0 f2 c? / c= cindexl f0 f1 b0
+ |- (((!L1. (!L2. (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) /\ (uniq (list_of_darts L1))) ==> ((hypermap_of_list L2) = (hypermap_of_list L1))))) ==> ((\L1. (!L2. (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) /\ (uniq (list_of_darts L1))) ==> ((hypermap_of_list L2) = (hypermap_of_list L1))))) L1)) = ((\L1. (!L2. (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) /\ (uniq (list_of_darts L1))) ==> ((hypermap_of_list L2) = (hypermap_of_list L1))))) L1))
T c= c==> ! ! c==> c/\ cALL2 / / c? / c= b3 crot b4 b2 b0 b1 cuniq clist_of_darts b0 c= chypermap_of_list b1 chypermap_of_list b0 * / ! c==> c/\ cALL2 / / c? / c= b3 crot b4 b2 b0 b1 cuniq clist_of_darts b0 c= chypermap_of_list b1 chypermap_of_list b0 f0 * / ! c==> c/\ cALL2 / / c? / c= b3 crot b4 b2 b0 b1 cuniq clist_of_darts b0 c= chypermap_of_list b1 chypermap_of_list b0 f0
- (((find_pair_list L) d) = f) |- ((((find_pair_list L) d) = f) /\ (?f. (((find_pair_list L) d) = f)))
T c==> c= cfind_pair_list f0 f1 f2 c/\ c= cfind_pair_list f0 f1 f2 c? / c= cfind_pair_list f0 f1 b0
- |- ((?x. (((MEM d) (list_of_darts L)) = x)) ==> (?x. (((MEM d) (list_of_darts L)) = x)))
T c==> c? / c= cMEM f0 clist_of_darts f1 b0 c? / c= cMEM f0 clist_of_darts f1 b0
- ((\i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)) i) |- (((\i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)) i) /\ (?i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)))
T c==> * / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0 f2 c/\ * / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0 f2 c? / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0
+ |- ((((\f1. (\f2. (?n. (f2 = ((rot n) f1))))) f) ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) NIL) NIL))
T c/\ * * / / c? / c= b1 crot b2 b0 f0 crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cALL2 / / c? / c= b1 crot b2 b0 cNIL cNIL
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)), ((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))), ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- (((((MEM d) (list_of_darts L)) /\ ((((split_list_hyp L) d) = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) ((split_list_hyp L) d)))) ==> ((((MEM d) (list_of_darts L)) ==> (((split_list_hyp L) d) = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) ((split_list_hyp L) d)))) = ((((MEM d) (list_of_darts L)) ==> (((split_list_hyp L) d) = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) ((split_list_hyp L) d))))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c==> c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> cssreflect_eq f2 cMEM f1 clist_of_darts f0 c= c==> c/\ cMEM f1 clist_of_darts f0 c==> c= csplit_list_hyp f0 f1 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 cALL2 / / c? / c= b1 crot b2 b0 f0 csplit_list_hyp f0 f1 c==> c==> cMEM f1 clist_of_darts f0 c= csplit_list_hyp f0 f1 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 cALL2 / / c? / c= b1 crot b2 b0 f0 csplit_list_hyp f0 f1 c==> c==> cMEM f1 clist_of_darts f0 c= csplit_list_hyp f0 f1 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 cALL2 / / c? / c= b1 crot b2 b0 f0 csplit_list_hyp f0 f1
+ |- ((\s. (?k. (((rot i) ((rot j) s)) = ((rot k) s)))) f)
T * / c? / c= crot f0 crot f1 b0 crot b1 b0 f2
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)) |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((take n) L)) ((take n) L)) /\ ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS f) NIL)) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((dropl (n + (NUMERAL (BIT1 _0)))) L)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c/\ cALL2 / / c? / c= b1 crot b2 b0 ctake f0 f1 ctake f0 f1 c/\ cALL2 / / c? / c= b1 crot b2 b0 cCONS f2 cNIL cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cALL2 / / c? / c= b1 crot b2 b0 cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 cdropl c+ f0 cNUMERAL cBIT1 c_0 f1
- |- ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q'))))
T c==> c= cssreflect_eq f0 cMEM f1 clist_of_darts f2 f3 c==> c==> f3 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 f4 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> f3 f4
+ |- ((\n0. (!s. ((sizel ((rot n0) s)) = (sizel s)))) n0)
T * / ! c= csizel crot b0 b1 csizel b1 f0
- (((MEM d) (list_of_darts L)) = x) |- ((\x. (((MEM d) (list_of_darts L)) = x)) x)
T c==> c= cMEM f0 clist_of_darts f1 f2 * / c= cMEM f0 clist_of_darts f1 b0 f2
- |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)) |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS f) NIL)) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((take n) L)) ((take n) L)) /\ ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS f) NIL)) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((dropl (n + (NUMERAL (BIT1 _0)))) L)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c= cALL2 / / c? / c= b1 crot b2 b0 cCONS f0 cNIL cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL c/\ cALL2 / / c? / c= b1 crot b2 b0 ctake f2 f3 ctake f2 f3 c/\ cALL2 / / c? / c= b1 crot b2 b0 cCONS f0 cNIL cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cALL2 / / c? / c= b1 crot b2 b0 cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 cdropl c+ f2 cNUMERAL cBIT1 c_0 f3
+ |- (((!h. (!t. ((sizel ((CONS h) t)) = (SUC (sizel t))))) ==> ((\h. (!t. ((sizel ((CONS h) t)) = (SUC (sizel t))))) h)) = ((\h. (!t. ((sizel ((CONS h) t)) = (SUC (sizel t))))) h))
T c= c==> ! ! c= csizel cCONS b0 b1 cSUC csizel b1 * / ! c= csizel cCONS b0 b1 cSUC csizel b1 f0 * / ! c= csizel cCONS b0 b1 cSUC csizel b1 f0
+ |- (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h) t)) ((CONS h) t))) = T)
T c= c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f0 cALL2 / / c? / c= b1 crot b2 b0 cCONS f1 f0 cCONS f1 f0 cT
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)) |- ((((indexl f) L) = n) ==> (((sizel f) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take ((indexl f) L)) L)) ((cat ((CONS f) NIL)) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take ((indexl f) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L))))))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c==> c= cindexl f0 f1 f2 c==> c<= csizel f0 cNUMERAL cBIT1 cBIT1 c_0 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake cindexl f0 f1 f1 ccat cCONS f0 cNIL cdropl c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f1 ccat ctake cindexl f0 f1 f1 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f0 f0 cdropl c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f1
+ (uniq (list_of_darts L)), ((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- (((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))
T c==> cuniq clist_of_darts f0 c==> c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> cssreflect_eq f2 c= cMEM f1 clist_of_darts f0 cT c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0
+ |- ((\n. (((rot k) f) = ((rot n) f))) k)
T * / c= crot f0 f1 crot b0 f1 f0
- (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) ==> ((hypermap_of_list L2) = (hypermap_of_list L)))), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) |- ((!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) ==> ((hypermap_of_list L2) = (hypermap_of_list L)))) /\ ((hypermap_of_list L2) = (hypermap_of_list L)))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c= chypermap_of_list b0 chypermap_of_list f0 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f1 c/\ ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c= chypermap_of_list b0 chypermap_of_list f0 c= chypermap_of_list f1 chypermap_of_list f0
- (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i) |- ((\i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)) i)
T c==> c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 f2 * / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0 f2
+ |- (((T /\ A) = A) /\ ((A /\ T) = A))
T c/\ c= c/\ cT f0 f0 c= c/\ f0 cT f0
+ |- ((\s. ((sizel ((rot n0) s)) = (sizel s))) s)
T * / c= csizel crot f0 b0 csizel b0 f1
+ |- (((?k. (P k)) ==> Q) = (!k. ((P k) ==> Q)))
T c= c==> c? / * f0 b0 f1 ! c==> * f0 b0 f1
+ |- ((\v. (!P. (((ssreflect_eq v) P) = P))) v)
T * / ! c= cssreflect_eq b0 b1 b1 f0
+ |- ((((MEM d) (list_of_darts L)) = ((MEM d) (list_of_darts L))) = ((\x. (((MEM d) (list_of_darts L)) = x)) ((MEM d) (list_of_darts L))))
T c= c= cMEM f0 clist_of_darts f1 cMEM f0 clist_of_darts f1 * / c= cMEM f0 clist_of_darts f1 b0 cMEM f0 clist_of_darts f1
+ (uniq (list_of_darts L)) |- (((!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) ==> ((hypermap_of_list L2) = (hypermap_of_list L)))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))
T c==> cuniq clist_of_darts f0 c= c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c= chypermap_of_list b0 chypermap_of_list f0 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0
+ |- (((rot k) f) = ((rot k) f))
T c= crot f0 f1 crot f0 f1
- |- (!x. (((\x. (((MEM d) (list_of_darts L)) = x)) x) ==> (?x. (((MEM d) (list_of_darts L)) = x))))
T c==> * / c= cMEM f0 clist_of_darts f1 b0 f2 c? / c= cMEM f0 clist_of_darts f1 b0
+ (uniq (list_of_darts L)) |- ((((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) /\ T) ==> ((hypermap_of_list L2) = (hypermap_of_list L))) = T)
T c==> cuniq clist_of_darts f0 c= c==> c/\ cALL2 / / c? / c= b1 crot b2 b0 f0 f1 cT c= chypermap_of_list f1 chypermap_of_list f0 cT
+ ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- ((MEM d) (list_of_darts L))
T c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 cMEM f1 clist_of_darts f2
+ |- ((\h. (!t. ((sizel ((CONS h) t)) = (SUC (sizel t))))) h)
T * / ! c= csizel cCONS b0 b1 cSUC csizel b1 f0
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)), ((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))), ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- ((((split_list_hyp L) d) = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) ((split_list_hyp L) d)))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c==> c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> cssreflect_eq f2 cMEM f1 clist_of_darts f0 c==> c= csplit_list_hyp f0 f1 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 cALL2 / / c? / c= b1 crot b2 b0 f0 csplit_list_hyp f0 f1
+ ((\n. (((indexl f) L) = n)) n) |- (((((indexl f) L) = n) ==> (((sizel f) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take ((indexl f) L)) L)) ((cat ((CONS f) NIL)) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take ((indexl f) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L)))))) = (((sizel f) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take ((indexl f) L)) L)) ((cat ((CONS f) NIL)) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take ((indexl f) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L))))))
T c==> * / c= cindexl f0 f1 b0 f2 c= c==> c= cindexl f0 f1 f2 c==> c<= csizel f0 cNUMERAL cBIT1 cBIT1 c_0 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake cindexl f0 f1 f1 ccat cCONS f0 cNIL cdropl c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f1 ccat ctake cindexl f0 f1 f1 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f0 f0 cdropl c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f1 c==> c<= csizel f0 cNUMERAL cBIT1 cBIT1 c_0 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake cindexl f0 f1 f1 ccat cCONS f0 cNIL cdropl c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f1 ccat ctake cindexl f0 f1 f1 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f0 f0 cdropl c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f1
+ |- (((((sizel ((CONS f) NIL)) = (sizel ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL))) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS f) NIL)) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((dropl (n + (NUMERAL (BIT1 _0)))) L)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((take n) L)) ((take n) L)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((take n) L)) ((take n) L)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))
T c= c==> c==> c= csizel cCONS f0 cNIL csizel cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL c= cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f0 cNIL cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 c/\ cALL2 / / c? / c= b1 crot b2 b0 cCONS f0 cNIL cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cALL2 / / c? / c= b1 crot b2 b0 cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 c/\ cALL2 / / c? / c= b1 crot b2 b0 ctake f2 f3 ctake f2 f3 cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f0 cNIL cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 c/\ cALL2 / / c? / c= b1 crot b2 b0 ctake f2 f3 ctake f2 f3 cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f0 cNIL cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cdropl c+ f2 cNUMERAL cBIT1 c_0 f3
+ |- (?n. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = ((rot n) f)))
T c? / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 crot b0 f1
- |- ((((find_pair_list L) d) = f) = ((\f. (((find_pair_list L) d) = f)) f))
T c= c= cfind_pair_list f0 f1 f2 * / c= cfind_pair_list f0 f1 b0 f2
+ |- ((\P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) P)
T * / c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 f0
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)) |- (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS f) NIL)) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((dropl (n + (NUMERAL (BIT1 _0)))) L)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((take n) L)) ((take n) L)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c==> c= cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f0 cNIL cdropl c+ f1 cNUMERAL cBIT1 c_0 f2 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f0 f0 cNIL cdropl c+ f1 cNUMERAL cBIT1 c_0 f2 c/\ cALL2 / / c? / c= b1 crot b2 b0 cCONS f0 cNIL cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f0 f0 cNIL cALL2 / / c? / c= b1 crot b2 b0 cdropl c+ f1 cNUMERAL cBIT1 c_0 f2 cdropl c+ f1 cNUMERAL cBIT1 c_0 f2 c/\ cALL2 / / c? / c= b1 crot b2 b0 ctake f1 f2 ctake f1 f2 cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f0 cNIL cdropl c+ f1 cNUMERAL cBIT1 c_0 f2 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f0 f0 cNIL cdropl c+ f1 cNUMERAL cBIT1 c_0 f2
+ |- (((!f. ((split_list_face f) = (((COND ((sizel f) <= (NUMERAL (BIT1 (BIT1 _0))))) ((CONS f) NIL)) ((CONS ((take (NUMERAL (BIT1 (BIT1 _0)))) f)) ((CONS ((CONS (HD f)) ((dropl (NUMERAL (BIT0 (BIT1 _0)))) f))) NIL))))) ==> ((\f. ((split_list_face f) = (((COND ((sizel f) <= (NUMERAL (BIT1 (BIT1 _0))))) ((CONS f) NIL)) ((CONS ((take (NUMERAL (BIT1 (BIT1 _0)))) f)) ((CONS ((CONS (HD f)) ((dropl (NUMERAL (BIT0 (BIT1 _0)))) f))) NIL))))) f)) = ((\f. ((split_list_face f) = (((COND ((sizel f) <= (NUMERAL (BIT1 (BIT1 _0))))) ((CONS f) NIL)) ((CONS ((take (NUMERAL (BIT1 (BIT1 _0)))) f)) ((CONS ((CONS (HD f)) ((dropl (NUMERAL (BIT0 (BIT1 _0)))) f))) NIL))))) f))
T c= c==> ! c= csplit_list_face b0 cCOND c<= csizel b0 cNUMERAL cBIT1 cBIT1 c_0 cCONS b0 cNIL cCONS ctake cNUMERAL cBIT1 cBIT1 c_0 b0 cCONS cCONS cHD b0 cdropl cNUMERAL cBIT0 cBIT1 c_0 b0 cNIL * / c= csplit_list_face b0 cCOND c<= csizel b0 cNUMERAL cBIT1 cBIT1 c_0 cCONS b0 cNIL cCONS ctake cNUMERAL cBIT1 cBIT1 c_0 b0 cCONS cCONS cHD b0 cdropl cNUMERAL cBIT0 cBIT1 c_0 b0 cNIL f0 * / c= csplit_list_face b0 cCOND c<= csizel b0 cNUMERAL cBIT1 cBIT1 c_0 cCONS b0 cNIL cCONS ctake cNUMERAL cBIT1 cBIT1 c_0 b0 cCONS cCONS cHD b0 cdropl cNUMERAL cBIT0 cBIT1 c_0 b0 cNIL f0
+ |- (((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2
- (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) |- ((!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) ==> ((hypermap_of_list L2) = (hypermap_of_list L)))) ==> ((hypermap_of_list L2) = (hypermap_of_list L)))
T c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f1 c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c= chypermap_of_list b0 chypermap_of_list f0 c= chypermap_of_list f1 chypermap_of_list f0
- |- (((!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))) ==> ((\t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))) t2)) = ((\t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))) t2))
T c= c==> ! c/\ c= cALL2 f0 cNIL cNIL cT c/\ c= cALL2 f0 cCONS f1 f2 cNIL cF c/\ c= cALL2 f0 cNIL cCONS f3 b0 cF c= cALL2 f0 cCONS f1 f2 cCONS f3 b0 c/\ * * f0 f1 f3 cALL2 f0 f2 b0 * / c/\ c= cALL2 f0 cNIL cNIL cT c/\ c= cALL2 f0 cCONS f1 f2 cNIL cF c/\ c= cALL2 f0 cNIL cCONS f3 b0 cF c= cALL2 f0 cCONS f1 f2 cCONS f3 b0 c/\ * * f0 f1 f3 cALL2 f0 f2 b0 f4 * / c/\ c= cALL2 f0 cNIL cNIL cT c/\ c= cALL2 f0 cCONS f1 f2 cNIL cF c/\ c= cALL2 f0 cNIL cCONS f3 b0 cF c= cALL2 f0 cCONS f1 f2 cCONS f3 b0 c/\ * * f0 f1 f3 cALL2 f0 f2 b0 f4
- (uniq (list_of_darts L1)), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) |- ((uniq (list_of_darts L1)) /\ ((hypermap_of_list L2) = (hypermap_of_list L1)))
T c==> cuniq clist_of_darts f0 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f1 c/\ cuniq clist_of_darts f0 c= chypermap_of_list f1 chypermap_of_list f0
+ |- ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))))
T c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- (!i. (((\i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)) i) ==> (?i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i))))
T c==> * / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0 f2 c? / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)), ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take n) L)) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((take n) L)) ((take n) L)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) |- (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take n) L)) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((take n) L)) ((take n) L)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take n) L)) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c==> c= cALL2 / / c? / c= b1 crot b2 b0 ccat ctake f0 f1 ccat cCONS f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat ctake f0 f1 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 c/\ cALL2 / / c? / c= b1 crot b2 b0 ctake f0 f1 ctake f0 f1 cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 c/\ c= cALL2 / / c? / c= b1 crot b2 b0 ccat ctake f0 f1 ccat cCONS f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat ctake f0 f1 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 c/\ cALL2 / / c? / c= b1 crot b2 b0 ctake f0 f1 ctake f0 f1 cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake f0 f1 ccat cCONS f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat ctake f0 f1 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1
- |- ((\p'. (!q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q')))))) p')
T * / ! c==> c= cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 b0 c==> c==> b0 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b1 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> b0 b1 f3
+ |- (((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))))
T c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2
+ |- ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q'))))
T c==> c= cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT f3 c==> c==> f3 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 f4 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> f3 f4
+ |- (((((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) /\ (uniq (list_of_darts L1))) ==> ((hypermap_of_list L2) = (hypermap_of_list L1))) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) ==> ((uniq (list_of_darts L1)) ==> ((hypermap_of_list L2) = (hypermap_of_list L1))))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) ==> ((uniq (list_of_darts L1)) ==> ((hypermap_of_list L2) = (hypermap_of_list L1)))))
T c= c==> c==> c/\ cALL2 / / c? / c= b1 crot b2 b0 f0 f1 cuniq clist_of_darts f0 c= chypermap_of_list f1 chypermap_of_list f0 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f1 c==> cuniq clist_of_darts f0 c= chypermap_of_list f1 chypermap_of_list f0 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f1 c==> cuniq clist_of_darts f0 c= chypermap_of_list f1 chypermap_of_list f0
+ |- ((!a1. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) a1) a1) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h) a1)) ((CONS h) a1)))) = T)
T c= ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 b0 cALL2 / / c? / c= b2 crot b3 b1 cCONS f0 b0 cCONS f0 b0 cT
+ (((rot i) ((rot j) f)) = ((rot k) f)) |- ((((rot i) ((rot j) f)) = ((rot k) f)) /\ (?n. (((rot i) ((rot j) f)) = ((rot n) f))))
T c==> c= crot f0 crot f1 f2 crot f3 f2 c/\ c= crot f0 crot f1 f2 crot f3 f2 c? / c= crot f0 crot f1 f2 crot b0 f2
- ((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) |- (((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) = T)
T c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cT
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((\P. (((P T) /\ (P F)) ==> (!x. (P x)))) P)
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 * / c==> c/\ * b0 cT * b0 cF ! * b0 b1 f0
+ |- (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) NIL) NIL) /\ (!a0. (!a1. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) a1) a1) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS a0) a1)) ((CONS a0) a1)))))) ==> (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)))
T c==> c/\ cALL2 / / c? / c= b1 crot b2 b0 cNIL cNIL ! ! c==> cALL2 / / c? / c= b3 crot b4 b2 b1 b1 cALL2 / / c? / c= b3 crot b4 b2 cCONS b0 b1 cCONS b0 b1 ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0
+ |- ((?i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)) ==> (?n. (((rot ((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0)))) ((rot ((indexl d) (list_pairs f))) f)) = ((rot n) f))))
T c==> c? / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0 c? / c= crot c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 crot b0 f1
- |- (((!q'. ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q'))))) ==> ((\q'. ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q'))))) q')) = ((\q'. ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cssreflect_eq f0 cMEM f1 clist_of_darts f2 f3 c==> c==> f3 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b0 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> f3 b0 * / c==> c= cssreflect_eq f0 cMEM f1 clist_of_darts f2 f3 c==> c==> f3 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b0 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> f3 b0 f4 * / c==> c= cssreflect_eq f0 cMEM f1 clist_of_darts f2 f3 c==> c==> f3 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b0 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> f3 b0 f4
+ ((\i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)) i) |- (((((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i) ==> (?n. (((rot ((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0)))) ((rot ((indexl d) (list_pairs f))) f)) = ((rot n) f)))) = (?n. (((rot ((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0)))) ((rot ((indexl d) (list_pairs f))) f)) = ((rot n) f))))
T c==> * / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0 f2 c= c==> c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 f2 c? / c= crot c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 crot b0 f1 c? / c= crot c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 crot b0 f1
+ |- ((((rot k) f) = ((rot k) f)) = ((\n. (((rot k) f) = ((rot n) f))) k))
T c= c= crot f0 f1 crot f0 f1 * / c= crot f0 f1 crot b0 f1 f0
+ ((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) |- ((((~ ((MEM d) (list_of_darts L))) /\ ((((split_list_hyp L) d) = L) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))) ==> (((~ ((MEM d) (list_of_darts L))) ==> (((split_list_hyp L) d) = L)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))) = (((~ ((MEM d) (list_of_darts L))) ==> (((split_list_hyp L) d) = L)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= c==> c/\ c~ cMEM f1 clist_of_darts f2 c==> c= csplit_list_hyp f2 f1 f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> c==> c~ cMEM f1 clist_of_darts f2 c= csplit_list_hyp f2 f1 f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> c==> c~ cMEM f1 clist_of_darts f2 c= csplit_list_hyp f2 f1 f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2
+ |- (((!L. (!d. (((MEM d) (list_of_darts L)) ==> (L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))))) ==> ((\L. (!d. (((MEM d) (list_of_darts L)) ==> (L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))))) L)) = ((\L. (!d. (((MEM d) (list_of_darts L)) ==> (L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))))) L))
T c= c==> ! ! c==> cMEM b1 clist_of_darts b0 c= b0 ccat ctake cindexl cfind_pair_list b0 b1 b0 b0 ccat cCONS cfind_pair_list b0 b1 cNIL cdropl c+ cindexl cfind_pair_list b0 b1 b0 cNUMERAL cBIT1 c_0 b0 * / ! c==> cMEM b1 clist_of_darts b0 c= b0 ccat ctake cindexl cfind_pair_list b0 b1 b0 b0 ccat cCONS cfind_pair_list b0 b1 cNIL cdropl c+ cindexl cfind_pair_list b0 b1 b0 cNUMERAL cBIT1 c_0 b0 f0 * / ! c==> cMEM b1 clist_of_darts b0 c= b0 ccat ctake cindexl cfind_pair_list b0 b1 b0 b0 ccat cCONS cfind_pair_list b0 b1 cNIL cdropl c+ cindexl cfind_pair_list b0 b1 b0 cNUMERAL cBIT1 c_0 b0 f0
+ |- ((\q'. ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q'))))) q')
T * / c==> c= cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF f3 c==> c==> f3 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> f3 b0 f4
+ |- (((!q'. ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q'))))) ==> ((\q'. ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q'))))) q')) = ((\q'. ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF f3 c==> c==> f3 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> f3 b0 * / c==> c= cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF f3 c==> c==> f3 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> f3 b0 f4 * / c==> c= cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF f3 c==> c==> f3 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> f3 b0 f4
+ |- (((!p'. (!q'. ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF b0 c==> c==> b0 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b1 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> b0 b1 * / ! c==> c= cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF b0 c==> c==> b0 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b1 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> b0 b1 f3 * / ! c==> c= cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF b0 c==> c==> b0 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b1 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> b0 b1 f3
+ |- ((\L. (!d. (((MEM d) (list_of_darts L)) ==> (((split_list_hyp L) d) = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))))) L)
T * / ! c==> cMEM b1 clist_of_darts b0 c= csplit_list_hyp b0 b1 ccat ctake cindexl cfind_pair_list b0 b1 b0 b0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl b1 clist_pairs cfind_pair_list b0 b1 cfind_pair_list b0 b1 cdropl c+ cindexl cfind_pair_list b0 b1 b0 cNUMERAL cBIT1 c_0 b0 f0
- |- ((!d. t) = t)
T c= ! f0 f0
+ |- ((((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = ((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0)))) = ((\i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)) ((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0)))))
T c= c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 * / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0 c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0
+ |- ((\P. (P = ((ssreflect_eq mem_d) P))) P)
T * / c= b0 cssreflect_eq f0 b0 f1
+ |- ((\Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q)))) Q)
T * / c= c==> c? / * f0 b1 b0 ! c==> * f0 b1 b0 f1
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)) |- (((((sizel ((CONS f) NIL)) = (sizel ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL))) /\ (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS f) NIL)) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((dropl (n + (NUMERAL (BIT1 _0)))) L)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((take n) L)) ((take n) L)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))) ==> ((((sizel ((CONS f) NIL)) = (sizel ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL))) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS f) NIL)) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((dropl (n + (NUMERAL (BIT1 _0)))) L)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((take n) L)) ((take n) L)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))) = ((((sizel ((CONS f) NIL)) = (sizel ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL))) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS f) NIL)) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((dropl (n + (NUMERAL (BIT1 _0)))) L)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((take n) L)) ((take n) L)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c= c==> c/\ c= csizel cCONS f0 cNIL csizel cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL c==> c= cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f0 cNIL cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 c/\ cALL2 / / c? / c= b1 crot b2 b0 cCONS f0 cNIL cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cALL2 / / c? / c= b1 crot b2 b0 cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 c/\ cALL2 / / c? / c= b1 crot b2 b0 ctake f2 f3 ctake f2 f3 cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f0 cNIL cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 c==> c==> c= csizel cCONS f0 cNIL csizel cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL c= cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f0 cNIL cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 c/\ cALL2 / / c? / c= b1 crot b2 b0 cCONS f0 cNIL cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cALL2 / / c? / c= b1 crot b2 b0 cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 c/\ cALL2 / / c? / c= b1 crot b2 b0 ctake f2 f3 ctake f2 f3 cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f0 cNIL cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 c==> c==> c= csizel cCONS f0 cNIL csizel cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL c= cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f0 cNIL cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 c/\ cALL2 / / c? / c= b1 crot b2 b0 cCONS f0 cNIL cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cALL2 / / c? / c= b1 crot b2 b0 cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 c/\ cALL2 / / c? / c= b1 crot b2 b0 ctake f2 f3 ctake f2 f3 cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f0 cNIL cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cdropl c+ f2 cNUMERAL cBIT1 c_0 f3
- ((MEM d) (list_of_darts L)) |- (((MEM d) (list_of_darts L)) /\ (L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))))
T c==> cMEM f0 clist_of_darts f1 c/\ cMEM f0 clist_of_darts f1 c= f1 ccat ctake cindexl cfind_pair_list f1 f0 f1 f1 ccat cCONS cfind_pair_list f1 f0 cNIL cdropl c+ cindexl cfind_pair_list f1 f0 f1 cNUMERAL cBIT1 c_0 f1
+ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t) t) |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t) t) = T)
T c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f0 c= cALL2 / / c? / c= b1 crot b2 b0 f0 f0 cT
- (uniq (list_of_darts L)), ((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))), ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- ((!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))
T c==> cuniq clist_of_darts f0 c==> c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> cssreflect_eq f2 cMEM f1 clist_of_darts f0 c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0
+ |- (((!P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) ==> ((\P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) P)) = ((\P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) P))
T c= c==> ! ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 * / ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 f0 * / ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 f0
+ |- (((!f. (!s1. (!t1. (!s2. (!t2. (((sizel s1) = (sizel s2)) ==> ((((ALL2 f) ((cat s1) t1)) ((cat s2) t2)) = ((((ALL2 f) s1) s2) /\ (((ALL2 f) t1) t2))))))))) ==> ((\f. (!s1. (!t1. (!s2. (!t2. (((sizel s1) = (sizel s2)) ==> ((((ALL2 f) ((cat s1) t1)) ((cat s2) t2)) = ((((ALL2 f) s1) s2) /\ (((ALL2 f) t1) t2))))))))) f)) = ((\f. (!s1. (!t1. (!s2. (!t2. (((sizel s1) = (sizel s2)) ==> ((((ALL2 f) ((cat s1) t1)) ((cat s2) t2)) = ((((ALL2 f) s1) s2) /\ (((ALL2 f) t1) t2))))))))) f))
T c= c==> ! ! ! ! ! c==> c= csizel b1 csizel b3 c= cALL2 b0 ccat b1 b2 ccat b3 b4 c/\ cALL2 b0 b1 b3 cALL2 b0 b2 b4 * / ! ! ! ! c==> c= csizel b1 csizel b3 c= cALL2 b0 ccat b1 b2 ccat b3 b4 c/\ cALL2 b0 b1 b3 cALL2 b0 b2 b4 f0 * / ! ! ! ! c==> c= csizel b1 csizel b3 c= cALL2 b0 ccat b1 b2 ccat b3 b4 c/\ cALL2 b0 b1 b3 cALL2 b0 b2 b4 f0
+ (uniq (list_of_darts L)), ((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((\x. (((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = x)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))) x)
T c==> cuniq clist_of_darts f0 c==> c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 * / c==> cssreflect_eq f2 c= cMEM f1 clist_of_darts f0 b0 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0 f3
+ |- ((h = ((rot (NUMERAL _0)) h)) = ((\n. (h = ((rot n) h))) (NUMERAL _0)))
T c= c= f0 crot cNUMERAL c_0 f0 * / c= f0 crot b0 f0 cNUMERAL c_0
+ |- ((\f. (!s1. (!t1. (!s2. (!t2. (((sizel s1) = (sizel s2)) ==> ((((ALL2 f) ((cat s1) t1)) ((cat s2) t2)) = ((((ALL2 f) s1) s2) /\ (((ALL2 f) t1) t2))))))))) f)
T * / ! ! ! ! c==> c= csizel b1 csizel b3 c= cALL2 b0 ccat b1 b2 ccat b3 b4 c/\ cALL2 b0 b1 b3 cALL2 b0 b2 b4 f0
+ (((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (uniq (list_of_darts L))) |- ((((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (uniq (list_of_darts L))) /\ ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))
T c==> c/\ c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cuniq clist_of_darts f0 c/\ c/\ c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cuniq clist_of_darts f0 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0
+ |- ((((find_pair_list L) d) = ((find_pair_list L) d)) = ((\f. (((find_pair_list L) d) = f)) ((find_pair_list L) d)))
T c= c= cfind_pair_list f0 f1 cfind_pair_list f0 f1 * / c= cfind_pair_list f0 f1 b0 cfind_pair_list f0 f1
+ |- (((?x. (((MEM d) (list_of_darts L)) = x)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))
T c= c==> c? / c= cMEM f0 clist_of_darts f1 b0 c= chypermap_of_list csplit_list_hyp f1 f0 chypermap_of_list f1 c= chypermap_of_list csplit_list_hyp f1 f0 chypermap_of_list f1
+ (uniq (list_of_darts L)), ((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) /\ (((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))) ==> (!x. (((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = x)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))))) = (!x. (((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = x)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))))
T c==> cuniq clist_of_darts f0 c==> c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c= c==> c/\ c==> cssreflect_eq f2 c= cMEM f1 clist_of_darts f0 cT c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0 c==> cssreflect_eq f2 c= cMEM f1 clist_of_darts f0 cF c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0 ! c==> cssreflect_eq f2 c= cMEM f1 clist_of_darts f0 b0 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0 ! c==> cssreflect_eq f2 c= cMEM f1 clist_of_darts f0 b0 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0
+ |- (((!P. (((ssreflect_eq v) P) = P)) ==> ((\P. (((ssreflect_eq v) P) = P)) P)) = ((\P. (((ssreflect_eq v) P) = P)) P))
T c= c==> ! c= cssreflect_eq f0 b0 b0 * / c= cssreflect_eq f0 b0 b0 f1 * / c= cssreflect_eq f0 b0 b0 f1
- ((\f. (((find_pair_list L) d) = f)) f) |- (((((find_pair_list L) d) = f) ==> (?f. (((find_pair_list L) d) = f))) = (?f. (((find_pair_list L) d) = f)))
T c==> * / c= cfind_pair_list f0 f1 b0 f2 c= c==> c= cfind_pair_list f0 f1 f2 c? / c= cfind_pair_list f0 f1 b0 c? / c= cfind_pair_list f0 f1 b0
- |- ((?n. t) = t)
T c= c? / f0 f0
+ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t) t) |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t) t) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h) t)) ((CONS h) t)))
T c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f0 c/\ cALL2 / / c? / c= b1 crot b2 b0 f0 f0 cALL2 / / c? / c= b1 crot b2 b0 cCONS f1 f0 cCONS f1 f0
- ((\j. (((indexl d) (list_pairs f)) = j)) j) |- (((\j. (((indexl d) (list_pairs f)) = j)) j) /\ (?j. (((indexl d) (list_pairs f)) = j)))
T c==> * / c= cindexl f0 clist_pairs f1 b0 f2 c/\ * / c= cindexl f0 clist_pairs f1 b0 f2 c? / c= cindexl f0 clist_pairs f1 b0
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))), ((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) |- ((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 c/\ ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! * f0 b0
+ |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take n) L)) ((cat (((COND ((sizel f) <= (NUMERAL (BIT1 (BIT1 _0))))) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((CONS ((take (NUMERAL (BIT1 (BIT1 _0)))) ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((CONS ((CONS (HD ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (NUMERAL (BIT0 (BIT1 _0)))) ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))))) NIL)))) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) = (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take n) L)) ((cat (((COND ((sizel ((rot ((indexl d) (list_pairs f))) f)) <= (NUMERAL (BIT1 (BIT1 _0))))) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((CONS ((take (NUMERAL (BIT1 (BIT1 _0)))) ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((CONS ((CONS (HD ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (NUMERAL (BIT0 (BIT1 _0)))) ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))))) NIL)))) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))
T c= cALL2 / / c? / c= b1 crot b2 b0 ccat ctake f0 f1 ccat cCONS f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat ctake f0 f1 ccat cCOND c<= csizel f2 cNUMERAL cBIT1 cBIT1 c_0 cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cCONS ctake cNUMERAL cBIT1 cBIT1 c_0 crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cCONS cCONS cHD crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cdropl cNUMERAL cBIT0 cBIT1 c_0 crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake f0 f1 ccat cCONS f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat ctake f0 f1 ccat cCOND c<= csizel crot cindexl f3 clist_pairs f2 f2 cNUMERAL cBIT1 cBIT1 c_0 cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cCONS ctake cNUMERAL cBIT1 cBIT1 c_0 crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cCONS cCONS cHD crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cdropl cNUMERAL cBIT0 cBIT1 c_0 crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1
+ |- ((((sizel (list_pairs ((find_pair_list L) d))) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))) = (((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))))
T c= c==> c<= csizel clist_pairs cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 c==> c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0
+ |- ((\P. (((ssreflect_eq v) P) = P)) P)
T * / c= cssreflect_eq f0 b0 b0 f1
+ |- ((((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take n) L)) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((take n) L)) ((take n) L)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take n) L)) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) = (((sizel ((take n) L)) = (sizel ((take n) L))) /\ (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take n) L)) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((take n) L)) ((take n) L)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take n) L)) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))))
T c= c==> c= cALL2 / / c? / c= b1 crot b2 b0 ccat ctake f0 f1 ccat cCONS f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat ctake f0 f1 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 c/\ cALL2 / / c? / c= b1 crot b2 b0 ctake f0 f1 ctake f0 f1 cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake f0 f1 ccat cCONS f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat ctake f0 f1 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 c/\ c= csizel ctake f0 f1 csizel ctake f0 f1 c==> c= cALL2 / / c? / c= b1 crot b2 b0 ccat ctake f0 f1 ccat cCONS f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat ctake f0 f1 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 c/\ cALL2 / / c? / c= b1 crot b2 b0 ctake f0 f1 ctake f0 f1 cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake f0 f1 ccat cCONS f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat ctake f0 f1 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1
+ |- (((!s. ((sizel ((rotr n0) s)) = (sizel s))) ==> ((\s. ((sizel ((rotr n0) s)) = (sizel s))) s)) = ((\s. ((sizel ((rotr n0) s)) = (sizel s))) s))
T c= c==> ! c= csizel crotr f0 b0 csizel b0 * / c= csizel crotr f0 b0 csizel b0 f1 * / c= csizel crotr f0 b0 csizel b0 f1
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)), ((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))), ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- (((MEM d) (list_of_darts L)) /\ ((((split_list_hyp L) d) = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) ((split_list_hyp L) d))))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c==> c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> cssreflect_eq f2 cMEM f1 clist_of_darts f0 c/\ cMEM f1 clist_of_darts f0 c==> c= csplit_list_hyp f0 f1 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 cALL2 / / c? / c= b1 crot b2 b0 f0 csplit_list_hyp f0 f1
+ |- ((sizel ((CONS f) NIL)) = (sizel ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)))
T c= csizel cCONS f0 cNIL csizel cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL
+ (uniq (list_of_darts L)), ((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- (((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = x)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))
T c==> cuniq clist_of_darts f0 c==> c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> cssreflect_eq f2 c= cMEM f1 clist_of_darts f0 f3 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)) |- ((T /\ ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS f) NIL)) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((dropl (n + (NUMERAL (BIT1 _0)))) L)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((take n) L)) ((take n) L)) /\ ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS f) NIL)) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((dropl (n + (NUMERAL (BIT1 _0)))) L)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c= c/\ cT c/\ cALL2 / / c? / c= b1 crot b2 b0 cCONS f0 cNIL cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cALL2 / / c? / c= b1 crot b2 b0 cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 c/\ cALL2 / / c? / c= b1 crot b2 b0 ctake f2 f3 ctake f2 f3 c/\ cALL2 / / c? / c= b1 crot b2 b0 cCONS f0 cNIL cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cALL2 / / c? / c= b1 crot b2 b0 cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 cdropl c+ f2 cNUMERAL cBIT1 c_0 f3
+ |- (((!s. (?k. (((rot i) ((rot j) s)) = ((rot k) s)))) ==> ((\s. (?k. (((rot i) ((rot j) s)) = ((rot k) s)))) f)) = ((\s. (?k. (((rot i) ((rot j) s)) = ((rot k) s)))) f))
T c= c==> ! c? / c= crot f0 crot f1 b0 crot b1 b0 * / c? / c= crot f0 crot f1 b0 crot b1 b0 f2 * / c? / c= crot f0 crot f1 b0 crot b1 b0 f2
- (uniq (list_of_darts L)), ((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((uniq (list_of_darts L)) /\ ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))
T c==> cuniq clist_of_darts f0 c==> c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c/\ cuniq clist_of_darts f0 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0
+ |- ((\i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)) ((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))))
T * / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0 c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0
- (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) /\ ((uniq (list_of_darts L1)) ==> ((hypermap_of_list L2) = (hypermap_of_list L1))))
T c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f1 c/\ cALL2 / / c? / c= b1 crot b2 b0 f0 f1 c==> cuniq clist_of_darts f0 c= chypermap_of_list f1 chypermap_of_list f0
- (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t) t) |- ((?n. (h = ((rot n) h))) = ((?n. (h = ((rot n) h))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t) t)))
T c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f0 c= c? / c= f1 crot b0 f1 c/\ c? / c= f1 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f0 f0
- ((\j. (((indexl d) (list_pairs f)) = j)) j) |- (((((indexl d) (list_pairs f)) = j) ==> (?j. (((indexl d) (list_pairs f)) = j))) = (?j. (((indexl d) (list_pairs f)) = j)))
T c==> * / c= cindexl f0 clist_pairs f1 b0 f2 c= c==> c= cindexl f0 clist_pairs f1 f2 c? / c= cindexl f0 clist_pairs f1 b0 c? / c= cindexl f0 clist_pairs f1 b0
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)), ((\n. (((indexl f) L) = n)) n) |- (((\n. (((indexl f) L) = n)) n) /\ (((sizel f) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take ((indexl f) L)) L)) ((cat ((CONS f) NIL)) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take ((indexl f) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L))))))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c==> * / c= cindexl f0 f1 b0 f2 c/\ * / c= cindexl f0 f1 b0 f2 c==> c<= csizel f0 cNUMERAL cBIT1 cBIT1 c_0 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake cindexl f0 f1 f1 ccat cCONS f0 cNIL cdropl c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f1 ccat ctake cindexl f0 f1 f1 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f0 f0 cdropl c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f1
+ |- (((?n. (h = ((rot n) h))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t) t)) = ((((\f1. (\f2. (?n. (f2 = ((rot n) f1))))) h) h) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t) t)))
T c= c/\ c? / c= f0 crot b0 f0 cALL2 / / c? / c= b1 crot b2 b0 f1 f1 c/\ * * / / c? / c= b1 crot b2 b0 f0 f0 cALL2 / / c? / c= b1 crot b2 b0 f1 f1
+ |- (((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) ==> ((\P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) P)) = ((\P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) P))
T c= c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 * / c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 f0 * / c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 f0
+ |- (((((MEM d) (list_of_darts L)) ==> (((split_list_hyp L) d) = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) ((split_list_hyp L) d))) = (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) ((split_list_hyp L) d)))
T c= c==> c==> cMEM f0 clist_of_darts f1 c= csplit_list_hyp f1 f0 ccat ctake cindexl cfind_pair_list f1 f0 f1 f1 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs cfind_pair_list f1 f0 cfind_pair_list f1 f0 cdropl c+ cindexl cfind_pair_list f1 f0 f1 cNUMERAL cBIT1 c_0 f1 cALL2 / / c? / c= b1 crot b2 b0 f1 csplit_list_hyp f1 f0 cALL2 / / c? / c= b1 crot b2 b0 f1 csplit_list_hyp f1 f0
- |- (((!x. (((\j. (((indexl d) (list_pairs f)) = j)) x) ==> (?j. (((indexl d) (list_pairs f)) = j)))) ==> ((?j. (((indexl d) (list_pairs f)) = j)) ==> (?j. (((indexl d) (list_pairs f)) = j)))) = ((?j. (((indexl d) (list_pairs f)) = j)) ==> (?j. (((indexl d) (list_pairs f)) = j))))
T c= c==> ! c==> * / c= cindexl f0 clist_pairs f1 b1 b0 c? / c= cindexl f0 clist_pairs f1 b1 c==> c? / c= cindexl f0 clist_pairs f1 b0 c? / c= cindexl f0 clist_pairs f1 b0 c==> c? / c= cindexl f0 clist_pairs f1 b0 c? / c= cindexl f0 clist_pairs f1 b0
- |- ((T ==> A) = A)
T c= c==> cT f0 f0
- |- (((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))))) = ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))))
T c= c==> c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2
- |- (((!p'. (!q'. ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cssreflect_eq f0 cMEM f1 clist_of_darts f2 b0 c==> c==> b0 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b1 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> b0 b1 * / ! c==> c= cssreflect_eq f0 cMEM f1 clist_of_darts f2 b0 c==> c==> b0 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b1 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> b0 b1 f3 * / ! c==> c= cssreflect_eq f0 cMEM f1 clist_of_darts f2 b0 c==> c==> b0 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b1 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> b0 b1 f3
- (~ ((MEM d) (list_of_darts L))) |- ((~ ((MEM d) (list_of_darts L))) /\ (((split_list_hyp L) d) = L))
T c==> c~ cMEM f0 clist_of_darts f1 c/\ c~ cMEM f0 clist_of_darts f1 c= csplit_list_hyp f1 f0 f1
+ ((\n. (((indexl f) L) = n)) n) |- (((indexl f) L) = n)
T c==> * / c= cindexl f0 f1 b0 f2 c= cindexl f0 f1 f2
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))), ((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) |- (!x. (P x))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
+ |- (((?i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)) ==> (?n. (((rot ((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0)))) ((rot ((indexl d) (list_pairs f))) f)) = ((rot n) f)))) = (?n. (((rot ((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0)))) ((rot ((indexl d) (list_pairs f))) f)) = ((rot n) f))))
T c= c==> c? / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0 c? / c= crot c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 crot b0 f1 c? / c= crot c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 crot b0 f1
+ |- (((((\f1. (\f2. (?n. (f2 = ((rot n) f1))))) f) ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) /\ T) = ((((\f1. (\f2. (?n. (f2 = ((rot n) f1))))) f) ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) NIL) NIL)))
T c= c/\ * * / / c? / c= b1 crot b2 b0 f0 crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cT c/\ * * / / c? / c= b1 crot b2 b0 f0 crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cALL2 / / c? / c= b1 crot b2 b0 cNIL cNIL
- (((find_pair_list L) d) = f) |- ((\f. (((find_pair_list L) d) = f)) f)
T c==> c= cfind_pair_list f0 f1 f2 * / c= cfind_pair_list f0 f1 b0 f2
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)) |- (((sizel f) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take n) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c==> c<= csizel f0 cNUMERAL cBIT1 cBIT1 c_0 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake f1 f2 ccat cCONS f0 cNIL cdropl c+ f1 cNUMERAL cBIT1 c_0 f2 ccat ctake f1 f2 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f0 f0 cdropl c+ f1 cNUMERAL cBIT1 c_0 f2
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)), ((sizel f) <= (NUMERAL (BIT1 (BIT1 _0)))) |- (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take n) L)) ((cat (((COND ((sizel ((rot ((indexl d) (list_pairs f))) f)) <= (NUMERAL (BIT1 (BIT1 _0))))) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((CONS ((take (NUMERAL (BIT1 (BIT1 _0)))) ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((CONS ((CONS (HD ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (NUMERAL (BIT0 (BIT1 _0)))) ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))))) NIL)))) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c==> c<= csizel f0 cNUMERAL cBIT1 cBIT1 c_0 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake f1 f2 ccat cCONS f0 cNIL cdropl c+ f1 cNUMERAL cBIT1 c_0 f2 ccat ctake f1 f2 ccat cCOND c<= csizel crot cindexl f3 clist_pairs f0 f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f0 f0 cNIL cCONS ctake cNUMERAL cBIT1 cBIT1 c_0 crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f0 f0 cCONS cCONS cHD crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f0 f0 cdropl cNUMERAL cBIT0 cBIT1 c_0 crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f0 f0 cNIL cdropl c+ f1 cNUMERAL cBIT1 c_0 f2
+ (uniq (list_of_darts L)), (((MEM d) (list_of_darts L)) = x), ((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))
T c==> cuniq clist_of_darts f0 c==> c= cMEM f1 clist_of_darts f0 f2 c==> c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0
+ |- ((((split_list_hyp L) d) = L) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))
T c==> c= csplit_list_hyp f0 f1 f0 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0
+ (L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) = (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))))
T c==> c= f0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 c= cALL2 / / c? / c= b1 crot b2 b0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 cALL2 / / c? / c= b1 crot b2 b0 f0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0
+ ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- (((((split_list_hyp L) d) = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) ((split_list_hyp L) d))) = (((MEM d) (list_of_darts L)) /\ ((((split_list_hyp L) d) = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) ((split_list_hyp L) d)))))
T c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= c==> c= csplit_list_hyp f2 f1 ccat ctake cindexl cfind_pair_list f2 f1 f2 f2 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f2 f1 cfind_pair_list f2 f1 cdropl c+ cindexl cfind_pair_list f2 f1 f2 cNUMERAL cBIT1 c_0 f2 cALL2 / / c? / c= b1 crot b2 b0 f2 csplit_list_hyp f2 f1 c/\ cMEM f1 clist_of_darts f2 c==> c= csplit_list_hyp f2 f1 ccat ctake cindexl cfind_pair_list f2 f1 f2 f2 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f2 f1 cfind_pair_list f2 f1 cdropl c+ cindexl cfind_pair_list f2 f1 f2 cNUMERAL cBIT1 c_0 f2 cALL2 / / c? / c= b1 crot b2 b0 f2 csplit_list_hyp f2 f1
+ |- (((SUC (sizel NIL)) = (sizel ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL))) = ((sizel ((CONS f) NIL)) = (sizel ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL))))
T c= c= cSUC csizel cNIL csizel cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 cNIL c= csizel cCONS f1 cNIL csizel cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 cNIL
+ |- (((!L. (!d. (((find_face L) d) = (list_pairs ((find_pair_list L) d))))) ==> ((\L. (!d. (((find_face L) d) = (list_pairs ((find_pair_list L) d))))) L)) = ((\L. (!d. (((find_face L) d) = (list_pairs ((find_pair_list L) d))))) L))
T c= c==> ! ! c= cfind_face b0 b1 clist_pairs cfind_pair_list b0 b1 * / ! c= cfind_face b0 b1 clist_pairs cfind_pair_list b0 b1 f0 * / ! c= cfind_face b0 b1 clist_pairs cfind_pair_list b0 b1 f0
+ |- (((!s2. (!t2. (((sizel s1) = (sizel s2)) ==> ((((ALL2 f) ((cat s1) t1)) ((cat s2) t2)) = ((((ALL2 f) s1) s2) /\ (((ALL2 f) t1) t2)))))) ==> ((\s2. (!t2. (((sizel s1) = (sizel s2)) ==> ((((ALL2 f) ((cat s1) t1)) ((cat s2) t2)) = ((((ALL2 f) s1) s2) /\ (((ALL2 f) t1) t2)))))) s2)) = ((\s2. (!t2. (((sizel s1) = (sizel s2)) ==> ((((ALL2 f) ((cat s1) t1)) ((cat s2) t2)) = ((((ALL2 f) s1) s2) /\ (((ALL2 f) t1) t2)))))) s2))
T c= c==> ! ! c==> c= csizel f0 csizel b0 c= cALL2 f1 ccat f0 f2 ccat b0 b1 c/\ cALL2 f1 f0 b0 cALL2 f1 f2 b1 * / ! c==> c= csizel f0 csizel b0 c= cALL2 f1 ccat f0 f2 ccat b0 b1 c/\ cALL2 f1 f0 b0 cALL2 f1 f2 b1 f3 * / ! c==> c= csizel f0 csizel b0 c= cALL2 f1 ccat f0 f2 ccat b0 b1 c/\ cALL2 f1 f0 b0 cALL2 f1 f2 b1 f3
- |- ((((indexl d) (list_pairs f)) = j) = ((\j. (((indexl d) (list_pairs f)) = j)) j))
T c= c= cindexl f0 clist_pairs f1 f2 * / c= cindexl f0 clist_pairs f1 b0 f2
- |- (((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))))) = ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))))
T c= c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2
+ |- ((\s1. (!t1. (!s2. (!t2. (((sizel s1) = (sizel s2)) ==> ((((ALL2 f) ((cat s1) t1)) ((cat s2) t2)) = ((((ALL2 f) s1) s2) /\ (((ALL2 f) t1) t2)))))))) s1)
T * / ! ! ! c==> c= csizel b0 csizel b2 c= cALL2 f0 ccat b0 b1 ccat b2 b3 c/\ cALL2 f0 b0 b2 cALL2 f0 b1 b3 f1
+ ((\f. (((find_pair_list L) d) = f)) f) |- (((((find_pair_list L) d) = f) ==> (((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))))) = (((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))))
T c==> * / c= cfind_pair_list f0 f1 b0 f2 c= c==> c= cfind_pair_list f0 f1 f2 c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0
- ((\f. (((find_pair_list L) d) = f)) f) |- (((\f. (((find_pair_list L) d) = f)) f) /\ (?f. (((find_pair_list L) d) = f)))
T c==> * / c= cfind_pair_list f0 f1 b0 f2 c/\ * / c= cfind_pair_list f0 f1 b0 f2 c? / c= cfind_pair_list f0 f1 b0
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)), ((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c==> c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0
+ |- (?x. (((MEM d) (list_of_darts L)) = x))
T c? / c= cMEM f0 clist_of_darts f1 b0
- |- ((((indexl f) L) = n) ==> (?n. (((indexl f) L) = n)))
T c==> c= cindexl f0 f1 f2 c? / c= cindexl f0 f1 b0
+ |- (((((sizel ((take n) L)) = (sizel ((take n) L))) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take n) L)) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((take n) L)) ((take n) L)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take n) L)) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) = (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take n) L)) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))
T c= c==> c==> c= csizel ctake f0 f1 csizel ctake f0 f1 c= cALL2 / / c? / c= b1 crot b2 b0 ccat ctake f0 f1 ccat cCONS f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat ctake f0 f1 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 c/\ cALL2 / / c? / c= b1 crot b2 b0 ctake f0 f1 ctake f0 f1 cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake f0 f1 ccat cCONS f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat ctake f0 f1 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake f0 f1 ccat cCONS f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat ctake f0 f1 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- (!x. (P x))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF ! * f0 b0
- ((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- (((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((uniq (list_of_darts L)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))))
T c==> c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> cuniq clist_of_darts f0 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0
+ |- (((A /\ B) ==> C) ==> (A ==> (B ==> C)))
T c==> c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2
+ |- ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> q')))
T c==> c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 f3 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 f3
+ |- (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2)))))
T c/\ c= cALL2 f0 cCONS f1 f2 cNIL cF c/\ c= cALL2 f0 cNIL cCONS f3 f4 cF c= cALL2 f0 cCONS f1 f2 cCONS f3 f4 c/\ * * f0 f1 f3 cALL2 f0 f2 f4
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
- |- ((\h2. (!P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2)))))))))) h2)
T * / ! ! ! c/\ c= cALL2 b1 cNIL cNIL cT c/\ c= cALL2 b1 cCONS f0 b2 cNIL cF c/\ c= cALL2 b1 cNIL cCONS b0 b3 cF c= cALL2 b1 cCONS f0 b2 cCONS b0 b3 c/\ * * b1 f0 b0 cALL2 b1 b2 b3 f1
- ((\x. (((MEM d) (list_of_darts L)) = x)) x) |- (((\x. (((MEM d) (list_of_darts L)) = x)) x) /\ (?x. (((MEM d) (list_of_darts L)) = x)))
T c==> * / c= cMEM f0 clist_of_darts f1 b0 f2 c/\ * / c= cMEM f0 clist_of_darts f1 b0 f2 c? / c= cMEM f0 clist_of_darts f1 b0
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) ==> ((hypermap_of_list L2) = (hypermap_of_list L)))) |- ((\L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) ==> ((hypermap_of_list L2) = (hypermap_of_list L)))) L2)
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c= chypermap_of_list b0 chypermap_of_list f0 * / c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c= chypermap_of_list b0 chypermap_of_list f0 f1
+ (uniq (list_of_darts L)) |- (!L2. (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) /\ T) ==> ((hypermap_of_list L2) = (hypermap_of_list L))))
T c==> cuniq clist_of_darts f0 ! c==> c/\ cALL2 / / c? / c= b2 crot b3 b1 f0 b0 cT c= chypermap_of_list b0 chypermap_of_list f0
+ (uniq (list_of_darts L)), ((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((?x. (((MEM d) (list_of_darts L)) = x)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))
T c==> cuniq clist_of_darts f0 c==> c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> c? / c= cMEM f1 clist_of_darts f0 b0 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0
- (((MEM d) (list_of_darts L)) = x) |- (x = ((MEM d) (list_of_darts L)))
T c==> c= cMEM f0 clist_of_darts f1 f2 c= f2 cMEM f0 clist_of_darts f1
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)), (L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))), ((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c==> c= f0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 c==> c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 cALL2 / / c? / c= b1 crot b2 b0 f0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0
- |- (((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) = ((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L))))) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> q')))) = ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> q'))))
T c= c==> c= cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 f3 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 f3 c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 f3 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 f3
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)) |- (((!x. (((\n. (((indexl f) L) = n)) x) ==> (((sizel f) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take ((indexl f) L)) L)) ((cat ((CONS f) NIL)) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take ((indexl f) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L))))))) ==> ((?n. (((indexl f) L) = n)) ==> (((sizel f) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take ((indexl f) L)) L)) ((cat ((CONS f) NIL)) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take ((indexl f) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L))))))) = ((?n. (((indexl f) L) = n)) ==> (((sizel f) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take ((indexl f) L)) L)) ((cat ((CONS f) NIL)) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take ((indexl f) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L)))))))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c= c==> ! c==> * / c= cindexl f0 f1 b1 b0 c==> c<= csizel f0 cNUMERAL cBIT1 cBIT1 c_0 cALL2 / / c? / c= b2 crot b3 b1 ccat ctake cindexl f0 f1 f1 ccat cCONS f0 cNIL cdropl c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f1 ccat ctake cindexl f0 f1 f1 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f2 clist_pairs f0 f0 cdropl c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f1 c==> c? / c= cindexl f0 f1 b0 c==> c<= csizel f0 cNUMERAL cBIT1 cBIT1 c_0 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake cindexl f0 f1 f1 ccat cCONS f0 cNIL cdropl c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f1 ccat ctake cindexl f0 f1 f1 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f2 clist_pairs f0 f0 cdropl c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f1 c==> c? / c= cindexl f0 f1 b0 c==> c<= csizel f0 cNUMERAL cBIT1 cBIT1 c_0 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake cindexl f0 f1 f1 ccat cCONS f0 cNIL cdropl c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f1 ccat ctake cindexl f0 f1 f1 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f2 clist_pairs f0 f0 cdropl c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f1
+ ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- (((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) /\ (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))))
T c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c/\ cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2
+ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t) t) |- (((?n. (h = ((rot n) h))) /\ T) = ((?n. (h = ((rot n) h))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t) t)))
T c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f0 c= c/\ c? / c= f1 crot b0 f1 cT c/\ c? / c= f1 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f0 f0
+ ((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) |- ((~ ((MEM d) (list_of_darts L))) /\ ((((split_list_hyp L) d) = L) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c/\ c~ cMEM f1 clist_of_darts f2 c==> c= csplit_list_hyp f2 f1 f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2
+ (((split_list_hyp L) d) = L) |- ((((split_list_hyp L) d) = L) /\ ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))
T c==> c= csplit_list_hyp f0 f1 f0 c/\ c= csplit_list_hyp f0 f1 f0 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0
- |- (((!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2)))))))) ==> ((\t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2)))))))) t1)) = ((\t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2)))))))) t1))
T c= c==> ! ! c/\ c= cALL2 f0 cNIL cNIL cT c/\ c= cALL2 f0 cCONS f1 b0 cNIL cF c/\ c= cALL2 f0 cNIL cCONS f2 b1 cF c= cALL2 f0 cCONS f1 b0 cCONS f2 b1 c/\ * * f0 f1 f2 cALL2 f0 b0 b1 * / ! c/\ c= cALL2 f0 cNIL cNIL cT c/\ c= cALL2 f0 cCONS f1 b0 cNIL cF c/\ c= cALL2 f0 cNIL cCONS f2 b1 cF c= cALL2 f0 cCONS f1 b0 cCONS f2 b1 c/\ * * f0 f1 f2 cALL2 f0 b0 b1 f3 * / ! c/\ c= cALL2 f0 cNIL cNIL cT c/\ c= cALL2 f0 cCONS f1 b0 cNIL cF c/\ c= cALL2 f0 cNIL cCONS f2 b1 cF c= cALL2 f0 cCONS f1 b0 cCONS f2 b1 c/\ * * f0 f1 f2 cALL2 f0 b0 b1 f3
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)), (((split_list_hyp L) d) = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))), ((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))), ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) ((split_list_hyp L) d))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c==> c= csplit_list_hyp f0 f1 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 c==> c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> cssreflect_eq f2 cMEM f1 clist_of_darts f0 cALL2 / / c? / c= b1 crot b2 b0 f0 csplit_list_hyp f0 f1
- ((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) |- (((~ ((MEM d) (list_of_darts L))) ==> (((MEM d) (list_of_darts L)) = F)) = (((MEM d) (list_of_darts L)) = F))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= c==> c~ cMEM f1 clist_of_darts f2 c= cMEM f1 clist_of_darts f2 cF c= cMEM f1 clist_of_darts f2 cF
+ (uniq (list_of_darts L)), ((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) /\ (((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))))
T c==> cuniq clist_of_darts f0 c==> c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c/\ c==> cssreflect_eq f2 c= cMEM f1 clist_of_darts f0 cT c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0 c==> cssreflect_eq f2 c= cMEM f1 clist_of_darts f0 cF c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0
- |- (((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) ==> (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))))) = (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))))
T c= c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1
+ ((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) |- (((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) /\ ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c/\ cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)), ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS f) NIL)) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((dropl (n + (NUMERAL (BIT1 _0)))) L)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) |- (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS f) NIL)) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((dropl (n + (NUMERAL (BIT1 _0)))) L)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) /\ ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((take n) L)) ((take n) L)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c==> c= cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f0 cNIL cdropl c+ f1 cNUMERAL cBIT1 c_0 f2 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f0 f0 cNIL cdropl c+ f1 cNUMERAL cBIT1 c_0 f2 c/\ cALL2 / / c? / c= b1 crot b2 b0 cCONS f0 cNIL cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f0 f0 cNIL cALL2 / / c? / c= b1 crot b2 b0 cdropl c+ f1 cNUMERAL cBIT1 c_0 f2 cdropl c+ f1 cNUMERAL cBIT1 c_0 f2 c/\ c= cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f0 cNIL cdropl c+ f1 cNUMERAL cBIT1 c_0 f2 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f0 f0 cNIL cdropl c+ f1 cNUMERAL cBIT1 c_0 f2 c/\ cALL2 / / c? / c= b1 crot b2 b0 cCONS f0 cNIL cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f0 f0 cNIL cALL2 / / c? / c= b1 crot b2 b0 cdropl c+ f1 cNUMERAL cBIT1 c_0 f2 cdropl c+ f1 cNUMERAL cBIT1 c_0 f2 c/\ cALL2 / / c? / c= b1 crot b2 b0 ctake f1 f2 ctake f1 f2 cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f0 cNIL cdropl c+ f1 cNUMERAL cBIT1 c_0 f2 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f0 f0 cNIL cdropl c+ f1 cNUMERAL cBIT1 c_0 f2
+ |- (((!s1. (!t1. (!s2. (!t2. (((sizel s1) = (sizel s2)) ==> ((((ALL2 f) ((cat s1) t1)) ((cat s2) t2)) = ((((ALL2 f) s1) s2) /\ (((ALL2 f) t1) t2)))))))) ==> ((\s1. (!t1. (!s2. (!t2. (((sizel s1) = (sizel s2)) ==> ((((ALL2 f) ((cat s1) t1)) ((cat s2) t2)) = ((((ALL2 f) s1) s2) /\ (((ALL2 f) t1) t2)))))))) s1)) = ((\s1. (!t1. (!s2. (!t2. (((sizel s1) = (sizel s2)) ==> ((((ALL2 f) ((cat s1) t1)) ((cat s2) t2)) = ((((ALL2 f) s1) s2) /\ (((ALL2 f) t1) t2)))))))) s1))
T c= c==> ! ! ! ! c==> c= csizel b0 csizel b2 c= cALL2 f0 ccat b0 b1 ccat b2 b3 c/\ cALL2 f0 b0 b2 cALL2 f0 b1 b3 * / ! ! ! c==> c= csizel b0 csizel b2 c= cALL2 f0 ccat b0 b1 ccat b2 b3 c/\ cALL2 f0 b0 b2 cALL2 f0 b1 b3 f1 * / ! ! ! c==> c= csizel b0 csizel b2 c= cALL2 f0 ccat b0 b1 ccat b2 b3 c/\ cALL2 f0 b0 b2 cALL2 f0 b1 b3 f1
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)) |- ((((\n. (((indexl f) L) = n)) n) ==> (((sizel f) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take ((indexl f) L)) L)) ((cat ((CONS f) NIL)) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take ((indexl f) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L)))))) = T)
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c= c==> * / c= cindexl f0 f1 b0 f2 c==> c<= csizel f0 cNUMERAL cBIT1 cBIT1 c_0 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake cindexl f0 f1 f1 ccat cCONS f0 cNIL cdropl c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f1 ccat ctake cindexl f0 f1 f1 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f0 f0 cdropl c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f1 cT
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)) |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s) = T)
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c= cALL2 / / c? / c= b1 crot b2 b0 f0 f0 cT
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))), ((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) |- (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 c/\ c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
+ (uniq (list_of_darts L)), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) /\ (T ==> ((hypermap_of_list L2) = (hypermap_of_list L))))
T c==> cuniq clist_of_darts f0 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f1 c/\ cALL2 / / c? / c= b1 crot b2 b0 f0 f1 c==> cT c= chypermap_of_list f1 chypermap_of_list f0
+ |- (((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) /\ (((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))) ==> (!x. (((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = x)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))))
T c==> c/\ c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 ! c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 b0 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2
+ (uniq (list_of_darts L)) |- ((((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) ==> (T ==> ((hypermap_of_list L2) = (hypermap_of_list L)))) ==> (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) /\ T) ==> ((hypermap_of_list L2) = (hypermap_of_list L)))) = (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) /\ T) ==> ((hypermap_of_list L2) = (hypermap_of_list L))))
T c==> cuniq clist_of_darts f0 c= c==> c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f1 c==> cT c= chypermap_of_list f1 chypermap_of_list f0 c==> c/\ cALL2 / / c? / c= b1 crot b2 b0 f0 f1 cT c= chypermap_of_list f1 chypermap_of_list f0 c==> c/\ cALL2 / / c? / c= b1 crot b2 b0 f0 f1 cT c= chypermap_of_list f1 chypermap_of_list f0
- ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- (((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) = T)
T c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= cssreflect_eq f0 cMEM f1 clist_of_darts f2 cT
+ |- (((!s. (!m. (!n. (?k. (((rot m) ((rot n) s)) = ((rot k) s)))))) ==> ((\s. (!m. (!n. (?k. (((rot m) ((rot n) s)) = ((rot k) s)))))) s)) = ((\s. (!m. (!n. (?k. (((rot m) ((rot n) s)) = ((rot k) s)))))) s))
T c= c==> ! ! ! c? / c= crot b1 crot b2 b0 crot b3 b0 * / ! ! c? / c= crot b1 crot b2 b0 crot b3 b0 f0 * / ! ! c? / c= crot b1 crot b2 b0 crot b3 b0 f0
- |- ((\p'. (!q'. ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q')))))) p')
T * / ! c==> c= cssreflect_eq f0 cMEM f1 clist_of_darts f2 b0 c==> c==> b0 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b1 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> b0 b1 f3
- ((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) |- ((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) ==> (!x. (P x)))
T c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! * f0 b0
+ (uniq (list_of_darts L)), ((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- (((!x. (((\x. (((MEM d) (list_of_darts L)) = x)) x) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))) ==> ((?x. (((MEM d) (list_of_darts L)) = x)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))) = ((?x. (((MEM d) (list_of_darts L)) = x)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))))
T c==> cuniq clist_of_darts f0 c==> c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c= c==> ! c==> * / c= cMEM f1 clist_of_darts f0 b1 b0 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0 c==> c? / c= cMEM f1 clist_of_darts f0 b0 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0 c==> c? / c= cMEM f1 clist_of_darts f0 b0 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0
+ ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take n) L)) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((take n) L)) ((take n) L)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) |- (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((take n) L)) ((take n) L)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) = (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take n) L)) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))
T c==> c= cALL2 / / c? / c= b1 crot b2 b0 ccat ctake f0 f1 ccat cCONS f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat ctake f0 f1 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 c/\ cALL2 / / c? / c= b1 crot b2 b0 ctake f0 f1 ctake f0 f1 cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 c= c/\ cALL2 / / c? / c= b1 crot b2 b0 ctake f0 f1 ctake f0 f1 cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake f0 f1 ccat cCONS f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat ctake f0 f1 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f3 clist_pairs f2 f2 cNIL cdropl c+ f0 cNUMERAL cBIT1 c_0 f1
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)) |- ((((sizel ((CONS f) NIL)) = (sizel ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL))) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS f) NIL)) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((dropl (n + (NUMERAL (BIT1 _0)))) L)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((take n) L)) ((take n) L)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))) ((cat ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c==> c==> c= csizel cCONS f0 cNIL csizel cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL c= cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f0 cNIL cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 c/\ cALL2 / / c? / c= b1 crot b2 b0 cCONS f0 cNIL cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cALL2 / / c? / c= b1 crot b2 b0 cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 c/\ cALL2 / / c? / c= b1 crot b2 b0 ctake f2 f3 ctake f2 f3 cALL2 / / c? / c= b1 crot b2 b0 ccat cCONS f0 cNIL cdropl c+ f2 cNUMERAL cBIT1 c_0 f3 ccat cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cdropl c+ f2 cNUMERAL cBIT1 c_0 f3
+ |- ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2)))
T c= cALL2 f0 cCONS f1 f2 cCONS f3 f4 c/\ * * f0 f1 f3 cALL2 f0 f2 f4
+ |- ((\d. (((MEM d) (list_of_darts L)) ==> (L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))))) d)
T * / c==> cMEM b0 clist_of_darts f0 c= f0 ccat ctake cindexl cfind_pair_list f0 b0 f0 f0 ccat cCONS cfind_pair_list f0 b0 cNIL cdropl c+ cindexl cfind_pair_list f0 b0 f0 cNUMERAL cBIT1 c_0 f0 f1
- |- ((((MEM d) (list_of_darts L)) = x) ==> (?x. (((MEM d) (list_of_darts L)) = x)))
T c==> c= cMEM f0 clist_of_darts f1 f2 c? / c= cMEM f0 clist_of_darts f1 b0
+ (uniq (list_of_darts L)), ((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))), ((\x. (((MEM d) (list_of_darts L)) = x)) x) |- (((\x. (((MEM d) (list_of_darts L)) = x)) x) /\ ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))
T c==> cuniq clist_of_darts f0 c==> c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> * / c= cMEM f1 clist_of_darts f0 b0 f2 c/\ * / c= cMEM f1 clist_of_darts f0 b0 f2 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0
+ ((\j. (((indexl d) (list_pairs f)) = j)) j) |- (((\j. (((indexl d) (list_pairs f)) = j)) j) /\ (?n. (((rot i) ((rot ((indexl d) (list_pairs f))) f)) = ((rot n) f))))
T c==> * / c= cindexl f0 clist_pairs f1 b0 f2 c/\ * / c= cindexl f0 clist_pairs f1 b0 f2 c? / c= crot f3 crot cindexl f0 clist_pairs f1 f1 crot b0 f1
+ |- ((?j. (((indexl d) (list_pairs f)) = j)) ==> (?n. (((rot i) ((rot ((indexl d) (list_pairs f))) f)) = ((rot n) f))))
T c==> c? / c= cindexl f0 clist_pairs f1 b0 c? / c= crot f2 crot cindexl f0 clist_pairs f1 f1 crot b0 f1
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)), ((\f. (((find_pair_list L) d) = f)) f) |- (((\f. (((find_pair_list L) d) = f)) f) /\ (((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c==> * / c= cfind_pair_list f0 f1 b0 f2 c/\ * / c= cfind_pair_list f0 f1 b0 f2 c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cALL2 / / c? / c= b1 crot b2 b0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0
+ |- ((((indexl f) L) = ((indexl f) L)) = ((\n. (((indexl f) L) = n)) ((indexl f) L)))
T c= c= cindexl f0 f1 cindexl f0 f1 * / c= cindexl f0 f1 b0 cindexl f0 f1
+ |- (((!L2. (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) /\ (uniq (list_of_darts L1))) ==> ((hypermap_of_list L2) = (hypermap_of_list L1)))) ==> ((\L2. (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) /\ (uniq (list_of_darts L1))) ==> ((hypermap_of_list L2) = (hypermap_of_list L1)))) L2)) = ((\L2. (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) /\ (uniq (list_of_darts L1))) ==> ((hypermap_of_list L2) = (hypermap_of_list L1)))) L2))
T c= c==> ! c==> c/\ cALL2 / / c? / c= b2 crot b3 b1 f0 b0 cuniq clist_of_darts f0 c= chypermap_of_list b0 chypermap_of_list f0 * / c==> c/\ cALL2 / / c? / c= b2 crot b3 b1 f0 b0 cuniq clist_of_darts f0 c= chypermap_of_list b0 chypermap_of_list f0 f1 * / c==> c/\ cALL2 / / c? / c= b2 crot b3 b1 f0 b0 cuniq clist_of_darts f0 c= chypermap_of_list b0 chypermap_of_list f0 f1
+ |- (((!d. (((find_face L) d) = (list_pairs ((find_pair_list L) d)))) ==> ((\d. (((find_face L) d) = (list_pairs ((find_pair_list L) d)))) d)) = ((\d. (((find_face L) d) = (list_pairs ((find_pair_list L) d)))) d))
T c= c==> ! c= cfind_face f0 b0 clist_pairs cfind_pair_list f0 b0 * / c= cfind_face f0 b0 clist_pairs cfind_pair_list f0 b0 f1 * / c= cfind_face f0 b0 clist_pairs cfind_pair_list f0 b0 f1
+ |- (((!t2. (((sizel s1) = (sizel s2)) ==> ((((ALL2 f) ((cat s1) t1)) ((cat s2) t2)) = ((((ALL2 f) s1) s2) /\ (((ALL2 f) t1) t2))))) ==> ((\t2. (((sizel s1) = (sizel s2)) ==> ((((ALL2 f) ((cat s1) t1)) ((cat s2) t2)) = ((((ALL2 f) s1) s2) /\ (((ALL2 f) t1) t2))))) t2)) = ((\t2. (((sizel s1) = (sizel s2)) ==> ((((ALL2 f) ((cat s1) t1)) ((cat s2) t2)) = ((((ALL2 f) s1) s2) /\ (((ALL2 f) t1) t2))))) t2))
T c= c==> ! c==> c= csizel f0 csizel f1 c= cALL2 f2 ccat f0 f3 ccat f1 b0 c/\ cALL2 f2 f0 f1 cALL2 f2 f3 b0 * / c==> c= csizel f0 csizel f1 c= cALL2 f2 ccat f0 f3 ccat f1 b0 c/\ cALL2 f2 f0 f1 cALL2 f2 f3 b0 f4 * / c==> c= csizel f0 csizel f1 c= cALL2 f2 ccat f0 f3 ccat f1 b0 c/\ cALL2 f2 f0 f1 cALL2 f2 f3 b0 f4
+ |- ((\d. (((find_face L) d) = (list_pairs ((find_pair_list L) d)))) d)
T * / c= cfind_face f0 b0 clist_pairs cfind_pair_list f0 b0 f1
+ ((\j. (((indexl d) (list_pairs f)) = j)) j) |- (((indexl d) (list_pairs f)) = j)
T c==> * / c= cindexl f0 clist_pairs f1 b0 f2 c= cindexl f0 clist_pairs f1 f2
- |- (((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> ((uniq (list_of_darts L)) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))))
T c==> c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> cuniq clist_of_darts f0 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0
+ (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)) |- (!n. (((\n. (((indexl f) L) = n)) n) ==> (((sizel f) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((cat ((take ((indexl f) L)) L)) ((cat ((CONS f) NIL)) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L)))) ((cat ((take ((indexl f) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L)))))))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 ! c==> * / c= cindexl f0 f1 b1 b0 c==> c<= csizel f0 cNUMERAL cBIT1 cBIT1 c_0 cALL2 / / c? / c= b2 crot b3 b1 ccat ctake cindexl f0 f1 f1 ccat cCONS f0 cNIL cdropl c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f1 ccat ctake cindexl f0 f1 f1 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f2 clist_pairs f0 f0 cdropl c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f1
+ |- ((\L. (!d. (((find_face L) d) = (list_pairs ((find_pair_list L) d))))) L)
T * / ! c= cfind_face b0 b1 clist_pairs cfind_pair_list b0 b1 f0
- (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i), (((indexl d) (list_pairs f)) = j) |- (((sizel ((rot j) f)) - (NUMERAL (BIT1 _0))) = i)
T c==> c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 f2 c==> c= cindexl f0 clist_pairs f1 f3 c= c- csizel crot f3 f1 cNUMERAL cBIT1 c_0 f2
- ((MEM d) (list_of_darts L)) |- (((MEM d) (list_of_darts L)) /\ (((split_list_hyp L) d) = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))))
T c==> cMEM f0 clist_of_darts f1 c/\ cMEM f0 clist_of_darts f1 c= csplit_list_hyp f1 f0 ccat ctake cindexl cfind_pair_list f1 f0 f1 f1 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs cfind_pair_list f1 f0 cfind_pair_list f1 f0 cdropl c+ cindexl cfind_pair_list f1 f0 f1 cNUMERAL cBIT1 c_0 f1
- |- ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)
T * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) |- ((\P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) P)
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 * / c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 f0
- |- (((!x. (((\i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)) x) ==> (?i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)))) ==> ((?i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)) ==> (?i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)))) = ((?i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)) ==> (?i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i))))
T c= c==> ! c==> * / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b1 b0 c? / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b1 c==> c? / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0 c? / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0 c==> c? / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0 c? / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0
- (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) ==> ((hypermap_of_list L2) = (hypermap_of_list L)))), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) /\ ((hypermap_of_list L2) = (hypermap_of_list L)))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c= chypermap_of_list b0 chypermap_of_list f0 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f1 c/\ cALL2 / / c? / c= b1 crot b2 b0 f0 f1 c= chypermap_of_list f1 chypermap_of_list f0
- |- (!j. (((\j. (((indexl d) (list_pairs f)) = j)) j) ==> (?j. (((indexl d) (list_pairs f)) = j))))
T c==> * / c= cindexl f0 clist_pairs f1 b0 f2 c? / c= cindexl f0 clist_pairs f1 b0
- |- (((!h1. (!h2. (!P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))))))) ==> ((\h1. (!h2. (!P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))))))) h1)) = ((\h1. (!h2. (!P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))))))) h1))
T c= c==> ! ! ! ! ! c/\ c= cALL2 b2 cNIL cNIL cT c/\ c= cALL2 b2 cCONS b0 b3 cNIL cF c/\ c= cALL2 b2 cNIL cCONS b1 b4 cF c= cALL2 b2 cCONS b0 b3 cCONS b1 b4 c/\ * * b2 b0 b1 cALL2 b2 b3 b4 * / ! ! ! ! c/\ c= cALL2 b2 cNIL cNIL cT c/\ c= cALL2 b2 cCONS b0 b3 cNIL cF c/\ c= cALL2 b2 cNIL cCONS b1 b4 cF c= cALL2 b2 cCONS b0 b3 cCONS b1 b4 c/\ * * b2 b0 b1 cALL2 b2 b3 b4 f0 * / ! ! ! ! c/\ c= cALL2 b2 cNIL cNIL cT c/\ c= cALL2 b2 cCONS b0 b3 cNIL cF c/\ c= cALL2 b2 cNIL cCONS b1 b4 cF c= cALL2 b2 cCONS b0 b3 cCONS b1 b4 c/\ * * b2 b0 b1 cALL2 b2 b3 b4 f0
- |- ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))))
T c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2
- (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i) |- ((((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i) /\ (?i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)))
T c==> c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 f2 c/\ c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 f2 c? / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0
- |- ((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) ==> (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1
- |- ((((MEM d) (list_of_darts L)) = x) = ((\x. (((MEM d) (list_of_darts L)) = x)) x))
T c= c= cMEM f0 clist_of_darts f1 f2 * / c= cMEM f0 clist_of_darts f1 b0 f2
- |- ((((\n. (((indexl f) L) = n)) n) ==> (?n. (((indexl f) L) = n))) = T)
T c= c==> * / c= cindexl f0 f1 b0 f2 c? / c= cindexl f0 f1 b0 cT
- |- ((\b. ((b /\ T) = b)) b)
T * / c= c/\ b0 cT b0 f0
- |- ((\h1. (!h2. (!P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))))))) h1)
T * / ! ! ! ! c/\ c= cALL2 b2 cNIL cNIL cT c/\ c= cALL2 b2 cCONS b0 b3 cNIL cF c/\ c= cALL2 b2 cNIL cCONS b1 b4 cF c= cALL2 b2 cCONS b0 b3 cCONS b1 b4 c/\ * * b2 b0 b1 cALL2 b2 b3 b4 f0
- (((indexl d) (list_pairs f)) = j) |- ((((indexl d) (list_pairs f)) = j) /\ (?j. (((indexl d) (list_pairs f)) = j)))
T c==> c= cindexl f0 clist_pairs f1 f2 c/\ c= cindexl f0 clist_pairs f1 f2 c? / c= cindexl f0 clist_pairs f1 b0
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((((P T) /\ (P F)) ==> (!x. (P x))) = T)
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c= c==> c/\ * f0 cT * f0 cF ! * f0 b0 cT
- |- (((!P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) ==> ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)) = ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P))
T c= c==> ! ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- |- ((\q'. ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q'))))) q')
T * / c==> c= cssreflect_eq f0 cMEM f1 clist_of_darts f2 f3 c==> c==> f3 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b0 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> f3 b0 f4
- (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))) |- ((!x. ((P x) ==> Q)) = ((?x. (P x)) ==> Q))
T c==> c= c==> c? / * f0 b0 f1 ! c==> * f0 b0 f1 c= ! c==> * f0 b0 f1 c==> c? / * f0 b0 f1
- |- ((\s. (!n. (?k. (((rot i) ((rot n) s)) = ((rot k) s))))) s)
T * / ! c? / c= crot f0 crot b1 b0 crot b2 b0 f1
- |- (((!s. (!n. (?k. (((rot i) ((rot n) s)) = ((rot k) s))))) ==> ((\s. (!n. (?k. (((rot i) ((rot n) s)) = ((rot k) s))))) s)) = ((\s. (!n. (?k. (((rot i) ((rot n) s)) = ((rot k) s))))) s))
T c= c==> ! ! c? / c= crot f0 crot b1 b0 crot b2 b0 * / ! c? / c= crot f0 crot b1 b0 crot b2 b0 f1 * / ! c? / c= crot f0 crot b1 b0 crot b2 b0 f1
- |- (((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!P. (((P T) /\ (P F)) ==> (!x. (P x))))) = (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c= c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) /\ (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c/\ ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
- |- (((!p'. (!q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 b0 c==> c==> b0 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b1 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> b0 b1 * / ! c==> c= cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 b0 c==> c==> b0 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b1 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> b0 b1 f3 * / ! c==> c= cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 b0 c==> c==> b0 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b1 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> b0 b1 f3
- |- ((!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) ==> ((hypermap_of_list L2) = (hypermap_of_list L)))) ==> (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) ==> ((hypermap_of_list L2) = (hypermap_of_list L)))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c= chypermap_of_list b0 chypermap_of_list f0 ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c= chypermap_of_list b0 chypermap_of_list f0
- (uniq (list_of_darts L)) |- ((uniq (list_of_darts L)) = T)
T c==> cuniq clist_of_darts f0 c= cuniq clist_of_darts f0 cT
- |- (T = ((hypermap_of_list L) = (hypermap_of_list L)))
T c= cT c= chypermap_of_list f0 chypermap_of_list f0
- |- (((!h2. (!P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2)))))))))) ==> ((\h2. (!P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2)))))))))) h2)) = ((\h2. (!P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2)))))))))) h2))
T c= c==> ! ! ! ! c/\ c= cALL2 b1 cNIL cNIL cT c/\ c= cALL2 b1 cCONS f0 b2 cNIL cF c/\ c= cALL2 b1 cNIL cCONS b0 b3 cF c= cALL2 b1 cCONS f0 b2 cCONS b0 b3 c/\ * * b1 f0 b0 cALL2 b1 b2 b3 * / ! ! ! c/\ c= cALL2 b1 cNIL cNIL cT c/\ c= cALL2 b1 cCONS f0 b2 cNIL cF c/\ c= cALL2 b1 cNIL cCONS b0 b3 cF c= cALL2 b1 cCONS f0 b2 cCONS b0 b3 c/\ * * b1 f0 b0 cALL2 b1 b2 b3 f1 * / ! ! ! c/\ c= cALL2 b1 cNIL cNIL cT c/\ c= cALL2 b1 cCONS f0 b2 cNIL cF c/\ c= cALL2 b1 cNIL cCONS b0 b3 cF c= cALL2 b1 cCONS f0 b2 cCONS b0 b3 c/\ * * b1 f0 b0 cALL2 b1 b2 b3 f1
- ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- (((MEM d) (list_of_darts L)) = T)
T c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= cMEM f1 clist_of_darts f2 cT
- ((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) |- (T = (~ ((MEM d) (list_of_darts L))))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= cT c~ cMEM f1 clist_of_darts f2
- |- ((\t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))) t2)
T * / c/\ c= cALL2 f0 cNIL cNIL cT c/\ c= cALL2 f0 cCONS f1 f2 cNIL cF c/\ c= cALL2 f0 cNIL cCONS f3 b0 cF c= cALL2 f0 cCONS f1 f2 cCONS f3 b0 c/\ * * f0 f1 f3 cALL2 f0 f2 b0 f4
- |- ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> q')))
T c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 f3 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 f3
- |- (((!b. ((b /\ T) = b)) ==> ((\b. ((b /\ T) = b)) b)) = ((\b. ((b /\ T) = b)) b))
T c= c==> ! c= c/\ b0 cT b0 * / c= c/\ b0 cT b0 f0 * / c= c/\ b0 cT b0 f0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((!n. (?k. (((rot i) ((rot n) s)) = ((rot k) s)))) = T)
T c= ! c? / c= crot f0 crot b0 f1 crot b1 f1 cT
- ((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- (((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) = T)
T c==> c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c= c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cT
- |- (((!P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))))) ==> ((\P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))))) P)) = ((\P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))))) P))
T c= c==> ! ! ! c/\ c= cALL2 b0 cNIL cNIL cT c/\ c= cALL2 b0 cCONS f0 b1 cNIL cF c/\ c= cALL2 b0 cNIL cCONS f1 b2 cF c= cALL2 b0 cCONS f0 b1 cCONS f1 b2 c/\ * * b0 f0 f1 cALL2 b0 b1 b2 * / ! ! c/\ c= cALL2 b0 cNIL cNIL cT c/\ c= cALL2 b0 cCONS f0 b1 cNIL cF c/\ c= cALL2 b0 cNIL cCONS f1 b2 cF c= cALL2 b0 cCONS f0 b1 cCONS f1 b2 c/\ * * b0 f0 f1 cALL2 b0 b1 b2 f2 * / ! ! c/\ c= cALL2 b0 cNIL cNIL cT c/\ c= cALL2 b0 cCONS f0 b1 cNIL cF c/\ c= cALL2 b0 cNIL cCONS f1 b2 cF c= cALL2 b0 cCONS f0 b1 cCONS f1 b2 c/\ * * b0 f0 f1 cALL2 b0 b1 b2 f2
- |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
- |- ((((indexl d) (list_pairs f)) = j) ==> (?j. (((indexl d) (list_pairs f)) = j)))
T c==> c= cindexl f0 clist_pairs f1 f2 c? / c= cindexl f0 clist_pairs f1 b0
- ((\x. (((MEM d) (list_of_darts L)) = x)) x) |- (((((MEM d) (list_of_darts L)) = x) ==> (?x. (((MEM d) (list_of_darts L)) = x))) = (?x. (((MEM d) (list_of_darts L)) = x)))
T c==> * / c= cMEM f0 clist_of_darts f1 b0 f2 c= c==> c= cMEM f0 clist_of_darts f1 f2 c? / c= cMEM f0 clist_of_darts f1 b0 c? / c= cMEM f0 clist_of_darts f1 b0
- |- ((?j. (((indexl d) (list_pairs f)) = j)) ==> (?j. (((indexl d) (list_pairs f)) = j)))
T c==> c? / c= cindexl f0 clist_pairs f1 b0 c? / c= cindexl f0 clist_pairs f1 b0
- ((!x. ((P x) ==> Q)) = ((?x. (P x)) ==> Q)) |- (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q)))
T c==> c= ! c==> * f0 b0 f1 c==> c? / * f0 b0 f1 c= c==> c? / * f0 b0 f1 ! c==> * f0 b0 f1
- |- ((\P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))))) P)
T * / ! ! c/\ c= cALL2 b0 cNIL cNIL cT c/\ c= cALL2 b0 cCONS f0 b1 cNIL cF c/\ c= cALL2 b0 cNIL cCONS f1 b2 cF c= cALL2 b0 cCONS f0 b1 cCONS f1 b2 c/\ * * b0 f0 f1 cALL2 b0 b1 b2 f2
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- (((P T) /\ (P F)) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF c/\ c/\ * f0 cT * f0 cF ! * f0 b0
- (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) ==> ((hypermap_of_list L2) = (hypermap_of_list L)))) |- (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) ==> ((hypermap_of_list L2) = (hypermap_of_list L))) = T)
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c= chypermap_of_list b0 chypermap_of_list f0 c= c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f1 c= chypermap_of_list f1 chypermap_of_list f0 cT
- |- ((\q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) = p') ==> ((p' ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (p' ==> q'))))) q')
T * / c==> c= cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 f3 c==> c==> f3 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 b0 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> f3 b0 f4
- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))) |- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))
T c==> c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0 c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
- |- (((!x. (((\n. (((indexl f) L) = n)) x) ==> (?n. (((indexl f) L) = n)))) ==> ((?n. (((indexl f) L) = n)) ==> (?n. (((indexl f) L) = n)))) = ((?n. (((indexl f) L) = n)) ==> (?n. (((indexl f) L) = n))))
T c= c==> ! c==> * / c= cindexl f0 f1 b1 b0 c? / c= cindexl f0 f1 b1 c==> c? / c= cindexl f0 f1 b0 c? / c= cindexl f0 f1 b0 c==> c? / c= cindexl f0 f1 b0 c? / c= cindexl f0 f1 b0
- (((MEM d) (list_of_darts L)) = x) |- ((((MEM d) (list_of_darts L)) = x) /\ (?x. (((MEM d) (list_of_darts L)) = x)))
T c==> c= cMEM f0 clist_of_darts f1 f2 c/\ c= cMEM f0 clist_of_darts f1 f2 c? / c= cMEM f0 clist_of_darts f1 b0
- ((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) |- (((MEM d) (list_of_darts L)) = F)
T c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= cMEM f1 clist_of_darts f2 cF
- ((sizel s1) = (sizel s2)) |- (((sizel s1) = (sizel s2)) /\ ((((ALL2 f) ((cat s1) t1)) ((cat s2) t2)) = ((((ALL2 f) s1) s2) /\ (((ALL2 f) t1) t2))))
T c==> c= csizel f0 csizel f1 c/\ c= csizel f0 csizel f1 c= cALL2 f2 ccat f0 f3 ccat f1 f4 c/\ cALL2 f2 f0 f1 cALL2 f2 f3 f4
- |- (((!x. (((\f. (((find_pair_list L) d) = f)) x) ==> (?f. (((find_pair_list L) d) = f)))) ==> ((?f. (((find_pair_list L) d) = f)) ==> (?f. (((find_pair_list L) d) = f)))) = ((?f. (((find_pair_list L) d) = f)) ==> (?f. (((find_pair_list L) d) = f))))
T c= c==> ! c==> * / c= cfind_pair_list f0 f1 b1 b0 c? / c= cfind_pair_list f0 f1 b1 c==> c? / c= cfind_pair_list f0 f1 b0 c? / c= cfind_pair_list f0 f1 b0 c==> c? / c= cfind_pair_list f0 f1 b0 c? / c= cfind_pair_list f0 f1 b0
- (((indexl f) L) = n) |- ((\n. (((indexl f) L) = n)) n)
T c==> c= cindexl f0 f1 f2 * / c= cindexl f0 f1 b0 f2
- |- ((((\j. (((indexl d) (list_pairs f)) = j)) j) ==> (?j. (((indexl d) (list_pairs f)) = j))) = T)
T c= c==> * / c= cindexl f0 clist_pairs f1 b0 f2 c? / c= cindexl f0 clist_pairs f1 b0 cT
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) |- ((((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))) = T)
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c= c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0 cT
- ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- (T = ((MEM d) (list_of_darts L)))
T c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= cT cMEM f1 clist_of_darts f2
- (((MEM d) (list_of_darts L)) = x) |- (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))
T c==> c= cMEM f0 clist_of_darts f1 f2 c= c= chypermap_of_list csplit_list_hyp f1 f0 chypermap_of_list f1 c= chypermap_of_list csplit_list_hyp f1 f0 chypermap_of_list f1
- |- ((~ F) = T)
T c= c~ cF cT
- |- (T = (h = h))
T c= cT c= f0 f0
- |- (((!x. (((\x. (((MEM d) (list_of_darts L)) = x)) x) ==> (?x. (((MEM d) (list_of_darts L)) = x)))) ==> ((?x. (((MEM d) (list_of_darts L)) = x)) ==> (?x. (((MEM d) (list_of_darts L)) = x)))) = ((?x. (((MEM d) (list_of_darts L)) = x)) ==> (?x. (((MEM d) (list_of_darts L)) = x))))
T c= c==> ! c==> * / c= cMEM f0 clist_of_darts f1 b1 b0 c? / c= cMEM f0 clist_of_darts f1 b1 c==> c? / c= cMEM f0 clist_of_darts f1 b0 c? / c= cMEM f0 clist_of_darts f1 b0 c==> c? / c= cMEM f0 clist_of_darts f1 b0 c? / c= cMEM f0 clist_of_darts f1 b0
- |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- |- (!n. (((\n. (((indexl f) L) = n)) n) ==> (?n. (((indexl f) L) = n))))
T c==> * / c= cindexl f0 f1 b0 f2 c? / c= cindexl f0 f1 b0
- |- ((((\x. (((MEM d) (list_of_darts L)) = x)) x) ==> (?x. (((MEM d) (list_of_darts L)) = x))) = T)
T c= c==> * / c= cMEM f0 clist_of_darts f1 b0 f2 c? / c= cMEM f0 clist_of_darts f1 b0 cT
- |- ((((ALL2 P) ((CONS h1) t1)) NIL) = F)
T c= cALL2 f0 cCONS f1 f2 cNIL cF
- |- ((((\f. (((find_pair_list L) d) = f)) f) ==> (?f. (((find_pair_list L) d) = f))) = T)
T c= c==> * / c= cfind_pair_list f0 f1 b0 f2 c? / c= cfind_pair_list f0 f1 b0 cT
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF c/\ ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! * f0 b0
- (!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)), (uniq (list_of_darts L)), ((sizel ((find_face L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))), ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- ((!s. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) s) s)) /\ ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))
T c==> ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c==> cuniq clist_of_darts f0 c==> c<= csizel cfind_face f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> cssreflect_eq f2 cMEM f1 clist_of_darts f0 c/\ ! cALL2 / / c? / c= b2 crot b3 b1 b0 b0 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0
- |- (((\f2. (f f2)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) = ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L)))) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> q')))) = ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> q'))))
T c= c==> c= cssreflect_eq f0 cMEM f1 clist_of_darts f2 cssreflect_eq f0 cMEM f1 clist_of_darts f2 c==> c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 f3 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 f3 c==> c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 f3 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 f3
- |- ((((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i) = ((\i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)) i))
T c= c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 f2 * / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0 f2
- (((indexl f) L) = n) |- ((((indexl f) L) = n) /\ (?n. (((indexl f) L) = n)))
T c==> c= cindexl f0 f1 f2 c/\ c= cindexl f0 f1 f2 c? / c= cindexl f0 f1 b0
- |- ((\t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2)))))))) t1)
T * / ! c/\ c= cALL2 f0 cNIL cNIL cT c/\ c= cALL2 f0 cCONS f1 b0 cNIL cF c/\ c= cALL2 f0 cNIL cCONS f2 b1 cF c= cALL2 f0 cCONS f1 b0 cCONS f2 b1 c/\ * * f0 f1 f2 cALL2 f0 b0 b1 f3
- ((\n. (((indexl f) L) = n)) n) |- (((((indexl f) L) = n) ==> (?n. (((indexl f) L) = n))) = (?n. (((indexl f) L) = n)))
T c==> * / c= cindexl f0 f1 b0 f2 c= c==> c= cindexl f0 f1 f2 c? / c= cindexl f0 f1 b0 c? / c= cindexl f0 f1 b0
- |- ((?i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)) ==> (?i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)))
T c==> c? / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0 c? / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0
- |- ((((indexl f) L) = n) = ((\n. (((indexl f) L) = n)) n))
T c= c= cindexl f0 f1 f2 * / c= cindexl f0 f1 b0 f2
- |- (((!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) ==> ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)) = ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q))
T c= c==> ! c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- |- ((((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i) ==> (?i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)))
T c==> c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 f2 c? / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0
- |- ((?n. (((indexl f) L) = n)) ==> (?n. (((indexl f) L) = n)))
T c==> c? / c= cindexl f0 f1 b0 c? / c= cindexl f0 f1 b0
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) |- ((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) /\ (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c/\ ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1
- (((indexl d) (list_pairs f)) = j) |- ((\j. (((indexl d) (list_pairs f)) = j)) j)
T c==> c= cindexl f0 clist_pairs f1 f2 * / c= cindexl f0 clist_pairs f1 b0 f2
- (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) ==> ((hypermap_of_list L2) = (hypermap_of_list L)))) |- ((!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) ==> ((hypermap_of_list L2) = (hypermap_of_list L)))) /\ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L) L2) ==> ((hypermap_of_list L2) = (hypermap_of_list L)))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c= chypermap_of_list b0 chypermap_of_list f0 c/\ ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c= chypermap_of_list b0 chypermap_of_list f0 ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c= chypermap_of_list b0 chypermap_of_list f0
- |- ((((ALL2 P) NIL) ((CONS h2) t2)) = F)
T c= cALL2 f0 cNIL cCONS f1 f2 cF
- |- ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> (((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L))) = (((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> q')))
T c==> c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 f3 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= chypermap_of_list csplit_list_hyp f2 f1 chypermap_of_list f2 c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 f3
- (((split_list_hyp L) d) = L) |- (((hypermap_of_list L) = (hypermap_of_list L)) = ((hypermap_of_list ((split_list_hyp L) d)) = (hypermap_of_list L)))
T c==> c= csplit_list_hyp f0 f1 f0 c= c= chypermap_of_list f0 chypermap_of_list f0 c= chypermap_of_list csplit_list_hyp f0 f1 chypermap_of_list f0
- ((\i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)) i) |- (((((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i) ==> (?i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i))) = (?i. (((sizel ((rot ((indexl d) (list_pairs f))) f)) - (NUMERAL (BIT1 _0))) = i)))
T c==> * / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0 f2 c= c==> c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 f2 c? / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0 c? / c= c- csizel crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 c_0 b0
