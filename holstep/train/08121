N AFFINE_HULL_PCROSS
C |- (!s. (!t. (((hull affine) (s PCROSS t)) = (((hull affine) s) PCROSS ((hull affine) t)))))
T c= * * part chull part caffine * * part cPCROSS f0 f1 * * part cPCROSS * * part chull part caffine f0 * * part chull part caffine f1
D TRUTH
A |- T
T cT
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D SUBSET_ANTISYM
A |- (!s. (!t. (((s SUBSET t) /\ (t SUBSET s)) ==> (s = t))))
T c==> c/\ cSUBSET f0 f1 cSUBSET f1 f0 c= f0 f1
D FORALL_IN_GSPEC
A |- ((!P. (!f. ((!z. ((z IN (GSPEC (\GEN%PVAR%21. (?x. (((SETSPEC GEN%PVAR%21) (P x)) (f x)))))) ==> (Q z))) = (!x. ((P x) ==> (Q (f x))))))) /\ ((!P. (!f. ((!z. ((z IN (GSPEC (\GEN%PVAR%22. (?x. (?y. (((SETSPEC GEN%PVAR%22) ((P x) y)) ((f x) y))))))) ==> (Q z))) = (!x. (!y. (((P x) y) ==> (Q ((f x) y)))))))) /\ ((!P. (!f. ((!z. ((z IN (GSPEC (\GEN%PVAR%23. (?w. (?x. (?y. (((SETSPEC GEN%PVAR%23) (((P w) x) y)) (((f w) x) y)))))))) ==> (Q z))) = (!w. (!x. (!y. ((((P w) x) y) ==> (Q (((f w) x) y))))))))) /\ (!P. (!f. ((!z. ((z IN (GSPEC (\GEN%PVAR%24. (?v. (?w. (?x. (?y. (((SETSPEC GEN%PVAR%24) ((((P v) w) x) y)) ((((f v) w) x) y))))))))) ==> (Q z))) = (!v. (!w. (!x. (!y. (((((P v) w) x) y) ==> (Q ((((f v) w) x) y)))))))))))))
T c/\ ! ! c= ! c==> cIN b2 * part cGSPEC / c? / cSETSPEC b3 * b0 b4 * b1 b4 * f0 b2 ! c==> * b0 b2 * f0 * b1 b2 c/\ ! ! c= ! c==> cIN b2 * part cGSPEC / c? / c? / cSETSPEC b3 * * b0 b4 b5 * * b1 b4 b5 * f0 b2 ! ! c==> * * b0 b2 b3 * f0 * * b1 b2 b3 c/\ ! ! c= ! c==> cIN b2 * part cGSPEC / c? / c? / c? / cSETSPEC b3 * * * b0 b4 b5 b6 * * * b1 b4 b5 b6 * f0 b2 ! ! ! c==> * * * b0 b2 b3 b4 * f0 * * * b1 b2 b3 b4 ! ! c= ! c==> cIN b2 * part cGSPEC / c? / c? / c? / c? / cSETSPEC b3 * * * * b0 b4 b5 b6 b7 * * * * b1 b4 b5 b6 b7 * f0 b2 ! ! ! ! c==> * * * * b0 b2 b3 b4 b5 * f0 * * * * b1 b2 b3 b4 b5
D INTERS_GSPEC
A |- ((!P. (!f. ((INTERS (GSPEC (\GEN%PVAR%37. (?x. (((SETSPEC GEN%PVAR%37) (P x)) (f x)))))) = (GSPEC (\GEN%PVAR%38. (?a. (((SETSPEC GEN%PVAR%38) (!x. ((P x) ==> (a IN (f x))))) a))))))) /\ ((!P. (!f. ((INTERS (GSPEC (\GEN%PVAR%39. (?x. (?y. (((SETSPEC GEN%PVAR%39) ((P x) y)) ((f x) y))))))) = (GSPEC (\GEN%PVAR%40. (?a. (((SETSPEC GEN%PVAR%40) (!x. (!y. (((P x) y) ==> (a IN ((f x) y)))))) a))))))) /\ (!P. (!f. ((INTERS (GSPEC (\GEN%PVAR%41. (?x. (?y. (?z. (((SETSPEC GEN%PVAR%41) (((P x) y) z)) (((f x) y) z)))))))) = (GSPEC (\GEN%PVAR%42. (?a. (((SETSPEC GEN%PVAR%42) (!x. (!y. (!z. ((((P x) y) z) ==> (a IN (((f x) y) z))))))) a)))))))))
T c/\ ! ! c= * part cINTERS * part cGSPEC / c? / cSETSPEC b2 * b0 b3 * b1 b3 * part cGSPEC / c? / cSETSPEC b2 ! c==> * b0 b4 cIN b3 * b1 b4 b3 c/\ ! ! c= * part cINTERS * part cGSPEC / c? / c? / cSETSPEC b2 * * b0 b3 b4 * * b1 b3 b4 * part cGSPEC / c? / cSETSPEC b2 ! ! c==> * * b0 b4 b5 cIN b3 * * b1 b4 b5 b3 ! ! c= * part cINTERS * part cGSPEC / c? / c? / c? / cSETSPEC b2 * * * b0 b3 b4 b5 * * * b1 b3 b4 b5 * part cGSPEC / c? / cSETSPEC b2 ! ! ! c==> * * * b0 b4 b5 b6 cIN b3 * * * b1 b4 b5 b6 b3
D FORALL_IN_PCROSS
A |- ((!z. ((z IN (s PCROSS t)) ==> (P z))) = (!x. (!y. (((x IN s) /\ (y IN t)) ==> (P ((pastecart x) y))))))
T c= ! c==> cIN b0 * * part cPCROSS f0 f1 * f2 b0 ! ! c==> c/\ cIN b0 f0 cIN b1 f1 * f2 cpastecart b0 b1
D PASTECART_IN_PCROSS
A |- (!s. (!t. (!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))))))
T c= cIN cpastecart f0 f1 * * part cPCROSS f2 f3 c/\ cIN f0 f2 cIN f1 f3
D PCROSS_MONO
A |- (!s. (!t. (!s'. (!t'. (((s SUBSET s') /\ (t SUBSET t')) ==> ((s PCROSS t) SUBSET (s' PCROSS t')))))))
T c==> c/\ cSUBSET f0 f1 cSUBSET f2 f3 cSUBSET * * part cPCROSS f0 f2 * * part cPCROSS f1 f3
D HULL_SUBSET
A |- (!P. (!s. (s SUBSET ((hull P) s))))
T cSUBSET f0 * * part chull f1 f0
D HULL_MINIMAL
A |- (!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t)))))
T c==> c/\ cSUBSET f0 f1 * f2 f1 cSUBSET * * part chull f2 f0 f1
D HULL_INDUCT
A |- (!P. (!p. (!s. (((!x. ((x IN s) ==> (p x))) /\ (P (GSPEC (\GEN%PVAR%95. (?x. (((SETSPEC GEN%PVAR%95) (p x)) x)))))) ==> (!x. ((x IN ((hull P) s)) ==> (p x)))))))
T c==> c/\ ! c==> cIN b0 f0 * f1 b0 * f2 * part cGSPEC / c? / cSETSPEC b0 * f1 b1 b1 ! c==> cIN b0 * * part chull f2 f0 * f1 b0
D HULL_INC
A |- (!P. (!s. (!x. ((x IN s) ==> (x IN ((hull P) s))))))
T c==> cIN f0 f1 cIN f0 * * part chull f2 f1
D VECTOR_MUL_LID
A |- (!x. (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= c% creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D VECTOR_ADD_RDISTRIB
A |- (((% ((real_add a) b)) x) = ((vector_add ((% a) x)) ((% b) x)))
T c= c% creal_add f0 f1 f2 cvector_add c% f0 f2 c% f1 f2
D PASTECART_ADD
A |- (!x1. (!y1. (!x2. (!y2. (((vector_add ((pastecart x1) y1)) ((pastecart x2) y2)) = ((pastecart ((vector_add x1) x2)) ((vector_add y1) y2)))))))
T c= cvector_add cpastecart f0 f1 cpastecart f2 f3 cpastecart cvector_add f0 f2 cvector_add f1 f3
D PASTECART_CMUL
A |- (!x1. (!y1. (!c. (((pastecart ((% c) x1)) ((% c) y1)) = ((% c) ((pastecart x1) y1))))))
T c= cpastecart c% f0 f1 c% f0 f2 c% f0 cpastecart f1 f2
D affine
A |- (!s. ((affine s) = (!x. (!y. (!u. (!v. (((x IN s) /\ ((y IN s) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% u) x)) ((% v) y)) IN s))))))))
T c= caffine f0 ! ! ! ! c==> c/\ cIN b0 f0 c/\ cIN b1 f0 c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% b2 b0 c% b3 b1 f0
D AFFINE_INTERS
A |- ((!s. ((s IN f) ==> (affine s))) ==> (affine (INTERS f)))
T c==> ! c==> cIN b0 f0 caffine b0 caffine * part cINTERS f0
D AFFINE_AFFINE_HULL
A |- (!s. (affine ((hull affine) s)))
T caffine * * part chull part caffine f0
D AFFINE_PCROSS
A |- (!s. (!t. (((affine s) /\ (affine t)) ==> (affine (s PCROSS t)))))
T c==> c/\ caffine f0 caffine f1 caffine * * part cPCROSS f0 f1
+ ((affine s) /\ (affine t)) |- (((affine s) /\ (affine t)) /\ ((affine (s PCROSS t)) = T))
T c==> c/\ caffine f0 caffine f1 c/\ c/\ caffine f0 caffine f1 c= caffine * * part cPCROSS f0 f1 cT
+ |- (T = ((affine ((hull affine) s)) /\ (affine ((hull affine) t))))
T c= cT c/\ caffine * * part chull part caffine f0 caffine * * part chull part caffine f1
+ |- ((((affine ((hull affine) s)) /\ (affine ((hull affine) t))) ==> ((affine (((hull affine) s) PCROSS ((hull affine) t))) = T)) = ((affine (((hull affine) s) PCROSS ((hull affine) t))) = T))
T c= c==> c/\ caffine * * part chull part caffine f0 caffine * * part chull part caffine f1 c= caffine * * part cPCROSS * * part chull part caffine f0 * * part chull part caffine f1 cT c= caffine * * part cPCROSS * * part chull part caffine f0 * * part chull part caffine f1 cT
+ |- ((((x IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) /\ ((y IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% u) x)) ((% v) y)) IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x)))))) = (((((pastecart x) y) IN ((hull affine) (s PCROSS t))) /\ ((((pastecart y) y) IN ((hull affine) (s PCROSS t))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> T))
T c= c==> c/\ cIN f0 * part cGSPEC / c? / cSETSPEC b0 cIN cpastecart b1 f1 * * part chull part caffine * * part cPCROSS f2 f3 b1 c/\ cIN f4 * part cGSPEC / c? / cSETSPEC b0 cIN cpastecart b1 f1 * * part chull part caffine * * part cPCROSS f2 f3 b1 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% f5 f0 c% f6 f4 * part cGSPEC / c? / cSETSPEC b0 cIN cpastecart b1 f1 * * part chull part caffine * * part cPCROSS f2 f3 b1 c==> c/\ cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3 c/\ cIN cpastecart f4 f1 * * part chull part caffine * * part cPCROSS f2 f3 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 cT
+ |- (((s PCROSS t) SUBSET (((hull affine) s) PCROSS ((hull affine) t))) = T)
T c= cSUBSET * * part cPCROSS f0 f1 * * part cPCROSS * * part chull part caffine f0 * * part chull part caffine f1 cT
+ |- ((\s. ((affine s) = (!x. (!y. (!u. (!v. (((x IN s) /\ ((y IN s) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% u) x)) ((% v) y)) IN s)))))))) s)
T * / c= caffine b0 ! ! ! ! c==> c/\ cIN b1 b0 c/\ cIN b2 b0 c= creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% b3 b1 c% b4 b2 b0 f0
+ ((((pastecart x) y) IN ((hull affine) (s PCROSS t))) /\ ((((pastecart y) y) IN ((hull affine) (s PCROSS t))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) |- ((((vector_add ((% u) ((pastecart x) y))) ((% v) ((pastecart y) y))) IN ((hull affine) (s PCROSS t))) = T)
T c==> c/\ cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3 c/\ cIN cpastecart f4 f1 * * part chull part caffine * * part cPCROSS f2 f3 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c= cIN cvector_add c% f5 cpastecart f0 f1 c% f6 cpastecart f4 f1 * * part chull part caffine * * part cPCROSS f2 f3 cT
+ |- (T = ((((pastecart x) y) IN (s PCROSS t)) ==> (((pastecart x) y) IN ((hull affine) (s PCROSS t)))))
T c= cT c==> cIN cpastecart f0 f1 * * part cPCROSS f2 f3 cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3
+ |- ((\y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))) y)
T * / c= cIN cpastecart f0 b0 * * part cPCROSS f1 f2 c/\ cIN f0 f1 cIN b0 f2 f3
+ |- ((y IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) = (((pastecart y) y) IN ((hull affine) (s PCROSS t))))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 cIN cpastecart b1 f1 * * part chull part caffine * * part cPCROSS f2 f3 b1 cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3
+ |- (((((((pastecart x) y) IN ((hull affine) (s PCROSS t))) /\ ((((pastecart y) y) IN ((hull affine) (s PCROSS t))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((vector_add ((% u) x)) ((% v) y)) IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) = T)) ==> ((((x IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) /\ ((y IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% u) x)) ((% v) y)) IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x)))))) = (((((pastecart x) y) IN ((hull affine) (s PCROSS t))) /\ ((((pastecart y) y) IN ((hull affine) (s PCROSS t))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> T))) = ((((x IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) /\ ((y IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% u) x)) ((% v) y)) IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x)))))) = (((((pastecart x) y) IN ((hull affine) (s PCROSS t))) /\ ((((pastecart y) y) IN ((hull affine) (s PCROSS t))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> T)))
T c= c==> c==> c/\ cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3 c/\ cIN cpastecart f4 f1 * * part chull part caffine * * part cPCROSS f2 f3 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c= cIN cvector_add c% f5 f0 c% f6 f4 * part cGSPEC / c? / cSETSPEC b0 cIN cpastecart b1 f1 * * part chull part caffine * * part cPCROSS f2 f3 b1 cT c= c==> c/\ cIN f0 * part cGSPEC / c? / cSETSPEC b0 cIN cpastecart b1 f1 * * part chull part caffine * * part cPCROSS f2 f3 b1 c/\ cIN f4 * part cGSPEC / c? / cSETSPEC b0 cIN cpastecart b1 f1 * * part chull part caffine * * part cPCROSS f2 f3 b1 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% f5 f0 c% f6 f4 * part cGSPEC / c? / cSETSPEC b0 cIN cpastecart b1 f1 * * part chull part caffine * * part cPCROSS f2 f3 b1 c==> c/\ cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3 c/\ cIN cpastecart f4 f1 * * part chull part caffine * * part cPCROSS f2 f3 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 cT c= c==> c/\ cIN f0 * part cGSPEC / c? / cSETSPEC b0 cIN cpastecart b1 f1 * * part chull part caffine * * part cPCROSS f2 f3 b1 c/\ cIN f4 * part cGSPEC / c? / cSETSPEC b0 cIN cpastecart b1 f1 * * part chull part caffine * * part cPCROSS f2 f3 b1 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% f5 f0 c% f6 f4 * part cGSPEC / c? / cSETSPEC b0 cIN cpastecart b1 f1 * * part chull part caffine * * part cPCROSS f2 f3 b1 c==> c/\ cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3 c/\ cIN cpastecart f4 f1 * * part chull part caffine * * part cPCROSS f2 f3 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 cT
+ |- ((((s SUBSET ((hull affine) s)) /\ (t SUBSET ((hull affine) t))) ==> (((s PCROSS t) SUBSET (((hull affine) s) PCROSS ((hull affine) t))) = T)) = (((s PCROSS t) SUBSET (((hull affine) s) PCROSS ((hull affine) t))) = T))
T c= c==> c/\ cSUBSET f0 * * part chull part caffine f0 cSUBSET f1 * * part chull part caffine f1 c= cSUBSET * * part cPCROSS f0 f1 * * part cPCROSS * * part chull part caffine f0 * * part chull part caffine f1 cT c= cSUBSET * * part cPCROSS f0 f1 * * part cPCROSS * * part chull part caffine f0 * * part chull part caffine f1 cT
+ |- ((!y. (P ==> (Q y))) = (P ==> (!y. (Q y))))
T c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
+ |- (((!q'. ((((x IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) /\ ((y IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) = p') ==> ((p' ==> ((((vector_add ((% u) x)) ((% v) y)) IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) = q')) ==> ((((x IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) /\ ((y IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% u) x)) ((% v) y)) IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x)))))) = (p' ==> q'))))) ==> ((\q'. ((((x IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) /\ ((y IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) = p') ==> ((p' ==> ((((vector_add ((% u) x)) ((% v) y)) IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) = q')) ==> ((((x IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) /\ ((y IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% u) x)) ((% v) y)) IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x)))))) = (p' ==> q'))))) q')) = ((\q'. ((((x IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) /\ ((y IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) = p') ==> ((p' ==> ((((vector_add ((% u) x)) ((% v) y)) IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) = q')) ==> ((((x IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) /\ ((y IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x))))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% u) x)) ((% v) y)) IN (GSPEC (\GEN%PVAR%1508. (?x. (((SETSPEC GEN%PVAR%1508) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) x)))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cIN f0 * part cGSPEC / c? / cSETSPEC b1 cIN cpastecart b2 f1 * * part chull part caffine * * part cPCROSS f2 f3 b2 c/\ cIN f4 * part cGSPEC / c? / cSETSPEC b1 cIN cpastecart b2 f1 * * part chull part caffine * * part cPCROSS f2 f3 b2 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 f7 c==> c==> f7 c= cIN cvector_add c% f5 f0 c% f6 f4 * part cGSPEC / c? / cSETSPEC b1 cIN cpastecart b2 f1 * * part chull part caffine * * part cPCROSS f2 f3 b2 b0 c= c==> c/\ cIN f0 * part cGSPEC / c? / cSETSPEC b1 cIN cpastecart b2 f1 * * part chull part caffine * * part cPCROSS f2 f3 b2 c/\ cIN f4 * part cGSPEC / c? / cSETSPEC b1 cIN cpastecart b2 f1 * * part chull part caffine * * part cPCROSS f2 f3 b2 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% f5 f0 c% f6 f4 * part cGSPEC / c? / cSETSPEC b1 cIN cpastecart b2 f1 * * part chull part caffine * * part cPCROSS f2 f3 b2 c==> f7 b0 * / c==> c= c/\ cIN f0 * part cGSPEC / c? / cSETSPEC b1 cIN cpastecart b2 f1 * * part chull part caffine * * part cPCROSS f2 f3 b2 c/\ cIN f4 * part cGSPEC / c? / cSETSPEC b1 cIN cpastecart b2 f1 * * part chull part caffine * * part cPCROSS f2 f3 b2 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 f7 c==> c==> f7 c= cIN cvector_add c% f5 f0 c% f6 f4 * part cGSPEC / c? / cSETSPEC b1 cIN cpastecart b2 f1 * * part chull part caffine * * part cPCROSS f2 f3 b2 b0 c= c==> c/\ cIN f0 * part cGSPEC / c? / cSETSPEC b1 cIN cpastecart b2 f1 * * part chull part caffine * * part cPCROSS f2 f3 b2 c/\ cIN f4 * part cGSPEC / c? / cSETSPEC b1 cIN cpastecart b2 f1 * * part chull part caffine * * part cPCROSS f2 f3 b2 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% f5 f0 c% f6 f4 * part cGSPEC / c? / cSETSPEC b1 cIN cpastecart b2 f1 * * part chull part caffine * * part cPCROSS f2 f3 b2 c==> f7 b0 f8 * / c==> c= c/\ cIN f0 * part cGSPEC / c? / cSETSPEC b1 cIN cpastecart b2 f1 * * part chull part caffine * * part cPCROSS f2 f3 b2 c/\ cIN f4 * part cGSPEC / c? / cSETSPEC b1 cIN cpastecart b2 f1 * * part chull part caffine * * part cPCROSS f2 f3 b2 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 f7 c==> c==> f7 c= cIN cvector_add c% f5 f0 c% f6 f4 * part cGSPEC / c? / cSETSPEC b1 cIN cpastecart b2 f1 * * part chull part caffine * * part cPCROSS f2 f3 b2 b0 c= c==> c/\ cIN f0 * part cGSPEC / c? / cSETSPEC b1 cIN cpastecart b2 f1 * * part chull part caffine * * part cPCROSS f2 f3 b2 c/\ cIN f4 * part cGSPEC / c? / cSETSPEC b1 cIN cpastecart b2 f1 * * part chull part caffine * * part cPCROSS f2 f3 b2 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% f5 f0 c% f6 f4 * part cGSPEC / c? / cSETSPEC b1 cIN cpastecart b2 f1 * * part chull part caffine * * part cPCROSS f2 f3 b2 c==> f7 b0 f8
+ |- (affine (GSPEC (\GEN%PVAR%95. (?y. (((SETSPEC GEN%PVAR%95) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) y)))))
T caffine * part cGSPEC / c? / cSETSPEC b0 cIN cpastecart f0 b1 * * part chull part caffine * * part cPCROSS f1 f2 b1
+ |- ((\y. (!u. (!v. (((x IN ((hull affine) s)) /\ ((y IN ((hull affine) s)) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% u) x)) ((% v) y)) IN ((hull affine) s)))))) y)
T * / ! ! c==> c/\ cIN f0 * * part chull part caffine f1 c/\ cIN b0 * * part chull part caffine f1 c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% b1 f0 c% b2 b0 * * part chull part caffine f1 f2
+ (x IN s) |- ((affine (GSPEC (\GEN%PVAR%95. (?y. (((SETSPEC GEN%PVAR%95) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) y))))) = ((!y. ((y IN t) ==> (((pastecart x) y) IN ((hull affine) (s PCROSS t))))) /\ (affine (GSPEC (\GEN%PVAR%95. (?y. (((SETSPEC GEN%PVAR%95) (((pastecart x) y) IN ((hull affine) (s PCROSS t)))) y)))))))
T c==> cIN f0 f1 c= caffine * part cGSPEC / c? / cSETSPEC b0 cIN cpastecart f0 b1 * * part chull part caffine * * part cPCROSS f1 f2 b1 c/\ ! c==> cIN b0 f2 cIN cpastecart f0 b0 * * part chull part caffine * * part cPCROSS f1 f2 caffine * part cGSPEC / c? / cSETSPEC b0 cIN cpastecart f0 b1 * * part chull part caffine * * part cPCROSS f1 f2 b1
+ ((x IN ((hull affine) s)) /\ ((y IN ((hull affine) s)) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((x IN ((hull affine) s)) /\ ((y IN ((hull affine) s)) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) /\ ((((vector_add ((% u) x)) ((% v) y)) IN ((hull affine) s)) = T))
T c==> c/\ cIN f0 * * part chull part caffine f1 c/\ cIN f2 * * part chull part caffine f1 c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ cIN f0 * * part chull part caffine f1 c/\ cIN f2 * * part chull part caffine f1 c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c= cIN cvector_add c% f3 f0 c% f4 f2 * * part chull part caffine f1 cT
+ |- ((\s. (affine ((hull affine) s))) s)
T * / caffine * * part chull part caffine b0 f0
+ ((((pastecart x) x) IN ((hull affine) (s PCROSS t))) /\ ((((pastecart x) y) IN ((hull affine) (s PCROSS t))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((pastecart x) ((vector_add ((% u) x)) ((% v) y))) = ((vector_add ((% u) ((pastecart x) x))) ((% v) ((pastecart x) y))))
T c==> c/\ cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3 c/\ cIN cpastecart f0 f4 * * part chull part caffine * * part cPCROSS f2 f3 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c= cpastecart f0 cvector_add c% f5 f1 c% f6 f4 cvector_add c% f5 cpastecart f0 f1 c% f6 cpastecart f0 f4
+ ((((pastecart x) y) IN ((hull affine) (s PCROSS t))) /\ ((((pastecart y) y) IN ((hull affine) (s PCROSS t))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((pastecart ((vector_add ((% u) x)) ((% v) y))) y) = ((vector_add ((% u) ((pastecart x) y))) ((% v) ((pastecart y) y))))
T c==> c/\ cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3 c/\ cIN cpastecart f4 f1 * * part chull part caffine * * part cPCROSS f2 f3 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c= cpastecart cvector_add c% f5 f0 c% f6 f4 f1 cvector_add c% f5 cpastecart f0 f1 c% f6 cpastecart f4 f1
- |- (((!s. ((s IN f) ==> (affine s))) ==> (affine (INTERS f))) ==> ((!s. ((s IN f) ==> (affine s))) ==> (affine (INTERS f))))
T c==> c==> ! c==> cIN b0 f0 caffine b0 caffine * part cINTERS f0 c==> ! c==> cIN b0 f0 caffine b0 caffine * part cINTERS f0
- |- ((?x. t) = t)
T c= c? / f0 f0
- |- ((!x'. ((x IN ((hull affine) s)) ==> (!y. ((y IN ((hull affine) t)) ==> (((pastecart x') y) IN ((hull affine) (s PCROSS t))))))) = ((x IN ((hull affine) s)) ==> (!x. (!y. ((y IN ((hull affine) t)) ==> (((pastecart x) y) IN ((hull affine) (s PCROSS t))))))))
T c= ! c==> cIN f0 * * part chull part caffine f1 ! c==> cIN b1 * * part chull part caffine f2 cIN cpastecart b0 b1 * * part chull part caffine * * part cPCROSS f1 f2 c==> cIN f0 * * part chull part caffine f1 ! ! c==> cIN b1 * * part chull part caffine f2 cIN cpastecart b0 b1 * * part chull part caffine * * part cPCROSS f1 f2
- ((((pastecart x) x) IN ((hull affine) (s PCROSS t))) /\ ((((pastecart x) y) IN ((hull affine) (s PCROSS t))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) |- ((((pastecart x) x) IN ((hull affine) (s PCROSS t))) = T)
T c==> c/\ cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3 c/\ cIN cpastecart f0 f4 * * part chull part caffine * * part cPCROSS f2 f3 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c= cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3 cT
- ((((pastecart x) y) IN ((hull affine) (s PCROSS t))) /\ ((((pastecart y) y) IN ((hull affine) (s PCROSS t))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((pastecart y) y) IN ((hull affine) (s PCROSS t)))
T c==> c/\ cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3 c/\ cIN cpastecart f4 f1 * * part chull part caffine * * part cPCROSS f2 f3 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 cIN cpastecart f4 f1 * * part chull part caffine * * part cPCROSS f2 f3
- ((((pastecart x) x) IN ((hull affine) (s PCROSS t))) /\ ((((pastecart x) y) IN ((hull affine) (s PCROSS t))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) |- (T = ((((pastecart x) x) IN ((hull affine) (s PCROSS t))) /\ ((((pastecart x) y) IN ((hull affine) (s PCROSS t))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> c/\ cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3 c/\ cIN cpastecart f0 f4 * * part chull part caffine * * part cPCROSS f2 f3 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c= cT c/\ cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3 c/\ cIN cpastecart f0 f4 * * part chull part caffine * * part cPCROSS f2 f3 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0
- (!s. ((s IN f) ==> (affine s))), ((!s. ((s IN f) ==> (affine s))) ==> (affine (INTERS f))) |- ((!s. ((s IN f) ==> (affine s))) /\ (affine (INTERS f)))
T c==> ! c==> cIN b0 f0 caffine b0 c==> c==> ! c==> cIN b0 f0 caffine b0 caffine * part cINTERS f0 c/\ ! c==> cIN b0 f0 caffine b0 caffine * part cINTERS f0
- ((((pastecart x) x) IN ((hull affine) (s PCROSS t))) /\ ((((pastecart x) y) IN ((hull affine) (s PCROSS t))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) |- ((((pastecart x) y) IN ((hull affine) (s PCROSS t))) = T)
T c==> c/\ cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3 c/\ cIN cpastecart f0 f4 * * part chull part caffine * * part cPCROSS f2 f3 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c= cIN cpastecart f0 f4 * * part chull part caffine * * part cPCROSS f2 f3 cT
- |- ((!y'. (((x IN ((hull affine) s)) /\ (y IN ((hull affine) t))) ==> (((pastecart x) y') IN ((hull affine) (s PCROSS t))))) = (((x IN ((hull affine) s)) /\ (y IN ((hull affine) t))) ==> (!y. (((pastecart x) y) IN ((hull affine) (s PCROSS t))))))
T c= ! c==> c/\ cIN f0 * * part chull part caffine f1 cIN f2 * * part chull part caffine f3 cIN cpastecart f0 b0 * * part chull part caffine * * part cPCROSS f1 f3 c==> c/\ cIN f0 * * part chull part caffine f1 cIN f2 * * part chull part caffine f3 ! cIN cpastecart f0 b0 * * part chull part caffine * * part cPCROSS f1 f3
- ((((pastecart x) y) IN ((hull affine) (s PCROSS t))) /\ ((((pastecart y) y) IN ((hull affine) (s PCROSS t))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) |- (T = ((((pastecart x) y) IN ((hull affine) (s PCROSS t))) /\ ((((pastecart y) y) IN ((hull affine) (s PCROSS t))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> c/\ cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3 c/\ cIN cpastecart f4 f1 * * part chull part caffine * * part cPCROSS f2 f3 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c= cT c/\ cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3 c/\ cIN cpastecart f4 f1 * * part chull part caffine * * part cPCROSS f2 f3 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0
- ((((pastecart x) y) IN ((hull affine) (s PCROSS t))) /\ ((((pastecart y) y) IN ((hull affine) (s PCROSS t))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) |- ((((pastecart x) y) IN ((hull affine) (s PCROSS t))) = T)
T c==> c/\ cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3 c/\ cIN cpastecart f4 f1 * * part chull part caffine * * part cPCROSS f2 f3 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c= cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3 cT
- (!s. ((s IN f) ==> (affine s))), ((!s. ((s IN f) ==> (affine s))) ==> (affine (INTERS f))) |- (((!s. ((s IN f) ==> (affine s))) ==> (affine (INTERS f))) /\ (affine (INTERS f)))
T c==> ! c==> cIN b0 f0 caffine b0 c==> c==> ! c==> cIN b0 f0 caffine b0 caffine * part cINTERS f0 c/\ c==> ! c==> cIN b0 f0 caffine b0 caffine * part cINTERS f0 caffine * part cINTERS f0
- ((!s. ((s IN f) ==> (affine s))) ==> (affine (INTERS f))) |- (((!s. ((s IN f) ==> (affine s))) ==> (affine (INTERS f))) /\ ((!s. ((s IN f) ==> (affine s))) ==> (affine (INTERS f))))
T c==> c==> ! c==> cIN b0 f0 caffine b0 caffine * part cINTERS f0 c/\ c==> ! c==> cIN b0 f0 caffine b0 caffine * part cINTERS f0 c==> ! c==> cIN b0 f0 caffine b0 caffine * part cINTERS f0
- |- ((((!s. ((s IN f) ==> (affine s))) ==> (affine (INTERS f))) ==> ((!s. ((s IN f) ==> (affine s))) ==> (affine (INTERS f)))) = ((!s. ((s IN f) ==> (affine s))) ==> (affine (INTERS f))))
T c= c==> c==> ! c==> cIN b0 f0 caffine b0 caffine * part cINTERS f0 c==> ! c==> cIN b0 f0 caffine b0 caffine * part cINTERS f0 c==> ! c==> cIN b0 f0 caffine b0 caffine * part cINTERS f0
- (!s. ((s IN f) ==> (affine s))) |- (((!s. ((s IN f) ==> (affine s))) ==> (affine (INTERS f))) ==> (affine (INTERS f)))
T c==> ! c==> cIN b0 f0 caffine b0 c==> c==> ! c==> cIN b0 f0 caffine b0 caffine * part cINTERS f0 caffine * part cINTERS f0
- ((((pastecart x) y) IN ((hull affine) (s PCROSS t))) /\ ((((pastecart y) y) IN ((hull affine) (s PCROSS t))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) |- ((((pastecart y) y) IN ((hull affine) (s PCROSS t))) = T)
T c==> c/\ cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3 c/\ cIN cpastecart f4 f1 * * part chull part caffine * * part cPCROSS f2 f3 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c= cIN cpastecart f4 f1 * * part chull part caffine * * part cPCROSS f2 f3 cT
- |- ((!y'. ((y IN ((hull affine) t)) ==> (((pastecart x) y') IN ((hull affine) (s PCROSS t))))) = ((y IN ((hull affine) t)) ==> (!y. (((pastecart x) y) IN ((hull affine) (s PCROSS t))))))
T c= ! c==> cIN f0 * * part chull part caffine f1 cIN cpastecart f2 b0 * * part chull part caffine * * part cPCROSS f3 f1 c==> cIN f0 * * part chull part caffine f1 ! cIN cpastecart f2 b0 * * part chull part caffine * * part cPCROSS f3 f1
- ((((pastecart x) y) IN ((hull affine) (s PCROSS t))) /\ ((((pastecart y) y) IN ((hull affine) (s PCROSS t))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) |- (T = (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3 c/\ cIN cpastecart f4 f1 * * part chull part caffine * * part cPCROSS f2 f3 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c= cT c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0
- ((((pastecart x) x) IN ((hull affine) (s PCROSS t))) /\ ((((pastecart x) y) IN ((hull affine) (s PCROSS t))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((pastecart x) y) IN ((hull affine) (s PCROSS t)))
T c==> c/\ cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3 c/\ cIN cpastecart f0 f4 * * part chull part caffine * * part cPCROSS f2 f3 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 cIN cpastecart f0 f4 * * part chull part caffine * * part cPCROSS f2 f3
- (y IN ((hull affine) t)) |- ((y IN ((hull affine) t)) = T)
T c==> cIN f0 * * part chull part caffine f1 c= cIN f0 * * part chull part caffine f1 cT
- ((((pastecart x) x) IN ((hull affine) (s PCROSS t))) /\ ((((pastecart x) y) IN ((hull affine) (s PCROSS t))) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))) |- (T = (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ cIN cpastecart f0 f1 * * part chull part caffine * * part cPCROSS f2 f3 c/\ cIN cpastecart f0 f4 * * part chull part caffine * * part cPCROSS f2 f3 c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c= cT c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0
