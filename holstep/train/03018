N Tame_list.MEM_splitFace2
C |- (!g. (!u. (!v. (!f. (!ws. (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws))))))))
T c==> cMEM f0 cfaces f1 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3 csplitFace f1 f2 f3 f0 f4
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D SELECT_AX
A |- (!P. (!x. ((P x) ==> (P (@ P)))))
T c==> * f0 f1 * f0 c@ f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D GABS_DEF
A |- (!P. ((GABS P) = (@ P)))
T c= cGABS f0 c@ f0
D GEQ_DEF
A |- (!a. (!b. (((GEQ a) b) = (a = b))))
T c= cGEQ f0 f1 c= f0 f1
D PAIR_EQ
A |- (!x. (!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))))
T c= c= c, f0 f1 c, f2 f3 c/\ c= f0 f2 c= f1 f3
D PAIR
A |- (!x. (((FST x) , (SND x)) = x))
T c= c, cFST f0 cSND f0 f0
D pair_RECURSION
A |- (!PAIR'. (?fn. (!a0. (!a1. ((fn (a0 , a1)) = ((PAIR' a0) a1))))))
T c? / ! ! c= * b0 c, b1 b2 * * f0 b1 b2
D MEM
A |- ((((MEM x) NIL) = F) /\ (((MEM x) ((CONS h) t)) = ((x = h) \/ ((MEM x) t))))
T c/\ c= cMEM f0 cNIL cF c= cMEM f0 cCONS f1 f2 c\/ c= f0 f1 cMEM f0 f2
D MEM_APPEND
A |- (!x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))))
T c= cMEM f0 cAPPEND f1 f2 c\/ cMEM f0 f1 cMEM f0 f2
D Truong_tactic.hold_def
A |- (hold = I)
T c= part chold part cI
D Tame_defs2.splitFace
A |- (!newVs. (!oldF. (!ram1. (!ram2. (!g. ((((((splitFace g) ram1) ram2) oldF) newVs) = ((LET (\fs. (LET_END ((LET (\n. (LET_END ((LET (\Fs. (LET_END ((LET (\h. (LET_END ((LET (\vs1. (LET_END ((LET (\vs2. (LET_END ((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1 , (f2 , ((((Graph ((APPEND (((replace oldF) ((CONS f2) NIL)) fs)) ((CONS f1) NIL))) (n + (LENGTH newVs))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) ram1)) ((#!# h) ram2)) (LENGTH newVs))))))))) ((APPEND Fs) ((REPLICATE (LENGTH newVs)) ((CONS f1) ((CONS f2) NIL)))))))) ((((replacefacesAt ((CONS ram2) NIL)) oldF) ((CONS f1) ((CONS f2) NIL))) Fs))))) ((((replacefacesAt ((CONS ram1) NIL)) oldF) ((CONS f2) ((CONS f1) NIL))) Fs))))) ((((replacefacesAt vs2) oldF) ((CONS f2) NIL)) Fs))))) ((((replacefacesAt vs1) oldF) ((CONS f1) NIL)) Fs))))))))) ((((split_face oldF) ram1) ram2) newVs))))) (((betwn (FST oldF)) ram2) ram1))))) (((betwn (FST oldF)) ram1) ram2))))) (heights g))))) (faceListAt g))))) (countVertices g))))) (faces g))))))))
T c= csplitFace f0 f1 f2 f3 f4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET * part cGABS / ! ! cGEQ * b6 c, b7 b8 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b7 c, b8 cGraph cAPPEND creplace f3 cCONS b8 cNIL b0 cCONS b7 cNIL c+ b1 cLENGTH f4 b9 cAPPEND b3 cheightsNewVertices c#!# b3 f1 c#!# b3 f2 cLENGTH f4 cAPPEND b9 cREPLICATE cLENGTH f4 cCONS b7 cCONS b8 cNIL creplacefacesAt cCONS f2 cNIL f3 cCONS b7 cCONS b8 cNIL b9 creplacefacesAt cCONS f1 cNIL f3 cCONS b8 cCONS b7 cNIL b9 creplacefacesAt b5 f3 cCONS b8 cNIL b9 creplacefacesAt b4 f3 cCONS b7 cNIL b2 csplit_face f3 f1 f2 f4 cbetwn cFST f3 f2 f1 cbetwn cFST f3 f1 f2 cheights f0 cfaceListAt f0 ccountVertices f0 cfaces f0
D Tame_list.faces_graph
A |- ((faces ((((Graph fs) n) f) h)) = fs)
T c= cfaces cGraph f0 f1 f2 f3 f0
D Tame_list.MEM2_replace
A |- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))))
T c==> c/\ cMEM f0 f1 cMEM f2 f3 cMEM f2 creplace f0 f3 f1
+ ((\n. (n = (countVertices g))) n) |- (n = (countVertices g))
T c==> * / c= b0 ccountVertices f0 f1 c= f1 ccountVertices f0
+ ((MEM f) fs) |- ((MEM f2) ((APPEND (((replace f) ((CONS f2) NIL)) fs)) ((CONS f1) NIL)))
T c==> cMEM f0 f1 cMEM f2 cAPPEND creplace f0 cCONS f2 cNIL f1 cCONS f3 cNIL
- (Fs'''' = ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''')) |- ((((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs) = Fs') = (((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs) = Fs'))
T c==> c= f0 creplacefacesAt cCONS f1 cNIL f2 cCONS f3 cCONS f4 cNIL f5 c= c= creplacefacesAt f6 f2 cCONS f3 cNIL f7 f8 c= creplacefacesAt f6 f2 cCONS f3 cNIL f7 f8
+ (fs = (faces g)) |- ((fs = (faces g)) /\ (?fs. (fs = (faces g))))
T c==> c= f0 cfaces f1 c/\ c= f0 cfaces f1 c? / c= b0 cfaces f1
- (vs2 = (((betwn (FST f)) v) u)) |- (((faces g) = fs) = ((faces g) = fs))
T c==> c= f0 cbetwn cFST f1 f2 f3 c= c= cfaces f4 f5 c= cfaces f4 f5
- (Fs'' = ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs')) |- (((((betwn (FST f)) u) v) = vs1) = ((((betwn (FST f)) u) v) = vs1))
T c==> c= f0 creplacefacesAt f1 f2 cCONS f3 cNIL f4 c= c= cbetwn cFST f2 f5 f6 f7 c= cbetwn cFST f2 f5 f6 f7
- (Fs'''' = ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''')) |- (((heights g) = h) = ((heights g) = h))
T c==> c= f0 creplacefacesAt cCONS f1 cNIL f2 cCONS f3 cCONS f4 cNIL f5 c= c= cheights f6 f7 c= cheights f6 f7
+ |- ((h = (heights g)) = ((\h. (h = (heights g))) h))
T c= c= f0 cheights f1 * / c= b0 cheights f1 f0
+ (n = (countVertices g)), (fs = (faces g)), (h = (heights g)), (Fs = (faceListAt g)) |- ((((LET (\h. (LET_END ((LET (\vs1. (LET_END ((LET (\vs2. (LET_END ((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1 , (f2 , ((((Graph ((APPEND (((replace f) ((CONS f2) NIL)) fs)) ((CONS f1) NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1) ((CONS f2) NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1) ((CONS f2) NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2) ((CONS f1) NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2) NIL)) Fs))))) ((((replacefacesAt vs1) f) ((CONS f1) NIL)) Fs))))))))) ((((split_face f) u) v) ws))))) (((betwn (FST f)) v) u))))) (((betwn (FST f)) u) v))))) h) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g'))))
T c==> c= f0 ccountVertices f1 c==> c= f2 cfaces f1 c==> c= f3 cheights f1 c==> c= f4 cfaceListAt f1 c==> c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET * part cGABS / ! ! cGEQ * b3 c, b4 b5 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b4 c, b5 cGraph cAPPEND creplace f5 cCONS b5 cNIL f2 cCONS b4 cNIL c+ f0 cLENGTH f6 b7 cAPPEND b0 cheightsNewVertices c#!# b0 f7 c#!# b0 f8 cLENGTH f6 cAPPEND b7 cREPLICATE cLENGTH f6 cCONS b4 cCONS b5 cNIL creplacefacesAt cCONS f8 cNIL f5 cCONS b4 cCONS b5 cNIL b7 creplacefacesAt cCONS f7 cNIL f5 cCONS b5 cCONS b4 cNIL b7 creplacefacesAt b2 f5 cCONS b5 cNIL b6 creplacefacesAt b1 f5 cCONS b4 cNIL f4 csplit_face f5 f7 f8 f6 cbetwn cFST f5 f8 f7 cbetwn cFST f5 f7 f8 f3 c, f9 c, f10 f11 c==> cMEM f5 f2 cMEM f10 cfaces f11
+ |- ((a /\ T) = a)
T c= c/\ f0 cT f0
+ (f1' = f1), (f2' = f2), ((MEM f) fs) |- (((MEM f) fs) /\ (hold ((MEM f2) (faces ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))
T c==> c= f0 f1 c==> c= f2 f3 c==> cMEM f4 f5 c/\ cMEM f4 f5 chold cMEM f3 cfaces cGraph cAPPEND creplace f4 cCONS f2 cNIL f5 cCONS f0 cNIL c+ f6 cLENGTH f7 f8 cAPPEND f9 cheightsNewVertices c#!# f9 f10 c#!# f9 f11 cLENGTH f7
+ (Fs'''' = ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''')) |- (((((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1' , (f2' , ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''')) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g')))) = ((((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1' , (f2' , ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))))))) Fs'''') = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g')))))
T c==> c= f0 creplacefacesAt cCONS f1 cNIL f2 cCONS f3 cCONS f4 cNIL f5 c= c==> c= cLET / cLET_END cLET / cLET_END c, f3 c, f4 cGraph cAPPEND creplace f2 cCONS f4 cNIL f6 cCONS f3 cNIL c+ f7 cLENGTH f8 b1 cAPPEND f9 cheightsNewVertices c#!# f9 f10 c#!# f9 f1 cLENGTH f8 cAPPEND b0 cREPLICATE cLENGTH f8 cCONS f3 cCONS f4 cNIL creplacefacesAt cCONS f1 cNIL f2 cCONS f3 cCONS f4 cNIL f5 c, f11 c, f12 f13 c==> cMEM f2 f6 cMEM f12 cfaces f13 c==> c= cLET / cLET_END cLET / cLET_END c, f3 c, f4 cGraph cAPPEND creplace f2 cCONS f4 cNIL f6 cCONS f3 cNIL c+ f7 cLENGTH f8 b1 cAPPEND f9 cheightsNewVertices c#!# f9 f10 c#!# f9 f1 cLENGTH f8 cAPPEND b0 cREPLICATE cLENGTH f8 cCONS f3 cCONS f4 cNIL f0 c, f11 c, f12 f13 c==> cMEM f2 f6 cMEM f12 cfaces f13
+ |- (((!x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) ==> ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x)) = ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x))
T c= c==> ! ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0 * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
+ ((f1' , f2') = ((((split_face f) u) v) ws)), (n = (countVertices g)), (fs = (faces g)), (h = (heights g)), (vs1 = (((betwn (FST f)) u) v)), (vs2 = (((betwn (FST f)) v) u)), (Fs = (faceListAt g)), (Fs' = ((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs)), (Fs'' = ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs')) |- (!Fs'''. (((\Fs'''. (Fs''' = ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs''))) Fs''') ==> ((((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1' , (f2' , ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'')) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g'))))))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c==> c= f6 ccountVertices f7 c==> c= f8 cfaces f7 c==> c= f9 cheights f7 c==> c= f10 cbetwn cFST f2 f3 f4 c==> c= f11 cbetwn cFST f2 f4 f3 c==> c= f12 cfaceListAt f7 c==> c= f13 creplacefacesAt f10 f2 cCONS f0 cNIL f12 c==> c= f14 creplacefacesAt f11 f2 cCONS f1 cNIL f13 ! c==> * / c= b1 creplacefacesAt cCONS f3 cNIL f2 cCONS f1 cCONS f0 cNIL f14 b0 c==> c= cLET / cLET_END cLET / cLET_END cLET / cLET_END c, f0 c, f1 cGraph cAPPEND creplace f2 cCONS f1 cNIL f8 cCONS f0 cNIL c+ f6 cLENGTH f5 b2 cAPPEND f9 cheightsNewVertices c#!# f9 f3 c#!# f9 f4 cLENGTH f5 cAPPEND b2 cREPLICATE cLENGTH f5 cCONS f0 cCONS f1 cNIL creplacefacesAt cCONS f4 cNIL f2 cCONS f0 cCONS f1 cNIL b1 creplacefacesAt cCONS f3 cNIL f2 cCONS f1 cCONS f0 cNIL f14 c, f15 c, f16 f17 c==> cMEM f2 f8 cMEM f16 cfaces f17
+ ((f1' , f2') = ((((split_face f) u) v) ws)), (n = (countVertices g)), (fs = (faces g)), (h = (heights g)), (vs1 = (((betwn (FST f)) u) v)), (vs2 = (((betwn (FST f)) v) u)), (Fs = (faceListAt g)), (Fs' = ((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs)), (Fs'' = ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs')), (Fs''' = ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'')), (Fs'''' = ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''')), (Fs''''' = ((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL))))) |- (((f1' , (f2' , ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))))) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g'))))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c==> c= f6 ccountVertices f7 c==> c= f8 cfaces f7 c==> c= f9 cheights f7 c==> c= f10 cbetwn cFST f2 f3 f4 c==> c= f11 cbetwn cFST f2 f4 f3 c==> c= f12 cfaceListAt f7 c==> c= f13 creplacefacesAt f10 f2 cCONS f0 cNIL f12 c==> c= f14 creplacefacesAt f11 f2 cCONS f1 cNIL f13 c==> c= f15 creplacefacesAt cCONS f3 cNIL f2 cCONS f1 cCONS f0 cNIL f14 c==> c= f16 creplacefacesAt cCONS f4 cNIL f2 cCONS f0 cCONS f1 cNIL f15 c==> c= f17 cAPPEND f16 cREPLICATE cLENGTH f5 cCONS f0 cCONS f1 cNIL c==> c= c, f0 c, f1 cGraph cAPPEND creplace f2 cCONS f1 cNIL f8 cCONS f0 cNIL c+ f6 cLENGTH f5 f17 cAPPEND f9 cheightsNewVertices c#!# f9 f3 c#!# f9 f4 cLENGTH f5 c, f18 c, f19 f20 c==> cMEM f2 f8 cMEM f19 cfaces f20
+ (Fs' = ((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs)) |- (((((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1' , (f2' , ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs))))) ((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs)) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g')))) = ((((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1' , (f2' , ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs))))) Fs') = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g')))))
T c==> c= f0 creplacefacesAt f1 f2 cCONS f3 cNIL f4 c= c==> c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, f3 c, f5 cGraph cAPPEND creplace f2 cCONS f5 cNIL f6 cCONS f3 cNIL c+ f7 cLENGTH f8 b1 cAPPEND f9 cheightsNewVertices c#!# f9 f10 c#!# f9 f11 cLENGTH f8 cAPPEND b1 cREPLICATE cLENGTH f8 cCONS f3 cCONS f5 cNIL creplacefacesAt cCONS f11 cNIL f2 cCONS f3 cCONS f5 cNIL b1 creplacefacesAt cCONS f10 cNIL f2 cCONS f5 cCONS f3 cNIL b1 creplacefacesAt f12 f2 cCONS f5 cNIL b0 creplacefacesAt f1 f2 cCONS f3 cNIL f4 c, f13 c, f14 f15 c==> cMEM f2 f6 cMEM f14 cfaces f15 c==> c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, f3 c, f5 cGraph cAPPEND creplace f2 cCONS f5 cNIL f6 cCONS f3 cNIL c+ f7 cLENGTH f8 b1 cAPPEND f9 cheightsNewVertices c#!# f9 f10 c#!# f9 f11 cLENGTH f8 cAPPEND b1 cREPLICATE cLENGTH f8 cCONS f3 cCONS f5 cNIL creplacefacesAt cCONS f11 cNIL f2 cCONS f3 cCONS f5 cNIL b1 creplacefacesAt cCONS f10 cNIL f2 cCONS f5 cCONS f3 cNIL b1 creplacefacesAt f12 f2 cCONS f5 cNIL b0 f0 c, f13 c, f14 f15 c==> cMEM f2 f6 cMEM f14 cfaces f15
+ ((\g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))) g') |- ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))
T c==> * / c= c, f0 c, f1 b0 csplitFace f2 f3 f4 f5 f6 f7 c= c, f0 c, f1 f7 csplitFace f2 f3 f4 f5 f6
+ |- (a ==> (hold a))
T c==> f0 chold f0
+ |- (?Fs''''. (Fs'''' = ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''')))
T c? / c= b0 creplacefacesAt cCONS f0 cNIL f1 cCONS f2 cCONS f3 cNIL f4
+ ((f1' , f2') = ((((split_face f) u) v) ws)), (n = (countVertices g)), (fs = (faces g)), (h = (heights g)), (vs1 = (((betwn (FST f)) u) v)), (vs2 = (((betwn (FST f)) v) u)), (Fs = (faceListAt g)), (Fs' = ((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs)), (Fs'' = ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs')), (Fs''' = ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'')), (Fs'''' = ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''')), (Fs''''' = ((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL))))) |- (((f1' = f1) /\ ((f2' = f2) /\ (((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))) = g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g'))))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c==> c= f6 ccountVertices f7 c==> c= f8 cfaces f7 c==> c= f9 cheights f7 c==> c= f10 cbetwn cFST f2 f3 f4 c==> c= f11 cbetwn cFST f2 f4 f3 c==> c= f12 cfaceListAt f7 c==> c= f13 creplacefacesAt f10 f2 cCONS f0 cNIL f12 c==> c= f14 creplacefacesAt f11 f2 cCONS f1 cNIL f13 c==> c= f15 creplacefacesAt cCONS f3 cNIL f2 cCONS f1 cCONS f0 cNIL f14 c==> c= f16 creplacefacesAt cCONS f4 cNIL f2 cCONS f0 cCONS f1 cNIL f15 c==> c= f17 cAPPEND f16 cREPLICATE cLENGTH f5 cCONS f0 cCONS f1 cNIL c==> c/\ c= f0 f18 c/\ c= f1 f19 c= cGraph cAPPEND creplace f2 cCONS f1 cNIL f8 cCONS f0 cNIL c+ f6 cLENGTH f5 f17 cAPPEND f9 cheightsNewVertices c#!# f9 f3 c#!# f9 f4 cLENGTH f5 f20 c==> cMEM f2 f8 cMEM f19 cfaces f20
+ ((MEM f) fs) |- (((MEM f) fs) /\ ((MEM f2) ((CONS f2) NIL)))
T c==> cMEM f0 f1 c/\ cMEM f0 f1 cMEM f2 cCONS f2 cNIL
+ |- (((!g'. ((GEQ ((GABS (\_10108022. (!f1. (!f2. (!g'. ((GEQ (_10108022 (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))))))) (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))) ==> ((\g'. ((GEQ ((GABS (\_10108022. (!f1. (!f2. (!g'. ((GEQ (_10108022 (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))))))) (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))) g')) = ((\g'. ((GEQ ((GABS (\_10108022. (!f1. (!f2. (!g'. ((GEQ (_10108022 (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))))))) (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))) g'))
T c= c==> ! cGEQ cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END cMEM b3 cfaces b4 c, f0 c, f1 b0 cLET_END cMEM f1 cfaces b0 * / cGEQ cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END cMEM b3 cfaces b4 c, f0 c, f1 b0 cLET_END cMEM f1 cfaces b0 f2 * / cGEQ cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END cMEM b3 cfaces b4 c, f0 c, f1 b0 cLET_END cMEM f1 cfaces b0 f2
+ (((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs) = Fs') |- ((((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs) = Fs') /\ ((((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs') = Fs'') ==> ((((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'') = Fs''') ==> ((((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''') = Fs'''') ==> ((((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))) = Fs''''') ==> ((f1' = f1) ==> ((f2' = f2) ==> ((((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))) = ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))) ==> (((MEM f) fs) ==> (hold ((MEM f2) (faces ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))))))))))
T c==> c= creplacefacesAt f0 f1 cCONS f2 cNIL f3 f4 c/\ c= creplacefacesAt f0 f1 cCONS f2 cNIL f3 f4 c==> c= creplacefacesAt f5 f1 cCONS f6 cNIL f4 f7 c==> c= creplacefacesAt cCONS f8 cNIL f1 cCONS f6 cCONS f2 cNIL f7 f9 c==> c= creplacefacesAt cCONS f10 cNIL f1 cCONS f2 cCONS f6 cNIL f9 f11 c==> c= cAPPEND f11 cREPLICATE cLENGTH f12 cCONS f2 cCONS f6 cNIL f13 c==> c= f2 f14 c==> c= f6 f15 c==> c= cGraph cAPPEND creplace f1 cCONS f6 cNIL f16 cCONS f2 cNIL c+ f17 cLENGTH f12 f13 cAPPEND f18 cheightsNewVertices c#!# f18 f8 c#!# f18 f10 cLENGTH f12 cGraph cAPPEND creplace f1 cCONS f6 cNIL f16 cCONS f2 cNIL c+ f17 cLENGTH f12 f13 cAPPEND f18 cheightsNewVertices c#!# f18 f8 c#!# f18 f10 cLENGTH f12 c==> cMEM f1 f16 chold cMEM f15 cfaces cGraph cAPPEND creplace f1 cCONS f6 cNIL f16 cCONS f2 cNIL c+ f17 cLENGTH f12 f13 cAPPEND f18 cheightsNewVertices c#!# f18 f8 c#!# f18 f10 cLENGTH f12
+ |- ((vs2 = (((betwn (FST f)) v) u)) ==> (?vs2. (vs2 = (((betwn (FST f)) v) u))))
T c==> c= f0 cbetwn cFST f1 f2 f3 c? / c= b0 cbetwn cFST f1 f2 f3
+ (fs = (faces g)) |- ((((LET (\n. (LET_END ((LET (\Fs. (LET_END ((LET (\h. (LET_END ((LET (\vs1. (LET_END ((LET (\vs2. (LET_END ((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1 , (f2 , ((((Graph ((APPEND (((replace f) ((CONS f2) NIL)) fs)) ((CONS f1) NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1) ((CONS f2) NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1) ((CONS f2) NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2) ((CONS f1) NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2) NIL)) Fs))))) ((((replacefacesAt vs1) f) ((CONS f1) NIL)) Fs))))))))) ((((split_face f) u) v) ws))))) (((betwn (FST f)) v) u))))) (((betwn (FST f)) u) v))))) (heights g))))) (faceListAt g))))) (countVertices g)) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g'))))
T c==> c= f0 cfaces f1 c==> c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET * part cGABS / ! ! cGEQ * b5 c, b6 b7 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b6 c, b7 cGraph cAPPEND creplace f2 cCONS b7 cNIL f0 cCONS b6 cNIL c+ b0 cLENGTH f3 b8 cAPPEND b2 cheightsNewVertices c#!# b2 f4 c#!# b2 f5 cLENGTH f3 cAPPEND b8 cREPLICATE cLENGTH f3 cCONS b6 cCONS b7 cNIL creplacefacesAt cCONS f5 cNIL f2 cCONS b6 cCONS b7 cNIL b8 creplacefacesAt cCONS f4 cNIL f2 cCONS b7 cCONS b6 cNIL b8 creplacefacesAt b4 f2 cCONS b7 cNIL b8 creplacefacesAt b3 f2 cCONS b6 cNIL b1 csplit_face f2 f4 f5 f3 cbetwn cFST f2 f5 f4 cbetwn cFST f2 f4 f5 cheights f1 cfaceListAt f1 ccountVertices f1 c, f6 c, f7 f8 c==> cMEM f2 f0 cMEM f7 cfaces f8
+ |- ((n = (countVertices g)) ==> (?n. (n = (countVertices g))))
T c==> c= f0 ccountVertices f1 c? / c= b0 ccountVertices f1
+ (((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))) = g'), (n = (countVertices g)), (fs = (faces g)), (Fs = (faceListAt g)) |- (((heights g) = h) ==> (((((betwn (FST f)) u) v) = vs1) ==> (((((betwn (FST f)) v) u) = vs2) ==> ((((((split_face f) u) v) ws) = (f1' , f2')) ==> ((((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs) = Fs') ==> ((((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs') = Fs'') ==> ((((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'') = Fs''') ==> ((((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''') = Fs'''') ==> ((((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))) = Fs''''') ==> ((f1' = f1) ==> ((f2' = f2) ==> ((((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))) = g') ==> (((MEM f) fs) ==> (hold ((MEM f2) (faces g'))))))))))))))))
T c==> c= cGraph cAPPEND creplace f0 cCONS f1 cNIL f2 cCONS f3 cNIL c+ f4 cLENGTH f5 f6 cAPPEND f7 cheightsNewVertices c#!# f7 f8 c#!# f7 f9 cLENGTH f5 f10 c==> c= f4 ccountVertices f11 c==> c= f2 cfaces f11 c==> c= f12 cfaceListAt f11 c==> c= cheights f11 f7 c==> c= cbetwn cFST f0 f8 f9 f13 c==> c= cbetwn cFST f0 f9 f8 f14 c==> c= csplit_face f0 f8 f9 f5 c, f3 f1 c==> c= creplacefacesAt f13 f0 cCONS f3 cNIL f12 f15 c==> c= creplacefacesAt f14 f0 cCONS f1 cNIL f15 f16 c==> c= creplacefacesAt cCONS f8 cNIL f0 cCONS f1 cCONS f3 cNIL f16 f17 c==> c= creplacefacesAt cCONS f9 cNIL f0 cCONS f3 cCONS f1 cNIL f17 f18 c==> c= cAPPEND f18 cREPLICATE cLENGTH f5 cCONS f3 cCONS f1 cNIL f6 c==> c= f3 f19 c==> c= f1 f20 c==> c= cGraph cAPPEND creplace f0 cCONS f1 cNIL f2 cCONS f3 cNIL c+ f4 cLENGTH f5 f6 cAPPEND f7 cheightsNewVertices c#!# f7 f8 c#!# f7 f9 cLENGTH f5 f10 c==> cMEM f0 f2 chold cMEM f20 cfaces f10
+ ((f1' = (FST ((((split_face f) u) v) ws))) /\ (f2' = (SND ((((split_face f) u) v) ws)))) |- ((f1' , f2') = ((((split_face f) u) v) ws))
T c==> c/\ c= f0 cFST csplit_face f1 f2 f3 f4 c= f5 cSND csplit_face f1 f2 f3 f4 c= c, f0 f5 csplit_face f1 f2 f3 f4
+ |- (!f2. (((\f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)))) f2) ==> (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws)))))
T c==> * / c? / c= c, f0 c, b0 b1 csplitFace f1 f2 f3 f4 f5 f6 c==> cMEM f4 cfaces f1 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3 csplitFace f1 f2 f3 f4 f5
+ |- ((fs = (faces g)) ==> (?fs. (fs = (faces g))))
T c==> c= f0 cfaces f1 c? / c= b0 cfaces f1
+ |- ((T ==> (?Fs'''''. (Fs''''' = ((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL))))))) = (?Fs'''''. (Fs''''' = ((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))))))
T c= c==> cT c? / c= b0 cAPPEND f0 cREPLICATE cLENGTH f1 cCONS f2 cCONS f3 cNIL c? / c= b0 cAPPEND f0 cREPLICATE cLENGTH f1 cCONS f2 cCONS f3 cNIL
+ (Fs''''' = ((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL))))) |- (((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))) = Fs''''')
T c==> c= f0 cAPPEND f1 cREPLICATE cLENGTH f2 cCONS f3 cCONS f4 cNIL c= cAPPEND f1 cREPLICATE cLENGTH f2 cCONS f3 cCONS f4 cNIL f0
+ |- (((f1' = (FST ((((split_face f) u) v) ws))) /\ (f2' = (SND ((((split_face f) u) v) ws)))) ==> (?f1'. (?f2'. ((f1' , f2') = ((((split_face f) u) v) ws)))))
T c==> c/\ c= f0 cFST csplit_face f1 f2 f3 f4 c= f5 cSND csplit_face f1 f2 f3 f4 c? / c? / c= c, b0 b1 csplit_face f1 f2 f3 f4
+ |- ((\ram1. (!ram2. (!g. ((((((splitFace g) ram1) ram2) oldF) newVs) = ((LET (\fs. (LET_END ((LET (\n. (LET_END ((LET (\Fs. (LET_END ((LET (\h. (LET_END ((LET (\vs1. (LET_END ((LET (\vs2. (LET_END ((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1 , (f2 , ((((Graph ((APPEND (((replace oldF) ((CONS f2) NIL)) fs)) ((CONS f1) NIL))) (n + (LENGTH newVs))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) ram1)) ((#!# h) ram2)) (LENGTH newVs))))))))) ((APPEND Fs) ((REPLICATE (LENGTH newVs)) ((CONS f1) ((CONS f2) NIL)))))))) ((((replacefacesAt ((CONS ram2) NIL)) oldF) ((CONS f1) ((CONS f2) NIL))) Fs))))) ((((replacefacesAt ((CONS ram1) NIL)) oldF) ((CONS f2) ((CONS f1) NIL))) Fs))))) ((((replacefacesAt vs2) oldF) ((CONS f2) NIL)) Fs))))) ((((replacefacesAt vs1) oldF) ((CONS f1) NIL)) Fs))))))))) ((((split_face oldF) ram1) ram2) newVs))))) (((betwn (FST oldF)) ram2) ram1))))) (((betwn (FST oldF)) ram1) ram2))))) (heights g))))) (faceListAt g))))) (countVertices g))))) (faces g)))))) ram1)
T * / ! ! c= csplitFace b2 b0 b1 f0 f1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET * part cGABS / ! ! cGEQ * b9 c, b10 b11 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b10 c, b11 cGraph cAPPEND creplace f0 cCONS b11 cNIL b3 cCONS b10 cNIL c+ b4 cLENGTH f1 b12 cAPPEND b6 cheightsNewVertices c#!# b6 b0 c#!# b6 b1 cLENGTH f1 cAPPEND b12 cREPLICATE cLENGTH f1 cCONS b10 cCONS b11 cNIL creplacefacesAt cCONS b1 cNIL f0 cCONS b10 cCONS b11 cNIL b12 creplacefacesAt cCONS b0 cNIL f0 cCONS b11 cCONS b10 cNIL b12 creplacefacesAt b8 f0 cCONS b11 cNIL b12 creplacefacesAt b7 f0 cCONS b10 cNIL b5 csplit_face f0 b0 b1 f1 cbetwn cFST f0 b1 b0 cbetwn cFST f0 b0 b1 cheights b2 cfaceListAt b2 ccountVertices b2 cfaces b2 f2
- (vs2 = (((betwn (FST f)) v) u)) |- (((((betwn (FST f)) u) v) = vs1) = ((((betwn (FST f)) u) v) = vs1))
T c==> c= f0 cbetwn cFST f1 f2 f3 c= c= cbetwn cFST f1 f3 f2 f4 c= cbetwn cFST f1 f3 f2 f4
+ |- ((\g'. ((GEQ ((GABS (\_10108022. (!f1. (!f2. (!g'. ((GEQ (_10108022 (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))))))) (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))) g')
T * / cGEQ cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END cMEM b3 cfaces b4 c, f0 c, f1 b0 cLET_END cMEM f1 cfaces b0 f2
+ (Fs''''' = ((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL))))) |- (((((LET (\Fs. (LET_END (f1' , (f2' , ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) Fs''''') = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g')))) = ((((LET (\Fs. (LET_END (f1' , (f2' , ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL))))) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g')))))
T c==> c= f0 cAPPEND f1 cREPLICATE cLENGTH f2 cCONS f3 cCONS f4 cNIL c= c==> c= cLET / cLET_END c, f3 c, f4 cGraph cAPPEND creplace f5 cCONS f4 cNIL f6 cCONS f3 cNIL c+ f7 cLENGTH f2 b0 cAPPEND f8 cheightsNewVertices c#!# f8 f9 c#!# f8 f10 cLENGTH f2 f0 c, f11 c, f12 f13 c==> cMEM f5 f6 cMEM f12 cfaces f13 c==> c= cLET / cLET_END c, f3 c, f4 cGraph cAPPEND creplace f5 cCONS f4 cNIL f6 cCONS f3 cNIL c+ f7 cLENGTH f2 b0 cAPPEND f8 cheightsNewVertices c#!# f8 f9 c#!# f8 f10 cLENGTH f2 cAPPEND f1 cREPLICATE cLENGTH f2 cCONS f3 cCONS f4 cNIL c, f11 c, f12 f13 c==> cMEM f5 f6 cMEM f12 cfaces f13
- (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))) |- ((?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))) /\ (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws))))
T c==> c? / c= c, f0 c, f1 b0 csplitFace f2 f3 f4 f5 f6 c/\ c? / c= c, f0 c, f1 b0 csplitFace f2 f3 f4 f5 f6 c==> cMEM f5 cfaces f2 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3 csplitFace f2 f3 f4 f5 f6
+ |- ((\_10108022. (!f1. (!f2. (!g'. ((GEQ (_10108022 (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))) (GABS (\_10108022. (!f1. (!f2. (!g'. ((GEQ (_10108022 (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))))))))
T * / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3 * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3
+ |- (((!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) ==> ((\y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) y)) = ((\y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) y))
T c= c==> ! ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 * / ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 f1 * / ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 f1
+ |- (g' = ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (f1 , (f2 , g')))))
T c= f0 c@ / ! ! c= * b0 c, b1 b2 b2 c@ / ! ! c= * b0 c, b1 b2 b2 c, f1 c, f2 f0
+ (f1' = f1), (f2' = f2) |- (((MEM f2) ((APPEND (((replace f) ((CONS f2) NIL)) fs)) ((CONS f1) NIL))) = ((MEM f2) (faces ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))))))
T c==> c= f0 f1 c==> c= f2 f3 c= cMEM f3 cAPPEND creplace f4 cCONS f3 cNIL f5 cCONS f1 cNIL cMEM f3 cfaces cGraph cAPPEND creplace f4 cCONS f2 cNIL f5 cCONS f0 cNIL c+ f6 cLENGTH f7 f8 cAPPEND f9 cheightsNewVertices c#!# f9 f10 c#!# f9 f11 cLENGTH f7
+ ((f1' , f2') = ((((split_face f) u) v) ws)), (((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))) = g'), (f1' = f1), (f2' = f2), (n = (countVertices g)), (fs = (faces g)), (h = (heights g)), (vs1 = (((betwn (FST f)) u) v)), (vs2 = (((betwn (FST f)) v) u)), (Fs = (faceListAt g)), (Fs' = ((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs)), (Fs'' = ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs')), (Fs''' = ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'')), (Fs'''' = ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''')), (Fs''''' = ((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL))))), ((MEM f) fs) |- (hold ((MEM f2) (faces g')))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c==> c= cGraph cAPPEND creplace f2 cCONS f1 cNIL f6 cCONS f0 cNIL c+ f7 cLENGTH f5 f8 cAPPEND f9 cheightsNewVertices c#!# f9 f3 c#!# f9 f4 cLENGTH f5 f10 c==> c= f0 f11 c==> c= f1 f12 c==> c= f7 ccountVertices f13 c==> c= f6 cfaces f13 c==> c= f9 cheights f13 c==> c= f14 cbetwn cFST f2 f3 f4 c==> c= f15 cbetwn cFST f2 f4 f3 c==> c= f16 cfaceListAt f13 c==> c= f17 creplacefacesAt f14 f2 cCONS f0 cNIL f16 c==> c= f18 creplacefacesAt f15 f2 cCONS f1 cNIL f17 c==> c= f19 creplacefacesAt cCONS f3 cNIL f2 cCONS f1 cCONS f0 cNIL f18 c==> c= f20 creplacefacesAt cCONS f4 cNIL f2 cCONS f0 cCONS f1 cNIL f19 c==> c= f8 cAPPEND f20 cREPLICATE cLENGTH f5 cCONS f0 cCONS f1 cNIL c==> cMEM f2 f6 chold cMEM f12 cfaces f10
+ |- ((Fs''''' = ((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL))))) = ((\Fs'''''. (Fs''''' = ((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))))) Fs'''''))
T c= c= f0 cAPPEND f1 cREPLICATE cLENGTH f2 cCONS f3 cCONS f4 cNIL * / c= b0 cAPPEND f1 cREPLICATE cLENGTH f2 cCONS f3 cCONS f4 cNIL f0
+ ((f1' , f2') = ((((split_face f) u) v) ws)), (n = (countVertices g)), (fs = (faces g)), (h = (heights g)), (vs1 = (((betwn (FST f)) u) v)), (vs2 = (((betwn (FST f)) v) u)), (Fs = (faceListAt g)), (Fs' = ((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs)), (Fs'' = ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs')) |- ((((\Fs'''. (Fs''' = ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs''))) Fs''') ==> ((((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1' , (f2' , ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'')) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g'))))) = T)
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c==> c= f6 ccountVertices f7 c==> c= f8 cfaces f7 c==> c= f9 cheights f7 c==> c= f10 cbetwn cFST f2 f3 f4 c==> c= f11 cbetwn cFST f2 f4 f3 c==> c= f12 cfaceListAt f7 c==> c= f13 creplacefacesAt f10 f2 cCONS f0 cNIL f12 c==> c= f14 creplacefacesAt f11 f2 cCONS f1 cNIL f13 c= c==> * / c= b0 creplacefacesAt cCONS f3 cNIL f2 cCONS f1 cCONS f0 cNIL f14 f15 c==> c= cLET / cLET_END cLET / cLET_END cLET / cLET_END c, f0 c, f1 cGraph cAPPEND creplace f2 cCONS f1 cNIL f8 cCONS f0 cNIL c+ f6 cLENGTH f5 b1 cAPPEND f9 cheightsNewVertices c#!# f9 f3 c#!# f9 f4 cLENGTH f5 cAPPEND b1 cREPLICATE cLENGTH f5 cCONS f0 cCONS f1 cNIL creplacefacesAt cCONS f4 cNIL f2 cCONS f0 cCONS f1 cNIL b0 creplacefacesAt cCONS f3 cNIL f2 cCONS f1 cCONS f0 cNIL f14 c, f16 c, f17 f18 c==> cMEM f2 f8 cMEM f17 cfaces f18 cT
+ |- ((((\f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))))) f1) ==> (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws)))) = T)
T c= c==> * / c? / c? / c= c, b0 c, b1 b2 csplitFace f0 f1 f2 f3 f4 f5 c==> cMEM f3 cfaces f0 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3 csplitFace f0 f1 f2 f3 f4 cT
+ |- (((((LET (\Fs. (LET_END ((LET (\h. (LET_END ((LET (\vs1. (LET_END ((LET (\vs2. (LET_END ((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1 , (f2 , ((((Graph ((APPEND (((replace f) ((CONS f2) NIL)) fs)) ((CONS f1) NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1) ((CONS f2) NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1) ((CONS f2) NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2) ((CONS f1) NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2) NIL)) Fs))))) ((((replacefacesAt vs1) f) ((CONS f1) NIL)) Fs))))))))) ((((split_face f) u) v) ws))))) (((betwn (FST f)) v) u))))) (((betwn (FST f)) u) v))))) (heights g))))) (faceListAt g)) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g')))) = ((((LET (\n. (LET_END ((LET (\Fs. (LET_END ((LET (\h. (LET_END ((LET (\vs1. (LET_END ((LET (\vs2. (LET_END ((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1 , (f2 , ((((Graph ((APPEND (((replace f) ((CONS f2) NIL)) fs)) ((CONS f1) NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1) ((CONS f2) NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1) ((CONS f2) NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2) ((CONS f1) NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2) NIL)) Fs))))) ((((replacefacesAt vs1) f) ((CONS f1) NIL)) Fs))))))))) ((((split_face f) u) v) ws))))) (((betwn (FST f)) v) u))))) (((betwn (FST f)) u) v))))) (heights g))))) (faceListAt g))))) n) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g')))))
T c= c==> c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET * part cGABS / ! ! cGEQ * b4 c, b5 b6 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b5 c, b6 cGraph cAPPEND creplace f0 cCONS b6 cNIL f1 cCONS b5 cNIL c+ f2 cLENGTH f3 b7 cAPPEND b1 cheightsNewVertices c#!# b1 f4 c#!# b1 f5 cLENGTH f3 cAPPEND b7 cREPLICATE cLENGTH f3 cCONS b5 cCONS b6 cNIL creplacefacesAt cCONS f5 cNIL f0 cCONS b5 cCONS b6 cNIL b7 creplacefacesAt cCONS f4 cNIL f0 cCONS b6 cCONS b5 cNIL b7 creplacefacesAt b3 f0 cCONS b6 cNIL b7 creplacefacesAt b2 f0 cCONS b5 cNIL b0 csplit_face f0 f4 f5 f3 cbetwn cFST f0 f5 f4 cbetwn cFST f0 f4 f5 cheights f6 cfaceListAt f6 c, f7 c, f8 f9 c==> cMEM f0 f1 cMEM f8 cfaces f9 c==> c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET * part cGABS / ! ! cGEQ * b5 c, b6 b7 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b6 c, b7 cGraph cAPPEND creplace f0 cCONS b7 cNIL f1 cCONS b6 cNIL c+ b0 cLENGTH f3 b8 cAPPEND b2 cheightsNewVertices c#!# b2 f4 c#!# b2 f5 cLENGTH f3 cAPPEND b8 cREPLICATE cLENGTH f3 cCONS b6 cCONS b7 cNIL creplacefacesAt cCONS f5 cNIL f0 cCONS b6 cCONS b7 cNIL b8 creplacefacesAt cCONS f4 cNIL f0 cCONS b7 cCONS b6 cNIL b8 creplacefacesAt b4 f0 cCONS b7 cNIL b8 creplacefacesAt b3 f0 cCONS b6 cNIL b1 csplit_face f0 f4 f5 f3 cbetwn cFST f0 f5 f4 cbetwn cFST f0 f4 f5 cheights f6 cfaceListAt f6 f2 c, f7 c, f8 f9 c==> cMEM f0 f1 cMEM f8 cfaces f9
+ |- ((?fs. (fs = (faces g))) ==> ((((LET (\fs. (LET_END ((LET (\n. (LET_END ((LET (\Fs. (LET_END ((LET (\h. (LET_END ((LET (\vs1. (LET_END ((LET (\vs2. (LET_END ((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1 , (f2 , ((((Graph ((APPEND (((replace f) ((CONS f2) NIL)) fs)) ((CONS f1) NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1) ((CONS f2) NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1) ((CONS f2) NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2) ((CONS f1) NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2) NIL)) Fs))))) ((((replacefacesAt vs1) f) ((CONS f1) NIL)) Fs))))))))) ((((split_face f) u) v) ws))))) (((betwn (FST f)) v) u))))) (((betwn (FST f)) u) v))))) (heights g))))) (faceListAt g))))) (countVertices g))))) (faces g)) = (f1 , (f2 , g'))) ==> (((MEM f) (faces g)) ==> ((MEM f2) (faces g')))))
T c==> c? / c= b0 cfaces f0 c==> c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET * part cGABS / ! ! cGEQ * b6 c, b7 b8 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b7 c, b8 cGraph cAPPEND creplace f1 cCONS b8 cNIL b0 cCONS b7 cNIL c+ b1 cLENGTH f2 b9 cAPPEND b3 cheightsNewVertices c#!# b3 f3 c#!# b3 f4 cLENGTH f2 cAPPEND b9 cREPLICATE cLENGTH f2 cCONS b7 cCONS b8 cNIL creplacefacesAt cCONS f4 cNIL f1 cCONS b7 cCONS b8 cNIL b9 creplacefacesAt cCONS f3 cNIL f1 cCONS b8 cCONS b7 cNIL b9 creplacefacesAt b5 f1 cCONS b8 cNIL b9 creplacefacesAt b4 f1 cCONS b7 cNIL b2 csplit_face f1 f3 f4 f2 cbetwn cFST f1 f4 f3 cbetwn cFST f1 f3 f4 cheights f0 cfaceListAt f0 ccountVertices f0 cfaces f0 c, f5 c, f6 f7 c==> cMEM f1 cfaces f0 cMEM f6 cfaces f7
+ (f1' = f1), (f2' = f2) |- ((f2' = f2) /\ ((((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))) = ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))) ==> (((MEM f) fs) ==> (hold ((MEM f2) (faces ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c==> c= cGraph cAPPEND creplace f4 cCONS f2 cNIL f5 cCONS f0 cNIL c+ f6 cLENGTH f7 f8 cAPPEND f9 cheightsNewVertices c#!# f9 f10 c#!# f9 f11 cLENGTH f7 cGraph cAPPEND creplace f4 cCONS f2 cNIL f5 cCONS f0 cNIL c+ f6 cLENGTH f7 f8 cAPPEND f9 cheightsNewVertices c#!# f9 f10 c#!# f9 f11 cLENGTH f7 c==> cMEM f4 f5 chold cMEM f3 cfaces cGraph cAPPEND creplace f4 cCONS f2 cNIL f5 cCONS f0 cNIL c+ f6 cLENGTH f7 f8 cAPPEND f9 cheightsNewVertices c#!# f9 f10 c#!# f9 f11 cLENGTH f7
+ |- (((!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) ==> ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1)) = ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1))
T c= c==> ! ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1 * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
- (Fs''''' = ((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL))))) |- (((faceListAt g) = Fs) = ((faceListAt g) = Fs))
T c==> c= f0 cAPPEND f1 cREPLICATE cLENGTH f2 cCONS f3 cCONS f4 cNIL c= c= cfaceListAt f5 f6 c= cfaceListAt f5 f6
+ |- ((?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)))) = ((\f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))))) f1))
T c= c? / c? / c= c, f0 c, b0 b1 csplitFace f1 f2 f3 f4 f5 * / c? / c? / c= c, b0 c, b1 b2 csplitFace f1 f2 f3 f4 f5 f0
+ (n = (countVertices g)), (fs = (faces g)), (h = (heights g)), (Fs = (faceListAt g)) |- ((((LET (\vs1. (LET_END ((LET (\vs2. (LET_END ((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1 , (f2 , ((((Graph ((APPEND (((replace f) ((CONS f2) NIL)) fs)) ((CONS f1) NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1) ((CONS f2) NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1) ((CONS f2) NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2) ((CONS f1) NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2) NIL)) Fs))))) ((((replacefacesAt vs1) f) ((CONS f1) NIL)) Fs))))))))) ((((split_face f) u) v) ws))))) (((betwn (FST f)) v) u))))) (((betwn (FST f)) u) v)) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g'))))
T c==> c= f0 ccountVertices f1 c==> c= f2 cfaces f1 c==> c= f3 cheights f1 c==> c= f4 cfaceListAt f1 c==> c= cLET / cLET_END cLET / cLET_END cLET * part cGABS / ! ! cGEQ * b2 c, b3 b4 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b3 c, b4 cGraph cAPPEND creplace f5 cCONS b4 cNIL f2 cCONS b3 cNIL c+ f0 cLENGTH f6 b6 cAPPEND f3 cheightsNewVertices c#!# f3 f7 c#!# f3 f8 cLENGTH f6 cAPPEND b6 cREPLICATE cLENGTH f6 cCONS b3 cCONS b4 cNIL creplacefacesAt cCONS f8 cNIL f5 cCONS b3 cCONS b4 cNIL b6 creplacefacesAt cCONS f7 cNIL f5 cCONS b4 cCONS b3 cNIL b6 creplacefacesAt b1 f5 cCONS b4 cNIL b5 creplacefacesAt b0 f5 cCONS b3 cNIL f4 csplit_face f5 f7 f8 f6 cbetwn cFST f5 f8 f7 cbetwn cFST f5 f7 f8 c, f9 c, f10 f11 c==> cMEM f5 f2 cMEM f10 cfaces f11
+ |- (?vs2. (vs2 = (((betwn (FST f)) v) u)))
T c? / c= b0 cbetwn cFST f0 f1 f2
- (Fs'''' = ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''')) |- ((((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'') = Fs''') = (((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'') = Fs'''))
T c==> c= f0 creplacefacesAt cCONS f1 cNIL f2 cCONS f3 cCONS f4 cNIL f5 c= c= creplacefacesAt cCONS f6 cNIL f2 cCONS f4 cCONS f3 cNIL f7 f5 c= creplacefacesAt cCONS f6 cNIL f2 cCONS f4 cCONS f3 cNIL f7 f5
+ (n = (countVertices g)), (fs = (faces g)), (h = (heights g)), (vs1 = (((betwn (FST f)) u) v)), (vs2 = (((betwn (FST f)) v) u)), (Fs = (faceListAt g)) |- (((!x. (((\f1'. (?f2'. ((f1' , f2') = ((((split_face f) u) v) ws)))) x) ==> ((((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1 , (f2 , ((((Graph ((APPEND (((replace f) ((CONS f2) NIL)) fs)) ((CONS f1) NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1) ((CONS f2) NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1) ((CONS f2) NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2) ((CONS f1) NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2) NIL)) Fs))))) ((((replacefacesAt vs1) f) ((CONS f1) NIL)) Fs))))))))) ((((split_face f) u) v) ws)) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g')))))) ==> ((?f1'. (?f2'. ((f1' , f2') = ((((split_face f) u) v) ws)))) ==> ((((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1 , (f2 , ((((Graph ((APPEND (((replace f) ((CONS f2) NIL)) fs)) ((CONS f1) NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1) ((CONS f2) NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1) ((CONS f2) NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2) ((CONS f1) NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2) NIL)) Fs))))) ((((replacefacesAt vs1) f) ((CONS f1) NIL)) Fs))))))))) ((((split_face f) u) v) ws)) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g')))))) = ((?f1'. (?f2'. ((f1' , f2') = ((((split_face f) u) v) ws)))) ==> ((((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1 , (f2 , ((((Graph ((APPEND (((replace f) ((CONS f2) NIL)) fs)) ((CONS f1) NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1) ((CONS f2) NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1) ((CONS f2) NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2) ((CONS f1) NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2) NIL)) Fs))))) ((((replacefacesAt vs1) f) ((CONS f1) NIL)) Fs))))))))) ((((split_face f) u) v) ws)) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g'))))))
T c==> c= f0 ccountVertices f1 c==> c= f2 cfaces f1 c==> c= f3 cheights f1 c==> c= f4 cbetwn cFST f5 f6 f7 c==> c= f8 cbetwn cFST f5 f7 f6 c==> c= f9 cfaceListAt f1 c= c==> ! c==> * / c? / c= c, b1 b2 csplit_face f5 f6 f7 f10 b0 c==> c= cLET * part cGABS / ! ! cGEQ * b1 c, b2 b3 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b2 c, b3 cGraph cAPPEND creplace f5 cCONS b3 cNIL f2 cCONS b2 cNIL c+ f0 cLENGTH f10 b5 cAPPEND f3 cheightsNewVertices c#!# f3 f6 c#!# f3 f7 cLENGTH f10 cAPPEND b5 cREPLICATE cLENGTH f10 cCONS b2 cCONS b3 cNIL creplacefacesAt cCONS f7 cNIL f5 cCONS b2 cCONS b3 cNIL b5 creplacefacesAt cCONS f6 cNIL f5 cCONS b3 cCONS b2 cNIL b5 creplacefacesAt f8 f5 cCONS b3 cNIL b4 creplacefacesAt f4 f5 cCONS b2 cNIL f9 csplit_face f5 f6 f7 f10 c, f11 c, f12 f13 c==> cMEM f5 f2 cMEM f12 cfaces f13 c==> c? / c? / c= c, b0 b1 csplit_face f5 f6 f7 f10 c==> c= cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b1 c, b2 cGraph cAPPEND creplace f5 cCONS b2 cNIL f2 cCONS b1 cNIL c+ f0 cLENGTH f10 b4 cAPPEND f3 cheightsNewVertices c#!# f3 f6 c#!# f3 f7 cLENGTH f10 cAPPEND b4 cREPLICATE cLENGTH f10 cCONS b1 cCONS b2 cNIL creplacefacesAt cCONS f7 cNIL f5 cCONS b1 cCONS b2 cNIL b4 creplacefacesAt cCONS f6 cNIL f5 cCONS b2 cCONS b1 cNIL b4 creplacefacesAt f8 f5 cCONS b2 cNIL b3 creplacefacesAt f4 f5 cCONS b1 cNIL f9 csplit_face f5 f6 f7 f10 c, f11 c, f12 f13 c==> cMEM f5 f2 cMEM f12 cfaces f13 c==> c? / c? / c= c, b0 b1 csplit_face f5 f6 f7 f10 c==> c= cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b1 c, b2 cGraph cAPPEND creplace f5 cCONS b2 cNIL f2 cCONS b1 cNIL c+ f0 cLENGTH f10 b4 cAPPEND f3 cheightsNewVertices c#!# f3 f6 c#!# f3 f7 cLENGTH f10 cAPPEND b4 cREPLICATE cLENGTH f10 cCONS b1 cCONS b2 cNIL creplacefacesAt cCONS f7 cNIL f5 cCONS b1 cCONS b2 cNIL b4 creplacefacesAt cCONS f6 cNIL f5 cCONS b2 cCONS b1 cNIL b4 creplacefacesAt f8 f5 cCONS b2 cNIL b3 creplacefacesAt f4 f5 cCONS b1 cNIL f9 csplit_face f5 f6 f7 f10 c, f11 c, f12 f13 c==> cMEM f5 f2 cMEM f12 cfaces f13
+ ((\vs1. (vs1 = (((betwn (FST f)) u) v))) vs1) |- (vs1 = (((betwn (FST f)) u) v))
T c==> * / c= b0 cbetwn cFST f0 f1 f2 f3 c= f3 cbetwn cFST f0 f1 f2
+ |- (((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) (f2 , g')) = ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (f1 , (f2 , g')))))
T c= c@ / ! ! c= * b0 c, b1 b2 b1 c, f0 f1 c@ / ! ! c= * b0 c, b1 b2 b1 c@ / ! ! c= * b0 c, b1 b2 b2 c, f2 c, f0 f1
+ (((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))) = g') |- ((((faces g) = fs) ==> (((countVertices g) = n) ==> (((faceListAt g) = Fs) ==> (((heights g) = h) ==> (((((betwn (FST f)) u) v) = vs1) ==> (((((betwn (FST f)) v) u) = vs2) ==> ((((((split_face f) u) v) ws) = (f1' , f2')) ==> ((((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs) = Fs') ==> ((((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs') = Fs'') ==> ((((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'') = Fs''') ==> ((((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''') = Fs'''') ==> ((((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))) = Fs''''') ==> ((f1' = f1) ==> ((f2' = f2) ==> ((((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))) = ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))) ==> (((MEM f) fs) ==> (hold ((MEM f2) (faces ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))))))))))))))))) = (((faces g) = fs) ==> (((countVertices g) = n) ==> (((faceListAt g) = Fs) ==> (((heights g) = h) ==> (((((betwn (FST f)) u) v) = vs1) ==> (((((betwn (FST f)) v) u) = vs2) ==> ((((((split_face f) u) v) ws) = (f1' , f2')) ==> ((((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs) = Fs') ==> ((((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs') = Fs'') ==> ((((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'') = Fs''') ==> ((((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''') = Fs'''') ==> ((((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))) = Fs''''') ==> ((f1' = f1) ==> ((f2' = f2) ==> ((((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))) = g') ==> (((MEM f) fs) ==> (hold ((MEM f2) (faces g'))))))))))))))))))))
T c==> c= cGraph cAPPEND creplace f0 cCONS f1 cNIL f2 cCONS f3 cNIL c+ f4 cLENGTH f5 f6 cAPPEND f7 cheightsNewVertices c#!# f7 f8 c#!# f7 f9 cLENGTH f5 f10 c= c==> c= cfaces f11 f2 c==> c= ccountVertices f11 f4 c==> c= cfaceListAt f11 f12 c==> c= cheights f11 f7 c==> c= cbetwn cFST f0 f8 f9 f13 c==> c= cbetwn cFST f0 f9 f8 f14 c==> c= csplit_face f0 f8 f9 f5 c, f3 f1 c==> c= creplacefacesAt f13 f0 cCONS f3 cNIL f12 f15 c==> c= creplacefacesAt f14 f0 cCONS f1 cNIL f15 f16 c==> c= creplacefacesAt cCONS f8 cNIL f0 cCONS f1 cCONS f3 cNIL f16 f17 c==> c= creplacefacesAt cCONS f9 cNIL f0 cCONS f3 cCONS f1 cNIL f17 f18 c==> c= cAPPEND f18 cREPLICATE cLENGTH f5 cCONS f3 cCONS f1 cNIL f6 c==> c= f3 f19 c==> c= f1 f20 c==> c= cGraph cAPPEND creplace f0 cCONS f1 cNIL f2 cCONS f3 cNIL c+ f4 cLENGTH f5 f6 cAPPEND f7 cheightsNewVertices c#!# f7 f8 c#!# f7 f9 cLENGTH f5 cGraph cAPPEND creplace f0 cCONS f1 cNIL f2 cCONS f3 cNIL c+ f4 cLENGTH f5 f6 cAPPEND f7 cheightsNewVertices c#!# f7 f8 c#!# f7 f9 cLENGTH f5 c==> cMEM f0 f2 chold cMEM f20 cfaces cGraph cAPPEND creplace f0 cCONS f1 cNIL f2 cCONS f3 cNIL c+ f4 cLENGTH f5 f6 cAPPEND f7 cheightsNewVertices c#!# f7 f8 c#!# f7 f9 cLENGTH f5 c==> c= cfaces f11 f2 c==> c= ccountVertices f11 f4 c==> c= cfaceListAt f11 f12 c==> c= cheights f11 f7 c==> c= cbetwn cFST f0 f8 f9 f13 c==> c= cbetwn cFST f0 f9 f8 f14 c==> c= csplit_face f0 f8 f9 f5 c, f3 f1 c==> c= creplacefacesAt f13 f0 cCONS f3 cNIL f12 f15 c==> c= creplacefacesAt f14 f0 cCONS f1 cNIL f15 f16 c==> c= creplacefacesAt cCONS f8 cNIL f0 cCONS f1 cCONS f3 cNIL f16 f17 c==> c= creplacefacesAt cCONS f9 cNIL f0 cCONS f3 cCONS f1 cNIL f17 f18 c==> c= cAPPEND f18 cREPLICATE cLENGTH f5 cCONS f3 cCONS f1 cNIL f6 c==> c= f3 f19 c==> c= f1 f20 c==> c= cGraph cAPPEND creplace f0 cCONS f1 cNIL f2 cCONS f3 cNIL c+ f4 cLENGTH f5 f6 cAPPEND f7 cheightsNewVertices c#!# f7 f8 c#!# f7 f9 cLENGTH f5 f10 c==> cMEM f0 f2 chold cMEM f20 cfaces f10
+ |- ((((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''') = Fs'''') ==> ((((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))) = Fs''''') ==> ((f1' = f1) ==> ((f2' = f2) ==> ((((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))) = ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))) ==> (((MEM f) fs) ==> (hold ((MEM f2) (faces ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))))))))))))
T c==> c= creplacefacesAt cCONS f0 cNIL f1 cCONS f2 cCONS f3 cNIL f4 f5 c==> c= cAPPEND f5 cREPLICATE cLENGTH f6 cCONS f2 cCONS f3 cNIL f7 c==> c= f2 f8 c==> c= f3 f9 c==> c= cGraph cAPPEND creplace f1 cCONS f3 cNIL f10 cCONS f2 cNIL c+ f11 cLENGTH f6 f7 cAPPEND f12 cheightsNewVertices c#!# f12 f13 c#!# f12 f0 cLENGTH f6 cGraph cAPPEND creplace f1 cCONS f3 cNIL f10 cCONS f2 cNIL c+ f11 cLENGTH f6 f7 cAPPEND f12 cheightsNewVertices c#!# f12 f13 c#!# f12 f0 cLENGTH f6 c==> cMEM f1 f10 chold cMEM f9 cfaces cGraph cAPPEND creplace f1 cCONS f3 cNIL f10 cCONS f2 cNIL c+ f11 cLENGTH f6 f7 cAPPEND f12 cheightsNewVertices c#!# f12 f13 c#!# f12 f0 cLENGTH f6
+ (n = (countVertices g)) |- ((((countVertices g) = n) ==> (((faceListAt g) = Fs) ==> (((heights g) = h) ==> (((((betwn (FST f)) u) v) = vs1) ==> (((((betwn (FST f)) v) u) = vs2) ==> ((((((split_face f) u) v) ws) = (f1' , f2')) ==> ((((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs) = Fs') ==> ((((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs') = Fs'') ==> ((((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'') = Fs''') ==> ((((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''') = Fs'''') ==> ((((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))) = Fs''''') ==> ((f1' = f1) ==> ((f2' = f2) ==> ((((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))) = g') ==> (((MEM f) fs) ==> (hold ((MEM f2) (faces g')))))))))))))))))) = (((faceListAt g) = Fs) ==> (((heights g) = h) ==> (((((betwn (FST f)) u) v) = vs1) ==> (((((betwn (FST f)) v) u) = vs2) ==> ((((((split_face f) u) v) ws) = (f1' , f2')) ==> ((((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs) = Fs') ==> ((((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs') = Fs'') ==> ((((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'') = Fs''') ==> ((((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''') = Fs'''') ==> ((((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))) = Fs''''') ==> ((f1' = f1) ==> ((f2' = f2) ==> ((((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))) = g') ==> (((MEM f) fs) ==> (hold ((MEM f2) (faces g'))))))))))))))))))
T c==> c= f0 ccountVertices f1 c= c==> c= ccountVertices f1 f0 c==> c= cfaceListAt f1 f2 c==> c= cheights f1 f3 c==> c= cbetwn cFST f4 f5 f6 f7 c==> c= cbetwn cFST f4 f6 f5 f8 c==> c= csplit_face f4 f5 f6 f9 c, f10 f11 c==> c= creplacefacesAt f7 f4 cCONS f10 cNIL f2 f12 c==> c= creplacefacesAt f8 f4 cCONS f11 cNIL f12 f13 c==> c= creplacefacesAt cCONS f5 cNIL f4 cCONS f11 cCONS f10 cNIL f13 f14 c==> c= creplacefacesAt cCONS f6 cNIL f4 cCONS f10 cCONS f11 cNIL f14 f15 c==> c= cAPPEND f15 cREPLICATE cLENGTH f9 cCONS f10 cCONS f11 cNIL f16 c==> c= f10 f17 c==> c= f11 f18 c==> c= cGraph cAPPEND creplace f4 cCONS f11 cNIL f19 cCONS f10 cNIL c+ f0 cLENGTH f9 f16 cAPPEND f3 cheightsNewVertices c#!# f3 f5 c#!# f3 f6 cLENGTH f9 f20 c==> cMEM f4 f19 chold cMEM f18 cfaces f20 c==> c= cfaceListAt f1 f2 c==> c= cheights f1 f3 c==> c= cbetwn cFST f4 f5 f6 f7 c==> c= cbetwn cFST f4 f6 f5 f8 c==> c= csplit_face f4 f5 f6 f9 c, f10 f11 c==> c= creplacefacesAt f7 f4 cCONS f10 cNIL f2 f12 c==> c= creplacefacesAt f8 f4 cCONS f11 cNIL f12 f13 c==> c= creplacefacesAt cCONS f5 cNIL f4 cCONS f11 cCONS f10 cNIL f13 f14 c==> c= creplacefacesAt cCONS f6 cNIL f4 cCONS f10 cCONS f11 cNIL f14 f15 c==> c= cAPPEND f15 cREPLICATE cLENGTH f9 cCONS f10 cCONS f11 cNIL f16 c==> c= f10 f17 c==> c= f11 f18 c==> c= cGraph cAPPEND creplace f4 cCONS f11 cNIL f19 cCONS f10 cNIL c+ f0 cLENGTH f9 f16 cAPPEND f3 cheightsNewVertices c#!# f3 f5 c#!# f3 f6 cLENGTH f9 f20 c==> cMEM f4 f19 chold cMEM f18 cfaces f20
+ (n = (countVertices g)), (fs = (faces g)), (h = (heights g)), (vs1 = (((betwn (FST f)) u) v)), (Fs = (faceListAt g)), ((\vs2. (vs2 = (((betwn (FST f)) v) u))) vs2) |- (((\vs2. (vs2 = (((betwn (FST f)) v) u))) vs2) /\ ((((LET (\vs2. (LET_END ((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1 , (f2 , ((((Graph ((APPEND (((replace f) ((CONS f2) NIL)) fs)) ((CONS f1) NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1) ((CONS f2) NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1) ((CONS f2) NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2) ((CONS f1) NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2) NIL)) Fs))))) ((((replacefacesAt vs1) f) ((CONS f1) NIL)) Fs))))))))) ((((split_face f) u) v) ws))))) (((betwn (FST f)) v) u)) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g')))))
T c==> c= f0 ccountVertices f1 c==> c= f2 cfaces f1 c==> c= f3 cheights f1 c==> c= f4 cbetwn cFST f5 f6 f7 c==> c= f8 cfaceListAt f1 c==> * / c= b0 cbetwn cFST f5 f7 f6 f9 c/\ * / c= b0 cbetwn cFST f5 f7 f6 f9 c==> c= cLET / cLET_END cLET * part cGABS / ! ! cGEQ * b1 c, b2 b3 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b2 c, b3 cGraph cAPPEND creplace f5 cCONS b3 cNIL f2 cCONS b2 cNIL c+ f0 cLENGTH f10 b5 cAPPEND f3 cheightsNewVertices c#!# f3 f6 c#!# f3 f7 cLENGTH f10 cAPPEND b5 cREPLICATE cLENGTH f10 cCONS b2 cCONS b3 cNIL creplacefacesAt cCONS f7 cNIL f5 cCONS b2 cCONS b3 cNIL b5 creplacefacesAt cCONS f6 cNIL f5 cCONS b3 cCONS b2 cNIL b5 creplacefacesAt b0 f5 cCONS b3 cNIL b4 creplacefacesAt f4 f5 cCONS b2 cNIL f8 csplit_face f5 f6 f7 f10 cbetwn cFST f5 f7 f6 c, f11 c, f12 f13 c==> cMEM f5 f2 cMEM f12 cfaces f13
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= ! ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 cT
+ ((f1' , f2') = ((((split_face f) u) v) ws)), (n = (countVertices g)), (fs = (faces g)), (h = (heights g)), (vs1 = (((betwn (FST f)) u) v)), (vs2 = (((betwn (FST f)) v) u)), (Fs = (faceListAt g)), (Fs' = ((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs)), (Fs'' = ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs')), (Fs''' = ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'')) |- (((\Fs''''. (Fs'''' = ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs'''))) Fs'''') ==> ((((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1' , (f2' , ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''')) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g')))))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c==> c= f6 ccountVertices f7 c==> c= f8 cfaces f7 c==> c= f9 cheights f7 c==> c= f10 cbetwn cFST f2 f3 f4 c==> c= f11 cbetwn cFST f2 f4 f3 c==> c= f12 cfaceListAt f7 c==> c= f13 creplacefacesAt f10 f2 cCONS f0 cNIL f12 c==> c= f14 creplacefacesAt f11 f2 cCONS f1 cNIL f13 c==> c= f15 creplacefacesAt cCONS f3 cNIL f2 cCONS f1 cCONS f0 cNIL f14 c==> * / c= b0 creplacefacesAt cCONS f4 cNIL f2 cCONS f0 cCONS f1 cNIL f15 f16 c==> c= cLET / cLET_END cLET / cLET_END c, f0 c, f1 cGraph cAPPEND creplace f2 cCONS f1 cNIL f8 cCONS f0 cNIL c+ f6 cLENGTH f5 b1 cAPPEND f9 cheightsNewVertices c#!# f9 f3 c#!# f9 f4 cLENGTH f5 cAPPEND b0 cREPLICATE cLENGTH f5 cCONS f0 cCONS f1 cNIL creplacefacesAt cCONS f4 cNIL f2 cCONS f0 cCONS f1 cNIL f15 c, f17 c, f18 f19 c==> cMEM f2 f8 cMEM f18 cfaces f19
+ |- ((?f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))))) ==> (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws))))
T c==> c? / c? / c? / c= c, b0 c, b1 b2 csplitFace f0 f1 f2 f3 f4 c==> cMEM f3 cfaces f0 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3 csplitFace f0 f1 f2 f3 f4
- (Fs''''' = ((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL))))) |- (((heights g) = h) = ((heights g) = h))
T c==> c= f0 cAPPEND f1 cREPLICATE cLENGTH f2 cCONS f3 cCONS f4 cNIL c= c= cheights f5 f6 c= cheights f5 f6
+ ((f1' , f2') = ((((split_face f) u) v) ws)), (n = (countVertices g)), (fs = (faces g)), (h = (heights g)), (vs1 = (((betwn (FST f)) u) v)), (vs2 = (((betwn (FST f)) v) u)), (Fs = (faceListAt g)), (Fs' = ((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs)), (Fs'' = ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs')) |- (((!x. (((\Fs'''. (Fs''' = ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs''))) x) ==> ((((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1' , (f2' , ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'')) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g')))))) ==> ((?Fs'''. (Fs''' = ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs''))) ==> ((((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1' , (f2' , ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'')) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g')))))) = ((?Fs'''. (Fs''' = ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs''))) ==> ((((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1' , (f2' , ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'')) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g'))))))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c==> c= f6 ccountVertices f7 c==> c= f8 cfaces f7 c==> c= f9 cheights f7 c==> c= f10 cbetwn cFST f2 f3 f4 c==> c= f11 cbetwn cFST f2 f4 f3 c==> c= f12 cfaceListAt f7 c==> c= f13 creplacefacesAt f10 f2 cCONS f0 cNIL f12 c==> c= f14 creplacefacesAt f11 f2 cCONS f1 cNIL f13 c= c==> ! c==> * / c= b1 creplacefacesAt cCONS f3 cNIL f2 cCONS f1 cCONS f0 cNIL f14 b0 c==> c= cLET / cLET_END cLET / cLET_END cLET / cLET_END c, f0 c, f1 cGraph cAPPEND creplace f2 cCONS f1 cNIL f8 cCONS f0 cNIL c+ f6 cLENGTH f5 b2 cAPPEND f9 cheightsNewVertices c#!# f9 f3 c#!# f9 f4 cLENGTH f5 cAPPEND b2 cREPLICATE cLENGTH f5 cCONS f0 cCONS f1 cNIL creplacefacesAt cCONS f4 cNIL f2 cCONS f0 cCONS f1 cNIL b1 creplacefacesAt cCONS f3 cNIL f2 cCONS f1 cCONS f0 cNIL f14 c, f15 c, f16 f17 c==> cMEM f2 f8 cMEM f16 cfaces f17 c==> c? / c= b0 creplacefacesAt cCONS f3 cNIL f2 cCONS f1 cCONS f0 cNIL f14 c==> c= cLET / cLET_END cLET / cLET_END cLET / cLET_END c, f0 c, f1 cGraph cAPPEND creplace f2 cCONS f1 cNIL f8 cCONS f0 cNIL c+ f6 cLENGTH f5 b1 cAPPEND f9 cheightsNewVertices c#!# f9 f3 c#!# f9 f4 cLENGTH f5 cAPPEND b1 cREPLICATE cLENGTH f5 cCONS f0 cCONS f1 cNIL creplacefacesAt cCONS f4 cNIL f2 cCONS f0 cCONS f1 cNIL b0 creplacefacesAt cCONS f3 cNIL f2 cCONS f1 cCONS f0 cNIL f14 c, f15 c, f16 f17 c==> cMEM f2 f8 cMEM f16 cfaces f17 c==> c? / c= b0 creplacefacesAt cCONS f3 cNIL f2 cCONS f1 cCONS f0 cNIL f14 c==> c= cLET / cLET_END cLET / cLET_END cLET / cLET_END c, f0 c, f1 cGraph cAPPEND creplace f2 cCONS f1 cNIL f8 cCONS f0 cNIL c+ f6 cLENGTH f5 b1 cAPPEND f9 cheightsNewVertices c#!# f9 f3 c#!# f9 f4 cLENGTH f5 cAPPEND b1 cREPLICATE cLENGTH f5 cCONS f0 cCONS f1 cNIL creplacefacesAt cCONS f4 cNIL f2 cCONS f0 cCONS f1 cNIL b0 creplacefacesAt cCONS f3 cNIL f2 cCONS f1 cCONS f0 cNIL f14 c, f15 c, f16 f17 c==> cMEM f2 f8 cMEM f16 cfaces f17
+ |- (!g'. (((\g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))) g') ==> (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws)))))
T c==> * / c= c, f0 c, f1 b0 csplitFace f2 f3 f4 f5 f6 f7 c==> cMEM f5 cfaces f2 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3 csplitFace f2 f3 f4 f5 f6
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((((LET (\h. (LET_END ((LET (\vs1. (LET_END ((LET (\vs2. (LET_END ((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1 , (f2 , ((((Graph ((APPEND (((replace f) ((CONS f2) NIL)) fs)) ((CONS f1) NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1) ((CONS f2) NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1) ((CONS f2) NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2) ((CONS f1) NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2) NIL)) Fs))))) ((((replacefacesAt vs1) f) ((CONS f1) NIL)) Fs))))))))) ((((split_face f) u) v) ws))))) (((betwn (FST f)) v) u))))) (((betwn (FST f)) u) v))))) (heights g)) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g')))) = ((((LET (\Fs. (LET_END ((LET (\h. (LET_END ((LET (\vs1. (LET_END ((LET (\vs2. (LET_END ((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1 , (f2 , ((((Graph ((APPEND (((replace f) ((CONS f2) NIL)) fs)) ((CONS f1) NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1) ((CONS f2) NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1) ((CONS f2) NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2) ((CONS f1) NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2) NIL)) Fs))))) ((((replacefacesAt vs1) f) ((CONS f1) NIL)) Fs))))))))) ((((split_face f) u) v) ws))))) (((betwn (FST f)) v) u))))) (((betwn (FST f)) u) v))))) (heights g))))) Fs) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g')))))
T c= c==> c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET * part cGABS / ! ! cGEQ * b3 c, b4 b5 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b4 c, b5 cGraph cAPPEND creplace f0 cCONS b5 cNIL f1 cCONS b4 cNIL c+ f2 cLENGTH f3 b7 cAPPEND b0 cheightsNewVertices c#!# b0 f4 c#!# b0 f5 cLENGTH f3 cAPPEND b7 cREPLICATE cLENGTH f3 cCONS b4 cCONS b5 cNIL creplacefacesAt cCONS f5 cNIL f0 cCONS b4 cCONS b5 cNIL b7 creplacefacesAt cCONS f4 cNIL f0 cCONS b5 cCONS b4 cNIL b7 creplacefacesAt b2 f0 cCONS b5 cNIL b6 creplacefacesAt b1 f0 cCONS b4 cNIL f6 csplit_face f0 f4 f5 f3 cbetwn cFST f0 f5 f4 cbetwn cFST f0 f4 f5 cheights f7 c, f8 c, f9 f10 c==> cMEM f0 f1 cMEM f9 cfaces f10 c==> c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET * part cGABS / ! ! cGEQ * b4 c, b5 b6 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b5 c, b6 cGraph cAPPEND creplace f0 cCONS b6 cNIL f1 cCONS b5 cNIL c+ f2 cLENGTH f3 b7 cAPPEND b1 cheightsNewVertices c#!# b1 f4 c#!# b1 f5 cLENGTH f3 cAPPEND b7 cREPLICATE cLENGTH f3 cCONS b5 cCONS b6 cNIL creplacefacesAt cCONS f5 cNIL f0 cCONS b5 cCONS b6 cNIL b7 creplacefacesAt cCONS f4 cNIL f0 cCONS b6 cCONS b5 cNIL b7 creplacefacesAt b3 f0 cCONS b6 cNIL b7 creplacefacesAt b2 f0 cCONS b5 cNIL b0 csplit_face f0 f4 f5 f3 cbetwn cFST f0 f5 f4 cbetwn cFST f0 f4 f5 cheights f7 f6 c, f8 c, f9 f10 c==> cMEM f0 f1 cMEM f9 cfaces f10
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ ((f1' , f2') = ((((split_face f) u) v) ws)), (n = (countVertices g)), (fs = (faces g)), (h = (heights g)), (vs1 = (((betwn (FST f)) u) v)), (vs2 = (((betwn (FST f)) v) u)), (Fs = (faceListAt g)), (Fs' = ((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs)) |- (((\Fs''. (Fs'' = ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs'))) Fs'') ==> ((((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1' , (f2' , ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs')) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g')))))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c==> c= f6 ccountVertices f7 c==> c= f8 cfaces f7 c==> c= f9 cheights f7 c==> c= f10 cbetwn cFST f2 f3 f4 c==> c= f11 cbetwn cFST f2 f4 f3 c==> c= f12 cfaceListAt f7 c==> c= f13 creplacefacesAt f10 f2 cCONS f0 cNIL f12 c==> * / c= b0 creplacefacesAt f11 f2 cCONS f1 cNIL f13 f14 c==> c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, f0 c, f1 cGraph cAPPEND creplace f2 cCONS f1 cNIL f8 cCONS f0 cNIL c+ f6 cLENGTH f5 b1 cAPPEND f9 cheightsNewVertices c#!# f9 f3 c#!# f9 f4 cLENGTH f5 cAPPEND b1 cREPLICATE cLENGTH f5 cCONS f0 cCONS f1 cNIL creplacefacesAt cCONS f4 cNIL f2 cCONS f0 cCONS f1 cNIL b1 creplacefacesAt cCONS f3 cNIL f2 cCONS f1 cCONS f0 cNIL b0 creplacefacesAt f11 f2 cCONS f1 cNIL f13 c, f15 c, f16 f17 c==> cMEM f2 f8 cMEM f16 cfaces f17
+ |- ((\_10108090. (!f1. (!f2. ((_10108090 (f1 , f2)) = (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1 , (f2 , ((((Graph ((APPEND (((replace f) ((CONS f2) NIL)) fs)) ((CONS f1) NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1) ((CONS f2) NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1) ((CONS f2) NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2) ((CONS f1) NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2) NIL)) Fs))))) ((((replacefacesAt vs1) f) ((CONS f1) NIL)) Fs))))))) (\_10108088. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10108088) , (((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10108088) , ((((Graph ((APPEND (((replace f) ((CONS ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10108088)) NIL)) fs)) ((CONS ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10108088)) NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10108088)) ((CONS ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10108088)) NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10108088)) ((CONS ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10108088)) NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10108088)) ((CONS ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10108088)) NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10108088)) NIL)) Fs))))) ((((replacefacesAt vs1) f) ((CONS ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10108088)) NIL)) Fs)))))
T * / ! ! c= * b0 c, b1 b2 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b1 c, b2 cGraph cAPPEND creplace f0 cCONS b2 cNIL f1 cCONS b1 cNIL c+ f2 cLENGTH f3 b4 cAPPEND f4 cheightsNewVertices c#!# f4 f5 c#!# f4 f6 cLENGTH f3 cAPPEND b4 cREPLICATE cLENGTH f3 cCONS b1 cCONS b2 cNIL creplacefacesAt cCONS f6 cNIL f0 cCONS b1 cCONS b2 cNIL b4 creplacefacesAt cCONS f5 cNIL f0 cCONS b2 cCONS b1 cNIL b4 creplacefacesAt f7 f0 cCONS b2 cNIL b3 creplacefacesAt f8 f0 cCONS b1 cNIL f9 / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, c@ / ! ! c= * b2 c, b3 b4 b3 b0 c, c@ / ! ! c= * b2 c, b3 b4 b4 b0 cGraph cAPPEND creplace f0 cCONS c@ / ! ! c= * b2 c, b3 b4 b4 b0 cNIL f1 cCONS c@ / ! ! c= * b2 c, b3 b4 b3 b0 cNIL c+ f2 cLENGTH f3 b2 cAPPEND f4 cheightsNewVertices c#!# f4 f5 c#!# f4 f6 cLENGTH f3 cAPPEND b2 cREPLICATE cLENGTH f3 cCONS c@ / ! ! c= * b2 c, b3 b4 b3 b0 cCONS c@ / ! ! c= * b2 c, b3 b4 b4 b0 cNIL creplacefacesAt cCONS f6 cNIL f0 cCONS c@ / ! ! c= * b2 c, b3 b4 b3 b0 cCONS c@ / ! ! c= * b2 c, b3 b4 b4 b0 cNIL b2 creplacefacesAt cCONS f5 cNIL f0 cCONS c@ / ! ! c= * b2 c, b3 b4 b4 b0 cCONS c@ / ! ! c= * b2 c, b3 b4 b3 b0 cNIL b2 creplacefacesAt f7 f0 cCONS c@ / ! ! c= * b2 c, b3 b4 b4 b0 cNIL b1 creplacefacesAt f8 f0 cCONS c@ / ! ! c= * b1 c, b2 b3 b2 b0 cNIL f9
+ |- ((((MEM f) (faces g)) ==> ((MEM f2) (faces g'))) = (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (f1 , (f2 , g')))))
T c= c==> cMEM f0 cfaces f1 cMEM f2 cfaces f3 c==> cMEM f0 cfaces f1 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3 c, f4 c, f2 f3
+ ((\Fs. (Fs = (faceListAt g))) Fs) |- (Fs = (faceListAt g))
T c==> * / c= b0 cfaceListAt f0 f1 c= f1 cfaceListAt f0
+ |- ((((\_10108088. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10108088) , (((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10108088) , ((((Graph ((APPEND (((replace f) ((CONS ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10108088)) NIL)) fs)) ((CONS ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10108088)) NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10108088)) ((CONS ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10108088)) NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10108088)) ((CONS ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10108088)) NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10108088)) ((CONS ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10108088)) NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10108088)) NIL)) Fs))))) ((((replacefacesAt vs1) f) ((CONS ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10108088)) NIL)) Fs)))) (f1 , f2)) = (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1 , (f2 , ((((Graph ((APPEND (((replace f) ((CONS f2) NIL)) fs)) ((CONS f1) NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1) ((CONS f2) NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1) ((CONS f2) NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2) ((CONS f1) NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2) NIL)) Fs))))) ((((replacefacesAt vs1) f) ((CONS f1) NIL)) Fs)))) = T)
T c= c= * / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, c@ / ! ! c= * b2 c, b3 b4 b3 b0 c, c@ / ! ! c= * b2 c, b3 b4 b4 b0 cGraph cAPPEND creplace f0 cCONS c@ / ! ! c= * b2 c, b3 b4 b4 b0 cNIL f1 cCONS c@ / ! ! c= * b2 c, b3 b4 b3 b0 cNIL c+ f2 cLENGTH f3 b2 cAPPEND f4 cheightsNewVertices c#!# f4 f5 c#!# f4 f6 cLENGTH f3 cAPPEND b2 cREPLICATE cLENGTH f3 cCONS c@ / ! ! c= * b2 c, b3 b4 b3 b0 cCONS c@ / ! ! c= * b2 c, b3 b4 b4 b0 cNIL creplacefacesAt cCONS f6 cNIL f0 cCONS c@ / ! ! c= * b2 c, b3 b4 b3 b0 cCONS c@ / ! ! c= * b2 c, b3 b4 b4 b0 cNIL b2 creplacefacesAt cCONS f5 cNIL f0 cCONS c@ / ! ! c= * b2 c, b3 b4 b4 b0 cCONS c@ / ! ! c= * b2 c, b3 b4 b3 b0 cNIL b2 creplacefacesAt f7 f0 cCONS c@ / ! ! c= * b2 c, b3 b4 b4 b0 cNIL b1 creplacefacesAt f8 f0 cCONS c@ / ! ! c= * b1 c, b2 b3 b2 b0 cNIL f9 c, f10 f11 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, f10 c, f11 cGraph cAPPEND creplace f0 cCONS f11 cNIL f1 cCONS f10 cNIL c+ f2 cLENGTH f3 b1 cAPPEND f4 cheightsNewVertices c#!# f4 f5 c#!# f4 f6 cLENGTH f3 cAPPEND b1 cREPLICATE cLENGTH f3 cCONS f10 cCONS f11 cNIL creplacefacesAt cCONS f6 cNIL f0 cCONS f10 cCONS f11 cNIL b1 creplacefacesAt cCONS f5 cNIL f0 cCONS f11 cCONS f10 cNIL b1 creplacefacesAt f7 f0 cCONS f11 cNIL b0 creplacefacesAt f8 f0 cCONS f10 cNIL f9 cT
+ ((f1' , f2') = ((((split_face f) u) v) ws)), (n = (countVertices g)), (fs = (faces g)), (h = (heights g)), (vs1 = (((betwn (FST f)) u) v)), (vs2 = (((betwn (FST f)) v) u)), (Fs = (faceListAt g)), (Fs' = ((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs)) |- (!Fs''. (((\Fs''. (Fs'' = ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs'))) Fs'') ==> ((((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1' , (f2' , ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs')) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g'))))))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c==> c= f6 ccountVertices f7 c==> c= f8 cfaces f7 c==> c= f9 cheights f7 c==> c= f10 cbetwn cFST f2 f3 f4 c==> c= f11 cbetwn cFST f2 f4 f3 c==> c= f12 cfaceListAt f7 c==> c= f13 creplacefacesAt f10 f2 cCONS f0 cNIL f12 ! c==> * / c= b1 creplacefacesAt f11 f2 cCONS f1 cNIL f13 b0 c==> c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, f0 c, f1 cGraph cAPPEND creplace f2 cCONS f1 cNIL f8 cCONS f0 cNIL c+ f6 cLENGTH f5 b2 cAPPEND f9 cheightsNewVertices c#!# f9 f3 c#!# f9 f4 cLENGTH f5 cAPPEND b2 cREPLICATE cLENGTH f5 cCONS f0 cCONS f1 cNIL creplacefacesAt cCONS f4 cNIL f2 cCONS f0 cCONS f1 cNIL b2 creplacefacesAt cCONS f3 cNIL f2 cCONS f1 cCONS f0 cNIL b1 creplacefacesAt f11 f2 cCONS f1 cNIL f13 c, f14 c, f15 f16 c==> cMEM f2 f8 cMEM f15 cfaces f16
+ |- (((countVertices g) = n) ==> (((faceListAt g) = Fs) ==> (((heights g) = h) ==> (((((betwn (FST f)) u) v) = vs1) ==> (((((betwn (FST f)) v) u) = vs2) ==> ((((((split_face f) u) v) ws) = (f1' , f2')) ==> ((((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs) = Fs') ==> ((((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs') = Fs'') ==> ((((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'') = Fs''') ==> ((((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''') = Fs'''') ==> ((((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))) = Fs''''') ==> ((f1' = f1) ==> ((f2' = f2) ==> ((((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))) = ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))) ==> (((MEM f) fs) ==> (hold ((MEM f2) (faces ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))))))))))))))))
T c==> c= ccountVertices f0 f1 c==> c= cfaceListAt f0 f2 c==> c= cheights f0 f3 c==> c= cbetwn cFST f4 f5 f6 f7 c==> c= cbetwn cFST f4 f6 f5 f8 c==> c= csplit_face f4 f5 f6 f9 c, f10 f11 c==> c= creplacefacesAt f7 f4 cCONS f10 cNIL f2 f12 c==> c= creplacefacesAt f8 f4 cCONS f11 cNIL f12 f13 c==> c= creplacefacesAt cCONS f5 cNIL f4 cCONS f11 cCONS f10 cNIL f13 f14 c==> c= creplacefacesAt cCONS f6 cNIL f4 cCONS f10 cCONS f11 cNIL f14 f15 c==> c= cAPPEND f15 cREPLICATE cLENGTH f9 cCONS f10 cCONS f11 cNIL f16 c==> c= f10 f17 c==> c= f11 f18 c==> c= cGraph cAPPEND creplace f4 cCONS f11 cNIL f19 cCONS f10 cNIL c+ f1 cLENGTH f9 f16 cAPPEND f3 cheightsNewVertices c#!# f3 f5 c#!# f3 f6 cLENGTH f9 cGraph cAPPEND creplace f4 cCONS f11 cNIL f19 cCONS f10 cNIL c+ f1 cLENGTH f9 f16 cAPPEND f3 cheightsNewVertices c#!# f3 f5 c#!# f3 f6 cLENGTH f9 c==> cMEM f4 f19 chold cMEM f18 cfaces cGraph cAPPEND creplace f4 cCONS f11 cNIL f19 cCONS f10 cNIL c+ f1 cLENGTH f9 f16 cAPPEND f3 cheightsNewVertices c#!# f3 f5 c#!# f3 f6 cLENGTH f9
+ |- ((f1' = f1) ==> ((f2' = f2) ==> ((((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))) = ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))) ==> (((MEM f) fs) ==> (hold ((MEM f2) (faces ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))))))))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= cGraph cAPPEND creplace f4 cCONS f2 cNIL f5 cCONS f0 cNIL c+ f6 cLENGTH f7 f8 cAPPEND f9 cheightsNewVertices c#!# f9 f10 c#!# f9 f11 cLENGTH f7 cGraph cAPPEND creplace f4 cCONS f2 cNIL f5 cCONS f0 cNIL c+ f6 cLENGTH f7 f8 cAPPEND f9 cheightsNewVertices c#!# f9 f10 c#!# f9 f11 cLENGTH f7 c==> cMEM f4 f5 chold cMEM f3 cfaces cGraph cAPPEND creplace f4 cCONS f2 cNIL f5 cCONS f0 cNIL c+ f6 cLENGTH f7 f8 cAPPEND f9 cheightsNewVertices c#!# f9 f10 c#!# f9 f11 cLENGTH f7
+ |- ((((((split_face f) u) v) ws) = (f1' , f2')) ==> ((((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs) = Fs') ==> ((((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs') = Fs'') ==> ((((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'') = Fs''') ==> ((((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''') = Fs'''') ==> ((((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))) = Fs''''') ==> ((f1' = f1) ==> ((f2' = f2) ==> ((((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))) = ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))) ==> (((MEM f) fs) ==> (hold ((MEM f2) (faces ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))))))))))))))))
T c==> c= csplit_face f0 f1 f2 f3 c, f4 f5 c==> c= creplacefacesAt f6 f0 cCONS f4 cNIL f7 f8 c==> c= creplacefacesAt f9 f0 cCONS f5 cNIL f8 f10 c==> c= creplacefacesAt cCONS f1 cNIL f0 cCONS f5 cCONS f4 cNIL f10 f11 c==> c= creplacefacesAt cCONS f2 cNIL f0 cCONS f4 cCONS f5 cNIL f11 f12 c==> c= cAPPEND f12 cREPLICATE cLENGTH f3 cCONS f4 cCONS f5 cNIL f13 c==> c= f4 f14 c==> c= f5 f15 c==> c= cGraph cAPPEND creplace f0 cCONS f5 cNIL f16 cCONS f4 cNIL c+ f17 cLENGTH f3 f13 cAPPEND f18 cheightsNewVertices c#!# f18 f1 c#!# f18 f2 cLENGTH f3 cGraph cAPPEND creplace f0 cCONS f5 cNIL f16 cCONS f4 cNIL c+ f17 cLENGTH f3 f13 cAPPEND f18 cheightsNewVertices c#!# f18 f1 c#!# f18 f2 cLENGTH f3 c==> cMEM f0 f16 chold cMEM f15 cfaces cGraph cAPPEND creplace f0 cCONS f5 cNIL f16 cCONS f4 cNIL c+ f17 cLENGTH f3 f13 cAPPEND f18 cheightsNewVertices c#!# f18 f1 c#!# f18 f2 cLENGTH f3
+ (Fs' = ((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs)) |- (((((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1' , (f2' , ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs))))) Fs') = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g')))) = ((((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1' , (f2' , ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs))))) ((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs)) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g')))))
T c==> c= f0 creplacefacesAt f1 f2 cCONS f3 cNIL f4 c= c==> c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, f3 c, f5 cGraph cAPPEND creplace f2 cCONS f5 cNIL f6 cCONS f3 cNIL c+ f7 cLENGTH f8 b1 cAPPEND f9 cheightsNewVertices c#!# f9 f10 c#!# f9 f11 cLENGTH f8 cAPPEND b1 cREPLICATE cLENGTH f8 cCONS f3 cCONS f5 cNIL creplacefacesAt cCONS f11 cNIL f2 cCONS f3 cCONS f5 cNIL b1 creplacefacesAt cCONS f10 cNIL f2 cCONS f5 cCONS f3 cNIL b1 creplacefacesAt f12 f2 cCONS f5 cNIL b0 f0 c, f13 c, f14 f15 c==> cMEM f2 f6 cMEM f14 cfaces f15 c==> c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, f3 c, f5 cGraph cAPPEND creplace f2 cCONS f5 cNIL f6 cCONS f3 cNIL c+ f7 cLENGTH f8 b1 cAPPEND f9 cheightsNewVertices c#!# f9 f10 c#!# f9 f11 cLENGTH f8 cAPPEND b1 cREPLICATE cLENGTH f8 cCONS f3 cCONS f5 cNIL creplacefacesAt cCONS f11 cNIL f2 cCONS f3 cCONS f5 cNIL b1 creplacefacesAt cCONS f10 cNIL f2 cCONS f5 cCONS f3 cNIL b1 creplacefacesAt f12 f2 cCONS f5 cNIL b0 creplacefacesAt f1 f2 cCONS f3 cNIL f4 c, f13 c, f14 f15 c==> cMEM f2 f6 cMEM f14 cfaces f15
+ ((f1' , f2') = ((((split_face f) u) v) ws)), (f1' = f1), (n = (countVertices g)), (fs = (faces g)), (h = (heights g)), (vs1 = (((betwn (FST f)) u) v)), (vs2 = (((betwn (FST f)) v) u)), (Fs = (faceListAt g)), (Fs' = ((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs)), (Fs'' = ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs')), (Fs''' = ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'')), (Fs'''' = ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''')), (Fs''''' = ((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL))))), ((f1' = f1) /\ ((f2' = f2) /\ (((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))) = g'))) |- (((MEM f) fs) ==> ((MEM f2) (faces g')))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c==> c= f0 f6 c==> c= f7 ccountVertices f8 c==> c= f9 cfaces f8 c==> c= f10 cheights f8 c==> c= f11 cbetwn cFST f2 f3 f4 c==> c= f12 cbetwn cFST f2 f4 f3 c==> c= f13 cfaceListAt f8 c==> c= f14 creplacefacesAt f11 f2 cCONS f0 cNIL f13 c==> c= f15 creplacefacesAt f12 f2 cCONS f1 cNIL f14 c==> c= f16 creplacefacesAt cCONS f3 cNIL f2 cCONS f1 cCONS f0 cNIL f15 c==> c= f17 creplacefacesAt cCONS f4 cNIL f2 cCONS f0 cCONS f1 cNIL f16 c==> c= f18 cAPPEND f17 cREPLICATE cLENGTH f5 cCONS f0 cCONS f1 cNIL c==> c/\ c= f0 f6 c/\ c= f1 f19 c= cGraph cAPPEND creplace f2 cCONS f1 cNIL f9 cCONS f0 cNIL c+ f7 cLENGTH f5 f18 cAPPEND f10 cheightsNewVertices c#!# f10 f3 c#!# f10 f4 cLENGTH f5 f20 c==> cMEM f2 f9 cMEM f19 cfaces f20
+ ((f1' , f2') = ((((split_face f) u) v) ws)), (n = (countVertices g)), (fs = (faces g)), (h = (heights g)), (vs1 = (((betwn (FST f)) u) v)), (vs2 = (((betwn (FST f)) v) u)), (Fs = (faceListAt g)), (Fs' = ((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs)), (Fs'' = ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs')), (Fs''' = ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'')) |- ((?Fs''''. (Fs'''' = ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs'''))) ==> ((((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1' , (f2' , ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''')) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g')))))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c==> c= f6 ccountVertices f7 c==> c= f8 cfaces f7 c==> c= f9 cheights f7 c==> c= f10 cbetwn cFST f2 f3 f4 c==> c= f11 cbetwn cFST f2 f4 f3 c==> c= f12 cfaceListAt f7 c==> c= f13 creplacefacesAt f10 f2 cCONS f0 cNIL f12 c==> c= f14 creplacefacesAt f11 f2 cCONS f1 cNIL f13 c==> c= f15 creplacefacesAt cCONS f3 cNIL f2 cCONS f1 cCONS f0 cNIL f14 c==> c? / c= b0 creplacefacesAt cCONS f4 cNIL f2 cCONS f0 cCONS f1 cNIL f15 c==> c= cLET / cLET_END cLET / cLET_END c, f0 c, f1 cGraph cAPPEND creplace f2 cCONS f1 cNIL f8 cCONS f0 cNIL c+ f6 cLENGTH f5 b1 cAPPEND f9 cheightsNewVertices c#!# f9 f3 c#!# f9 f4 cLENGTH f5 cAPPEND b0 cREPLICATE cLENGTH f5 cCONS f0 cCONS f1 cNIL creplacefacesAt cCONS f4 cNIL f2 cCONS f0 cCONS f1 cNIL f15 c, f16 c, f17 f18 c==> cMEM f2 f8 cMEM f17 cfaces f18
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1
+ |- ((LET_END ((MEM ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (f1 , (f2 , g'))))) (faces ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (f1 , (f2 , g'))))))) = (LET_END ((MEM f2) (faces g'))))
T c= cLET_END cMEM c@ / ! ! c= * b0 c, b1 b2 b1 c@ / ! ! c= * b0 c, b1 b2 b2 c, f0 c, f1 f2 cfaces c@ / ! ! c= * b0 c, b1 b2 b2 c@ / ! ! c= * b0 c, b1 b2 b2 c, f0 c, f1 f2 cLET_END cMEM f1 cfaces f2
+ |- ((?f2'. ((f1' , f2') = ((((split_face f) u) v) ws))) = ((\f1'. (?f2'. ((f1' , f2') = ((((split_face f) u) v) ws)))) f1'))
T c= c? / c= c, f0 b0 csplit_face f1 f2 f3 f4 * / c? / c= c, b0 b1 csplit_face f1 f2 f3 f4 f0
+ ((f1' , f2') = ((((split_face f) u) v) ws)), (n = (countVertices g)), (fs = (faces g)), (h = (heights g)), (vs1 = (((betwn (FST f)) u) v)), (vs2 = (((betwn (FST f)) v) u)), (Fs = (faceListAt g)) |- (!Fs'. (((\Fs'. (Fs' = ((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs))) Fs') ==> ((((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1' , (f2' , ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs))))) ((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs)) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g'))))))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c==> c= f6 ccountVertices f7 c==> c= f8 cfaces f7 c==> c= f9 cheights f7 c==> c= f10 cbetwn cFST f2 f3 f4 c==> c= f11 cbetwn cFST f2 f4 f3 c==> c= f12 cfaceListAt f7 ! c==> * / c= b1 creplacefacesAt f10 f2 cCONS f0 cNIL f12 b0 c==> c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, f0 c, f1 cGraph cAPPEND creplace f2 cCONS f1 cNIL f8 cCONS f0 cNIL c+ f6 cLENGTH f5 b2 cAPPEND f9 cheightsNewVertices c#!# f9 f3 c#!# f9 f4 cLENGTH f5 cAPPEND b2 cREPLICATE cLENGTH f5 cCONS f0 cCONS f1 cNIL creplacefacesAt cCONS f4 cNIL f2 cCONS f0 cCONS f1 cNIL b2 creplacefacesAt cCONS f3 cNIL f2 cCONS f1 cCONS f0 cNIL b2 creplacefacesAt f11 f2 cCONS f1 cNIL b1 creplacefacesAt f10 f2 cCONS f0 cNIL f12 c, f13 c, f14 f15 c==> cMEM f2 f8 cMEM f14 cfaces f15
+ ((\g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))) g') |- (((\g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))) g') /\ (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws))))
T c==> * / c= c, f0 c, f1 b0 csplitFace f2 f3 f4 f5 f6 f7 c/\ * / c= c, f0 c, f1 b0 csplitFace f2 f3 f4 f5 f6 f7 c==> cMEM f5 cfaces f2 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3 csplitFace f2 f3 f4 f5 f6
+ (Fs'' = ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs')) |- ((\Fs''. (Fs'' = ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs'))) Fs'')
T c==> c= f0 creplacefacesAt f1 f2 cCONS f3 cNIL f4 * / c= b0 creplacefacesAt f1 f2 cCONS f3 cNIL f4 f0
+ ((\f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws))))) f1) |- (((?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)))) ==> (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws)))) = (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws))))
T c==> * / c? / c? / c= c, b0 c, b1 b2 csplitFace f0 f1 f2 f3 f4 f5 c= c==> c? / c? / c= c, f5 c, b0 b1 csplitFace f0 f1 f2 f3 f4 c==> cMEM f3 cfaces f0 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3 csplitFace f0 f1 f2 f3 f4 c==> cMEM f3 cfaces f0 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3 csplitFace f0 f1 f2 f3 f4
+ (n = (countVertices g)), (fs = (faces g)) |- ((((LET (\n. (LET_END ((LET (\Fs. (LET_END ((LET (\h. (LET_END ((LET (\vs1. (LET_END ((LET (\vs2. (LET_END ((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1 , (f2 , ((((Graph ((APPEND (((replace f) ((CONS f2) NIL)) fs)) ((CONS f1) NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1) ((CONS f2) NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1) ((CONS f2) NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2) ((CONS f1) NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2) NIL)) Fs))))) ((((replacefacesAt vs1) f) ((CONS f1) NIL)) Fs))))))))) ((((split_face f) u) v) ws))))) (((betwn (FST f)) v) u))))) (((betwn (FST f)) u) v))))) (heights g))))) (faceListAt g))))) (countVertices g)) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g'))))
T c==> c= f0 ccountVertices f1 c==> c= f2 cfaces f1 c==> c= cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET * part cGABS / ! ! cGEQ * b5 c, b6 b7 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b6 c, b7 cGraph cAPPEND creplace f3 cCONS b7 cNIL f2 cCONS b6 cNIL c+ b0 cLENGTH f4 b8 cAPPEND b2 cheightsNewVertices c#!# b2 f5 c#!# b2 f6 cLENGTH f4 cAPPEND b8 cREPLICATE cLENGTH f4 cCONS b6 cCONS b7 cNIL creplacefacesAt cCONS f6 cNIL f3 cCONS b6 cCONS b7 cNIL b8 creplacefacesAt cCONS f5 cNIL f3 cCONS b7 cCONS b6 cNIL b8 creplacefacesAt b4 f3 cCONS b7 cNIL b8 creplacefacesAt b3 f3 cCONS b6 cNIL b1 csplit_face f3 f5 f6 f4 cbetwn cFST f3 f6 f5 cbetwn cFST f3 f5 f6 cheights f1 cfaceListAt f1 ccountVertices f1 c, f7 c, f8 f9 c==> cMEM f3 f2 cMEM f8 cfaces f9
+ |- ((T ==> (?n. (n = (countVertices g)))) = (?n. (n = (countVertices g))))
T c= c==> cT c? / c= b0 ccountVertices f0 c? / c= b0 ccountVertices f0
+ |- (((!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) ==> ((\a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) a)) = ((\a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) a))
T c= c==> ! ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 * / ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 f2 * / ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 f2
+ ((\h. (h = (heights g))) h) |- (h = (heights g))
T c==> * / c= b0 cheights f0 f1 c= f1 cheights f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- ((!f2. t) = t)
T c= ! f0 f0
- ((f1' , f2') = ((((split_face f) u) v) ws)) |- (((((betwn (FST f)) u) v) = vs1) = ((((betwn (FST f)) u) v) = vs1))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c= c= cbetwn cFST f2 f3 f4 f6 c= cbetwn cFST f2 f3 f4 f6
- (Fs'' = ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs')) |- (((heights g) = h) = ((heights g) = h))
T c==> c= f0 creplacefacesAt f1 f2 cCONS f3 cNIL f4 c= c= cheights f5 f6 c= cheights f5 f6
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) x)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 f0
- (Fs'''' = ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''')) |- (((countVertices g) = n) = ((countVertices g) = n))
T c==> c= f0 creplacefacesAt cCONS f1 cNIL f2 cCONS f3 cCONS f4 cNIL f5 c= c= ccountVertices f6 f7 c= ccountVertices f6 f7
- (vs2 = (((betwn (FST f)) v) u)) |- (((faceListAt g) = Fs) = ((faceListAt g) = Fs))
T c==> c= f0 cbetwn cFST f1 f2 f3 c= c= cfaceListAt f4 f5 c= cfaceListAt f4 f5
- |- ((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) ==> (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))), (((MEM f) g) /\ ((MEM x) xs)) |- ((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) /\ ((MEM x) (((replace f) xs) g)))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c==> c/\ cMEM f0 f1 cMEM f2 f3 c/\ ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 cMEM f2 creplace f0 f3 f1
- (Fs''''' = ((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL))))) |- (((((betwn (FST f)) v) u) = vs2) = ((((betwn (FST f)) v) u) = vs2))
T c==> c= f0 cAPPEND f1 cREPLICATE cLENGTH f2 cCONS f3 cCONS f4 cNIL c= c= cbetwn cFST f5 f6 f7 f8 c= cbetwn cFST f5 f6 f7 f8
- (Fs'' = ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs')) |- ((((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs) = Fs') = (((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs) = Fs'))
T c==> c= f0 creplacefacesAt f1 f2 cCONS f3 cNIL f4 c= c= creplacefacesAt f5 f2 cCONS f6 cNIL f7 f4 c= creplacefacesAt f5 f2 cCONS f6 cNIL f7 f4
- ((f1' , f2') = ((((split_face f) u) v) ws)) |- (((((betwn (FST f)) v) u) = vs2) = ((((betwn (FST f)) v) u) = vs2))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c= c= cbetwn cFST f2 f4 f3 f6 c= cbetwn cFST f2 f4 f3 f6
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= ! ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 cT
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) xs)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 f2
- (Fs' = ((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs)) |- (((faceListAt g) = Fs) = ((faceListAt g) = Fs))
T c==> c= f0 creplacefacesAt f1 f2 cCONS f3 cNIL f4 c= c= cfaceListAt f5 f4 c= cfaceListAt f5 f4
- (Fs''' = ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'')) |- ((((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs') = Fs'') = (((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs') = Fs''))
T c==> c= f0 creplacefacesAt cCONS f1 cNIL f2 cCONS f3 cCONS f4 cNIL f5 c= c= creplacefacesAt f6 f2 cCONS f3 cNIL f7 f5 c= creplacefacesAt f6 f2 cCONS f3 cNIL f7 f5
- (Fs''' = ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'')) |- ((((((split_face f) u) v) ws) = (f1' , f2')) = (((((split_face f) u) v) ws) = (f1' , f2')))
T c==> c= f0 creplacefacesAt cCONS f1 cNIL f2 cCONS f3 cCONS f4 cNIL f5 c= c= csplit_face f2 f1 f6 f7 c, f4 f3 c= csplit_face f2 f1 f6 f7 c, f4 f3
- (Fs'' = ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs')) |- ((((((split_face f) u) v) ws) = (f1' , f2')) = (((((split_face f) u) v) ws) = (f1' , f2')))
T c==> c= f0 creplacefacesAt f1 f2 cCONS f3 cNIL f4 c= c= csplit_face f2 f5 f6 f7 c, f8 f3 c= csplit_face f2 f5 f6 f7 c, f8 f3
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) g)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 f3
- (Fs'''' = ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''')) |- (((((betwn (FST f)) u) v) = vs1) = ((((betwn (FST f)) u) v) = vs1))
T c==> c= f0 creplacefacesAt cCONS f1 cNIL f2 cCONS f3 cCONS f4 cNIL f5 c= c= cbetwn cFST f2 f6 f1 f7 c= cbetwn cFST f2 f6 f1 f7
- (?f2'. ((f1' , f2') = ((((split_face f) u) v) ws))), (n = (countVertices g)), (fs = (faces g)), (h = (heights g)), (vs1 = (((betwn (FST f)) u) v)), (vs2 = (((betwn (FST f)) v) u)), (Fs = (faceListAt g)) |- ((((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1 , (f2 , ((((Graph ((APPEND (((replace f) ((CONS f2) NIL)) fs)) ((CONS f1) NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1) ((CONS f2) NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1) ((CONS f2) NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2) ((CONS f1) NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2) NIL)) Fs))))) ((((replacefacesAt vs1) f) ((CONS f1) NIL)) Fs))))))))) ((((split_face f) u) v) ws)) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g'))))
T c==> c? / c= c, f0 b0 csplit_face f1 f2 f3 f4 c==> c= f5 ccountVertices f6 c==> c= f7 cfaces f6 c==> c= f8 cheights f6 c==> c= f9 cbetwn cFST f1 f2 f3 c==> c= f10 cbetwn cFST f1 f3 f2 c==> c= f11 cfaceListAt f6 c==> c= cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b1 c, b2 cGraph cAPPEND creplace f1 cCONS b2 cNIL f7 cCONS b1 cNIL c+ f5 cLENGTH f4 b4 cAPPEND f8 cheightsNewVertices c#!# f8 f2 c#!# f8 f3 cLENGTH f4 cAPPEND b4 cREPLICATE cLENGTH f4 cCONS b1 cCONS b2 cNIL creplacefacesAt cCONS f3 cNIL f1 cCONS b1 cCONS b2 cNIL b4 creplacefacesAt cCONS f2 cNIL f1 cCONS b2 cCONS b1 cNIL b4 creplacefacesAt f10 f1 cCONS b2 cNIL b3 creplacefacesAt f9 f1 cCONS b1 cNIL f11 csplit_face f1 f2 f3 f4 c, f12 c, f13 f14 c==> cMEM f1 f7 cMEM f13 cfaces f14
- (h = (heights g)) |- (((faceListAt g) = Fs) = ((faceListAt g) = Fs))
T c==> c= f0 cheights f1 c= c= cfaceListAt f1 f2 c= cfaceListAt f1 f2
- (Fs' = ((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs)) |- ((((((split_face f) u) v) ws) = (f1' , f2')) = (((((split_face f) u) v) ws) = (f1' , f2')))
T c==> c= f0 creplacefacesAt f1 f2 cCONS f3 cNIL f4 c= c= csplit_face f2 f5 f6 f7 c, f3 f8 c= csplit_face f2 f5 f6 f7 c, f3 f8
- (Fs = (faceListAt g)) |- (((faces g) = fs) = ((faces g) = fs))
T c==> c= f0 cfaceListAt f1 c= c= cfaces f1 f2 c= cfaces f1 f2
- (Fs'' = ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs')) |- (((countVertices g) = n) = ((countVertices g) = n))
T c==> c= f0 creplacefacesAt f1 f2 cCONS f3 cNIL f4 c= c= ccountVertices f5 f6 c= ccountVertices f5 f6
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) ==> ((\f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) f)) = ((\f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) f))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= c==> ! ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 * / ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 f1 * / ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 f1
- (?f2'. ((f1' , f2') = ((((split_face f) u) v) ws))), (n = (countVertices g)), (fs = (faces g)), (h = (heights g)), (vs1 = (((betwn (FST f)) u) v)), (vs2 = (((betwn (FST f)) v) u)), (Fs = (faceListAt g)) |- ((?f2'. ((f1' , f2') = ((((split_face f) u) v) ws))) /\ ((((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END ((LET (\Fs. (LET_END (f1 , (f2 , ((((Graph ((APPEND (((replace f) ((CONS f2) NIL)) fs)) ((CONS f1) NIL))) (n + (LENGTH ws))) Fs) ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))))))) ((APPEND Fs) ((REPLICATE (LENGTH ws)) ((CONS f1) ((CONS f2) NIL)))))))) ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1) ((CONS f2) NIL))) Fs))))) ((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2) ((CONS f1) NIL))) Fs))))) ((((replacefacesAt vs2) f) ((CONS f2) NIL)) Fs))))) ((((replacefacesAt vs1) f) ((CONS f1) NIL)) Fs))))))))) ((((split_face f) u) v) ws)) = (f1 , (f2 , g'))) ==> (((MEM f) fs) ==> ((MEM f2) (faces g')))))
T c==> c? / c= c, f0 b0 csplit_face f1 f2 f3 f4 c==> c= f5 ccountVertices f6 c==> c= f7 cfaces f6 c==> c= f8 cheights f6 c==> c= f9 cbetwn cFST f1 f2 f3 c==> c= f10 cbetwn cFST f1 f3 f2 c==> c= f11 cfaceListAt f6 c/\ c? / c= c, f0 b0 csplit_face f1 f2 f3 f4 c==> c= cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b1 c, b2 cGraph cAPPEND creplace f1 cCONS b2 cNIL f7 cCONS b1 cNIL c+ f5 cLENGTH f4 b4 cAPPEND f8 cheightsNewVertices c#!# f8 f2 c#!# f8 f3 cLENGTH f4 cAPPEND b4 cREPLICATE cLENGTH f4 cCONS b1 cCONS b2 cNIL creplacefacesAt cCONS f3 cNIL f1 cCONS b1 cCONS b2 cNIL b4 creplacefacesAt cCONS f2 cNIL f1 cCONS b2 cCONS b1 cNIL b4 creplacefacesAt f10 f1 cCONS b2 cNIL b3 creplacefacesAt f9 f1 cCONS b1 cNIL f11 csplit_face f1 f2 f3 f4 c, f12 c, f13 f14 c==> cMEM f1 f7 cMEM f13 cfaces f14
- (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)))) |- ((?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) u) v) f) ws)))) /\ (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws))))
T c==> c? / c? / c= c, f0 c, b0 b1 csplitFace f1 f2 f3 f4 f5 c/\ c? / c? / c= c, f0 c, b0 b1 csplitFace f1 f2 f3 f4 f5 c==> cMEM f4 cfaces f1 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3 csplitFace f1 f2 f3 f4 f5
- (Fs''''' = ((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL))))) |- ((((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''') = Fs'''') = (((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''') = Fs''''))
T c==> c= f0 cAPPEND f1 cREPLICATE cLENGTH f2 cCONS f3 cCONS f4 cNIL c= c= creplacefacesAt cCONS f5 cNIL f6 cCONS f3 cCONS f4 cNIL f7 f1 c= creplacefacesAt cCONS f5 cNIL f6 cCONS f3 cCONS f4 cNIL f7 f1
- (Fs''''' = ((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL))))) |- ((((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs) = Fs') = (((((replacefacesAt vs1) f) ((CONS f1') NIL)) Fs) = Fs'))
T c==> c= f0 cAPPEND f1 cREPLICATE cLENGTH f2 cCONS f3 cCONS f4 cNIL c= c= creplacefacesAt f5 f6 cCONS f3 cNIL f7 f8 c= creplacefacesAt f5 f6 cCONS f3 cNIL f7 f8
- (Fs = (faceListAt g)) |- (((countVertices g) = n) = ((countVertices g) = n))
T c==> c= f0 cfaceListAt f1 c= c= ccountVertices f1 f2 c= ccountVertices f1 f2
- (Fs'''' = ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''')) |- (((faces g) = fs) = ((faces g) = fs))
T c==> c= f0 creplacefacesAt cCONS f1 cNIL f2 cCONS f3 cCONS f4 cNIL f5 c= c= cfaces f6 f7 c= cfaces f6 f7
- ((f1' , f2') = ((((split_face f) u) v) ws)) |- (((countVertices g) = n) = ((countVertices g) = n))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c= c= ccountVertices f6 f7 c= ccountVertices f6 f7
- (Fs'' = ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs')) |- (((faceListAt g) = Fs) = ((faceListAt g) = Fs))
T c==> c= f0 creplacefacesAt f1 f2 cCONS f3 cNIL f4 c= c= cfaceListAt f5 f6 c= cfaceListAt f5 f6
- (((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))) = ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))) |- ((((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws)))) = ((((Graph ((APPEND (((replace f) ((CONS f2') NIL)) fs)) ((CONS f1') NIL))) (n + (LENGTH ws))) Fs''''') ((APPEND h) (((heightsNewVertices ((#!# h) u)) ((#!# h) v)) (LENGTH ws))))) = T)
T c==> c= cGraph cAPPEND creplace f0 cCONS f1 cNIL f2 cCONS f3 cNIL c+ f4 cLENGTH f5 f6 cAPPEND f7 cheightsNewVertices c#!# f7 f8 c#!# f7 f9 cLENGTH f5 cGraph cAPPEND creplace f0 cCONS f1 cNIL f2 cCONS f3 cNIL c+ f4 cLENGTH f5 f6 cAPPEND f7 cheightsNewVertices c#!# f7 f8 c#!# f7 f9 cLENGTH f5 c= c= cGraph cAPPEND creplace f0 cCONS f1 cNIL f2 cCONS f3 cNIL c+ f4 cLENGTH f5 f6 cAPPEND f7 cheightsNewVertices c#!# f7 f8 c#!# f7 f9 cLENGTH f5 cGraph cAPPEND creplace f0 cCONS f1 cNIL f2 cCONS f3 cNIL c+ f4 cLENGTH f5 f6 cAPPEND f7 cheightsNewVertices c#!# f7 f8 c#!# f7 f9 cLENGTH f5 cT
- ((f1' , f2') = ((((split_face f) u) v) ws)) |- (((faceListAt g) = Fs) = ((faceListAt g) = Fs))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c= c= cfaceListAt f6 f7 c= cfaceListAt f6 f7
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= ! c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 cT
- (Fs''''' = ((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL))))) |- ((((((split_face f) u) v) ws) = (f1' , f2')) = (((((split_face f) u) v) ws) = (f1' , f2')))
T c==> c= f0 cAPPEND f1 cREPLICATE cLENGTH f2 cCONS f3 cCONS f4 cNIL c= c= csplit_face f5 f6 f7 f2 c, f3 f4 c= csplit_face f5 f6 f7 f2 c, f3 f4
- (Fs''''' = ((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL))))) |- ((((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs') = Fs'') = (((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs') = Fs''))
T c==> c= f0 cAPPEND f1 cREPLICATE cLENGTH f2 cCONS f3 cCONS f4 cNIL c= c= creplacefacesAt f5 f6 cCONS f4 cNIL f7 f8 c= creplacefacesAt f5 f6 cCONS f4 cNIL f7 f8
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))), (((MEM f) g) /\ ((MEM x) xs)) |- ((MEM x) (((replace f) xs) g))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c==> c/\ cMEM f0 f1 cMEM f2 f3 cMEM f2 creplace f0 f3 f1
- ((f1' , f2') = ((((split_face f) u) v) ws)) |- (((heights g) = h) = ((heights g) = h))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c= c= cheights f6 f7 c= cheights f6 f7
- (Fs'' = ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs')) |- (((((betwn (FST f)) v) u) = vs2) = ((((betwn (FST f)) v) u) = vs2))
T c==> c= f0 creplacefacesAt f1 f2 cCONS f3 cNIL f4 c= c= cbetwn cFST f2 f5 f6 f1 c= cbetwn cFST f2 f5 f6 f1
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) f)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 f1
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) /\ (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c/\ ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) ==> ((\g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) g)) = ((\g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) g))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= c==> ! c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 * / c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 f3 * / c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 f3
- (Fs''''' = ((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL))))) |- (((faces g) = fs) = ((faces g) = fs))
T c==> c= f0 cAPPEND f1 cREPLICATE cLENGTH f2 cCONS f3 cCONS f4 cNIL c= c= cfaces f5 f6 c= cfaces f5 f6
- (Fs'''' = ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''')) |- (((faceListAt g) = Fs) = ((faceListAt g) = Fs))
T c==> c= f0 creplacefacesAt cCONS f1 cNIL f2 cCONS f3 cCONS f4 cNIL f5 c= c= cfaceListAt f6 f7 c= cfaceListAt f6 f7
- (Fs''''' = ((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL))))) |- ((((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'') = Fs''') = (((((replacefacesAt ((CONS u) NIL)) f) ((CONS f2') ((CONS f1') NIL))) Fs'') = Fs'''))
T c==> c= f0 cAPPEND f1 cREPLICATE cLENGTH f2 cCONS f3 cCONS f4 cNIL c= c= creplacefacesAt cCONS f5 cNIL f6 cCONS f4 cCONS f3 cNIL f7 f8 c= creplacefacesAt cCONS f5 cNIL f6 cCONS f4 cCONS f3 cNIL f7 f8
- (h = (heights g)) |- (((faces g) = fs) = ((faces g) = fs))
T c==> c= f0 cheights f1 c= c= cfaces f1 f2 c= cfaces f1 f2
- (Fs''''' = ((APPEND Fs'''') ((REPLICATE (LENGTH ws)) ((CONS f1') ((CONS f2') NIL))))) |- (((countVertices g) = n) = ((countVertices g) = n))
T c==> c= f0 cAPPEND f1 cREPLICATE cLENGTH f2 cCONS f3 cCONS f4 cNIL c= c= ccountVertices f5 f6 c= ccountVertices f5 f6
- (Fs'''' = ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''')) |- ((((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs') = Fs'') = (((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs') = Fs''))
T c==> c= f0 creplacefacesAt cCONS f1 cNIL f2 cCONS f3 cCONS f4 cNIL f5 c= c= creplacefacesAt f6 f2 cCONS f4 cNIL f7 f8 c= creplacefacesAt f6 f2 cCONS f4 cNIL f7 f8
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))), (((MEM f) g) /\ ((MEM x) xs)) |- ((((MEM f) g) /\ ((MEM x) xs)) /\ ((MEM x) (((replace f) xs) g)))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c==> c/\ cMEM f0 f1 cMEM f2 f3 c/\ c/\ cMEM f0 f1 cMEM f2 f3 cMEM f2 creplace f0 f3 f1
- (((MEM f) g) /\ ((MEM x) xs)) |- ((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) ==> ((MEM x) (((replace f) xs) g)))
T c==> c/\ cMEM f0 f1 cMEM f2 f3 c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 cMEM f2 creplace f0 f3 f1
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2
- (Fs'''' = ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''')) |- ((((((split_face f) u) v) ws) = (f1' , f2')) = (((((split_face f) u) v) ws) = (f1' , f2')))
T c==> c= f0 creplacefacesAt cCONS f1 cNIL f2 cCONS f3 cCONS f4 cNIL f5 c= c= csplit_face f2 f6 f1 f7 c, f3 f4 c= csplit_face f2 f6 f1 f7 c, f3 f4
- (n = (countVertices g)) |- (((faces g) = fs) = ((faces g) = fs))
T c==> c= f0 ccountVertices f1 c= c= cfaces f1 f2 c= cfaces f1 f2
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) ==> ((\xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) xs)) = ((\xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) xs))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= c==> ! ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 * / ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 f2 * / ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 f2
- |- (((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) ==> (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))))) = (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))))
T c= c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3
- (vs2 = (((betwn (FST f)) v) u)) |- (((heights g) = h) = ((heights g) = h))
T c==> c= f0 cbetwn cFST f1 f2 f3 c= c= cheights f4 f5 c= cheights f4 f5
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= c==> c/\ cMEM f0 f1 cMEM f2 f3 cMEM f2 creplace f0 f3 f1 cT
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0
- (Fs'''' = ((((replacefacesAt ((CONS v) NIL)) f) ((CONS f1') ((CONS f2') NIL))) Fs''')) |- (((((betwn (FST f)) v) u) = vs2) = ((((betwn (FST f)) v) u) = vs2))
T c==> c= f0 creplacefacesAt cCONS f1 cNIL f2 cCONS f3 cCONS f4 cNIL f5 c= c= cbetwn cFST f2 f1 f6 f7 c= cbetwn cFST f2 f1 f6 f7
- ((f1' , f2') = ((((split_face f) u) v) ws)) |- (((faces g) = fs) = ((faces g) = fs))
T c==> c= c, f0 f1 csplit_face f2 f3 f4 f5 c= c= cfaces f6 f7 c= cfaces f6 f7
- (Fs'' = ((((replacefacesAt vs2) f) ((CONS f2') NIL)) Fs')) |- (((faces g) = fs) = ((faces g) = fs))
T c==> c= f0 creplacefacesAt f1 f2 cCONS f3 cNIL f4 c= c= cfaces f5 f6 c= cfaces f5 f6
- (h = (heights g)) |- (((countVertices g) = n) = ((countVertices g) = n))
T c==> c= f0 cheights f1 c= c= ccountVertices f1 f2 c= ccountVertices f1 f2
- |- ((T /\ t) = t)
T c= c/\ cT f0 f0
- (vs2 = (((betwn (FST f)) v) u)) |- (((countVertices g) = n) = ((countVertices g) = n))
T c==> c= f0 cbetwn cFST f1 f2 f3 c= c= ccountVertices f4 f5 c= ccountVertices f4 f5
