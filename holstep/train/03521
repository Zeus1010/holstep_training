N Reduction2.ntrans1
C |- (!L. (!N. (!r. (!x. ((LET (\y. (LET_END ((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))))) (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))) (((l'y L) r) x))))))
T cLET / cLET_END cLET * part cGABS / ! ! cGEQ * b1 c, b2 b3 cLET_END c==> c~ cfinal_list f0 f1 c= cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 ccat creplace f1 cCONS b3 cNIL f2 cCONS b2 cNIL csplit_normal_list f0 f1 cfind_face f0 b0 b0 cprev_el f1 cl'z f0 f2 f1 f3 cl'y f0 f1 f3
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D Truong_tactic.hold_def
A |- (hold = I)
T c= part chold part cI
D Fan.POWER_1
A |- (!f. (((POWER f) (NUMERAL (BIT1 _0))) = f))
T c= * * part cPOWER f0 cNUMERAL cBIT1 c_0 f0
D Tame_defs2.transform_list
A |- (!L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))))))
T c= ctransform_list f0 f1 c, f2 f3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f3 c, f2 f3 c, b5 cSND b4 cAPPEND creplace f3 cCONS cSND b4 cNIL f2 cCONS cFST b4 cNIL csplit_normal_list f0 f3 b3 b0 b2 cfind_face f0 b0 cprev_el f3 b1 cl'z f0 f2 f3 f1 cl'y f0 f3 f1
D Tame_defs2.ntrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= cntrans f0 f1 f2 f3 f4 cFST cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_list.APPEND_cat
A |- (APPEND = cat)
T c= part cAPPEND part ccat
D Reduction2.LET_PAIR
A |- (!f. (!Q. (((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((Q f1) f2)))))))) f) = ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((Q f1) f2)))) (SND f))))) (FST f)))))
T c= cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END * * f0 b1 b2 f1 cLET / cLET_END cLET / cLET_END * * f0 b0 b1 cSND f1 cFST f1
+ ((((((split_normal_list L) r) f) y') ram2) = split) |- ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) ==> (hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))))))))
T c==> c= csplit_normal_list f0 f1 f2 f3 f4 f5 c==> c= f3 f6 c==> c= cFST csplit_normal_list f0 f1 cfind_face f0 f6 f6 f4 f7 c==> c= cSND csplit_normal_list f0 f1 cfind_face f0 f6 f6 f4 f8 c==> c= cl'y f0 f1 f9 f3 c==> c= cl'z f0 f10 f1 f9 f11 c==> c= cprev_el f1 f11 f4 c==> c= cfind_face f0 f3 f2 c==> c= csplit_normal_list f0 f1 f2 f3 f4 f5 c==> c= cAPPEND creplace f1 cCONS cSND f5 cNIL f10 cCONS cFST f5 cNIL cAPPEND creplace f1 cCONS cSND f5 cNIL f10 cCONS cFST f5 cNIL chold c==> c~ cfinal_list f0 f1 c= cAPPEND creplace f1 cCONS cSND f5 cNIL f10 cCONS cFST f5 cNIL ccat creplace f1 cCONS f8 cNIL f10 cCONS f7 cNIL
+ (ram2 = ((prev_el r) z)) |- (((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = N') ==> (hold ((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))) = ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = N') ==> (hold ((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))))
T c==> c= f0 cprev_el f1 f2 c= c==> c= cprev_el f1 f2 f0 c==> c= cfind_face f3 f4 f5 c==> c= csplit_normal_list f3 f1 f5 f4 f0 f6 c==> c= cAPPEND creplace f1 cCONS cSND f6 cNIL f7 cCONS cFST f6 cNIL f8 chold c==> c~ cfinal_list f3 f1 c= f8 ccat creplace f1 cCONS f9 cNIL f7 cCONS f10 cNIL c==> c= cfind_face f3 f4 f5 c==> c= csplit_normal_list f3 f1 f5 f4 f0 f6 c==> c= cAPPEND creplace f1 cCONS cSND f6 cNIL f7 cCONS cFST f6 cNIL f8 chold c==> c~ cfinal_list f3 f1 c= f8 ccat creplace f1 cCONS f9 cNIL f7 cCONS f10 cNIL
+ |- ((\f1. (!N. (!f2. (!r. (!ram2. (!y. (!f. (!L. (!y'. (!z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F))))))))))))))))))))) f1)
T * / ! ! ! ! ! ! ! ! ! ! c==> c= b8 b5 c==> c= cFST csplit_normal_list b7 b3 cfind_face b7 b5 b5 b4 b0 c==> c= cSND csplit_normal_list b7 b3 cfind_face b7 b5 b5 b4 b2 c==> c= cl'y b7 b3 b10 b8 c==> c= cl'z b7 b1 b3 b10 b9 c==> c= cprev_el b3 b9 b4 c==> c= cfind_face b7 b8 b6 c==> c= csplit_normal_list b7 b3 b6 b8 b4 csplit_normal_list b7 b3 b6 b8 b4 c==> c= cAPPEND creplace b3 cCONS cSND csplit_normal_list b7 b3 b6 b8 b4 cNIL b1 cCONS cFST csplit_normal_list b7 b3 b6 b8 b4 cNIL cAPPEND creplace b3 cCONS cSND csplit_normal_list b7 b3 b6 b8 b4 cNIL b1 cCONS cFST csplit_normal_list b7 b3 b6 b8 b4 cNIL c==> c~ c==> c~ cfinal_list b7 b3 c= ccat creplace b3 cCONS cSND csplit_normal_list b7 b3 b6 b5 b4 cNIL b1 cCONS cFST csplit_normal_list b7 b3 b6 b5 b4 cNIL ccat creplace b3 cCONS b2 cNIL b1 cCONS b0 cNIL cF f0
+ |- (((?ram2. (ram2 = ((prev_el r) z))) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))))) ((prev_el r) z))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) = ((~ ((final_list L) r)) ==> ((FST ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))))) ((prev_el r) z))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c= c==> c? / c= b0 cprev_el f0 f1 c==> c~ cfinal_list f2 f0 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f2 f0 c, f3 f0 c, b3 cSND b2 cAPPEND creplace f0 cCONS cSND b2 cNIL f3 cCONS cFST b2 cNIL csplit_normal_list f2 f0 b1 f4 b0 cfind_face f2 f4 cprev_el f0 f1 ccat creplace f0 cCONS f5 cNIL f3 cCONS f6 cNIL c==> c~ cfinal_list f2 f0 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f2 f0 c, f3 f0 c, b3 cSND b2 cAPPEND creplace f0 cCONS cSND b2 cNIL f3 cCONS cFST b2 cNIL csplit_normal_list f2 f0 b1 f4 b0 cfind_face f2 f4 cprev_el f0 f1 ccat creplace f0 cCONS f5 cNIL f3 cCONS f6 cNIL
+ |- ((split = (((((split_normal_list L) r) f) y') ram2)) = ((\split. (split = (((((split_normal_list L) r) f) y') ram2))) split))
T c= c= f0 csplit_normal_list f1 f2 f3 f4 f5 * / c= b0 csplit_normal_list f1 f2 f3 f4 f5 f0
- |- ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all))))
T c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ |- (((!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) ==> ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i)) = ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i))
T c= c==> ! c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
+ (~ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))), (y' = y), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2), (((find_face L) y') = f) |- F
T c==> c~ c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 f2 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f1 f0 f2 f3 f4 cNIL ccat creplace f0 cCONS f6 cNIL f5 cCONS f7 cNIL c==> c= f8 f3 c==> c= cprev_el f0 f9 f4 c==> c= cl'y f1 f0 f10 f8 c==> c= cl'z f1 f5 f0 f10 f9 c==> c= cFST csplit_normal_list f1 f0 cfind_face f1 f3 f3 f4 f7 c==> c= cSND csplit_normal_list f1 f0 cfind_face f1 f3 f3 f4 f6 c==> c= cfind_face f1 f8 f2 cF
- (ram2 = ((prev_el r) z)) |- ((((((l'z L) N) r) x) = z) = (((((l'z L) N) r) x) = z))
T c==> c= f0 cprev_el f1 f2 c= c= cl'z f3 f4 f1 f5 f2 c= cl'z f3 f4 f1 f5 f2
+ (y' = y), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) |- ((((prev_el r) z) = ram2) /\ ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) ==> (hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))))
T c==> c= f0 f1 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f5 f2 f6 f0 c==> c= cl'z f5 f7 f2 f6 f3 c==> c= cFST csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f8 c==> c= cSND csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f9 c/\ c= cprev_el f2 f3 f4 c==> c= cfind_face f5 f0 f10 c==> c= csplit_normal_list f5 f2 f10 f0 f4 f11 c==> c= cAPPEND creplace f2 cCONS cSND f11 cNIL f7 cCONS cFST f11 cNIL cAPPEND creplace f2 cCONS cSND f11 cNIL f7 cCONS cFST f11 cNIL chold c==> c~ cfinal_list f5 f2 c= cAPPEND creplace f2 cCONS cSND f11 cNIL f7 cCONS cFST f11 cNIL ccat creplace f2 cCONS f9 cNIL f7 cCONS f8 cNIL
+ |- ((!f2. (!r. (!ram2. (!y. (!f. (!L. (!y'. (!z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! c==> c= b6 b3 c==> c= cFST csplit_normal_list b5 b1 cfind_face b5 b3 b3 b2 f0 c==> c= cSND csplit_normal_list b5 b1 cfind_face b5 b3 b3 b2 b0 c==> c= cl'y b5 b1 b8 b6 c==> c= cl'z b5 f1 b1 b8 b7 c==> c= cprev_el b1 b7 b2 c==> c= cfind_face b5 b6 b4 c==> c= csplit_normal_list b5 b1 b4 b6 b2 csplit_normal_list b5 b1 b4 b6 b2 c==> c= cAPPEND creplace b1 cCONS cSND csplit_normal_list b5 b1 b4 b6 b2 cNIL f1 cCONS cFST csplit_normal_list b5 b1 b4 b6 b2 cNIL cAPPEND creplace b1 cCONS cSND csplit_normal_list b5 b1 b4 b6 b2 cNIL f1 cCONS cFST csplit_normal_list b5 b1 b4 b6 b2 cNIL c==> c~ cfinal_list b5 b1 c= ccat creplace b1 cCONS cSND csplit_normal_list b5 b1 b4 b3 b2 cNIL f1 cCONS cFST csplit_normal_list b5 b1 b4 b3 b2 cNIL ccat creplace b1 cCONS b0 cNIL f1 cCONS f0 cNIL cT
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- (((\f. (f = ((find_face L) y'))) f) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f9 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> * / c= b0 cfind_face f4 f6 f10 c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f4 f1 c, f7 f1 c, b2 cSND b1 cAPPEND creplace f1 cCONS cSND b1 cNIL f7 cCONS cFST b1 cNIL csplit_normal_list f4 f1 b0 f6 f0 cfind_face f4 f6 ccat creplace f1 cCONS f9 cNIL f7 cCONS f8 cNIL
- (((find_face L) y') = f) |- ((((((l'z L) N) r) x) = z) = (((((l'z L) N) r) x) = z))
T c==> c= cfind_face f0 f1 f2 c= c= cl'z f0 f3 f4 f5 f6 c= cl'z f0 f3 f4 f5 f6
- (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))) = f1) = ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))) = f1))
T c==> c= f0 cSND csplit_normal_list f1 f2 cfind_face f1 f3 f3 cprev_el f2 cl'z f1 f4 f2 f5 c= c= cFST csplit_normal_list f1 f2 cfind_face f1 f3 f3 cprev_el f2 cl'z f1 f4 f2 f5 f6 c= cFST csplit_normal_list f1 f2 cfind_face f1 f3 f3 cprev_el f2 cl'z f1 f4 f2 f5 f6
+ (y = (((l'y L) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((?y'. (y' = (((l'y L) r) x))) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 cl'y f1 f2 f3 c==> c= f4 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3 c==> c= f6 cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3 c==> c? / c= b0 cl'y f1 f2 f3 c==> c~ cfinal_list f1 f2 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f1 f2 c, f5 f2 c, b5 cSND b4 cAPPEND creplace f2 cCONS cSND b4 cNIL f5 cCONS cFST b4 cNIL csplit_normal_list f1 f2 b3 b0 b2 cfind_face f1 b0 cprev_el f2 b1 cl'z f1 f5 f2 f3 cl'y f1 f2 f3 ccat creplace f2 cCONS f6 cNIL f5 cCONS f4 cNIL
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (f = ((find_face L) y')), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((~ ((final_list L) r)) ==> ((FST ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 cfind_face f4 f6 c==> c= f9 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f10 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cLET / cLET_END cCOND cfinal_list f4 f1 c, f7 f1 c, b1 cSND b0 cAPPEND creplace f1 cCONS cSND b0 cNIL f7 cCONS cFST b0 cNIL csplit_normal_list f4 f1 f8 f6 f0 ccat creplace f1 cCONS f10 cNIL f7 cCONS f9 cNIL
+ |- (a ==> (hold a))
T c==> f0 chold f0
+ |- (((!L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) ==> ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L)) = ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L))
T c= c==> ! ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0 * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0
+ (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), ((\z. (z = ((((l'z L) N) r) x))) z) |- (((\z. (z = ((((l'z L) N) r) x))) z) /\ ((~ ((final_list L) r)) ==> ((FST ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))))) ((prev_el r) z))))) ((((l'z L) N) r) x))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 cl'y f1 f2 f3 c==> c= f4 cl'y f1 f2 f3 c==> c= f5 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f6 f2 f3 c==> c= f7 cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f6 f2 f3 c==> * / c= b0 cl'z f1 f6 f2 f3 f8 c/\ * / c= b0 cl'z f1 f6 f2 f3 f8 c==> c~ cfinal_list f1 f2 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f1 f2 c, f6 f2 c, b4 cSND b3 cAPPEND creplace f2 cCONS cSND b3 cNIL f6 cCONS cFST b3 cNIL csplit_normal_list f1 f2 b2 f4 b1 cfind_face f1 f4 cprev_el f2 b0 cl'z f1 f6 f2 f3 ccat creplace f2 cCONS f7 cNIL f6 cCONS f5 cNIL
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (split = (((((split_normal_list L) r) f) y') ram2)), (f = ((find_face L) y')), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((~ ((final_list L) r)) ==> ((FST ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) split)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 csplit_normal_list f4 f1 f9 f6 f0 c==> c= f9 cfind_face f4 f6 c==> c= f10 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f11 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cLET / cLET_END cCOND cfinal_list f4 f1 c, f7 f1 c, b1 cSND b0 cAPPEND creplace f1 cCONS cSND b0 cNIL f7 cCONS cFST b0 cNIL f8 ccat creplace f1 cCONS f11 cNIL f7 cCONS f10 cNIL
+ (((prev_el r) z) = ram2), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) |- ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))) = f2)
T c==> c= cprev_el f0 f1 f2 c==> c= cl'z f3 f4 f0 f5 f1 c==> c= cSND csplit_normal_list f3 f0 cfind_face f3 f6 f6 f2 f7 c= cSND csplit_normal_list f3 f0 cfind_face f3 f6 f6 cprev_el f0 cl'z f3 f4 f0 f5 f7
- (_10514535 = _10514539), (_10514536 = _10514540) |- ((_10514536 = _10514540) /\ ((~ (_10514537 = _10514541)) \/ ((~ (_10514538 = _10514542)) \/ (((((l'z _10514535) _10514536) _10514537) _10514538) = ((((l'z _10514539) _10514540) _10514541) _10514542)))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c= cl'z f0 f2 f4 f6 cl'z f1 f3 f5 f7
+ (y' = y), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) |- ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) ==> (hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))
T c==> c= f0 f1 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f5 f2 f6 f0 c==> c= cl'z f5 f7 f2 f6 f3 c==> c= cFST csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f8 c==> c= cSND csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f9 c==> c= cfind_face f5 f0 f10 c==> c= csplit_normal_list f5 f2 f10 f0 f4 f11 c==> c= cAPPEND creplace f2 cCONS cSND f11 cNIL f7 cCONS cFST f11 cNIL cAPPEND creplace f2 cCONS cSND f11 cNIL f7 cCONS cFST f11 cNIL chold c==> c~ cfinal_list f5 f2 c= cAPPEND creplace f2 cCONS cSND f11 cNIL f7 cCONS cFST f11 cNIL ccat creplace f2 cCONS f9 cNIL f7 cCONS f8 cNIL
+ ((\f2. (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))) f2) |- (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))
T c==> * / c= b0 cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 cprev_el f1 cl'z f0 f3 f1 f4 f5 c= f5 cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 cprev_el f1 cl'z f0 f3 f1 f4
- |- ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))))
T c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ |- ((y = (((l'y L) r) x)) ==> ((LET (\y. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (((l'y L) r) x)))
T c==> c= f0 cl'y f1 f2 f3 cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f1 f2 c= cntrans f1 f4 f2 f3 cNUMERAL cBIT1 c_0 ccat creplace f2 cCONS b2 cNIL f4 cCONS b1 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 b0 b0 cprev_el f2 cl'z f1 f4 f2 f3 cFST csplit_normal_list f1 f2 cfind_face f1 b0 b0 cprev_el f2 cl'z f1 f4 f2 f3 cl'y f1 f2 f3
+ |- (((!z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F)))))))))))) ==> ((\z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F)))))))))))) z)) = ((\z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F)))))))))))) z))
T c= c==> ! ! c==> c= f0 f1 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f5 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f6 c==> c= cl'y f2 f3 b1 f0 c==> c= cl'z f2 f7 f3 b1 b0 c==> c= cprev_el f3 b0 f4 c==> c= cfind_face f2 f0 f8 c==> c= csplit_normal_list f2 f3 f8 f0 f4 csplit_normal_list f2 f3 f8 f0 f4 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f8 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f2 f3 f8 f0 f4 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f8 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f2 f3 f8 f0 f4 cNIL c==> c~ c==> c~ cfinal_list f2 f3 c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 f8 f1 f4 cNIL f7 cCONS cFST csplit_normal_list f2 f3 f8 f1 f4 cNIL ccat creplace f3 cCONS f6 cNIL f7 cCONS f5 cNIL cF * / ! c==> c= f0 f1 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f5 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f6 c==> c= cl'y f2 f3 b1 f0 c==> c= cl'z f2 f7 f3 b1 b0 c==> c= cprev_el f3 b0 f4 c==> c= cfind_face f2 f0 f8 c==> c= csplit_normal_list f2 f3 f8 f0 f4 csplit_normal_list f2 f3 f8 f0 f4 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f8 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f2 f3 f8 f0 f4 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f8 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f2 f3 f8 f0 f4 cNIL c==> c~ c==> c~ cfinal_list f2 f3 c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 f8 f1 f4 cNIL f7 cCONS cFST csplit_normal_list f2 f3 f8 f1 f4 cNIL ccat creplace f3 cCONS f6 cNIL f7 cCONS f5 cNIL cF f9 * / ! c==> c= f0 f1 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f5 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f6 c==> c= cl'y f2 f3 b1 f0 c==> c= cl'z f2 f7 f3 b1 b0 c==> c= cprev_el f3 b0 f4 c==> c= cfind_face f2 f0 f8 c==> c= csplit_normal_list f2 f3 f8 f0 f4 csplit_normal_list f2 f3 f8 f0 f4 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f8 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f2 f3 f8 f0 f4 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f8 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f2 f3 f8 f0 f4 cNIL c==> c~ c==> c~ cfinal_list f2 f3 c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 f8 f1 f4 cNIL f7 cCONS cFST csplit_normal_list f2 f3 f8 f1 f4 cNIL ccat creplace f3 cCONS f6 cNIL f7 cCONS f5 cNIL cF f9
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (_10514535 = _10514539)) \/ ((~ (_10514536 = _10514540)) \/ ((~ (_10514537 = _10514541)) \/ ((~ (_10514538 = _10514542)) \/ (((((l'z _10514535) _10514536) _10514537) _10514538) = ((((l'z _10514539) _10514540) _10514541) _10514542))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c= cl'z f0 f2 f4 f6 cl'z f1 f3 f5 f7
- (y' = (((l'y L) r) x)) |- (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))) = f2) = ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))) = f2))
T c==> c= f0 cl'y f1 f2 f3 c= c= cSND csplit_normal_list f1 f2 cfind_face f1 f4 f4 cprev_el f2 cl'z f1 f5 f2 f3 f6 c= cSND csplit_normal_list f1 f2 cfind_face f1 f4 f4 cprev_el f2 cl'z f1 f5 f2 f3 f6
+ |- (((!r. (!ram2. (!y. (!f. (!L. (!y'. (!z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F)))))))))))))))))) ==> ((\r. (!ram2. (!y. (!f. (!L. (!y'. (!z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F)))))))))))))))))) r)) = ((\r. (!ram2. (!y. (!f. (!L. (!y'. (!z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F)))))))))))))))))) r))
T c= c==> ! ! ! ! ! ! ! ! c==> c= b5 b2 c==> c= cFST csplit_normal_list b4 b0 cfind_face b4 b2 b2 b1 f0 c==> c= cSND csplit_normal_list b4 b0 cfind_face b4 b2 b2 b1 f1 c==> c= cl'y b4 b0 b7 b5 c==> c= cl'z b4 f2 b0 b7 b6 c==> c= cprev_el b0 b6 b1 c==> c= cfind_face b4 b5 b3 c==> c= csplit_normal_list b4 b0 b3 b5 b1 csplit_normal_list b4 b0 b3 b5 b1 c==> c= cAPPEND creplace b0 cCONS cSND csplit_normal_list b4 b0 b3 b5 b1 cNIL f2 cCONS cFST csplit_normal_list b4 b0 b3 b5 b1 cNIL cAPPEND creplace b0 cCONS cSND csplit_normal_list b4 b0 b3 b5 b1 cNIL f2 cCONS cFST csplit_normal_list b4 b0 b3 b5 b1 cNIL c==> c~ c==> c~ cfinal_list b4 b0 c= ccat creplace b0 cCONS cSND csplit_normal_list b4 b0 b3 b2 b1 cNIL f2 cCONS cFST csplit_normal_list b4 b0 b3 b2 b1 cNIL ccat creplace b0 cCONS f1 cNIL f2 cCONS f0 cNIL cF * / ! ! ! ! ! ! ! c==> c= b5 b2 c==> c= cFST csplit_normal_list b4 b0 cfind_face b4 b2 b2 b1 f0 c==> c= cSND csplit_normal_list b4 b0 cfind_face b4 b2 b2 b1 f1 c==> c= cl'y b4 b0 b7 b5 c==> c= cl'z b4 f2 b0 b7 b6 c==> c= cprev_el b0 b6 b1 c==> c= cfind_face b4 b5 b3 c==> c= csplit_normal_list b4 b0 b3 b5 b1 csplit_normal_list b4 b0 b3 b5 b1 c==> c= cAPPEND creplace b0 cCONS cSND csplit_normal_list b4 b0 b3 b5 b1 cNIL f2 cCONS cFST csplit_normal_list b4 b0 b3 b5 b1 cNIL cAPPEND creplace b0 cCONS cSND csplit_normal_list b4 b0 b3 b5 b1 cNIL f2 cCONS cFST csplit_normal_list b4 b0 b3 b5 b1 cNIL c==> c~ c==> c~ cfinal_list b4 b0 c= ccat creplace b0 cCONS cSND csplit_normal_list b4 b0 b3 b2 b1 cNIL f2 cCONS cFST csplit_normal_list b4 b0 b3 b2 b1 cNIL ccat creplace b0 cCONS f1 cNIL f2 cCONS f0 cNIL cF f3 * / ! ! ! ! ! ! ! c==> c= b5 b2 c==> c= cFST csplit_normal_list b4 b0 cfind_face b4 b2 b2 b1 f0 c==> c= cSND csplit_normal_list b4 b0 cfind_face b4 b2 b2 b1 f1 c==> c= cl'y b4 b0 b7 b5 c==> c= cl'z b4 f2 b0 b7 b6 c==> c= cprev_el b0 b6 b1 c==> c= cfind_face b4 b5 b3 c==> c= csplit_normal_list b4 b0 b3 b5 b1 csplit_normal_list b4 b0 b3 b5 b1 c==> c= cAPPEND creplace b0 cCONS cSND csplit_normal_list b4 b0 b3 b5 b1 cNIL f2 cCONS cFST csplit_normal_list b4 b0 b3 b5 b1 cNIL cAPPEND creplace b0 cCONS cSND csplit_normal_list b4 b0 b3 b5 b1 cNIL f2 cCONS cFST csplit_normal_list b4 b0 b3 b5 b1 cNIL c==> c~ c==> c~ cfinal_list b4 b0 c= ccat creplace b0 cCONS cSND csplit_normal_list b4 b0 b3 b2 b1 cNIL f2 cCONS cFST csplit_normal_list b4 b0 b3 b2 b1 cNIL ccat creplace b0 cCONS f1 cNIL f2 cCONS f0 cNIL cF f3
+ (y = (((l'y L) r) x)) |- ((?f1. (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))) ==> ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))
T c==> c= f0 cl'y f1 f2 f3 c==> c? / c= b0 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3 cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f1 f2 c= cntrans f1 f4 f2 f3 cNUMERAL cBIT1 c_0 ccat creplace f2 cCONS b1 cNIL f4 cCONS b0 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3
- (_10514530 = _10514533), (_10514529 = _10514532) |- ((_10514531 = _10514534) ==> ((((l'y _10514529) _10514530) _10514531) = (((l'y _10514532) _10514533) _10514534)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c= cl'y f2 f0 f4 cl'y f3 f1 f5
+ |- (((!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) ==> ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x)) = ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x))
T c= c==> ! c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3 * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3
+ (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((((\ram2. (ram2 = ((prev_el r) z))) ram2) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))))) ((prev_el r) z))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) = T)
T c==> c= f0 cl'y f1 f2 f3 c==> c= f4 cl'y f1 f2 f3 c==> c= f5 cl'z f1 f6 f2 f3 c==> c= f7 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f6 f2 f3 c==> c= f8 cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f6 f2 f3 c= c==> * / c= b0 cprev_el f2 f5 f9 c==> c~ cfinal_list f1 f2 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f1 f2 c, f6 f2 c, b3 cSND b2 cAPPEND creplace f2 cCONS cSND b2 cNIL f6 cCONS cFST b2 cNIL csplit_normal_list f1 f2 b1 f4 b0 cfind_face f1 f4 cprev_el f2 f5 ccat creplace f2 cCONS f8 cNIL f6 cCONS f7 cNIL cT
- |- ((_10514560 = _10514562) ==> ((~ (_10514559 = _10514561)) \/ (((CONS _10514559) _10514560) = ((CONS _10514561) _10514562))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f2 f0 cCONS f3 f1
- |- ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))
T c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
- |- ((\q'. (((~ ((final_list L) r)) = p') ==> ((p' ==> ((N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))) = q')) ==> (((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = (p' ==> q'))))) q')
T * / c==> c= c~ cfinal_list f0 f1 f2 c==> c==> f2 c= c= f3 ccat creplace f1 cCONS f4 cNIL f5 cCONS f6 cNIL b0 c= c==> c~ cfinal_list f0 f1 c= f3 ccat creplace f1 cCONS f4 cNIL f5 cCONS f6 cNIL c==> f2 b0 f7
- (((find_face L) y') = f) |- (F = F)
T c==> c= cfind_face f0 f1 f2 c= cF cF
+ (y = (((l'y L) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- (((\f2. (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))) f2) ==> ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))
T c==> c= f0 cl'y f1 f2 f3 c==> c= f4 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3 c==> * / c= b0 cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3 f6 cLET / cLET_END c==> c~ cfinal_list f1 f2 c= cntrans f1 f5 f2 f3 cNUMERAL cBIT1 c_0 ccat creplace f2 cCONS b0 cNIL f5 cCONS f4 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3
+ (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = N') ==> (hold ((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))))))))
T c==> c= f0 cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL c==> c= f4 f5 c==> c= cFST csplit_normal_list f6 f1 cfind_face f6 f5 f5 f7 f8 c==> c= cSND csplit_normal_list f6 f1 cfind_face f6 f5 f5 f7 f9 c==> c= cl'y f6 f1 f10 f4 c==> c= cl'z f6 f3 f1 f10 f11 c==> c= cprev_el f1 f11 f7 c==> c= cfind_face f6 f4 f12 c==> c= csplit_normal_list f6 f1 f12 f4 f7 f2 c==> c= cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL f0 chold c==> c~ cfinal_list f6 f1 c= f0 ccat creplace f1 cCONS f9 cNIL f3 cCONS f8 cNIL
+ |- ((\y'. (!z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F))))))))))))) y')
T * / ! ! c==> c= b0 f0 c==> c= cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 f3 f4 c==> c= cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 f3 f5 c==> c= cl'y f1 f2 b2 b0 c==> c= cl'z f1 f6 f2 b2 b1 c==> c= cprev_el f2 b1 f3 c==> c= cfind_face f1 b0 f7 c==> c= csplit_normal_list f1 f2 f7 b0 f3 csplit_normal_list f1 f2 f7 b0 f3 c==> c= cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f7 b0 f3 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f7 b0 f3 cNIL cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f7 b0 f3 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f7 b0 f3 cNIL c==> c~ c==> c~ cfinal_list f1 f2 c= ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f7 f0 f3 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f7 f0 f3 cNIL ccat creplace f2 cCONS f5 cNIL f6 cCONS f4 cNIL cF f8
+ (ram2 = ((prev_el r) z)) |- (((prev_el r) z) = ram2)
T c==> c= f0 cprev_el f1 f2 c= cprev_el f1 f2 f0
+ (y = (((l'y L) r) x)), ((\f1. (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))) f1) |- (((\f1. (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))) f1) /\ ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))
T c==> c= f0 cl'y f1 f2 f3 c==> * / c= b0 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3 f5 c/\ * / c= b0 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3 f5 cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f1 f2 c= cntrans f1 f4 f2 f3 cNUMERAL cBIT1 c_0 ccat creplace f2 cCONS b1 cNIL f4 cCONS b0 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3
- (f = ((find_face L) y')) |- (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) = ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2))
T c==> c= f0 cfind_face f1 f2 c= c= cSND csplit_normal_list f1 f3 cfind_face f1 f4 f4 f5 f6 c= cSND csplit_normal_list f1 f3 cfind_face f1 f4 f4 f5 f6
- (y' = y), ((((l'y L) r) x) = y') |- (F = F)
T c==> c= f0 f1 c==> c= cl'y f2 f3 f4 f0 c= cF cF
- (((prev_el r) z) = ram2), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) |- ((~ ((final_list L) r)) = (~ ((final_list L) r)))
T c==> c= cprev_el f0 f1 f2 c==> c= cl'z f3 f4 f0 f5 f1 c==> c= cSND csplit_normal_list f3 f0 cfind_face f3 f6 f6 f2 f7 c= c~ cfinal_list f3 f0 c~ cfinal_list f3 f0
+ (ram2 = ((prev_el r) z)), (z = ((((l'z L) N) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = N') ==> (hold ((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))))))) = (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = N') ==> (hold ((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))))))))
T c==> c= f0 cprev_el f1 f2 c==> c= f2 cl'z f3 f4 f1 f5 c==> c= f6 cFST csplit_normal_list f3 f1 cfind_face f3 f7 f7 cprev_el f1 cl'z f3 f4 f1 f5 c= c==> c= cFST csplit_normal_list f3 f1 cfind_face f3 f7 f7 f0 f6 c==> c= cSND csplit_normal_list f3 f1 cfind_face f3 f7 f7 f0 f8 c==> c= cl'y f3 f1 f5 f9 c==> c= cl'z f3 f4 f1 f5 f2 c==> c= cprev_el f1 f2 f0 c==> c= cfind_face f3 f9 f10 c==> c= csplit_normal_list f3 f1 f10 f9 f0 f11 c==> c= cAPPEND creplace f1 cCONS cSND f11 cNIL f4 cCONS cFST f11 cNIL f12 chold c==> c~ cfinal_list f3 f1 c= f12 ccat creplace f1 cCONS f8 cNIL f4 cCONS f6 cNIL c==> c= cSND csplit_normal_list f3 f1 cfind_face f3 f7 f7 f0 f8 c==> c= cl'y f3 f1 f5 f9 c==> c= cl'z f3 f4 f1 f5 f2 c==> c= cprev_el f1 f2 f0 c==> c= cfind_face f3 f9 f10 c==> c= csplit_normal_list f3 f1 f10 f9 f0 f11 c==> c= cAPPEND creplace f1 cCONS cSND f11 cNIL f4 cCONS cFST f11 cNIL f12 chold c==> c~ cfinal_list f3 f1 c= f12 ccat creplace f1 cCONS f8 cNIL f4 cCONS f6 cNIL
- (_10514537 = _10514541), (_10514535 = _10514539), (_10514536 = _10514540) |- ((_10514537 = _10514541) /\ ((~ (_10514538 = _10514542)) \/ (((((l'z _10514535) _10514536) _10514537) _10514538) = ((((l'z _10514539) _10514540) _10514541) _10514542))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f0 f1 c\/ c~ c= f6 f7 c= cl'z f2 f4 f0 f6 cl'z f3 f5 f1 f7
- (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- ((((find_face L) y') = f) = (((find_face L) y') = f))
T c==> c= f0 cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL c= c= cfind_face f4 f5 f6 c= cfind_face f4 f5 f6
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (split = (((((split_normal_list L) r) f) y') ram2)), (f = ((find_face L) y')), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- (((!x. (((\N'. (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))) x) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))) ==> ((?N'. (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))) = ((?N'. (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 csplit_normal_list f4 f1 f9 f6 f0 c==> c= f9 cfind_face f4 f6 c==> c= f10 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f11 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c= c==> ! c==> * / c= b1 cAPPEND creplace f1 cCONS cSND f8 cNIL f7 cCONS cFST f8 cNIL b0 c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cCOND cfinal_list f4 f1 c, f7 f1 c, b1 cSND f8 cAPPEND creplace f1 cCONS cSND f8 cNIL f7 cCONS cFST f8 cNIL ccat creplace f1 cCONS f11 cNIL f7 cCONS f10 cNIL c==> c? / c= b0 cAPPEND creplace f1 cCONS cSND f8 cNIL f7 cCONS cFST f8 cNIL c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cCOND cfinal_list f4 f1 c, f7 f1 c, b0 cSND f8 cAPPEND creplace f1 cCONS cSND f8 cNIL f7 cCONS cFST f8 cNIL ccat creplace f1 cCONS f11 cNIL f7 cCONS f10 cNIL c==> c? / c= b0 cAPPEND creplace f1 cCONS cSND f8 cNIL f7 cCONS cFST f8 cNIL c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cCOND cfinal_list f4 f1 c, f7 f1 c, b0 cSND f8 cAPPEND creplace f1 cCONS cSND f8 cNIL f7 cCONS cFST f8 cNIL ccat creplace f1 cCONS f11 cNIL f7 cCONS f10 cNIL
+ ((\ram2. (ram2 = ((prev_el r) z))) ram2) |- (((ram2 = ((prev_el r) z)) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))))) ((prev_el r) z))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) = ((~ ((final_list L) r)) ==> ((FST ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))))) ((prev_el r) z))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> * / c= b0 cprev_el f0 f1 f2 c= c==> c= f2 cprev_el f0 f1 c==> c~ cfinal_list f3 f0 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f3 f0 c, f4 f0 c, b3 cSND b2 cAPPEND creplace f0 cCONS cSND b2 cNIL f4 cCONS cFST b2 cNIL csplit_normal_list f3 f0 b1 f5 b0 cfind_face f3 f5 cprev_el f0 f1 ccat creplace f0 cCONS f6 cNIL f4 cCONS f7 cNIL c==> c~ cfinal_list f3 f0 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f3 f0 c, f4 f0 c, b3 cSND b2 cAPPEND creplace f0 cCONS cSND b2 cNIL f4 cCONS cFST b2 cNIL csplit_normal_list f3 f0 b1 f5 b0 cfind_face f3 f5 cprev_el f0 f1 ccat creplace f0 cCONS f6 cNIL f4 cCONS f7 cNIL
+ (y = (((l'y L) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- (!y'. (((\y'. (y' = (((l'y L) r) x))) y') ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))
T c==> c= f0 cl'y f1 f2 f3 c==> c= f4 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3 c==> c= f6 cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3 ! c==> * / c= b1 cl'y f1 f2 f3 b0 c==> c~ cfinal_list f1 f2 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f1 f2 c, f5 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f5 cCONS cFST b5 cNIL csplit_normal_list f1 f2 b4 b1 b3 cfind_face f1 b1 cprev_el f2 b2 cl'z f1 f5 f2 f3 cl'y f1 f2 f3 ccat creplace f2 cCONS f6 cNIL f5 cCONS f4 cNIL
+ (y' = y), ((((l'y L) r) x) = y'), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) |- (((((l'y L) r) x) = y') /\ ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))))
T c==> c= f0 f1 c==> c= cl'y f2 f3 f4 f0 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f5 f6 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f5 f7 c/\ c= cl'y f2 f3 f4 f0 c==> c= cl'z f2 f8 f3 f4 f9 c==> c= cprev_el f3 f9 f5 c==> c= cfind_face f2 f0 f10 c==> c= csplit_normal_list f2 f3 f10 f0 f5 csplit_normal_list f2 f3 f10 f0 f5 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f5 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f5 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f5 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f5 cNIL c==> c~ cfinal_list f2 f3 c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f1 f5 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f1 f5 cNIL ccat creplace f3 cCONS f7 cNIL f8 cCONS f6 cNIL
- (~ ((final_list L) r)) |- ((~ ((final_list L) r)) /\ ((N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))) = (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c~ cfinal_list f0 f1 c/\ c~ cfinal_list f0 f1 c= c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL
+ (y' = y), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) |- (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) /\ (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) ==> (hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))))))
T c==> c= f0 f1 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f5 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f6 c/\ c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f6 c==> c= cl'y f2 f3 f7 f0 c==> c= cl'z f2 f8 f3 f7 f9 c==> c= cprev_el f3 f9 f4 c==> c= cfind_face f2 f0 f10 c==> c= csplit_normal_list f2 f3 f10 f0 f4 f11 c==> c= cAPPEND creplace f3 cCONS cSND f11 cNIL f8 cCONS cFST f11 cNIL cAPPEND creplace f3 cCONS cSND f11 cNIL f8 cCONS cFST f11 cNIL chold c==> c~ cfinal_list f2 f3 c= cAPPEND creplace f3 cCONS cSND f11 cNIL f8 cCONS cFST f11 cNIL ccat creplace f3 cCONS f6 cNIL f8 cCONS f5 cNIL
+ (y' = y), ((((l'y L) r) x) = y') |- ((((l'y L) r) x) = y)
T c==> c= f0 f1 c==> c= cl'y f2 f3 f4 f0 c= cl'y f2 f3 f4 f1
- (_10514547 = _10514552) |- ((_10514548 = _10514553) ==> ((~ (_10514549 = _10514554)) \/ ((~ (_10514550 = _10514555)) \/ ((~ (_10514551 = _10514556)) \/ ((((((split_normal_list _10514547) _10514548) _10514549) _10514550) _10514551) = (((((split_normal_list _10514552) _10514553) _10514554) _10514555) _10514556))))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csplit_normal_list f0 f2 f4 f6 f8 csplit_normal_list f1 f3 f5 f7 f9
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (f = ((find_face L) y')), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = N') ==> (hold ((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 cfind_face f4 f6 c==> c= f9 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f10 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f11 cAPPEND creplace f1 cCONS cSND f12 cNIL f7 cCONS cFST f12 cNIL c==> c= csplit_normal_list f4 f1 f8 f6 f0 f12 c==> c= cAPPEND creplace f1 cCONS cSND f12 cNIL f7 cCONS cFST f12 cNIL f11 chold c==> c~ cfinal_list f4 f1 c= f11 ccat creplace f1 cCONS f10 cNIL f7 cCONS f9 cNIL
+ |- ((((~ ((final_list L) r)) ==> (((FST (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))) = (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> (((~ ((final_list L) r)) ==> ((FST (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = ((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))) = (((~ ((final_list L) r)) ==> ((FST (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = ((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))
T c= c==> c==> c~ cfinal_list f0 f1 c= c= cFST cCOND cfinal_list f0 f1 c, f2 f1 c, f3 cSND f4 ccat creplace f1 cCONS f5 cNIL f2 cCONS f6 cNIL c= f3 ccat creplace f1 cCONS f5 cNIL f2 cCONS f6 cNIL c= c==> c~ cfinal_list f0 f1 c= cFST cCOND cfinal_list f0 f1 c, f2 f1 c, f3 cSND f4 ccat creplace f1 cCONS f5 cNIL f2 cCONS f6 cNIL c==> c~ cfinal_list f0 f1 c= f3 ccat creplace f1 cCONS f5 cNIL f2 cCONS f6 cNIL c= c==> c~ cfinal_list f0 f1 c= cFST cCOND cfinal_list f0 f1 c, f2 f1 c, f3 cSND f4 ccat creplace f1 cCONS f5 cNIL f2 cCONS f6 cNIL c==> c~ cfinal_list f0 f1 c= f3 ccat creplace f1 cCONS f5 cNIL f2 cCONS f6 cNIL
+ ((\N'. (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))) N') |- (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))
T c==> * / c= b0 cAPPEND creplace f0 cCONS cSND f1 cNIL f2 cCONS cFST f1 cNIL f3 c= f3 cAPPEND creplace f0 cCONS cSND f1 cNIL f2 cCONS cFST f1 cNIL
- (_10514544 = _10514546), (_10514543 = _10514545) |- ((_10514544 = _10514546) /\ (((prev_el _10514543) _10514544) = ((prev_el _10514545) _10514546)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= cprev_el f2 f0 cprev_el f3 f1
- |- (MAP = map)
T c= part cMAP part cmap
- |- (LENGTH = sizel)
T c= part cLENGTH part csizel
+ |- ((~ F) ==> ((N' , (SND split)) = (N' , (SND split))))
T c==> c~ cF c= c, f0 cSND f1 c, f0 cSND f1
+ |- (((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = ((~ ((final_list L) r)) ==> ((FST (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c= c==> c~ cfinal_list f0 f1 c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL c==> c~ cfinal_list f0 f1 c= cFST cCOND cfinal_list f0 f1 c, f4 f1 c, f2 cSND f6 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- (((!x. (((\f. (f = ((find_face L) y'))) x) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))) ==> ((?f. (f = ((find_face L) y'))) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))) = ((?f. (f = ((find_face L) y'))) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f9 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c= c==> ! c==> * / c= b1 cfind_face f4 f6 b0 c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f4 f1 c, f7 f1 c, b3 cSND b2 cAPPEND creplace f1 cCONS cSND b2 cNIL f7 cCONS cFST b2 cNIL csplit_normal_list f4 f1 b1 f6 f0 cfind_face f4 f6 ccat creplace f1 cCONS f9 cNIL f7 cCONS f8 cNIL c==> c? / c= b0 cfind_face f4 f6 c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f4 f1 c, f7 f1 c, b2 cSND b1 cAPPEND creplace f1 cCONS cSND b1 cNIL f7 cCONS cFST b1 cNIL csplit_normal_list f4 f1 b0 f6 f0 cfind_face f4 f6 ccat creplace f1 cCONS f9 cNIL f7 cCONS f8 cNIL c==> c? / c= b0 cfind_face f4 f6 c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f4 f1 c, f7 f1 c, b2 cSND b1 cAPPEND creplace f1 cCONS cSND b1 cNIL f7 cCONS cFST b1 cNIL csplit_normal_list f4 f1 b0 f6 f0 cfind_face f4 f6 ccat creplace f1 cCONS f9 cNIL f7 cCONS f8 cNIL
- |- (((!p'. (!q'. (((~ ((final_list L) r)) = p') ==> ((p' ==> ((N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))) = q')) ==> (((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((~ ((final_list L) r)) = p') ==> ((p' ==> ((N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))) = q')) ==> (((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((~ ((final_list L) r)) = p') ==> ((p' ==> ((N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))) = q')) ==> (((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c~ cfinal_list f0 f1 b0 c==> c==> b0 c= c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL b1 c= c==> c~ cfinal_list f0 f1 c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL c==> b0 b1 * / ! c==> c= c~ cfinal_list f0 f1 b0 c==> c==> b0 c= c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL b1 c= c==> c~ cfinal_list f0 f1 c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL c==> b0 b1 f6 * / ! c==> c= c~ cfinal_list f0 f1 b0 c==> c==> b0 c= c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL b1 c= c==> c~ cfinal_list f0 f1 c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL c==> b0 b1 f6
+ |- ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> (hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))))))))
T c==> c= f0 f1 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f5 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f6 c==> c= cl'y f2 f3 f7 f0 c==> c= cl'z f2 f8 f3 f7 f9 c==> c= cprev_el f3 f9 f4 c==> c= cfind_face f2 f0 f10 c==> c= csplit_normal_list f2 f3 f10 f0 f4 csplit_normal_list f2 f3 f10 f0 f4 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL chold c==> c~ cfinal_list f2 f3 c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL ccat creplace f3 cCONS f6 cNIL f8 cCONS f5 cNIL
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (split = (((((split_normal_list L) r) f) y') ram2)), (f = ((find_face L) y')), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- (hold ((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 csplit_normal_list f4 f1 f9 f6 f0 c==> c= f9 cfind_face f4 f6 c==> c= f10 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f11 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f12 cAPPEND creplace f1 cCONS cSND f8 cNIL f7 cCONS cFST f8 cNIL chold c==> c~ cfinal_list f4 f1 c= f12 ccat creplace f1 cCONS f11 cNIL f7 cCONS f10 cNIL
+ |- ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) ==> (hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))))))))
T c==> c= f0 f1 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f5 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f6 c==> c= cl'y f2 f3 f7 f0 c==> c= cl'z f2 f8 f3 f7 f9 c==> c= cprev_el f3 f9 f4 c==> c= cfind_face f2 f0 f10 c==> c= csplit_normal_list f2 f3 f10 f0 f4 f11 c==> c= cAPPEND creplace f3 cCONS cSND f11 cNIL f8 cCONS cFST f11 cNIL cAPPEND creplace f3 cCONS cSND f11 cNIL f8 cCONS cFST f11 cNIL chold c==> c~ cfinal_list f2 f3 c= cAPPEND creplace f3 cCONS cSND f11 cNIL f8 cCONS cFST f11 cNIL ccat creplace f3 cCONS f6 cNIL f8 cCONS f5 cNIL
- |- ((\p'. (!q'. (((~ ((final_list L) r)) = p') ==> ((p' ==> ((N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))) = q')) ==> (((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = (p' ==> q')))))) p')
T * / ! c==> c= c~ cfinal_list f0 f1 b0 c==> c==> b0 c= c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL b1 c= c==> c~ cfinal_list f0 f1 c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL c==> b0 b1 f6
+ |- (((((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) = ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL))) ==> F) = F)
T c= c==> c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL f3 cCONS cFST csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL f3 cCONS cFST csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL cF cF
- (y' = y), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((((((split_normal_list L) r) f) y') ram2) = split), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2), (((find_face L) y') = f), (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) /\ (hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))
T c==> c= f0 f1 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f5 f2 f6 f0 c==> c= cl'z f5 f7 f2 f6 f3 c==> c= csplit_normal_list f5 f2 f8 f0 f4 f9 c==> c= cFST csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f10 c==> c= cSND csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f11 c==> c= cfind_face f5 f0 f8 c==> c= cAPPEND creplace f2 cCONS cSND f9 cNIL f7 cCONS cFST f9 cNIL cAPPEND creplace f2 cCONS cSND f9 cNIL f7 cCONS cFST f9 cNIL c/\ c= cAPPEND creplace f2 cCONS cSND f9 cNIL f7 cCONS cFST f9 cNIL cAPPEND creplace f2 cCONS cSND f9 cNIL f7 cCONS cFST f9 cNIL chold c==> c~ cfinal_list f5 f2 c= cAPPEND creplace f2 cCONS cSND f9 cNIL f7 cCONS cFST f9 cNIL ccat creplace f2 cCONS f11 cNIL f7 cCONS f10 cNIL
+ (y' = y), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2), (((find_face L) y') = f) |- ((((find_face L) y') = f) /\ (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) ==> (hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))
T c==> c= f0 f1 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f5 f2 f6 f0 c==> c= cl'z f5 f7 f2 f6 f3 c==> c= cFST csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f8 c==> c= cSND csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f9 c==> c= cfind_face f5 f0 f10 c/\ c= cfind_face f5 f0 f10 c==> c= csplit_normal_list f5 f2 f10 f0 f4 f11 c==> c= cAPPEND creplace f2 cCONS cSND f11 cNIL f7 cCONS cFST f11 cNIL cAPPEND creplace f2 cCONS cSND f11 cNIL f7 cCONS cFST f11 cNIL chold c==> c~ cfinal_list f5 f2 c= cAPPEND creplace f2 cCONS cSND f11 cNIL f7 cCONS cFST f11 cNIL ccat creplace f2 cCONS f9 cNIL f7 cCONS f8 cNIL
+ |- ((T ==> (?split. (split = (((((split_normal_list L) r) f) y') ram2)))) = (?split. (split = (((((split_normal_list L) r) f) y') ram2))))
T c= c==> cT c? / c= b0 csplit_normal_list f0 f1 f2 f3 f4 c? / c= b0 csplit_normal_list f0 f1 f2 f3 f4
+ (~ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))), (y' = y), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2), (((find_face L) y') = f) |- (~ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) = ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL))))
T c==> c~ c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 f2 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f1 f0 f2 f3 f4 cNIL ccat creplace f0 cCONS f6 cNIL f5 cCONS f7 cNIL c==> c= f8 f3 c==> c= cprev_el f0 f9 f4 c==> c= cl'y f1 f0 f10 f8 c==> c= cl'z f1 f5 f0 f10 f9 c==> c= cFST csplit_normal_list f1 f0 cfind_face f1 f3 f3 f4 f7 c==> c= cSND csplit_normal_list f1 f0 cfind_face f1 f3 f3 f4 f6 c==> c= cfind_face f1 f8 f2 c~ c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f10 cl'y f1 f0 f10 cprev_el f0 cl'z f1 f5 f0 f10 cNIL f5 cCONS cFST csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f10 cl'y f1 f0 f10 cprev_el f0 cl'z f1 f5 f0 f10 cNIL ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f10 cl'y f1 f0 f10 cprev_el f0 cl'z f1 f5 f0 f10 cNIL f5 cCONS cFST csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f10 cl'y f1 f0 f10 cprev_el f0 cl'z f1 f5 f0 f10 cNIL
- (_10514530 = _10514533), (_10514529 = _10514532) |- ((_10514530 = _10514533) /\ ((~ (_10514531 = _10514534)) \/ ((((l'y _10514529) _10514530) _10514531) = (((l'y _10514532) _10514533) _10514534))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ c~ c= f4 f5 c= cl'y f2 f0 f4 cl'y f3 f1 f5
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((~ ((final_list L) r)) ==> ((FST ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))))) ((prev_el r) z))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))
T c==> c= f0 cl'y f1 f2 f3 c==> c= f4 cl'y f1 f2 f3 c==> c= f5 cl'z f1 f6 f2 f3 c==> c= f7 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f6 f2 f3 c==> c= f8 cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f6 f2 f3 c==> c~ cfinal_list f1 f2 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f1 f2 c, f6 f2 c, b3 cSND b2 cAPPEND creplace f2 cCONS cSND b2 cNIL f6 cCONS cFST b2 cNIL csplit_normal_list f1 f2 b1 f4 b0 cfind_face f1 f4 cprev_el f2 f5 ccat creplace f2 cCONS f8 cNIL f6 cCONS f7 cNIL
+ |- (((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))))) (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))) = ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))
T c= cLET * part cGABS / ! ! cGEQ * b0 c, b1 b2 cLET_END c==> c~ cfinal_list f0 f1 c= cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 ccat creplace f1 cCONS b2 cNIL f2 cCONS b1 cNIL csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f0 f1 c= cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 ccat creplace f1 cCONS b1 cNIL f2 cCONS b0 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3 cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f2 f1 f3
+ (~ ((final_list L) r)) |- ((~ ((final_list L) r)) /\ (((FST (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))) = (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c~ cfinal_list f0 f1 c/\ c~ cfinal_list f0 f1 c= c= cFST cCOND cfinal_list f0 f1 c, f2 f1 c, f3 cSND f4 ccat creplace f1 cCONS f5 cNIL f2 cCONS f6 cNIL c= f3 ccat creplace f1 cCONS f5 cNIL f2 cCONS f6 cNIL
+ (y = (((l'y L) r) x)) |- (!f1. (((\f1. (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))) f1) ==> ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))
T c==> c= f0 cl'y f1 f2 f3 ! c==> * / c= b1 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3 b0 cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f1 f2 c= cntrans f1 f4 f2 f3 cNUMERAL cBIT1 c_0 ccat creplace f2 cCONS b1 cNIL f4 cCONS b1 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3
- |- ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0)
T * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1
+ (~ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), (((find_face L) y') = f) |- (~ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))
T c==> c~ c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 f2 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f1 f0 f2 f3 f4 cNIL ccat creplace f0 cCONS f6 cNIL f5 cCONS f7 cNIL c==> c= cprev_el f0 f8 f4 c==> c= cl'y f1 f0 f9 f10 c==> c= cl'z f1 f5 f0 f9 f8 c==> c= cfind_face f1 f10 f2 c~ c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f9 f3 cprev_el f0 cl'z f1 f5 f0 f9 cNIL f5 cCONS cFST csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f9 f3 cprev_el f0 cl'z f1 f5 f0 f9 cNIL ccat creplace f0 cCONS f6 cNIL f5 cCONS f7 cNIL
- |- ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))
T c==> c~ c= cNIL f0 c= cLAST f0 clast f1 f0
+ (ram2 = ((prev_el r) z)) |- ((ram2 = ((prev_el r) z)) /\ (?ram2. (ram2 = ((prev_el r) z))))
T c==> c= f0 cprev_el f1 f2 c/\ c= f0 cprev_el f1 f2 c? / c= b0 cprev_el f1 f2
- (((prev_el r) z) = ram2) |- (((((l'y L) r) x) = y') = ((((l'y L) r) x) = y'))
T c==> c= cprev_el f0 f1 f2 c= c= cl'y f3 f0 f4 f5 c= cl'y f3 f0 f4 f5
+ |- (T ==> (?split. (split = (((((split_normal_list L) r) f) y') ram2))))
T c==> cT c? / c= b0 csplit_normal_list f0 f1 f2 f3 f4
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = N') ==> (hold ((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))))
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f9 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f10 cAPPEND creplace f1 cCONS cSND f11 cNIL f7 cCONS cFST f11 cNIL c==> c= cprev_el f1 f2 f0 c==> c= cfind_face f4 f6 f12 c==> c= csplit_normal_list f4 f1 f12 f6 f0 f11 c==> c= cAPPEND creplace f1 cCONS cSND f11 cNIL f7 cCONS cFST f11 cNIL f10 chold c==> c~ cfinal_list f4 f1 c= f10 ccat creplace f1 cCONS f9 cNIL f7 cCONS f8 cNIL
+ |- ((((~ F) ==> ((N' , (SND split)) = (N' , (SND split)))) ==> ((((COND ((final_list L) r)) (N , r)) (N' , (SND split))) = (((COND F) (N , r)) (N' , (SND split))))) = ((((COND ((final_list L) r)) (N , r)) (N' , (SND split))) = (((COND F) (N , r)) (N' , (SND split)))))
T c= c==> c==> c~ cF c= c, f0 cSND f1 c, f0 cSND f1 c= cCOND cfinal_list f2 f3 c, f4 f3 c, f0 cSND f1 cCOND cF c, f4 f3 c, f0 cSND f1 c= cCOND cfinal_list f2 f3 c, f4 f3 c, f0 cSND f1 cCOND cF c, f4 f3 c, f0 cSND f1
- (_10514548 = _10514553), (_10514549 = _10514554), (_10514547 = _10514552) |- ((~ (_10514550 = _10514555)) \/ ((~ (_10514551 = _10514556)) \/ ((((((split_normal_list _10514547) _10514548) _10514549) _10514550) _10514551) = (((((split_normal_list _10514552) _10514553) _10514554) _10514555) _10514556))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csplit_normal_list f4 f0 f2 f6 f8 csplit_normal_list f5 f1 f3 f7 f9
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((~ ((final_list L) r)) ==> ((FST ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))))) ((prev_el r) z))))) z)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))
T c==> c= f0 cl'y f1 f2 f3 c==> c= f4 cl'y f1 f2 f3 c==> c= f5 cl'z f1 f6 f2 f3 c==> c= f7 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f6 f2 f3 c==> c= f8 cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f6 f2 f3 c==> c~ cfinal_list f1 f2 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f1 f2 c, f6 f2 c, b4 cSND b3 cAPPEND creplace f2 cCONS cSND b3 cNIL f6 cCONS cFST b3 cNIL csplit_normal_list f1 f2 b2 f4 b1 cfind_face f1 f4 cprev_el f2 b0 f5 ccat creplace f2 cCONS f8 cNIL f6 cCONS f7 cNIL
+ ((((((split_normal_list L) r) f) y') ram2) = split) |- (((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> (hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))))))))) = ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) ==> (hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))))))))))
T c==> c= csplit_normal_list f0 f1 f2 f3 f4 f5 c= c==> c= f3 f6 c==> c= cFST csplit_normal_list f0 f1 cfind_face f0 f6 f6 f4 f7 c==> c= cSND csplit_normal_list f0 f1 cfind_face f0 f6 f6 f4 f8 c==> c= cl'y f0 f1 f9 f3 c==> c= cl'z f0 f10 f1 f9 f11 c==> c= cprev_el f1 f11 f4 c==> c= cfind_face f0 f3 f2 c==> c= csplit_normal_list f0 f1 f2 f3 f4 csplit_normal_list f0 f1 f2 f3 f4 c==> c= cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f10 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f10 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL chold c==> c~ cfinal_list f0 f1 c= cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f10 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL ccat creplace f1 cCONS f8 cNIL f10 cCONS f7 cNIL c==> c= f3 f6 c==> c= cFST csplit_normal_list f0 f1 cfind_face f0 f6 f6 f4 f7 c==> c= cSND csplit_normal_list f0 f1 cfind_face f0 f6 f6 f4 f8 c==> c= cl'y f0 f1 f9 f3 c==> c= cl'z f0 f10 f1 f9 f11 c==> c= cprev_el f1 f11 f4 c==> c= cfind_face f0 f3 f2 c==> c= csplit_normal_list f0 f1 f2 f3 f4 f5 c==> c= cAPPEND creplace f1 cCONS cSND f5 cNIL f10 cCONS cFST f5 cNIL cAPPEND creplace f1 cCONS cSND f5 cNIL f10 cCONS cFST f5 cNIL chold c==> c~ cfinal_list f0 f1 c= cAPPEND creplace f1 cCONS cSND f5 cNIL f10 cCONS cFST f5 cNIL ccat creplace f1 cCONS f8 cNIL f10 cCONS f7 cNIL
+ (y = (((l'y L) r) x)) |- (((LET (\y. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (((l'y L) r) x)) = ((LET (\y. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) y))
T c==> c= f0 cl'y f1 f2 f3 c= cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f1 f2 c= cntrans f1 f4 f2 f3 cNUMERAL cBIT1 c_0 ccat creplace f2 cCONS b2 cNIL f4 cCONS b1 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 b0 b0 cprev_el f2 cl'z f1 f4 f2 f3 cFST csplit_normal_list f1 f2 cfind_face f1 b0 b0 cprev_el f2 cl'z f1 f4 f2 f3 cl'y f1 f2 f3 cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f1 f2 c= cntrans f1 f4 f2 f3 cNUMERAL cBIT1 c_0 ccat creplace f2 cCONS b2 cNIL f4 cCONS b1 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 b0 b0 cprev_el f2 cl'z f1 f4 f2 f3 cFST csplit_normal_list f1 f2 cfind_face f1 b0 b0 cprev_el f2 cl'z f1 f4 f2 f3 f0
- (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- ((y' = y) = (y' = y))
T c==> c= f0 cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL c= c= f4 f5 c= f4 f5
+ (y = (((l'y L) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) /\ ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))
T c==> c= f0 cl'y f1 f2 f3 c==> c= f4 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3 c==> c= f6 cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3 c/\ c= f6 cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3 cLET / cLET_END c==> c~ cfinal_list f1 f2 c= cntrans f1 f5 f2 f3 cNUMERAL cBIT1 c_0 ccat creplace f2 cCONS b0 cNIL f5 cCONS f4 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3
+ (y' = y), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) |- ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))
T c==> c= f0 f1 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f5 f2 f6 f0 c==> c= cl'z f5 f7 f2 f6 f3 c==> c= cFST csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f8 c==> c= cSND csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f9 c==> c= cfind_face f5 f0 f10 c==> c= csplit_normal_list f5 f2 f10 f0 f4 csplit_normal_list f5 f2 f10 f0 f4 c==> c= cAPPEND creplace f2 cCONS cSND csplit_normal_list f5 f2 f10 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f5 f2 f10 f0 f4 cNIL cAPPEND creplace f2 cCONS cSND csplit_normal_list f5 f2 f10 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f5 f2 f10 f0 f4 cNIL c==> c~ cfinal_list f5 f2 c= ccat creplace f2 cCONS cSND csplit_normal_list f5 f2 f10 f1 f4 cNIL f7 cCONS cFST csplit_normal_list f5 f2 f10 f1 f4 cNIL ccat creplace f2 cCONS f9 cNIL f7 cCONS f8 cNIL
+ |- ((\f. (!Q. (((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((Q f1) f2)))))))) f) = ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((Q f1) f2)))) (SND f))))) (FST f))))) f)
T * / ! c= cLET * part cGABS / ! ! cGEQ * b2 c, b3 b4 cLET_END * * b1 b3 b4 b0 cLET / cLET_END cLET / cLET_END * * b1 b2 b3 cSND b0 cFST b0 f0
- (((prev_el r) z) = ram2) |- ((((((l'z L) N) r) x) = z) = (((((l'z L) N) r) x) = z))
T c==> c= cprev_el f0 f1 f2 c= c= cl'z f3 f4 f0 f5 f1 c= cl'z f3 f4 f0 f5 f1
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ (z = ((((l'z L) N) r) x)) |- ((z = ((((l'z L) N) r) x)) /\ (?z. (z = ((((l'z L) N) r) x))))
T c==> c= f0 cl'z f1 f2 f3 f4 c/\ c= f0 cl'z f1 f2 f3 f4 c? / c= b0 cl'z f1 f2 f3 f4
- (y' = (((l'y L) r) x)) |- (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))) = f1) = ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))) = f1))
T c==> c= f0 cl'y f1 f2 f3 c= c= cFST csplit_normal_list f1 f2 cfind_face f1 f4 f4 cprev_el f2 cl'z f1 f5 f2 f3 f6 c= cFST csplit_normal_list f1 f2 cfind_face f1 f4 f4 cprev_el f2 cl'z f1 f5 f2 f3 f6
+ (y' = y), ((((l'y L) r) x) = y') |- ((~ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) = ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)))) = (~ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) = ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)))))
T c==> c= f0 f1 c==> c= cl'y f2 f3 f4 f0 c= c~ c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 cfind_face f2 cl'y f2 f3 f4 f1 cprev_el f3 cl'z f2 f5 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f2 f3 cfind_face f2 cl'y f2 f3 f4 f1 cprev_el f3 cl'z f2 f5 f3 f4 cNIL ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 cprev_el f3 cl'z f2 f5 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 cprev_el f3 cl'z f2 f5 f3 f4 cNIL c~ c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 cfind_face f2 cl'y f2 f3 f4 cl'y f2 f3 f4 cprev_el f3 cl'z f2 f5 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f2 f3 cfind_face f2 cl'y f2 f3 f4 cl'y f2 f3 f4 cprev_el f3 cl'z f2 f5 f3 f4 cNIL ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 cfind_face f2 cl'y f2 f3 f4 cl'y f2 f3 f4 cprev_el f3 cl'z f2 f5 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f2 f3 cfind_face f2 cl'y f2 f3 f4 cl'y f2 f3 f4 cprev_el f3 cl'z f2 f5 f3 f4 cNIL
- (y' = y), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((((((split_normal_list L) r) f) y') ram2) = split), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2), (((find_face L) y') = f), (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- ((((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) ==> (hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))) = (hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))
T c==> c= f0 f1 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f5 f2 f6 f0 c==> c= cl'z f5 f7 f2 f6 f3 c==> c= csplit_normal_list f5 f2 f8 f0 f4 f9 c==> c= cFST csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f10 c==> c= cSND csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f11 c==> c= cfind_face f5 f0 f8 c==> c= cAPPEND creplace f2 cCONS cSND f9 cNIL f7 cCONS cFST f9 cNIL cAPPEND creplace f2 cCONS cSND f9 cNIL f7 cCONS cFST f9 cNIL c= c==> c==> c~ cfinal_list f5 f2 c= cAPPEND creplace f2 cCONS cSND f9 cNIL f7 cCONS cFST f9 cNIL ccat creplace f2 cCONS f11 cNIL f7 cCONS f10 cNIL chold c==> c~ cfinal_list f5 f2 c= cAPPEND creplace f2 cCONS cSND f9 cNIL f7 cCONS cFST f9 cNIL ccat creplace f2 cCONS f11 cNIL f7 cCONS f10 cNIL chold c==> c~ cfinal_list f5 f2 c= cAPPEND creplace f2 cCONS cSND f9 cNIL f7 cCONS cFST f9 cNIL ccat creplace f2 cCONS f11 cNIL f7 cCONS f10 cNIL
- |- ((!z. t) = t)
T c= ! f0 f0
- (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) = ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1))
T c==> c= f0 cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL c= c= cFST csplit_normal_list f4 f1 cfind_face f4 f5 f5 f6 f7 c= cFST csplit_normal_list f4 f1 cfind_face f4 f5 f5 f6 f7
+ |- ((N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) ==> (?N'. (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))
T c==> c= f0 cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL c? / c= b0 cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL
+ (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- (!ram2. (((\ram2. (ram2 = ((prev_el r) z))) ram2) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))))) ((prev_el r) z))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))
T c==> c= f0 cl'y f1 f2 f3 c==> c= f4 cl'y f1 f2 f3 c==> c= f5 cl'z f1 f6 f2 f3 c==> c= f7 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f6 f2 f3 c==> c= f8 cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f6 f2 f3 ! c==> * / c= b1 cprev_el f2 f5 b0 c==> c~ cfinal_list f1 f2 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f1 f2 c, f6 f2 c, b3 cSND b2 cAPPEND creplace f2 cCONS cSND b2 cNIL f6 cCONS cFST b2 cNIL csplit_normal_list f1 f2 b1 f4 b1 cfind_face f1 f4 cprev_el f2 f5 ccat creplace f2 cCONS f8 cNIL f6 cCONS f7 cNIL
- (((find_face L) y') = f) |- ((y' = y) = (y' = y))
T c==> c= cfind_face f0 f1 f2 c= c= f1 f3 c= f1 f3
+ |- (F ==> ((N , r) = (N , r)))
T c==> cF c= c, f0 f1 c, f0 f1
+ |- ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x)
T * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3
+ (f = ((find_face L) y')) |- (((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = N') ==> (hold ((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))) = (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = N') ==> (hold ((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))
T c==> c= f0 cfind_face f1 f2 c= c==> c= cfind_face f1 f2 f0 c==> c= csplit_normal_list f1 f3 f0 f2 f4 f5 c==> c= cAPPEND creplace f3 cCONS cSND f5 cNIL f6 cCONS cFST f5 cNIL f7 chold c==> c~ cfinal_list f1 f3 c= f7 ccat creplace f3 cCONS f8 cNIL f6 cCONS f9 cNIL c==> c= csplit_normal_list f1 f3 f0 f2 f4 f5 c==> c= cAPPEND creplace f3 cCONS cSND f5 cNIL f6 cCONS cFST f5 cNIL f7 chold c==> c~ cfinal_list f1 f3 c= f7 ccat creplace f3 cCONS f8 cNIL f6 cCONS f9 cNIL
- (split = (((((split_normal_list L) r) f) y') ram2)) |- ((((find_face L) y') = f) = (((find_face L) y') = f))
T c==> c= f0 csplit_normal_list f1 f2 f3 f4 f5 c= c= cfind_face f1 f4 f3 c= cfind_face f1 f4 f3
- (_10514535 = _10514539) |- ((_10514536 = _10514540) ==> ((~ (_10514537 = _10514541)) \/ ((~ (_10514538 = _10514542)) \/ (((((l'z _10514535) _10514536) _10514537) _10514538) = ((((l'z _10514539) _10514540) _10514541) _10514542)))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c= cl'z f0 f2 f4 f6 cl'z f1 f3 f5 f7
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((~ ((final_list L) r)) ==> ((FST ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))))) ((prev_el r) z))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f9 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f4 f1 c, f7 f1 c, b3 cSND b2 cAPPEND creplace f1 cCONS cSND b2 cNIL f7 cCONS cFST b2 cNIL csplit_normal_list f4 f1 b1 f6 b0 cfind_face f4 f6 cprev_el f1 f2 ccat creplace f1 cCONS f9 cNIL f7 cCONS f8 cNIL
+ |- ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L)
T * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
+ |- (((!y. (!f. (!L. (!y'. (!z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F)))))))))))))))) ==> ((\y. (!f. (!L. (!y'. (!z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F)))))))))))))))) y)) = ((\y. (!f. (!L. (!y'. (!z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F)))))))))))))))) y))
T c= c==> ! ! ! ! ! ! c==> c= b3 b0 c==> c= cFST csplit_normal_list b2 f0 cfind_face b2 b0 b0 f1 f2 c==> c= cSND csplit_normal_list b2 f0 cfind_face b2 b0 b0 f1 f3 c==> c= cl'y b2 f0 b5 b3 c==> c= cl'z b2 f4 f0 b5 b4 c==> c= cprev_el f0 b4 f1 c==> c= cfind_face b2 b3 b1 c==> c= csplit_normal_list b2 f0 b1 b3 f1 csplit_normal_list b2 f0 b1 b3 f1 c==> c= cAPPEND creplace f0 cCONS cSND csplit_normal_list b2 f0 b1 b3 f1 cNIL f4 cCONS cFST csplit_normal_list b2 f0 b1 b3 f1 cNIL cAPPEND creplace f0 cCONS cSND csplit_normal_list b2 f0 b1 b3 f1 cNIL f4 cCONS cFST csplit_normal_list b2 f0 b1 b3 f1 cNIL c==> c~ c==> c~ cfinal_list b2 f0 c= ccat creplace f0 cCONS cSND csplit_normal_list b2 f0 b1 b0 f1 cNIL f4 cCONS cFST csplit_normal_list b2 f0 b1 b0 f1 cNIL ccat creplace f0 cCONS f3 cNIL f4 cCONS f2 cNIL cF * / ! ! ! ! ! c==> c= b3 b0 c==> c= cFST csplit_normal_list b2 f0 cfind_face b2 b0 b0 f1 f2 c==> c= cSND csplit_normal_list b2 f0 cfind_face b2 b0 b0 f1 f3 c==> c= cl'y b2 f0 b5 b3 c==> c= cl'z b2 f4 f0 b5 b4 c==> c= cprev_el f0 b4 f1 c==> c= cfind_face b2 b3 b1 c==> c= csplit_normal_list b2 f0 b1 b3 f1 csplit_normal_list b2 f0 b1 b3 f1 c==> c= cAPPEND creplace f0 cCONS cSND csplit_normal_list b2 f0 b1 b3 f1 cNIL f4 cCONS cFST csplit_normal_list b2 f0 b1 b3 f1 cNIL cAPPEND creplace f0 cCONS cSND csplit_normal_list b2 f0 b1 b3 f1 cNIL f4 cCONS cFST csplit_normal_list b2 f0 b1 b3 f1 cNIL c==> c~ c==> c~ cfinal_list b2 f0 c= ccat creplace f0 cCONS cSND csplit_normal_list b2 f0 b1 b0 f1 cNIL f4 cCONS cFST csplit_normal_list b2 f0 b1 b0 f1 cNIL ccat creplace f0 cCONS f3 cNIL f4 cCONS f2 cNIL cF f5 * / ! ! ! ! ! c==> c= b3 b0 c==> c= cFST csplit_normal_list b2 f0 cfind_face b2 b0 b0 f1 f2 c==> c= cSND csplit_normal_list b2 f0 cfind_face b2 b0 b0 f1 f3 c==> c= cl'y b2 f0 b5 b3 c==> c= cl'z b2 f4 f0 b5 b4 c==> c= cprev_el f0 b4 f1 c==> c= cfind_face b2 b3 b1 c==> c= csplit_normal_list b2 f0 b1 b3 f1 csplit_normal_list b2 f0 b1 b3 f1 c==> c= cAPPEND creplace f0 cCONS cSND csplit_normal_list b2 f0 b1 b3 f1 cNIL f4 cCONS cFST csplit_normal_list b2 f0 b1 b3 f1 cNIL cAPPEND creplace f0 cCONS cSND csplit_normal_list b2 f0 b1 b3 f1 cNIL f4 cCONS cFST csplit_normal_list b2 f0 b1 b3 f1 cNIL c==> c~ c==> c~ cfinal_list b2 f0 c= ccat creplace f0 cCONS cSND csplit_normal_list b2 f0 b1 b0 f1 cNIL f4 cCONS cFST csplit_normal_list b2 f0 b1 b0 f1 cNIL ccat creplace f0 cCONS f3 cNIL f4 cCONS f2 cNIL cF f5
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (split = (((((split_normal_list L) r) f) y') ram2)), (f = ((find_face L) y')), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((~ ((final_list L) r)) ==> ((FST ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 csplit_normal_list f4 f1 f9 f6 f0 c==> c= f9 cfind_face f4 f6 c==> c= f10 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f11 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cCOND cfinal_list f4 f1 c, f7 f1 c, b0 cSND f8 cAPPEND creplace f1 cCONS cSND f8 cNIL f7 cCONS cFST f8 cNIL ccat creplace f1 cCONS f11 cNIL f7 cCONS f10 cNIL
+ (~ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2), (((find_face L) y') = f) |- (~ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) = ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS f1) NIL))))
T c==> c~ c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 f2 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f1 f0 f2 f3 f4 cNIL ccat creplace f0 cCONS f6 cNIL f5 cCONS f7 cNIL c==> c= cprev_el f0 f8 f4 c==> c= cl'y f1 f0 f9 f10 c==> c= cl'z f1 f5 f0 f9 f8 c==> c= cSND csplit_normal_list f1 f0 cfind_face f1 f3 f3 f4 f6 c==> c= cfind_face f1 f10 f2 c~ c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f9 f3 cprev_el f0 cl'z f1 f5 f0 f9 cNIL f5 cCONS cFST csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f9 f3 cprev_el f0 cl'z f1 f5 f0 f9 cNIL ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 cfind_face f1 f3 f3 cprev_el f0 cl'z f1 f5 f0 f9 cNIL f5 cCONS f7 cNIL
+ |- (((~ ((final_list L) r)) ==> ((FST ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))))) ((prev_el r) z))))) ((((l'z L) N) r) x))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = ((~ ((final_list L) r)) ==> ((FST ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) y')) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c= c==> c~ cfinal_list f0 f1 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f1 c, f2 f1 c, b4 cSND b3 cAPPEND creplace f1 cCONS cSND b3 cNIL f2 cCONS cFST b3 cNIL csplit_normal_list f0 f1 b2 f3 b1 cfind_face f0 f3 cprev_el f1 b0 cl'z f0 f2 f1 f4 ccat creplace f1 cCONS f5 cNIL f2 cCONS f6 cNIL c==> c~ cfinal_list f0 f1 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f1 c, f2 f1 c, b5 cSND b4 cAPPEND creplace f1 cCONS cSND b4 cNIL f2 cCONS cFST b4 cNIL csplit_normal_list f0 f1 b3 b0 b2 cfind_face f0 b0 cprev_el f1 b1 cl'z f0 f2 f1 f4 f3 ccat creplace f1 cCONS f5 cNIL f2 cCONS f6 cNIL
+ (ram2 = ((prev_el r) z)) |- (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) z))) = f2) = ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2))
T c==> c= f0 cprev_el f1 f2 c= c= cSND csplit_normal_list f3 f1 cfind_face f3 f4 f4 cprev_el f1 f2 f5 c= cSND csplit_normal_list f3 f1 cfind_face f3 f4 f4 f0 f5
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ (~ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))), (y' = y), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2), (((find_face L) y') = f) |- ((((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) = ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL))) ==> F)
T c==> c~ c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 f2 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f1 f0 f2 f3 f4 cNIL ccat creplace f0 cCONS f6 cNIL f5 cCONS f7 cNIL c==> c= f8 f3 c==> c= cprev_el f0 f9 f4 c==> c= cl'y f1 f0 f10 f8 c==> c= cl'z f1 f5 f0 f10 f9 c==> c= cFST csplit_normal_list f1 f0 cfind_face f1 f3 f3 f4 f7 c==> c= cSND csplit_normal_list f1 f0 cfind_face f1 f3 f3 f4 f6 c==> c= cfind_face f1 f8 f2 c==> c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f10 cl'y f1 f0 f10 cprev_el f0 cl'z f1 f5 f0 f10 cNIL f5 cCONS cFST csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f10 cl'y f1 f0 f10 cprev_el f0 cl'z f1 f5 f0 f10 cNIL ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f10 cl'y f1 f0 f10 cprev_el f0 cl'z f1 f5 f0 f10 cNIL f5 cCONS cFST csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f10 cl'y f1 f0 f10 cprev_el f0 cl'z f1 f5 f0 f10 cNIL cF
+ ((\f1. (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))) f1) |- (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))
T c==> * / c= b0 cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 cprev_el f1 cl'z f0 f3 f1 f4 f5 c= f5 cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 cprev_el f1 cl'z f0 f3 f1 f4
- (((prev_el r) z) = ram2) |- ((y' = y) = (y' = y))
T c==> c= cprev_el f0 f1 f2 c= c= f3 f4 c= f3 f4
+ (y' = y), ((((l'y L) r) x) = y'), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) |- ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))))
T c==> c= f0 f1 c==> c= cl'y f2 f3 f4 f0 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f5 f6 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f5 f7 c==> c= cl'z f2 f8 f3 f4 f9 c==> c= cprev_el f3 f9 f5 c==> c= cfind_face f2 f0 f10 c==> c= csplit_normal_list f2 f3 f10 f0 f5 csplit_normal_list f2 f3 f10 f0 f5 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f5 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f5 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f5 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f5 cNIL c==> c~ cfinal_list f2 f3 c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f1 f5 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f1 f5 cNIL ccat creplace f3 cCONS f7 cNIL f8 cCONS f6 cNIL
+ (((prev_el r) z) = ram2), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) |- ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) z))) = f1)
T c==> c= cprev_el f0 f1 f2 c==> c= cFST csplit_normal_list f3 f0 cfind_face f3 f4 f4 f2 f5 c= cFST csplit_normal_list f3 f0 cfind_face f3 f4 f4 cprev_el f0 f1 f5
- (_10514530 = _10514533), (_10514529 = _10514532) |- ((~ (_10514531 = _10514534)) \/ ((((l'y _10514529) _10514530) _10514531) = (((l'y _10514532) _10514533) _10514534)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c= cl'y f2 f0 f4 cl'y f3 f1 f5
+ (y' = y), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) |- ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> (hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))))
T c==> c= f0 f1 c==> c= cl'y f2 f3 f4 f0 c==> c= cl'z f2 f5 f3 f4 f6 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f7 f8 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f7 f9 c==> c= cprev_el f3 f6 f7 c==> c= cfind_face f2 f0 f10 c==> c= csplit_normal_list f2 f3 f10 f0 f7 csplit_normal_list f2 f3 f10 f0 f7 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f7 cNIL f5 cCONS cFST csplit_normal_list f2 f3 f10 f0 f7 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f7 cNIL f5 cCONS cFST csplit_normal_list f2 f3 f10 f0 f7 cNIL chold c==> c~ cfinal_list f2 f3 c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f7 cNIL f5 cCONS cFST csplit_normal_list f2 f3 f10 f0 f7 cNIL ccat creplace f3 cCONS f9 cNIL f5 cCONS f8 cNIL
- (f = ((find_face L) y')) |- ((((prev_el r) z) = ram2) = (((prev_el r) z) = ram2))
T c==> c= f0 cfind_face f1 f2 c= c= cprev_el f3 f4 f5 c= cprev_el f3 f4 f5
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (f = ((find_face L) y')), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- (((\split. (split = (((((split_normal_list L) r) f) y') ram2))) split) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 cfind_face f4 f6 c==> c= f9 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f10 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> * / c= b0 csplit_normal_list f4 f1 f8 f6 f0 f11 c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cLET / cLET_END cCOND cfinal_list f4 f1 c, f7 f1 c, b1 cSND b0 cAPPEND creplace f1 cCONS cSND b0 cNIL f7 cCONS cFST b0 cNIL csplit_normal_list f4 f1 f8 f6 f0 ccat creplace f1 cCONS f10 cNIL f7 cCONS f9 cNIL
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (f = ((find_face L) y')), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((f = ((find_face L) y')) /\ ((~ ((final_list L) r)) ==> ((FST ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 cfind_face f4 f6 c==> c= f9 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f10 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c/\ c= f8 cfind_face f4 f6 c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f4 f1 c, f7 f1 c, b2 cSND b1 cAPPEND creplace f1 cCONS cSND b1 cNIL f7 cCONS cFST b1 cNIL csplit_normal_list f4 f1 b0 f6 f0 cfind_face f4 f6 ccat creplace f1 cCONS f10 cNIL f7 cCONS f9 cNIL
+ (~ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2), (((find_face L) y') = f) |- (~ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) = ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL))))
T c==> c~ c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 f2 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f1 f0 f2 f3 f4 cNIL ccat creplace f0 cCONS f6 cNIL f5 cCONS f7 cNIL c==> c= cprev_el f0 f8 f4 c==> c= cl'y f1 f0 f9 f10 c==> c= cl'z f1 f5 f0 f9 f8 c==> c= cFST csplit_normal_list f1 f0 cfind_face f1 f3 f3 f4 f7 c==> c= cSND csplit_normal_list f1 f0 cfind_face f1 f3 f3 f4 f6 c==> c= cfind_face f1 f10 f2 c~ c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f9 f3 cprev_el f0 cl'z f1 f5 f0 f9 cNIL f5 cCONS cFST csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f9 f3 cprev_el f0 cl'z f1 f5 f0 f9 cNIL ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 cfind_face f1 f3 f3 cprev_el f0 cl'z f1 f5 f0 f9 cNIL f5 cCONS cFST csplit_normal_list f1 f0 cfind_face f1 f3 f3 cprev_el f0 cl'z f1 f5 f0 f9 cNIL
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (split = (((((split_normal_list L) r) f) y') ram2)), (f = ((find_face L) y')), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), ((\N'. (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))) N') |- (((\N'. (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))) N') /\ ((~ ((final_list L) r)) ==> ((FST ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 csplit_normal_list f4 f1 f9 f6 f0 c==> c= f9 cfind_face f4 f6 c==> c= f10 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f11 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> * / c= b0 cAPPEND creplace f1 cCONS cSND f8 cNIL f7 cCONS cFST f8 cNIL f12 c/\ * / c= b0 cAPPEND creplace f1 cCONS cSND f8 cNIL f7 cCONS cFST f8 cNIL f12 c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cCOND cfinal_list f4 f1 c, f7 f1 c, b0 cSND f8 cAPPEND creplace f1 cCONS cSND f8 cNIL f7 cCONS cFST f8 cNIL ccat creplace f1 cCONS f11 cNIL f7 cCONS f10 cNIL
+ |- ((!ram2. (!y. (!f. (!L. (!y'. (!z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! c==> c= b4 b1 c==> c= cFST csplit_normal_list b3 f0 cfind_face b3 b1 b1 b0 f1 c==> c= cSND csplit_normal_list b3 f0 cfind_face b3 b1 b1 b0 f2 c==> c= cl'y b3 f0 b6 b4 c==> c= cl'z b3 f3 f0 b6 b5 c==> c= cprev_el f0 b5 b0 c==> c= cfind_face b3 b4 b2 c==> c= csplit_normal_list b3 f0 b2 b4 b0 csplit_normal_list b3 f0 b2 b4 b0 c==> c= cAPPEND creplace f0 cCONS cSND csplit_normal_list b3 f0 b2 b4 b0 cNIL f3 cCONS cFST csplit_normal_list b3 f0 b2 b4 b0 cNIL cAPPEND creplace f0 cCONS cSND csplit_normal_list b3 f0 b2 b4 b0 cNIL f3 cCONS cFST csplit_normal_list b3 f0 b2 b4 b0 cNIL c==> c~ cfinal_list b3 f0 c= ccat creplace f0 cCONS cSND csplit_normal_list b3 f0 b2 b1 b0 cNIL f3 cCONS cFST csplit_normal_list b3 f0 b2 b1 b0 cNIL ccat creplace f0 cCONS f2 cNIL f3 cCONS f1 cNIL cT
- ((((l'y L) r) x) = y') |- (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))) = f2) = ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))) = f2))
T c==> c= cl'y f0 f1 f2 f3 c= c= cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f5 f1 f2 f6 c= cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f5 f1 f2 f6
+ (z = ((((l'z L) N) r) x)) |- (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))) = f1) = ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) z))) = f1))
T c==> c= f0 cl'z f1 f2 f3 f4 c= c= cFST csplit_normal_list f1 f3 cfind_face f1 f5 f5 cprev_el f3 cl'z f1 f2 f3 f4 f6 c= cFST csplit_normal_list f1 f3 cfind_face f1 f5 f5 cprev_el f3 f0 f6
- (_10514520 = _10514523) |- ((_10514521 = _10514524) ==> ((~ (_10514519 = _10514522)) \/ ((((replace _10514519) _10514520) _10514521) = (((replace _10514522) _10514523) _10514524))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c= creplace f4 f0 f2 creplace f5 f1 f3
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (split = (((((split_normal_list L) r) f) y') ram2)), (f = ((find_face L) y')), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- (!N'. (((\N'. (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))) N') ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 csplit_normal_list f4 f1 f9 f6 f0 c==> c= f9 cfind_face f4 f6 c==> c= f10 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f11 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 ! c==> * / c= b1 cAPPEND creplace f1 cCONS cSND f8 cNIL f7 cCONS cFST f8 cNIL b0 c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cCOND cfinal_list f4 f1 c, f7 f1 c, b1 cSND f8 cAPPEND creplace f1 cCONS cSND f8 cNIL f7 cCONS cFST f8 cNIL ccat creplace f1 cCONS f11 cNIL f7 cCONS f10 cNIL
+ |- ((\ram2. (!y. (!f. (!L. (!y'. (!z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F))))))))))))))))) ram2)
T * / ! ! ! ! ! ! c==> c= b4 b1 c==> c= cFST csplit_normal_list b3 f0 cfind_face b3 b1 b1 b0 f1 c==> c= cSND csplit_normal_list b3 f0 cfind_face b3 b1 b1 b0 f2 c==> c= cl'y b3 f0 b6 b4 c==> c= cl'z b3 f3 f0 b6 b5 c==> c= cprev_el f0 b5 b0 c==> c= cfind_face b3 b4 b2 c==> c= csplit_normal_list b3 f0 b2 b4 b0 csplit_normal_list b3 f0 b2 b4 b0 c==> c= cAPPEND creplace f0 cCONS cSND csplit_normal_list b3 f0 b2 b4 b0 cNIL f3 cCONS cFST csplit_normal_list b3 f0 b2 b4 b0 cNIL cAPPEND creplace f0 cCONS cSND csplit_normal_list b3 f0 b2 b4 b0 cNIL f3 cCONS cFST csplit_normal_list b3 f0 b2 b4 b0 cNIL c==> c~ c==> c~ cfinal_list b3 f0 c= ccat creplace f0 cCONS cSND csplit_normal_list b3 f0 b2 b1 b0 cNIL f3 cCONS cFST csplit_normal_list b3 f0 b2 b1 b0 cNIL ccat creplace f0 cCONS f2 cNIL f3 cCONS f1 cNIL cF f4
- (_10514535 = _10514539) |- ((_10514535 = _10514539) /\ ((~ (_10514536 = _10514540)) \/ ((~ (_10514537 = _10514541)) \/ ((~ (_10514538 = _10514542)) \/ (((((l'z _10514535) _10514536) _10514537) _10514538) = ((((l'z _10514539) _10514540) _10514541) _10514542))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c= cl'z f0 f2 f4 f6 cl'z f1 f3 f5 f7
- |- ((~ (_10514520 = _10514523)) \/ ((~ (_10514521 = _10514524)) \/ ((~ (_10514519 = _10514522)) \/ ((((replace _10514519) _10514520) _10514521) = (((replace _10514522) _10514523) _10514524)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c= creplace f4 f0 f2 creplace f5 f1 f3
+ (y' = y), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) |- ((((prev_el r) z) = ram2) /\ ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))
T c==> c= f0 f1 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f5 f2 f6 f0 c==> c= cl'z f5 f7 f2 f6 f3 c==> c= cFST csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f8 c==> c= cSND csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f9 c/\ c= cprev_el f2 f3 f4 c==> c= cfind_face f5 f0 f10 c==> c= csplit_normal_list f5 f2 f10 f0 f4 csplit_normal_list f5 f2 f10 f0 f4 c==> c= cAPPEND creplace f2 cCONS cSND csplit_normal_list f5 f2 f10 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f5 f2 f10 f0 f4 cNIL cAPPEND creplace f2 cCONS cSND csplit_normal_list f5 f2 f10 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f5 f2 f10 f0 f4 cNIL c==> c~ cfinal_list f5 f2 c= ccat creplace f2 cCONS cSND csplit_normal_list f5 f2 f10 f1 f4 cNIL f7 cCONS cFST csplit_normal_list f5 f2 f10 f1 f4 cNIL ccat creplace f2 cCONS f9 cNIL f7 cCONS f8 cNIL
+ |- ((y' = (((l'y L) r) x)) = ((\y'. (y' = (((l'y L) r) x))) y'))
T c= c= f0 cl'y f1 f2 f3 * / c= b0 cl'y f1 f2 f3 f0
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((((\f. (f = ((find_face L) y'))) f) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) = T)
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f9 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c= c==> * / c= b0 cfind_face f4 f6 f10 c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f4 f1 c, f7 f1 c, b2 cSND b1 cAPPEND creplace f1 cCONS cSND b1 cNIL f7 cCONS cFST b1 cNIL csplit_normal_list f4 f1 b0 f6 f0 cfind_face f4 f6 ccat creplace f1 cCONS f9 cNIL f7 cCONS f8 cNIL cT
+ |- ((\r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))) r)
T * / ! c= ctransform_list f0 b1 c, f1 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b0 c, f1 b0 c, b7 cSND b6 cAPPEND creplace b0 cCONS cSND b6 cNIL f1 cCONS cFST b6 cNIL csplit_normal_list f0 b0 b5 b2 b4 cfind_face f0 b2 cprev_el b0 b3 cl'z f0 f1 b0 b1 cl'y f0 b0 b1 f2
+ ((((l'y L) r) x) = y') |- (y' = (((l'y L) r) x))
T c==> c= cl'y f0 f1 f2 f3 c= f3 cl'y f0 f1 f2
+ |- ((!y'. (!z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))))))))))) = T)
T c= ! ! ! c==> c= b0 f0 c==> c= cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 f3 f4 c==> c= cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 f3 f5 c==> c= cl'y f1 f2 b2 b0 c==> c= cl'z f1 f6 f2 b2 b1 c==> c= cprev_el f2 b1 f3 c==> c= cfind_face f1 b0 f7 c==> c= csplit_normal_list f1 f2 f7 b0 f3 csplit_normal_list f1 f2 f7 b0 f3 c==> c= cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f7 b0 f3 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f7 b0 f3 cNIL cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f7 b0 f3 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f7 b0 f3 cNIL c==> c~ cfinal_list f1 f2 c= ccat creplace f2 cCONS cSND csplit_normal_list f1 f2 f7 f0 f3 cNIL f6 cCONS cFST csplit_normal_list f1 f2 f7 f0 f3 cNIL ccat creplace f2 cCONS f5 cNIL f6 cCONS f4 cNIL cT
+ |- (((!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) ==> ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x)) = ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x))
T c= c==> ! ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ (y' = y), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) |- (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) /\ (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))))))
T c==> c= f0 f1 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f5 c/\ c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f5 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f6 c==> c= cl'y f2 f3 f7 f0 c==> c= cl'z f2 f8 f3 f7 f9 c==> c= cprev_el f3 f9 f4 c==> c= cfind_face f2 f0 f10 c==> c= csplit_normal_list f2 f3 f10 f0 f4 csplit_normal_list f2 f3 f10 f0 f4 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL c==> c~ cfinal_list f2 f3 c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f1 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f1 f4 cNIL ccat creplace f3 cCONS f6 cNIL f8 cCONS f5 cNIL
+ (y' = y), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2), (((find_face L) y') = f) |- (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) /\ ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> (hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))
T c==> c= f0 f1 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f5 f2 f6 f0 c==> c= cl'z f5 f7 f2 f6 f3 c==> c= csplit_normal_list f5 f2 f8 f0 f4 csplit_normal_list f5 f2 f8 f0 f4 c==> c= cFST csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f9 c==> c= cSND csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f10 c==> c= cfind_face f5 f0 f8 c/\ c= csplit_normal_list f5 f2 f8 f0 f4 csplit_normal_list f5 f2 f8 f0 f4 c==> c= cAPPEND creplace f2 cCONS cSND csplit_normal_list f5 f2 f8 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f5 f2 f8 f0 f4 cNIL cAPPEND creplace f2 cCONS cSND csplit_normal_list f5 f2 f8 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f5 f2 f8 f0 f4 cNIL chold c==> c~ cfinal_list f5 f2 c= cAPPEND creplace f2 cCONS cSND csplit_normal_list f5 f2 f8 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f5 f2 f8 f0 f4 cNIL ccat creplace f2 cCONS f10 cNIL f7 cCONS f9 cNIL
+ (y = (((l'y L) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) /\ ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))
T c==> c= f0 cl'y f1 f2 f3 c==> c= f4 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3 c/\ c= f4 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3 cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f1 f2 c= cntrans f1 f5 f2 f3 cNUMERAL cBIT1 c_0 ccat creplace f2 cCONS b1 cNIL f5 cCONS b0 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3
- (((prev_el r) z) = ram2) |- (F = F)
T c==> c= cprev_el f0 f1 f2 c= cF cF
+ (split = (((((split_normal_list L) r) f) y') ram2)) |- (((~ ((final_list L) r)) ==> ((FST ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = ((~ ((final_list L) r)) ==> ((FST ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) split)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 csplit_normal_list f1 f2 f3 f4 f5 c= c==> c~ cfinal_list f1 f2 c= cFST cLET / cLET_END cLET / cLET_END cCOND cfinal_list f1 f2 c, f6 f2 c, b1 cSND b0 cAPPEND creplace f2 cCONS cSND b0 cNIL f6 cCONS cFST b0 cNIL csplit_normal_list f1 f2 f3 f4 f5 ccat creplace f2 cCONS f7 cNIL f6 cCONS f8 cNIL c==> c~ cfinal_list f1 f2 c= cFST cLET / cLET_END cLET / cLET_END cCOND cfinal_list f1 f2 c, f6 f2 c, b1 cSND b0 cAPPEND creplace f2 cCONS cSND b0 cNIL f6 cCONS cFST b0 cNIL f0 ccat creplace f2 cCONS f7 cNIL f6 cCONS f8 cNIL
+ |- ((!r. (!ram2. (!y. (!f. (!L. (!y'. (!z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! c==> c= b5 b2 c==> c= cFST csplit_normal_list b4 b0 cfind_face b4 b2 b2 b1 f0 c==> c= cSND csplit_normal_list b4 b0 cfind_face b4 b2 b2 b1 f1 c==> c= cl'y b4 b0 b7 b5 c==> c= cl'z b4 f2 b0 b7 b6 c==> c= cprev_el b0 b6 b1 c==> c= cfind_face b4 b5 b3 c==> c= csplit_normal_list b4 b0 b3 b5 b1 csplit_normal_list b4 b0 b3 b5 b1 c==> c= cAPPEND creplace b0 cCONS cSND csplit_normal_list b4 b0 b3 b5 b1 cNIL f2 cCONS cFST csplit_normal_list b4 b0 b3 b5 b1 cNIL cAPPEND creplace b0 cCONS cSND csplit_normal_list b4 b0 b3 b5 b1 cNIL f2 cCONS cFST csplit_normal_list b4 b0 b3 b5 b1 cNIL c==> c~ cfinal_list b4 b0 c= ccat creplace b0 cCONS cSND csplit_normal_list b4 b0 b3 b2 b1 cNIL f2 cCONS cFST csplit_normal_list b4 b0 b3 b2 b1 cNIL ccat creplace b0 cCONS f1 cNIL f2 cCONS f0 cNIL cT
- (~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))), (y' = y), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2), (((find_face L) y') = f), (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) |- F
T c==> c~ c==> c~ cfinal_list f0 f1 c= ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL ccat creplace f1 cCONS f6 cNIL f5 cCONS f7 cNIL c==> c= f8 f3 c==> c= cprev_el f1 f9 f4 c==> c= cl'y f0 f1 f10 f8 c==> c= cl'z f0 f5 f1 f10 f9 c==> c= csplit_normal_list f0 f1 f2 f8 f4 csplit_normal_list f0 f1 f2 f8 f4 c==> c= cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 f7 c==> c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 f6 c==> c= cfind_face f0 f8 f2 c==> c= cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f8 f4 cNIL f5 cCONS cFST csplit_normal_list f0 f1 f2 f8 f4 cNIL cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f8 f4 cNIL f5 cCONS cFST csplit_normal_list f0 f1 f2 f8 f4 cNIL cF
+ (y = (((l'y L) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))
T c==> c= f0 cl'y f1 f2 f3 c==> c= f4 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3 c==> c= f6 cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3 c==> c~ cfinal_list f1 f2 c= cntrans f1 f5 f2 f3 cNUMERAL cBIT1 c_0 ccat creplace f2 cCONS f6 cNIL f5 cCONS f4 cNIL
+ |- ((f = ((find_face L) y')) ==> (?f. (f = ((find_face L) y'))))
T c==> c= f0 cfind_face f1 f2 c? / c= b0 cfind_face f1 f2
+ |- ((f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) ==> (?f2. (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))
T c==> c= f0 cSND csplit_normal_list f1 f2 cfind_face f1 f3 f3 cprev_el f2 cl'z f1 f4 f2 f5 c? / c= b0 cSND csplit_normal_list f1 f2 cfind_face f1 f3 f3 cprev_el f2 cl'z f1 f4 f2 f5
+ (y' = y), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2), (((find_face L) y') = f) |- (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) /\ ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))
T c==> c= f0 f1 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f5 f2 f6 f0 c==> c= cl'z f5 f7 f2 f6 f3 c==> c= csplit_normal_list f5 f2 f8 f0 f4 csplit_normal_list f5 f2 f8 f0 f4 c==> c= cFST csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f9 c==> c= cSND csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f10 c==> c= cfind_face f5 f0 f8 c/\ c= csplit_normal_list f5 f2 f8 f0 f4 csplit_normal_list f5 f2 f8 f0 f4 c==> c= cAPPEND creplace f2 cCONS cSND csplit_normal_list f5 f2 f8 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f5 f2 f8 f0 f4 cNIL cAPPEND creplace f2 cCONS cSND csplit_normal_list f5 f2 f8 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f5 f2 f8 f0 f4 cNIL c==> c~ cfinal_list f5 f2 c= ccat creplace f2 cCONS cSND csplit_normal_list f5 f2 f8 f1 f4 cNIL f7 cCONS cFST csplit_normal_list f5 f2 f8 f1 f4 cNIL ccat creplace f2 cCONS f10 cNIL f7 cCONS f9 cNIL
+ |- (((!x'. (((\y. (y = (((l'y L) r) x))) x') ==> ((LET (\y. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (((l'y L) r) x)))) ==> ((?y. (y = (((l'y L) r) x))) ==> ((LET (\y. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (((l'y L) r) x)))) = ((?y. (y = (((l'y L) r) x))) ==> ((LET (\y. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (((l'y L) r) x))))
T c= c==> ! c==> * / c= b1 cl'y f0 f1 f2 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f0 f1 c= cntrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 ccat creplace f1 cCONS b3 cNIL f3 cCONS b2 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 b1 b1 cprev_el f1 cl'z f0 f3 f1 f2 cFST csplit_normal_list f0 f1 cfind_face f0 b1 b1 cprev_el f1 cl'z f0 f3 f1 f2 cl'y f0 f1 f2 c==> c? / c= b0 cl'y f0 f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f0 f1 c= cntrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 ccat creplace f1 cCONS b2 cNIL f3 cCONS b1 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 b0 b0 cprev_el f1 cl'z f0 f3 f1 f2 cFST csplit_normal_list f0 f1 cfind_face f0 b0 b0 cprev_el f1 cl'z f0 f3 f1 f2 cl'y f0 f1 f2 c==> c? / c= b0 cl'y f0 f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f0 f1 c= cntrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 ccat creplace f1 cCONS b2 cNIL f3 cCONS b1 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 b0 b0 cprev_el f1 cl'z f0 f3 f1 f2 cFST csplit_normal_list f0 f1 cfind_face f0 b0 b0 cprev_el f1 cl'z f0 f3 f1 f2 cl'y f0 f1 f2
- (_10514560 = _10514562) |- ((_10514559 = _10514561) ==> (((CONS _10514559) _10514560) = ((CONS _10514561) _10514562)))
T c==> c= f0 f1 c==> c= f2 f3 c= cCONS f2 f0 cCONS f3 f1
+ (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), ((\ram2. (ram2 = ((prev_el r) z))) ram2) |- (((\ram2. (ram2 = ((prev_el r) z))) ram2) /\ ((~ ((final_list L) r)) ==> ((FST ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))))) ((prev_el r) z))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 cl'y f1 f2 f3 c==> c= f4 cl'y f1 f2 f3 c==> c= f5 cl'z f1 f6 f2 f3 c==> c= f7 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f6 f2 f3 c==> c= f8 cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f6 f2 f3 c==> * / c= b0 cprev_el f2 f5 f9 c/\ * / c= b0 cprev_el f2 f5 f9 c==> c~ cfinal_list f1 f2 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f1 f2 c, f6 f2 c, b3 cSND b2 cAPPEND creplace f2 cCONS cSND b2 cNIL f6 cCONS cFST b2 cNIL csplit_normal_list f1 f2 b1 f4 b0 cfind_face f1 f4 cprev_el f2 f5 ccat creplace f2 cCONS f8 cNIL f6 cCONS f7 cNIL
- (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- ((((prev_el r) z) = ram2) = (((prev_el r) z) = ram2))
T c==> c= f0 cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL c= c= cprev_el f1 f4 f5 c= cprev_el f1 f4 f5
+ (y = (((l'y L) r) x)) |- ((y = (((l'y L) r) x)) /\ ((LET (\y. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (((l'y L) r) x)))
T c==> c= f0 cl'y f1 f2 f3 c/\ c= f0 cl'y f1 f2 f3 cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f1 f2 c= cntrans f1 f4 f2 f3 cNUMERAL cBIT1 c_0 ccat creplace f2 cCONS b2 cNIL f4 cCONS b1 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 b0 b0 cprev_el f2 cl'z f1 f4 f2 f3 cFST csplit_normal_list f1 f2 cfind_face f1 b0 b0 cprev_el f2 cl'z f1 f4 f2 f3 cl'y f1 f2 f3
+ |- (((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))))))) = T)
T c= c==> c= f0 f1 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f5 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f6 c==> c= cl'y f2 f3 f7 f0 c==> c= cl'z f2 f8 f3 f7 f9 c==> c= cprev_el f3 f9 f4 c==> c= cfind_face f2 f0 f10 c==> c= csplit_normal_list f2 f3 f10 f0 f4 csplit_normal_list f2 f3 f10 f0 f4 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL c==> c~ cfinal_list f2 f3 c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f1 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f1 f4 cNIL ccat creplace f3 cCONS f6 cNIL f8 cCONS f5 cNIL cT
+ (y' = y), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) |- ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> (hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))
T c==> c= f0 f1 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f5 f2 f6 f0 c==> c= cl'z f5 f7 f2 f6 f3 c==> c= cFST csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f8 c==> c= cSND csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f9 c==> c= cfind_face f5 f0 f10 c==> c= csplit_normal_list f5 f2 f10 f0 f4 csplit_normal_list f5 f2 f10 f0 f4 c==> c= cAPPEND creplace f2 cCONS cSND csplit_normal_list f5 f2 f10 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f5 f2 f10 f0 f4 cNIL cAPPEND creplace f2 cCONS cSND csplit_normal_list f5 f2 f10 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f5 f2 f10 f0 f4 cNIL chold c==> c~ cfinal_list f5 f2 c= cAPPEND creplace f2 cCONS cSND csplit_normal_list f5 f2 f10 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f5 f2 f10 f0 f4 cNIL ccat creplace f2 cCONS f9 cNIL f7 cCONS f8 cNIL
- (_10514550 = _10514555), (_10514548 = _10514553), (_10514549 = _10514554), (_10514547 = _10514552) |- ((_10514551 = _10514556) ==> ((((((split_normal_list _10514547) _10514548) _10514549) _10514550) _10514551) = (((((split_normal_list _10514552) _10514553) _10514554) _10514555) _10514556)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c= csplit_normal_list f6 f2 f4 f0 f8 csplit_normal_list f7 f3 f5 f1 f9
+ (y' = y), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) |- (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F)))))))
T c==> c= f0 f1 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f5 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f6 c==> c= cl'y f2 f3 f7 f0 c==> c= cl'z f2 f8 f3 f7 f9 c==> c= cprev_el f3 f9 f4 c==> c= cfind_face f2 f0 f10 c==> c= csplit_normal_list f2 f3 f10 f0 f4 csplit_normal_list f2 f3 f10 f0 f4 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL c==> c~ c==> c~ cfinal_list f2 f3 c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f1 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f1 f4 cNIL ccat creplace f3 cCONS f6 cNIL f8 cCONS f5 cNIL cF
+ (y' = (((l'y L) r) x)) |- (((~ ((final_list L) r)) ==> ((FST ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) y')) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = ((~ ((final_list L) r)) ==> ((FST ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 cl'y f1 f2 f3 c= c==> c~ cfinal_list f1 f2 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f1 f2 c, f4 f2 c, b5 cSND b4 cAPPEND creplace f2 cCONS cSND b4 cNIL f4 cCONS cFST b4 cNIL csplit_normal_list f1 f2 b3 b0 b2 cfind_face f1 b0 cprev_el f2 b1 cl'z f1 f4 f2 f3 f0 ccat creplace f2 cCONS f5 cNIL f4 cCONS f6 cNIL c==> c~ cfinal_list f1 f2 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f1 f2 c, f4 f2 c, b5 cSND b4 cAPPEND creplace f2 cCONS cSND b4 cNIL f4 cCONS cFST b4 cNIL csplit_normal_list f1 f2 b3 b0 b2 cfind_face f1 b0 cprev_el f2 b1 cl'z f1 f4 f2 f3 cl'y f1 f2 f3 ccat creplace f2 cCONS f5 cNIL f4 cCONS f6 cNIL
- (_10514519 = _10514522), (_10514520 = _10514523), (_10514521 = _10514524) |- ((_10514519 = _10514522) /\ ((((replace _10514519) _10514520) _10514521) = (((replace _10514522) _10514523) _10514524)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f0 f1 c= creplace f0 f2 f4 creplace f1 f3 f5
+ (y' = y), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2), (((find_face L) y') = f) |- ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 f1 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f5 f2 f6 f0 c==> c= cl'z f5 f7 f2 f6 f3 c==> c= cFST csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f8 c==> c= cSND csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f9 c==> c= cfind_face f5 f0 f10 c==> c= cAPPEND creplace f2 cCONS cSND csplit_normal_list f5 f2 f10 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f5 f2 f10 f0 f4 cNIL cAPPEND creplace f2 cCONS cSND csplit_normal_list f5 f2 f10 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f5 f2 f10 f0 f4 cNIL c==> c~ cfinal_list f5 f2 c= ccat creplace f2 cCONS cSND csplit_normal_list f5 f2 f10 f1 f4 cNIL f7 cCONS cFST csplit_normal_list f5 f2 f10 f1 f4 cNIL ccat creplace f2 cCONS f9 cNIL f7 cCONS f8 cNIL
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ (((((l'z L) N) r) x) = z) |- (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) z))) = f2) = ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))) = f2))
T c==> c= cl'z f0 f1 f2 f3 f4 c= c= cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 f4 f6 c= cSND csplit_normal_list f0 f2 cfind_face f0 f5 f5 cprev_el f2 cl'z f0 f1 f2 f3 f6
+ ((\y'. (y' = (((l'y L) r) x))) y') |- (((y' = (((l'y L) r) x)) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) = ((~ ((final_list L) r)) ==> ((FST ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> * / c= b0 cl'y f0 f1 f2 f3 c= c==> c= f3 cl'y f0 f1 f2 c==> c~ cfinal_list f0 f1 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f1 c, f4 f1 c, b5 cSND b4 cAPPEND creplace f1 cCONS cSND b4 cNIL f4 cCONS cFST b4 cNIL csplit_normal_list f0 f1 b3 b0 b2 cfind_face f0 b0 cprev_el f1 b1 cl'z f0 f4 f1 f2 cl'y f0 f1 f2 ccat creplace f1 cCONS f5 cNIL f4 cCONS f6 cNIL c==> c~ cfinal_list f0 f1 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f1 c, f4 f1 c, b5 cSND b4 cAPPEND creplace f1 cCONS cSND b4 cNIL f4 cCONS cFST b4 cNIL csplit_normal_list f0 f1 b3 b0 b2 cfind_face f0 b0 cprev_el f1 b1 cl'z f0 f4 f1 f2 cl'y f0 f1 f2 ccat creplace f1 cCONS f5 cNIL f4 cCONS f6 cNIL
+ (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) /\ (?f1. (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))
T c==> c= f0 cFST csplit_normal_list f1 f2 cfind_face f1 f3 f3 cprev_el f2 cl'z f1 f4 f2 f5 c/\ c= f0 cFST csplit_normal_list f1 f2 cfind_face f1 f3 f3 cprev_el f2 cl'z f1 f4 f2 f5 c? / c= b0 cFST csplit_normal_list f1 f2 cfind_face f1 f3 f3 cprev_el f2 cl'z f1 f4 f2 f5
- (_10514550 = _10514555), (_10514548 = _10514553), (_10514549 = _10514554), (_10514547 = _10514552) |- ((~ (_10514551 = _10514556)) \/ ((((((split_normal_list _10514547) _10514548) _10514549) _10514550) _10514551) = (((((split_normal_list _10514552) _10514553) _10514554) _10514555) _10514556)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c= csplit_normal_list f6 f2 f4 f0 f8 csplit_normal_list f7 f3 f5 f1 f9
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = N') ==> (hold ((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))))
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f9 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f10 cAPPEND creplace f1 cCONS cSND f11 cNIL f7 cCONS cFST f11 cNIL c==> c= cl'z f4 f7 f1 f5 f2 c==> c= cprev_el f1 f2 f0 c==> c= cfind_face f4 f6 f12 c==> c= csplit_normal_list f4 f1 f12 f6 f0 f11 c==> c= cAPPEND creplace f1 cCONS cSND f11 cNIL f7 cCONS cFST f11 cNIL f10 chold c==> c~ cfinal_list f4 f1 c= f10 ccat creplace f1 cCONS f9 cNIL f7 cCONS f8 cNIL
+ (y = (((l'y L) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) ==> ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))
T c==> c= f0 cl'y f1 f2 f3 c==> c= f4 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3 c==> c= f6 cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3 cLET / cLET_END c==> c~ cfinal_list f1 f2 c= cntrans f1 f5 f2 f3 cNUMERAL cBIT1 c_0 ccat creplace f2 cCONS b0 cNIL f5 cCONS f4 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3
+ (((((l'z L) N) r) x) = z) |- ((~ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y')) y) ((prev_el r) z)))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y')) y) ((prev_el r) z)))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = (~ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y')) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y')) y) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= cl'z f0 f1 f2 f3 f4 c= c~ c= ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f6 cprev_el f2 f4 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f6 cprev_el f2 f4 cNIL ccat creplace f2 cCONS f7 cNIL f1 cCONS f8 cNIL c~ c= ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 cfind_face f0 f5 f6 cprev_el f2 cl'z f0 f1 f2 f3 cNIL f1 cCONS cFST csplit_normal_list f0 f2 cfind_face f0 f5 f6 cprev_el f2 cl'z f0 f1 f2 f3 cNIL ccat creplace f2 cCONS f7 cNIL f1 cCONS f8 cNIL
+ |- (((?y'. (y' = (((l'y L) r) x))) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) = ((~ ((final_list L) r)) ==> ((FST ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c= c==> c? / c= b0 cl'y f0 f1 f2 c==> c~ cfinal_list f0 f1 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f1 c, f3 f1 c, b5 cSND b4 cAPPEND creplace f1 cCONS cSND b4 cNIL f3 cCONS cFST b4 cNIL csplit_normal_list f0 f1 b3 b0 b2 cfind_face f0 b0 cprev_el f1 b1 cl'z f0 f3 f1 f2 cl'y f0 f1 f2 ccat creplace f1 cCONS f4 cNIL f3 cCONS f5 cNIL c==> c~ cfinal_list f0 f1 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f1 c, f3 f1 c, b5 cSND b4 cAPPEND creplace f1 cCONS cSND b4 cNIL f3 cCONS cFST b4 cNIL csplit_normal_list f0 f1 b3 b0 b2 cfind_face f0 b0 cprev_el f1 b1 cl'z f0 f3 f1 f2 cl'y f0 f1 f2 ccat creplace f1 cCONS f4 cNIL f3 cCONS f5 cNIL
+ (y = (((l'y L) r) x)) |- ((LET (\y. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) y)
T c==> c= f0 cl'y f1 f2 f3 cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f1 f2 c= cntrans f1 f4 f2 f3 cNUMERAL cBIT1 c_0 ccat creplace f2 cCONS b2 cNIL f4 cCONS b1 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 b0 b0 cprev_el f2 cl'z f1 f4 f2 f3 cFST csplit_normal_list f1 f2 cfind_face f1 b0 b0 cprev_el f2 cl'z f1 f4 f2 f3 f0
+ (z = ((((l'z L) N) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) z))) = f1)
T c==> c= f0 cl'z f1 f2 f3 f4 c==> c= f5 cFST csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f2 f3 f4 c= cFST csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 f0 f5
+ |- ((!z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))))))))) = T)
T c= ! ! c==> c= f0 f1 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f5 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f6 c==> c= cl'y f2 f3 b1 f0 c==> c= cl'z f2 f7 f3 b1 b0 c==> c= cprev_el f3 b0 f4 c==> c= cfind_face f2 f0 f8 c==> c= csplit_normal_list f2 f3 f8 f0 f4 csplit_normal_list f2 f3 f8 f0 f4 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f8 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f2 f3 f8 f0 f4 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f8 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f2 f3 f8 f0 f4 cNIL c==> c~ cfinal_list f2 f3 c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 f8 f1 f4 cNIL f7 cCONS cFST csplit_normal_list f2 f3 f8 f1 f4 cNIL ccat creplace f3 cCONS f6 cNIL f7 cCONS f5 cNIL cT
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (f = ((find_face L) y')), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((split = (((((split_normal_list L) r) f) y') ram2)) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 cfind_face f4 f6 c==> c= f9 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f10 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f11 csplit_normal_list f4 f1 f8 f6 f0 c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cLET / cLET_END cCOND cfinal_list f4 f1 c, f7 f1 c, b1 cSND b0 cAPPEND creplace f1 cCONS cSND b0 cNIL f7 cCONS cFST b0 cNIL csplit_normal_list f4 f1 f8 f6 f0 ccat creplace f1 cCONS f10 cNIL f7 cCONS f9 cNIL
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (f = ((find_face L) y')), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((?split. (split = (((((split_normal_list L) r) f) y') ram2))) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 cfind_face f4 f6 c==> c= f9 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f10 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c? / c= b0 csplit_normal_list f4 f1 f8 f6 f0 c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cLET / cLET_END cCOND cfinal_list f4 f1 c, f7 f1 c, b1 cSND b0 cAPPEND creplace f1 cCONS cSND b0 cNIL f7 cCONS cFST b0 cNIL csplit_normal_list f4 f1 f8 f6 f0 ccat creplace f1 cCONS f10 cNIL f7 cCONS f9 cNIL
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (f = ((find_face L) y')), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- (!split. (((\split. (split = (((((split_normal_list L) r) f) y') ram2))) split) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 cfind_face f4 f6 c==> c= f9 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f10 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 ! c==> * / c= b1 csplit_normal_list f4 f1 f8 f6 f0 b0 c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cLET / cLET_END cCOND cfinal_list f4 f1 c, f7 f1 c, b1 cSND b1 cAPPEND creplace f1 cCONS cSND b1 cNIL f7 cCONS cFST b1 cNIL csplit_normal_list f4 f1 f8 f6 f0 ccat creplace f1 cCONS f10 cNIL f7 cCONS f9 cNIL
+ (~ F) |- ((~ F) /\ ((N' , (SND split)) = (N' , (SND split))))
T c==> c~ cF c/\ c~ cF c= c, f0 cSND f1 c, f0 cSND f1
+ (y = (((l'y L) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) f2)
T c==> c= f0 cl'y f1 f2 f3 c==> c= f4 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3 c==> c= f6 cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3 cLET / cLET_END c==> c~ cfinal_list f1 f2 c= cntrans f1 f5 f2 f3 cNUMERAL cBIT1 c_0 ccat creplace f2 cCONS b0 cNIL f5 cCONS f4 cNIL f6
+ (y' = y), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2), (((find_face L) y') = f) |- ((((find_face L) y') = f) /\ (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> (hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))
T c==> c= f0 f1 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f5 f2 f6 f0 c==> c= cl'z f5 f7 f2 f6 f3 c==> c= cFST csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f8 c==> c= cSND csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f9 c==> c= cfind_face f5 f0 f10 c/\ c= cfind_face f5 f0 f10 c==> c= csplit_normal_list f5 f2 f10 f0 f4 csplit_normal_list f5 f2 f10 f0 f4 c==> c= cAPPEND creplace f2 cCONS cSND csplit_normal_list f5 f2 f10 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f5 f2 f10 f0 f4 cNIL cAPPEND creplace f2 cCONS cSND csplit_normal_list f5 f2 f10 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f5 f2 f10 f0 f4 cNIL chold c==> c~ cfinal_list f5 f2 c= cAPPEND creplace f2 cCONS cSND csplit_normal_list f5 f2 f10 f0 f4 cNIL f7 cCONS cFST csplit_normal_list f5 f2 f10 f0 f4 cNIL ccat creplace f2 cCONS f9 cNIL f7 cCONS f8 cNIL
- |- ((_10514529 = _10514532) ==> ((~ (_10514530 = _10514533)) \/ ((~ (_10514531 = _10514534)) \/ ((((l'y _10514529) _10514530) _10514531) = (((l'y _10514532) _10514533) _10514534)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c= cl'y f0 f2 f4 cl'y f1 f3 f5
+ |- ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L)
T * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0
+ (y' = y) |- (((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 f1 c= c==> c~ cfinal_list f2 f3 c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 f4 f1 f5 cNIL f6 cCONS cFST csplit_normal_list f2 f3 f4 f1 f5 cNIL ccat creplace f3 cCONS f7 cNIL f6 cCONS f8 cNIL c==> c~ cfinal_list f2 f3 c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f4 f0 f5 cNIL f6 cCONS cFST csplit_normal_list f2 f3 f4 f0 f5 cNIL ccat creplace f3 cCONS f7 cNIL f6 cCONS f8 cNIL
+ |- ((!N. (!r. (!x. ((LET (\y. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (((l'y L) r) x))))) = T)
T c= ! ! ! cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f0 b1 c= cntrans f0 b0 b1 b2 cNUMERAL cBIT1 c_0 ccat creplace b1 cCONS b5 cNIL b0 cCONS b4 cNIL cSND csplit_normal_list f0 b1 cfind_face f0 b3 b3 cprev_el b1 cl'z f0 b0 b1 b2 cFST csplit_normal_list f0 b1 cfind_face f0 b3 b3 cprev_el b1 cl'z f0 b0 b1 b2 cl'y f0 b1 b2 cT
+ |- ((split = (((((split_normal_list L) r) f) y') ram2)) ==> (?split. (split = (((((split_normal_list L) r) f) y') ram2))))
T c==> c= f0 csplit_normal_list f1 f2 f3 f4 f5 c? / c= b0 csplit_normal_list f1 f2 f3 f4 f5
+ |- (T ==> (?f. (f = ((find_face L) y'))))
T c==> cT c? / c= b0 cfind_face f0 f1
+ ((\y. (y = (((l'y L) r) x))) y) |- (((\y. (y = (((l'y L) r) x))) y) /\ ((LET (\y. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (((l'y L) r) x)))
T c==> * / c= b0 cl'y f0 f1 f2 f3 c/\ * / c= b0 cl'y f0 f1 f2 f3 cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f0 f1 c= cntrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 ccat creplace f1 cCONS b2 cNIL f4 cCONS b1 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 b0 b0 cprev_el f1 cl'z f0 f4 f1 f2 cFST csplit_normal_list f0 f1 cfind_face f0 b0 b0 cprev_el f1 cl'z f0 f4 f1 f2 cl'y f0 f1 f2
+ (y' = y), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) |- (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) /\ (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))))))
T c==> c= f0 f1 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f5 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f6 c/\ c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f6 c==> c= cl'y f2 f3 f7 f0 c==> c= cl'z f2 f8 f3 f7 f9 c==> c= cprev_el f3 f9 f4 c==> c= cfind_face f2 f0 f10 c==> c= csplit_normal_list f2 f3 f10 f0 f4 csplit_normal_list f2 f3 f10 f0 f4 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL c==> c~ cfinal_list f2 f3 c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f1 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f1 f4 cNIL ccat creplace f3 cCONS f6 cNIL f8 cCONS f5 cNIL
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ (((prev_el r) z) = ram2), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) |- (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))
T c==> c= cprev_el f0 f1 f2 c==> c= cl'z f3 f4 f0 f5 f1 c==> c= cSND csplit_normal_list f3 f0 cfind_face f3 f6 f6 f2 f7 c= f7 cSND csplit_normal_list f3 f0 cfind_face f3 f6 f6 cprev_el f0 cl'z f3 f4 f0 f5
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (f = ((find_face L) y')), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((((\split. (split = (((((split_normal_list L) r) f) y') ram2))) split) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) = T)
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 cfind_face f4 f6 c==> c= f9 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f10 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c= c==> * / c= b0 csplit_normal_list f4 f1 f8 f6 f0 f11 c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cLET / cLET_END cCOND cfinal_list f4 f1 c, f7 f1 c, b1 cSND b0 cAPPEND creplace f1 cCONS cSND b0 cNIL f7 cCONS cFST b0 cNIL csplit_normal_list f4 f1 f8 f6 f0 ccat creplace f1 cCONS f10 cNIL f7 cCONS f9 cNIL cT
+ (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- (((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = N') ==> (hold ((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))))))))) = ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) ==> (hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))))))))))
T c==> c= f0 cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL c= c==> c= f4 f5 c==> c= cFST csplit_normal_list f6 f1 cfind_face f6 f5 f5 f7 f8 c==> c= cSND csplit_normal_list f6 f1 cfind_face f6 f5 f5 f7 f9 c==> c= cl'y f6 f1 f10 f4 c==> c= cl'z f6 f3 f1 f10 f11 c==> c= cprev_el f1 f11 f7 c==> c= cfind_face f6 f4 f12 c==> c= csplit_normal_list f6 f1 f12 f4 f7 f2 c==> c= cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL f0 chold c==> c~ cfinal_list f6 f1 c= f0 ccat creplace f1 cCONS f9 cNIL f3 cCONS f8 cNIL c==> c= f4 f5 c==> c= cFST csplit_normal_list f6 f1 cfind_face f6 f5 f5 f7 f8 c==> c= cSND csplit_normal_list f6 f1 cfind_face f6 f5 f5 f7 f9 c==> c= cl'y f6 f1 f10 f4 c==> c= cl'z f6 f3 f1 f10 f11 c==> c= cprev_el f1 f11 f7 c==> c= cfind_face f6 f4 f12 c==> c= csplit_normal_list f6 f1 f12 f4 f7 f2 c==> c= cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL chold c==> c~ cfinal_list f6 f1 c= cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL ccat creplace f1 cCONS f9 cNIL f3 cCONS f8 cNIL
+ (~ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))), (((prev_el r) z) = ram2), (((find_face L) y') = f) |- (~ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) y')) y) ((prev_el r) z)))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) y')) y) ((prev_el r) z)))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))
T c==> c~ c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 f2 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f1 f0 f2 f3 f4 cNIL ccat creplace f0 cCONS f6 cNIL f5 cCONS f7 cNIL c==> c= cprev_el f0 f8 f4 c==> c= cfind_face f1 f9 f2 c~ c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 cfind_face f1 f9 f3 cprev_el f0 f8 cNIL f5 cCONS cFST csplit_normal_list f1 f0 cfind_face f1 f9 f3 cprev_el f0 f8 cNIL ccat creplace f0 cCONS f6 cNIL f5 cCONS f7 cNIL
- |- ((_10514525 = _10514527) ==> ((~ (_10514526 = _10514528)) \/ (((find_face _10514525) _10514526) = ((find_face _10514527) _10514528))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cfind_face f0 f2 cfind_face f1 f3
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = N') ==> (hold ((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))))))
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f9 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f10 cAPPEND creplace f1 cCONS cSND f11 cNIL f7 cCONS cFST f11 cNIL c==> c= cl'y f4 f1 f5 f6 c==> c= cl'z f4 f7 f1 f5 f2 c==> c= cprev_el f1 f2 f0 c==> c= cfind_face f4 f6 f12 c==> c= csplit_normal_list f4 f1 f12 f6 f0 f11 c==> c= cAPPEND creplace f1 cCONS cSND f11 cNIL f7 cCONS cFST f11 cNIL f10 chold c==> c~ cfinal_list f4 f1 c= f10 ccat creplace f1 cCONS f9 cNIL f7 cCONS f8 cNIL
- |- ((~ (_10514543 = _10514545)) \/ ((~ (_10514544 = _10514546)) \/ (((prev_el _10514543) _10514544) = ((prev_el _10514545) _10514546))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cprev_el f0 f2 cprev_el f1 f3
+ |- ((\g'. (!t'. (!e'. ((((final_list L) r) = g') ==> ((g' ==> ((N , r) = t')) ==> (((~ g') ==> ((N' , (SND split)) = e')) ==> ((((COND ((final_list L) r)) (N , r)) (N' , (SND split))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cfinal_list f0 f1 b0 c==> c==> b0 c= c, f2 f1 b1 c==> c==> c~ b0 c= c, f3 cSND f4 b2 c= cCOND cfinal_list f0 f1 c, f2 f1 c, f3 cSND f4 cCOND b0 b1 b2 f5
- (_10514514 = _10514516), (_10514513 = _10514515) |- (((final_list _10514515) _10514516) \/ (~ ((final_list _10514513) _10514514)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cfinal_list f3 f1 c~ cfinal_list f2 f0
+ (y = (((l'y L) r) x)) |- (((!x. (((\f1. (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))) x) ==> ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))) ==> ((?f1. (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))) ==> ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))) = ((?f1. (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))) ==> ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))
T c==> c= f0 cl'y f1 f2 f3 c= c==> ! c==> * / c= b1 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3 b0 cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f1 f2 c= cntrans f1 f4 f2 f3 cNUMERAL cBIT1 c_0 ccat creplace f2 cCONS b2 cNIL f4 cCONS b1 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3 c==> c? / c= b0 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3 cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f1 f2 c= cntrans f1 f4 f2 f3 cNUMERAL cBIT1 c_0 ccat creplace f2 cCONS b1 cNIL f4 cCONS b0 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3 c==> c? / c= b0 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3 cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f1 f2 c= cntrans f1 f4 f2 f3 cNUMERAL cBIT1 c_0 ccat creplace f2 cCONS b1 cNIL f4 cCONS b0 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3
+ |- ((\y. (!f. (!L. (!y'. (!z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F)))))))))))))))) y)
T * / ! ! ! ! ! c==> c= b3 b0 c==> c= cFST csplit_normal_list b2 f0 cfind_face b2 b0 b0 f1 f2 c==> c= cSND csplit_normal_list b2 f0 cfind_face b2 b0 b0 f1 f3 c==> c= cl'y b2 f0 b5 b3 c==> c= cl'z b2 f4 f0 b5 b4 c==> c= cprev_el f0 b4 f1 c==> c= cfind_face b2 b3 b1 c==> c= csplit_normal_list b2 f0 b1 b3 f1 csplit_normal_list b2 f0 b1 b3 f1 c==> c= cAPPEND creplace f0 cCONS cSND csplit_normal_list b2 f0 b1 b3 f1 cNIL f4 cCONS cFST csplit_normal_list b2 f0 b1 b3 f1 cNIL cAPPEND creplace f0 cCONS cSND csplit_normal_list b2 f0 b1 b3 f1 cNIL f4 cCONS cFST csplit_normal_list b2 f0 b1 b3 f1 cNIL c==> c~ c==> c~ cfinal_list b2 f0 c= ccat creplace f0 cCONS cSND csplit_normal_list b2 f0 b1 b0 f1 cNIL f4 cCONS cFST csplit_normal_list b2 f0 b1 b0 f1 cNIL ccat creplace f0 cCONS f3 cNIL f4 cCONS f2 cNIL cF f5
+ (y = (((l'y L) r) x)) |- ((((\f1. (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))) f1) ==> ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))) = T)
T c==> c= f0 cl'y f1 f2 f3 c= c==> * / c= b0 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3 f5 cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f1 f2 c= cntrans f1 f4 f2 f3 cNUMERAL cBIT1 c_0 ccat creplace f2 cCONS b1 cNIL f4 cCONS b0 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3 cT
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (split = (((((split_normal_list L) r) f) y') ram2)), (f = ((find_face L) y')), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((split = (((((split_normal_list L) r) f) y') ram2)) /\ ((~ ((final_list L) r)) ==> ((FST ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 csplit_normal_list f4 f1 f9 f6 f0 c==> c= f9 cfind_face f4 f6 c==> c= f10 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f11 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c/\ c= f8 csplit_normal_list f4 f1 f9 f6 f0 c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cLET / cLET_END cCOND cfinal_list f4 f1 c, f7 f1 c, b1 cSND b0 cAPPEND creplace f1 cCONS cSND b0 cNIL f7 cCONS cFST b0 cNIL csplit_normal_list f4 f1 f9 f6 f0 ccat creplace f1 cCONS f11 cNIL f7 cCONS f10 cNIL
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
- (((((l'z L) N) r) x) = z) |- (((((l'y L) r) x) = y') = ((((l'y L) r) x) = y'))
T c==> c= cl'z f0 f1 f2 f3 f4 c= c= cl'y f0 f2 f3 f5 c= cl'y f0 f2 f3 f5
+ (z = ((((l'z L) N) r) x)) |- (((~ ((final_list L) r)) ==> ((FST ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))))) ((prev_el r) z))))) z)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = ((~ ((final_list L) r)) ==> ((FST ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))))) ((prev_el r) z))))) ((((l'z L) N) r) x))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 cl'z f1 f2 f3 f4 c= c==> c~ cfinal_list f1 f3 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f1 f3 c, f2 f3 c, b4 cSND b3 cAPPEND creplace f3 cCONS cSND b3 cNIL f2 cCONS cFST b3 cNIL csplit_normal_list f1 f3 b2 f5 b1 cfind_face f1 f5 cprev_el f3 b0 f0 ccat creplace f3 cCONS f6 cNIL f2 cCONS f7 cNIL c==> c~ cfinal_list f1 f3 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f1 f3 c, f2 f3 c, b4 cSND b3 cAPPEND creplace f3 cCONS cSND b3 cNIL f2 cCONS cFST b3 cNIL csplit_normal_list f1 f3 b2 f5 b1 cfind_face f1 f5 cprev_el f3 b0 cl'z f1 f2 f3 f4 ccat creplace f3 cCONS f6 cNIL f2 cCONS f7 cNIL
+ |- (((!g'. (!t'. (!e'. ((((final_list L) r) = g') ==> ((g' ==> ((N , r) = t')) ==> (((~ g') ==> ((N' , (SND split)) = e')) ==> ((((COND ((final_list L) r)) (N , r)) (N' , (SND split))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((final_list L) r) = g') ==> ((g' ==> ((N , r) = t')) ==> (((~ g') ==> ((N' , (SND split)) = e')) ==> ((((COND ((final_list L) r)) (N , r)) (N' , (SND split))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((final_list L) r) = g') ==> ((g' ==> ((N , r) = t')) ==> (((~ g') ==> ((N' , (SND split)) = e')) ==> ((((COND ((final_list L) r)) (N , r)) (N' , (SND split))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cfinal_list f0 f1 b0 c==> c==> b0 c= c, f2 f1 b1 c==> c==> c~ b0 c= c, f3 cSND f4 b2 c= cCOND cfinal_list f0 f1 c, f2 f1 c, f3 cSND f4 cCOND b0 b1 b2 * / ! ! c==> c= cfinal_list f0 f1 b0 c==> c==> b0 c= c, f2 f1 b1 c==> c==> c~ b0 c= c, f3 cSND f4 b2 c= cCOND cfinal_list f0 f1 c, f2 f1 c, f3 cSND f4 cCOND b0 b1 b2 f5 * / ! ! c==> c= cfinal_list f0 f1 b0 c==> c==> b0 c= c, f2 f1 b1 c==> c==> c~ b0 c= c, f3 cSND f4 b2 c= cCOND cfinal_list f0 f1 c, f2 f1 c, f3 cSND f4 cCOND b0 b1 b2 f5
+ (y' = y), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) |- ((((((l'z L) N) r) x) = z) /\ ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) ==> (hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))))
T c==> c= f0 f1 c==> c= cl'y f2 f3 f4 f0 c==> c= cl'z f2 f5 f3 f4 f6 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f7 f8 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f7 f9 c/\ c= cl'z f2 f5 f3 f4 f6 c==> c= cprev_el f3 f6 f7 c==> c= cfind_face f2 f0 f10 c==> c= csplit_normal_list f2 f3 f10 f0 f7 f11 c==> c= cAPPEND creplace f3 cCONS cSND f11 cNIL f5 cCONS cFST f11 cNIL cAPPEND creplace f3 cCONS cSND f11 cNIL f5 cCONS cFST f11 cNIL chold c==> c~ cfinal_list f2 f3 c= cAPPEND creplace f3 cCONS cSND f11 cNIL f5 cCONS cFST f11 cNIL ccat creplace f3 cCONS f9 cNIL f5 cCONS f8 cNIL
+ (split = (((((split_normal_list L) r) f) y') ram2)) |- ((((((split_normal_list L) r) f) y') ram2) = split)
T c==> c= f0 csplit_normal_list f1 f2 f3 f4 f5 c= csplit_normal_list f1 f2 f3 f4 f5 f0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (split = (((((split_normal_list L) r) f) y') ram2)), (f = ((find_face L) y')), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- ((N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) /\ ((~ ((final_list L) r)) ==> ((FST ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 csplit_normal_list f4 f1 f9 f6 f0 c==> c= f9 cfind_face f4 f6 c==> c= f10 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f11 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f12 cAPPEND creplace f1 cCONS cSND f8 cNIL f7 cCONS cFST f8 cNIL c/\ c= f12 cAPPEND creplace f1 cCONS cSND f8 cNIL f7 cCONS cFST f8 cNIL c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cCOND cfinal_list f4 f1 c, f7 f1 c, b0 cSND f8 cAPPEND creplace f1 cCONS cSND f8 cNIL f7 cCONS cFST f8 cNIL ccat creplace f1 cCONS f11 cNIL f7 cCONS f10 cNIL
+ |- ((!y. (!f. (!L. (!y'. (!z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))))))))))))) = T)
T c= ! ! ! ! ! ! c==> c= b3 b0 c==> c= cFST csplit_normal_list b2 f0 cfind_face b2 b0 b0 f1 f2 c==> c= cSND csplit_normal_list b2 f0 cfind_face b2 b0 b0 f1 f3 c==> c= cl'y b2 f0 b5 b3 c==> c= cl'z b2 f4 f0 b5 b4 c==> c= cprev_el f0 b4 f1 c==> c= cfind_face b2 b3 b1 c==> c= csplit_normal_list b2 f0 b1 b3 f1 csplit_normal_list b2 f0 b1 b3 f1 c==> c= cAPPEND creplace f0 cCONS cSND csplit_normal_list b2 f0 b1 b3 f1 cNIL f4 cCONS cFST csplit_normal_list b2 f0 b1 b3 f1 cNIL cAPPEND creplace f0 cCONS cSND csplit_normal_list b2 f0 b1 b3 f1 cNIL f4 cCONS cFST csplit_normal_list b2 f0 b1 b3 f1 cNIL c==> c~ cfinal_list b2 f0 c= ccat creplace f0 cCONS cSND csplit_normal_list b2 f0 b1 b0 f1 cNIL f4 cCONS cFST csplit_normal_list b2 f0 b1 b0 f1 cNIL ccat creplace f0 cCONS f3 cNIL f4 cCONS f2 cNIL cT
- (((prev_el r) z) = ram2), (((((l'z L) N) r) x) = z), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) |- (((((l'y L) r) x) = y) = ((((l'y L) r) x) = y))
T c==> c= cprev_el f0 f1 f2 c==> c= cl'z f3 f4 f0 f5 f1 c==> c= cFST csplit_normal_list f3 f0 cfind_face f3 f6 f6 f2 f7 c= c= cl'y f3 f0 f5 f6 c= cl'y f3 f0 f5 f6
+ (y = (((l'y L) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((y' = (((l'y L) r) x)) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 cl'y f1 f2 f3 c==> c= f4 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3 c==> c= f6 cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3 c==> c= f7 cl'y f1 f2 f3 c==> c~ cfinal_list f1 f2 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f1 f2 c, f5 f2 c, b5 cSND b4 cAPPEND creplace f2 cCONS cSND b4 cNIL f5 cCONS cFST b4 cNIL csplit_normal_list f1 f2 b3 b0 b2 cfind_face f1 b0 cprev_el f2 b1 cl'z f1 f5 f2 f3 cl'y f1 f2 f3 ccat creplace f2 cCONS f6 cNIL f5 cCONS f4 cNIL
+ |- (((~ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) ==> F) = (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))
T c= c==> c~ c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 f2 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f1 f0 f2 f3 f4 cNIL ccat creplace f0 cCONS f6 cNIL f5 cCONS f7 cNIL cF c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 f2 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f1 f0 f2 f3 f4 cNIL ccat creplace f0 cCONS f6 cNIL f5 cCONS f7 cNIL
- (ram2 = ((prev_el r) z)) |- (((((l'y L) r) x) = y') = ((((l'y L) r) x) = y'))
T c==> c= f0 cprev_el f1 f2 c= c= cl'y f3 f1 f4 f5 c= cl'y f3 f1 f4 f5
+ (y = (((l'y L) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- (!f2. (((\f2. (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))) f2) ==> ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))
T c==> c= f0 cl'y f1 f2 f3 c==> c= f4 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3 ! c==> * / c= b1 cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3 b0 cLET / cLET_END c==> c~ cfinal_list f1 f2 c= cntrans f1 f5 f2 f3 cNUMERAL cBIT1 c_0 ccat creplace f2 cCONS b1 cNIL f5 cCONS f4 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f5 f2 f3
- (((prev_el r) z) = ram2), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) |- (((((l'y L) r) x) = y) = ((((l'y L) r) x) = y))
T c==> c= cprev_el f0 f1 f2 c==> c= cl'z f3 f4 f0 f5 f1 c==> c= cSND csplit_normal_list f3 f0 cfind_face f3 f6 f6 f2 f7 c= c= cl'y f3 f0 f5 f6 c= cl'y f3 f0 f5 f6
+ (y = (((l'y L) r) x)) |- ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))
T c==> c= f0 cl'y f1 f2 f3 cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f1 f2 c= cntrans f1 f4 f2 f3 cNUMERAL cBIT1 c_0 ccat creplace f2 cCONS b1 cNIL f4 cCONS b0 cNIL cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f4 f2 f3
+ |- ((\N. (!f2. (!r. (!ram2. (!y. (!f. (!L. (!y'. (!z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F)))))))))))))))))))) N)
T * / ! ! ! ! ! ! ! ! ! c==> c= b7 b4 c==> c= cFST csplit_normal_list b6 b2 cfind_face b6 b4 b4 b3 f0 c==> c= cSND csplit_normal_list b6 b2 cfind_face b6 b4 b4 b3 b1 c==> c= cl'y b6 b2 b9 b7 c==> c= cl'z b6 b0 b2 b9 b8 c==> c= cprev_el b2 b8 b3 c==> c= cfind_face b6 b7 b5 c==> c= csplit_normal_list b6 b2 b5 b7 b3 csplit_normal_list b6 b2 b5 b7 b3 c==> c= cAPPEND creplace b2 cCONS cSND csplit_normal_list b6 b2 b5 b7 b3 cNIL b0 cCONS cFST csplit_normal_list b6 b2 b5 b7 b3 cNIL cAPPEND creplace b2 cCONS cSND csplit_normal_list b6 b2 b5 b7 b3 cNIL b0 cCONS cFST csplit_normal_list b6 b2 b5 b7 b3 cNIL c==> c~ c==> c~ cfinal_list b6 b2 c= ccat creplace b2 cCONS cSND csplit_normal_list b6 b2 b5 b4 b3 cNIL b0 cCONS cFST csplit_normal_list b6 b2 b5 b4 b3 cNIL ccat creplace b2 cCONS b1 cNIL b0 cCONS f0 cNIL cF f1
+ ((\f1. (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))) f1) |- (((f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) ==> ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))) = ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))))
T c==> * / c= b0 cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 cprev_el f1 cl'z f0 f3 f1 f4 f5 c= c==> c= f5 cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 cprev_el f1 cl'z f0 f3 f1 f4 cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f0 f1 c= cntrans f0 f3 f1 f4 cNUMERAL cBIT1 c_0 ccat creplace f1 cCONS b1 cNIL f3 cCONS b0 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 cprev_el f1 cl'z f0 f3 f1 f4 cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 cprev_el f1 cl'z f0 f3 f1 f4 cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f0 f1 c= cntrans f0 f3 f1 f4 cNUMERAL cBIT1 c_0 ccat creplace f1 cCONS b1 cNIL f3 cCONS b0 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 cprev_el f1 cl'z f0 f3 f1 f4 cFST csplit_normal_list f0 f1 cfind_face f0 f2 f2 cprev_el f1 cl'z f0 f3 f1 f4
- (((find_face L) y') = f) |- (((((l'y L) r) x) = y') = ((((l'y L) r) x) = y'))
T c==> c= cfind_face f0 f1 f2 c= c= cl'y f0 f3 f4 f1 c= cl'y f0 f3 f4 f1
- (z = ((((l'z L) N) r) x)) |- ((y' = y) = (y' = y))
T c==> c= f0 cl'z f1 f2 f3 f4 c= c= f5 f6 c= f5 f6
+ (y' = y), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) |- ((((((l'z L) N) r) x) = z) /\ ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> (hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))))
T c==> c= f0 f1 c==> c= cl'y f2 f3 f4 f0 c==> c= cl'z f2 f5 f3 f4 f6 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f7 f8 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f7 f9 c/\ c= cl'z f2 f5 f3 f4 f6 c==> c= cprev_el f3 f6 f7 c==> c= cfind_face f2 f0 f10 c==> c= csplit_normal_list f2 f3 f10 f0 f7 csplit_normal_list f2 f3 f10 f0 f7 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f7 cNIL f5 cCONS cFST csplit_normal_list f2 f3 f10 f0 f7 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f7 cNIL f5 cCONS cFST csplit_normal_list f2 f3 f10 f0 f7 cNIL chold c==> c~ cfinal_list f2 f3 c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f7 cNIL f5 cCONS cFST csplit_normal_list f2 f3 f10 f0 f7 cNIL ccat creplace f3 cCONS f9 cNIL f5 cCONS f8 cNIL
+ ((\z. (z = ((((l'z L) N) r) x))) z) |- (((z = ((((l'z L) N) r) x)) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))))) ((prev_el r) z))))) ((((l'z L) N) r) x))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) = ((~ ((final_list L) r)) ==> ((FST ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))))) ((prev_el r) z))))) ((((l'z L) N) r) x))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> * / c= b0 cl'z f0 f1 f2 f3 f4 c= c==> c= f4 cl'z f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b4 cSND b3 cAPPEND creplace f2 cCONS cSND b3 cNIL f1 cCONS cFST b3 cNIL csplit_normal_list f0 f2 b2 f5 b1 cfind_face f0 f5 cprev_el f2 b0 cl'z f0 f1 f2 f3 ccat creplace f2 cCONS f6 cNIL f1 cCONS f7 cNIL c==> c~ cfinal_list f0 f2 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b4 cSND b3 cAPPEND creplace f2 cCONS cSND b3 cNIL f1 cCONS cFST b3 cNIL csplit_normal_list f0 f2 b2 f5 b1 cfind_face f0 f5 cprev_el f2 b0 cl'z f0 f1 f2 f3 ccat creplace f2 cCONS f6 cNIL f1 cCONS f7 cNIL
+ |- (((?N'. (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) = ((~ ((final_list L) r)) ==> ((FST ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c= c==> c? / c= b0 cAPPEND creplace f0 cCONS cSND f1 cNIL f2 cCONS cFST f1 cNIL c==> c~ cfinal_list f3 f0 c= cFST cLET / cLET_END cCOND cfinal_list f3 f0 c, f2 f0 c, b0 cSND f1 cAPPEND creplace f0 cCONS cSND f1 cNIL f2 cCONS cFST f1 cNIL ccat creplace f0 cCONS f4 cNIL f2 cCONS f5 cNIL c==> c~ cfinal_list f3 f0 c= cFST cLET / cLET_END cCOND cfinal_list f3 f0 c, f2 f0 c, b0 cSND f1 cAPPEND creplace f0 cCONS cSND f1 cNIL f2 cCONS cFST f1 cNIL ccat creplace f0 cCONS f4 cNIL f2 cCONS f5 cNIL
- (_10514517 = _10514518) |- ((_10514517 = _10514518) /\ ((SND _10514517) = (SND _10514518)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cSND f0 cSND f1
+ |- ((z = ((((l'z L) N) r) x)) = ((\z. (z = ((((l'z L) N) r) x))) z))
T c= c= f0 cl'z f1 f2 f3 f4 * / c= b0 cl'z f1 f2 f3 f4 f0
+ |- (((LET (\y. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END ((~ ((final_list L) r)) ==> ((((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))) (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))))) (((l'y L) r) x)) = T)
T c= cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c~ cfinal_list f0 f1 c= cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 ccat creplace f1 cCONS b2 cNIL f2 cCONS b1 cNIL cSND csplit_normal_list f0 f1 cfind_face f0 b0 b0 cprev_el f1 cl'z f0 f2 f1 f3 cFST csplit_normal_list f0 f1 cfind_face f0 b0 b0 cprev_el f1 cl'z f0 f2 f1 f3 cl'y f0 f1 f3 cT
- (y' = y), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((((((split_normal_list L) r) f) y') ram2) = split), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2), (((find_face L) y') = f), (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- (((hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) = ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 f1 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f5 f2 f6 f0 c==> c= cl'z f5 f7 f2 f6 f3 c==> c= csplit_normal_list f5 f2 f8 f0 f4 f9 c==> c= cFST csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f10 c==> c= cSND csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f11 c==> c= cfind_face f5 f0 f8 c==> c= cAPPEND creplace f2 cCONS cSND f9 cNIL f7 cCONS cFST f9 cNIL cAPPEND creplace f2 cCONS cSND f9 cNIL f7 cCONS cFST f9 cNIL c= c==> chold c==> c~ cfinal_list f5 f2 c= cAPPEND creplace f2 cCONS cSND f9 cNIL f7 cCONS cFST f9 cNIL ccat creplace f2 cCONS f11 cNIL f7 cCONS f10 cNIL c==> c~ cfinal_list f5 f2 c= cAPPEND creplace f2 cCONS cSND f9 cNIL f7 cCONS cFST f9 cNIL ccat creplace f2 cCONS f11 cNIL f7 cCONS f10 cNIL c==> c~ cfinal_list f5 f2 c= cAPPEND creplace f2 cCONS cSND f9 cNIL f7 cCONS cFST f9 cNIL ccat creplace f2 cCONS f11 cNIL f7 cCONS f10 cNIL
+ |- (((!f. (((POWER f) (NUMERAL (BIT1 _0))) = f)) ==> ((\f. (((POWER f) (NUMERAL (BIT1 _0))) = f)) f)) = ((\f. (((POWER f) (NUMERAL (BIT1 _0))) = f)) f))
T c= c==> ! c= * * part cPOWER b0 cNUMERAL cBIT1 c_0 b0 * / c= * * part cPOWER b0 cNUMERAL cBIT1 c_0 b0 f0 * / c= * * part cPOWER b0 cNUMERAL cBIT1 c_0 b0 f0
+ (((prev_el r) z) = ram2) |- (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) = ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) z))) = f2))
T c==> c= cprev_el f0 f1 f2 c= c= cSND csplit_normal_list f3 f0 cfind_face f3 f4 f4 f2 f5 c= cSND csplit_normal_list f3 f0 cfind_face f3 f4 f4 cprev_el f0 f1 f5
- (_10514514 = _10514516), (_10514513 = _10514515) |- (((((final_list _10514513) _10514514) = ((final_list _10514515) _10514516)) ==> (((final_list _10514515) _10514516) \/ (~ ((final_list _10514513) _10514514)))) = (((final_list _10514515) _10514516) \/ (~ ((final_list _10514513) _10514514))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cfinal_list f2 f0 cfinal_list f3 f1 c\/ cfinal_list f3 f1 c~ cfinal_list f2 f0 c\/ cfinal_list f3 f1 c~ cfinal_list f2 f0
+ |- (!f1. (!N. (!f2. (!r. (!ram2. (!y. (!f. (!L. (!y'. (!z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))))))))))))))))))
T c==> c= f0 f1 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f5 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f6 c==> c= cl'y f2 f3 f7 f0 c==> c= cl'z f2 f8 f3 f7 f9 c==> c= cprev_el f3 f9 f4 c==> c= cfind_face f2 f0 f10 c==> c= csplit_normal_list f2 f3 f10 f0 f4 csplit_normal_list f2 f3 f10 f0 f4 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL c==> c~ cfinal_list f2 f3 c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f1 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f1 f4 cNIL ccat creplace f3 cCONS f6 cNIL f8 cCONS f5 cNIL
+ |- ((!L. (!y'. (!z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))))))))))))) = T)
T c= ! ! ! ! c==> c= b1 f0 c==> c= cFST csplit_normal_list b0 f1 cfind_face b0 f0 f0 f2 f3 c==> c= cSND csplit_normal_list b0 f1 cfind_face b0 f0 f0 f2 f4 c==> c= cl'y b0 f1 b3 b1 c==> c= cl'z b0 f5 f1 b3 b2 c==> c= cprev_el f1 b2 f2 c==> c= cfind_face b0 b1 f6 c==> c= csplit_normal_list b0 f1 f6 b1 f2 csplit_normal_list b0 f1 f6 b1 f2 c==> c= cAPPEND creplace f1 cCONS cSND csplit_normal_list b0 f1 f6 b1 f2 cNIL f5 cCONS cFST csplit_normal_list b0 f1 f6 b1 f2 cNIL cAPPEND creplace f1 cCONS cSND csplit_normal_list b0 f1 f6 b1 f2 cNIL f5 cCONS cFST csplit_normal_list b0 f1 f6 b1 f2 cNIL c==> c~ cfinal_list b0 f1 c= ccat creplace f1 cCONS cSND csplit_normal_list b0 f1 f6 f0 f2 cNIL f5 cCONS cFST csplit_normal_list b0 f1 f6 f0 f2 cNIL ccat creplace f1 cCONS f4 cNIL f5 cCONS f3 cNIL cT
+ |- (((!L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) ==> ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L)) = ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L))
T c= c==> ! ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0 * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
+ (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))) = f2)
T c==> c= f0 cSND csplit_normal_list f1 f2 cfind_face f1 f3 f3 cprev_el f2 cl'z f1 f4 f2 f5 c= cSND csplit_normal_list f1 f2 cfind_face f1 f3 f3 cprev_el f2 cl'z f1 f4 f2 f5 f0
+ (ram2 = ((prev_el r) z)) |- (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) z))) = f1) = ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1))
T c==> c= f0 cprev_el f1 f2 c= c= cFST csplit_normal_list f3 f1 cfind_face f3 f4 f4 cprev_el f1 f2 f5 c= cFST csplit_normal_list f3 f1 cfind_face f3 f4 f4 f0 f5
- ((((l'y L) r) x) = y') |- (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))) = f1) = ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))) = f1))
T c==> c= cl'y f0 f1 f2 f3 c= c= cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f5 f1 f2 f6 c= cFST csplit_normal_list f0 f1 cfind_face f0 f4 f4 cprev_el f1 cl'z f0 f5 f1 f2 f6
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (ram2 = ((prev_el r) z)), (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (z = ((((l'z L) N) r) x)), (split = (((((split_normal_list L) r) f) y') ram2)), (f = ((find_face L) y')), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- (((hold ((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> ((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) = ((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 cprev_el f1 f2 c==> c= f3 cl'y f4 f1 f5 c==> c= f6 cl'y f4 f1 f5 c==> c= f2 cl'z f4 f7 f1 f5 c==> c= f8 csplit_normal_list f4 f1 f9 f6 f0 c==> c= f9 cfind_face f4 f6 c==> c= f10 cFST csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f11 cSND csplit_normal_list f4 f1 cfind_face f4 f3 f3 cprev_el f1 cl'z f4 f7 f1 f5 c==> c= f12 cAPPEND creplace f1 cCONS cSND f8 cNIL f7 cCONS cFST f8 cNIL c= c==> chold c==> c~ cfinal_list f4 f1 c= f12 ccat creplace f1 cCONS f11 cNIL f7 cCONS f10 cNIL c==> c~ cfinal_list f4 f1 c= f12 ccat creplace f1 cCONS f11 cNIL f7 cCONS f10 cNIL c==> c~ cfinal_list f4 f1 c= f12 ccat creplace f1 cCONS f11 cNIL f7 cCONS f10 cNIL
+ (y = (((l'y L) r) x)), (y' = (((l'y L) r) x)), (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((z = ((((l'z L) N) r) x)) ==> ((~ ((final_list L) r)) ==> ((FST ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))))) ((prev_el r) z))))) ((((l'z L) N) r) x))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 cl'y f1 f2 f3 c==> c= f4 cl'y f1 f2 f3 c==> c= f5 cFST csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f6 f2 f3 c==> c= f7 cSND csplit_normal_list f1 f2 cfind_face f1 f0 f0 cprev_el f2 cl'z f1 f6 f2 f3 c==> c= f8 cl'z f1 f6 f2 f3 c==> c~ cfinal_list f1 f2 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f1 f2 c, f6 f2 c, b4 cSND b3 cAPPEND creplace f2 cCONS cSND b3 cNIL f6 cCONS cFST b3 cNIL csplit_normal_list f1 f2 b2 f4 b1 cfind_face f1 f4 cprev_el f2 b0 cl'z f1 f6 f2 f3 ccat creplace f2 cCONS f7 cNIL f6 cCONS f5 cNIL
- (((((l'z L) N) r) x) = z) |- ((y' = y) = (y' = y))
T c==> c= cl'z f0 f1 f2 f3 f4 c= c= f5 f6 c= f5 f6
+ (z = ((((l'z L) N) r) x)), (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) z))) = f2)
T c==> c= f0 cl'z f1 f2 f3 f4 c==> c= f5 cSND csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 cl'z f1 f2 f3 f4 c= cSND csplit_normal_list f1 f3 cfind_face f1 f6 f6 cprev_el f3 f0 f5
+ (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- (((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) ==> (hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))))))))) = ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = N') ==> (hold ((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))))))))))
T c==> c= f0 cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL c= c==> c= f4 f5 c==> c= cFST csplit_normal_list f6 f1 cfind_face f6 f5 f5 f7 f8 c==> c= cSND csplit_normal_list f6 f1 cfind_face f6 f5 f5 f7 f9 c==> c= cl'y f6 f1 f10 f4 c==> c= cl'z f6 f3 f1 f10 f11 c==> c= cprev_el f1 f11 f7 c==> c= cfind_face f6 f4 f12 c==> c= csplit_normal_list f6 f1 f12 f4 f7 f2 c==> c= cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL chold c==> c~ cfinal_list f6 f1 c= cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL ccat creplace f1 cCONS f9 cNIL f3 cCONS f8 cNIL c==> c= f4 f5 c==> c= cFST csplit_normal_list f6 f1 cfind_face f6 f5 f5 f7 f8 c==> c= cSND csplit_normal_list f6 f1 cfind_face f6 f5 f5 f7 f9 c==> c= cl'y f6 f1 f10 f4 c==> c= cl'z f6 f3 f1 f10 f11 c==> c= cprev_el f1 f11 f7 c==> c= cfind_face f6 f4 f12 c==> c= csplit_normal_list f6 f1 f12 f4 f7 f2 c==> c= cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL f0 chold c==> c~ cfinal_list f6 f1 c= f0 ccat creplace f1 cCONS f9 cNIL f3 cCONS f8 cNIL
+ (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- (((~ ((final_list L) r)) ==> ((FST ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = ((~ ((final_list L) r)) ==> ((FST ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) N')) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL c= c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cCOND cfinal_list f4 f1 c, f3 f1 c, b0 cSND f2 cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL ccat creplace f1 cCONS f5 cNIL f3 cCONS f6 cNIL c==> c~ cfinal_list f4 f1 c= cFST cLET / cLET_END cCOND cfinal_list f4 f1 c, f3 f1 c, b0 cSND f2 f0 ccat creplace f1 cCONS f5 cNIL f3 cCONS f6 cNIL
+ ((((((split_normal_list L) r) f) y') ram2) = split) |- (((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = split) ==> ((((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) ==> (hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))))))))) = ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> (hold ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))))))))))))
T c==> c= csplit_normal_list f0 f1 f2 f3 f4 f5 c= c==> c= f3 f6 c==> c= cFST csplit_normal_list f0 f1 cfind_face f0 f6 f6 f4 f7 c==> c= cSND csplit_normal_list f0 f1 cfind_face f0 f6 f6 f4 f8 c==> c= cl'y f0 f1 f9 f3 c==> c= cl'z f0 f10 f1 f9 f11 c==> c= cprev_el f1 f11 f4 c==> c= cfind_face f0 f3 f2 c==> c= csplit_normal_list f0 f1 f2 f3 f4 f5 c==> c= cAPPEND creplace f1 cCONS cSND f5 cNIL f10 cCONS cFST f5 cNIL cAPPEND creplace f1 cCONS cSND f5 cNIL f10 cCONS cFST f5 cNIL chold c==> c~ cfinal_list f0 f1 c= cAPPEND creplace f1 cCONS cSND f5 cNIL f10 cCONS cFST f5 cNIL ccat creplace f1 cCONS f8 cNIL f10 cCONS f7 cNIL c==> c= f3 f6 c==> c= cFST csplit_normal_list f0 f1 cfind_face f0 f6 f6 f4 f7 c==> c= cSND csplit_normal_list f0 f1 cfind_face f0 f6 f6 f4 f8 c==> c= cl'y f0 f1 f9 f3 c==> c= cl'z f0 f10 f1 f9 f11 c==> c= cprev_el f1 f11 f4 c==> c= cfind_face f0 f3 f2 c==> c= csplit_normal_list f0 f1 f2 f3 f4 csplit_normal_list f0 f1 f2 f3 f4 c==> c= cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f10 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f10 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL chold c==> c~ cfinal_list f0 f1 c= cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f10 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL ccat creplace f1 cCONS f8 cNIL f10 cCONS f7 cNIL
+ (split = (((((split_normal_list L) r) f) y') ram2)) |- ((\split. (split = (((((split_normal_list L) r) f) y') ram2))) split)
T c==> c= f0 csplit_normal_list f1 f2 f3 f4 f5 * / c= b0 csplit_normal_list f1 f2 f3 f4 f5 f0
- |- ((~ (_10514563 = _10514565)) \/ ((~ (_10514564 = _10514566)) \/ (((cat _10514563) _10514564) = ((cat _10514565) _10514566))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= ccat f0 f2 ccat f1 f3
- |- ((((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F)))))))))) ==> ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F))))))))))) = ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F)))))))))))
T c= c==> c==> c= f0 f1 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f5 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f6 c==> c= cl'y f2 f3 f7 f0 c==> c= cl'z f2 f8 f3 f7 f9 c==> c= cprev_el f3 f9 f4 c==> c= cfind_face f2 f0 f10 c==> c= csplit_normal_list f2 f3 f10 f0 f4 csplit_normal_list f2 f3 f10 f0 f4 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL c==> c~ c==> c~ cfinal_list f2 f3 c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f1 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f1 f4 cNIL ccat creplace f3 cCONS f6 cNIL f8 cCONS f5 cNIL cF c==> c= f0 f1 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f5 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f6 c==> c= cl'y f2 f3 f7 f0 c==> c= cl'z f2 f8 f3 f7 f9 c==> c= cprev_el f3 f9 f4 c==> c= cfind_face f2 f0 f10 c==> c= csplit_normal_list f2 f3 f10 f0 f4 csplit_normal_list f2 f3 f10 f0 f4 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL c==> c~ c==> c~ cfinal_list f2 f3 c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f1 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f1 f4 cNIL ccat creplace f3 cCONS f6 cNIL f8 cCONS f5 cNIL cF c==> c= f0 f1 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f5 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f6 c==> c= cl'y f2 f3 f7 f0 c==> c= cl'z f2 f8 f3 f7 f9 c==> c= cprev_el f3 f9 f4 c==> c= cfind_face f2 f0 f10 c==> c= csplit_normal_list f2 f3 f10 f0 f4 csplit_normal_list f2 f3 f10 f0 f4 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL c==> c~ c==> c~ cfinal_list f2 f3 c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f1 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f1 f4 cNIL ccat creplace f3 cCONS f6 cNIL f8 cCONS f5 cNIL cF
+ (y' = y), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) |- ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F)))))
T c==> c= f0 f1 c==> c= cl'y f2 f3 f4 f0 c==> c= cl'z f2 f5 f3 f4 f6 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f7 f8 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f7 f9 c==> c= cprev_el f3 f6 f7 c==> c= cfind_face f2 f0 f10 c==> c= csplit_normal_list f2 f3 f10 f0 f7 csplit_normal_list f2 f3 f10 f0 f7 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f7 cNIL f5 cCONS cFST csplit_normal_list f2 f3 f10 f0 f7 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f7 cNIL f5 cCONS cFST csplit_normal_list f2 f3 f10 f0 f7 cNIL c==> c~ c==> c~ cfinal_list f2 f3 c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f1 f7 cNIL f5 cCONS cFST csplit_normal_list f2 f3 f10 f1 f7 cNIL ccat creplace f3 cCONS f9 cNIL f5 cCONS f8 cNIL cF
- (~ F) |- ((F = F) = T)
T c==> c~ cF c= c= cF cF cT
+ |- (T ==> (?N'. (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))
T c==> cT c? / c= b0 cAPPEND creplace f0 cCONS cSND f1 cNIL f2 cCONS cFST f1 cNIL
- (_10514520 = _10514523), (_10514521 = _10514524) |- ((_10514519 = _10514522) ==> ((((replace _10514519) _10514520) _10514521) = (((replace _10514522) _10514523) _10514524)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c= creplace f4 f0 f2 creplace f5 f1 f3
+ (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))) = f1)
T c==> c= f0 cFST csplit_normal_list f1 f2 cfind_face f1 f3 f3 cprev_el f2 cl'z f1 f4 f2 f5 c= cFST csplit_normal_list f1 f2 cfind_face f1 f3 f3 cprev_el f2 cl'z f1 f4 f2 f5 f0
- (((find_face L) y') = f) |- (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) = ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1))
T c==> c= cfind_face f0 f1 f2 c= c= cFST csplit_normal_list f0 f3 cfind_face f0 f4 f4 f5 f6 c= cFST csplit_normal_list f0 f3 cfind_face f0 f4 f4 f5 f6
- (((prev_el r) z) = ram2), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) |- (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))) = f1) = ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))) = f1))
T c==> c= cprev_el f0 f1 f2 c==> c= cl'z f3 f4 f0 f5 f1 c==> c= cSND csplit_normal_list f3 f0 cfind_face f3 f6 f6 f2 f7 c= c= cFST csplit_normal_list f3 f0 cfind_face f3 f6 f6 cprev_el f0 cl'z f3 f4 f0 f5 f8 c= cFST csplit_normal_list f3 f0 cfind_face f3 f6 f6 cprev_el f0 cl'z f3 f4 f0 f5 f8
+ (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- ((\f2. (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x)))))) f2)
T c==> c= f0 cSND csplit_normal_list f1 f2 cfind_face f1 f3 f3 cprev_el f2 cl'z f1 f4 f2 f5 * / c= b0 cSND csplit_normal_list f1 f2 cfind_face f1 f3 f3 cprev_el f2 cl'z f1 f4 f2 f5 f0
+ F |- (F /\ ((N , r) = (N , r)))
T c==> cF c/\ cF c= c, f0 f1 c, f0 f1
+ |- ((ram2 = ((prev_el r) z)) = ((\ram2. (ram2 = ((prev_el r) z))) ram2))
T c= c= f0 cprev_el f1 f2 * / c= b0 cprev_el f1 f2 f0
+ |- ((\f. (!L. (!y'. (!z. (!x. ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F))))))))))))))) f)
T * / ! ! ! ! c==> c= b2 f0 c==> c= cFST csplit_normal_list b1 f1 cfind_face b1 f0 f0 f2 f3 c==> c= cSND csplit_normal_list b1 f1 cfind_face b1 f0 f0 f2 f4 c==> c= cl'y b1 f1 b4 b2 c==> c= cl'z b1 f5 f1 b4 b3 c==> c= cprev_el f1 b3 f2 c==> c= cfind_face b1 b2 b0 c==> c= csplit_normal_list b1 f1 b0 b2 f2 csplit_normal_list b1 f1 b0 b2 f2 c==> c= cAPPEND creplace f1 cCONS cSND csplit_normal_list b1 f1 b0 b2 f2 cNIL f5 cCONS cFST csplit_normal_list b1 f1 b0 b2 f2 cNIL cAPPEND creplace f1 cCONS cSND csplit_normal_list b1 f1 b0 b2 f2 cNIL f5 cCONS cFST csplit_normal_list b1 f1 b0 b2 f2 cNIL c==> c~ c==> c~ cfinal_list b1 f1 c= ccat creplace f1 cCONS cSND csplit_normal_list b1 f1 b0 f0 f2 cNIL f5 cCONS cFST csplit_normal_list b1 f1 b0 f0 f2 cNIL ccat creplace f1 cCONS f4 cNIL f5 cCONS f3 cNIL cF f6
+ (ram2 = ((prev_el r) z)) |- (((~ ((final_list L) r)) ==> ((FST ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))))) ram2)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = ((~ ((final_list L) r)) ==> ((FST ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y') ram2))))) ((find_face L) y'))))) ((prev_el r) z))) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c= f0 cprev_el f1 f2 c= c==> c~ cfinal_list f3 f1 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f3 f1 c, f4 f1 c, b3 cSND b2 cAPPEND creplace f1 cCONS cSND b2 cNIL f4 cCONS cFST b2 cNIL csplit_normal_list f3 f1 b1 f5 b0 cfind_face f3 f5 f0 ccat creplace f1 cCONS f6 cNIL f4 cCONS f7 cNIL c==> c~ cfinal_list f3 f1 c= cFST cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f3 f1 c, f4 f1 c, b3 cSND b2 cAPPEND creplace f1 cCONS cSND b2 cNIL f4 cCONS cFST b2 cNIL csplit_normal_list f3 f1 b1 f5 b0 cfind_face f3 f5 cprev_el f1 f2 ccat creplace f1 cCONS f6 cNIL f4 cCONS f7 cNIL
- (f1 = (FST (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- (((((l'y L) r) x) = y) = ((((l'y L) r) x) = y))
T c==> c= f0 cFST csplit_normal_list f1 f2 cfind_face f1 f3 f3 cprev_el f2 cl'z f1 f4 f2 f5 c= c= cl'y f1 f2 f5 f3 c= cl'y f1 f2 f5 f3
+ |- ((T ==> (?y'. (y' = (((l'y L) r) x)))) = (?y'. (y' = (((l'y L) r) x))))
T c= c==> cT c? / c= b0 cl'y f0 f1 f2 c? / c= b0 cl'y f0 f1 f2
- ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F)))))))))) |- (((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F)))))))))) /\ ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F)))))))))))
T c==> c==> c= f0 f1 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f5 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f6 c==> c= cl'y f2 f3 f7 f0 c==> c= cl'z f2 f8 f3 f7 f9 c==> c= cprev_el f3 f9 f4 c==> c= cfind_face f2 f0 f10 c==> c= csplit_normal_list f2 f3 f10 f0 f4 csplit_normal_list f2 f3 f10 f0 f4 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL c==> c~ c==> c~ cfinal_list f2 f3 c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f1 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f1 f4 cNIL ccat creplace f3 cCONS f6 cNIL f8 cCONS f5 cNIL cF c/\ c==> c= f0 f1 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f5 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f6 c==> c= cl'y f2 f3 f7 f0 c==> c= cl'z f2 f8 f3 f7 f9 c==> c= cprev_el f3 f9 f4 c==> c= cfind_face f2 f0 f10 c==> c= csplit_normal_list f2 f3 f10 f0 f4 csplit_normal_list f2 f3 f10 f0 f4 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL c==> c~ c==> c~ cfinal_list f2 f3 c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f1 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f1 f4 cNIL ccat creplace f3 cCONS f6 cNIL f8 cCONS f5 cNIL cF c==> c= f0 f1 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f5 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f6 c==> c= cl'y f2 f3 f7 f0 c==> c= cl'z f2 f8 f3 f7 f9 c==> c= cprev_el f3 f9 f4 c==> c= cfind_face f2 f0 f10 c==> c= csplit_normal_list f2 f3 f10 f0 f4 csplit_normal_list f2 f3 f10 f0 f4 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL c==> c~ c==> c~ cfinal_list f2 f3 c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f1 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f1 f4 cNIL ccat creplace f3 cCONS f6 cNIL f8 cCONS f5 cNIL cF
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- ((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) |- (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) = T)
T c==> c= csplit_normal_list f0 f1 f2 f3 f4 csplit_normal_list f0 f1 f2 f3 f4 c= c= csplit_normal_list f0 f1 f2 f3 f4 csplit_normal_list f0 f1 f2 f3 f4 cT
- F |- (F = T)
T c==> cF c= cF cT
- |- ((~ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) = ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)))) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) = ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL))))
T c==> c~ c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL f3 cCONS cFST csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL f3 cCONS cFST csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL f3 cCONS cFST csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL f3 cCONS cFST csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL
- |- ((_10514513 = _10514515) ==> ((~ (_10514514 = _10514516)) \/ (((final_list _10514515) _10514516) \/ (~ ((final_list _10514513) _10514514)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cfinal_list f1 f3 c~ cfinal_list f0 f2
- (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- (((((((split_normal_list L) r) f) y') ram2) = split) = ((((((split_normal_list L) r) f) y') ram2) = split))
T c==> c= f0 cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL c= c= csplit_normal_list f4 f1 f5 f6 f7 f2 c= csplit_normal_list f4 f1 f5 f6 f7 f2
- (y' = y), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((((((split_normal_list L) r) f) y') ram2) = split), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2), (((find_face L) y') = f), (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- ((~ ((final_list L) r)) ==> (((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))
T c==> c= f0 f1 c==> c= cprev_el f2 f3 f4 c==> c= cl'y f5 f2 f6 f0 c==> c= cl'z f5 f7 f2 f6 f3 c==> c= csplit_normal_list f5 f2 f8 f0 f4 f9 c==> c= cFST csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f10 c==> c= cSND csplit_normal_list f5 f2 cfind_face f5 f1 f1 f4 f11 c==> c= cfind_face f5 f0 f8 c==> c= cAPPEND creplace f2 cCONS cSND f9 cNIL f7 cCONS cFST f9 cNIL cAPPEND creplace f2 cCONS cSND f9 cNIL f7 cCONS cFST f9 cNIL c==> c~ cfinal_list f5 f2 c= cAPPEND creplace f2 cCONS cSND f9 cNIL f7 cCONS cFST f9 cNIL ccat creplace f2 cCONS f11 cNIL f7 cCONS f10 cNIL
- (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) |- ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) = T)
T c==> c= cAPPEND creplace f0 cCONS cSND csplit_normal_list f1 f0 f2 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f1 f0 f2 f3 f4 cNIL cAPPEND creplace f0 cCONS cSND csplit_normal_list f1 f0 f2 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f1 f0 f2 f3 f4 cNIL c= c= cAPPEND creplace f0 cCONS cSND csplit_normal_list f1 f0 f2 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f1 f0 f2 f3 f4 cNIL cAPPEND creplace f0 cCONS cSND csplit_normal_list f1 f0 f2 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f1 f0 f2 f3 f4 cNIL cT
- |- (((!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) ==> ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0)) = ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0))
T c= c==> ! c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1 * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1
- ((((l'y L) r) x) = y') |- ((~ ((final_list L) r)) = (~ ((final_list L) r)))
T c==> c= cl'y f0 f1 f2 f3 c= c~ cfinal_list f0 f1 c~ cfinal_list f0 f1
- (_10514529 = _10514532) |- ((_10514530 = _10514533) ==> ((~ (_10514531 = _10514534)) \/ ((((l'y _10514529) _10514530) _10514531) = (((l'y _10514532) _10514533) _10514534))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c= cl'y f0 f2 f4 cl'y f1 f3 f5
- (_10514559 = _10514561), (_10514560 = _10514562) |- ((_10514559 = _10514561) /\ (((CONS _10514559) _10514560) = ((CONS _10514561) _10514562)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= cCONS f0 f2 cCONS f1 f3
- |- ((_10514517 = _10514518) ==> ((SND _10514517) = (SND _10514518)))
T c==> c= f0 f1 c= cSND f0 cSND f1
- (~ F), (~ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))), (y' = y), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2), (((find_face L) y') = f) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 f2 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f1 f0 f2 f3 f4 cNIL ccat creplace f0 cCONS f6 cNIL f5 cCONS f7 cNIL c==> c= f8 f3 c==> c= cprev_el f0 f9 f4 c==> c= cl'y f1 f0 f10 f8 c==> c= cl'z f1 f5 f0 f10 f9 c==> c= cFST csplit_normal_list f1 f0 cfind_face f1 f3 f3 f4 f7 c==> c= cSND csplit_normal_list f1 f0 cfind_face f1 f3 f3 f4 f6 c==> c= cfind_face f1 f8 f2 c/\ c~ cF cF
- (f = ((find_face L) y')) |- (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) = ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1))
T c==> c= f0 cfind_face f1 f2 c= c= cFST csplit_normal_list f1 f3 cfind_face f1 f4 f4 f5 f6 c= cFST csplit_normal_list f1 f3 cfind_face f1 f4 f4 f5 f6
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (f = ((find_face L) y')) |- ((y' = y) = (y' = y))
T c==> c= f0 cfind_face f1 f2 c= c= f2 f3 c= f2 f3
- (((prev_el r) z) = ram2) |- ((~ ((final_list L) r)) = (~ ((final_list L) r)))
T c==> c= cprev_el f0 f1 f2 c= c~ cfinal_list f3 f0 c~ cfinal_list f3 f0
- |- ((((~ ((final_list L) r)) = (~ ((final_list L) r))) ==> (((~ ((final_list L) r)) ==> ((N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))) = q')) ==> (((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = ((~ ((final_list L) r)) ==> q')))) = (((~ ((final_list L) r)) ==> ((N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))) = q')) ==> (((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = ((~ ((final_list L) r)) ==> q'))))
T c= c==> c= c~ cfinal_list f0 f1 c~ cfinal_list f0 f1 c==> c==> c~ cfinal_list f0 f1 c= c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL f6 c= c==> c~ cfinal_list f0 f1 c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL c==> c~ cfinal_list f0 f1 f6 c==> c==> c~ cfinal_list f0 f1 c= c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL f6 c= c==> c~ cfinal_list f0 f1 c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL c==> c~ cfinal_list f0 f1 f6
- (_10514520 = _10514523) |- ((_10514520 = _10514523) /\ ((~ (_10514521 = _10514524)) \/ ((~ (_10514519 = _10514522)) \/ ((((replace _10514519) _10514520) _10514521) = (((replace _10514522) _10514523) _10514524)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c= creplace f4 f0 f2 creplace f5 f1 f3
- (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- ((((((l'z L) N) r) x) = z) = (((((l'z L) N) r) x) = z))
T c==> c= f0 cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL c= c= cl'z f4 f3 f1 f5 f6 c= cl'z f4 f3 f1 f5 f6
- (_10514537 = _10514541), (_10514535 = _10514539), (_10514536 = _10514540) |- ((~ (_10514538 = _10514542)) \/ (((((l'z _10514535) _10514536) _10514537) _10514538) = ((((l'z _10514539) _10514540) _10514541) _10514542)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c= cl'z f2 f4 f0 f6 cl'z f3 f5 f1 f7
- |- (((~ ((final_list L) r)) = p') ==> ((p' ==> ((N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))) = q')) ==> (((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = (p' ==> q'))))
T c==> c= c~ cfinal_list f0 f1 f2 c==> c==> f2 c= c= f3 ccat creplace f1 cCONS f4 cNIL f5 cCONS f6 cNIL f7 c= c==> c~ cfinal_list f0 f1 c= f3 ccat creplace f1 cCONS f4 cNIL f5 cCONS f6 cNIL c==> f2 f7
- (_10514513 = _10514515) |- ((_10514513 = _10514515) /\ ((~ (_10514514 = _10514516)) \/ (((final_list _10514515) _10514516) \/ (~ ((final_list _10514513) _10514514)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cfinal_list f1 f3 c~ cfinal_list f0 f2
- (_10514537 = _10514541), (_10514535 = _10514539), (_10514536 = _10514540) |- ((_10514538 = _10514542) ==> (((((l'z _10514535) _10514536) _10514537) _10514538) = ((((l'z _10514539) _10514540) _10514541) _10514542)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c= cl'z f2 f4 f0 f6 cl'z f3 f5 f1 f7
- (_10514560 = _10514562) |- ((_10514560 = _10514562) /\ ((~ (_10514559 = _10514561)) \/ (((CONS _10514559) _10514560) = ((CONS _10514561) _10514562))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f2 f0 cCONS f3 f1
- |- (((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F)))))))))) ==> ((y' = y) ==> (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) ==> (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) ==> (((((l'y L) r) x) = y') ==> ((((((l'z L) N) r) x) = z) ==> ((((prev_el r) z) = ram2) ==> ((((find_face L) y') = f) ==> (((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)) ==> ((((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) ==> ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> F)))))))))))
T c==> c==> c= f0 f1 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f5 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f6 c==> c= cl'y f2 f3 f7 f0 c==> c= cl'z f2 f8 f3 f7 f9 c==> c= cprev_el f3 f9 f4 c==> c= cfind_face f2 f0 f10 c==> c= csplit_normal_list f2 f3 f10 f0 f4 csplit_normal_list f2 f3 f10 f0 f4 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL c==> c~ c==> c~ cfinal_list f2 f3 c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f1 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f1 f4 cNIL ccat creplace f3 cCONS f6 cNIL f8 cCONS f5 cNIL cF c==> c= f0 f1 c==> c= cFST csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f5 c==> c= cSND csplit_normal_list f2 f3 cfind_face f2 f1 f1 f4 f6 c==> c= cl'y f2 f3 f7 f0 c==> c= cl'z f2 f8 f3 f7 f9 c==> c= cprev_el f3 f9 f4 c==> c= cfind_face f2 f0 f10 c==> c= csplit_normal_list f2 f3 f10 f0 f4 csplit_normal_list f2 f3 f10 f0 f4 c==> c= cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL cAPPEND creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f0 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f0 f4 cNIL c==> c~ c==> c~ cfinal_list f2 f3 c= ccat creplace f3 cCONS cSND csplit_normal_list f2 f3 f10 f1 f4 cNIL f8 cCONS cFST csplit_normal_list f2 f3 f10 f1 f4 cNIL ccat creplace f3 cCONS f6 cNIL f8 cCONS f5 cNIL cF
- (_10514543 = _10514545) |- ((_10514544 = _10514546) ==> (((prev_el _10514543) _10514544) = ((prev_el _10514545) _10514546)))
T c==> c= f0 f1 c==> c= f2 f3 c= cprev_el f0 f2 cprev_el f1 f3
- |- (((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) ==> ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s)) = ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s))
T c= c==> ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0 * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0
- |- (((~ ((final_list L) r)) ==> ((N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))) = q')) ==> (((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = ((~ ((final_list L) r)) ==> q')))
T c==> c==> c~ cfinal_list f0 f1 c= c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL f6 c= c==> c~ cfinal_list f0 f1 c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL c==> c~ cfinal_list f0 f1 f6
- (((prev_el r) z) = ram2), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) |- (F = F)
T c==> c= cprev_el f0 f1 f2 c==> c= cl'z f3 f4 f0 f5 f1 c==> c= cSND csplit_normal_list f3 f0 cfind_face f3 f6 f6 f2 f7 c= cF cF
- (f2 = (SND (((((split_normal_list L) r) ((find_face L) y)) y) ((prev_el r) ((((l'z L) N) r) x))))) |- (((((l'y L) r) x) = y) = ((((l'y L) r) x) = y))
T c==> c= f0 cSND csplit_normal_list f1 f2 cfind_face f1 f3 f3 cprev_el f2 cl'z f1 f4 f2 f5 c= c= cl'y f1 f2 f5 f3 c= cl'y f1 f2 f5 f3
- (((prev_el r) z) = ram2), (((((l'z L) N) r) x) = z), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) |- (F = F)
T c==> c= cprev_el f0 f1 f2 c==> c= cl'z f3 f4 f0 f5 f1 c==> c= cFST csplit_normal_list f3 f0 cfind_face f3 f6 f6 f2 f7 c= cF cF
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- (((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = ((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c= c==> c~ cfinal_list f0 f1 c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL c==> c~ cfinal_list f0 f1 c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL
- |- ((~ (_10514560 = _10514562)) \/ ((~ (_10514559 = _10514561)) \/ (((CONS _10514559) _10514560) = ((CONS _10514561) _10514562))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f2 f0 cCONS f3 f1
- (~ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))), (y' = y), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2), (((find_face L) y') = f) |- ((~ F) ==> F)
T c==> c~ c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 f2 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f1 f0 f2 f3 f4 cNIL ccat creplace f0 cCONS f6 cNIL f5 cCONS f7 cNIL c==> c= f8 f3 c==> c= cprev_el f0 f9 f4 c==> c= cl'y f1 f0 f10 f8 c==> c= cl'z f1 f5 f0 f10 f9 c==> c= cFST csplit_normal_list f1 f0 cfind_face f1 f3 f3 f4 f7 c==> c= cSND csplit_normal_list f1 f0 cfind_face f1 f3 f3 f4 f6 c==> c= cfind_face f1 f8 f2 c==> c~ cF cF
- |- ((~ (_10514547 = _10514552)) \/ ((~ (_10514548 = _10514553)) \/ ((~ (_10514549 = _10514554)) \/ ((~ (_10514550 = _10514555)) \/ ((~ (_10514551 = _10514556)) \/ ((((((split_normal_list _10514547) _10514548) _10514549) _10514550) _10514551) = (((((split_normal_list _10514552) _10514553) _10514554) _10514555) _10514556)))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csplit_normal_list f0 f2 f4 f6 f8 csplit_normal_list f1 f3 f5 f7 f9
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- |- (((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))) = T)
T c= c==> c~ c= cNIL f0 c= cLAST f0 clast f1 f0 cT
- (split = (((((split_normal_list L) r) f) y') ram2)) |- (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) = ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2))
T c==> c= f0 csplit_normal_list f1 f2 f3 f4 f5 c= c= cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 f5 f7 c= cSND csplit_normal_list f1 f2 cfind_face f1 f6 f6 f5 f7
- (((find_face L) y') = f) |- (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) = ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2))
T c==> c= cfind_face f0 f1 f2 c= c= cSND csplit_normal_list f0 f3 cfind_face f0 f4 f4 f5 f6 c= cSND csplit_normal_list f0 f3 cfind_face f0 f4 f4 f5 f6
- (split = (((((split_normal_list L) r) f) y') ram2)) |- ((((prev_el r) z) = ram2) = (((prev_el r) z) = ram2))
T c==> c= f0 csplit_normal_list f1 f2 f3 f4 f5 c= c= cprev_el f2 f6 f5 c= cprev_el f2 f6 f5
- |- ((LENGTH = sizel) /\ ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all))))))
T c/\ c= part cLENGTH part csizel c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
- (_10514548 = _10514553), (_10514549 = _10514554), (_10514547 = _10514552) |- ((_10514550 = _10514555) ==> ((~ (_10514551 = _10514556)) \/ ((((((split_normal_list _10514547) _10514548) _10514549) _10514550) _10514551) = (((((split_normal_list _10514552) _10514553) _10514554) _10514555) _10514556))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c= csplit_normal_list f4 f0 f2 f6 f8 csplit_normal_list f5 f1 f3 f7 f9
- (split = (((((split_normal_list L) r) f) y') ram2)) |- ((y' = y) = (y' = y))
T c==> c= f0 csplit_normal_list f1 f2 f3 f4 f5 c= c= f4 f6 c= f4 f6
- (_10514563 = _10514565), (_10514564 = _10514566) |- ((_10514564 = _10514566) /\ (((cat _10514563) _10514564) = ((cat _10514565) _10514566)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= ccat f0 f2 ccat f1 f3
- (_10514547 = _10514552) |- ((_10514547 = _10514552) /\ ((~ (_10514548 = _10514553)) \/ ((~ (_10514549 = _10514554)) \/ ((~ (_10514550 = _10514555)) \/ ((~ (_10514551 = _10514556)) \/ ((((((split_normal_list _10514547) _10514548) _10514549) _10514550) _10514551) = (((((split_normal_list _10514552) _10514553) _10514554) _10514555) _10514556)))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csplit_normal_list f0 f2 f4 f6 f8 csplit_normal_list f1 f3 f5 f7 f9
- |- ((~ (_10514529 = _10514532)) \/ ((~ (_10514530 = _10514533)) \/ ((~ (_10514531 = _10514534)) \/ ((((l'y _10514529) _10514530) _10514531) = (((l'y _10514532) _10514533) _10514534)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c= cl'y f0 f2 f4 cl'y f1 f3 f5
- (split = (((((split_normal_list L) r) f) y') ram2)) |- ((((((l'z L) N) r) x) = z) = (((((l'z L) N) r) x) = z))
T c==> c= f0 csplit_normal_list f1 f2 f3 f4 f5 c= c= cl'z f1 f6 f2 f7 f8 c= cl'z f1 f6 f2 f7 f8
- (_10514526 = _10514528), (_10514525 = _10514527) |- ((_10514526 = _10514528) /\ (((find_face _10514525) _10514526) = ((find_face _10514527) _10514528)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= cfind_face f2 f0 cfind_face f3 f1
- (~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))), (y' = y), (((prev_el r) z) = ram2), ((((l'y L) r) x) = y'), (((((l'z L) N) r) x) = z), ((((((split_normal_list L) r) f) y') ram2) = (((((split_normal_list L) r) f) y') ram2)), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1), ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2), (((find_face L) y') = f), (((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL)) = ((APPEND (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y') ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y') ram2))) NIL))) |- ((~ ((~ ((final_list L) r)) ==> (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) ram2))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) ram2))) NIL)) = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) /\ F)
T c==> c~ c==> c~ cfinal_list f0 f1 c= ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL ccat creplace f1 cCONS f6 cNIL f5 cCONS f7 cNIL c==> c= f8 f3 c==> c= cprev_el f1 f9 f4 c==> c= cl'y f0 f1 f10 f8 c==> c= cl'z f0 f5 f1 f10 f9 c==> c= csplit_normal_list f0 f1 f2 f8 f4 csplit_normal_list f0 f1 f2 f8 f4 c==> c= cFST csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 f7 c==> c= cSND csplit_normal_list f0 f1 cfind_face f0 f3 f3 f4 f6 c==> c= cfind_face f0 f8 f2 c==> c= cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f8 f4 cNIL f5 cCONS cFST csplit_normal_list f0 f1 f2 f8 f4 cNIL cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f8 f4 cNIL f5 cCONS cFST csplit_normal_list f0 f1 f2 f8 f4 cNIL c/\ c~ c==> c~ cfinal_list f0 f1 c= ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f2 f3 f4 cNIL f5 cCONS cFST csplit_normal_list f0 f1 f2 f3 f4 cNIL ccat creplace f1 cCONS f6 cNIL f5 cCONS f7 cNIL cF
- (~ F) |- (F = F)
T c==> c~ cF c= cF cF
- (z = ((((l'z L) N) r) x)) |- (((((l'y L) r) x) = y') = ((((l'y L) r) x) = y'))
T c==> c= f0 cl'z f1 f2 f3 f4 c= c= cl'y f1 f3 f4 f5 c= cl'y f1 f3 f4 f5
- (_10514550 = _10514555), (_10514551 = _10514556), (_10514548 = _10514553), (_10514549 = _10514554), (_10514547 = _10514552) |- ((_10514551 = _10514556) /\ ((((((split_normal_list _10514547) _10514548) _10514549) _10514550) _10514551) = (((((split_normal_list _10514552) _10514553) _10514554) _10514555) _10514556)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c/\ c= f2 f3 c= csplit_normal_list f8 f4 f6 f0 f2 csplit_normal_list f9 f5 f7 f1 f3
- (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- (((((l'y L) r) x) = y') = ((((l'y L) r) x) = y'))
T c==> c= f0 cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL c= c= cl'y f4 f1 f5 f6 c= cl'y f4 f1 f5 f6
- (f = ((find_face L) y')) |- (((((l'y L) r) x) = y') = ((((l'y L) r) x) = y'))
T c==> c= f0 cfind_face f1 f2 c= c= cl'y f1 f3 f4 f2 c= cl'y f1 f3 f4 f2
- (_10514513 = _10514515) |- ((_10514514 = _10514516) ==> (((final_list _10514515) _10514516) \/ (~ ((final_list _10514513) _10514514))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cfinal_list f1 f3 c~ cfinal_list f0 f2
- (split = (((((split_normal_list L) r) f) y') ram2)) |- (((((l'y L) r) x) = y') = ((((l'y L) r) x) = y'))
T c==> c= f0 csplit_normal_list f1 f2 f3 f4 f5 c= c= cl'y f1 f2 f6 f4 c= cl'y f1 f2 f6 f4
- (_10514514 = _10514516), (_10514513 = _10514515) |- ((_10514514 = _10514516) /\ (((final_list _10514515) _10514516) \/ (~ ((final_list _10514513) _10514514))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cfinal_list f3 f1 c~ cfinal_list f2 f0
- (_10514550 = _10514555), (_10514548 = _10514553), (_10514549 = _10514554), (_10514547 = _10514552) |- ((_10514550 = _10514555) /\ ((~ (_10514551 = _10514556)) \/ ((((((split_normal_list _10514547) _10514548) _10514549) _10514550) _10514551) = (((((split_normal_list _10514552) _10514553) _10514554) _10514555) _10514556))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c/\ c= f0 f1 c\/ c~ c= f8 f9 c= csplit_normal_list f6 f2 f4 f0 f8 csplit_normal_list f7 f3 f5 f1 f9
- (_10514548 = _10514553), (_10514547 = _10514552) |- ((_10514549 = _10514554) ==> ((~ (_10514550 = _10514555)) \/ ((~ (_10514551 = _10514556)) \/ ((((((split_normal_list _10514547) _10514548) _10514549) _10514550) _10514551) = (((((split_normal_list _10514552) _10514553) _10514554) _10514555) _10514556)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csplit_normal_list f2 f0 f4 f6 f8 csplit_normal_list f3 f1 f5 f7 f9
- (_10514525 = _10514527) |- ((_10514525 = _10514527) /\ ((~ (_10514526 = _10514528)) \/ (((find_face _10514525) _10514526) = ((find_face _10514527) _10514528))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cfind_face f0 f2 cfind_face f1 f3
- (_10514529 = _10514532) |- ((_10514529 = _10514532) /\ ((~ (_10514530 = _10514533)) \/ ((~ (_10514531 = _10514534)) \/ ((((l'y _10514529) _10514530) _10514531) = (((l'y _10514532) _10514533) _10514534)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c= cl'y f0 f2 f4 cl'y f1 f3 f5
- |- ((_10514543 = _10514545) ==> ((~ (_10514544 = _10514546)) \/ (((prev_el _10514543) _10514544) = ((prev_el _10514545) _10514546))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cprev_el f0 f2 cprev_el f1 f3
- (split = (((((split_normal_list L) r) f) y') ram2)) |- (((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) = ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1))
T c==> c= f0 csplit_normal_list f1 f2 f3 f4 f5 c= c= cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 f5 f7 c= cFST csplit_normal_list f1 f2 cfind_face f1 f6 f6 f5 f7
- (f = ((find_face L) y')) |- ((((((l'z L) N) r) x) = z) = (((((l'z L) N) r) x) = z))
T c==> c= f0 cfind_face f1 f2 c= c= cl'z f1 f3 f4 f5 f6 c= cl'z f1 f3 f4 f5 f6
- |- ((!x. (P x)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- (~ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) = ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)))) |- ((~ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) = ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)))) /\ (((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) = ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) NIL))))
T c==> c~ c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL f3 cCONS cFST csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL f3 cCONS cFST csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL c/\ c~ c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL f3 cCONS cFST csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL f3 cCONS cFST csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL c= ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL f3 cCONS cFST csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL ccat creplace f0 cCONS cSND csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL f3 cCONS cFST csplit_normal_list f1 f0 cfind_face f1 cl'y f1 f0 f2 cl'y f1 f0 f2 cprev_el f0 cl'z f1 f3 f0 f2 cNIL
- |- ((((~ ((final_list L) r)) ==> ((N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))) = (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))) ==> (((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = ((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))) = (((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = ((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))))))
T c= c==> c==> c~ cfinal_list f0 f1 c= c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL c= c==> c~ cfinal_list f0 f1 c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL c==> c~ cfinal_list f0 f1 c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL c= c==> c~ cfinal_list f0 f1 c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL c==> c~ cfinal_list f0 f1 c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (_10514517 = _10514518)) \/ ((SND _10514517) = (SND _10514518)))
T c\/ c~ c= f0 f1 c= cSND f0 cSND f1
- |- ((~ ((final_list L) r)) ==> ((N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))) = (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))))
T c==> c~ cfinal_list f0 f1 c= c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL c= f2 ccat creplace f1 cCONS f3 cNIL f4 cCONS f5 cNIL
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- (N' = ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL))) |- (((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2) = ((SND (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f2))
T c==> c= f0 cAPPEND creplace f1 cCONS cSND f2 cNIL f3 cCONS cFST f2 cNIL c= c= cSND csplit_normal_list f4 f1 cfind_face f4 f5 f5 f6 f7 c= cSND csplit_normal_list f4 f1 cfind_face f4 f5 f5 f6 f7
- |- ((APPEND = cat) /\ (ALL = all))
T c/\ c= part cAPPEND part ccat c= part cALL part call
- |- (FILTER = filter)
T c= part cFILTER part cfilter
- |- ((_10514535 = _10514539) ==> ((~ (_10514536 = _10514540)) \/ ((~ (_10514537 = _10514541)) \/ ((~ (_10514538 = _10514542)) \/ (((((l'z _10514535) _10514536) _10514537) _10514538) = ((((l'z _10514539) _10514540) _10514541) _10514542))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c= cl'z f0 f2 f4 f6 cl'z f1 f3 f5 f7
- (_10514520 = _10514523), (_10514521 = _10514524) |- ((_10514521 = _10514524) /\ ((~ (_10514519 = _10514522)) \/ ((((replace _10514519) _10514520) _10514521) = (((replace _10514522) _10514523) _10514524))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c~ c= f4 f5 c= creplace f4 f0 f2 creplace f5 f1 f3
- (((((l'z L) N) r) x) = z) |- ((~ ((final_list L) r)) = (~ ((final_list L) r)))
T c==> c= cl'z f0 f1 f2 f3 f4 c= c~ cfinal_list f0 f2 c~ cfinal_list f0 f2
- |- ((_10514520 = _10514523) ==> ((~ (_10514521 = _10514524)) \/ ((~ (_10514519 = _10514522)) \/ ((((replace _10514519) _10514520) _10514521) = (((replace _10514522) _10514523) _10514524)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c= creplace f4 f0 f2 creplace f5 f1 f3
- (_10514557 = _10514558) |- ((_10514557 = _10514558) /\ ((FST _10514557) = (FST _10514558)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cFST f0 cFST f1
- (_10514543 = _10514545) |- ((_10514543 = _10514545) /\ ((~ (_10514544 = _10514546)) \/ (((prev_el _10514543) _10514544) = ((prev_el _10514545) _10514546))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cprev_el f0 f2 cprev_el f1 f3
- (_10514531 = _10514534), (_10514530 = _10514533), (_10514529 = _10514532) |- ((_10514531 = _10514534) /\ ((((l'y _10514529) _10514530) _10514531) = (((l'y _10514532) _10514533) _10514534)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f0 f1 c= cl'y f4 f2 f0 cl'y f5 f3 f1
- (_10514525 = _10514527) |- ((_10514526 = _10514528) ==> (((find_face _10514525) _10514526) = ((find_face _10514527) _10514528)))
T c==> c= f0 f1 c==> c= f2 f3 c= cfind_face f0 f2 cfind_face f1 f3
- ((((l'y L) r) x) = y') |- (F = F)
T c==> c= cl'y f0 f1 f2 f3 c= cF cF
- |- ((~ (_10514513 = _10514515)) \/ ((~ (_10514514 = _10514516)) \/ (((final_list _10514515) _10514516) \/ (~ ((final_list _10514513) _10514514)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cfinal_list f1 f3 c~ cfinal_list f0 f2
- (((prev_el r) z) = ram2), (((((l'z L) N) r) x) = z), ((FST (((((split_normal_list L) r) ((find_face L) y)) y) ram2)) = f1) |- ((~ ((final_list L) r)) = (~ ((final_list L) r)))
T c==> c= cprev_el f0 f1 f2 c==> c= cl'z f3 f4 f0 f5 f1 c==> c= cFST csplit_normal_list f3 f0 cfind_face f3 f6 f6 f2 f7 c= c~ cfinal_list f3 f0 c~ cfinal_list f3 f0
- (((((l'z L) N) r) x) = z) |- (F = F)
T c==> c= cl'z f0 f1 f2 f3 f4 c= cF cF
- (_10514548 = _10514553), (_10514547 = _10514552) |- ((~ (_10514549 = _10514554)) \/ ((~ (_10514550 = _10514555)) \/ ((~ (_10514551 = _10514556)) \/ ((((((split_normal_list _10514547) _10514548) _10514549) _10514550) _10514551) = (((((split_normal_list _10514552) _10514553) _10514554) _10514555) _10514556)))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csplit_normal_list f2 f0 f4 f6 f8 csplit_normal_list f3 f1 f5 f7 f9
- |- ((~ (_10514557 = _10514558)) \/ ((FST _10514557) = (FST _10514558)))
T c\/ c~ c= f0 f1 c= cFST f0 cFST f1
- (_10514548 = _10514553), (_10514547 = _10514552) |- ((_10514548 = _10514553) /\ ((~ (_10514549 = _10514554)) \/ ((~ (_10514550 = _10514555)) \/ ((~ (_10514551 = _10514556)) \/ ((((((split_normal_list _10514547) _10514548) _10514549) _10514550) _10514551) = (((((split_normal_list _10514552) _10514553) _10514554) _10514555) _10514556))))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csplit_normal_list f2 f0 f4 f6 f8 csplit_normal_list f3 f1 f5 f7 f9
- (_10514563 = _10514565) |- ((_10514564 = _10514566) ==> (((cat _10514563) _10514564) = ((cat _10514565) _10514566)))
T c==> c= f0 f1 c==> c= f2 f3 c= ccat f0 f2 ccat f1 f3
- |- ((_10514557 = _10514558) ==> ((FST _10514557) = (FST _10514558)))
T c==> c= f0 f1 c= cFST f0 cFST f1
- (_10514548 = _10514553), (_10514549 = _10514554), (_10514547 = _10514552) |- ((_10514549 = _10514554) /\ ((~ (_10514550 = _10514555)) \/ ((~ (_10514551 = _10514556)) \/ ((((((split_normal_list _10514547) _10514548) _10514549) _10514550) _10514551) = (((((split_normal_list _10514552) _10514553) _10514554) _10514555) _10514556)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f2 f3 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csplit_normal_list f4 f0 f2 f6 f8 csplit_normal_list f5 f1 f3 f7 f9
- |- ((_10514547 = _10514552) ==> ((~ (_10514548 = _10514553)) \/ ((~ (_10514549 = _10514554)) \/ ((~ (_10514550 = _10514555)) \/ ((~ (_10514551 = _10514556)) \/ ((((((split_normal_list _10514547) _10514548) _10514549) _10514550) _10514551) = (((((split_normal_list _10514552) _10514553) _10514554) _10514555) _10514556)))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c= csplit_normal_list f0 f2 f4 f6 f8 csplit_normal_list f1 f3 f5 f7 f9
- |- (((!q'. (((~ ((final_list L) r)) = p') ==> ((p' ==> ((N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))) = q')) ==> (((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = (p' ==> q'))))) ==> ((\q'. (((~ ((final_list L) r)) = p') ==> ((p' ==> ((N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))) = q')) ==> (((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = (p' ==> q'))))) q')) = ((\q'. (((~ ((final_list L) r)) = p') ==> ((p' ==> ((N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL))) = q')) ==> (((~ ((final_list L) r)) ==> (N' = ((cat (((replace r) ((CONS f2) NIL)) N)) ((CONS f1) NIL)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c~ cfinal_list f0 f1 f2 c==> c==> f2 c= c= f3 ccat creplace f1 cCONS f4 cNIL f5 cCONS f6 cNIL b0 c= c==> c~ cfinal_list f0 f1 c= f3 ccat creplace f1 cCONS f4 cNIL f5 cCONS f6 cNIL c==> f2 b0 * / c==> c= c~ cfinal_list f0 f1 f2 c==> c==> f2 c= c= f3 ccat creplace f1 cCONS f4 cNIL f5 cCONS f6 cNIL b0 c= c==> c~ cfinal_list f0 f1 c= f3 ccat creplace f1 cCONS f4 cNIL f5 cCONS f6 cNIL c==> f2 b0 f7 * / c==> c= c~ cfinal_list f0 f1 f2 c==> c==> f2 c= c= f3 ccat creplace f1 cCONS f4 cNIL f5 cCONS f6 cNIL b0 c= c==> c~ cfinal_list f0 f1 c= f3 ccat creplace f1 cCONS f4 cNIL f5 cCONS f6 cNIL c==> f2 b0 f7
- (((find_face L) y') = f) |- ((~ ((final_list L) r)) = (~ ((final_list L) r)))
T c==> c= cfind_face f0 f1 f2 c= c~ cfinal_list f0 f3 c~ cfinal_list f0 f3
- (_10514535 = _10514539), (_10514536 = _10514540) |- ((_10514537 = _10514541) ==> ((~ (_10514538 = _10514542)) \/ (((((l'z _10514535) _10514536) _10514537) _10514538) = ((((l'z _10514539) _10514540) _10514541) _10514542))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c= cl'z f0 f2 f4 f6 cl'z f1 f3 f5 f7
- |- ((_10514563 = _10514565) ==> ((~ (_10514564 = _10514566)) \/ (((cat _10514563) _10514564) = ((cat _10514565) _10514566))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= ccat f0 f2 ccat f1 f3
- (y' = y), ((((l'y L) r) x) = y') |- ((~ ((final_list L) r)) = (~ ((final_list L) r)))
T c==> c= f0 f1 c==> c= cl'y f2 f3 f4 f0 c= c~ cfinal_list f2 f3 c~ cfinal_list f2 f3
- (((find_face L) y') = f) |- ((((prev_el r) z) = ram2) = (((prev_el r) z) = ram2))
T c==> c= cfind_face f0 f1 f2 c= c= cprev_el f3 f4 f5 c= cprev_el f3 f4 f5
- (_10514538 = _10514542), (_10514537 = _10514541), (_10514535 = _10514539), (_10514536 = _10514540) |- ((_10514538 = _10514542) /\ (((((l'z _10514535) _10514536) _10514537) _10514538) = ((((l'z _10514539) _10514540) _10514541) _10514542)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c/\ c= f0 f1 c= cl'z f4 f6 f2 f0 cl'z f5 f7 f3 f1
- |- ((~ (_10514525 = _10514527)) \/ ((~ (_10514526 = _10514528)) \/ (((find_face _10514525) _10514526) = ((find_face _10514527) _10514528))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cfind_face f0 f2 cfind_face f1 f3
- |- ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s)
T * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0
- (_10514563 = _10514565) |- ((_10514563 = _10514565) /\ ((~ (_10514564 = _10514566)) \/ (((cat _10514563) _10514564) = ((cat _10514565) _10514566))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= ccat f0 f2 ccat f1 f3
- (ram2 = ((prev_el r) z)) |- ((y' = y) = (y' = y))
T c==> c= f0 cprev_el f1 f2 c= c= f3 f4 c= f3 f4
