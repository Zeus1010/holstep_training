N Leaf_cell.COPLANAR_UNION
C |- (!P. (!Q. (!a. (!b. (((~ (P = EMPTY)) /\ ((~ (Q = EMPTY)) /\ ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))))))) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))))))
T c==> c/\ c~ c= f0 part cEMPTY c/\ c~ c= f1 part cEMPTY c/\ ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_EQ
A |- (!x. (!y. ((~ (x = y)) = (((int_lt x) y) \/ ((int_lt y) x)))))
T c= c~ c= f0 f1 c\/ cint_lt f0 f1 cint_lt f1 f0
D INT_NOT_LE
A |- (!x. (!y. ((~ ((int_le x) y)) = ((int_lt y) x))))
T c= c~ cint_le f0 f1 cint_lt f1 f0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_UNION
A |- (!s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))))
T c= cIN f0 * * part cUNION f1 f2 c\/ cIN f0 f1 cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D MEMBER_NOT_EMPTY
A |- (!s. ((?x. (x IN s)) = (~ (s = EMPTY))))
T c= c? / cIN b0 f0 c~ c= f0 part cEMPTY
D SUBSET_TRANS
A |- (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u)))))
T c==> c/\ cSUBSET f0 f1 cSUBSET f1 f2 cSUBSET f0 f2
D HULL_SUBSET
A |- (!P. (!s. (s SUBSET ((hull P) s))))
T cSUBSET f0 * * part chull f1 f0
D Trigonometry.JLWZFBH4
A |- (!s. ((coplanar s) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))
T c= ccoplanar f0 c? / c? / c? / cSUBSET f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
D AFF_DIM_AFFINE_HULL
A |- (!s. ((aff_dim ((hull affine) s)) = (aff_dim s)))
T c= caff_dim * * part chull part caffine f0 caff_dim f0
D AFF_DIM_EQ_AFFINE_HULL
A |- (!s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t)))))
T c==> c/\ cSUBSET f0 f1 cint_le caff_dim f1 caff_dim f0 c= * * part chull part caffine f0 * * part chull part caffine f1
D COLLINEAR_AFF_DIM
A |- (!s. ((collinear s) = ((int_le (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0))))))
T c= ccollinear f0 cint_le caff_dim f0 cint_of_num cNUMERAL cBIT1 c_0
D Planarity.AFFINE_HULL_AFFINE_EQ
A |- (!s. (((hull affine) ((hull affine) s)) = ((hull affine) s)))
T c= * * part chull part caffine * * part chull part caffine f0 * * part chull part caffine f0
D Leaf_cell.AFF_DIM_3
A |- (!a. (!b. (!c. ((int_le (aff_dim (a INSERT (b INSERT (c INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
D Leaf_cell.COPLANAR_INSERT
A |- (!s. (!p. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s)))))
T c==> c/\ c= caff_dim f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT f1 f0 cIN f1 * * part chull part caffine f0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (x = b) |- (((~ (_7062357 = x')) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062357)) = ((~ (_7062357 = x')) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062357)))
T c==> c= f0 f1 c= c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2
+ (x IN P), (x'' IN Q) |- ((((x IN P) /\ (x'' IN Q)) ==> ((coplanar (x INSERT (x'' INSERT (a INSERT (b INSERT EMPTY))))) = T)) = ((coplanar (x INSERT (x'' INSERT (a INSERT (b INSERT EMPTY))))) = T))
T c==> cIN f0 f1 c==> cIN f2 f3 c= c==> c/\ cIN f0 f1 cIN f2 f3 c= ccoplanar * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cT c= ccoplanar * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cT
- (x = b) |- (((~ (_7062356 = b)) \/ ((_7062356 = x') \/ ((_7062356 = a) \/ (_7062356 = b)))) = ((~ (_7062356 = b)) \/ ((_7062356 = x') \/ ((_7062356 = a) \/ (_7062356 = b)))))
T c==> c= f0 f1 c= c\/ c~ c= f2 f1 c\/ c= f2 f3 c\/ c= f2 f4 c= f2 f1 c\/ c~ c= f2 f1 c\/ c= f2 f3 c\/ c= f2 f4 c= f2 f1
+ (~ (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b)))))) |- ((((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) \/ (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))
T c==> c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c\/ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4
+ (x' = a), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- ((x' = a) /\ F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f4 c/\ c= f0 f1 cF
- (~ F), (x' = x''), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c/\ c~ cF cF
- (x' = x''), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- (~ (x'' = a))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c~ c= f1 f3
+ |- ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'))))))))
T c==> * f0 f1 c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ! ! c==> c/\ * f2 b0 * f0 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f0 b0 * f6 b0 chull part caffine * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1
+ |- ((((!x. ((x IN (P UNION Q)) ==> (x IN ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!x. ((x IN (a INSERT (b INSERT EMPTY))) ==> (x IN (x' INSERT (a INSERT (b INSERT EMPTY)))))) /\ (!x. ((x IN (x' INSERT (a INSERT (b INSERT EMPTY)))) ==> (x IN ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))))) ==> (!x. ((x IN (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))) ==> (x IN ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))) = ((((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((P UNION (Q UNION (a INSERT (b INSERT EMPTY)))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))
T c= c==> c/\ ! c==> cIN b0 * * part cUNION f0 f1 cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ ! c==> cIN b0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN b0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c==> cIN b0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c==> cIN b0 * * part cUNION f0 * * part cUNION f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cUNION f0 * * part cUNION f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))) |- ((!s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))) /\ (!s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))))
T c==> ! ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1 c/\ ! ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1 ! ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1
+ (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) |- (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) \/ (~ (E x))))
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 ! c\/ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c~ * f3 b0
- |- ((!a. (!x. (!E. (!Q. (!P. ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))))))) = T)
T c= ! ! ! ! ! c==> * b4 b1 c==> * b3 f0 c==> ! c==> * b4 b5 c~ ccollinear * * part cINSERT b5 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c==> ! c==> * b3 b5 c~ ccollinear * * part cINSERT b5 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c==> ! ! c==> c/\ * b4 b5 * b3 b6 ccoplanar * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c==> ! c= chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b5 * b2 b5 c==> c/\ c= caff_dim * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b3 b5 * b2 b5 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f0 cT
+ |- ((x IN P) ==> ((x' IN Q) ==> ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) = (x' IN E))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((x IN Q) ==> (x IN E))) ==> (x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))))))))))
T c==> cIN f0 f1 c==> cIN f2 f3 c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> cIN b0 f3 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ cIN b0 f1 cIN b1 f3 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN b0 f6 c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> cIN b0 f3 cIN b0 f6 cIN f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (~ (~ (((real_le (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_le (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) /\ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) /\ ((((real_le ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) \/ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) \/ (((real_le ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) \/ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))))))))))) |- ((~ (~ (((real_le (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_le (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) /\ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) /\ ((((real_le ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) \/ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) \/ (((real_le ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) \/ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))))))))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c\/ creal_le creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ creal_le creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c~ c/\ creal_le creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c\/ creal_le creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ creal_le creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- |- ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E) = ((\E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) E))
T c= c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 * / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f3
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x IN P), (x' IN Q), (Q SUBSET E) |- ((((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) ==> ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) /\ ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f0 c==> cIN f6 f1 c==> cSUBSET f1 f5 c/\ c==> c/\ cIN f6 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ ((x = a) \/ (x = b)) |- ((~ ((x = x') \/ ((x = a) \/ (x = b)))) ==> F)
T c==> c\/ c= f0 f1 c= f0 f2 c==> c~ c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f2 cF
- ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F) |- (((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F) /\ ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c/\ c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ |- ((!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b)))))) = (!x'. ((x' IN (x'' INSERT (x INSERT (a INSERT (b INSERT EMPTY))))) = (x' IN (x INSERT (x'' INSERT (a INSERT (b INSERT EMPTY))))))))
T c= ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 ! c= cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (x = b) |- ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) b) ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f2 c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 cF
+ |- (T = (((F ==> B) /\ F) ==> B))
T c= cT c==> c/\ c==> cF f0 cF f0
- |- (((!E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)) ==> ((\E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)) E)) = ((\E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)) E))
T c= c==> ! c==> c~ c==> ! c==> * f0 b1 * b0 b1 c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 * b0 b1 c==> ! c==> * f4 b1 * b0 b1 ! c==> c\/ * f4 b1 * f0 b1 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 cF * / c==> c~ c==> ! c==> * f0 b1 * b0 b1 c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 * b0 b1 c==> ! c==> * f4 b1 * b0 b1 ! c==> c\/ * f4 b1 * f0 b1 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 cF f5 * / c==> c~ c==> ! c==> * f0 b1 * b0 b1 c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 * b0 b1 c==> ! c==> * f4 b1 * b0 b1 ! c==> c\/ * f4 b1 * f0 b1 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 cF f5
- |- (((!x'. (!b. (!a. (!x. (!E. (!Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F)))))))) ==> ((\x'. (!b. (!a. (!x. (!E. (!Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F)))))))) x')) = ((\x'. (!b. (!a. (!x. (!E. (!Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F)))))))) x'))
T c= c==> ! ! ! ! ! ! ! c==> c~ c==> * b6 b3 c==> * b5 b0 c==> ! c==> * b6 b7 c~ ccollinear * * part cINSERT b7 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! c==> * b5 b7 c~ ccollinear * * part cINSERT b7 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! ! c==> c/\ * b6 b7 * b5 b8 ccoplanar * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! c= chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b7 * b4 b7 c==> c/\ c= caff_dim * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b5 b7 * b4 b7 chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF * / ! ! ! ! ! ! c==> c~ c==> * b6 b3 c==> * b5 b0 c==> ! c==> * b6 b7 c~ ccollinear * * part cINSERT b7 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! c==> * b5 b7 c~ ccollinear * * part cINSERT b7 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! ! c==> c/\ * b6 b7 * b5 b8 ccoplanar * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! c= chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b7 * b4 b7 c==> c/\ c= caff_dim * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b5 b7 * b4 b7 chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF f0 * / ! ! ! ! ! ! c==> c~ c==> * b6 b3 c==> * b5 b0 c==> ! c==> * b6 b7 c~ ccollinear * * part cINSERT b7 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! c==> * b5 b7 c~ ccollinear * * part cINSERT b7 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! ! c==> c/\ * b6 b7 * b5 b8 ccoplanar * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! c= chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b7 * b4 b7 c==> c/\ c= caff_dim * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b5 b7 * b4 b7 chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF f0
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E), (P SUBSET E), (Q SUBSET E) |- ((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> cSUBSET f4 f3 c==> cSUBSET f5 f3 cSUBSET * * part cUNION f4 f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((!x'. ((~ (P x')) \/ (E x))) = ((!x. (~ (P x))) \/ (E x)))
T c= ! c\/ c~ * f0 b0 * f1 f2 c\/ ! c~ * f0 b0 * f1 f2
- |- (((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F) = ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)))))))
T c= c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0
- (x = b) |- ((~ (x = a)) = (~ (b = a)))
T c==> c= f0 f1 c= c~ c= f0 f2 c~ c= f1 f2
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((s SUBSET ((hull P) s)) = T)
T c= cSUBSET f0 * * part chull f1 f0 cT
- (~ ((x = x') \/ ((x = a) \/ (x = b)))), (x = b) |- (~ (b = a))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f3 c~ c= f3 f2
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (x' IN Q), (x'' IN P) |- ((coplanar (x'' INSERT (x' INSERT (a INSERT (b INSERT EMPTY))))) = T)
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 f1 c==> cIN f5 f0 c= ccoplanar * * part cINSERT f5 * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (x IN P), (x' IN Q) |- ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 f0 c==> cIN f5 f1 c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6 ccoplanar * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ ((\E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) E) |- (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))) = (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))
T c==> * / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f3 c= c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ccoplanar * * part cUNION f4 * * part cUNION f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccoplanar * * part cUNION f4 * * part cUNION f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')) = T)
T c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= c==> c\/ c= f4 f3 c\/ c= f4 f1 c= f4 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 cT
+ |- (((!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) ==> ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)) = ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s))
T c= c==> ! ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F), (((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F)) |- (((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F) /\ ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c/\ c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF
+ (~ (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b)))))), ((((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) ==> F) |- F
T c==> c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c==> c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 cF cF
- (!s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))) |- ((\s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))) s)
T c==> ! ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1 * / ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1 f0
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ (?x. (x IN P)), ((?x. (x IN Q)) /\ ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY))))))))))) |- (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))
T c==> c? / cIN b0 f0 c==> c/\ c? / cIN b0 f1 c/\ ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((~ (b = b)) ==> (b = b))
T c==> c~ c= f0 f0 c= f0 f0
- |- (((((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F) ==> ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)) ==> (((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F) ==> ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F))) = (((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F) ==> ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)))
T c= c==> c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF
+ ((s SUBSET t) /\ (t SUBSET u)) |- (((s SUBSET t) /\ (t SUBSET u)) /\ ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) ==> (s SUBSET u)))
T c==> c/\ cSUBSET f0 f1 cSUBSET f1 f2 c/\ c/\ cSUBSET f0 f1 cSUBSET f1 f2 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 cSUBSET f0 f2
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) |- ((\p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) p)
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
- |- (((!b. (!a. (!x''. (!x. ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F))))) ==> ((\b. (!a. (!x''. (!x. ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F))))) b)) = ((\b. (!a. (!x''. (!x. ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F))))) b))
T c= c==> ! ! ! ! c==> c~ ! c= c\/ c= b4 b2 c\/ c= b4 b3 c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF * / ! ! ! c==> c~ ! c= c\/ c= b4 b2 c\/ c= b4 b3 c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0 * / ! ! ! c==> c~ ! c= c\/ c= b4 b2 c\/ c= b4 b3 c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0
+ |- ((\p. (!s. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s))))) p)
T * / ! c==> c/\ c= caff_dim b1 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT b0 b1 cIN b0 * * part chull part caffine b1 f0
+ ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))), ((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) |- (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) /\ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c==> c\/ * f0 f5 c\/ * f1 f5 c\/ c= f5 f3 c= f5 f4 c/\ c\/ * f0 f5 c\/ * f1 f5 c\/ c= f5 f3 c= f5 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5
- (x' = x), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c~ cF cF
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- (((!x. (((\t. ((s SUBSET t) /\ (t SUBSET u))) x) ==> ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) ==> (s SUBSET u)))) ==> ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) ==> (s SUBSET u)))) = ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) ==> (s SUBSET u))))
T c= c==> ! c==> * / c/\ cSUBSET f0 b1 cSUBSET b1 f1 b0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 cSUBSET b2 b3 cSUBSET b1 b3 cSUBSET f0 f1 c==> c? / c/\ cSUBSET f0 b0 cSUBSET b0 f1 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 cSUBSET f0 f1 c==> c? / c/\ cSUBSET f0 b0 cSUBSET b0 f1 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 cSUBSET f0 f1
- (~ F), (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (P x), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> * f4 f3 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ cF cF
- |- ((~ (_7062312 = _7062313)) \/ ((BIT1 _7062312) = (BIT1 _7062313)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) |- (!u. ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u)))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 ! c==> c? / c/\ cSUBSET f0 b1 cSUBSET b1 b0 cSUBSET f0 b0
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x IN P) |- (((x'' IN Q) ==> (x'' IN E)) = T)
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f0 c= c==> cIN f7 f1 cIN f7 f5 cT
- (x'' = x') |- (((~ (_7062224 = a)) \/ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) _7062224)) = ((~ (_7062224 = a)) \/ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) _7062224)))
T c==> c= f0 f1 c= c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f4 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f2 c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f4 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f2
+ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E) |- ((x'' IN E) = (x'' IN ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= cIN f4 f3 cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), ((p IN P) /\ (q IN Q)) |- (((p IN P) /\ (q IN Q)) /\ ((coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY))))) = T))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ cIN f4 f0 cIN f5 f1 c/\ c/\ cIN f4 f0 cIN f5 f1 c= ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ (x' = a), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- ((a = a) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f4 c==> c= f1 f1 cF
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x IN P), (x'' IN Q) |- (x'' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f0 c==> cIN f6 f1 cIN f6 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ (x'' = x') |- ((~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')) = (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))
T c==> c= f0 f1 c= c~ chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c~ chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1
+ |- ((x INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))
T cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (T = (((~ (Q _7062454)) \/ (E _7062454)) = ((E _7062454) \/ (~ (Q _7062454)))))
T c= cT c= c\/ c~ * f0 f1 * f2 f1 c\/ * f2 f1 c~ * f0 f1
- (((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F) ==> ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F)) |- ((((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F) ==> ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F)) /\ (((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F) ==> ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c/\ c==> c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
- (x' = x''), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- (~ (x'' = b))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c~ c= f1 f4
+ ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((~ (x' = a)) /\ (~ (x' = b))) \/ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'))))
T c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
+ (~ ((x = x') \/ ((x = a) \/ (x = b)))) |- ((x = b) ==> F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f3 cF
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
- (~ F), (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (x = a), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f1 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ cF cF
+ |- (((!a. (!b. (!c. ((int_le (aff_dim (a INSERT (b INSERT (c INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> ((\a. (!b. (!c. ((int_le (aff_dim (a INSERT (b INSERT (c INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) x')) = ((\a. (!b. (!c. ((int_le (aff_dim (a INSERT (b INSERT (c INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) x'))
T c= c==> ! ! ! cint_le caff_dim * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 * / ! ! cint_le caff_dim * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 * / ! ! cint_le caff_dim * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f0
+ (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- ((~ (x' = a)) /\ (~ (x' = b)))
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c/\ c~ c= f0 f3 c~ c= f0 f4
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (x' = x), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- (~ (x = x''))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c~ c= f1 f2
+ |- (((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))
T c==> cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (!x. ((Q x) ==> (E x))), (Q x) |- (((E x) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) = (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))
T c==> ! c==> * f0 b0 * f1 b0 c==> * f0 f2 c= c==> * f1 f2 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2
+ |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) ==> F), ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) \/ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))))) |- F
T c==> c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')), ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))), ((x'' = x') \/ ((x'' = a) \/ (x'' = b))) |- F
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c\/ c= f3 f4 c\/ c= f3 f1 c= f3 f2 cF
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (x'' = x') |- (((~ (_7062224 = b)) \/ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) _7062224)) = ((~ (_7062224 = b)) \/ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) _7062224)))
T c==> c= f0 f1 c= c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f2 c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f2
- |- (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- (((x' = x'') \/ ((x' = a) \/ (x' = b))) ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c==> c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 cF
- (~ F), (~ ((x = x') \/ ((x = a) \/ (x = b)))), (x = a) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f2 c/\ c~ cF cF
+ |- (((!s. (s SUBSET ((hull P) s))) ==> ((\s. (s SUBSET ((hull P) s))) s)) = ((\s. (s SUBSET ((hull P) s))) s))
T c= c==> ! cSUBSET b0 * * part chull f0 b0 * / cSUBSET b0 * * part chull f0 b0 f1 * / cSUBSET b0 * * part chull f0 b0 f1
- |- (((!b. (!a. (!x. (!x'. ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F))))) ==> ((\b. (!a. (!x. (!x'. ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F))))) b)) = ((\b. (!a. (!x. (!x'. ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F))))) b))
T c= c==> ! ! ! ! c==> c~ c==> c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 ! c==> c\/ c= b4 b1 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 ! c==> c\/ c= b4 b3 c\/ c= b4 b1 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 cF * / ! ! ! c==> c~ c==> c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 ! c==> c\/ c= b4 b1 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 ! c==> c\/ c= b4 b3 c\/ c= b4 b1 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 cF f0 * / ! ! ! c==> c~ c==> c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 ! c==> c\/ c= b4 b1 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 ! c==> c\/ c= b4 b3 c\/ c= b4 b1 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 cF f0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))), (!x. ((Q x) ==> (E x))), (Q x') |- ((!x. ((Q x) ==> (E x))) /\ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'))
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> ! c==> * f4 b0 * f3 b0 c==> * f4 f5 c/\ ! c==> * f4 b0 * f3 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5
+ (A = F) |- ((((A ==> B) /\ A) ==> B) = (((F ==> B) /\ F) ==> B))
T c==> c= f0 cF c= c==> c/\ c==> f0 f1 f0 f1 c==> c/\ c==> cF f1 cF f1
+ (Q SUBSET E) |- ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E) ==> ((P SUBSET E) ==> ((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))
T c==> cSUBSET f0 f1 c==> c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cSUBSET f5 f1 cSUBSET * * part cUNION f5 f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) |- (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> c/\ cIN f4 f0 cIN b0 f1 ccoplanar * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((!x'. (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) = T)
T c= ! c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b1 f1 c= b1 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c==> c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cT
- |- ((((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F) ==> ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)) ==> (((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F) ==> ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)))
T c==> c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF
+ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E), (Q SUBSET E) |- ((P SUBSET E) ==> ((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> cSUBSET f4 f3 c==> cSUBSET f5 f3 cSUBSET * * part cUNION f5 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((\x. (x IN Q)) x') |- (((x' IN Q) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))) = (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))
T c==> * / cIN b0 f0 f1 c= c==> cIN f1 f0 ccoplanar * * part cUNION f2 * * part cUNION f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ccoplanar * * part cUNION f2 * * part cUNION f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) _7062226) \/ (~ (_7062226 = b)))
T c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c~ c= f4 f2
- |- (((!p'. (!q'. (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 * / ! c==> c= c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f4 * / ! c==> c= c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f4
- |- ((!b. (!a. (!x'. (!Q. (!P. (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))))) = (!b. (!a. (!x'. (!Q. (!P. ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F)))))))
T c= ! ! ! ! ! c==> c/\ ! c==> c\/ * b4 b5 * b3 b5 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c/\ ! c==> c\/ c= b5 b1 c= b5 b0 c\/ c= b5 b2 c\/ c= b5 b1 c= b5 b0 ! c==> c\/ c= b5 b2 c\/ c= b5 b1 c= b5 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 ! c==> c\/ * b4 b5 c\/ * b3 b5 c\/ c= b5 b1 c= b5 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 ! ! ! ! ! c==> c~ c==> c/\ ! c==> c\/ * b4 b5 * b3 b5 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c/\ ! c==> c\/ c= b5 b1 c= b5 b0 c\/ c= b5 b2 c\/ c= b5 b1 c= b5 b0 ! c==> c\/ c= b5 b2 c\/ c= b5 b1 c= b5 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 ! c==> c\/ * b4 b5 c\/ * b3 b5 c\/ c= b5 b1 c= b5 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 cF
- (~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) |- F
T c==> c~ c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 cF
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x' IN Q) |- (P SUBSET E)
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f1 cSUBSET f0 f5
+ (x' IN Q), (x'' IN P) |- ((x'' IN P) /\ (x' IN Q))
T c==> cIN f0 f1 c==> cIN f2 f3 c/\ cIN f2 f3 cIN f0 f1
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (x IN P) |- (T = (x IN P))
T c==> cIN f0 f1 c= cT cIN f0 f1
+ (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))), (!x. ((P x) ==> (E x))), (!x. ((Q x) ==> (E x))) |- ((((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) = T)
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> ! c==> * f4 b0 * f3 b0 c==> ! c==> * f5 b0 * f3 b0 c= c==> c\/ * f4 f6 * f5 f6 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 cT
+ ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))))), (x IN P), (x' IN Q) |- ((x' IN Q) /\ (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))
T c==> c/\ ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c==> cIN b0 f3 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! ! c==> c/\ cIN b0 f0 cIN b1 f3 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 f0 c==> cIN f5 f3 c/\ cIN f5 f3 ccoplanar * * part cUNION f0 * * part cUNION f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E), (x IN P), (x' IN Q) |- ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((Q SUBSET E) ==> (x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> cIN f4 f0 c==> cIN f6 f1 c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f1 f5 cIN f6 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((!x'. (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) = T)
T c= ! ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 cT
- (_7062441 = _7062444), (_7062442 = _7062445) |- ((_7062441 = _7062444) /\ ((~ (_7062440 = _7062443)) \/ ((((hull _7062443) _7062444) _7062445) \/ (~ (((hull _7062440) _7062441) _7062442)))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ c~ c= f4 f5 c\/ chull f5 f1 f3 c~ chull f4 f0 f2
+ (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))), (!x. ((P x) ==> (E x))), (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), ((Q x) ==> F), ((P x) \/ (Q x)) |- F
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> ! c==> * f4 b0 * f3 b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> c==> * f6 f5 cF c==> c\/ * f4 f5 * f6 f5 cF
+ ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))))), (x IN P) |- ((?x. (x IN Q)) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))
T c==> c/\ ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c==> cIN b0 f3 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! ! c==> c/\ cIN b0 f0 cIN b1 f3 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 f0 c==> c? / cIN b0 f3 ccoplanar * * part cUNION f0 * * part cUNION f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (x' = b), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- F
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c~ c= f0 f1 cF
- (~ ((x = x') \/ ((x = a) \/ (x = b)))), (x = a) |- (~ (a = b))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f2 c~ c= f2 f3
+ |- ((\p'. (!q'. ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f4
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY))))))))), (x IN P), (x' IN Q) |- (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ ! c==> cIN b0 f3 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! ! c==> c/\ cIN b0 f0 cIN b1 f3 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 f0 c==> cIN f5 f3 ccoplanar * * part cUNION f0 * * part cUNION f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'))
T c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- (T = (((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c= cT c==> cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- (((!q'. (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = (p' ==> q'))))) ==> ((\q'. (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = (p' ==> q'))))) q')) = ((\q'. (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c==> c~ cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 * / c==> c= c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c==> c~ cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 f5 * / c==> c= c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c==> c~ cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 f5
- (!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))), (!x. ((Q x) ==> (E x))), (Q x') |- ((~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')) ==> F)
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> ! c==> * f4 b0 * f3 b0 c==> * f4 f5 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 cF
- (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')), (x'' = x'), ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((~ F) ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f4 c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ cF cF
- |- (T = ((int_le (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c= cT cint_le cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((!s. (!p. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s))))) ==> (!p. (!s. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s))))))
T c==> ! ! c==> c/\ c= caff_dim b0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT b1 b0 cIN b1 * * part chull part caffine b0 ! ! c==> c/\ c= caff_dim b1 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT b0 b1 cIN b0 * * part chull part caffine b1
+ (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- (((x' = a) \/ (x' = b)) ==> F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c==> c\/ c= f0 f3 c= f0 f4 cF
- (Q SUBSET E) |- ((Q SUBSET E) = T)
T c==> cSUBSET f0 f1 c= cSUBSET f0 f1 cT
+ (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))), ((Q x) \/ ((x = a) \/ (x = b))) |- (((Q x) \/ ((x = a) \/ (x = b))) /\ F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c\/ * f5 f3 c\/ c= f3 f1 c= f3 f2 c/\ c\/ * f5 f3 c\/ c= f3 f1 c= f3 f2 cF
- (x' = b), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- (~ (b = a))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c~ c= f0 f1 c~ c= f1 f4
- (!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) |- (!q. ((~ (Q q)) \/ (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY)))))))
T c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c\/ c~ * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((!b. (!a. (!x''. (!x. (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b)))))))))) = (!b. (!a. (!x''. (!x. ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F))))))
T c= ! ! ! ! ! c= c\/ c= b4 b2 c\/ c= b4 b3 c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 ! ! ! ! c==> c~ ! c= c\/ c= b4 b2 c\/ c= b4 b3 c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF
- (~ F), (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')), (x'' = b), ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f2 c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ cF cF
- |- ((!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b)))))) = T)
T c= ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cT
+ (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))), ((x' = x) \/ ((x' = a) \/ (x' = b))) |- (((x' = x) \/ ((x' = a) \/ (x' = b))) /\ F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c==> c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 cF
+ |- ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))
T cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) |- F
T c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
- ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((~ (_7062356 = a)) \/ ((_7062356 = x') \/ ((_7062356 = a) \/ (_7062356 = b))))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c\/ c~ c= f5 f3 c\/ c= f5 f2 c\/ c= f5 f3 c= f5 f4
- ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- (!x. (((~ (x = a)) /\ (~ (x = b))) \/ ((x = x') \/ ((x = a) \/ (x = b)))))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4
+ ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))))), (x IN P), ((\x. (x IN Q)) x') |- (((\x. (x IN Q)) x') /\ (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))
T c==> c/\ ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c==> cIN b0 f3 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! ! c==> c/\ cIN b0 f0 cIN b1 f3 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 f0 c==> * / cIN b0 f3 f5 c/\ * / cIN b0 f3 f5 ccoplanar * * part cUNION f0 * * part cUNION f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((!x. ((x IN (a INSERT (b INSERT EMPTY))) ==> (x IN (x' INSERT (a INSERT (b INSERT EMPTY)))))) = ((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))))
T c= ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- ((\x'. (!Q. (!P. ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F)))) x')
T * / ! ! c==> c~ c==> c/\ ! c==> c\/ * b2 b3 * b1 b3 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 c/\ ! c==> c\/ c= b3 f0 c= b3 f1 c\/ c= b3 b0 c\/ c= b3 f0 c= b3 f1 ! c==> c\/ c= b3 b0 c\/ c= b3 f0 c= b3 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 ! c==> c\/ * b2 b3 c\/ * b1 b3 c\/ c= b3 f0 c= b3 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 cF f2
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((!q'. (((~ (P p)) \/ (~ (Q q'))) \/ (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY))))))) = ((!q. ((~ (P p)) \/ (~ (Q q)))) \/ (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))
T c= ! c\/ c\/ c~ * f0 f1 c~ * f2 b0 ccoplanar * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ ! c\/ c~ * f0 f1 c~ * f2 b0 ccoplanar * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
- (x' = x''), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c==> c~ cF cF
+ (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((x = a) ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c= f3 f1 cF
+ (!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))), (Q x') |- ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'))
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> * f4 f5 c==> ! c==> * f4 b0 * f3 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5
- (((((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) /\ (((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))), ((((((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) /\ (((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))) ==> B) |- ((((((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) /\ (((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))) /\ B)
T c==> c/\ c==> c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c==> c/\ c==> c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ c/\ c==> c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5
+ |- ((((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')))) = (((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ (!x'. ((x' IN (a INSERT (b INSERT EMPTY))) ==> (x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))))) ==> (!x''. ((x'' IN (x' INSERT (a INSERT (b INSERT EMPTY)))) ==> (x'' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))))))
T c= c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c/\ cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- (((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) a) ==> F) = F)
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c= c==> chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 cF cF
+ (x' = x''), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- F
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 cF
+ |- (((T ==> B) /\ T) ==> B)
T c==> c/\ c==> cT f0 cT f0
- |- ((\P. ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F)) P)
T * / c==> c~ c==> c/\ ! c==> c\/ * b0 b1 * f0 b1 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c/\ ! c==> c\/ c= b1 f2 c= b1 f3 c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f3 ! c==> c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f3 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 ! c==> c\/ * b0 b1 c\/ * f0 b1 c\/ c= b1 f2 c= b1 f3 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 cF f4
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!p'. (!q'. ((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> ((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> ((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> ((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c==> c= ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c= ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 * / ! c==> c= c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c==> c= ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c= ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f4 * / ! c==> c= c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c==> c= ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c= ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f4
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x IN P), (x' IN Q), (Q SUBSET E) |- ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f0 c==> cIN f6 f1 c==> cSUBSET f1 f5 cSUBSET * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\s. ((collinear s) = ((int_le (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))))) (x' INSERT (a INSERT (b INSERT EMPTY))))
T * / c= ccollinear b0 cint_le caff_dim b0 cint_of_num cNUMERAL cBIT1 c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')), (x'' = x') |- (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'))
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f4 c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4
+ ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))))), (x IN P) |- (((\x. (x IN Q)) x') ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))
T c==> c/\ ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c==> cIN b0 f3 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! ! c==> c/\ cIN b0 f0 cIN b1 f3 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 f0 c==> * / cIN b0 f3 f5 ccoplanar * * part cUNION f0 * * part cUNION f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) ==> ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))
T c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (x' = x''), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- ((x'' = x'') ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c==> c= f1 f1 cF
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))), (!x. ((Q x) ==> (E x))), (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (Q x) |- ((~ F) ==> F)
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> ! c==> * f4 b0 * f3 b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> * f4 f5 c==> c~ cF cF
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x' = a), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- (~ (a = x''))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f4 c~ c= f1 f2
- (!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) |- (((~ (P _7062289)) \/ (~ (Q _7062290))) \/ (coplanar (_7062289 INSERT (_7062290 INSERT (a INSERT (b INSERT EMPTY))))))
T c==> ! ! c==> c/\ * f0 b0 * f1 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c\/ c~ * f0 f4 c~ * f1 f5 ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- (!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) |- (!p. (!q. (((~ (P p)) \/ (~ (Q q))) \/ (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY))))))))
T c==> ! ! c==> c/\ * f0 b0 * f1 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! ! c\/ c\/ c~ * f0 b0 c~ * f1 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) |- (((!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u)))) ==> ((\t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u)))) t)) = ((\t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u)))) t))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 c= c==> ! ! c==> c/\ cSUBSET f0 b0 cSUBSET b0 b1 cSUBSET f0 b1 * / ! c==> c/\ cSUBSET f0 b0 cSUBSET b0 b1 cSUBSET f0 b1 f1 * / ! c==> c/\ cSUBSET f0 b0 cSUBSET b0 b1 cSUBSET f0 b1 f1
+ (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((P x) ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> * f4 f3 cF
+ ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((!x. (((~ (P x)) /\ (~ (Q x))) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((~ (x = a)) /\ (~ (x = b))) \/ ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((~ (x = x')) /\ ((~ (x = a)) /\ (~ (x = b)))) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)))))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c\/ c/\ c~ * f0 b0 c~ * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c\/ c/\ c~ c= b0 f2 c/\ c~ c= b0 f3 c~ c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0
- (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) |- (((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY)))))) = T)
T c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cIN f3 f0 c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))), ((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) |- F
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c\/ * f4 f3 c\/ * f5 f3 c\/ c= f3 f1 c= f3 f2 cF
+ (!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (Q x') |- ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))
T c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f3 f4 c/\ ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> * f3 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f3 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f3 b0 * f6 b0 chull part caffine * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4
- (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')), (x'' = a), ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((~ F) ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f1 c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ cF cF
+ |- ((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0)))))
T c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F))) ==> ((\Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F))) Q)) = ((\Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F))) Q))
T c= c==> ! ! c==> c~ c==> * b1 f0 c==> * b0 f1 c==> ! c==> * b1 b2 c~ ccollinear * * part cINSERT b2 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> * b0 b2 c~ ccollinear * * part cINSERT b2 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! c==> c/\ * b1 b2 * b0 b3 ccoplanar * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b2 * f4 b2 c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b0 b2 * f4 b2 chull part caffine * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 cF * / ! c==> c~ c==> * b1 f0 c==> * b0 f1 c==> ! c==> * b1 b2 c~ ccollinear * * part cINSERT b2 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> * b0 b2 c~ ccollinear * * part cINSERT b2 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! c==> c/\ * b1 b2 * b0 b3 ccoplanar * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b2 * f4 b2 c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b0 b2 * f4 b2 chull part caffine * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 cF f5 * / ! c==> c~ c==> * b1 f0 c==> * b0 f1 c==> ! c==> * b1 b2 c~ ccollinear * * part cINSERT b2 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> * b0 b2 c~ ccollinear * * part cINSERT b2 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! c==> c/\ * b1 b2 * b0 b3 ccoplanar * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b2 * f4 b2 c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b0 b2 * f4 b2 chull part caffine * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 cF f5
- |- (((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F) ==> ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF
+ |- (((!p'. (!q'. ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 * / ! c==> c= c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f4 * / ! c==> c= c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f4
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
+ |- (((F ==> B) /\ F) ==> B)
T c==> c/\ c==> cF f0 cF f0
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- (((((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F)) ==> (((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F))) = (((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F)))
T c= c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF
- (x' = x), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- (~ (x = a))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f1 f3
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x' IN Q), (x'' IN P) |- (x'' IN ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f5 f1 c==> cIN f6 f0 cIN f6 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))), (!x. ((Q x) ==> (E x))), (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (Q x) |- ((Q x) /\ F)
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> ! c==> * f4 b0 * f3 b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> * f4 f5 c/\ * f4 f5 cF
+ (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (x IN P), (x' IN Q) |- ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((Q SUBSET E) ==> (x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))))))
T c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 f0 c==> cIN f4 f5 c==> ! c==> cIN b0 f5 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f5 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f5 f6 cIN f4 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- (~ (x' = a))
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f0 f3
- |- (((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F) ==> ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F))
T c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF
- |- ((((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F) ==> ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F)) = ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F))
T c= c==> c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
- (((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F) ==> ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)) |- ((((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F) ==> ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)) /\ (((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F) ==> ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)))
T c==> c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c/\ c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF
- |- ((!E. t) = t)
T c= ! f0 f0
- |- ((_7062314 = _7062315) ==> ((BIT0 _7062314) = (BIT0 _7062315)))
T c==> c= f0 f1 c= cBIT0 f0 cBIT0 f1
+ (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))), ((x' = x) ==> F), (((x' = x'') \/ ((x' = a) \/ (x' = b))) ==> F) |- F
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c==> c==> c= f0 f2 cF c==> c==> c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 cF cF
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x' IN Q), (Q SUBSET E) |- (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f1 c==> cSUBSET f1 f5 ccoplanar * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F), (((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F)) |- ((((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F)) /\ ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c/\ c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF
- (((((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) ==> B) /\ ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) |- ((((((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) ==> B) /\ ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) /\ (((((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) ==> B) /\ ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))) ==> B))
T c==> c==> c/\ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ c==> c/\ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
- (x' = b), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- (~ (b = x))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c~ c= f0 f1 c~ c= f1 f3
+ (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (x = a) |- (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) a))
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f1 c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1
- ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) a)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) a))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- (!x. (((~ (P x)) /\ (~ (Q x))) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c\/ c/\ c~ * f0 b0 c~ * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0
+ ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) = T)
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c= c==> c\/ * f0 f5 c\/ * f1 f5 c\/ c= f5 f3 c= f5 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 cT
+ |- (!x. ((x IN (a INSERT (b INSERT EMPTY))) ==> (x IN (x' INSERT (a INSERT (b INSERT EMPTY))))))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (Q x') |- ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))
T c==> * f0 f1 c==> ! ! c==> c/\ * f2 b0 * f0 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f0 b0 * f6 b0 chull part caffine * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1
- |- ((\x'. ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F)) x')
T * / c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b1 f1 c= b1 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c==> c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cF f3
- (x = a) |- (((~ (_7062353 = b)) \/ ((_7062353 = x') \/ ((_7062353 = a) \/ (_7062353 = b)))) = ((~ (_7062353 = b)) \/ ((_7062353 = x') \/ ((_7062353 = a) \/ (_7062353 = b)))))
T c==> c= f0 f1 c= c\/ c~ c= f2 f3 c\/ c= f2 f4 c\/ c= f2 f1 c= f2 f3 c\/ c~ c= f2 f3 c\/ c= f2 f4 c\/ c= f2 f1 c= f2 f3
- |- (((!b. (!a. (!x'. ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F)))) ==> ((\b. (!a. (!x'. ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F)))) b)) = ((\b. (!a. (!x'. ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F)))) b))
T c= c==> ! ! ! c==> c~ ! c==> c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF * / ! ! c==> c~ ! c==> c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF f0 * / ! ! c==> c~ ! c==> c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF f0
+ (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- ((x' = x'') ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f1 cF
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x IN P) |- (Q SUBSET E)
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f0 cSUBSET f1 f5
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ (~ ((x = x') \/ ((x = a) \/ (x = b)))), ((x = a) \/ (x = b)) |- ((~ ((x = x') \/ ((x = a) \/ (x = b)))) /\ F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c\/ c= f0 f2 c= f0 f3 c/\ c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 cF
+ (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')), (x'' = b), ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- F
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f2 c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
- |- ((((((((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) /\ (((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))) ==> B) ==> ((((((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) /\ (((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))) ==> B)) = ((((((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) /\ (((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))) ==> B))
T c= c==> c==> c/\ c==> c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c==> c/\ c==> c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c==> c/\ c==> c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5
+ (Q x') |- ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'))))))
T c==> * f0 f1 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! c==> c/\ * f4 b0 * f0 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f0 b0 * f6 b0 chull part caffine * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!a. (!x'. (!Q. (!P. ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F))))) ==> ((\a. (!x'. (!Q. (!P. ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F))))) a)) = ((\a. (!x'. (!Q. (!P. ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F))))) a))
T c= c==> ! ! ! ! c==> c~ c==> c/\ ! c==> c\/ * b3 b4 * b2 b4 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 c/\ ! c==> c\/ c= b4 b0 c= b4 f0 c\/ c= b4 b1 c\/ c= b4 b0 c= b4 f0 ! c==> c\/ c= b4 b1 c\/ c= b4 b0 c= b4 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 ! c==> c\/ * b3 b4 c\/ * b2 b4 c\/ c= b4 b0 c= b4 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 cF * / ! ! ! c==> c~ c==> c/\ ! c==> c\/ * b3 b4 * b2 b4 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 c/\ ! c==> c\/ c= b4 b0 c= b4 f0 c\/ c= b4 b1 c\/ c= b4 b0 c= b4 f0 ! c==> c\/ c= b4 b1 c\/ c= b4 b0 c= b4 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 ! c==> c\/ * b3 b4 c\/ * b2 b4 c\/ c= b4 b0 c= b4 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 cF f1 * / ! ! ! c==> c~ c==> c/\ ! c==> c\/ * b3 b4 * b2 b4 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 c/\ ! c==> c\/ c= b4 b0 c= b4 f0 c\/ c= b4 b1 c\/ c= b4 b0 c= b4 f0 ! c==> c\/ c= b4 b1 c\/ c= b4 b0 c= b4 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 ! c==> c\/ * b3 b4 c\/ * b2 b4 c\/ c= b4 b0 c= b4 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 cF f1
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- (x' = a), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f4 c==> c~ cF cF
- (x'' = x') |- ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'))
T c==> c= f0 f1 c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1
- (((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F) ==> ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F)) |- ((((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F) ==> ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F)) /\ (((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F) ==> ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c/\ c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF
- (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) |- ((\x. ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) \/ (E x))) _7062457)
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 * / c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 f4
+ |- ((F = t) = (~ t))
T c= c= cF f0 c~ f0
- (!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) |- ((\p. (!q. (((~ (P p)) \/ (~ (Q q))) \/ (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) _7062289)
T c==> ! ! c==> c/\ * f0 b0 * f1 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / ! c\/ c\/ c~ * f0 b0 c~ * f1 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
+ |- ((!x'. ((x' IN (x'' INSERT (x INSERT (a INSERT (b INSERT EMPTY))))) = (x' IN (x INSERT (x'' INSERT (a INSERT (b INSERT EMPTY))))))) = ((x'' INSERT (x INSERT (a INSERT (b INSERT EMPTY)))) = (x INSERT (x'' INSERT (a INSERT (b INSERT EMPTY))))))
T c= ! c= cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ ((\E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) E) |- (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)
T c==> * / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f3 c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ |- ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u))
T c==> c? / c/\ cSUBSET f0 b0 cSUBSET b0 f1 cSUBSET f0 f1
- |- ((!Q. (!P. (!E. ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))))) = T)
T c= ! ! ! c==> ! c==> * b0 b3 * b2 b3 c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 * b2 b3 c==> ! c==> * b1 b3 * b2 b3 ! c==> c\/ * b1 b3 * b0 b3 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 cT
- (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (Q x), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((~ F) ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> * f4 f3 c==> c/\ ! c==> c\/ * f5 b0 * f4 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ cF cF
+ (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((x = b) ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c= f3 f2 cF
+ |- (((~ (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b)))))) ==> F) = (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))
T c= c==> c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 cF c= c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (x IN P), (x' IN Q) |- (((\E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) E) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 f0 c==> cIN f5 f1 c==> * / c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 f6 ccoplanar * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((\P. (!E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F))) P)
T * / ! c==> c~ c==> ! c==> * f0 b2 * b1 b2 c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b2 * b1 b2 c==> ! c==> * b0 b2 * b1 b2 ! c==> c\/ * b0 b2 * f0 b2 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b2 cF f4
+ (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?w. t) = t)
T c= c? / f0 f0
- (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')), ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')) /\ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'))
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x' IN Q), (x'' IN P) |- (((((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (x'' INSERT (x' INSERT (a INSERT (b INSERT EMPTY)))))) ==> (x'' IN ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))) = (x'' IN ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f5 f1 c==> cIN f6 f0 c= c==> c/\ c= caff_dim * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT f6 * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E), (P SUBSET E), (Q SUBSET E) |- ((((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))) = (((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> cSUBSET f4 f3 c==> cSUBSET f5 f3 c= c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cUNION f4 f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (x'' IN P) |- ((x'' IN P) = T)
T c==> cIN f0 f1 c= cIN f0 f1 cT
+ |- (~ (~ ((int_le (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c~ c~ cint_le cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0
- (!s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))), ((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) |- ((!s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))) /\ (((hull affine) s) = ((hull affine) t)))
T c==> ! ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1 c==> c/\ cSUBSET f0 f1 cint_le caff_dim f1 caff_dim f0 c/\ ! ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1 c= * * part chull part caffine f0 * * part chull part caffine f1
+ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E), (P SUBSET E), (Q SUBSET E) |- ((\w. ((P UNION (Q UNION (a INSERT (b INSERT EMPTY)))) SUBSET ((hull affine) (x' INSERT (a INSERT (w INSERT EMPTY)))))) b)
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> cSUBSET f4 f3 c==> cSUBSET f5 f3 * / cSUBSET * * part cUNION f4 * * part cUNION f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x IN P), (x' IN Q), (Q SUBSET E) |- ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f0 c==> cIN f6 f1 c==> cSUBSET f1 f5 c/\ cIN f6 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (x IN P), (x' IN Q), ((\E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) E) |- (((\E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) E) /\ (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 f0 c==> cIN f5 f1 c==> * / c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 f6 c/\ * / c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 f6 ccoplanar * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) \/ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))))) \/ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) \/ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))))) |- F
T c==> c\/ c\/ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')), ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- (((x'' = a) \/ (x'' = b)) ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c\/ c= f3 f1 c= f3 f2 cF
+ (?t. ((s SUBSET t) /\ (t SUBSET u))) |- ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) ==> (s SUBSET u))
T c==> c? / c/\ cSUBSET f0 b0 cSUBSET b0 f1 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 cSUBSET f0 f1
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062346) \/ (~ (P _7062346)))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c\/ chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c~ * f0 f5
- ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) a)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) a))
T c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1
+ (A = T) |- ((A = T) /\ (((A ==> B) /\ A) ==> B))
T c==> c= f0 cT c/\ c= f0 cT c==> c/\ c==> f0 f1 f0 f1
- |- ((!x''. (((~ (x'' = x')) /\ ((~ (x'' = a)) /\ (~ (x'' = b)))) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) = ((!x. ((~ (x = x')) /\ ((~ (x = a)) /\ (~ (x = b))))) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)))
T c= ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c\/ ! c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (x IN P), (x'' IN Q) |- (coplanar (x'' INSERT (x INSERT (a INSERT (b INSERT EMPTY)))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 f0 c==> cIN f5 f1 ccoplanar * * part cINSERT f5 * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ ((x = x') \/ ((x = a) \/ (x = b)))), (x = b) |- ((b = b) ==> F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f3 c==> c= f3 f3 cF
+ |- (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) = (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))
T c= cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))), (Q x') |- ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) /\ ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'))))
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> * f4 f5 c/\ ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f4 b0 * f3 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5
- |- ((~ (_7062302 = _7062303)) \/ ((coplanar _7062303) \/ (~ (coplanar _7062302))))
T c\/ c~ c= f0 f1 c\/ ccoplanar f1 c~ ccoplanar f0
+ (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')), (x'' = a), ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((x'' = a) /\ F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f1 c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c= f3 f1 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((\E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) E) |- (((\E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) E) /\ (?E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)))
T c==> * / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f3 c/\ * / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f3 c? / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x IN P), (x' IN Q), (Q SUBSET E) |- (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E)
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f0 c==> cIN f6 f1 c==> cSUBSET f1 f5 c= * * part chull part caffine * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5
- |- (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F) ==> ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F))
T c==> c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F) |- (((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F) /\ ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F))
T c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c/\ c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF
- (_7062440 = _7062443), (_7062441 = _7062444), (_7062442 = _7062445) |- ((((((hull _7062440) _7062441) _7062442) = (((hull _7062443) _7062444) _7062445)) ==> ((((hull _7062443) _7062444) _7062445) \/ (~ (((hull _7062440) _7062441) _7062442)))) = ((((hull _7062443) _7062444) _7062445) \/ (~ (((hull _7062440) _7062441) _7062442))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c= c==> c= chull f0 f2 f4 chull f1 f3 f5 c\/ chull f1 f3 f5 c~ chull f0 f2 f4 c\/ chull f1 f3 f5 c~ chull f0 f2 f4
+ |- (((a INSERT (b INSERT EMPTY)) SUBSET (x INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))
T c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- ((real_of_num (NUMERAL (BIT1 _0))) = ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((\t. ((s SUBSET t) /\ (t SUBSET u))) t) |- ((((s SUBSET t) /\ (t SUBSET u)) ==> ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) ==> (s SUBSET u))) = ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) ==> (s SUBSET u)))
T c==> * / c/\ cSUBSET f0 b0 cSUBSET b0 f1 f2 c= c==> c/\ cSUBSET f0 f2 cSUBSET f2 f1 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 cSUBSET f0 f1 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 cSUBSET f0 f1
+ ((\x. (x IN P)) x) |- (((x IN P) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))) = (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))
T c==> * / cIN b0 f0 f1 c= c==> cIN f1 f0 ccoplanar * * part cUNION f0 * * part cUNION f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ccoplanar * * part cUNION f0 * * part cUNION f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) |- (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 ! ! c==> c/\ cSUBSET f0 b0 cSUBSET b0 b1 cSUBSET f0 b1
- |- ((!x. (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) = T)
T c= ! ! c= c\/ c= b1 f0 c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f2 c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 cT
- |- ((!a. (!x'. (!Q. (!P. (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)))))))) = T)
T c= ! ! ! ! c==> c/\ ! c==> c\/ * b3 b4 * b2 b4 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 c/\ ! c==> c\/ c= b4 b0 c= b4 f0 c\/ c= b4 b1 c\/ c= b4 b0 c= b4 f0 ! c==> c\/ c= b4 b1 c\/ c= b4 b0 c= b4 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 ! c==> c\/ * b3 b4 c\/ * b2 b4 c\/ c= b4 b0 c= b4 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 cT
+ (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- (~ (x' = x))
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c~ c= f0 f2
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F)) = ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F))
T c= c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF
- (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (x = a), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((~ F) ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f1 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ cF cF
- ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F) |- (((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F) /\ ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c/\ c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) |- ((!u. ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u))) = T)
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 c= ! c==> c? / c/\ cSUBSET f0 b1 cSUBSET b1 b0 cSUBSET f0 b0 cT
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) |- ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) /\ F)
T c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF
+ (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (x = a), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((x = a) /\ F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f1 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c= f3 f1 cF
- |- ((((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) = (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))
T c= c==> c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c= c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x IN P), (x' IN Q), (Q SUBSET E) |- (((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((int_le (aff_dim ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f0 c==> cIN f6 f1 c==> cSUBSET f1 f5 c/\ cSUBSET * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_le caff_dim * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!x. ((Q x) ==> (E x))), (Q x) |- (E x)
T c==> ! c==> * f0 b0 * f1 b0 c==> * f0 f2 * f1 f2
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) |- ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 c==> c? / c/\ cSUBSET f0 b0 cSUBSET b0 f1 cSUBSET f0 f1
- |- (((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)))))) = T)
T c= c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cT
+ |- ((!Q. (!a. (!b. (((?x. (x IN P)) /\ ((?x. (x IN Q)) /\ ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))))))) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))))) = T)
T c= ! ! ! c==> c/\ c? / cIN b3 f0 c/\ c? / cIN b3 b0 c/\ ! c==> cIN b3 f0 c~ ccollinear * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c==> cIN b3 b0 c~ ccollinear * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! ! c==> c/\ cIN b3 f0 cIN b4 b0 ccoplanar * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar * * part cUNION f0 * * part cUNION b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cT
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- |- (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> q')))
T c==> c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f4 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f4
- (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (P x), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((~ F) ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> * f4 f3 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ cF cF
- |- ((((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F) ==> ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F)) ==> (((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F) ==> ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
+ (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) |- ((int_le (aff_dim ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))
T c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_le caff_dim * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')), ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((x'' = b) ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c= f3 f2 cF
- |- ((\Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F))) Q)
T * / ! c==> c~ c==> * b1 f0 c==> * b0 f1 c==> ! c==> * b1 b2 c~ ccollinear * * part cINSERT b2 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> * b0 b2 c~ ccollinear * * part cINSERT b2 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! c==> c/\ * b1 b2 * b0 b3 ccoplanar * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b2 * f4 b2 c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b0 b2 * f4 b2 chull part caffine * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 cF f5
+ |- ((((?x. (x IN P)) /\ ((?x. (x IN Q)) /\ ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))))))) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))) = T)
T c= c==> c/\ c? / cIN b0 f0 c/\ c? / cIN b0 f1 c/\ ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ ((\x. (x IN P)) x) |- (x IN P)
T c==> * / cIN b0 f0 f1 cIN f1 f0
- |- (((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F) ==> ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF
+ |- (((b = b) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) b)) = (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) b))
T c= c==> c= f0 f0 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY f0 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY f0
+ (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (x = a), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- F
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f1 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
- |- ((!x''. (((~ (x'' = a)) /\ (~ (x'' = b))) \/ ((x = x') \/ ((x = a) \/ (x = b))))) = ((!x. ((~ (x = a)) /\ (~ (x = b)))) \/ ((x = x') \/ ((x = a) \/ (x = b)))))
T c= ! c\/ c/\ c~ c= b0 f0 c~ c= b0 f1 c\/ c= f2 f3 c\/ c= f2 f0 c= f2 f1 c\/ ! c/\ c~ c= b0 f0 c~ c= b0 f1 c\/ c= f2 f3 c\/ c= f2 f0 c= f2 f1
+ (~ ((x = x') \/ ((x = a) \/ (x = b)))), (x = a) |- (~ (a = a))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f2 c~ c= f2 f2
+ (~ ((x = x') \/ ((x = a) \/ (x = b)))) |- ((~ (x = a)) /\ (~ (x = b)))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f3
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)))) = (((!x. ((x IN (P UNION Q)) ==> (x IN ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!x. ((x IN (a INSERT (b INSERT EMPTY))) ==> (x IN (x' INSERT (a INSERT (b INSERT EMPTY)))))) /\ (!x. ((x IN (x' INSERT (a INSERT (b INSERT EMPTY)))) ==> (x IN ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))))) ==> (!x. ((x IN (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))) ==> (x IN ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))))
T c= c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c==> c/\ ! c==> cIN b0 * * part cUNION f0 f1 cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ ! c==> cIN b0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN b0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c==> cIN b0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c==> cIN b0 * * part cUNION f0 * * part cUNION f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- ((((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) ==> F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 cF
+ |- ((((a INSERT (b INSERT EMPTY)) SUBSET (x INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) = ((\t. (((a INSERT (b INSERT EMPTY)) SUBSET t) /\ (t SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))) (x INSERT (a INSERT (b INSERT EMPTY)))))
T c= c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * / c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cSUBSET b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (x IN P) |- ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 f0 c= c==> c= ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- (((x = a) \/ (x = b)) ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c\/ c= f3 f1 c= f3 f2 cF
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (x IN P), (x'' IN Q) |- (T = (coplanar (x INSERT (x'' INSERT (a INSERT (b INSERT EMPTY))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 f0 c==> cIN f5 f1 c= cT ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E), (P SUBSET E), (Q SUBSET E) |- (?v. (?w. ((P UNION (Q UNION (a INSERT (b INSERT EMPTY)))) SUBSET ((hull affine) (x' INSERT (v INSERT (w INSERT EMPTY)))))))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> cSUBSET f4 f3 c==> cSUBSET f5 f3 c? / c? / cSUBSET * * part cUNION f4 * * part cUNION f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((x = x') \/ ((x = a) \/ (x = b)))) |- (~ (x = x'))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ c= f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((\E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) E) |- (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E) ==> (?E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E))) = (?E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)))
T c==> * / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f3 c= c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c? / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
+ ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) _7062225) \/ (~ (_7062225 = a)))
T c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c~ c= f4 f1
+ |- ((!x. (((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) \/ (~ (E x))) /\ ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) \/ (E x)))) = ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) \/ (~ (E x)))) /\ (!x. ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) \/ (E x)))))
T c= ! c/\ c\/ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c~ * f3 b0 c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c/\ ! c\/ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c~ * f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0
+ (P x), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- (((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) ==> F) = F)
T c==> * f0 f1 c==> c/\ ! c==> c\/ * f0 b0 * f2 b0 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f4 c= b0 f5 c\/ c= b0 f3 c\/ c= b0 f4 c= b0 f5 ! c==> c\/ c= b0 f3 c\/ c= b0 f4 c= b0 f5 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c= c==> chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1 cF cF
+ |- (((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) ==> (!s. (!u. ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u))))) = (!s. (!u. ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u)))))
T c= c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 ! ! c==> c? / c/\ cSUBSET b0 b2 cSUBSET b2 b1 cSUBSET b0 b1 ! ! c==> c? / c/\ cSUBSET b0 b2 cSUBSET b2 b1 cSUBSET b0 b1
+ (A = F) |- ((((F ==> B) /\ F) ==> B) = (((A ==> B) /\ A) ==> B))
T c==> c= f0 cF c= c==> c/\ c==> cF f1 cF f1 c==> c/\ c==> f0 f1 f0 f1
- (_7062302 = _7062303) |- ((((coplanar _7062302) = (coplanar _7062303)) ==> ((coplanar _7062303) \/ (~ (coplanar _7062302)))) = ((coplanar _7062303) \/ (~ (coplanar _7062302))))
T c==> c= f0 f1 c= c==> c= ccoplanar f0 ccoplanar f1 c\/ ccoplanar f1 c~ ccoplanar f0 c\/ ccoplanar f1 c~ ccoplanar f0
+ |- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) ==> F)
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x IN P), (x' IN Q), (Q SUBSET E) |- (x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f0 c==> cIN f6 f1 c==> cSUBSET f1 f5 cIN f6 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)
T * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
- (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) |- ((((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))) = T)
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c/\ cIN f4 f0 cIN f5 f1 ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- ((\s. ((aff_dim ((hull affine) s)) = (aff_dim s))) s)
T * / c= caff_dim * * part chull part caffine b0 caff_dim b0 f0
+ (!s. (!p. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s))))) |- (!p. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s))))
T c==> ! ! c==> c/\ c= caff_dim b0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT b1 b0 cIN b1 * * part chull part caffine b0 ! c==> c/\ c= caff_dim f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT b0 f0 cIN b0 * * part chull part caffine f0
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F), (((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F) ==> ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)) |- (((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F) /\ ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F))
T c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c/\ c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF
+ |- (T = (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = ((hull affine) ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))))
T c= cT c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((!b. (!a. (!x'. (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))))) = (!b. (!a. (!x'. ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F)))))
T c= ! ! ! ! c==> c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 ! ! ! c==> c~ ! c==> c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF
+ |- ((((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) = (((((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((P UNION (Q UNION (a INSERT (b INSERT EMPTY)))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))) /\ (((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))))
T c= c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c==> c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cUNION f0 * * part cUNION f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (x IN P), (x'' IN Q) |- ((coplanar (x INSERT (x'' INSERT (a INSERT (b INSERT EMPTY))))) = T)
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 f0 c==> cIN f5 f1 c= ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) a)
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((?u. (?v. (?w. ((P UNION (Q UNION (a INSERT (b INSERT EMPTY)))) SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) = (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))
T c= c? / c? / c? / cSUBSET * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) |- ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) /\ ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
- ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) b))
T c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2
+ |- ((A = F) ==> (((A ==> B) /\ A) ==> B))
T c==> c= f0 cF c==> c/\ c==> f0 f1 f0 f1
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x' IN Q), (x'' IN P) |- ((x'' IN P) /\ (x'' IN E))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f1 c==> cIN f7 f0 c/\ cIN f7 f0 cIN f7 f5
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (x IN P), (x' IN Q) |- ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((Q SUBSET E) ==> (x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 f0 c==> cIN f5 f1 c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6 c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f1 f6 cIN f5 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((!s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))) ==> ((\s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))) s)) = ((\s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))) s))
T c= c==> ! ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1 * / ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1 f0 * / ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1 f0
- |- ((_7062438 = _7062439) ==> ((P _7062439) \/ (~ (P _7062438))))
T c==> c= f0 f1 c\/ * f2 f1 c~ * f2 f0
+ |- (((!q'. ((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> ((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = (p' ==> q'))))) ==> ((\q'. ((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> ((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = (p' ==> q'))))) q')) = ((\q'. ((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> ((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c==> c= ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c= ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 * / c==> c= c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c==> c= ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c= ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 f5 * / c==> c= c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c==> c= ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c= ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 f5
+ |- ((!a. (!b. (((?x. (x IN P)) /\ ((?x. (x IN Q)) /\ ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))))))) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))))) = T)
T c= ! ! c==> c/\ c? / cIN b2 f0 c/\ c? / cIN b2 f1 c/\ ! c==> cIN b2 f0 c~ ccollinear * * part cINSERT b2 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ ! c==> cIN b2 f1 c~ ccollinear * * part cINSERT b2 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! ! c==> c/\ cIN b2 f0 cIN b3 f1 ccoplanar * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccoplanar * * part cUNION f0 * * part cUNION f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cT
- |- ((!x'. (!Q. (!P. (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) = T)
T c= ! ! ! c==> c/\ ! c==> c\/ * b2 b3 * b1 b3 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 c/\ ! c==> c\/ c= b3 f0 c= b3 f1 c\/ c= b3 b0 c\/ c= b3 f0 c= b3 f1 ! c==> c\/ c= b3 b0 c\/ c= b3 f0 c= b3 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 ! c==> c\/ * b2 b3 c\/ * b1 b3 c\/ c= b3 f0 c= b3 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 cT
- (~ F), (x' = x''), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ cF cF
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (!P. (!Q. (!a. (!b. (((?x. (x IN P)) /\ ((?x. (x IN Q)) /\ ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))))))) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))))))
T c==> c/\ c? / cIN b0 f0 c/\ c? / cIN b0 f1 c/\ ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- (!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) |- (!q. (((~ (P _7062289)) \/ (~ (Q q))) \/ (coplanar (_7062289 INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))
T c==> ! ! c==> c/\ * f0 b0 * f1 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c\/ c\/ c~ * f0 f4 c~ * f1 b0 ccoplanar * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) |- F
T c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))), ((x' = x'') \/ ((x' = a) \/ (x' = b))) |- (((x' = x'') \/ ((x' = a) \/ (x' = b))) /\ F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c==> c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 cF
- (x = b) |- (((~ (_7062356 = a)) \/ ((_7062356 = x') \/ ((_7062356 = a) \/ (_7062356 = b)))) = ((~ (_7062356 = a)) \/ ((_7062356 = x') \/ ((_7062356 = a) \/ (_7062356 = b)))))
T c==> c= f0 f1 c= c\/ c~ c= f2 f3 c\/ c= f2 f4 c\/ c= f2 f3 c= f2 f1 c\/ c~ c= f2 f3 c\/ c= f2 f4 c\/ c= f2 f3 c= f2 f1
- (~ F), (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (Q x), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> * f4 f3 c==> c/\ ! c==> c\/ * f5 b0 * f4 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ cF cF
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!x. ((P x) \/ Q)) = ((!x. (P x)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ |- ((\p'. (!q'. ((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> ((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c==> c= ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c= ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f4
+ (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))), ((x' = a) \/ (x' = b)) |- (((x' = a) \/ (x' = b)) /\ F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c==> c\/ c= f0 f3 c= f0 f4 c/\ c\/ c= f0 f3 c= f0 f4 cF
- (!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) |- ((\q. (((~ (P _7062289)) \/ (~ (Q q))) \/ (coplanar (_7062289 INSERT (q INSERT (a INSERT (b INSERT EMPTY))))))) _7062290)
T c==> ! ! c==> c/\ * f0 b0 * f1 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / c\/ c\/ c~ * f0 f4 c~ * f1 b0 ccoplanar * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5
- (~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) |- F
T c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF
+ |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) \/ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))))) ==> F)
T c==> c\/ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((\x. (((~ (x = a)) \/ ((x = x') \/ ((x = a) \/ (x = b)))) /\ ((~ (x = b)) \/ ((x = x') \/ ((x = a) \/ (x = b)))))) _7062356)
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * / c/\ c\/ c~ c= b0 f3 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 c\/ c~ c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 f5
+ (~ ((x = x') \/ ((x = a) \/ (x = b)))) |- ((~ (x = x')) /\ ((~ (x = a)) /\ (~ (x = b))))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3
+ |- (((!q'. ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) ==> ((\q'. ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) q')) = ((\q'. ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 * / c==> c= c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 f5 * / c==> c= c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 f5
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ ((x = x') \/ ((x = a) \/ (x = b)))), ((x = a) \/ (x = b)) |- F
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c\/ c= f0 f2 c= f0 f3 cF
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT1 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (T = ((x INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))
T c= cT cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) a)), ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) a)) /\ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) a))
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1
- (~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) |- F
T c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))), ((s SUBSET t) /\ (t SUBSET u)) |- (s SUBSET u)
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 c==> c/\ cSUBSET f0 f1 cSUBSET f1 f2 cSUBSET f0 f2
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) = ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c= c==> c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((\Q. (!P. (!E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)))) Q)
T * / ! ! c==> c~ c==> ! c==> * b0 b3 * b2 b3 c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 * b2 b3 c==> ! c==> * b1 b3 * b2 b3 ! c==> c\/ * b1 b3 * b0 b3 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 cF f3
+ |- (((x INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) = (((a INSERT (b INSERT EMPTY)) SUBSET (x INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))))
T c= cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) |- ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) /\ (!s. (!u. ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u)))))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 c/\ ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 ! ! c==> c? / c/\ cSUBSET b0 b2 cSUBSET b2 b1 cSUBSET b0 b1
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!a. (!x'. (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))))) = T)
T c= ! ! ! c==> c\/ c= b2 b0 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cT
- |- ((((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = (~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0)))))) ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> q')))) = (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> q'))))
T c= c==> c= c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f4 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f4 c==> c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f4 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f4
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) |- ((\s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) s)
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 * / ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 f0
+ |- ((\t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t)))) t)
T * / c==> c/\ cSUBSET f0 b0 cint_le caff_dim b0 caff_dim f0 c= * * part chull part caffine f0 * * part chull part caffine b0 f1
- |- ((_7062442 = _7062445) ==> ((~ (_7062441 = _7062444)) \/ ((~ (_7062440 = _7062443)) \/ ((((hull _7062443) _7062444) _7062445) \/ (~ (((hull _7062440) _7062441) _7062442))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ chull f5 f3 f1 c~ chull f4 f2 f0
+ (x' = b), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- ((b = b) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f4 c= f0 f1 c==> c= f1 f1 cF
+ (x' = b), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- ((b = b) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c~ c= f0 f1 c==> c= f1 f1 cF
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x IN P) |- (!x. ((x IN Q) ==> (x IN E)))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f0 ! c==> cIN b0 f1 cIN b0 f5
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) |- ((\u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))) u)
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 * / c==> c/\ cSUBSET f0 f1 cSUBSET f1 b0 cSUBSET f0 b0 f2
- |- (((!P. ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F)) ==> ((\P. ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F)) P)) = ((\P. ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F)) P))
T c= c==> ! c==> c~ c==> c/\ ! c==> c\/ * b0 b1 * f0 b1 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c/\ ! c==> c\/ c= b1 f2 c= b1 f3 c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f3 ! c==> c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f3 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 ! c==> c\/ * b0 b1 c\/ * f0 b1 c\/ c= b1 f2 c= b1 f3 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 cF * / c==> c~ c==> c/\ ! c==> c\/ * b0 b1 * f0 b1 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c/\ ! c==> c\/ c= b1 f2 c= b1 f3 c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f3 ! c==> c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f3 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 ! c==> c\/ * b0 b1 c\/ * f0 b1 c\/ c= b1 f2 c= b1 f3 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 cF f4 * / c==> c~ c==> c/\ ! c==> c\/ * b0 b1 * f0 b1 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c/\ ! c==> c\/ c= b1 f2 c= b1 f3 c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f3 ! c==> c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f3 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 ! c==> c\/ * b0 b1 c\/ * f0 b1 c\/ c= b1 f2 c= b1 f3 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 cF f4
+ |- (((P UNION (Q UNION (a INSERT (b INSERT EMPTY)))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) = ((\w. ((P UNION (Q UNION (a INSERT (b INSERT EMPTY)))) SUBSET ((hull affine) (x' INSERT (a INSERT (w INSERT EMPTY)))))) b))
T c= cSUBSET * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / cSUBSET * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x IN P), (x' IN Q), (Q SUBSET E) |- (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((hull affine) ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f0 c==> cIN f6 f1 c==> cSUBSET f1 f5 c= * * part chull part caffine * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> ((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = (p' ==> q'))))
T c==> c= c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c==> c= ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f5 c= c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c= ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 f5
+ (~ (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b)))))) |- ((~ (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b)))))) /\ F)
T c==> c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 cF
+ (x IN P), (x'' IN Q) |- (T = ((x IN P) /\ (x'' IN Q)))
T c==> cIN f0 f1 c==> cIN f2 f3 c= cT c/\ cIN f0 f1 cIN f2 f3
- (x' = a), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- (~ (a = b))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f4 c~ c= f1 f4
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x IN P), (x' IN Q) |- (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f0 c==> cIN f6 f1 ccoplanar * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F) |- ((((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F) ==> ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)) ==> ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F))
T c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF
+ ((A = T) ==> (((A ==> B) /\ A) ==> B)), ((A = F) ==> (((A ==> B) /\ A) ==> B)) |- (((A ==> B) /\ A) ==> B)
T c==> c==> c= f0 cT c==> c/\ c==> f0 f1 f0 f1 c==> c==> c= f0 cF c==> c/\ c==> f0 f1 f0 f1 c==> c/\ c==> f0 f1 f0 f1
+ |- ((((real_ge x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 f1 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!x''. (((~ (P x'')) /\ (~ (Q x''))) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) = ((!x. ((~ (P x)) /\ (~ (Q x)))) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)))
T c= ! c\/ c/\ c~ * f0 b0 c~ * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c\/ ! c/\ c~ * f0 b0 c~ * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5
+ |- (((b = b) ==> F) = F)
T c= c==> c= f0 f0 cF cF
+ |- ((\a. (!b. (!c. ((int_le (aff_dim (a INSERT (b INSERT (c INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) x')
T * / ! ! cint_le caff_dim * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (~ (~ (((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))))
T c~ c~ c==> cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
- (!s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))), ((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) |- (((hull affine) s) = ((hull affine) t))
T c==> ! ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1 c==> c/\ cSUBSET f0 f1 cint_le caff_dim f1 caff_dim f0 c= * * part chull part caffine f0 * * part chull part caffine f1
- (((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F)) |- ((((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F)) /\ (((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F)))
T c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c/\ c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF
+ |- (((a = a) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) a)) = (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) a))
T c= c==> c= f0 f0 chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f0 chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f0
- |- (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))
T c==> c= c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f5 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 f5
+ (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (P x), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- F
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> * f4 f3 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
+ (?x. (x IN Q)), ((?x. (x IN Q)) /\ ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY))))))))))), (x IN P) |- (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))
T c==> c? / cIN b0 f0 c==> c/\ c? / cIN b0 f0 c/\ ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! ! c==> c/\ cIN b0 f1 cIN b1 f0 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 f1 ccoplanar * * part cUNION f1 * * part cUNION f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x IN P) |- ((x'' IN Q) ==> (x'' IN E))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f0 c==> cIN f7 f1 cIN f7 f5
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (x IN P), (x' IN Q) |- ((?E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 f0 c==> cIN f5 f1 c==> c? / c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ccoplanar * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\b. (!a. (!x''. (!x. ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F))))) b)
T * / ! ! ! c==> c~ ! c= c\/ c= b4 b2 c\/ c= b4 b3 c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0
- |- ((((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F) ==> ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F)) = ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F))
T c= c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF
- (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) |- ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062457)) \/ (E _7062457))
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 * f3 f4
+ |- (!x'. ((x' IN (x'' INSERT (x INSERT (a INSERT (b INSERT EMPTY))))) = (x' IN (x INSERT (x'' INSERT (a INSERT (b INSERT EMPTY)))))))
T c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((!a. (!x. (!x'. (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))))) = T)
T c= ! ! ! c==> c/\ chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 ! c==> c\/ c= b3 b0 c= b3 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 ! c==> c\/ c= b3 b2 c\/ c= b3 b0 c= b3 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 cT
- |- ((((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) = T)
T c= c==> cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- (x = a) |- (((~ (Q _7062352)) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062352)) = ((~ (Q _7062352)) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062352)))
T c==> c= f0 f1 c= c\/ c~ * f2 f3 chull part caffine * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f3 c\/ c~ * f2 f3 chull part caffine * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f3
- |- ((_7062318 = _7062319) ==> ((int_of_num _7062318) = (int_of_num _7062319)))
T c==> c= f0 f1 c= cint_of_num f0 cint_of_num f1
+ ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) b)
T c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2
+ |- ((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY))))
T cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) = (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c= c==> c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!P. ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) = T)
T c= ! c==> * b0 f0 c==> * f1 f2 c==> ! c==> * b0 b1 c~ ccollinear * * part cINSERT b1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ! c==> * f1 b1 c~ ccollinear * * part cINSERT b1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ! ! c==> c/\ * b0 b1 * f1 b2 ccoplanar * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b1 * f5 b1 c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f1 b1 * f5 b1 chull part caffine * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cT
+ |- ((\s. ((coplanar s) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) s)
T * / c= ccoplanar b0 c? / c? / c? / cSUBSET b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) |- (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u)))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 ! c==> c/\ cSUBSET f0 f1 cSUBSET f1 b0 cSUBSET f0 b0
+ (~ (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b)))))), ((((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) ==> F), ((((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) ==> F) |- F
T c==> c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c==> c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 cF c==> c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 cF cF
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) /\ F)
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- ((\q'. (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = (p' ==> q'))))) q')
T * / c==> c= c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c==> c~ cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 f5
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((_7062302 = _7062303) ==> ((coplanar _7062303) \/ (~ (coplanar _7062302))))
T c==> c= f0 f1 c\/ ccoplanar f1 c~ ccoplanar f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F), (((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F) ==> ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F)) |- ((((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F) ==> ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F)) /\ ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F))
T c==> c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c==> c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c/\ c==> c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
- (!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))), (!x. ((Q x) ==> (E x))), (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')), (Q x') |- ((~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')) /\ F)
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> ! c==> * f4 b0 * f3 b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> * f4 f5 c/\ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 cF
+ (x' = x''), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- ((x' = x'') /\ F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c/\ c= f0 f1 cF
+ (!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))), (Q x') |- ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> * f4 f5 c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f4 b0 * f3 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5
- |- ((\b. (!a. (!x'. (!Q. (!P. (!E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F))))))) b)
T * / ! ! ! ! ! c==> c~ c==> ! c==> * b3 b6 * b5 b6 c==> ! c= chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 * b5 b6 c==> ! c==> * b4 b6 * b5 b6 ! c==> c\/ * b4 b6 * b3 b6 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 cF f0
+ (x' = x), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- F
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))) ==> (!s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))))
T c==> ! ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1 ! ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (x IN P), (x' IN Q) |- (!E. (((\E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) E) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 f0 c==> cIN f5 f1 ! c==> * / c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 b0 ccoplanar * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) |- ((\q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) q)
T c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * / c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))), (!x. ((Q x) ==> (E x))) |- ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> ! c==> * f4 b0 * f3 b0 c==> ! c==> * f5 b0 * f3 b0 ! c==> c\/ * f5 b0 * f4 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) |- ((\t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u)))) t)
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 * / ! c==> c/\ cSUBSET f0 b0 cSUBSET b0 b1 cSUBSET f0 b1 f1
- ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- (((!x. (((~ (x = a)) \/ ((x = x') \/ ((x = a) \/ (x = b)))) /\ ((~ (x = b)) \/ ((x = x') \/ ((x = a) \/ (x = b)))))) ==> ((\x. (((~ (x = a)) \/ ((x = x') \/ ((x = a) \/ (x = b)))) /\ ((~ (x = b)) \/ ((x = x') \/ ((x = a) \/ (x = b)))))) _7062356)) = ((\x. (((~ (x = a)) \/ ((x = x') \/ ((x = a) \/ (x = b)))) /\ ((~ (x = b)) \/ ((x = x') \/ ((x = a) \/ (x = b)))))) _7062356))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c= c==> ! c/\ c\/ c~ c= b0 f3 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 c\/ c~ c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 * / c/\ c\/ c~ c= b0 f3 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 c\/ c~ c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 f5 * / c/\ c\/ c~ c= b0 f3 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 c\/ c~ c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 f5
- (_7062316 = _7062317) |- ((_7062316 = _7062317) /\ ((NUMERAL _7062316) = (NUMERAL _7062317)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))), ((x' = x'') ==> F), (((x' = x) \/ ((x' = a) \/ (x' = b))) ==> F) |- F
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c==> c==> c= f0 f1 cF c==> c==> c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 cF cF
- (x' = b), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- (~ (b = x))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f4 c= f0 f1 c~ c= f1 f3
+ (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))), ((x' = b) ==> F), ((x' = a) \/ (x' = b)) |- F
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c==> c==> c= f0 f4 cF c==> c\/ c= f0 f3 c= f0 f4 cF
+ (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (x IN P), (x' IN Q) |- (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = (((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 f3 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 f0 c==> cIN f5 f3 c= c==> c~ cint_le caff_dim * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= ccollinear * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c= ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((!P. (!Q. (!a. (!b. (((?x. (x IN P)) /\ ((?x. (x IN Q)) /\ ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))))))) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))))))) = (!P. (!Q. (!a. (!b. (((~ (P = EMPTY)) /\ ((~ (Q = EMPTY)) /\ ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))))))) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))))))))
T c= ! ! ! ! c==> c/\ c? / cIN b4 b0 c/\ c? / cIN b4 b1 c/\ ! c==> cIN b4 b0 c~ ccollinear * * part cINSERT b4 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! c==> cIN b4 b1 c~ ccollinear * * part cINSERT b4 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! ! c==> c/\ cIN b4 b0 cIN b5 b1 ccoplanar * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cUNION b0 * * part cUNION b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! ! ! ! c==> c/\ c~ c= b0 part cEMPTY c/\ c~ c= b1 part cEMPTY c/\ ! c==> cIN b4 b0 c~ ccollinear * * part cINSERT b4 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! c==> cIN b4 b1 c~ ccollinear * * part cINSERT b4 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! ! c==> c/\ cIN b4 b0 cIN b5 b1 ccoplanar * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cUNION b0 * * part cUNION b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
- (!s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))), ((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) |- (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) /\ (((hull affine) s) = ((hull affine) t)))
T c==> ! ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1 c==> c/\ cSUBSET f0 f1 cint_le caff_dim f1 caff_dim f0 c/\ c/\ cSUBSET f0 f1 cint_le caff_dim f1 caff_dim f0 c= * * part chull part caffine f0 * * part chull part caffine f1
+ (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))), (!x. ((P x) ==> (E x))), (!x. ((Q x) ==> (E x))), (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), ((P x) \/ (Q x)) |- F
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> ! c==> * f4 b0 * f3 b0 c==> ! c==> * f5 b0 * f3 b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> c\/ * f4 f6 * f5 f6 cF
- |- (((!b. (!a. (!x'. (!Q. (!P. (!E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F))))))) ==> ((\b. (!a. (!x'. (!Q. (!P. (!E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F))))))) b)) = ((\b. (!a. (!x'. (!Q. (!P. (!E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F))))))) b))
T c= c==> ! ! ! ! ! ! c==> c~ c==> ! c==> * b3 b6 * b5 b6 c==> ! c= chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 * b5 b6 c==> ! c==> * b4 b6 * b5 b6 ! c==> c\/ * b4 b6 * b3 b6 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 cF * / ! ! ! ! ! c==> c~ c==> ! c==> * b3 b6 * b5 b6 c==> ! c= chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 * b5 b6 c==> ! c==> * b4 b6 * b5 b6 ! c==> c\/ * b4 b6 * b3 b6 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 cF f0 * / ! ! ! ! ! c==> c~ c==> ! c==> * b3 b6 * b5 b6 c==> ! c= chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 * b5 b6 c==> ! c==> * b4 b6 * b5 b6 ! c==> c\/ * b4 b6 * b3 b6 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 cF f0
- (~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- F
T c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- ((x' = b) ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f4 cF
+ |- (T = (((T ==> B) /\ T) ==> B))
T c= cT c==> c/\ c==> cT f0 cT f0
- (~ F), (x' = x), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ cF cF
- (~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) |- ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) /\ F)
T c==> c~ c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c/\ c~ c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 cF
+ (~ (~ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) |- ((~ (~ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ F)
T c==> c~ c~ creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c~ creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cF
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!Q. (!P. (!E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)))) ==> ((\Q. (!P. (!E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)))) Q)) = ((\Q. (!P. (!E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)))) Q))
T c= c==> ! ! ! c==> c~ c==> ! c==> * b0 b3 * b2 b3 c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 * b2 b3 c==> ! c==> * b1 b3 * b2 b3 ! c==> c\/ * b1 b3 * b0 b3 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 cF * / ! ! c==> c~ c==> ! c==> * b0 b3 * b2 b3 c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 * b2 b3 c==> ! c==> * b1 b3 * b2 b3 ! c==> c\/ * b1 b3 * b0 b3 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 cF f3 * / ! ! c==> c~ c==> ! c==> * b0 b3 * b2 b3 c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 * b2 b3 c==> ! c==> * b1 b3 * b2 b3 ! c==> c\/ * b1 b3 * b0 b3 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 cF f3
+ (x' = x), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- (~ (x = x))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c~ c= f1 f1
- (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) b)), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) b)) /\ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) b))
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c/\ ! c==> c\/ * f3 b0 * f4 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2
+ (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (x = b) |- (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) b))
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f2 c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2
- (_7062312 = _7062313) |- ((_7062312 = _7062313) /\ ((BIT1 _7062312) = (BIT1 _7062313)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ (!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (Q x') |- ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) /\ ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))
T c==> ! ! c==> c/\ * f0 b0 * f1 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> * f1 f4 c/\ ! ! c==> c/\ * f0 b0 * f1 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f1 b0 * f6 b0 chull part caffine * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
+ |- (((!u. ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u))) ==> ((\u. ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u))) u)) = ((\u. ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u))) u))
T c= c==> ! c==> c? / c/\ cSUBSET f0 b1 cSUBSET b1 b0 cSUBSET f0 b0 * / c==> c? / c/\ cSUBSET f0 b1 cSUBSET b1 b0 cSUBSET f0 b0 f1 * / c==> c? / c/\ cSUBSET f0 b1 cSUBSET b1 b0 cSUBSET f0 b0 f1
- |- (((!b. (!a. (!x. (!E. (!Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F))))))) ==> ((\b. (!a. (!x. (!E. (!Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F))))))) b)) = ((\b. (!a. (!x. (!E. (!Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F))))))) b))
T c= c==> ! ! ! ! ! ! c==> c~ c==> * b5 b2 c==> * b4 f0 c==> ! c==> * b5 b6 c~ ccollinear * * part cINSERT b6 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! c==> * b4 b6 c~ ccollinear * * part cINSERT b6 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! ! c==> c/\ * b5 b6 * b4 b7 ccoplanar * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! c= chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 * b3 b6 c==> c/\ c= caff_dim * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b4 b6 * b3 b6 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cF * / ! ! ! ! ! c==> c~ c==> * b5 b2 c==> * b4 f0 c==> ! c==> * b5 b6 c~ ccollinear * * part cINSERT b6 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! c==> * b4 b6 c~ ccollinear * * part cINSERT b6 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! ! c==> c/\ * b5 b6 * b4 b7 ccoplanar * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! c= chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 * b3 b6 c==> c/\ c= caff_dim * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b4 b6 * b3 b6 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cF f1 * / ! ! ! ! ! c==> c~ c==> * b5 b2 c==> * b4 f0 c==> ! c==> * b5 b6 c~ ccollinear * * part cINSERT b6 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! c==> * b4 b6 c~ ccollinear * * part cINSERT b6 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! ! c==> c/\ * b5 b6 * b4 b7 ccoplanar * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! c= chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 * b3 b6 c==> c/\ c= caff_dim * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b4 b6 * b3 b6 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cF f1
- |- (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((~ ((x = x') \/ ((x = a) \/ (x = b)))) ==> F) = ((x = x') \/ ((x = a) \/ (x = b))))
T c= c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 cF c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3
- |- ((\x. (!E. (!Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F))))) x)
T * / ! ! ! c==> c~ c==> * b3 b0 c==> * b2 f0 c==> ! c==> * b3 b4 c~ ccollinear * * part cINSERT b4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> * b2 b4 c~ ccollinear * * part cINSERT b4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! c==> c/\ * b3 b4 * b2 b5 ccoplanar * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c= chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 * b1 b4 c==> c/\ c= caff_dim * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b2 b4 * b1 b4 chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 cF f3
+ (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (x IN P) |- (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> q')))
T c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 f0 c==> c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c= c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f5 c= c==> c= ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f5
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), ((p IN P) /\ (q IN Q)) |- (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ cIN f4 f0 cIN f5 f1 ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F)) ==> ((\P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F)) P)) = ((\P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F)) P))
T c= c==> ! c==> c~ c==> * b0 f0 c==> * f1 f2 c==> ! c==> * b0 b1 c~ ccollinear * * part cINSERT b1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ! c==> * f1 b1 c~ ccollinear * * part cINSERT b1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ! ! c==> c/\ * b0 b1 * f1 b2 ccoplanar * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b1 * f5 b1 c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f1 b1 * f5 b1 chull part caffine * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cF * / c==> c~ c==> * b0 f0 c==> * f1 f2 c==> ! c==> * b0 b1 c~ ccollinear * * part cINSERT b1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ! c==> * f1 b1 c~ ccollinear * * part cINSERT b1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ! ! c==> c/\ * b0 b1 * f1 b2 ccoplanar * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b1 * f5 b1 c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f1 b1 * f5 b1 chull part caffine * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cF f6 * / c==> c~ c==> * b0 f0 c==> * f1 f2 c==> ! c==> * b0 b1 c~ ccollinear * * part cINSERT b1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ! c==> * f1 b1 c~ ccollinear * * part cINSERT b1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ! ! c==> c/\ * b0 b1 * f1 b2 ccoplanar * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b1 * f5 b1 c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f1 b1 * f5 b1 chull part caffine * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cF f6
+ (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (P x), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((P x) /\ F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> * f4 f3 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ * f4 f3 cF
+ ((~ (s = EMPTY)) = (?x. (x IN s))) |- ((?x. (x IN s)) = (~ (s = EMPTY)))
T c==> c= c~ c= f0 part cEMPTY c? / cIN b0 f0 c= c? / cIN b0 f0 c~ c= f0 part cEMPTY
- |- ((~ (_7062316 = _7062317)) \/ ((NUMERAL _7062316) = (NUMERAL _7062317)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- |- ((_7062446 = _7062448) ==> ((~ (_7062447 = _7062449)) \/ ((_7062446 INSERT _7062447) = (_7062448 INSERT _7062449))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))), ((x' = a) \/ (x' = b)) |- (((x' = a) \/ (x' = b)) /\ F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c==> c\/ c= f0 f3 c= f0 f4 c/\ c\/ c= f0 f3 c= f0 f4 cF
+ |- (((!s. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s)))) ==> ((\s. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s)))) s)) = ((\s. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s)))) s))
T c= c==> ! c==> c/\ c= caff_dim b0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT f0 b0 cIN f0 * * part chull part caffine b0 * / c==> c/\ c= caff_dim b0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT f0 b0 cIN f0 * * part chull part caffine b0 f1 * / c==> c/\ c= caff_dim b0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT f0 b0 cIN f0 * * part chull part caffine b0 f1
+ (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) |- ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) \/ (~ (E x)))) /\ (!x. ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) \/ (E x))))
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c/\ ! c\/ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c~ * f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0
- (_7062447 = _7062449), (_7062446 = _7062448) |- ((_7062447 = _7062449) /\ ((_7062446 INSERT _7062447) = (_7062448 INSERT _7062449)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cINSERT f2 f0 * * part cINSERT f3 f1
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (x = a) |- (((~ (_7062354 = b)) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062354)) = ((~ (_7062354 = b)) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062354)))
T c==> c= f0 f1 c= c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f2 c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f2
+ (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')), (x'' = b), ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((x'' = b) /\ F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f2 c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c= f3 f2 cF
+ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E), (P SUBSET E), (Q SUBSET E) |- ((\u. (?v. (?w. ((P UNION (Q UNION (a INSERT (b INSERT EMPTY)))) SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) x')
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> cSUBSET f4 f3 c==> cSUBSET f5 f3 * / c? / c? / cSUBSET * * part cUNION f4 * * part cUNION f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
- |- ((!x''. (((~ (x' = a)) /\ (~ (x' = b))) \/ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))) = (((~ (x' = a)) /\ (~ (x' = b))) \/ (!x'. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'))))
T c= ! c\/ c/\ c~ c= f0 f1 c~ c= f0 f2 chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ c/\ c~ c= f0 f1 c~ c= f0 f2 ! chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
+ ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))), ((x'' = x') \/ ((x'' = a) \/ (x'' = b))) |- (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) /\ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))
T c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c\/ c= f4 f3 c\/ c= f4 f1 c= f4 f2 c/\ c\/ c= f4 f3 c\/ c= f4 f1 c= f4 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4
+ (Q x), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)
T c==> * f0 f1 c==> c/\ ! c==> c\/ * f2 b0 * f0 b0 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f4 c= b0 f5 c\/ c= b0 f3 c\/ c= b0 f4 c= b0 f5 ! c==> c\/ c= b0 f3 c\/ c= b0 f4 c= b0 f5 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))), (!x. ((P x) ==> (E x))), (!x. ((Q x) ==> (E x))) |- (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)))
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> ! c==> * f4 b0 * f3 b0 c==> ! c==> * f5 b0 * f3 b0 ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
+ (x' = b), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- (~ (b = b))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f4 c= f0 f1 c~ c= f1 f1
- (_7062310 = _7062311) |- ((_7062310 = _7062311) /\ ((aff_dim _7062310) = (aff_dim _7062311)))
T c==> c= f0 f1 c/\ c= f0 f1 c= caff_dim f0 caff_dim f1
+ (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))), (((x' = a) \/ (x' = b)) ==> F), ((x' = x) \/ ((x' = a) \/ (x' = b))) |- F
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c==> c==> c\/ c= f0 f3 c= f0 f4 cF c==> c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 cF
- ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F), (((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F) ==> ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F)) |- ((((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F) ==> ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F)) /\ ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c/\ c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF
+ (?x. (x IN Q)), ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))))), (x IN P) |- (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))
T c==> c? / cIN b0 f0 c==> c/\ ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! ! c==> c/\ cIN b0 f1 cIN b1 f0 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 f1 ccoplanar * * part cUNION f1 * * part cUNION f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!s. (!p. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s))))) |- (!s. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s))))
T c==> ! ! c==> c/\ c= caff_dim b0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT b1 b0 cIN b1 * * part chull part caffine b0 ! c==> c/\ c= caff_dim b0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT f0 b0 cIN f0 * * part chull part caffine b0
+ |- (((!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t)))) ==> ((\t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t)))) t)) = ((\t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t)))) t))
T c= c==> ! c==> c/\ cSUBSET f0 b0 cint_le caff_dim b0 caff_dim f0 c= * * part chull part caffine f0 * * part chull part caffine b0 * / c==> c/\ cSUBSET f0 b0 cint_le caff_dim b0 caff_dim f0 c= * * part chull part caffine f0 * * part chull part caffine b0 f1 * / c==> c/\ cSUBSET f0 b0 cint_le caff_dim b0 caff_dim f0 c= * * part chull part caffine f0 * * part chull part caffine b0 f1
+ (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (Q x), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((Q x) /\ F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> * f4 f3 c==> c/\ ! c==> c\/ * f5 b0 * f4 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ * f4 f3 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\b. (!a. (!x. (!E. (!Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F))))))) b)
T * / ! ! ! ! ! c==> c~ c==> * b5 b2 c==> * b4 f0 c==> ! c==> * b5 b6 c~ ccollinear * * part cINSERT b6 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! c==> * b4 b6 c~ ccollinear * * part cINSERT b6 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! ! c==> c/\ * b5 b6 * b4 b7 ccoplanar * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! c= chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 * b3 b6 c==> c/\ c= caff_dim * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b4 b6 * b3 b6 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cF f1
+ |- ((\s. ((~ (s = EMPTY)) = (?x. (x IN s)))) s)
T * / c= c~ c= b0 part cEMPTY c? / cIN b1 b0 f0
+ |- (((s SUBSET t) /\ (t SUBSET u)) ==> ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) ==> (s SUBSET u)))
T c==> c/\ cSUBSET f0 f1 cSUBSET f1 f2 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 cSUBSET f0 f2
+ (~ ((x = x') \/ ((x = a) \/ (x = b)))) |- (~ (x = a))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ c= f0 f2
+ ((x'' INSERT (x INSERT (a INSERT (b INSERT EMPTY)))) = (x INSERT (x'' INSERT (a INSERT (b INSERT EMPTY))))) |- ((coplanar (x INSERT (x'' INSERT (a INSERT (b INSERT EMPTY))))) = (coplanar (x'' INSERT (x INSERT (a INSERT (b INSERT EMPTY))))))
T c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= ccoplanar * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x IN P), (x' IN Q), (Q SUBSET E) |- (((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) = ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f0 c==> cIN f6 f1 c==> cSUBSET f1 f5 c= cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E), (P SUBSET E), (Q SUBSET E) |- ((P UNION (Q UNION (a INSERT (b INSERT EMPTY)))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> cSUBSET f4 f3 c==> cSUBSET f5 f3 cSUBSET * * part cUNION f4 * * part cUNION f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))
T c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c\/ c= f4 f3 c\/ c= f4 f1 c= f4 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4
+ ((?x. (x IN Q)) /\ ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY))))))))))) |- (!x. (((\x. (x IN P)) x) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))))
T c==> c/\ c? / cIN b0 f0 c/\ ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! ! c==> c/\ cIN b0 f1 cIN b1 f0 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> * / cIN b1 f1 b0 ccoplanar * * part cUNION f1 * * part cUNION f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY))))))))), (x IN P), (x' IN Q) |- (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 f3 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ ! c==> cIN b0 f3 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! ! c==> c/\ cIN b0 f0 cIN b1 f3 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 f0 c==> cIN f5 f3 ccoplanar * * part cUNION f0 * * part cUNION f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E) |- ((\E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) E)
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 * / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f3
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = ((hull affine) ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))
T c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) |- ((~ (Q _7062288)) \/ (~ (collinear (_7062288 INSERT (a INSERT (b INSERT EMPTY))))))
T c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ * f0 f3 c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((?v. (?w. ((P UNION (Q UNION (a INSERT (b INSERT EMPTY)))) SUBSET ((hull affine) (x' INSERT (v INSERT (w INSERT EMPTY))))))) = ((\u. (?v. (?w. ((P UNION (Q UNION (a INSERT (b INSERT EMPTY)))) SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) x'))
T c= c? / c? / cSUBSET * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / c? / c? / cSUBSET * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f4
- |- ((!b. (!a. (!x'. (!Q. (!P. (!E. ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)))))))))))) = (!b. (!a. (!x'. (!Q. (!P. (!E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F))))))))
T c= ! ! ! ! ! ! c==> ! c==> * b3 b6 * b5 b6 c==> ! c= chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 * b5 b6 c==> ! c==> * b4 b6 * b5 b6 ! c==> c\/ * b4 b6 * b3 b6 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 ! ! ! ! ! ! c==> c~ c==> ! c==> * b3 b6 * b5 b6 c==> ! c= chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 * b5 b6 c==> ! c==> * b4 b6 * b5 b6 ! c==> c\/ * b4 b6 * b3 b6 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 cF
- |- (((!x'. (!Q. (!P. (!E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F))))) ==> ((\x'. (!Q. (!P. (!E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F))))) x')) = ((\x'. (!Q. (!P. (!E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F))))) x'))
T c= c==> ! ! ! ! c==> c~ c==> ! c==> * b1 b4 * b3 b4 c==> ! c= chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 * b3 b4 c==> ! c==> * b2 b4 * b3 b4 ! c==> c\/ * b2 b4 * b1 b4 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 cF * / ! ! ! c==> c~ c==> ! c==> * b1 b4 * b3 b4 c==> ! c= chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 * b3 b4 c==> ! c==> * b2 b4 * b3 b4 ! c==> c\/ * b2 b4 * b1 b4 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 cF f2 * / ! ! ! c==> c~ c==> ! c==> * b1 b4 * b3 b4 c==> ! c= chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 * b3 b4 c==> ! c==> * b2 b4 * b3 b4 ! c==> c\/ * b2 b4 * b1 b4 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 cF f2
- |- ((_7062316 = _7062317) ==> ((NUMERAL _7062316) = (NUMERAL _7062317)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ |- (((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)))))) = ((!x. ((x IN Q) ==> (x IN E))) ==> ((!x. ((x IN ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) = (x IN E))) ==> ((!x. ((x IN P) ==> (x IN E))) ==> (!x. ((x IN (P UNION Q)) ==> (x IN ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))))))
T c= c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c==> ! c==> cIN b0 f0 cIN b0 f1 c==> ! c= cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN b0 f1 c==> ! c==> cIN b0 f5 cIN b0 f1 ! c==> cIN b0 * * part cUNION f5 f0 cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = (p' ==> q'))))
T c==> c= c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c==> c~ cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f5 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 f5
- |- (((!p'. (!q'. (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 * / ! c==> c= c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f4 * / ! c==> c= c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f4
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\t. (((a INSERT (b INSERT EMPTY)) SUBSET t) /\ (t SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))) (x INSERT (a INSERT (b INSERT EMPTY))))
T * / c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cSUBSET b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))), (!x. ((P x) ==> (E x))), (!x. ((Q x) ==> (E x))) |- ((!x. ((P x) ==> (E x))) /\ (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> ! c==> * f4 b0 * f3 b0 c==> ! c==> * f5 b0 * f3 b0 c/\ ! c==> * f4 b0 * f3 b0 ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
+ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E), (P SUBSET E), (Q SUBSET E) |- (((((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((P UNION (Q UNION (a INSERT (b INSERT EMPTY)))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))) /\ (((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> cSUBSET f4 f3 c==> cSUBSET f5 f3 c/\ c==> c/\ cSUBSET * * part cUNION f4 f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cUNION f4 * * part cUNION f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cUNION f4 f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ ((x = x') \/ ((x = a) \/ (x = b)))), ((x = b) ==> F), ((x = a) \/ (x = b)) |- F
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c==> c= f0 f3 cF c==> c\/ c= f0 f2 c= f0 f3 cF
+ ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((_7062357 = b) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062357))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c==> c= f5 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5
+ ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c==> c\/ * f0 f5 c\/ * f1 f5 c\/ c= f5 f3 c= f5 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))), ((s SUBSET t) /\ (t SUBSET u)) |- ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) /\ (s SUBSET u))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 c==> c/\ cSUBSET f0 f1 cSUBSET f1 f2 c/\ ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 cSUBSET f0 f2
+ ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((_7062225 = a) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) _7062225))
T c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c= f4 f1 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4
+ |- ((~ (~ (((real_le (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_le (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) /\ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) /\ ((((real_le ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) \/ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) \/ (((real_le ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) \/ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))))))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c\/ creal_le creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ creal_le creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))), ((x = a) \/ (x = b)) |- (((x = a) \/ (x = b)) /\ F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c\/ c= f3 f1 c= f3 f2 c/\ c\/ c= f3 f1 c= f3 f2 cF
+ (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- (~ (x' = a))
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c~ c= f0 f3
+ (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- ((x' = b) ==> F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c==> c= f0 f4 cF
+ ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) a)
T c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) |- ((~ (P _7062289)) \/ ((~ (Q _7062290)) \/ (coplanar (_7062289 INSERT (_7062290 INSERT (a INSERT (b INSERT EMPTY)))))))
T c==> ! ! c==> c/\ * f0 b0 * f1 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ * f0 f4 c\/ c~ * f1 f5 ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((!x. ((x IN Q) ==> (x IN E))) ==> ((!x. ((x IN ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) = (x IN E))) ==> ((!x. ((x IN P) ==> (x IN E))) ==> (!x. ((x IN (P UNION Q)) ==> (x IN ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))))))
T c==> ! c==> cIN b0 f0 cIN b0 f1 c==> ! c= cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN b0 f1 c==> ! c==> cIN b0 f5 cIN b0 f1 ! c==> cIN b0 * * part cUNION f5 f0 cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- (((!x'. (!Q. (!P. ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F)))) ==> ((\x'. (!Q. (!P. ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F)))) x')) = ((\x'. (!Q. (!P. ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F)))) x'))
T c= c==> ! ! ! c==> c~ c==> c/\ ! c==> c\/ * b2 b3 * b1 b3 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 c/\ ! c==> c\/ c= b3 f0 c= b3 f1 c\/ c= b3 b0 c\/ c= b3 f0 c= b3 f1 ! c==> c\/ c= b3 b0 c\/ c= b3 f0 c= b3 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 ! c==> c\/ * b2 b3 c\/ * b1 b3 c\/ c= b3 f0 c= b3 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 cF * / ! ! c==> c~ c==> c/\ ! c==> c\/ * b2 b3 * b1 b3 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 c/\ ! c==> c\/ c= b3 f0 c= b3 f1 c\/ c= b3 b0 c\/ c= b3 f0 c= b3 f1 ! c==> c\/ c= b3 b0 c\/ c= b3 f0 c= b3 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 ! c==> c\/ * b2 b3 c\/ * b1 b3 c\/ c= b3 f0 c= b3 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 cF f2 * / ! ! c==> c~ c==> c/\ ! c==> c\/ * b2 b3 * b1 b3 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 c/\ ! c==> c\/ c= b3 f0 c= b3 f1 c\/ c= b3 b0 c\/ c= b3 f0 c= b3 f1 ! c==> c\/ c= b3 b0 c\/ c= b3 f0 c= b3 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 ! c==> c\/ * b2 b3 c\/ * b1 b3 c\/ c= b3 f0 c= b3 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 cF f2
- (~ F), (x' = x), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c/\ c~ cF cF
- (!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) |- (((!q. (((~ (P _7062289)) \/ (~ (Q q))) \/ (coplanar (_7062289 INSERT (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((\q. (((~ (P _7062289)) \/ (~ (Q q))) \/ (coplanar (_7062289 INSERT (q INSERT (a INSERT (b INSERT EMPTY))))))) _7062290)) = ((\q. (((~ (P _7062289)) \/ (~ (Q q))) \/ (coplanar (_7062289 INSERT (q INSERT (a INSERT (b INSERT EMPTY))))))) _7062290))
T c==> ! ! c==> c/\ * f0 b0 * f1 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> ! c\/ c\/ c~ * f0 f4 c~ * f1 b0 ccoplanar * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / c\/ c\/ c~ * f0 f4 c~ * f1 b0 ccoplanar * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 * / c\/ c\/ c~ * f0 f4 c~ * f1 b0 ccoplanar * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5
- |- ((\x'. ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F)) x')
T * / c==> c~ ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 cF f2
+ ((A = F) ==> (((A ==> B) /\ A) ==> B)) |- (((A ==> B) /\ A) ==> B)
T c==> c==> c= f0 cF c==> c/\ c==> f0 f1 f0 f1 c==> c/\ c==> f0 f1 f0 f1
- |- ((~ (_7062446 = _7062448)) \/ ((~ (_7062447 = _7062449)) \/ ((_7062446 INSERT _7062447) = (_7062448 INSERT _7062449))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))))), (x IN P), (x' IN Q) |- (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c==> cIN b0 f3 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! ! c==> c/\ cIN b0 f0 cIN b1 f3 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 f0 c==> cIN f5 f3 ccoplanar * * part cUNION f0 * * part cUNION f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E), (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = ((hull affine) ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x IN P), (x' IN Q), (Q SUBSET E) |- (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f0 c==> cIN f6 f1 c==> cSUBSET f1 f5 c= * * part chull part caffine * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))), (!x. ((Q x) ==> (E x))), (~ F), (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (Q x) |- ((~ F) /\ F)
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> ! c==> * f4 b0 * f3 b0 c==> c~ cF c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> * f4 f5 c/\ c~ cF cF
+ |- (((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((~ (_7062442 = _7062445)) \/ ((~ (_7062441 = _7062444)) \/ ((~ (_7062440 = _7062443)) \/ ((((hull _7062443) _7062444) _7062445) \/ (~ (((hull _7062440) _7062441) _7062442))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ chull f5 f3 f1 c~ chull f4 f2 f0
- (!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) |- (((!q. ((~ (Q q)) \/ (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((\q. ((~ (Q q)) \/ (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) _7062288)) = ((\q. ((~ (Q q)) \/ (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) _7062288))
T c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> ! c\/ c~ * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * / c\/ c~ * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 * / c\/ c~ * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (x IN P) |- (((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = (~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0)))))) ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> q')))) = (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> q'))))
T c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 f0 c= c==> c= c= ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c= c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f5 c= c==> c= ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f5 c==> c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c= c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f5 c= c==> c= ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f5
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))), (((x' = a) \/ (x' = b)) ==> F), ((x' = x'') \/ ((x' = a) \/ (x' = b))) |- F
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c==> c==> c\/ c= f0 f3 c= f0 f4 cF c==> c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 cF
- |- (T = (((~ (Q _7062349)) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062349)) = ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062349) \/ (~ (Q _7062349)))))
T c= cT c= c\/ c~ * f0 f1 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c\/ chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c~ * f0 f1
- (((((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) /\ (((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))) |- (((((((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) /\ (((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))) ==> B) ==> B)
T c==> c/\ c==> c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c==> c/\ c==> c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 f5
- |- ((((\E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) E) ==> (?E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E))) = T)
T c= c==> * / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f3 c? / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F) ==> ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)) = ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F))
T c= c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF
+ (x' = x), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- ((x' = x) /\ F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c= f0 f1 cF
+ (x' = x''), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- F
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 cF
+ (!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))), (Q x'), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) |- ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> * f4 f5 c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f4 b0 * f3 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5
- |- (((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F) = (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)))))
T c= c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0
- |- ((((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F)) ==> (((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F)))
T c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF
+ (x' = x''), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- (~ (x'' = x''))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f1 f1
+ (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')), ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))), (((x'' = a) \/ (x'' = b)) ==> F), ((x'' = x') \/ ((x'' = a) \/ (x'' = b))) |- F
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> c\/ c= f3 f1 c= f3 f2 cF c==> c\/ c= f3 f4 c\/ c= f3 f1 c= f3 f2 cF
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), ((x'' INSERT (x INSERT (a INSERT (b INSERT EMPTY)))) = (x INSERT (x'' INSERT (a INSERT (b INSERT EMPTY))))), (x IN P), (x'' IN Q) |- (coplanar (x'' INSERT (x INSERT (a INSERT (b INSERT EMPTY)))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f5 f0 c==> cIN f4 f1 ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) /\ (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E), (P SUBSET E), (Q SUBSET E) |- (?u. (?v. (?w. ((P UNION (Q UNION (a INSERT (b INSERT EMPTY)))) SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> cSUBSET f4 f3 c==> cSUBSET f5 f3 c? / c? / c? / cSUBSET * * part cUNION f4 * * part cUNION f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- |- (((!P. (!E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F))) ==> ((\P. (!E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F))) P)) = ((\P. (!E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F))) P))
T c= c==> ! ! c==> c~ c==> ! c==> * f0 b2 * b1 b2 c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b2 * b1 b2 c==> ! c==> * b0 b2 * b1 b2 ! c==> c\/ * b0 b2 * f0 b2 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b2 cF * / ! c==> c~ c==> ! c==> * f0 b2 * b1 b2 c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b2 * b1 b2 c==> ! c==> * b0 b2 * b1 b2 ! c==> c\/ * b0 b2 * f0 b2 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b2 cF f4 * / ! c==> c~ c==> ! c==> * f0 b2 * b1 b2 c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b2 * b1 b2 c==> ! c==> * b0 b2 * b1 b2 ! c==> c\/ * b0 b2 * f0 b2 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b2 cF f4
- (x' = b), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- (~ (b = x''))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c~ c= f0 f1 c~ c= f1 f2
+ (~ ((x = x') \/ ((x = a) \/ (x = b)))), (x = a) |- ((a = a) ==> F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f2 c==> c= f2 f2 cF
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (x IN P), (x' IN Q) |- (((!x. (((\E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) x) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))) ==> ((?E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))) = ((?E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 f0 c==> cIN f5 f1 c= c==> ! c==> * / c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 b0 ccoplanar * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ccoplanar * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ccoplanar * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!s. (!p. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s))))) |- ((\s. (!p. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s))))) s)
T c==> ! ! c==> c/\ c= caff_dim b0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT b1 b0 cIN b1 * * part chull part caffine b0 * / ! c==> c/\ c= caff_dim b0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT b1 b0 cIN b1 * * part chull part caffine b0 f0
- (~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) |- ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) /\ F)
T c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 c/\ c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF
- (_7062438 = _7062439) |- ((_7062438 = _7062439) /\ ((P _7062439) \/ (~ (P _7062438))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ * f2 f1 c~ * f2 f0
+ (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))), (!x. ((P x) ==> (E x))), (!x. ((Q x) ==> (E x))) |- (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> ! c==> * f4 b0 * f3 b0 c==> ! c==> * f5 b0 * f3 b0 c==> c\/ * f4 f6 * f5 f6 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6
- |- ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\b. (!c. ((int_le (aff_dim (x' INSERT (b INSERT (c INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) a)
T * / ! cint_le caff_dim * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f1
+ |- (((!s. ((aff_dim ((hull affine) s)) = (aff_dim s))) ==> ((\s. ((aff_dim ((hull affine) s)) = (aff_dim s))) s)) = ((\s. ((aff_dim ((hull affine) s)) = (aff_dim s))) s))
T c= c==> ! c= caff_dim * * part chull part caffine b0 caff_dim b0 * / c= caff_dim * * part chull part caffine b0 caff_dim b0 f0 * / c= caff_dim * * part chull part caffine b0 caff_dim b0 f0
+ (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')), ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((x'' = x') ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c= f3 f4 cF
- (x = b) |- (F = F)
T c==> c= f0 f1 c= cF cF
+ (Q x') |- ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'))))
T c==> * f0 f1 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f5 b0 c==> c/\ c= caff_dim * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f0 b0 * f5 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1
+ (x' IN Q), (x'' IN P) |- (T = ((x'' IN P) /\ (x' IN Q)))
T c==> cIN f0 f1 c==> cIN f2 f3 c= cT c/\ cIN f2 f3 cIN f0 f1
- |- (((!x''. (!x. ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F))) ==> ((\x''. (!x. ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F))) x'')) = ((\x''. (!x. ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F))) x''))
T c= c==> ! ! c==> c~ ! c= c\/ c= b2 b0 c\/ c= b2 b1 c\/ c= b2 f0 c= b2 f1 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF * / ! c==> c~ ! c= c\/ c= b2 b0 c\/ c= b2 b1 c\/ c= b2 f0 c= b2 f1 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF f2 * / ! c==> c~ ! c= c\/ c= b2 b0 c\/ c= b2 b1 c\/ c= b2 f0 c= b2 f1 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF f2
+ (x' = x''), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- ((x' = x'') /\ F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c= f0 f1 cF
+ (!s. (!p. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s))))) |- (((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s))) = T)
T c==> ! ! c==> c/\ c= caff_dim b0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT b1 b0 cIN b1 * * part chull part caffine b0 c= c==> c/\ c= caff_dim f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT f1 f0 cIN f1 * * part chull part caffine f0 cT
+ (x' = a), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- F
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f4 cF
+ |- ((\q'. ((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> ((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = (p' ==> q'))))) q')
T * / c==> c= c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c==> c= ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c= ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 f5
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) /\ (((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))), ((((((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) /\ (((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))) ==> B) |- (((((((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) /\ (((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))) ==> B) /\ B)
T c==> c/\ c==> c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c==> c/\ c==> c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ c==> c/\ c==> c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 f5
+ |- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) ==> F)
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- ((((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F) ==> ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F)) ==> (((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F) ==> ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF
+ (P x), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)
T c==> * f0 f1 c==> c/\ ! c==> c\/ * f0 b0 * f2 b0 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f4 c= b0 f5 c\/ c= b0 f3 c\/ c= b0 f4 c= b0 f5 ! c==> c\/ c= b0 f3 c\/ c= b0 f4 c= b0 f5 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1
+ (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))), (!x. ((Q x) ==> (E x))) |- ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) /\ ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)))))
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> ! c==> * f4 b0 * f3 b0 c/\ ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> ! c==> * f5 b0 * f3 b0 ! c==> c\/ * f5 b0 * f4 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))), ((x = b) ==> F), ((x = a) \/ (x = b)) |- F
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> c= f3 f2 cF c==> c\/ c= f3 f1 c= f3 f2 cF
- ((((((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) /\ (((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))) ==> B) |- (((((((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) /\ (((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))) ==> B) /\ ((((((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) /\ (((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))) ==> B))
T c==> c==> c/\ c==> c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ c==> c/\ c==> c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c==> c/\ c==> c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5
+ (x IN P), (x' IN Q) |- ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((Q SUBSET E) ==> (x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))))))))
T c==> cIN f0 f1 c==> cIN f2 f3 c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> cIN b0 f3 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ cIN b0 f1 cIN b1 f3 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6 c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f3 f6 cIN f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- |- ((\x. ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F)) x)
T * / c==> c~ ! c= c\/ c= b1 f0 c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f2 c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 cF f3
- |- ((!x'. (!b. (!a. (!x. (!E. (!Q. (!P. ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))))))))) = (!x'. (!b. (!a. (!x. (!E. (!Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F)))))))))
T c= ! ! ! ! ! ! ! c==> * b6 b3 c==> * b5 b0 c==> ! c==> * b6 b7 c~ ccollinear * * part cINSERT b7 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! c==> * b5 b7 c~ ccollinear * * part cINSERT b7 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! ! c==> c/\ * b6 b7 * b5 b8 ccoplanar * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! c= chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b7 * b4 b7 c==> c/\ c= caff_dim * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b5 b7 * b4 b7 chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 ! ! ! ! ! ! ! c==> c~ c==> * b6 b3 c==> * b5 b0 c==> ! c==> * b6 b7 c~ ccollinear * * part cINSERT b7 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! c==> * b5 b7 c~ ccollinear * * part cINSERT b7 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! ! c==> c/\ * b6 b7 * b5 b8 ccoplanar * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! c= chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b7 * b4 b7 c==> c/\ c= caff_dim * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b5 b7 * b4 b7 chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF
+ ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) /\ (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))
T c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
+ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) \/ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) \/ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))))) /\ F)
T c==> c\/ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c\/ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (x IN P), (x' IN Q) |- ((!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((Q SUBSET E) ==> (x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))))))
T c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 f3 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 f0 c==> cIN f5 f3 c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f3 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f3 f6 cIN f5 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)))) = T)
T c= c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cT
+ |- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) ==> F)
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (~ ((x = x') \/ ((x = a) \/ (x = b)))), (x = b) |- (~ (b = b))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f3 c~ c= f3 f3
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x' IN Q), (x'' IN P) |- (T = (((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (x'' INSERT (x' INSERT (a INSERT (b INSERT EMPTY)))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f5 f1 c==> cIN f6 f0 c= cT c/\ c= caff_dim * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT f6 * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((!c. ((int_le (aff_dim (x' INSERT (a INSERT (c INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((\c. ((int_le (aff_dim (x' INSERT (a INSERT (c INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) b)) = ((\c. ((int_le (aff_dim (x' INSERT (a INSERT (c INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) b))
T c= c==> ! cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 * / cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f2 * / cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f2
+ (!x. ((P x) ==> (E x))) |- (!x. ((~ (P x)) \/ (E x)))
T c==> ! c==> * f0 b0 * f1 b0 ! c\/ c~ * f0 b0 * f1 b0
+ |- (((?E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))) = (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))
T c= c==> c? / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ccoplanar * * part cUNION f3 * * part cUNION f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccoplanar * * part cUNION f3 * * part cUNION f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- (~ (x' = b))
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f0 f4
- |- (((((((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) /\ (((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))) ==> B) ==> ((((((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) /\ (((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))) ==> B))
T c==> c==> c/\ c==> c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c==> c/\ c==> c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5
+ (~ ((x = x') \/ ((x = a) \/ (x = b)))), (x = a) |- ((x = a) /\ F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f2 c/\ c= f0 f2 cF
+ (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))), (!x. ((P x) ==> (E x))), (!x. ((Q x) ==> (E x))), (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), ((P x) \/ (Q x)) |- ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) /\ F)
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> ! c==> * f4 b0 * f3 b0 c==> ! c==> * f5 b0 * f3 b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> c\/ * f4 f6 * f5 f6 c/\ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 cF
- |- ((_7062312 = _7062313) ==> ((BIT1 _7062312) = (BIT1 _7062313)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ (x' = x''), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- (~ (x'' = x''))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c~ c= f1 f1
- (!s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))) |- ((\t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t)))) t)
T c==> ! ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1 * / c==> c/\ cSUBSET f0 b0 cint_le caff_dim b0 caff_dim f0 c= * * part chull part caffine f0 * * part chull part caffine b0 f1
+ |- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) ==> F)
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (P x) |- ((P x) /\ ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))
T c==> * f0 f1 c/\ * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) /\ F)
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- (((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ (!x'. ((x' IN (a INSERT (b INSERT EMPTY))) ==> (x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))))) ==> (!x''. ((x'' IN (x' INSERT (a INSERT (b INSERT EMPTY)))) ==> (x'' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))))
T c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (x' = b), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- (~ (b = b))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c~ c= f0 f1 c~ c= f1 f1
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))
T * / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (x' = a), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- ((x' = a) /\ F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f4 c/\ c= f0 f1 cF
- |- (T = (((~ (_7062354 = a)) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062354)) = ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062354) \/ (~ (_7062354 = a)))))
T c= cT c= c\/ c~ c= f0 f1 chull part caffine * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f0 c\/ chull part caffine * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f0 c~ c= f0 f1
- |- ((!a. (!x''. (!x. (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))))) = T)
T c= ! ! ! ! c= c\/ c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b0 c= b3 f0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cT
+ ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- (!x. (((~ (P x)) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) /\ ((~ (Q x)) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c/\ c\/ c~ * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c\/ c~ * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0
- |- ((~ (_7062310 = _7062311)) \/ ((aff_dim _7062310) = (aff_dim _7062311)))
T c\/ c~ c= f0 f1 c= caff_dim f0 caff_dim f1
- |- ((\p'. (!q'. (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f4
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (P x), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) /\ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> * f4 f3 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- (((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) |- ((!s. (!p. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s))))) ==> (p IN ((hull affine) s)))
T c==> c/\ c= caff_dim f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT f1 f0 c==> ! ! c==> c/\ c= caff_dim b0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT b1 b0 cIN b1 * * part chull part caffine b0 cIN f1 * * part chull part caffine f0
+ (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')), (x'' = x'), ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- F
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f4 c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
- (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) b)), ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) b)) /\ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) b))
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2
+ ((?x. (x IN Q)) /\ ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY))))))))))) |- ((x IN P) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))
T c==> c/\ c? / cIN b0 f0 c/\ ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! ! c==> c/\ cIN b0 f1 cIN b1 f0 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 f1 ccoplanar * * part cUNION f1 * * part cUNION f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (x' = x''), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c==> c~ cF cF
+ |- ((\s. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s)))) s)
T * / c==> c/\ c= caff_dim b0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT f0 b0 cIN f0 * * part chull part caffine b0 f1
+ ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- (((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) b) ==> F) = F)
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c= c==> chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 cF cF
- |- (((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))) |- (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))
T c==> ! ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1 ! c==> c/\ cSUBSET f0 b0 cint_le caff_dim b0 caff_dim f0 c= * * part chull part caffine f0 * * part chull part caffine b0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (x' = a), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- ((a = a) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f4 c==> c= f1 f1 cF
- ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F) |- ((((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F)) ==> ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF
+ |- (((!b. (!c. ((int_le (aff_dim (x' INSERT (b INSERT (c INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((\b. (!c. ((int_le (aff_dim (x' INSERT (b INSERT (c INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) a)) = ((\b. (!c. ((int_le (aff_dim (x' INSERT (b INSERT (c INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) a))
T c= c==> ! ! cint_le caff_dim * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 * / ! cint_le caff_dim * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 * / ! cint_le caff_dim * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f1
+ |- ((((~ (~ (((real_le (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_le (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) /\ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) /\ ((((real_le ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) \/ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) \/ (((real_le ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) \/ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))))))))))) ==> F) ==> (~ (((real_le (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_le (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) /\ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) /\ ((((real_le ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) \/ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) \/ (((real_le ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) \/ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))))))))))) = (~ (((real_le (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_le (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) /\ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) /\ ((((real_le ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) \/ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) \/ (((real_le ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) \/ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))))))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c\/ creal_le creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ creal_le creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF c~ c/\ creal_le creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c\/ creal_le creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ creal_le creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c/\ creal_le creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c\/ creal_le creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ creal_le creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((!x. (((\E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) x) ==> (?E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)))) ==> ((?E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) ==> (?E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)))) = ((?E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) ==> (?E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E))))
T c= c==> ! c==> * / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 b0 c? / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c==> c? / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c? / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E), (x IN P), (x' IN Q) |- (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> cIN f4 f0 c==> cIN f6 f1 ccoplanar * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (x' = x), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- (~ (x = b))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f1 f4
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- (_7062442 = _7062445) |- ((_7062441 = _7062444) ==> ((~ (_7062440 = _7062443)) \/ ((((hull _7062443) _7062444) _7062445) \/ (~ (((hull _7062440) _7062441) _7062442)))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ chull f5 f3 f1 c~ chull f4 f2 f0
+ (x' = a), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- F
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f4 cF
- |- ((((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F) ==> ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F)) ==> (((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F) ==> ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F)))
T c==> c==> c==> c~ c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 cF c==> c~ c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 cF c==> c==> c~ c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 cF c==> c~ c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 cF
+ |- (((!s. ((~ (s = EMPTY)) = (?x. (x IN s)))) ==> ((\s. ((~ (s = EMPTY)) = (?x. (x IN s)))) s)) = ((\s. ((~ (s = EMPTY)) = (?x. (x IN s)))) s))
T c= c==> ! c= c~ c= b0 part cEMPTY c? / cIN b1 b0 * / c= c~ c= b0 part cEMPTY c? / cIN b1 b0 f0 * / c= c~ c= b0 part cEMPTY c? / cIN b1 b0 f0
+ (!s. (!p. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s))))) |- (((!p. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s)))) ==> ((\p. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s)))) p)) = ((\p. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s)))) p))
T c==> ! ! c==> c/\ c= caff_dim b0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT b1 b0 cIN b1 * * part chull part caffine b0 c= c==> ! c==> c/\ c= caff_dim f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT b0 f0 cIN b0 * * part chull part caffine f0 * / c==> c/\ c= caff_dim f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT b0 f0 cIN b0 * * part chull part caffine f0 f1 * / c==> c/\ c= caff_dim f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT b0 f0 cIN b0 * * part chull part caffine f0 f1
+ |- ((~ (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b)))))) ==> F)
T c==> c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 cF
+ (x' IN Q), (x'' IN P) |- ((((x'' IN P) /\ (x' IN Q)) ==> ((coplanar (x'' INSERT (x' INSERT (a INSERT (b INSERT EMPTY))))) = T)) = ((coplanar (x'' INSERT (x' INSERT (a INSERT (b INSERT EMPTY))))) = T))
T c==> cIN f0 f1 c==> cIN f2 f3 c= c==> c/\ cIN f2 f3 cIN f0 f1 c= ccoplanar * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cT c= ccoplanar * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cT
- |- (((!a. (!x''. (!x. ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F)))) ==> ((\a. (!x''. (!x. ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F)))) a)) = ((\a. (!x''. (!x. ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F)))) a))
T c= c==> ! ! ! c==> c~ ! c= c\/ c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b0 c= b3 f0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF * / ! ! c==> c~ ! c= c\/ c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b0 c= b3 f0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1 * / ! ! c==> c~ ! c= c\/ c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b0 c= b3 f0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1
+ (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (x IN P), (x' IN Q) |- ((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 f3 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 f0 c==> cIN f5 f3 c= c==> c= ccollinear * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c= ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- (((!a. (!x. (!x'. ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F)))) ==> ((\a. (!x. (!x'. ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F)))) a)) = ((\a. (!x. (!x'. ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F)))) a))
T c= c==> ! ! ! c==> c~ c==> c/\ chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 ! c==> c\/ c= b3 b0 c= b3 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 ! c==> c\/ c= b3 b2 c\/ c= b3 b0 c= b3 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 cF * / ! ! c==> c~ c==> c/\ chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 ! c==> c\/ c= b3 b0 c= b3 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 ! c==> c\/ c= b3 b2 c\/ c= b3 b0 c= b3 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 cF f1 * / ! ! c==> c~ c==> c/\ chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 ! c==> c\/ c= b3 b0 c= b3 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 ! c==> c\/ c= b3 b2 c\/ c= b3 b0 c= b3 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 cF f1
- |- ((~ (_7062304 = _7062305)) \/ ((collinear _7062305) \/ (~ (collinear _7062304))))
T c\/ c~ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
+ (A = T) |- ((((T ==> B) /\ T) ==> B) = (((A ==> B) /\ A) ==> B))
T c==> c= f0 cT c= c==> c/\ c==> cT f1 cT f1 c==> c/\ c==> f0 f1 f0 f1
- (x = b) |- (((~ (Q _7062355)) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062355)) = ((~ (Q _7062355)) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062355)))
T c==> c= f0 f1 c= c\/ c~ * f2 f3 chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f1 part cEMPTY f3 c\/ c~ * f2 f3 chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f1 part cEMPTY f3
- (_7062302 = _7062303) |- ((_7062302 = _7062303) /\ ((coplanar _7062303) \/ (~ (coplanar _7062302))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ ccoplanar f1 c~ ccoplanar f0
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\s. (((hull affine) ((hull affine) s)) = ((hull affine) s))) s)
T * / c= * * part chull part caffine * * part chull part caffine b0 * * part chull part caffine b0 f0
+ ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062354) \/ (~ (_7062354 = a)))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c\/ chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c~ c= f5 f3
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x IN P), (x' IN Q), (Q SUBSET E) |- ((((((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) ==> ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) /\ ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) = ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f0 c==> cIN f6 f1 c==> cSUBSET f1 f5 c= c==> c/\ c==> c/\ cIN f6 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')), ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))), ((x'' = b) ==> F), ((x'' = a) \/ (x'' = b)) |- F
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> c= f3 f2 cF c==> c\/ c= f3 f1 c= f3 f2 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\a. (!x'. (!Q. (!P. ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F))))) a)
T * / ! ! ! c==> c~ c==> c/\ ! c==> c\/ * b3 b4 * b2 b4 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 c/\ ! c==> c\/ c= b4 b0 c= b4 f0 c\/ c= b4 b1 c\/ c= b4 b0 c= b4 f0 ! c==> c\/ c= b4 b1 c\/ c= b4 b0 c= b4 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 ! c==> c\/ * b3 b4 c\/ * b2 b4 c\/ c= b4 b0 c= b4 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 cF f1
+ |- ((\s. (!u. ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u)))) s)
T * / ! c==> c? / c/\ cSUBSET b0 b2 cSUBSET b2 b1 cSUBSET b0 b1 f0
+ |- (!t. (((\t. ((s SUBSET t) /\ (t SUBSET u))) t) ==> ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) ==> (s SUBSET u))))
T c==> * / c/\ cSUBSET f0 b0 cSUBSET b0 f1 f2 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 cSUBSET f0 f1
+ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E), (P SUBSET E), (Q SUBSET E) |- (((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> cSUBSET f4 f3 c==> cSUBSET f5 f3 c/\ cSUBSET * * part cUNION f4 f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- (~ (Q x)), (Q x) |- ((~ (Q x)) /\ (Q x))
T c==> c~ * f0 f1 c==> * f0 f1 c/\ c~ * f0 f1 * f0 f1
+ |- ((~ (~ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> F)
T c==> c~ c~ creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cF
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))), (!x. ((Q x) ==> (E x))), (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (Q x) |- ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) /\ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> ! c==> * f4 b0 * f3 b0 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> * f4 f5 c/\ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!s. (!p. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s))))), (((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) |- ((!s. (!p. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s))))) /\ (p IN ((hull affine) s)))
T c==> ! ! c==> c/\ c= caff_dim b0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT b1 b0 cIN b1 * * part chull part caffine b0 c==> c/\ c= caff_dim f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT f1 f0 c/\ ! ! c==> c/\ c= caff_dim b0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT b1 b0 cIN b1 * * part chull part caffine b0 cIN f1 * * part chull part caffine f0
- (_7062441 = _7062444), (_7062442 = _7062445) |- ((_7062440 = _7062443) ==> ((((hull _7062443) _7062444) _7062445) \/ (~ (((hull _7062440) _7062441) _7062442))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ chull f5 f1 f3 c~ chull f4 f0 f2
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E), (x IN P), (x' IN Q) |- ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E) /\ (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> cIN f4 f0 c==> cIN f6 f1 c/\ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 ccoplanar * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (x' = x), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- (~ (x = a))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c~ c= f1 f3
- (x' = x), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- (~ (x = x''))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f1 f2
- (_7062446 = _7062448) |- ((_7062447 = _7062449) ==> ((_7062446 INSERT _7062447) = (_7062448 INSERT _7062449)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((int_le (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))
T cint_le cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))), (((Q x) \/ ((x = a) \/ (x = b))) ==> F), ((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) |- F
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> c\/ * f5 f3 c\/ c= f3 f1 c= f3 f2 cF c==> c\/ * f4 f3 c\/ * f5 f3 c\/ c= f3 f1 c= f3 f2 cF
- |- (((!Q. (!P. ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F))) ==> ((\Q. (!P. ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F))) Q)) = ((\Q. (!P. ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F))) Q))
T c= c==> ! ! c==> c~ c==> c/\ ! c==> c\/ * b1 b2 * b0 b2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c/\ ! c==> c\/ c= b2 f1 c= b2 f2 c\/ c= b2 f0 c\/ c= b2 f1 c= b2 f2 ! c==> c\/ c= b2 f0 c\/ c= b2 f1 c= b2 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 ! c==> c\/ * b1 b2 c\/ * b0 b2 c\/ c= b2 f1 c= b2 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 cF * / ! c==> c~ c==> c/\ ! c==> c\/ * b1 b2 * b0 b2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c/\ ! c==> c\/ c= b2 f1 c= b2 f2 c\/ c= b2 f0 c\/ c= b2 f1 c= b2 f2 ! c==> c\/ c= b2 f0 c\/ c= b2 f1 c= b2 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 ! c==> c\/ * b1 b2 c\/ * b0 b2 c\/ c= b2 f1 c= b2 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 cF f3 * / ! c==> c~ c==> c/\ ! c==> c\/ * b1 b2 * b0 b2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c/\ ! c==> c\/ c= b2 f1 c= b2 f2 c\/ c= b2 f0 c\/ c= b2 f1 c= b2 f2 ! c==> c\/ c= b2 f0 c\/ c= b2 f1 c= b2 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 ! c==> c\/ * b1 b2 c\/ * b0 b2 c\/ c= b2 f1 c= b2 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 cF f3
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ F), (x' = a), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f4 c/\ c~ cF cF
+ |- ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c= c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (x' = b), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- F
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f4 c= f0 f1 cF
+ (!x. ((Q x) ==> (E x))) |- ((E _7062454) \/ (~ (Q _7062454)))
T c==> ! c==> * f0 b0 * f1 b0 c\/ * f1 f2 c~ * f0 f2
- |- (((!x. (!E. (!Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F))))) ==> ((\x. (!E. (!Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F))))) x)) = ((\x. (!E. (!Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F))))) x))
T c= c==> ! ! ! ! c==> c~ c==> * b3 b0 c==> * b2 f0 c==> ! c==> * b3 b4 c~ ccollinear * * part cINSERT b4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> * b2 b4 c~ ccollinear * * part cINSERT b4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! c==> c/\ * b3 b4 * b2 b5 ccoplanar * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c= chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 * b1 b4 c==> c/\ c= caff_dim * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b2 b4 * b1 b4 chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 cF * / ! ! ! c==> c~ c==> * b3 b0 c==> * b2 f0 c==> ! c==> * b3 b4 c~ ccollinear * * part cINSERT b4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> * b2 b4 c~ ccollinear * * part cINSERT b4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! c==> c/\ * b3 b4 * b2 b5 ccoplanar * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c= chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 * b1 b4 c==> c/\ c= caff_dim * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b2 b4 * b1 b4 chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 cF f3 * / ! ! ! c==> c~ c==> * b3 b0 c==> * b2 f0 c==> ! c==> * b3 b4 c~ ccollinear * * part cINSERT b4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> * b2 b4 c~ ccollinear * * part cINSERT b4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! c==> c/\ * b3 b4 * b2 b5 ccoplanar * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c= chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 * b1 b4 c==> c/\ c= caff_dim * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b2 b4 * b1 b4 chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 cF f3
+ ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((_7062354 = a) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062354))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c==> c= f5 f3 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5
- |- ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((!x. ((x IN P) ==> (x IN E))) = (P SUBSET E))
T c= ! c==> cIN b0 f0 cIN b0 f1 cSUBSET f0 f1
- (!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) |- ((\q. ((~ (Q q)) \/ (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) _7062288)
T c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * / c\/ c~ * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ |- ((((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ (!x'. ((x' IN (a INSERT (b INSERT EMPTY))) ==> (x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))))) ==> (!x''. ((x'' IN (x' INSERT (a INSERT (b INSERT EMPTY)))) ==> (x'' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))))) = (((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) ==> ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))))
T c= c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((F ==> t) = T)
T c= c==> cF f0 cT
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x' IN Q) |- ((x'' IN P) ==> (x'' IN E))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f1 c==> cIN f7 f0 cIN f7 f5
- |- (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> q')))
T c==> c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c= c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f4 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f4
+ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E) |- (E = ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((?x. (x IN Q)) /\ ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY))))))))))) |- (((!x. (((\x. (x IN P)) x) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))) ==> ((?x. (x IN P)) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))) = ((?x. (x IN P)) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))))
T c==> c/\ c? / cIN b0 f0 c/\ ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! ! c==> c/\ cIN b0 f1 cIN b1 f0 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> ! c==> * / cIN b1 f1 b0 ccoplanar * * part cUNION f1 * * part cUNION f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / cIN b0 f1 ccoplanar * * part cUNION f1 * * part cUNION f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / cIN b0 f1 ccoplanar * * part cUNION f1 * * part cUNION f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- ((((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) ==> B) /\ ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))) |- ((((((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) ==> B) /\ ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) ==> B)
T c==> c/\ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c/\ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 f4
- (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')), (x'' = b), ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((~ F) ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f2 c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ cF cF
- (_7062440 = _7062443), (_7062441 = _7062444), (_7062442 = _7062445) |- ((((hull _7062443) _7062444) _7062445) \/ (~ (((hull _7062440) _7062441) _7062442)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ chull f1 f3 f5 c~ chull f0 f2 f4
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((real_le (real_of_num m)) (real_neg (real_of_num n))) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))
T c= creal_le creal_of_num f0 creal_neg creal_of_num f1 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t)
T * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1
+ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E), (P SUBSET E), (Q SUBSET E) |- (?w. ((P UNION (Q UNION (a INSERT (b INSERT EMPTY)))) SUBSET ((hull affine) (x' INSERT (a INSERT (w INSERT EMPTY))))))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> cSUBSET f4 f3 c==> cSUBSET f5 f3 c? / cSUBSET * * part cUNION f4 * * part cUNION f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) b)
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4
+ (x IN P), (x'' IN Q) |- ((x IN P) /\ (x'' IN Q))
T c==> cIN f0 f1 c==> cIN f2 f3 c/\ cIN f0 f1 cIN f2 f3
- |- ((((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F) ==> ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F)) = ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F))
T c= c==> c==> c~ c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 cF c==> c~ c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 cF c==> c~ c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 cF
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 cF
+ (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- ((x' = x'') ==> F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c==> c= f0 f1 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))), (!x. ((Q x) ==> (E x))), (Q x) |- (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> ! c==> * f4 b0 * f3 b0 c==> * f4 f5 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5
- |- (((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F) = (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')))))
T c= c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
- |- ((\x'. (!b. (!a. (!x. (!E. (!Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F)))))))) x')
T * / ! ! ! ! ! ! c==> c~ c==> * b6 b3 c==> * b5 b0 c==> ! c==> * b6 b7 c~ ccollinear * * part cINSERT b7 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! c==> * b5 b7 c~ ccollinear * * part cINSERT b7 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! ! c==> c/\ * b6 b7 * b5 b8 ccoplanar * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! c= chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b7 * b4 b7 c==> c/\ c= caff_dim * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b5 b7 * b4 b7 chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cF f0
- (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) |- (!x. ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) \/ (E x)))
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0
+ |- (((x IN P) ==> ((x' IN Q) ==> ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) = (x' IN E))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((x IN Q) ==> (x IN E))) ==> (x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))))))))) = ((x IN P) ==> ((x' IN Q) ==> ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((Q SUBSET E) ==> (x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))))))))))
T c= c==> cIN f0 f1 c==> cIN f2 f3 c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> cIN b0 f3 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ cIN b0 f1 cIN b1 f3 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN b0 f6 c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> cIN b0 f3 cIN b0 f6 cIN f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN f0 f1 c==> cIN f2 f3 c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> cIN b0 f3 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ cIN b0 f1 cIN b1 f3 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6 c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f3 f6 cIN f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- |- (((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F) = (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))))
T c= c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cF ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1
+ (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- (((x' = a) \/ (x' = b)) ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c==> c\/ c= f0 f3 c= f0 f4 cF
+ (x = a) |- ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) = (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) a)))
T c==> c= f0 f1 c= c~ chull part caffine * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f0 c~ chull part caffine * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f1
+ ((?x. (x IN Q)) /\ ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY))))))))))) |- (((\x. (x IN P)) x) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))
T c==> c/\ c? / cIN b0 f0 c/\ ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! ! c==> c/\ cIN b0 f1 cIN b1 f0 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> * / cIN b0 f1 f4 ccoplanar * * part cUNION f1 * * part cUNION f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- |- ((\x. (!x'. ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F))) x)
T * / ! c==> c~ c==> c/\ chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 ! c==> c\/ c= b2 f0 c= b2 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 ! c==> c\/ c= b2 b1 c\/ c= b2 f0 c= b2 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 cF f2
+ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = ((hull affine) ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) |- ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) = (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((hull affine) ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((!b. (!a. (!x. (!E. (!Q. (!P. ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'))))))))))))))) = T)
T c= ! ! ! ! ! ! c==> * b5 b2 c==> * b4 f0 c==> ! c==> * b5 b6 c~ ccollinear * * part cINSERT b6 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! c==> * b4 b6 c~ ccollinear * * part cINSERT b6 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! ! c==> c/\ * b5 b6 * b4 b7 ccoplanar * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! c= chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b6 * b3 b6 c==> c/\ c= caff_dim * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b4 b6 * b3 b6 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 cT
- |- (((!E. (!Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F)))) ==> ((\E. (!Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F)))) E)) = ((\E. (!Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F)))) E))
T c= c==> ! ! ! c==> c~ c==> * b2 f0 c==> * b1 f1 c==> ! c==> * b2 b3 c~ ccollinear * * part cINSERT b3 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> * b1 b3 c~ ccollinear * * part cINSERT b3 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! c==> c/\ * b2 b3 * b1 b4 ccoplanar * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b3 * b0 b3 c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b1 b3 * b0 b3 chull part caffine * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 cF * / ! ! c==> c~ c==> * b2 f0 c==> * b1 f1 c==> ! c==> * b2 b3 c~ ccollinear * * part cINSERT b3 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> * b1 b3 c~ ccollinear * * part cINSERT b3 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! c==> c/\ * b2 b3 * b1 b4 ccoplanar * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b3 * b0 b3 c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b1 b3 * b0 b3 chull part caffine * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 cF f4 * / ! ! c==> c~ c==> * b2 f0 c==> * b1 f1 c==> ! c==> * b2 b3 c~ ccollinear * * part cINSERT b3 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> * b1 b3 c~ ccollinear * * part cINSERT b3 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! c==> c/\ * b2 b3 * b1 b4 ccoplanar * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b3 * b0 b3 c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b1 b3 * b0 b3 chull part caffine * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 cF f4
- (~ F), (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')), (x'' = a), ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f1 c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ cF cF
+ |- ((((real_le (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_le (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) /\ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) /\ ((((real_le ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) \/ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) \/ (((real_le ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) \/ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))))))))) = (~ (((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))))
T c= c/\ creal_le creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c\/ creal_le creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ creal_le creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c==> cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((!x''. (((~ (x = a)) /\ (~ (x = b))) \/ ((x'' = x') \/ ((x'' = a) \/ (x'' = b))))) = (((~ (x = a)) /\ (~ (x = b))) \/ (!x. ((x = x') \/ ((x = a) \/ (x = b))))))
T c= ! c\/ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 c\/ c/\ c~ c= f0 f1 c~ c= f0 f2 ! c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2
+ |- (((!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) ==> ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t)) = ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t))
T c= c==> ! c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1 * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x IN P), (x' IN Q), (Q SUBSET E) |- (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f0 c==> cIN f6 f1 c==> cSUBSET f1 f5 ccoplanar * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((\b. (!a. (!x'. (!Q. (!P. ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F)))))) b)
T * / ! ! ! ! c==> c~ c==> c/\ ! c==> c\/ * b4 b5 * b3 b5 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c/\ ! c==> c\/ c= b5 b1 c= b5 b0 c\/ c= b5 b2 c\/ c= b5 b1 c= b5 b0 ! c==> c\/ c= b5 b2 c\/ c= b5 b1 c= b5 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 ! c==> c\/ * b4 b5 c\/ * b3 b5 c\/ c= b5 b1 c= b5 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 cF f0
+ (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (x' IN Q) |- (((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = (~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0)))))) ==> (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> ((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> q')))) = (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> ((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> q'))))
T c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 f0 c= c==> c= c= ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c= c==> c= ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f5 c= c==> c= ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c= ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f5 c==> c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c= c==> c= ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f5 c= c==> c= ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c= ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f5
+ (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (q IN Q) |- (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 f0 c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((_7062304 = _7062305) ==> ((collinear _7062305) \/ (~ (collinear _7062304))))
T c==> c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
+ (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- (~ (x' = x))
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f0 f2
- (!s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))) |- (((!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t)))) ==> ((\t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t)))) t)) = ((\t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t)))) t))
T c==> ! ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1 c= c==> ! c==> c/\ cSUBSET f0 b0 cint_le caff_dim b0 caff_dim f0 c= * * part chull part caffine f0 * * part chull part caffine b0 * / c==> c/\ cSUBSET f0 b0 cint_le caff_dim b0 caff_dim f0 c= * * part chull part caffine f0 * * part chull part caffine b0 f1 * / c==> c/\ cSUBSET f0 b0 cint_le caff_dim b0 caff_dim f0 c= * * part chull part caffine f0 * * part chull part caffine b0 f1
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) |- ((\q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY))))))) q)
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / c==> c/\ cIN f4 f0 cIN b0 f1 ccoplanar * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5
+ |- (((!x. ((x IN Q) ==> (x IN E))) ==> ((!x. ((x IN ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) = (x IN E))) ==> ((!x. ((x IN P) ==> (x IN E))) ==> (!x. ((x IN (P UNION Q)) ==> (x IN ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))))) = ((Q SUBSET E) ==> ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E) ==> ((P SUBSET E) ==> ((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))))))))
T c= c==> ! c==> cIN b0 f0 cIN b0 f1 c==> ! c= cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN b0 f1 c==> ! c==> cIN b0 f5 cIN b0 f1 ! c==> cIN b0 * * part cUNION f5 f0 cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cSUBSET f0 f1 c==> c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cSUBSET f5 f1 cSUBSET * * part cUNION f5 f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ F), (x' = a), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f4 c/\ c~ cF cF
- (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (x = b), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((~ F) ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f2 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c~ cF cF
+ |- ((~ (s = EMPTY)) = (?x. (x IN s)))
T c= c~ c= f0 part cEMPTY c? / cIN b0 f0
- (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (Q x), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) /\ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> * f4 f3 c==> c/\ ! c==> c\/ * f5 b0 * f4 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))))), (x IN P) |- ((((\x. (x IN Q)) x') ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))) = T)
T c==> c/\ ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c==> cIN b0 f3 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! ! c==> c/\ cIN b0 f0 cIN b1 f3 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 f0 c= c==> * / cIN b0 f3 f5 ccoplanar * * part cUNION f0 * * part cUNION f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
- |- ((!x''. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x'') \/ (~ (E x)))) = ((!x. (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) \/ (~ (E x))))
T c= ! c\/ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c~ * f3 f4 c\/ ! chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c~ * f3 f4
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (A = F) |- ((A = F) /\ (((A ==> B) /\ A) ==> B))
T c==> c= f0 cF c/\ c= f0 cF c==> c/\ c==> f0 f1 f0 f1
- |- ((!q'. ((~ (Q q)) \/ (~ (collinear (q' INSERT (a INSERT (b INSERT EMPTY))))))) = ((~ (Q q)) \/ (!q. (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))))
T c= ! c\/ c~ * f0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ * f0 f1 ! c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((!b. (((?x. (x IN P)) /\ ((?x. (x IN Q)) /\ ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))))))) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))) = T)
T c= ! c==> c/\ c? / cIN b1 f0 c/\ c? / cIN b1 f1 c/\ ! c==> cIN b1 f0 c~ ccollinear * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ ! c==> cIN b1 f1 c~ ccollinear * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY ! ! c==> c/\ cIN b1 f0 cIN b2 f1 ccoplanar * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY ccoplanar * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cT
+ ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062349) \/ (~ (Q _7062349)))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c\/ chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c~ * f1 f5
+ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) ==> F), ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) \/ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))))) |- F
T c==> c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))
T c==> c= c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f5 c= c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 f5
+ ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- (!x. (((~ (x = x')) /\ ((~ (x = a)) /\ (~ (x = b)))) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c\/ c/\ c~ c= b0 f2 c/\ c~ c= b0 f3 c~ c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0
+ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = ((hull affine) ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) |- ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((hull affine) ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) = (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- (((~ (_7062356 = a)) \/ ((_7062356 = x') \/ ((_7062356 = a) \/ (_7062356 = b)))) /\ ((~ (_7062356 = b)) \/ ((_7062356 = x') \/ ((_7062356 = a) \/ (_7062356 = b)))))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ c\/ c~ c= f5 f3 c\/ c= f5 f2 c\/ c= f5 f3 c= f5 f4 c\/ c~ c= f5 f4 c\/ c= f5 f2 c\/ c= f5 f3 c= f5 f4
+ (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (x' IN Q) |- (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> ((((collinear (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> q')))
T c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 f0 c==> c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c= c==> c= ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f5 c= c==> c= ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c= ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f5
- |- ((\E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)) E)
T * / c==> c~ c==> ! c==> * f0 b1 * b0 b1 c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 * b0 b1 c==> ! c==> * f4 b1 * b0 b1 ! c==> c\/ * f4 b1 * f0 b1 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 cF f5
+ (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- (((Q x) \/ ((x = a) \/ (x = b))) ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c\/ * f5 f3 c\/ c= f3 f1 c= f3 f2 cF
- |- ((!b. (!a. (!x. (!x'. (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')))))))) = (!b. (!a. (!x. (!x'. ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F))))))
T c= ! ! ! ! c==> c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 ! c==> c\/ c= b4 b1 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 ! c==> c\/ c= b4 b3 c\/ c= b4 b1 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 ! ! ! ! c==> c~ c==> c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 ! c==> c\/ c= b4 b1 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 ! c==> c\/ c= b4 b3 c\/ c= b4 b1 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 cF
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((!x. (!E. (!Q. (!P. ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'))))))))))))) = T)
T c= ! ! ! ! c==> * b3 b0 c==> * b2 f0 c==> ! c==> * b3 b4 c~ ccollinear * * part cINSERT b4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> * b2 b4 c~ ccollinear * * part cINSERT b4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! c==> c/\ * b3 b4 * b2 b5 ccoplanar * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c= chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 * b1 b4 c==> c/\ c= caff_dim * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b2 b4 * b1 b4 chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 cT
- (!x. ((Q x) ==> (E x))), (~ (E x)), (Q x) |- ((~ (E x)) /\ (E x))
T c==> ! c==> * f0 b0 * f1 b0 c==> c~ * f1 f2 c==> * f0 f2 c/\ c~ * f1 f2 * f1 f2
+ |- ((((~ (~ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> F) ==> (~ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (~ ((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c= c==> c==> c~ c~ creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cF c~ creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (x' = x), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- (~ (x = x))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f1 f1
- |- ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\a. (!x. (!E. (!Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F)))))) a)
T * / ! ! ! ! c==> c~ c==> * b4 b1 c==> * b3 f0 c==> ! c==> * b4 b5 c~ ccollinear * * part cINSERT b5 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c==> ! c==> * b3 b5 c~ ccollinear * * part cINSERT b5 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c==> ! ! c==> c/\ * b4 b5 * b3 b6 ccoplanar * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c==> ! c= chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b5 * b2 b5 c==> c/\ c= caff_dim * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b3 b5 * b2 b5 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f0 cF f2
+ |- (((!P. (!s. (s SUBSET ((hull P) s)))) ==> ((\P. (!s. (s SUBSET ((hull P) s)))) P)) = ((\P. (!s. (s SUBSET ((hull P) s)))) P))
T c= c==> ! ! cSUBSET b1 * * part chull b0 b1 * / ! cSUBSET b1 * * part chull b0 b1 f0 * / ! cSUBSET b1 * * part chull b0 b1 f0
- |- (((!s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))) ==> (!s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t)))))) = (!s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))))
T c= c==> ! ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1 ! ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1 ! ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1
+ ((?x. (x IN Q)) /\ ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY))))))))))), (x IN P) |- ((x IN P) /\ (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))
T c==> c/\ c? / cIN b0 f0 c/\ ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! ! c==> c/\ cIN b0 f1 cIN b1 f0 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 f1 c/\ cIN f4 f1 ccoplanar * * part cUNION f1 * * part cUNION f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (x = b) |- (((~ (_7062357 = a)) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062357)) = ((~ (_7062357 = a)) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062357)))
T c==> c= f0 f1 c= c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f4 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f4 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2
+ (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((Q x) ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> * f5 f3 cF
+ ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')
T c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E) |- ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E) = (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x' IN Q) |- (((x'' IN P) ==> (x'' IN E)) = T)
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f1 c= c==> cIN f7 f0 cIN f7 f5 cT
+ (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (q IN Q) |- (((~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))) ==> ((collinear (q INSERT (a INSERT (b INSERT EMPTY)))) = F)) = ((collinear (q INSERT (a INSERT (b INSERT EMPTY)))) = F))
T c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 f0 c= c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF c= ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- |- (((((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F) ==> ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F)) ==> (((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F) ==> ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F))) = (((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F) ==> ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F)))
T c= c==> c==> c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
+ (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- ((x' = a) ==> F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c==> c= f0 f3 cF
- ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F) |- ((((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F) ==> ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F)) ==> ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF
- |- ((!Q. (!P. (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)))))) = T)
T c= ! ! c==> c/\ ! c==> c\/ * b1 b2 * b0 b2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c/\ ! c==> c\/ c= b2 f1 c= b2 f2 c\/ c= b2 f0 c\/ c= b2 f1 c= b2 f2 ! c==> c\/ c= b2 f0 c\/ c= b2 f1 c= b2 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 ! c==> c\/ * b1 b2 c\/ * b0 b2 c\/ c= b2 f1 c= b2 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 cT
+ |- ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) = ((\E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))
T c= c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) |- ((coplanar (x'' INSERT (x INSERT (a INSERT (b INSERT EMPTY))))) = (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (x'' INSERT (x INSERT (a INSERT (b INSERT EMPTY)))))))
T c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= ccoplanar * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT f4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((!s. (((hull affine) ((hull affine) s)) = ((hull affine) s))) ==> ((\s. (((hull affine) ((hull affine) s)) = ((hull affine) s))) s)) = ((\s. (((hull affine) ((hull affine) s)) = ((hull affine) s))) s))
T c= c==> ! c= * * part chull part caffine * * part chull part caffine b0 * * part chull part caffine b0 * / c= * * part chull part caffine * * part chull part caffine b0 * * part chull part caffine b0 f0 * / c= * * part chull part caffine * * part chull part caffine b0 * * part chull part caffine b0 f0
+ ((x = a) \/ (x = b)) |- (((x = a) \/ (x = b)) /\ ((x = x') \/ ((x = a) \/ (x = b))))
T c==> c\/ c= f0 f1 c= f0 f2 c/\ c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f2
+ (x = b) |- ((~ (x = b)) = (~ (b = b)))
T c==> c= f0 f1 c= c~ c= f0 f1 c~ c= f1 f1
+ ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- (!x. (((~ (x = x')) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) /\ (((~ (x = a)) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) /\ ((~ (x = b)) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)))))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c/\ c\/ c~ c= b0 f2 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ c\/ c~ c= b0 f3 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c\/ c~ c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0
+ (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))), (((x' = x'') \/ ((x' = a) \/ (x' = b))) ==> F) |- F
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c==> c==> c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 cF cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (x IN P) |- ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 f0 c==> c~ cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c= c==> c= ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
+ ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((Q _7062349) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062349))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c==> * f1 f5 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5
+ (x' = b), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- ((x' = b) /\ F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f4 c= f0 f1 c/\ c= f0 f1 cF
+ |- (((!s. ((collinear s) = ((int_le (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))))) ==> ((\s. ((collinear s) = ((int_le (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))))) (x' INSERT (a INSERT (b INSERT EMPTY))))) = ((\s. ((collinear s) = ((int_le (aff_dim s)) (int_of_num (NUMERAL (BIT1 _0)))))) (x' INSERT (a INSERT (b INSERT EMPTY)))))
T c= c==> ! c= ccollinear b0 cint_le caff_dim b0 cint_of_num cNUMERAL cBIT1 c_0 * / c= ccollinear b0 cint_le caff_dim b0 cint_of_num cNUMERAL cBIT1 c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * / c= ccollinear b0 cint_le caff_dim b0 cint_of_num cNUMERAL cBIT1 c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((\E. (!Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F)))) E)
T * / ! ! c==> c~ c==> * b2 f0 c==> * b1 f1 c==> ! c==> * b2 b3 c~ ccollinear * * part cINSERT b3 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> * b1 b3 c~ ccollinear * * part cINSERT b3 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! c==> c/\ * b2 b3 * b1 b4 ccoplanar * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b3 * b0 b3 c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b1 b3 * b0 b3 chull part caffine * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 cF f4
+ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E) |- ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) = (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- ((~ (_7062318 = _7062319)) \/ ((int_of_num _7062318) = (int_of_num _7062319)))
T c\/ c~ c= f0 f1 c= cint_of_num f0 cint_of_num f1
+ (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (x = b), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- F
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f2 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
- (x = a) |- (((~ (_7062354 = a)) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062354)) = ((~ (_7062354 = a)) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062354)))
T c==> c= f0 f1 c= c\/ c~ c= f2 f1 chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f2 c\/ c~ c= f2 f1 chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f2
+ ((?x. (x IN s)) = (~ (s = EMPTY))) |- ((~ (s = EMPTY)) = (?x. (x IN s)))
T c==> c= c? / cIN b0 f0 c~ c= f0 part cEMPTY c= c~ c= f0 part cEMPTY c? / cIN b0 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!x. ((Q x) ==> (E x))) |- ((!x. ((Q x) ==> (E x))) /\ ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))
T c==> ! c==> * f0 b0 * f1 b0 c/\ ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0
+ |- ((x IN EMPTY) = F)
T c= cIN f0 part cEMPTY cF
- |- ((\p'. (!q'. (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f4
- (~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) |- (((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0)))) = F)
T c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c= cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 cF
- (x' = a), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- (~ (a = b))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f4 c~ c= f1 f4
- |- (((((((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) ==> B) /\ ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) ==> (((((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) ==> B) /\ ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))) ==> B)) = (((((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) ==> B) /\ ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))) ==> B))
T c= c==> c==> c/\ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
+ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E) |- ((x'' IN ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) = (x'' IN E))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f4 f3
+ |- ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) ==> (!s. (!u. ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u)))))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 ! ! c==> c? / c/\ cSUBSET b0 b2 cSUBSET b2 b1 cSUBSET b0 b1
+ |- (((!x. ((x IN (P UNION Q)) ==> (x IN ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!x. ((x IN (a INSERT (b INSERT EMPTY))) ==> (x IN (x' INSERT (a INSERT (b INSERT EMPTY)))))) /\ (!x. ((x IN (x' INSERT (a INSERT (b INSERT EMPTY)))) ==> (x IN ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))))) ==> (!x. ((x IN (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))) ==> (x IN ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))))
T c==> c/\ ! c==> cIN b0 * * part cUNION f0 f1 cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ ! c==> cIN b0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN b0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c==> cIN b0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c==> cIN b0 * * part cUNION f0 * * part cUNION f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (x IN P), (x' IN Q) |- (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 f3 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 f0 c==> cIN f5 f3 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((((P UNION Q) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))) /\ (((a INSERT (b INSERT EMPTY)) SUBSET (x' INSERT (a INSERT (b INSERT EMPTY)))) /\ ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((P UNION (Q UNION (a INSERT (b INSERT EMPTY)))) SUBSET ((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY))))))
T c==> c/\ cSUBSET * * part cUNION f0 f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cUNION f0 * * part cUNION f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))), (((x = a) \/ (x = b)) ==> F), ((Q x) \/ ((x = a) \/ (x = b))) |- F
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> c\/ c= f3 f1 c= f3 f2 cF c==> c\/ * f5 f3 c\/ c= f3 f1 c= f3 f2 cF
+ (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (x IN P) |- ((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = F)
T c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 f0 c= ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- |- ((\a. (!x. (!x'. ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F)))) a)
T * / ! ! c==> c~ c==> c/\ chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 ! c==> c\/ c= b3 b0 c= b3 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 ! c==> c\/ c= b3 b2 c\/ c= b3 b0 c= b3 f0 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b3 cF f1
+ |- (((!t. ((t = T) \/ (t = F))) ==> ((\t. ((t = T) \/ (t = F))) A)) = ((\t. ((t = T) \/ (t = F))) A))
T c= c==> ! c\/ c= b0 cT c= b0 cF * / c\/ c= b0 cT c= b0 cF f0 * / c\/ c= b0 cT c= b0 cF f0
+ |- (((?t. (((a INSERT (b INSERT EMPTY)) SUBSET t) /\ (t SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) = ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))
T c= c==> c? / c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cSUBSET b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E), (P SUBSET E), (Q SUBSET E) |- (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> cSUBSET f4 f3 c==> cSUBSET f5 f3 ccoplanar * * part cUNION f4 * * part cUNION f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))), (!x. ((P x) ==> (E x))), (!x. ((Q x) ==> (E x))), ((P x) \/ (Q x)) |- ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) ==> F)
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> ! c==> * f4 b0 * f3 b0 c==> ! c==> * f5 b0 * f3 b0 c==> c\/ * f4 f6 * f5 f6 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 cF
- (~ ((x = x') \/ ((x = a) \/ (x = b)))), (x = a) |- ((~ F) ==> F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f2 c==> c~ cF cF
+ (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))), (((x' = x) \/ ((x' = a) \/ (x' = b))) ==> F) |- F
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c==> c==> c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 cF cF
- |- ((!x''. (((~ (P x)) /\ (~ (Q x))) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x''))) = (((~ (P x)) /\ (~ (Q x))) \/ (!x. (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))
T c= ! c\/ c/\ c~ * f0 f1 c~ * f2 f1 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c\/ c/\ c~ * f0 f1 c~ * f2 f1 ! chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) ==> B) /\ ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) ==> (((((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) ==> B) /\ ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))) ==> B))
T c==> c==> c/\ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x' IN Q) |- (!x. ((x IN P) ==> (x IN E)))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f1 ! c==> cIN b0 f0 cIN b0 f5
+ ((x'' INSERT (x INSERT (a INSERT (b INSERT EMPTY)))) = (x INSERT (x'' INSERT (a INSERT (b INSERT EMPTY))))) |- ((coplanar (x'' INSERT (x INSERT (a INSERT (b INSERT EMPTY))))) = (coplanar (x INSERT (x'' INSERT (a INSERT (b INSERT EMPTY))))))
T c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((!a. (!x'. ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F))) ==> ((\a. (!x'. ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F))) a)) = ((\a. (!x'. ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F))) a))
T c= c==> ! ! c==> c~ ! c==> c\/ c= b2 b0 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cF * / ! c==> c~ ! c==> c\/ c= b2 b0 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cF f1 * / ! c==> c~ ! c==> c\/ c= b2 b0 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cF f1
+ |- ((\P. (!s. (s SUBSET ((hull P) s)))) P)
T * / ! cSUBSET b1 * * part chull b0 b1 f0
- |- ((!q'. (((~ (P p)) \/ (~ (Q q))) \/ (coplanar (p INSERT (q' INSERT (a INSERT (b INSERT EMPTY))))))) = (((~ (P p)) \/ (~ (Q q))) \/ (!q. (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY))))))))
T c= ! c\/ c\/ c~ * f0 f1 c~ * f2 f3 ccoplanar * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ c\/ c~ * f0 f1 c~ * f2 f3 ! ccoplanar * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (x' = a), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- (~ (a = a))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f4 c~ c= f1 f1
- |- ((\a. (!x''. (!x. ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F)))) a)
T * / ! ! c==> c~ ! c= c\/ c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b0 c= b3 f0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1
+ ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((_7062226 = b) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) _7062226))
T c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c= f4 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4
- (_7062304 = _7062305) |- ((((collinear _7062304) = (collinear _7062305)) ==> ((collinear _7062305) \/ (~ (collinear _7062304)))) = ((collinear _7062305) \/ (~ (collinear _7062304))))
T c==> c= f0 f1 c= c==> c= ccollinear f0 ccollinear f1 c\/ ccollinear f1 c~ ccollinear f0 c\/ ccollinear f1 c~ ccollinear f0
+ |- (((!s. (!u. ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u)))) ==> ((\s. (!u. ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u)))) s)) = ((\s. (!u. ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u)))) s))
T c= c==> ! ! c==> c? / c/\ cSUBSET b0 b2 cSUBSET b2 b1 cSUBSET b0 b1 * / ! c==> c? / c/\ cSUBSET b0 b2 cSUBSET b2 b1 cSUBSET b0 b1 f0 * / ! c==> c? / c/\ cSUBSET b0 b2 cSUBSET b2 b1 cSUBSET b0 b1 f0
+ ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) b) ==> F) = F)
T c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 cF cF
+ (~ ((x = x') \/ ((x = a) \/ (x = b)))) |- ((x = a) ==> F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f2 cF
- (x' = x''), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- (~ (x'' = b))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f1 f4
- |- ((!E. ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) = T)
T c= ! c==> ! c==> * f0 b1 * b0 b1 c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 * b0 b1 c==> ! c==> * f4 b1 * b0 b1 ! c==> c\/ * f4 b1 * f0 b1 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 cT
- |- (((!x. ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F)) ==> ((\x. ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F)) x)) = ((\x. ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F)) x))
T c= c==> ! c==> c~ ! c= c\/ c= b1 f0 c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f2 c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 cF * / c==> c~ ! c= c\/ c= b1 f0 c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f2 c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 cF f3 * / c==> c~ ! c= c\/ c= b1 f0 c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f2 c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 cF f3
+ (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')), (x'' = x'), ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((x'' = x') /\ F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f4 c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c= f3 f4 cF
+ |- ((((\t. ((s SUBSET t) /\ (t SUBSET u))) t) ==> ((!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) ==> (s SUBSET u))) = T)
T c= c==> * / c/\ cSUBSET f0 b0 cSUBSET b0 f1 f2 c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 cSUBSET f0 f1 cT
+ ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) a) ==> F) = F)
T c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= c==> chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 cF cF
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) /\ F)
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((A = T) ==> (((A ==> B) /\ A) ==> B))
T c==> c= f0 cT c==> c/\ c==> f0 f1 f0 f1
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) = ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c= c==> cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((real_le ((real_add (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (~ ((int_le (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c= creal_le creal_add creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ cint_le cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- (T = (((~ (_7062357 = b)) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062357)) = ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062357) \/ (~ (_7062357 = b)))))
T c= cT c= c\/ c~ c= f0 f1 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f0 c\/ chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f0 c~ c= f0 f1
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (x IN P), (x' IN Q) |- (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 f0 c==> cIN f5 f1 ccoplanar * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')), ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))), ((x'' = a) \/ (x'' = b)) |- (((x'' = a) \/ (x'' = b)) /\ F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c\/ c= f3 f1 c= f3 f2 c/\ c\/ c= f3 f1 c= f3 f2 cF
+ (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (x = b), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((x = b) /\ F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f2 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c= f3 f2 cF
+ (A = T) |- ((((A ==> B) /\ A) ==> B) = (((T ==> B) /\ T) ==> B))
T c==> c= f0 cT c= c==> c/\ c==> f0 f1 f0 f1 c==> c/\ c==> cT f1 cT f1
+ ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- (!x'. (((~ (x' = a)) /\ (~ (x' = b))) \/ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))
T c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
- (~ F), (x' = b), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c~ c= f0 f1 c/\ c~ cF cF
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) |- (((!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((\q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY))))))) q)) = ((\q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY))))))) q))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> ! c==> c/\ cIN f4 f0 cIN b0 f1 ccoplanar * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / c==> c/\ cIN f4 f0 cIN b0 f1 ccoplanar * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 * / c==> c/\ cIN f4 f0 cIN b0 f1 ccoplanar * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5
+ (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- ((((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) /\ F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 cF
+ |- (((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'))))))))) = ((x IN P) ==> ((x' IN Q) ==> ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) = (x' IN E))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((x IN Q) ==> (x IN E))) ==> (x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))))))))))
T c= c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c==> cIN f1 f0 c==> cIN f3 f2 c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> cIN b0 f2 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f2 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN b0 f6 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> cIN b0 f2 cIN b0 f6 cIN f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x IN P), (x' IN Q), (Q SUBSET E) |- (((int_le (aff_dim ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) = (((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((int_le (aff_dim ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f0 c==> cIN f6 f1 c==> cSUBSET f1 f5 c= cint_le caff_dim * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cSUBSET * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_le caff_dim * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((!E. (!Q. (!P. ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))))) = T)
T c= ! ! ! c==> * b2 f0 c==> * b1 f1 c==> ! c==> * b2 b3 c~ ccollinear * * part cINSERT b3 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> * b1 b3 c~ ccollinear * * part cINSERT b3 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! c==> c/\ * b2 b3 * b1 b4 ccoplanar * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b3 * b0 b3 c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b1 b3 * b0 b3 chull part caffine * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 cT
+ |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) \/ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))))) ==> F)
T c==> c\/ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((!q. (P q)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
+ (~ ((x = x') \/ ((x = a) \/ (x = b)))) |- (~ (x = b))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ c= f0 f3
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x IN P), (x'' IN Q) |- (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (x'' INSERT (x INSERT (a INSERT (b INSERT EMPTY))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f0 c==> cIN f6 f1 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT f6 * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- (~ (x' = b))
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c~ c= f0 f4
- (~ ((x = x') \/ ((x = a) \/ (x = b)))), (x = b) |- ((~ F) ==> F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f3 c==> c~ cF cF
- |- (((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F) = ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'))))))))))
T c= c==> c~ c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 cF c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3
- (~ F), (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')), (x'' = x'), ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f4 c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ cF cF
+ (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b))))
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4
- |- ((!x''. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) \/ (~ (E x'')))) = ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) \/ (!x. (~ (E x)))))
T c= ! c\/ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c~ * f4 b0 c\/ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c~ * f4 b0
+ (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- (~ (x' = x''))
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c~ c= f0 f1
- (x' = x''), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- (~ (x'' = x))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f1 f2
- |- ((!P. (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) = T)
T c= ! c==> c/\ ! c==> c\/ * b0 b1 * f0 b1 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c/\ ! c==> c\/ c= b1 f2 c= b1 f3 c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f3 ! c==> c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f3 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 ! c==> c\/ * b0 b1 c\/ * f0 b1 c\/ c= b1 f2 c= b1 f3 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 cT
+ (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- ((~ (x' = a)) /\ (~ (x' = b)))
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f3 c~ c= f0 f4
+ ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))), ((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) |- ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) ==> F)
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c==> c\/ * f0 f5 c\/ * f1 f5 c\/ c= f5 f3 c= f5 f4 c==> c~ chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (x' = b), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c~ c= f0 f1 c==> c~ cF cF
+ |- (((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) = ((((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) ==> ((x' INSERT (a INSERT (b INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) /\ ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))))
T c= c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (x IN P), (x'' IN Q) |- (coplanar (x INSERT (x'' INSERT (a INSERT (b INSERT EMPTY)))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 f0 c==> cIN f5 f1 ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c= c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- (((((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F) ==> ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F)) ==> (((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F) ==> ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F))) = (((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F) ==> ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F)))
T c= c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (x IN P), (x' IN Q) |- ((((\E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) E) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY)))))) = T)
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 f0 c==> cIN f5 f1 c= c==> * / c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 f6 ccoplanar * * part cUNION f0 * * part cUNION f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
- (_7062318 = _7062319) |- ((_7062318 = _7062319) /\ ((int_of_num _7062318) = (int_of_num _7062319)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cint_of_num f0 cint_of_num f1
- |- ((\Q. (!P. ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F))) Q)
T * / ! c==> c~ c==> c/\ ! c==> c\/ * b1 b2 * b0 b2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c/\ ! c==> c\/ c= b2 f1 c= b2 f2 c\/ c= b2 f0 c\/ c= b2 f1 c= b2 f2 ! c==> c\/ c= b2 f0 c\/ c= b2 f1 c= b2 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 ! c==> c\/ * b1 b2 c\/ * b0 b2 c\/ c= b2 f1 c= b2 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 cF f3
- (_7062314 = _7062315) |- ((_7062314 = _7062315) /\ ((BIT0 _7062314) = (BIT0 _7062315)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT0 f0 cBIT0 f1
+ (x' = x), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- F
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 cF
- ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F) |- (((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F) /\ ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c/\ c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF
- |- ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) = T)
T c= ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c= b0 f1 cT
+ |- ((\c. ((int_le (aff_dim (x' INSERT (a INSERT (c INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) b)
T * / cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f2
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_7062446 = _7062448) |- ((_7062446 = _7062448) /\ ((~ (_7062447 = _7062449)) \/ ((_7062446 INSERT _7062447) = (_7062448 INSERT _7062449))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((~ (_7062357 = x')) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062357))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c\/ c~ c= f5 f2 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5
- (~ F), (x' = b), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f4 c= f0 f1 c/\ c~ cF cF
- |- ((!x''. (((~ (x'' = a)) /\ (~ (x'' = b))) \/ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'))) = ((!x'. ((~ (x' = a)) /\ (~ (x' = b)))) \/ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))
T c= ! c\/ c/\ c~ c= b0 f0 c~ c= b0 f1 chull part caffine * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c\/ ! c/\ c~ c= b0 f0 c~ c= b0 f1 chull part caffine * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3
- |- ((!x''. (!x. (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b)))))))) = T)
T c= ! ! ! c= c\/ c= b2 b0 c\/ c= b2 b1 c\/ c= b2 f0 c= b2 f1 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cT
+ |- ((~ (~ a)) = a)
T c= c~ c~ f0 f0
+ |- ((!x. ((P x) /\ (Q x))) = ((!x. (P x)) /\ (!x. (Q x))))
T c= ! c/\ * f0 b0 * f1 b0 c/\ ! * f0 b0 ! * f1 b0
- |- (((!x'. ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F)) ==> ((\x'. ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F)) x')) = ((\x'. ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F)) x'))
T c= c==> ! c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b1 f1 c= b1 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c==> c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cF * / c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b1 f1 c= b1 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c==> c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cF f3 * / c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b1 f1 c= b1 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c==> c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cF f3
+ (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- ((((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) /\ F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 cF
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((NUMERAL (BIT1 (BIT1 _0))) = ((NUMERAL (BIT0 (BIT1 _0))) + (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT1 cBIT1 c_0 c+ cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) /\ F)
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) = (((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))
T c= c==> cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
+ ((?x. (x IN Q)) /\ ((!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY))))))))))) |- ((?x. (x IN P)) ==> (coplanar (P UNION (Q UNION (a INSERT (b INSERT EMPTY))))))
T c==> c/\ c? / cIN b0 f0 c/\ ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! ! c==> c/\ cIN b0 f1 cIN b1 f0 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / cIN b0 f1 ccoplanar * * part cUNION f1 * * part cUNION f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (x' = a), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- (~ (a = x))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f4 c~ c= f1 f3
- (~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) |- ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) /\ F)
T c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 c/\ c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')), ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) |- ((x'' = a) ==> F)
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c= f3 f1 cF
- (~ ((x = x') \/ ((x = a) \/ (x = b)))), (x = b) |- (~ (b = x'))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f3 c~ c= f3 f1
- (x' = x), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- (~ (x = b))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c~ c= f1 f4
+ |- (((!p. (!s. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s))))) ==> ((\p. (!s. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s))))) p)) = ((\p. (!s. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s))))) p))
T c= c==> ! ! c==> c/\ c= caff_dim b1 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT b0 b1 cIN b0 * * part chull part caffine b1 * / ! c==> c/\ c= caff_dim b1 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT b0 b1 cIN b0 * * part chull part caffine b1 f0 * / ! c==> c/\ c= caff_dim b1 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT b0 b1 cIN b0 * * part chull part caffine b1 f0
+ (!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (Q x') |- ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) /\ ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'))))))
T c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 f3 c/\ ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! c==> c/\ * f4 b0 * f0 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f0 b0 * f6 b0 chull part caffine * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (Q x) |- ((~ (Q x)) ==> (Q x))
T c==> * f0 f1 c==> c~ * f0 f1 * f0 f1
- (x = b) |- (((~ (_7062357 = b)) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062357)) = ((~ (_7062357 = b)) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062357)))
T c==> c= f0 f1 c= c\/ c~ c= f2 f1 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c\/ c~ c= f2 f1 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2
+ (~ ((x = x') \/ ((x = a) \/ (x = b)))), (x = b) |- ((x = b) /\ F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f3 c/\ c= f0 f3 cF
+ (!s. (!t. (!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))))) |- (((!u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))) ==> ((\u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))) u)) = ((\u. (((s SUBSET t) /\ (t SUBSET u)) ==> (s SUBSET u))) u))
T c==> ! ! ! c==> c/\ cSUBSET b0 b1 cSUBSET b1 b2 cSUBSET b0 b2 c= c==> ! c==> c/\ cSUBSET f0 f1 cSUBSET f1 b0 cSUBSET f0 b0 * / c==> c/\ cSUBSET f0 f1 cSUBSET f1 b0 cSUBSET f0 b0 f2 * / c==> c/\ cSUBSET f0 f1 cSUBSET f1 b0 cSUBSET f0 b0 f2
- (~ F), (~ ((x = x') \/ ((x = a) \/ (x = b)))), (x = b) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f3 c/\ c~ cF cF
+ |- ((\u. ((?t. ((s SUBSET t) /\ (t SUBSET u))) ==> (s SUBSET u))) u)
T * / c==> c? / c/\ cSUBSET f0 b1 cSUBSET b1 b0 cSUBSET f0 b0 f1
- ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- (!x. (((~ (x = a)) \/ ((x = x') \/ ((x = a) \/ (x = b)))) /\ ((~ (x = b)) \/ ((x = x') \/ ((x = a) \/ (x = b))))))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c/\ c\/ c~ c= b0 f3 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 c\/ c~ c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4
+ (!s. (!p. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s))))) |- ((!s. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s)))) = T)
T c==> ! ! c==> c/\ c= caff_dim b0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT b1 b0 cIN b1 * * part chull part caffine b0 c= ! c==> c/\ c= caff_dim b0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT f0 b0 cIN f0 * * part chull part caffine b0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))), ((x'' = x') \/ ((x'' = a) \/ (x'' = b))) |- ((~ (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')) ==> F)
T c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c\/ c= f4 f3 c\/ c= f4 f1 c= f4 f2 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 cF
- |- (((!a. (!x'. (!Q. (!P. (!E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)))))) ==> ((\a. (!x'. (!Q. (!P. (!E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)))))) a)) = ((\a. (!x'. (!Q. (!P. (!E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)))))) a))
T c= c==> ! ! ! ! ! c==> c~ c==> ! c==> * b2 b5 * b4 b5 c==> ! c= chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 * b4 b5 c==> ! c==> * b3 b5 * b4 b5 ! c==> c\/ * b3 b5 * b2 b5 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 cF * / ! ! ! ! c==> c~ c==> ! c==> * b2 b5 * b4 b5 c==> ! c= chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 * b4 b5 c==> ! c==> * b3 b5 * b4 b5 ! c==> c\/ * b3 b5 * b2 b5 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 cF f1 * / ! ! ! ! c==> c~ c==> ! c==> * b2 b5 * b4 b5 c==> ! c= chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 * b4 b5 c==> ! c==> * b3 b5 * b4 b5 ! c==> c\/ * b3 b5 * b2 b5 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 cF f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((t /\ F) = F)
T c= c/\ f0 cF cF
+ |- ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((?E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) ==> (?E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)))
T c==> c? / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
- |- ((~ (_7062314 = _7062315)) \/ ((BIT0 _7062314) = (BIT0 _7062315)))
T c\/ c~ c= f0 f1 c= cBIT0 f0 cBIT0 f1
+ (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))), (x IN P) |- ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) /\ ((((collinear (x INSERT (a INSERT (b INSERT EMPTY)))) = ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> cIN f4 f0 c/\ c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c= c==> c= ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((_7062310 = _7062311) ==> ((aff_dim _7062310) = (aff_dim _7062311)))
T c==> c= f0 f1 c= caff_dim f0 caff_dim f1
- (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) |- (((!x. ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) \/ (E x))) ==> ((\x. ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) \/ (E x))) _7062457)) = ((\x. ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) \/ (E x))) _7062457))
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c= c==> ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 * / c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 f4 * / c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 f4
- (x' = x''), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- (~ (x'' = a))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f1 f3
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (!p. ((p IN P) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))), (!q. ((q IN Q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))), (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x IN P), (x' IN Q), (Q SUBSET E) |- (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) = ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 f1 c~ ccollinear * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f0 c==> cIN f6 f1 c==> cSUBSET f1 f5 c= * * part chull part caffine * * part cINSERT f6 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!p. (!q. (((p IN P) /\ (q IN Q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))), (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))), (x IN P), (x'' IN Q) |- (((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (x'' INSERT (x INSERT (a INSERT (b INSERT EMPTY)))))) ==> (x'' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) = (x'' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f4 f0 c==> cIN f6 f1 c= c==> c/\ c= caff_dim * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT f6 * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F) |- ((((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F) ==> ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F)) ==> ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c==> c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF
- ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F), (((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F) ==> ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F)) |- (((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F) /\ ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F))
T c==> c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c==> c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c/\ c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
- (~ F), (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)), (x = b), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f3 f2 c==> c/\ ! c==> c\/ * f4 b0 * f5 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ cF cF
- (!s. (!p. ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) ==> (p IN ((hull affine) s))))), (((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) |- ((((aff_dim s) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (coplanar (p INSERT s))) /\ (p IN ((hull affine) s)))
T c==> ! ! c==> c/\ c= caff_dim b0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT b1 b0 cIN b1 * * part chull part caffine b0 c==> c/\ c= caff_dim f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT f1 f0 c/\ c/\ c= caff_dim f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT f1 f0 cIN f1 * * part chull part caffine f0
- ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F) |- (((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F) /\ ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F))
T c==> c==> c~ c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 cF c/\ c==> c~ c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 cF c==> c~ c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 cF
- |- ((!x''. (((~ (x = x')) /\ ((~ (x = a)) /\ (~ (x = b)))) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x''))) = (((~ (x = x')) /\ ((~ (x = a)) /\ (~ (x = b)))) \/ (!x. (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))
T c= ! c\/ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c\/ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 ! chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0
- |- ((\P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F)) P)
T * / c==> c~ c==> * b0 f0 c==> * f1 f2 c==> ! c==> * b0 b1 c~ ccollinear * * part cINSERT b1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ! c==> * f1 b1 c~ ccollinear * * part cINSERT b1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ! ! c==> c/\ * b0 b1 * f1 b2 ccoplanar * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b1 * f5 b1 c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f1 b1 * f5 b1 chull part caffine * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cF f6
- (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) a)), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) a)) /\ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) a))
T c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> c/\ ! c==> c\/ * f3 b0 * f4 b0 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1
- (x' = b), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f4 c= f0 f1 c==> c~ cF cF
- |- ((!P. (!E. ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)))))))) = T)
T c= ! ! c==> ! c==> * f0 b2 * b1 b2 c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b2 * b1 b2 c==> ! c==> * b0 b2 * b1 b2 ! c==> c\/ * b0 b2 * f0 b2 chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b2 cT
- ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F), (((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F) ==> ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)) |- ((((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F) ==> ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)) /\ ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F))
T c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c/\ c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 c==> ! c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * f1 b0 c==> ! c==> * f5 b0 * f1 b0 ! c==> c\/ * f5 b0 * f0 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF
- |- ((\a. (!x'. ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F))) a)
T * / ! c==> c~ ! c==> c\/ c= b2 b0 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cF f1
- (x' = a), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- (~ (a = x))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f4 c~ c= f1 f3
- ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F), (((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F) ==> ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F)) |- (((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F) /\ ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c/\ c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF
- (x'' = b) |- ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'))
T c==> c= f0 f1 c= chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f4
- (~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) |- ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) /\ (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c= c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- (((int_le (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) = T)
T c= cint_le cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- (_7062438 = _7062439) |- ((((P _7062438) = (P _7062439)) ==> ((P _7062439) \/ (~ (P _7062438)))) = ((P _7062439) \/ (~ (P _7062438))))
T c==> c= f0 f1 c= c==> c= * f2 f0 * f2 f1 c\/ * f2 f1 c~ * f2 f0 c\/ * f2 f1 c~ * f2 f0
- |- (((!x. (!x'. ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F))) ==> ((\x. (!x'. ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F))) x)) = ((\x. (!x'. ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F))) x))
T c= c==> ! ! c==> c~ c==> c/\ chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 ! c==> c\/ c= b2 f0 c= b2 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 ! c==> c\/ c= b2 b1 c\/ c= b2 f0 c= b2 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 cF * / ! c==> c~ c==> c/\ chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 ! c==> c\/ c= b2 f0 c= b2 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 ! c==> c\/ c= b2 b1 c\/ c= b2 f0 c= b2 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 cF f2 * / ! c==> c~ c==> c/\ chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 ! c==> c\/ c= b2 f0 c= b2 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 ! c==> c\/ c= b2 b1 c\/ c= b2 f0 c= b2 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 cF f2
- |- ((\q'. (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) q')
T * / c==> c= c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 f5
- |- ((((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F) ==> ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F)) = ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F))
T c= c==> c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF
- (~ (b = b)) |- ((~ (b = b)) /\ (b = b))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F), (((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F) ==> ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F)) |- (((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F) /\ ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c==> c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c/\ c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF
- |- ((!a. (!x'. (!Q. (!P. (!E. ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))))))) = T)
T c= ! ! ! ! ! c==> ! c==> * b2 b5 * b4 b5 c==> ! c= chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 * b4 b5 c==> ! c==> * b3 b5 * b4 b5 ! c==> c\/ * b3 b5 * b2 b5 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 cT
- ((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) |- ((!s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))) ==> (((hull affine) s) = ((hull affine) t)))
T c==> c/\ cSUBSET f0 f1 cint_le caff_dim f1 caff_dim f0 c==> ! ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1 c= * * part chull part caffine f0 * * part chull part caffine f1
- ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F) |- ((((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F) ==> ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F)) ==> ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F))
T c==> c==> c~ c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 cF c==> c==> c==> c~ c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 cF c==> c~ c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 cF c==> c~ c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 cF
- |- (((!a. (!x. (!E. (!Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F)))))) ==> ((\a. (!x. (!E. (!Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F)))))) a)) = ((\a. (!x. (!E. (!Q. (!P. ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F)))))) a))
T c= c==> ! ! ! ! ! c==> c~ c==> * b4 b1 c==> * b3 f0 c==> ! c==> * b4 b5 c~ ccollinear * * part cINSERT b5 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c==> ! c==> * b3 b5 c~ ccollinear * * part cINSERT b5 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c==> ! ! c==> c/\ * b4 b5 * b3 b6 ccoplanar * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c==> ! c= chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b5 * b2 b5 c==> c/\ c= caff_dim * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b3 b5 * b2 b5 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f0 cF * / ! ! ! ! c==> c~ c==> * b4 b1 c==> * b3 f0 c==> ! c==> * b4 b5 c~ ccollinear * * part cINSERT b5 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c==> ! c==> * b3 b5 c~ ccollinear * * part cINSERT b5 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c==> ! ! c==> c/\ * b4 b5 * b3 b6 ccoplanar * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c==> ! c= chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b5 * b2 b5 c==> c/\ c= caff_dim * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b3 b5 * b2 b5 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f0 cF f2 * / ! ! ! ! c==> c~ c==> * b4 b1 c==> * b3 f0 c==> ! c==> * b4 b5 c~ ccollinear * * part cINSERT b5 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c==> ! c==> * b3 b5 c~ ccollinear * * part cINSERT b5 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c==> ! ! c==> c/\ * b4 b5 * b3 b6 ccoplanar * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c==> ! c= chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b5 * b2 b5 c==> c/\ c= caff_dim * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b3 b5 * b2 b5 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f0 cF f2
- |- ((\b. (!a. (!x. (!x'. ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F))))) b)
T * / ! ! ! c==> c~ c==> c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 ! c==> c\/ c= b4 b1 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 ! c==> c\/ c= b4 b3 c\/ c= b4 b1 c= b4 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 cF f0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((~ (_7062438 = _7062439)) \/ ((P _7062439) \/ (~ (P _7062438))))
T c\/ c~ c= f0 f1 c\/ * f2 f1 c~ * f2 f0
- (x' = a), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- (~ (a = x''))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f4 c~ c= f1 f2
- |- ((!Q. (!P. ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'))))))))))) = T)
T c= ! ! c==> * b1 f0 c==> * b0 f1 c==> ! c==> * b1 b2 c~ ccollinear * * part cINSERT b2 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> * b0 b2 c~ ccollinear * * part cINSERT b2 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! c==> c/\ * b1 b2 * b0 b3 ccoplanar * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b2 * f4 b2 c==> c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * b0 b2 * f4 b2 chull part caffine * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 cT
- |- (((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F) ==> ((~ ((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))))))))) ==> F))
T c==> c==> c~ c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 cF c==> c~ c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 cF
- (!s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))) |- ((!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t)))) = T)
T c==> ! ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1 c= ! c==> c/\ cSUBSET f0 b0 cint_le caff_dim b0 caff_dim f0 c= * * part chull part caffine f0 * * part chull part caffine b0 cT
- |- ((\b. (!a. (!x'. ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F)))) b)
T * / ! ! c==> c~ ! c==> c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF f0
- ((((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) ==> B) /\ ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))), (((((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) ==> B) /\ ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) |- ((((((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) ==> B) /\ ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) /\ B)
T c==> c/\ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c/\ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ c==> c/\ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 f4
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (x' = b), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- (~ (b = a))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f4 c= f0 f1 c~ c= f1 f4
- (_7062304 = _7062305) |- ((_7062304 = _7062305) /\ ((collinear _7062305) \/ (~ (collinear _7062304))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (_7062442 = _7062445) |- ((_7062442 = _7062445) /\ ((~ (_7062441 = _7062444)) \/ ((~ (_7062440 = _7062443)) \/ ((((hull _7062443) _7062444) _7062445) \/ (~ (((hull _7062440) _7062441) _7062442))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ chull f5 f3 f1 c~ chull f4 f2 f0
- ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F) |- (((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F) /\ ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F))
T c==> c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c/\ c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
- |- (((P x) ==> ((Q x') ==> ((!p. ((P p) ==> (~ (collinear (p INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!q. ((Q q) ==> (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) ==> ((!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((!x'. ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (E x'))) ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((!x. ((Q x) ==> (E x))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'))))))))) = T)
T c= c==> * f0 f1 c==> * f2 f3 c==> ! c==> * f0 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c==> * f2 b0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ * f0 b0 * f2 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! c= chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 * f6 b0 c==> c/\ c= caff_dim * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> ! c==> * f2 b0 * f6 b0 chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 cT
- |- ((!x''. ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x'')) \/ (E x))) = ((!x. (~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) \/ (E x)))
T c= ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 f4 c\/ ! c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 f4
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))), (!x. ((Q x) ==> (E x))), (Q x) |- ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))
T c==> ! c= chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * f3 b0 c==> ! c==> * f4 b0 * f3 b0 c==> * f4 f5 c==> c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5
- |- ((!x. (!x'. (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')))))) = T)
T c= ! ! c==> c/\ chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 ! c==> c\/ c= b2 f0 c= b2 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 ! c==> c\/ c= b2 b1 c\/ c= b2 f0 c= b2 f1 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 cT
- (_7062440 = _7062443), (_7062441 = _7062444), (_7062442 = _7062445) |- ((_7062440 = _7062443) /\ ((((hull _7062443) _7062444) _7062445) \/ (~ (((hull _7062440) _7062441) _7062442))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f0 f1 c\/ chull f1 f3 f5 c~ chull f0 f2 f4
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) /\ F)
T c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF
- |- ((\x'. (!Q. (!P. (!E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F))))) x')
T * / ! ! ! c==> c~ c==> ! c==> * b1 b4 * b3 b4 c==> ! c= chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 * b3 b4 c==> ! c==> * b2 b4 * b3 b4 ! c==> c\/ * b2 b4 * b1 b4 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 cF f2
- |- (((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F) = (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b)))))))
T c= c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3 cF ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f3
- (Q x), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))
T c==> * f0 f1 c==> c/\ ! c==> c\/ * f2 b0 * f0 b0 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f4 c= b0 f5 c\/ c= b0 f3 c\/ c= b0 f4 c= b0 f5 ! c==> c\/ c= b0 f3 c\/ c= b0 f4 c= b0 f5 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'')))) = T)
T c= c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cT
- (x' = a), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f4 c==> c~ cF cF
- |- ((!x'. (!Q. (!P. (!E. ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)))))))))) = T)
T c= ! ! ! ! c==> ! c==> * b1 b4 * b3 b4 c==> ! c= chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 * b3 b4 c==> ! c==> * b2 b4 * b3 b4 ! c==> c\/ * b2 b4 * b1 b4 chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b4 cT
- (x = a) |- (((~ (_7062353 = a)) \/ ((_7062353 = x') \/ ((_7062353 = a) \/ (_7062353 = b)))) = ((~ (_7062353 = a)) \/ ((_7062353 = x') \/ ((_7062353 = a) \/ (_7062353 = b)))))
T c==> c= f0 f1 c= c\/ c~ c= f2 f1 c\/ c= f2 f3 c\/ c= f2 f1 c= f2 f4 c\/ c~ c= f2 f1 c\/ c= f2 f3 c\/ c= f2 f1 c= f2 f4
- ((((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) ==> B) /\ ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))), (((((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) ==> B) /\ ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))) ==> B) |- (((((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))))) ==> B) /\ ((x' IN ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))) /\ ((a INSERT (b INSERT EMPTY)) SUBSET ((hull affine) (x INSERT (a INSERT (b INSERT EMPTY))))))) /\ B)
T c==> c/\ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c/\ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ c/\ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
- |- ((((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = (~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0)))))) ==> (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> q')))) = (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = q')) ==> (((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((~ ((int_le (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> q'))))
T c= c==> c= c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c= c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f4 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f4 c==> c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c= c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 f4 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f4
- |- ((\a. (!x'. (!Q. (!P. (!E. ((~ ((!x. ((Q x) ==> (E x))) ==> ((!x. ((((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x) = (E x))) ==> ((!x. ((P x) ==> (E x))) ==> (!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))))) ==> F)))))) a)
T * / ! ! ! ! c==> c~ c==> ! c==> * b2 b5 * b4 b5 c==> ! c= chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 * b4 b5 c==> ! c==> * b3 b5 * b4 b5 ! c==> c\/ * b3 b5 * b2 b5 chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b5 cF f1
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!q'. ((~ (Q q')) \/ (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY))))))) = ((!q. (~ (Q q))) \/ (~ (collinear (q INSERT (a INSERT (b INSERT EMPTY)))))))
T c= ! c\/ c~ * f0 b0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ ! c~ * f0 b0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) b)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) b))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4
- (!s. (!t. (((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))))) |- ((((s SUBSET t) /\ ((int_le (aff_dim t)) (aff_dim s))) ==> (((hull affine) s) = ((hull affine) t))) = T)
T c==> ! ! c==> c/\ cSUBSET b0 b1 cint_le caff_dim b1 caff_dim b0 c= * * part chull part caffine b0 * * part chull part caffine b1 c= c==> c/\ cSUBSET f0 f1 cint_le caff_dim f1 caff_dim f0 c= * * part chull part caffine f0 * * part chull part caffine f1 cT
- (~ ((x = x') \/ ((x = a) \/ (x = b)))), (x = a) |- (~ (a = x'))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c==> c= f0 f2 c~ c= f2 f1
- (_7062441 = _7062444), (_7062442 = _7062445) |- ((~ (_7062440 = _7062443)) \/ ((((hull _7062443) _7062444) _7062445) \/ (~ (((hull _7062440) _7062441) _7062442))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ chull f5 f1 f3 c~ chull f4 f0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!b. (!a. (!x'. (!Q. (!P. ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F)))))) ==> ((\b. (!a. (!x'. (!Q. (!P. ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F)))))) b)) = ((\b. (!a. (!x'. (!Q. (!P. ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F)))))) b))
T c= c==> ! ! ! ! ! c==> c~ c==> c/\ ! c==> c\/ * b4 b5 * b3 b5 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c/\ ! c==> c\/ c= b5 b1 c= b5 b0 c\/ c= b5 b2 c\/ c= b5 b1 c= b5 b0 ! c==> c\/ c= b5 b2 c\/ c= b5 b1 c= b5 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 ! c==> c\/ * b4 b5 c\/ * b3 b5 c\/ c= b5 b1 c= b5 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 cF * / ! ! ! ! c==> c~ c==> c/\ ! c==> c\/ * b4 b5 * b3 b5 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c/\ ! c==> c\/ c= b5 b1 c= b5 b0 c\/ c= b5 b2 c\/ c= b5 b1 c= b5 b0 ! c==> c\/ c= b5 b2 c\/ c= b5 b1 c= b5 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 ! c==> c\/ * b4 b5 c\/ * b3 b5 c\/ c= b5 b1 c= b5 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 cF f0 * / ! ! ! ! c==> c~ c==> c/\ ! c==> c\/ * b4 b5 * b3 b5 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c/\ ! c==> c\/ c= b5 b1 c= b5 b0 c\/ c= b5 b2 c\/ c= b5 b1 c= b5 b0 ! c==> c\/ c= b5 b2 c\/ c= b5 b1 c= b5 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 ! c==> c\/ * b4 b5 c\/ * b3 b5 c\/ c= b5 b1 c= b5 b0 chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 cF f0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((~ (_7062356 = b)) \/ ((_7062356 = x') \/ ((_7062356 = a) \/ (_7062356 = b))))
T c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c\/ c~ c= f5 f4 c\/ c= f5 f2 c\/ c= f5 f3 c= f5 f4
- (x'' = a) |- ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') = (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x'))
T c==> c= f0 f1 c= chull part caffine * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f4 chull part caffine * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f4
- |- ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E) ==> (?E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c? / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
- (~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) |- ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) /\ F)
T c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
- |- (((!q'. (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) ==> ((\q'. (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) q')) = ((\q'. (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> ((((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((~ ((int_le (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))) (int_of_num (NUMERAL (BIT1 _0))))) ==> (((aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))) = (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 * / c==> c= c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 f5 * / c==> c= c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 f3 c==> c==> f3 c= c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> c~ cint_le caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT1 c_0 c/\ c= caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c= caff_dim * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cint_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 f5
- (x' = x''), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- (~ (x'' = x))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c~ c= f1 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x' = b), (((~ (x' = x'')) /\ ((~ (x' = x)) /\ ((~ (x' = a)) /\ (~ (x' = b))))) /\ ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))) |- (~ (b = x''))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f4 c= f0 f1 c~ c= f1 f2
- (P x), ((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) |- ((~ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))
T c==> * f0 f1 c==> c/\ ! c==> c\/ * f0 b0 * f2 b0 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f4 c= b0 f5 c\/ c= b0 f3 c\/ c= b0 f4 c= b0 f5 ! c==> c\/ c= b0 f3 c\/ c= b0 f4 c= b0 f5 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c==> c~ chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1 chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F) ==> ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F)) ==> (((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F) ==> ((~ (((!x. (((P x) \/ (Q x)) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))) /\ ((!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b))))) /\ (!x. (((x = x') \/ ((x = a) \/ (x = b))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> (!x. (((P x) \/ ((Q x) \/ ((x = a) \/ (x = b)))) ==> (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) x))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> c\/ * f0 b0 * f1 b0 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ ! c==> c\/ c= b0 f3 c= b0 f4 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 ! c==> c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 ! c==> c\/ * f0 b0 c\/ * f1 b0 c\/ c= b0 f3 c= b0 f4 chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 cF
- (x' = x), (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) /\ ((~ (x' = x)) /\ ((~ (x' = x'')) /\ ((~ (x' = a)) /\ (~ (x' = b)))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c==> c~ cF cF
- |- ((\x''. (!x. ((~ (!x'. (((x' = x'') \/ ((x' = x) \/ ((x' = a) \/ (x' = b)))) = ((x' = x) \/ ((x' = x'') \/ ((x' = a) \/ (x' = b))))))) ==> F))) x'')
T * / ! c==> c~ ! c= c\/ c= b2 b0 c\/ c= b2 b1 c\/ c= b2 f0 c= b2 f1 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF f2
- |- (!E. (((\E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)) E) ==> (?E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E))))
T c==> * / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f3 c? / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
- ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F) |- ((((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F) ==> ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F)) ==> ((~ (((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x') /\ (!x'. (((x' = a) \/ (x' = b)) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x')))) ==> (!x''. (((x'' = x') \/ ((x'' = a) \/ (x'' = b))) ==> (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) x''))))) ==> F))
T c==> c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c==> c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF c==> c~ c==> c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cF
- (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E) |- ((((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E) /\ (?E. (((hull affine) (x INSERT (a INSERT (b INSERT EMPTY)))) = E)))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c/\ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c? / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0
- (x = a) |- (((~ (_7062354 = x')) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062354)) = ((~ (_7062354 = x')) \/ (((hull affine) (x' INSERT (a INSERT (b INSERT EMPTY)))) _7062354)))
T c==> c= f0 f1 c= c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f2 c\/ c~ c= f2 f3 chull part caffine * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f2
- |- (((!x'. ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F)) ==> ((\x'. ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F)) x')) = ((\x'. ((~ (!x. (((x = a) \/ (x = b)) ==> ((x = x') \/ ((x = a) \/ (x = b)))))) ==> F)) x'))
T c= c==> ! c==> c~ ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 cF * / c==> c~ ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 cF f2 * / c==> c~ ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 cF f2
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x' INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY)))))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int (aff_dim (x INSERT (a INSERT (b INSERT EMPTY))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int caff_dim * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!x. ((Q x) ==> (E x))), (Q x) |- ((~ (E x)) ==> (E x))
T c==> ! c==> * f0 b0 * f1 b0 c==> * f0 f2 c==> c~ * f1 f2 * f1 f2
- (!p. (!q. (((P p) /\ (Q q)) ==> (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) |- (((!p. (!q. (((~ (P p)) \/ (~ (Q q))) \/ (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) ==> ((\p. (!q. (((~ (P p)) \/ (~ (Q q))) \/ (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) _7062289)) = ((\p. (!q. (((~ (P p)) \/ (~ (Q q))) \/ (coplanar (p INSERT (q INSERT (a INSERT (b INSERT EMPTY)))))))) _7062289))
T c==> ! ! c==> c/\ * f0 b0 * f1 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> ! ! c\/ c\/ c~ * f0 b0 c~ * f1 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / ! c\/ c\/ c~ * f0 b0 c~ * f1 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 * / ! c\/ c\/ c~ * f0 b0 c~ * f1 b1 ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
