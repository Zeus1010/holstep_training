N Collect_geom.IN_AFFINE_HULL_IMP_COLLINEAR
C |- (!a. (!b. (!c. ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))))
T c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_NEG_MINUS1
A |- (!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)))
T c= creal_neg f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D FINITE_RULES
A |- ((FINITE EMPTY) /\ (!x. (!s. ((FINITE s) ==> (FINITE (x INSERT s))))))
T c/\ cFINITE part cEMPTY ! ! c==> cFINITE b1 cFINITE * * part cINSERT b0 b1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D INSERT_AC
A |- (((x INSERT (y INSERT s)) = (y INSERT (x INSERT s))) /\ ((x INSERT (x INSERT s)) = (x INSERT s)))
T c/\ c= * * part cINSERT f0 * * part cINSERT f1 f2 * * part cINSERT f1 * * part cINSERT f0 f2 c= * * part cINSERT f0 * * part cINSERT f0 f2 * * part cINSERT f0 f2
D FINITE_INSERT
A |- (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s))))
T c= cFINITE * * part cINSERT f0 f1 cFINITE f1
D FINITE_SING
A |- (!a. (FINITE (a INSERT EMPTY)))
T cFINITE * * part cINSERT f0 part cEMPTY
D SUM_CLAUSES
A |- ((!f. (((sum EMPTY) f) = (real_of_num (NUMERAL _0)))) /\ (!x. (!f. (!s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f)))))))))
T c/\ ! c= csum part cEMPTY b0 creal_of_num cNUMERAL c_0 ! ! ! c==> cFINITE b2 c= csum * * part cINSERT b0 b2 b1 cCOND cIN b0 b2 csum b2 b1 creal_add * b1 b0 csum b2 b1
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vector_sub
A |- (!x. (!y. (((vector_sub x) y) = (lambdai. ((real_sub (x $ i)) (y $ i))))))
T c= cvector_sub f0 f1 clambda / creal_sub c$ f0 b0 c$ f1 b0
D vector_mul
A |- (!c. (!x. (((% c) x) = (lambdai. ((real_mul c) (x $ i))))))
T c= c% f0 f1 clambda / creal_mul f0 c$ f1 b0
D VECTOR_ADD_RID
A |- (!x. (((vector_add x) (vec (NUMERAL _0))) = x))
T c= cvector_add f0 cvec cNUMERAL c_0 f0
D VECTOR_SUB_EQ
A |- (!x. (!y. ((((vector_sub x) y) = (vec (NUMERAL _0))) = (x = y))))
T c= c= cvector_sub f0 f1 cvec cNUMERAL c_0 c= f0 f1
D VSUM_CLAUSES
A |- ((!f. (((vsum EMPTY) f) = (vec (NUMERAL _0)))) /\ (!x. (!f. (!s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f)))))))))
T c/\ ! c= cvsum part cEMPTY b0 cvec cNUMERAL c_0 ! ! ! c==> cFINITE b2 c= cvsum * * part cINSERT b0 b2 b1 cCOND cIN b0 b2 cvsum b2 b1 cvector_add * b1 b0 cvsum b2 b1
D COLLINEAR_2
A |- (!x. (!y. (collinear (x INSERT (y INSERT EMPTY)))))
T ccollinear * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
D COLLINEAR_3
A |- (!x. (!y. (!z. ((collinear (x INSERT (y INSERT (z INSERT EMPTY)))) = (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub x) y) INSERT (((vector_sub z) y) INSERT EMPTY))))))))
T c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY
D COLLINEAR_LEMMA
A |- (!x. (!y. ((collinear ((vec (NUMERAL _0)) INSERT (x INSERT (y INSERT EMPTY)))) = ((x = (vec (NUMERAL _0))) \/ ((y = (vec (NUMERAL _0))) \/ (?c. (y = ((% c) x))))))))
T c= ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c= f0 cvec cNUMERAL c_0 c\/ c= f1 cvec cNUMERAL c_0 c? / c= f1 c% b0 f0
D Collect_geom.AFFINE_HULL_FINITE
A |- (!s. ((FINITE s) ==> (((hull affine) s) = (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum s) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum s) (\v. ((% (u v)) v))) = y)))) y)))))))
T c==> cFINITE f0 c= * * part chull part caffine f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum f0 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum f0 / c% * b2 b3 b3 b1 b1
+ |- ((\e'. (((c IN EMPTY) = g') ==> ((g' ==> (((sum EMPTY) u) = t')) ==> (((~ g') ==> (((real_add (u c)) ((sum EMPTY) u)) = e')) ==> ((((COND (c IN EMPTY)) ((sum EMPTY) u)) ((real_add (u c)) ((sum EMPTY) u))) = (((COND g') t') e')))))) e')
T * / c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= csum part cEMPTY f2 f3 c==> c==> c~ f1 c= creal_add * f2 f0 csum part cEMPTY f2 b0 c= cCOND cIN f0 part cEMPTY csum part cEMPTY f2 creal_add * f2 f0 csum part cEMPTY f2 cCOND f1 f3 b0 f4
+ |- (((FINITE EMPTY) ==> (((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))) = (((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))))) = (((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))) = (((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v)))))))
T c= c==> cFINITE part cEMPTY c= cvsum * * part cINSERT f0 part cEMPTY / c% * f1 b0 b0 cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f1 b0 b0 cvector_add * / c% * f1 b0 b0 f0 cvsum part cEMPTY / c% * f1 b0 b0 c= cvsum * * part cINSERT f0 part cEMPTY / c% * f1 b0 b0 cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f1 b0 b0 cvector_add * / c% * f1 b0 b0 f0 cvsum part cEMPTY / c% * f1 b0 b0
+ ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- (~ (x = b))
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f1 c~ c= f0 f2
- |- (((!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((vec (NUMERAL _0)) = t')) ==> (((~ g') ==> (((vector_add ((% (u c)) c)) (vec (NUMERAL _0))) = e')) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((vec (NUMERAL _0)) = t')) ==> (((~ g') ==> (((vector_add ((% (u c)) c)) (vec (NUMERAL _0))) = e')) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((vec (NUMERAL _0)) = t')) ==> (((~ g') ==> (((vector_add ((% (u c)) c)) (vec (NUMERAL _0))) = e')) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cvec cNUMERAL c_0 b0 c==> c==> c~ f1 c= cvector_add c% * f2 f0 f0 cvec cNUMERAL c_0 b1 c= cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cvec cNUMERAL c_0 cCOND f1 b0 b1 * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cvec cNUMERAL c_0 b0 c==> c==> c~ f1 c= cvector_add c% * f2 f0 f0 cvec cNUMERAL c_0 b1 c= cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cvec cNUMERAL c_0 cCOND f1 b0 b1 f3 * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cvec cNUMERAL c_0 b0 c==> c==> c~ f1 c= cvector_add c% * f2 f0 f0 cvec cNUMERAL c_0 b1 c= cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cvec cNUMERAL c_0 cCOND f1 b0 b1 f3
+ ((\u. ((((real_add (u b)) (u c)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% (u b)) b)) ((% (u c)) c)) = a))) f) |- ((((((real_add (f b)) (f c)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% (f b)) b)) ((% (f c)) c)) = a)) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> * / c/\ c= creal_add * b0 f0 * b0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% * b0 f0 f0 c% * b0 f1 f1 f2 f3 c= c==> c/\ c= creal_add * f3 f0 * f3 f1 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% * f3 f0 f0 c% * f3 f1 f1 f2 ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- ((((b IN (c INSERT EMPTY)) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) ==> (((~ (b IN (c INSERT EMPTY))) ==> (((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) e')))) = (((~ (b IN (c INSERT EMPTY))) ==> (((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) e'))))
T c= c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 f3 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 f3 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 f3 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 f3
- (a = b) |- ((~ (b = c)) ==> ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= f0 f1 c==> c~ c= f1 f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((((~ ((((real_add b) c) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (b = ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) c)))) ==> F) ==> ((((real_add b) c) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (b = ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) c)))) = ((((real_add b) c) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (b = ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) c))))
T c= c==> c==> c~ c==> c= creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cF c==> c= creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c= creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1
+ |- (FINITE EMPTY)
T cFINITE part cEMPTY
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ |- ((((vector_sub a) b) = ((% (f c)) ((vector_sub c) b))) = ((\c. (((vector_sub a) b) = ((% c) ((vector_sub c) b)))) (f c)))
T c= c= cvector_sub f0 f1 c% * f2 f3 cvector_sub f3 f1 * / c= cvector_sub f0 f1 c% b0 cvector_sub f3 f1 * f2 f3
+ |- ((((b IN (c INSERT EMPTY)) = (b IN (c INSERT EMPTY))) ==> (((b IN (c INSERT EMPTY)) ==> (((sum (c INSERT EMPTY)) u) = t')) ==> (((~ (b IN (c INSERT EMPTY))) ==> (((real_add (u b)) ((sum (c INSERT EMPTY)) u)) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((sum (c INSERT EMPTY)) u)) ((real_add (u b)) ((sum (c INSERT EMPTY)) u))) = (((COND (b IN (c INSERT EMPTY))) t') e'))))) = (((b IN (c INSERT EMPTY)) ==> (((sum (c INSERT EMPTY)) u) = t')) ==> (((~ (b IN (c INSERT EMPTY))) ==> (((real_add (u b)) ((sum (c INSERT EMPTY)) u)) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((sum (c INSERT EMPTY)) u)) ((real_add (u b)) ((sum (c INSERT EMPTY)) u))) = (((COND (b IN (c INSERT EMPTY))) t') e')))))
T c= c==> c= cIN f0 * * part cINSERT f1 part cEMPTY cIN f0 * * part cINSERT f1 part cEMPTY c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= csum * * part cINSERT f1 part cEMPTY f2 f3 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 f4 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY csum * * part cINSERT f1 part cEMPTY f2 creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 cCOND cIN f0 * * part cINSERT f1 part cEMPTY f3 f4 c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= csum * * part cINSERT f1 part cEMPTY f2 f3 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 f4 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY csum * * part cINSERT f1 part cEMPTY f2 creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 cCOND cIN f0 * * part cINSERT f1 part cEMPTY f3 f4
- (FINITE s) |- (FINITE (x INSERT s))
T c==> cFINITE f0 cFINITE * * part cINSERT f1 f0
- |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- ((\t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> (((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 b0 c==> c==> c~ f2 c= cvector_add c% * f3 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f3 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 cCOND f2 b0 b1 f4
- |- (((!g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = t')) ==> (((~ g') ==> (((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = t')) ==> (((~ g') ==> (((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = t')) ==> (((~ g') ==> (((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 b1 c==> c==> c~ b0 c= creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 cCOND b0 b1 b2 * / ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 b1 c==> c==> c~ b0 c= creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 cCOND b0 b1 b2 f3 * / ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 b1 c==> c==> c~ b0 c= creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 cCOND b0 b1 b2 f3
+ (((vector_add ((% (f b)) b)) ((% (f c)) c)) = a) |- ((((vector_sub ((vector_add ((% (f b)) b)) ((% (f c)) c))) b) = ((% (f c)) ((vector_sub c) b))) = (((vector_sub a) b) = ((% (f c)) ((vector_sub c) b))))
T c==> c= cvector_add c% * f0 f1 f1 c% * f0 f2 f2 f3 c= c= cvector_sub cvector_add c% * f0 f1 f1 c% * f0 f2 f2 f1 c% * f0 f2 cvector_sub f2 f1 c= cvector_sub f3 f1 c% * f0 f2 cvector_sub f2 f1
- (x = c) |- ((~ (x = a)) = (~ (c = a)))
T c==> c= f0 f1 c= c~ c= f0 f2 c~ c= f1 f2
+ |- ((\g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((sum (c INSERT EMPTY)) u) = t')) ==> (((~ g') ==> (((real_add (u b)) ((sum (c INSERT EMPTY)) u)) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((sum (c INSERT EMPTY)) u)) ((real_add (u b)) ((sum (c INSERT EMPTY)) u))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= csum * * part cINSERT f1 part cEMPTY f2 b1 c==> c==> c~ b0 c= creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY csum * * part cINSERT f1 part cEMPTY f2 creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 cCOND b0 b1 b2 f3
+ (x = c), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- (~ (c = c))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c~ c= f1 f1
+ (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- ((x = c) ==> F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f1 c==> c= f0 f3 cF
+ |- ((((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. (((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = y)))) y))))) ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. (((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = ((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. (((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) = (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. (((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = ((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. (((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c= c==> c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_add * b2 f1 cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 cvector_add c% * b2 f1 f1 cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 b1 b1 c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_add * b2 f1 cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 cvector_add c% * b2 f1 f1 cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 b1 b1 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_add * b2 f1 cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 cvector_add c% * b2 f1 f1 cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 b1 b1 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_add * b2 f1 cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 cvector_add c% * b2 f1 f1 cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 b1 b1 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_add * b2 f1 cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 cvector_add c% * b2 f1 f1 cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 b1 b1 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ (x = a), (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- (~ (a = a))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 c~ c= f1 f1
- |- ((~ (c = c)) ==> (c = c))
T c==> c~ c= f0 f0 c= f0 f0
- (FINITE s) |- ((FINITE s) /\ (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f)))))
T c==> cFINITE f0 c/\ cFINITE f0 c= cvsum * * part cINSERT f1 f0 f2 cCOND cIN f1 f0 cvsum f0 f2 cvector_add * f2 f1 cvsum f0 f2
+ |- (((!g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))) = t')) ==> (((~ g') ==> (((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))) = t')) ==> (((~ g') ==> (((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))) = t')) ==> (((~ g') ==> (((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b3 b3 b1 c==> c==> c~ b0 c= cvector_add * / c% * f2 b3 b3 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b3 b3 b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b3 b3 cvector_add * / c% * f2 b3 b3 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b3 b3 cCOND b0 b1 b2 * / ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b3 b3 b1 c==> c==> c~ b0 c= cvector_add * / c% * f2 b3 b3 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b3 b3 b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b3 b3 cvector_add * / c% * f2 b3 b3 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b3 b3 cCOND b0 b1 b2 f3 * / ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b3 b3 b1 c==> c==> c~ b0 c= cvector_add * / c% * f2 b3 b3 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b3 b3 b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b3 b3 cvector_add * / c% * f2 b3 b3 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b3 b3 cCOND b0 b1 b2 f3
+ |- ((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. (((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = y)))) y))))) = (?u. (((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = a))))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_add * b2 f1 cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 cvector_add c% * b2 f1 f1 cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 b1 b1 c? / c/\ c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b0 f2 creal_add * b0 f1 cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b0 f2 f2 cvec cNUMERAL c_0 cvector_add c% * b0 f1 f1 cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b0 f2 f2 cvec cNUMERAL c_0 f0
+ (((real_add (f b)) (f c)) = (real_of_num (NUMERAL (BIT1 _0)))), (((vector_add ((% (f b)) b)) ((% (f c)) c)) = a) |- (?c. (((vector_sub a) b) = ((% c) ((vector_sub c) b))))
T c==> c= creal_add * f0 f1 * f0 f2 creal_of_num cNUMERAL cBIT1 c_0 c==> c= cvector_add c% * f0 f1 f1 c% * f0 f2 f2 f3 c? / c= cvector_sub f3 f1 c% b0 cvector_sub f2 f1
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
+ |- (((!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((sum (c INSERT EMPTY)) u) = t')) ==> (((~ g') ==> (((real_add (u b)) ((sum (c INSERT EMPTY)) u)) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((sum (c INSERT EMPTY)) u)) ((real_add (u b)) ((sum (c INSERT EMPTY)) u))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((sum (c INSERT EMPTY)) u) = t')) ==> (((~ g') ==> (((real_add (u b)) ((sum (c INSERT EMPTY)) u)) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((sum (c INSERT EMPTY)) u)) ((real_add (u b)) ((sum (c INSERT EMPTY)) u))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((sum (c INSERT EMPTY)) u) = t')) ==> (((~ g') ==> (((real_add (u b)) ((sum (c INSERT EMPTY)) u)) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((sum (c INSERT EMPTY)) u)) ((real_add (u b)) ((sum (c INSERT EMPTY)) u))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= csum * * part cINSERT f1 part cEMPTY f3 b0 c==> c==> c~ f2 c= creal_add * f3 f0 csum * * part cINSERT f1 part cEMPTY f3 b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY csum * * part cINSERT f1 part cEMPTY f3 creal_add * f3 f0 csum * * part cINSERT f1 part cEMPTY f3 cCOND f2 b0 b1 * / ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= csum * * part cINSERT f1 part cEMPTY f3 b0 c==> c==> c~ f2 c= creal_add * f3 f0 csum * * part cINSERT f1 part cEMPTY f3 b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY csum * * part cINSERT f1 part cEMPTY f3 creal_add * f3 f0 csum * * part cINSERT f1 part cEMPTY f3 cCOND f2 b0 b1 f4 * / ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= csum * * part cINSERT f1 part cEMPTY f3 b0 c==> c==> c~ f2 c= creal_add * f3 f0 csum * * part cINSERT f1 part cEMPTY f3 b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY csum * * part cINSERT f1 part cEMPTY f3 creal_add * f3 f0 csum * * part cINSERT f1 part cEMPTY f3 cCOND f2 b0 b1 f4
- (a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) |- ((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) = T)
T c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 cT
- (a = c), (b = c) |- (T = ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= f0 f1 c==> c= f2 f1 c= cT c==> cIN f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY
+ (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- ((x = c) ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 c==> c= f0 f3 cF
+ |- (((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = ((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c= c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) = (a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y)))))) ==> (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> (((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = ((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> q')))) = (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> (((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = ((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> q'))))
T c= c==> c= cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 c==> c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 f3 c==> c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 f3
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ (~ (a = b)), (~ (b = c)) |- ((?c. (((vector_sub a) b) = ((% c) ((vector_sub c) b)))) = (collinear (c INSERT (b INSERT (a INSERT EMPTY)))))
T c==> c~ c= f0 f1 c==> c~ c= f1 f2 c= c? / c= cvector_sub f0 f1 c% b0 cvector_sub f2 f1 ccollinear * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
+ |- (((!x. (!y. ((collinear ((vec (NUMERAL _0)) INSERT (x INSERT (y INSERT EMPTY)))) = ((x = (vec (NUMERAL _0))) \/ ((y = (vec (NUMERAL _0))) \/ (?c. (y = ((% c) x)))))))) ==> ((\x. (!y. ((collinear ((vec (NUMERAL _0)) INSERT (x INSERT (y INSERT EMPTY)))) = ((x = (vec (NUMERAL _0))) \/ ((y = (vec (NUMERAL _0))) \/ (?c. (y = ((% c) x)))))))) x)) = ((\x. (!y. ((collinear ((vec (NUMERAL _0)) INSERT (x INSERT (y INSERT EMPTY)))) = ((x = (vec (NUMERAL _0))) \/ ((y = (vec (NUMERAL _0))) \/ (?c. (y = ((% c) x)))))))) x))
T c= c==> ! ! c= ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b1 cvec cNUMERAL c_0 c? / c= b1 c% b2 b0 * / ! c= ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b1 cvec cNUMERAL c_0 c? / c= b1 c% b2 b0 f0 * / ! c= ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b1 cvec cNUMERAL c_0 c? / c= b1 c% b2 b0 f0
+ |- (((!f. (((vsum EMPTY) f) = (vec (NUMERAL _0)))) ==> ((\f. (((vsum EMPTY) f) = (vec (NUMERAL _0)))) f)) = ((\f. (((vsum EMPTY) f) = (vec (NUMERAL _0)))) f))
T c= c==> ! c= cvsum part cEMPTY b0 cvec cNUMERAL c_0 * / c= cvsum part cEMPTY b0 cvec cNUMERAL c_0 f0 * / c= cvsum part cEMPTY b0 cvec cNUMERAL c_0 f0
- ((~ (a = c)) ==> ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) |- ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c==> c~ c= f0 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY
+ |- (((!s. ((FINITE s) ==> (((hull affine) s) = (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum s) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum s) (\v. ((% (u v)) v))) = y)))) y))))))) ==> ((\s. ((FINITE s) ==> (((hull affine) s) = (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum s) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum s) (\v. ((% (u v)) v))) = y)))) y))))))) s)) = ((\s. ((FINITE s) ==> (((hull affine) s) = (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum s) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum s) (\v. ((% (u v)) v))) = y)))) y))))))) s))
T c= c==> ! c==> cFINITE b0 c= * * part chull part caffine b0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ c= csum b0 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum b0 / c% * b3 b4 b4 b2 b2 * / c==> cFINITE b0 c= * * part chull part caffine b0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ c= csum b0 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum b0 / c% * b3 b4 b4 b2 b2 f0 * / c==> cFINITE b0 c= * * part chull part caffine b0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ c= csum b0 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum b0 / c% * b3 b4 b4 b2 b2 f0
+ |- ((((c IN EMPTY) = (c IN EMPTY)) ==> (((c IN EMPTY) ==> (((sum EMPTY) u) = t')) ==> (((~ (c IN EMPTY)) ==> (((real_add (u c)) ((sum EMPTY) u)) = e')) ==> ((((COND (c IN EMPTY)) ((sum EMPTY) u)) ((real_add (u c)) ((sum EMPTY) u))) = (((COND (c IN EMPTY)) t') e'))))) = (((c IN EMPTY) ==> (((sum EMPTY) u) = t')) ==> (((~ (c IN EMPTY)) ==> (((real_add (u c)) ((sum EMPTY) u)) = e')) ==> ((((COND (c IN EMPTY)) ((sum EMPTY) u)) ((real_add (u c)) ((sum EMPTY) u))) = (((COND (c IN EMPTY)) t') e')))))
T c= c==> c= cIN f0 part cEMPTY cIN f0 part cEMPTY c==> c==> cIN f0 part cEMPTY c= csum part cEMPTY f1 f2 c==> c==> c~ cIN f0 part cEMPTY c= creal_add * f1 f0 csum part cEMPTY f1 f3 c= cCOND cIN f0 part cEMPTY csum part cEMPTY f1 creal_add * f1 f0 csum part cEMPTY f1 cCOND cIN f0 part cEMPTY f2 f3 c==> c==> cIN f0 part cEMPTY c= csum part cEMPTY f1 f2 c==> c==> c~ cIN f0 part cEMPTY c= creal_add * f1 f0 csum part cEMPTY f1 f3 c= cCOND cIN f0 part cEMPTY csum part cEMPTY f1 creal_add * f1 f0 csum part cEMPTY f1 cCOND cIN f0 part cEMPTY f2 f3
- |- (((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F) ==> ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF
+ |- ((\s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f)))))) s)
T * / c==> cFINITE b0 c= cvsum * * part cINSERT f0 b0 f1 cCOND cIN f0 b0 cvsum b0 f1 cvector_add * f1 f0 cvsum b0 f1 f2
+ |- ((\x. (((vector_add x) (vec (NUMERAL _0))) = x)) x)
T * / c= cvector_add b0 cvec cNUMERAL c_0 b0 f0
+ (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- ((((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) /\ F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f1 c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f1 cF
+ |- ((~ (((real_sub ((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (f c))) (b $ i))) ((real_mul (f c)) (c $ i)))) (b $ i)) = ((real_mul (f c)) ((real_sub (c $ i)) (b $ i))))) ==> F)
T c==> c~ c= creal_sub creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 * f0 f1 c$ f2 f3 creal_mul * f0 f1 c$ f1 f3 c$ f2 f3 creal_mul * f0 f1 creal_sub c$ f1 f3 c$ f2 f3 cF
+ |- (((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))) = (((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))))
T c= cvsum * * part cINSERT f0 part cEMPTY / c% * f1 b0 b0 cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f1 b0 b0 cvector_add * / c% * f1 b0 b0 f0 cvsum part cEMPTY / c% * f1 b0 b0
- |- ((b IN (c INSERT EMPTY)) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))))
T c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1
+ |- (((!y. ((collinear ((vec (NUMERAL _0)) INSERT (x INSERT (y INSERT EMPTY)))) = ((x = (vec (NUMERAL _0))) \/ ((y = (vec (NUMERAL _0))) \/ (?c. (y = ((% c) x))))))) ==> ((\y. ((collinear ((vec (NUMERAL _0)) INSERT (x INSERT (y INSERT EMPTY)))) = ((x = (vec (NUMERAL _0))) \/ ((y = (vec (NUMERAL _0))) \/ (?c. (y = ((% c) x))))))) y)) = ((\y. ((collinear ((vec (NUMERAL _0)) INSERT (x INSERT (y INSERT EMPTY)))) = ((x = (vec (NUMERAL _0))) \/ ((y = (vec (NUMERAL _0))) \/ (?c. (y = ((% c) x))))))) y))
T c= c==> ! c= ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c\/ c= f0 cvec cNUMERAL c_0 c\/ c= b0 cvec cNUMERAL c_0 c? / c= b0 c% b1 f0 * / c= ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c\/ c= f0 cvec cNUMERAL c_0 c\/ c= b0 cvec cNUMERAL c_0 c? / c= b0 c% b1 f0 f1 * / c= ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c\/ c= f0 cvec cNUMERAL c_0 c\/ c= b0 cvec cNUMERAL c_0 c? / c= b0 c% b1 f0 f1
+ (~ (((real_sub ((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (f c))) (b $ i))) ((real_mul (f c)) (c $ i)))) (b $ i)) = ((real_mul (f c)) ((real_sub (c $ i)) (b $ i))))) |- ((~ (((real_sub ((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (f c))) (b $ i))) ((real_mul (f c)) (c $ i)))) (b $ i)) = ((real_mul (f c)) ((real_sub (c $ i)) (b $ i))))) /\ F)
T c==> c~ c= creal_sub creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 * f0 f1 c$ f2 f3 creal_mul * f0 f1 c$ f1 f3 c$ f2 f3 creal_mul * f0 f1 creal_sub c$ f1 f3 c$ f2 f3 c/\ c~ c= creal_sub creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 * f0 f1 c$ f2 f3 creal_mul * f0 f1 c$ f1 f3 c$ f2 f3 creal_mul * f0 f1 creal_sub c$ f1 f3 c$ f2 f3 cF
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- |- ((!b. (!c. (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a))))))) = T)
T c= ! ! ! c= c\/ c= b2 f0 c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (c IN EMPTY)) |- ((c IN EMPTY) = F)
T c==> c~ cIN f0 part cEMPTY c= cIN f0 part cEMPTY cF
+ |- ((((c IN EMPTY) ==> (((sum EMPTY) u) = (real_of_num (NUMERAL _0)))) ==> (((~ (c IN EMPTY)) ==> (((real_add (u c)) ((sum EMPTY) u)) = e')) ==> ((((COND (c IN EMPTY)) ((sum EMPTY) u)) ((real_add (u c)) ((sum EMPTY) u))) = (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) e')))) = (((~ (c IN EMPTY)) ==> (((real_add (u c)) ((sum EMPTY) u)) = e')) ==> ((((COND (c IN EMPTY)) ((sum EMPTY) u)) ((real_add (u c)) ((sum EMPTY) u))) = (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) e'))))
T c= c==> c==> cIN f0 part cEMPTY c= csum part cEMPTY f1 creal_of_num cNUMERAL c_0 c==> c==> c~ cIN f0 part cEMPTY c= creal_add * f1 f0 csum part cEMPTY f1 f2 c= cCOND cIN f0 part cEMPTY csum part cEMPTY f1 creal_add * f1 f0 csum part cEMPTY f1 cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 f2 c==> c==> c~ cIN f0 part cEMPTY c= creal_add * f1 f0 csum part cEMPTY f1 f2 c= cCOND cIN f0 part cEMPTY csum part cEMPTY f1 creal_add * f1 f0 csum part cEMPTY f1 cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 f2
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- |- ((((~ (c IN EMPTY)) ==> (((vector_add ((% (u c)) c)) (vec (NUMERAL _0))) = ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))))
T c= c==> c==> c~ cIN f0 part cEMPTY c= cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 c= cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 c= cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0
+ (~ (a = b)), (~ (b = c)), (((real_add (f b)) (f c)) = (real_of_num (NUMERAL (BIT1 _0)))), ((((real_add (f b)) (f c)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% (f b)) b)) ((% (f c)) c)) = a)) |- (collinear (a INSERT (b INSERT (c INSERT EMPTY))))
T c==> c~ c= f0 f1 c==> c~ c= f1 f2 c==> c= creal_add * f3 f1 * f3 f2 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c= creal_add * f3 f1 * f3 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% * f3 f1 f1 c% * f3 f2 f2 f0 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (x = b), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- (~ (b = b))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f1 f1
+ (b IN (c INSERT EMPTY)) |- ((b IN (c INSERT EMPTY)) /\ (((sum (c INSERT EMPTY)) u) = (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))))
T c==> cIN f0 * * part cINSERT f1 part cEMPTY c/\ cIN f0 * * part cINSERT f1 part cEMPTY c= csum * * part cINSERT f1 part cEMPTY f2 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
+ |- (((c IN EMPTY) = g') ==> ((g' ==> (((vsum EMPTY) (\v. ((% (u v)) v))) = t')) ==> (((~ g') ==> (((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))) = (((COND g') t') e')))))
T c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cvsum part cEMPTY / c% * f2 b0 b0 f3 c==> c==> c~ f1 c= cvector_add * / c% * f2 b0 b0 f0 cvsum part cEMPTY / c% * f2 b0 b0 f4 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f2 b0 b0 cvector_add * / c% * f2 b0 b0 f0 cvsum part cEMPTY / c% * f2 b0 b0 cCOND f1 f3 f4
- |- ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))
T c= cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f1 f0 cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f1 f0
+ (~ (a = b)), (~ (b = c)), (((real_add (f b)) (f c)) = (real_of_num (NUMERAL (BIT1 _0)))), (((vector_add ((% (f b)) b)) ((% (f c)) c)) = a) |- (collinear (c INSERT (b INSERT (a INSERT EMPTY))))
T c==> c~ c= f0 f1 c==> c~ c= f1 f2 c==> c= creal_add * f3 f1 * f3 f2 creal_of_num cNUMERAL cBIT1 c_0 c==> c= cvector_add c% * f3 f1 f1 c% * f3 f2 f2 f0 ccollinear * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
+ ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((~ (b IN (c INSERT EMPTY))) ==> (((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) e')))
T c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 f3 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 f3
- |- (((!b. (!c. ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F))) ==> ((\b. (!c. ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F))) b)) = ((\b. (!c. ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F))) b))
T c= c==> ! ! c==> c~ ! c= c\/ c= b2 f0 c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cF * / ! c==> c~ ! c= c\/ c= b2 f0 c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cF f1 * / ! c==> c~ ! c= c\/ c= b2 f0 c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cF f1
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (x = c), (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- (~ (c = c))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c~ c= f1 f1
+ |- (((sum (c INSERT EMPTY)) u) = (((COND (c IN EMPTY)) ((sum EMPTY) u)) ((real_add (u c)) ((sum EMPTY) u))))
T c= csum * * part cINSERT f0 part cEMPTY f1 cCOND cIN f0 part cEMPTY csum part cEMPTY f1 creal_add * f1 f0 csum part cEMPTY f1
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ (x = c), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- ((x = c) /\ F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c/\ c= f0 f1 cF
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((~ (c IN EMPTY)) ==> (((real_add (u c)) ((sum EMPTY) u)) = (u c))) ==> ((((COND (c IN EMPTY)) ((sum EMPTY) u)) ((real_add (u c)) ((sum EMPTY) u))) = (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = ((((COND (c IN EMPTY)) ((sum EMPTY) u)) ((real_add (u c)) ((sum EMPTY) u))) = (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))))
T c= c==> c==> c~ cIN f0 part cEMPTY c= creal_add * f1 f0 csum part cEMPTY f1 * f1 f0 c= cCOND cIN f0 part cEMPTY csum part cEMPTY f1 creal_add * f1 f0 csum part cEMPTY f1 cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f1 f0 c= cCOND cIN f0 part cEMPTY csum part cEMPTY f1 creal_add * f1 f0 csum part cEMPTY f1 cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f1 f0
- |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
+ |- ((\y. ((collinear ((vec (NUMERAL _0)) INSERT (x INSERT (y INSERT EMPTY)))) = ((x = (vec (NUMERAL _0))) \/ ((y = (vec (NUMERAL _0))) \/ (?c. (y = ((% c) x))))))) y)
T * / c= ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c\/ c= f0 cvec cNUMERAL c_0 c\/ c= b0 cvec cNUMERAL c_0 c? / c= b0 c% b1 f0 f1
+ (~ (a = b)), (~ (b = c)) |- (((!x. (((\u. ((((real_add (u b)) (u c)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% (u b)) b)) ((% (u c)) c)) = a))) x) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> ((?u. ((((real_add (u b)) (u c)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% (u b)) b)) ((% (u c)) c)) = a))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) = ((?u. ((((real_add (u b)) (u c)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% (u b)) b)) ((% (u c)) c)) = a))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c~ c= f0 f1 c==> c~ c= f1 f2 c= c==> ! c==> * / c/\ c= creal_add * b1 f1 * b1 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% * b1 f1 f1 c% * b1 f2 f2 f0 b0 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c? / c/\ c= creal_add * b0 f1 * b0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% * b0 f1 f1 c% * b0 f2 f2 f0 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c? / c/\ c= creal_add * b0 f1 * b0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% * b0 f1 f1 c% * b0 f2 f2 f0 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (~ F), (x = c), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c/\ c~ cF cF
+ |- (((!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> (((sum EMPTY) u) = t')) ==> (((~ g') ==> (((real_add (u c)) ((sum EMPTY) u)) = e')) ==> ((((COND (c IN EMPTY)) ((sum EMPTY) u)) ((real_add (u c)) ((sum EMPTY) u))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> (((sum EMPTY) u) = t')) ==> (((~ g') ==> (((real_add (u c)) ((sum EMPTY) u)) = e')) ==> ((((COND (c IN EMPTY)) ((sum EMPTY) u)) ((real_add (u c)) ((sum EMPTY) u))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> (((sum EMPTY) u) = t')) ==> (((~ g') ==> (((real_add (u c)) ((sum EMPTY) u)) = e')) ==> ((((COND (c IN EMPTY)) ((sum EMPTY) u)) ((real_add (u c)) ((sum EMPTY) u))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= csum part cEMPTY f2 b0 c==> c==> c~ f1 c= creal_add * f2 f0 csum part cEMPTY f2 b1 c= cCOND cIN f0 part cEMPTY csum part cEMPTY f2 creal_add * f2 f0 csum part cEMPTY f2 cCOND f1 b0 b1 * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= csum part cEMPTY f2 b0 c==> c==> c~ f1 c= creal_add * f2 f0 csum part cEMPTY f2 b1 c= cCOND cIN f0 part cEMPTY csum part cEMPTY f2 creal_add * f2 f0 csum part cEMPTY f2 cCOND f1 b0 b1 f3 * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= csum part cEMPTY f2 b0 c==> c==> c~ f1 c= creal_add * f2 f0 csum part cEMPTY f2 b1 c= cCOND cIN f0 part cEMPTY csum part cEMPTY f2 creal_add * f2 f0 csum part cEMPTY f2 cCOND f1 b0 b1 f3
+ (x = c), (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- ((x = c) /\ F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c/\ c= f0 f1 cF
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- (((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))) = t')) ==> (((~ g') ==> (((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))) = t')) ==> (((~ g') ==> (((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))) = t')) ==> (((~ g') ==> (((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b2 b2 b0 c==> c==> c~ f2 c= cvector_add * / c% * f3 b2 b2 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b2 b2 b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b2 b2 cvector_add * / c% * f3 b2 b2 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b2 b2 cCOND f2 b0 b1 * / ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b2 b2 b0 c==> c==> c~ f2 c= cvector_add * / c% * f3 b2 b2 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b2 b2 b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b2 b2 cvector_add * / c% * f3 b2 b2 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b2 b2 cCOND f2 b0 b1 f4 * / ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b2 b2 b0 c==> c==> c~ f2 c= cvector_add * / c% * f3 b2 b2 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b2 b2 b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b2 b2 cvector_add * / c% * f3 b2 b2 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b2 b2 cCOND f2 b0 b1 f4
- |- ((\g'. (!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((vec (NUMERAL _0)) = t')) ==> (((~ g') ==> (((vector_add ((% (u c)) c)) (vec (NUMERAL _0))) = e')) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cIN f0 part cEMPTY b0 c==> c==> b0 c= cvec cNUMERAL c_0 b1 c==> c==> c~ b0 c= cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 b2 c= cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f2
+ |- ((b IN (c INSERT EMPTY)) ==> (((sum (c INSERT EMPTY)) u) = (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))))
T c==> cIN f0 * * part cINSERT f1 part cEMPTY c= csum * * part cINSERT f1 part cEMPTY f2 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1
- |- ((x INSERT (y INSERT s)) = (y INSERT (x INSERT s)))
T c= * * part cINSERT f0 * * part cINSERT f1 f2 * * part cINSERT f1 * * part cINSERT f0 f2
+ ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((u c) = e')) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= creal_of_num cNUMERAL c_0 b0 c==> c==> c~ f1 c= * f2 f0 b1 c= cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f0 cCOND f1 b0 b1 f3
+ (((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c\/ c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((FINITE EMPTY) = T)
T c= cFINITE part cEMPTY cT
+ |- (((vsum EMPTY) f) = (vec (NUMERAL _0)))
T c= cvsum part cEMPTY f0 cvec cNUMERAL c_0
+ |- ((((b IN (c INSERT EMPTY)) ==> (((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))) = (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) ==> (((~ (b IN (c INSERT EMPTY))) ==> (((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) e')))) = (((~ (b IN (c INSERT EMPTY))) ==> (((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) e'))))
T c= c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cvector_add * / c% * f2 b0 b0 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 f3 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cvector_add * / c% * f2 b0 b0 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 f3 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cvector_add * / c% * f2 b0 b0 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 f3 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cvector_add * / c% * f2 b0 b0 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 f3
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ |- (((!p'. (!q'. (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) = p') ==> ((p' ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) = p') ==> ((p' ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) = p') ==> ((p' ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN f0 * part cGSPEC / c? / cSETSPEC b2 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b4 b5 b5 b3 b3 b0 c==> c==> b0 c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= c==> cIN f0 * part cGSPEC / c? / cSETSPEC b2 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b4 b5 b5 b3 b3 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> b0 b1 * / ! c==> c= cIN f0 * part cGSPEC / c? / cSETSPEC b2 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b4 b5 b5 b3 b3 b0 c==> c==> b0 c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= c==> cIN f0 * part cGSPEC / c? / cSETSPEC b2 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b4 b5 b5 b3 b3 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> b0 b1 f3 * / ! c==> c= cIN f0 * part cGSPEC / c? / cSETSPEC b2 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b4 b5 b5 b3 b3 b0 c==> c==> b0 c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= c==> cIN f0 * part cGSPEC / c? / cSETSPEC b2 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b4 b5 b5 b3 b3 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> b0 b1 f3
+ |- (((!f. (!s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f))))))) ==> ((\f. (!s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f))))))) f)) = ((\f. (!s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f))))))) f))
T c= c==> ! ! c==> cFINITE b1 c= cvsum * * part cINSERT f0 b1 b0 cCOND cIN f0 b1 cvsum b1 b0 cvector_add * b0 f0 cvsum b1 b0 * / ! c==> cFINITE b1 c= cvsum * * part cINSERT f0 b1 b0 cCOND cIN f0 b1 cvsum b1 b0 cvector_add * b0 f0 cvsum b1 b0 f1 * / ! c==> cFINITE b1 c= cvsum * * part cINSERT f0 b1 b0 cCOND cIN f0 b1 cvsum b1 b0 cvector_add * b0 f0 cvsum b1 b0 f1
+ ((~ (b = c)) ==> ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) |- ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c==> c~ c= f0 f1 c==> cIN f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((\t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))) = t')) ==> (((~ g') ==> (((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b2 b2 b0 c==> c==> c~ f2 c= cvector_add * / c% * f3 b2 b2 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b2 b2 b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b2 b2 cvector_add * / c% * f3 b2 b2 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b2 b2 cCOND f2 b0 b1 f4
- |- ((!i. t) = t)
T c= ! f0 f0
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ (c IN EMPTY) |- ((c IN EMPTY) /\ (((vsum EMPTY) (\v. ((% (u v)) v))) = (vec (NUMERAL _0))))
T c==> cIN f0 part cEMPTY c/\ cIN f0 part cEMPTY c= cvsum part cEMPTY / c% * f1 b0 b0 cvec cNUMERAL c_0
+ |- ((\y. ((((vector_sub x) y) = (vec (NUMERAL _0))) = (x = y))) y)
T * / c= c= cvector_sub f0 b0 cvec cNUMERAL c_0 c= f0 b0 f1
+ |- (T = (FINITE EMPTY))
T c= cT cFINITE part cEMPTY
+ (~ (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a))))), ((((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) ==> F), ((((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) ==> F) |- F
T c==> c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 c==> c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 cF c==> c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f1 cF cF
+ |- ((\p'. (!q'. (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. (((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = y)))) y))))) = p') ==> ((p' ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. (((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 * part cGSPEC / c? / cSETSPEC b2 c? / c/\ c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b4 f2 creal_add * b4 f1 cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b4 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b4 f2 f2 cvec cNUMERAL c_0 cvector_add c% * b4 f1 f1 cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b4 f2 f2 cvec cNUMERAL c_0 b3 b3 b0 c==> c==> b0 c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= c==> cIN f0 * part cGSPEC / c? / cSETSPEC b2 c? / c/\ c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b4 f2 creal_add * b4 f1 cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b4 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b4 f2 f2 cvec cNUMERAL c_0 cvector_add c% * b4 f1 f1 cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b4 f2 f2 cvec cNUMERAL c_0 b3 b3 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> b0 b1 f3
- |- ((collinear (x INSERT EMPTY)) = T)
T c= ccollinear * * part cINSERT f0 part cEMPTY cT
- (x = b), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- (~ (b = a))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f1 f2
- |- (((!g'. (!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((u c) = e')) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((u c) = e')) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((u c) = e')) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cIN f0 part cEMPTY b0 c==> c==> b0 c= creal_of_num cNUMERAL c_0 b1 c==> c==> c~ b0 c= * f1 f0 b2 c= cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f1 f0 cCOND b0 b1 b2 * / ! ! c==> c= cIN f0 part cEMPTY b0 c==> c==> b0 c= creal_of_num cNUMERAL c_0 b1 c==> c==> c~ b0 c= * f1 f0 b2 c= cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f1 f0 cCOND b0 b1 b2 f2 * / ! ! c==> c= cIN f0 part cEMPTY b0 c==> c==> b0 c= creal_of_num cNUMERAL c_0 b1 c==> c==> c~ b0 c= * f1 f0 b2 c= cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f1 f0 cCOND b0 b1 b2 f2
+ (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))), ((x = c) ==> F), (((x = b) \/ (x = a)) ==> F) |- F
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 c==> c==> c= f0 f3 cF c==> c==> c\/ c= f0 f2 c= f0 f1 cF cF
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
- (~ (c IN EMPTY)) |- ((~ (c IN EMPTY)) /\ (((vector_add ((% (u c)) c)) (vec (NUMERAL _0))) = ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))
T c==> c~ cIN f0 part cEMPTY c/\ c~ cIN f0 part cEMPTY c= cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0
+ |- (((~ (c IN EMPTY)) ==> (((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))) = (((COND (c IN EMPTY)) (vec (NUMERAL _0))) e')))
T c==> c==> c~ cIN f0 part cEMPTY c= cvector_add * / c% * f1 b0 b0 f0 cvsum part cEMPTY / c% * f1 b0 b0 f2 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f1 b0 b0 cvector_add * / c% * f1 b0 b0 f0 cvsum part cEMPTY / c% * f1 b0 b0 cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 f2
+ |- (FINITE (b INSERT (c INSERT EMPTY)))
T cFINITE * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- (((hull affine) (b INSERT (c INSERT EMPTY))) = (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y)))))
T c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * b2 b3 b3 b1 b1
+ (~ (a = b)), (~ (b = c)) |- ((?u. ((((real_add (u b)) (u c)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% (u b)) b)) ((% (u c)) c)) = a))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c~ c= f0 f1 c==> c~ c= f1 f2 c==> c? / c/\ c= creal_add * b0 f1 * b0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% * b0 f1 f1 c% * b0 f2 f2 f0 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) = (x IN (c INSERT (b INSERT (a INSERT EMPTY))))))
T c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY
- |- (((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((vsum s) (\v. (f v))) = ((vsum s) g))) = T)
T c= c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= cvsum f0 / * f1 b0 cvsum f0 f2 cT
+ |- ((~ (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a))))) ==> F)
T c==> c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 cF
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((\x. (!y. ((((vector_sub x) y) = (vec (NUMERAL _0))) = (x = y)))) x)
T * / ! c= c= cvector_sub b0 b1 cvec cNUMERAL c_0 c= b0 b1 f0
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ |- ((((c IN EMPTY) = (c IN EMPTY)) ==> (((c IN EMPTY) ==> (((vsum EMPTY) (\v. ((% (u v)) v))) = t')) ==> (((~ (c IN EMPTY)) ==> (((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))) = (((COND (c IN EMPTY)) t') e'))))) = (((c IN EMPTY) ==> (((vsum EMPTY) (\v. ((% (u v)) v))) = t')) ==> (((~ (c IN EMPTY)) ==> (((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))) = (((COND (c IN EMPTY)) t') e')))))
T c= c==> c= cIN f0 part cEMPTY cIN f0 part cEMPTY c==> c==> cIN f0 part cEMPTY c= cvsum part cEMPTY / c% * f1 b0 b0 f2 c==> c==> c~ cIN f0 part cEMPTY c= cvector_add * / c% * f1 b0 b0 f0 cvsum part cEMPTY / c% * f1 b0 b0 f3 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f1 b0 b0 cvector_add * / c% * f1 b0 b0 f0 cvsum part cEMPTY / c% * f1 b0 b0 cCOND cIN f0 part cEMPTY f2 f3 c==> c==> cIN f0 part cEMPTY c= cvsum part cEMPTY / c% * f1 b0 b0 f2 c==> c==> c~ cIN f0 part cEMPTY c= cvector_add * / c% * f1 b0 b0 f0 cvsum part cEMPTY / c% * f1 b0 b0 f3 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f1 b0 b0 cvector_add * / c% * f1 b0 b0 f0 cvsum part cEMPTY / c% * f1 b0 b0 cCOND cIN f0 part cEMPTY f2 f3
- |- ((?c. t) = t)
T c= c? / f0 f0
+ |- (((!x. (!y. (!z. ((collinear (x INSERT (y INSERT (z INSERT EMPTY)))) = (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub x) y) INSERT (((vector_sub z) y) INSERT EMPTY)))))))) ==> ((\x. (!y. (!z. ((collinear (x INSERT (y INSERT (z INSERT EMPTY)))) = (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub x) y) INSERT (((vector_sub z) y) INSERT EMPTY)))))))) x)) = ((\x. (!y. (!z. ((collinear (x INSERT (y INSERT (z INSERT EMPTY)))) = (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub x) y) INSERT (((vector_sub z) y) INSERT EMPTY)))))))) x))
T c= c==> ! ! ! c= ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 b1 * * part cINSERT cvector_sub b2 b1 part cEMPTY * / ! ! c= ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 b1 * * part cINSERT cvector_sub b2 b1 part cEMPTY f0 * / ! ! c= ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 b1 * * part cINSERT cvector_sub b2 b1 part cEMPTY f0
- |- ((((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F) ==> ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F)) ==> (((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F) ==> ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambdai. ((real_sub ((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (f c))) (b $ i))) $ i)) ((lambdai. ((real_mul (f c)) (c $ i))) $ i))) $ i)) (b $ i))) $ i) = ((lambdai. ((real_mul (f c)) ((lambdai. ((real_sub (c $ i)) (b $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_sub c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 * f1 f2 c$ f3 b1 b1 c$ clambda / creal_mul * f1 f2 c$ f2 b1 b1 b0 c$ f3 b0 f0 c$ clambda / creal_mul * f1 f2 c$ clambda / creal_sub c$ f2 b1 c$ f3 b1 b0 f0
- |- (((((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F) ==> ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F)) ==> (((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F) ==> ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F))) = (((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F) ==> ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F)))
T c= c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF
+ |- ((\g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))) = t')) ==> (((~ g') ==> (((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b3 b3 b1 c==> c==> c~ b0 c= cvector_add * / c% * f2 b3 b3 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b3 b3 b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b3 b3 cvector_add * / c% * f2 b3 b3 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b3 b3 cCOND b0 b1 b2 f3
- (x = b), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- (~ (b = c))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f1 f3
- |- ((b IN (c INSERT EMPTY)) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))))
T c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0
- (b IN (c INSERT EMPTY)) |- ((b IN (c INSERT EMPTY)) /\ ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))))
T c==> cIN f0 * * part cINSERT f1 part cEMPTY c/\ cIN f0 * * part cINSERT f1 part cEMPTY c= cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1
+ |- ((\t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> (((vsum EMPTY) (\v. ((% (u v)) v))) = t')) ==> (((~ g') ==> (((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cvsum part cEMPTY / c% * f2 b2 b2 b0 c==> c==> c~ f1 c= cvector_add * / c% * f2 b2 b2 f0 cvsum part cEMPTY / c% * f2 b2 b2 b1 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f2 b2 b2 cvector_add * / c% * f2 b2 b2 f0 cvsum part cEMPTY / c% * f2 b2 b2 cCOND f1 b0 b1 f3
- ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((COND (b IN (c INSERT EMPTY))) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))))
T c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cvector_add * / c% * f2 b0 b0 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0
- |- ((\b. (!c. ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F))) b)
T * / ! c==> c~ ! c= c\/ c= b2 f0 c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cF f1
- |- ((\e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> (((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = (((COND g') t') e')))))) e')
T * / c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 f4 c==> c==> c~ f2 c= cvector_add c% * f3 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 b0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f3 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 cCOND f2 f4 b0 f5
- |- ((c IN EMPTY) ==> ((real_of_num (NUMERAL _0)) = (real_of_num (NUMERAL _0))))
T c==> cIN f0 part cEMPTY c= creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x = c), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- (~ (c = b))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c~ c= f1 f3
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ |- ((\z. ((collinear (x INSERT (y INSERT (z INSERT EMPTY)))) = (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub x) y) INSERT (((vector_sub z) y) INSERT EMPTY)))))) z)
T * / c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub b0 f1 part cEMPTY f2
- |- (((c IN EMPTY) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((u c) = e')) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND g') t') e')))))
T c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= creal_of_num cNUMERAL c_0 f2 c==> c==> c~ f1 c= * f3 f0 f4 c= cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f0 cCOND f1 f2 f4
- (?u. ((((real_add (u b)) (u c)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% (u b)) b)) ((% (u c)) c)) = a))), (~ (a = b)), (~ (b = c)) |- ((?u. ((((real_add (u b)) (u c)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% (u b)) b)) ((% (u c)) c)) = a))) /\ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c? / c/\ c= creal_add * b0 f0 * b0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% * b0 f0 f0 c% * b0 f1 f1 f2 c==> c~ c= f2 f0 c==> c~ c= f0 f1 c/\ c? / c/\ c= creal_add * b0 f0 * b0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% * b0 f0 f0 c% * b0 f1 f1 f2 ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (x = c), (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- ((c = c) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c==> c= f1 f1 cF
+ |- (((!e'. (((c IN EMPTY) = g') ==> ((g' ==> (((sum EMPTY) u) = t')) ==> (((~ g') ==> (((real_add (u c)) ((sum EMPTY) u)) = e')) ==> ((((COND (c IN EMPTY)) ((sum EMPTY) u)) ((real_add (u c)) ((sum EMPTY) u))) = (((COND g') t') e')))))) ==> ((\e'. (((c IN EMPTY) = g') ==> ((g' ==> (((sum EMPTY) u) = t')) ==> (((~ g') ==> (((real_add (u c)) ((sum EMPTY) u)) = e')) ==> ((((COND (c IN EMPTY)) ((sum EMPTY) u)) ((real_add (u c)) ((sum EMPTY) u))) = (((COND g') t') e')))))) e')) = ((\e'. (((c IN EMPTY) = g') ==> ((g' ==> (((sum EMPTY) u) = t')) ==> (((~ g') ==> (((real_add (u c)) ((sum EMPTY) u)) = e')) ==> ((((COND (c IN EMPTY)) ((sum EMPTY) u)) ((real_add (u c)) ((sum EMPTY) u))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= csum part cEMPTY f2 f3 c==> c==> c~ f1 c= creal_add * f2 f0 csum part cEMPTY f2 b0 c= cCOND cIN f0 part cEMPTY csum part cEMPTY f2 creal_add * f2 f0 csum part cEMPTY f2 cCOND f1 f3 b0 * / c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= csum part cEMPTY f2 f3 c==> c==> c~ f1 c= creal_add * f2 f0 csum part cEMPTY f2 b0 c= cCOND cIN f0 part cEMPTY csum part cEMPTY f2 creal_add * f2 f0 csum part cEMPTY f2 cCOND f1 f3 b0 f4 * / c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= csum part cEMPTY f2 f3 c==> c==> c~ f1 c= creal_add * f2 f0 csum part cEMPTY f2 b0 c= cCOND cIN f0 part cEMPTY csum part cEMPTY f2 creal_add * f2 f0 csum part cEMPTY f2 cCOND f1 f3 b0 f4
+ |- ((\p'. (!q'. (((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) = p') ==> ((p' ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> (((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> b0 b1 f3
+ (x = c), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- ((c = c) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c==> c= f1 f1 cF
- (a = c) |- ((~ (b = c)) ==> ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= f0 f1 c==> c~ c= f2 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY
- |- (((!g. ((!x. ((x IN (b INSERT (c INSERT EMPTY))) ==> (((% (u x)) x) = (g x)))) ==> (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = ((vsum (b INSERT (c INSERT EMPTY))) g)))) ==> ((\g. ((!x. ((x IN (b INSERT (c INSERT EMPTY))) ==> (((% (u x)) x) = (g x)))) ==> (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = ((vsum (b INSERT (c INSERT EMPTY))) g)))) g)) = ((\g. ((!x. ((x IN (b INSERT (c INSERT EMPTY))) ==> (((% (u x)) x) = (g x)))) ==> (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = ((vsum (b INSERT (c INSERT EMPTY))) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c% * f2 b1 b1 * b0 b1 c= cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * f2 b1 b1 cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 * / c==> ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c% * f2 b1 b1 * b0 b1 c= cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * f2 b1 b1 cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 f3 * / c==> ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c% * f2 b1 b1 * b0 b1 c= cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * f2 b1 b1 cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 f3
+ |- (((!g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((sum (c INSERT EMPTY)) u) = t')) ==> (((~ g') ==> (((real_add (u b)) ((sum (c INSERT EMPTY)) u)) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((sum (c INSERT EMPTY)) u)) ((real_add (u b)) ((sum (c INSERT EMPTY)) u))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((sum (c INSERT EMPTY)) u) = t')) ==> (((~ g') ==> (((real_add (u b)) ((sum (c INSERT EMPTY)) u)) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((sum (c INSERT EMPTY)) u)) ((real_add (u b)) ((sum (c INSERT EMPTY)) u))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((sum (c INSERT EMPTY)) u) = t')) ==> (((~ g') ==> (((real_add (u b)) ((sum (c INSERT EMPTY)) u)) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((sum (c INSERT EMPTY)) u)) ((real_add (u b)) ((sum (c INSERT EMPTY)) u))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= csum * * part cINSERT f1 part cEMPTY f2 b1 c==> c==> c~ b0 c= creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY csum * * part cINSERT f1 part cEMPTY f2 creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 cCOND b0 b1 b2 * / ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= csum * * part cINSERT f1 part cEMPTY f2 b1 c==> c==> c~ b0 c= creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY csum * * part cINSERT f1 part cEMPTY f2 creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 cCOND b0 b1 b2 f3 * / ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= csum * * part cINSERT f1 part cEMPTY f2 b1 c==> c==> c~ b0 c= creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY csum * * part cINSERT f1 part cEMPTY f2 creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 cCOND b0 b1 b2 f3
+ (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- ((~ (x = b)) /\ (~ (x = c)))
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3
- |- ((~ (b IN (c INSERT EMPTY))) ==> (((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) = ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))))
T c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0
- |- ((!x. ((x IN (b INSERT (c INSERT EMPTY))) ==> (((% (u x)) x) = (g x)))) ==> (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = ((vsum (b INSERT (c INSERT EMPTY))) g)))
T c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c% * f2 b0 b0 * f3 b0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3
- (c IN EMPTY) |- ((c IN EMPTY) /\ ((real_of_num (NUMERAL _0)) = (real_of_num (NUMERAL _0))))
T c==> cIN f0 part cEMPTY c/\ cIN f0 part cEMPTY c= creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (~ (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a))))), ((((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) ==> F) |- F
T c==> c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 c==> c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 cF cF
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
- |- (((!g'. (!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((vec (NUMERAL _0)) = t')) ==> (((~ g') ==> (((vector_add ((% (u c)) c)) (vec (NUMERAL _0))) = e')) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((vec (NUMERAL _0)) = t')) ==> (((~ g') ==> (((vector_add ((% (u c)) c)) (vec (NUMERAL _0))) = e')) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((vec (NUMERAL _0)) = t')) ==> (((~ g') ==> (((vector_add ((% (u c)) c)) (vec (NUMERAL _0))) = e')) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cIN f0 part cEMPTY b0 c==> c==> b0 c= cvec cNUMERAL c_0 b1 c==> c==> c~ b0 c= cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 b2 c= cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 cCOND b0 b1 b2 * / ! ! c==> c= cIN f0 part cEMPTY b0 c==> c==> b0 c= cvec cNUMERAL c_0 b1 c==> c==> c~ b0 c= cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 b2 c= cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f2 * / ! ! c==> c= cIN f0 part cEMPTY b0 c==> c==> b0 c= cvec cNUMERAL c_0 b1 c==> c==> c~ b0 c= cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 b2 c= cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f2
- |- (((!a. (!b. (!c. ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F)))) ==> ((\a. (!b. (!c. ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F)))) a)) = ((\a. (!b. (!c. ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F)))) a))
T c= c==> ! ! ! c==> c~ ! c= c\/ c= b3 b0 c\/ c= b3 b1 c= b3 b2 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF * / ! ! c==> c~ ! c= c\/ c= b3 b0 c\/ c= b3 b1 c= b3 b2 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF f0 * / ! ! c==> c~ ! c= c\/ c= b3 b0 c\/ c= b3 b1 c= b3 b2 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF f0
+ |- ((\x. (!y. (!z. ((collinear (x INSERT (y INSERT (z INSERT EMPTY)))) = (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub x) y) INSERT (((vector_sub z) y) INSERT EMPTY)))))))) x)
T * / ! ! c= ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 b1 * * part cINSERT cvector_sub b2 b1 part cEMPTY f0
+ |- (((!z. ((collinear (x INSERT (y INSERT (z INSERT EMPTY)))) = (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub x) y) INSERT (((vector_sub z) y) INSERT EMPTY)))))) ==> ((\z. ((collinear (x INSERT (y INSERT (z INSERT EMPTY)))) = (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub x) y) INSERT (((vector_sub z) y) INSERT EMPTY)))))) z)) = ((\z. ((collinear (x INSERT (y INSERT (z INSERT EMPTY)))) = (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub x) y) INSERT (((vector_sub z) y) INSERT EMPTY)))))) z))
T c= c==> ! c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub b0 f1 part cEMPTY * / c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub b0 f1 part cEMPTY f2 * / c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub b0 f1 part cEMPTY f2
+ |- (((!y. (collinear (x INSERT (y INSERT EMPTY)))) ==> ((\y. (collinear (x INSERT (y INSERT EMPTY)))) y)) = ((\y. (collinear (x INSERT (y INSERT EMPTY)))) y))
T c= c==> ! ccollinear * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / ccollinear * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1 * / ccollinear * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
+ |- ((~ (b IN (c INSERT EMPTY))) ==> (((real_add (u b)) ((sum (c INSERT EMPTY)) u)) = ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))))
T c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1
+ |- (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = ((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. (((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c= c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_add * b2 f1 cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 cvector_add c% * b2 f1 f1 cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 b1 b1 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (a = b)) |- ((~ (a = b)) /\ ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c~ c= f0 f1 c/\ c~ c= f0 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((b IN (c INSERT EMPTY)) ==> (((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))) = t')) ==> (((~ (b IN (c INSERT EMPTY))) ==> (((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))))) = (((COND (b IN (c INSERT EMPTY))) t') e'))))
T c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 f3 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cvector_add * / c% * f2 b0 b0 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 f4 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cvector_add * / c% * f2 b0 b0 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY f3 f4
+ |- (((!e'. (((c IN EMPTY) = g') ==> ((g' ==> (((vsum EMPTY) (\v. ((% (u v)) v))) = t')) ==> (((~ g') ==> (((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))) = (((COND g') t') e')))))) ==> ((\e'. (((c IN EMPTY) = g') ==> ((g' ==> (((vsum EMPTY) (\v. ((% (u v)) v))) = t')) ==> (((~ g') ==> (((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))) = (((COND g') t') e')))))) e')) = ((\e'. (((c IN EMPTY) = g') ==> ((g' ==> (((vsum EMPTY) (\v. ((% (u v)) v))) = t')) ==> (((~ g') ==> (((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cvsum part cEMPTY / c% * f2 b1 b1 f3 c==> c==> c~ f1 c= cvector_add * / c% * f2 b1 b1 f0 cvsum part cEMPTY / c% * f2 b1 b1 b0 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f2 b1 b1 cvector_add * / c% * f2 b1 b1 f0 cvsum part cEMPTY / c% * f2 b1 b1 cCOND f1 f3 b0 * / c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cvsum part cEMPTY / c% * f2 b1 b1 f3 c==> c==> c~ f1 c= cvector_add * / c% * f2 b1 b1 f0 cvsum part cEMPTY / c% * f2 b1 b1 b0 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f2 b1 b1 cvector_add * / c% * f2 b1 b1 f0 cvsum part cEMPTY / c% * f2 b1 b1 cCOND f1 f3 b0 f4 * / c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cvsum part cEMPTY / c% * f2 b1 b1 f3 c==> c==> c~ f1 c= cvector_add * / c% * f2 b1 b1 f0 cvsum part cEMPTY / c% * f2 b1 b1 b0 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f2 b1 b1 cvector_add * / c% * f2 b1 b1 f0 cvsum part cEMPTY / c% * f2 b1 b1 cCOND f1 f3 b0 f4
+ (~ (a = b)), (~ (b = c)) |- ((((\u. ((((real_add (u b)) (u c)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% (u b)) b)) ((% (u c)) c)) = a))) f) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = T)
T c==> c~ c= f0 f1 c==> c~ c= f1 f2 c= c==> * / c/\ c= creal_add * b0 f1 * b0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% * b0 f1 f1 c% * b0 f2 f2 f0 f3 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((!x. (~ (x IN EMPTY))) ==> ((\x. (~ (x IN EMPTY))) x)) = ((\x. (~ (x IN EMPTY))) x))
T c= c==> ! c~ cIN b0 part cEMPTY * / c~ cIN b0 part cEMPTY f0 * / c~ cIN b0 part cEMPTY f0
- (x = a), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f1 c==> c~ cF cF
+ (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- (~ (x = a))
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f1 c~ c= f0 f1
+ (x = a), (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- ((a = a) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 c==> c= f1 f1 cF
- |- ((!c. (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) = T)
T c= ! ! c= c\/ c= b1 f0 c\/ c= b1 f1 c= b1 b0 c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f0 cT
- |- ((\e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = t')) ==> (((~ g') ==> (((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (((COND g') t') e')))))) e')
T * / c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 f4 c==> c==> c~ f2 c= creal_add * f3 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 b0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 creal_add * f3 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 cCOND f2 f4 b0 f5
+ |- ((\x. (!f. (!s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f)))))))) x)
T * / ! ! c==> cFINITE b2 c= cvsum * * part cINSERT b0 b2 b1 cCOND cIN b0 b2 cvsum b2 b1 cvector_add * b1 b0 cvsum b2 b1 f0
+ |- (((c IN EMPTY) ==> (((vsum EMPTY) (\v. ((% (u v)) v))) = t')) ==> (((~ (c IN EMPTY)) ==> (((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))) = (((COND (c IN EMPTY)) t') e'))))
T c==> c==> cIN f0 part cEMPTY c= cvsum part cEMPTY / c% * f1 b0 b0 f2 c==> c==> c~ cIN f0 part cEMPTY c= cvector_add * / c% * f1 b0 b0 f0 cvsum part cEMPTY / c% * f1 b0 b0 f3 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f1 b0 b0 cvector_add * / c% * f1 b0 b0 f0 cvsum part cEMPTY / c% * f1 b0 b0 cCOND cIN f0 part cEMPTY f2 f3
- (a = b), ((~ (a = c)) ==> ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) |- ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c= f0 f1 c==> c==> c~ c= f0 f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (b IN (c INSERT EMPTY))) |- ((~ (b IN (c INSERT EMPTY))) /\ (((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) = ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))))
T c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c/\ c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cvector_add * / c% * f2 b0 b0 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- ((x INSERT (x INSERT s)) = (x INSERT s))
T c= * * part cINSERT f0 * * part cINSERT f0 f1 * * part cINSERT f0 f1
- |- ((\g. ((!x. ((x IN (b INSERT (c INSERT EMPTY))) ==> (((% (u x)) x) = (g x)))) ==> (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = ((vsum (b INSERT (c INSERT EMPTY))) g)))) g)
T * / c==> ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c% * f2 b1 b1 * b0 b1 c= cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * f2 b1 b1 cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 f3
- (~ (b = c)), (a = c) |- ((~ (b = c)) /\ ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c~ c= f0 f1 c==> c= f2 f1 c/\ c~ c= f0 f1 c==> cIN f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- (((!y. (!z. ((collinear (x INSERT (y INSERT (z INSERT EMPTY)))) = (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub x) y) INSERT (((vector_sub z) y) INSERT EMPTY))))))) ==> ((\y. (!z. ((collinear (x INSERT (y INSERT (z INSERT EMPTY)))) = (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub x) y) INSERT (((vector_sub z) y) INSERT EMPTY))))))) y)) = ((\y. (!z. ((collinear (x INSERT (y INSERT (z INSERT EMPTY)))) = (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub x) y) INSERT (((vector_sub z) y) INSERT EMPTY))))))) y))
T c= c==> ! ! c= ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 b0 * * part cINSERT cvector_sub b1 b0 part cEMPTY * / ! c= ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 b0 * * part cINSERT cvector_sub b1 b0 part cEMPTY f1 * / ! c= ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 b0 * * part cINSERT cvector_sub b1 b0 part cEMPTY f1
- |- (((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F) = (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a))))))
T c= c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- |- (((!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((u c) = e')) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((u c) = e')) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((u c) = e')) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= creal_of_num cNUMERAL c_0 b0 c==> c==> c~ f1 c= * f2 f0 b1 c= cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f0 cCOND f1 b0 b1 * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= creal_of_num cNUMERAL c_0 b0 c==> c==> c~ f1 c= * f2 f0 b1 c= cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f0 cCOND f1 b0 b1 f3 * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= creal_of_num cNUMERAL c_0 b0 c==> c==> c~ f1 c= * f2 f0 b1 c= cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f0 cCOND f1 b0 b1 f3
+ (~ (a = b)), (~ (b = c)) |- ((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c~ c= f0 f1 c==> c~ c= f1 f2 c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((sum (c INSERT EMPTY)) u) = t')) ==> (((~ g') ==> (((real_add (u b)) ((sum (c INSERT EMPTY)) u)) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((sum (c INSERT EMPTY)) u)) ((real_add (u b)) ((sum (c INSERT EMPTY)) u))) = (((COND g') t') e')))))
T c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= csum * * part cINSERT f1 part cEMPTY f3 f4 c==> c==> c~ f2 c= creal_add * f3 f0 csum * * part cINSERT f1 part cEMPTY f3 f5 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY csum * * part cINSERT f1 part cEMPTY f3 creal_add * f3 f0 csum * * part cINSERT f1 part cEMPTY f3 cCOND f2 f4 f5
+ (((vector_add ((% (f b)) b)) ((% (f c)) c)) = a) |- ((((vector_sub a) b) = ((% (f c)) ((vector_sub c) b))) = (((vector_sub ((vector_add ((% (f b)) b)) ((% (f c)) c))) b) = ((% (f c)) ((vector_sub c) b))))
T c==> c= cvector_add c% * f0 f1 f1 c% * f0 f2 f2 f3 c= c= cvector_sub f3 f1 c% * f0 f2 cvector_sub f2 f1 c= cvector_sub cvector_add c% * f0 f1 f1 c% * f0 f2 f2 f1 c% * f0 f2 cvector_sub f2 f1
- |- (!x. ((x IN (b INSERT (c INSERT EMPTY))) ==> (((% (u x)) x) = ((% (u x)) x))))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c% * f3 f0 f0 c% * f3 f0 f0
+ |- ((\s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f)))))) s)
T * / c==> cFINITE b0 c= csum * * part cINSERT f0 b0 f1 cCOND cIN f0 b0 csum b0 f1 creal_add * f1 f0 csum b0 f1 f2
+ |- (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = (((COND (b IN (c INSERT EMPTY))) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))))))
T c= cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cvector_add * / c% * f2 b0 b0 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0
- (~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) |- ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) /\ F)
T c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 c/\ c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF
- |- (((!g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> (((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> (((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> (((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 b1 c==> c==> c~ b0 c= cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cCOND b0 b1 b2 * / ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 b1 c==> c==> c~ b0 c= cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cCOND b0 b1 b2 f3 * / ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 b1 c==> c==> c~ b0 c= cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cCOND b0 b1 b2 f3
- (c IN EMPTY) |- ((c IN EMPTY) /\ ((vec (NUMERAL _0)) = (vec (NUMERAL _0))))
T c==> cIN f0 part cEMPTY c/\ cIN f0 part cEMPTY c= cvec cNUMERAL c_0 cvec cNUMERAL c_0
+ |- ((((COND (b IN (c INSERT EMPTY))) ((sum (c INSERT EMPTY)) u)) ((real_add (u b)) ((sum (c INSERT EMPTY)) u))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))))
T c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY csum * * part cINSERT f1 part cEMPTY f2 creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1
+ |- ((\x. (!f. (!s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f)))))))) x)
T * / ! ! c==> cFINITE b2 c= csum * * part cINSERT b0 b2 b1 cCOND cIN b0 b2 csum b2 b1 creal_add * b1 b0 csum b2 b1 f0
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ (~ (((real_sub ((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (f c))) (b $ i))) ((real_mul (f c)) (c $ i)))) (b $ i)) = ((real_mul (f c)) ((real_sub (c $ i)) (b $ i))))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_sub creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 * f0 f1 c$ f2 f3 creal_mul * f0 f1 c$ f1 f3 c$ f2 f3 creal_mul * f0 f1 creal_sub c$ f1 f3 c$ f2 f3 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- ((((b IN (c INSERT EMPTY)) = (b IN (c INSERT EMPTY))) ==> (((b IN (c INSERT EMPTY)) ==> (((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))) = t')) ==> (((~ (b IN (c INSERT EMPTY))) ==> (((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))))) = (((COND (b IN (c INSERT EMPTY))) t') e'))))) = (((b IN (c INSERT EMPTY)) ==> (((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))) = t')) ==> (((~ (b IN (c INSERT EMPTY))) ==> (((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))))) = (((COND (b IN (c INSERT EMPTY))) t') e')))))
T c= c==> c= cIN f0 * * part cINSERT f1 part cEMPTY cIN f0 * * part cINSERT f1 part cEMPTY c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 f3 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cvector_add * / c% * f2 b0 b0 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 f4 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cvector_add * / c% * f2 b0 b0 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY f3 f4 c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 f3 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cvector_add * / c% * f2 b0 b0 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 f4 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cvector_add * / c% * f2 b0 b0 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY f3 f4
- (x IN (b INSERT (c INSERT EMPTY))) |- ((x IN (b INSERT (c INSERT EMPTY))) /\ (((% (u x)) x) = ((% (u x)) x)))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c% * f3 f0 f0 c% * f3 f0 f0
+ (((vector_add ((% (f b)) b)) ((% (f c)) c)) = a) |- (a = ((vector_add ((% (f b)) b)) ((% (f c)) c)))
T c==> c= cvector_add c% * f0 f1 f1 c% * f0 f2 f2 f3 c= f3 cvector_add c% * f0 f1 f1 c% * f0 f2 f2
- ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((vec (NUMERAL _0)) = t')) ==> (((~ g') ==> (((vector_add ((% (u c)) c)) (vec (NUMERAL _0))) = e')) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cvec cNUMERAL c_0 b0 c==> c==> c~ f1 c= cvector_add c% * f2 f0 f0 cvec cNUMERAL c_0 b1 c= cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cvec cNUMERAL c_0 cCOND f1 b0 b1 f3
+ ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- ((x = a) ==> F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f1 c==> c= f0 f1 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ (c IN EMPTY)) ==> ((u c) = (u c)))
T c==> c~ cIN f0 part cEMPTY c= * f1 f0 * f1 f0
- |- ((\c. ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F)) c)
T * / c==> c~ ! c= c\/ c= b1 f0 c\/ c= b1 f1 c= b1 b0 c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f0 cF f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((b IN (c INSERT EMPTY)) ==> (((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))) = (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))))
T c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0
- (x IN (b INSERT (c INSERT EMPTY))) |- ((x IN (b INSERT (c INSERT EMPTY))) = T)
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ ((~ (a = b)) ==> ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) |- ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c==> c~ c= f0 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (a = b)), (~ (b = c)) |- ((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. (((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c~ c= f0 f1 c==> c~ c= f1 f2 c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_add * b2 f1 cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 cvector_add c% * b2 f1 f1 cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 b1 b1 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((COND (c IN EMPTY)) ((sum EMPTY) u)) ((real_add (u c)) ((sum EMPTY) u))) = (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))
T c= cCOND cIN f0 part cEMPTY csum part cEMPTY f1 creal_add * f1 f0 csum part cEMPTY f1 cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f1 f0
+ (x = b), (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- ((x = b) /\ F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f2 c/\ c= f0 f1 cF
- |- ((\t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = t')) ==> (((~ g') ==> (((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 b0 c==> c==> c~ f2 c= creal_add * f3 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 creal_add * f3 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 cCOND f2 b0 b1 f4
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- (((!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = t')) ==> (((~ g') ==> (((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = t')) ==> (((~ g') ==> (((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = t')) ==> (((~ g') ==> (((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 b0 c==> c==> c~ f2 c= creal_add * f3 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 creal_add * f3 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 cCOND f2 b0 b1 * / ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 b0 c==> c==> c~ f2 c= creal_add * f3 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 creal_add * f3 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 cCOND f2 b0 b1 f4 * / ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 b0 c==> c==> c~ f2 c= creal_add * f3 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 creal_add * f3 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 cCOND f2 b0 b1 f4
+ |- (((c = c) ==> F) = F)
T c= c==> c= f0 f0 cF cF
+ |- ((\f. (((vsum EMPTY) f) = (vec (NUMERAL _0)))) f)
T * / c= cvsum part cEMPTY b0 cvec cNUMERAL c_0 f0
+ ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- ((((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (c IN EMPTY) |- ((c IN EMPTY) = T)
T c==> cIN f0 part cEMPTY c= cIN f0 part cEMPTY cT
- |- ((\e'. (((c IN EMPTY) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((u c) = e')) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND g') t') e')))))) e')
T * / c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= creal_of_num cNUMERAL c_0 f2 c==> c==> c~ f1 c= * f3 f0 b0 c= cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f0 cCOND f1 f2 b0 f4
+ (x = a), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- ((x = a) /\ F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f1 c/\ c= f0 f1 cF
+ |- ((\f. (((sum EMPTY) f) = (real_of_num (NUMERAL _0)))) f)
T * / c= csum part cEMPTY b0 creal_of_num cNUMERAL c_0 f0
- |- ((((~ (b IN (c INSERT EMPTY))) ==> (((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) = ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))))) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))))) = ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))))))
T c= c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1
+ (x = b), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- F
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f2 cF
+ |- (((FINITE EMPTY) ==> (((sum (c INSERT EMPTY)) u) = (((COND (c IN EMPTY)) ((sum EMPTY) u)) ((real_add (u c)) ((sum EMPTY) u))))) = (((sum (c INSERT EMPTY)) u) = (((COND (c IN EMPTY)) ((sum EMPTY) u)) ((real_add (u c)) ((sum EMPTY) u)))))
T c= c==> cFINITE part cEMPTY c= csum * * part cINSERT f0 part cEMPTY f1 cCOND cIN f0 part cEMPTY csum part cEMPTY f1 creal_add * f1 f0 csum part cEMPTY f1 c= csum * * part cINSERT f0 part cEMPTY f1 cCOND cIN f0 part cEMPTY csum part cEMPTY f1 creal_add * f1 f0 csum part cEMPTY f1
- |- (((~ (x IN EMPTY)) ==> ((x IN EMPTY) = F)) = ((x IN EMPTY) = F))
T c= c==> c~ cIN f0 part cEMPTY c= cIN f0 part cEMPTY cF c= cIN f0 part cEMPTY cF
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((~ (c IN EMPTY)) ==> (((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v)))) = ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))
T c==> c~ cIN f0 part cEMPTY c= cvector_add * / c% * f1 b0 b0 f0 cvsum part cEMPTY / c% * f1 b0 b0 cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0
+ (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- (~ (x = c))
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 c~ c= f0 f3
+ |- ((((~ (b IN (c INSERT EMPTY))) ==> (((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) = ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))))) ==> ((((COND (b IN (c INSERT EMPTY))) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))))) = ((((COND (b IN (c INSERT EMPTY))) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))))))
T c= c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cvector_add * / c% * f2 b0 b0 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cvector_add * / c% * f2 b0 b0 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cvector_add * / c% * f2 b0 b0 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0
- |- (((x IN (b INSERT (c INSERT EMPTY))) ==> (((% (u x)) x) = ((% (u x)) x))) = T)
T c= c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c% * f3 f0 f0 c% * f3 f0 f0 cT
- |- ((\a. (!b. (!c. ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F)))) a)
T * / ! ! c==> c~ ! c= c\/ c= b3 b0 c\/ c= b3 b1 c= b3 b2 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF f0
+ |- ((!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) = (x IN (c INSERT (b INSERT (a INSERT EMPTY)))))) = ((a INSERT (b INSERT (c INSERT EMPTY))) = (c INSERT (b INSERT (a INSERT EMPTY)))))
T c= ! c= cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- (((real_sub ((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (f c))) (b $ i))) ((real_mul (f c)) (c $ i)))) (b $ i)) = ((real_mul (f c)) ((real_sub (c $ i)) (b $ i))))
T c= creal_sub creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 * f0 f1 c$ f2 f3 creal_mul * f0 f1 c$ f1 f3 c$ f2 f3 creal_mul * f0 f1 creal_sub c$ f1 f3 c$ f2 f3
+ |- (((!x. (((vector_add x) (vec (NUMERAL _0))) = x)) ==> ((\x. (((vector_add x) (vec (NUMERAL _0))) = x)) x)) = ((\x. (((vector_add x) (vec (NUMERAL _0))) = x)) x))
T c= c==> ! c= cvector_add b0 cvec cNUMERAL c_0 b0 * / c= cvector_add b0 cvec cNUMERAL c_0 b0 f0 * / c= cvector_add b0 cvec cNUMERAL c_0 b0 f0
- |- ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x)
T * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0
+ |- (((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- (x = c), (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- (~ (c = b))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c~ c= f1 f3
- ((~ (a = c)) ==> ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))), ((a = c) ==> ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) |- ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c==> c~ c= f0 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c==> c==> c= f0 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x = b), (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f2 c==> c~ cF cF
- |- (((!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> (((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> (((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> (((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 b0 c==> c==> c~ f2 c= cvector_add c% * f3 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f3 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 cCOND f2 b0 b1 * / ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 b0 c==> c==> c~ f2 c= cvector_add c% * f3 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f3 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 cCOND f2 b0 b1 f4 * / ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 b0 c==> c==> c~ f2 c= cvector_add c% * f3 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f3 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 cCOND f2 b0 b1 f4
+ (~ (c IN EMPTY)) |- ((~ (c IN EMPTY)) /\ (((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v)))) = ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))
T c==> c~ cIN f0 part cEMPTY c/\ c~ cIN f0 part cEMPTY c= cvector_add * / c% * f1 b0 b0 f0 cvsum part cEMPTY / c% * f1 b0 b0 cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0
+ |- (((!s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f)))))) ==> ((\s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f)))))) s)) = ((\s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f)))))) s))
T c= c==> ! c==> cFINITE b0 c= cvsum * * part cINSERT f0 b0 f1 cCOND cIN f0 b0 cvsum b0 f1 cvector_add * f1 f0 cvsum b0 f1 * / c==> cFINITE b0 c= cvsum * * part cINSERT f0 b0 f1 cCOND cIN f0 b0 cvsum b0 f1 cvector_add * f1 f0 cvsum b0 f1 f2 * / c==> cFINITE b0 c= cvsum * * part cINSERT f0 b0 f1 cCOND cIN f0 b0 cvsum b0 f1 cvector_add * f1 f0 cvsum b0 f1 f2
+ (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- (((x = b) \/ (x = a)) ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 c==> c\/ c= f0 f2 c= f0 f1 cF
- |- (((!c. ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F)) ==> ((\c. ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F)) c)) = ((\c. ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F)) c))
T c= c==> ! c==> c~ ! c= c\/ c= b1 f0 c\/ c= b1 f1 c= b1 b0 c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f0 cF * / c==> c~ ! c= c\/ c= b1 f0 c\/ c= b1 f1 c= b1 b0 c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f0 cF f2 * / c==> c~ ! c= c\/ c= b1 f0 c\/ c= b1 f1 c= b1 b0 c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f0 cF f2
- |- ((((b IN (c INSERT EMPTY)) = (b IN (c INSERT EMPTY))) ==> (((b IN (c INSERT EMPTY)) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = t')) ==> (((~ (b IN (c INSERT EMPTY))) ==> (((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (((COND (b IN (c INSERT EMPTY))) t') e'))))) = (((b IN (c INSERT EMPTY)) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = t')) ==> (((~ (b IN (c INSERT EMPTY))) ==> (((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (((COND (b IN (c INSERT EMPTY))) t') e')))))
T c= c==> c= cIN f0 * * part cINSERT f1 part cEMPTY cIN f0 * * part cINSERT f1 part cEMPTY c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 f3 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 f4 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 cCOND cIN f0 * * part cINSERT f1 part cEMPTY f3 f4 c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 f3 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 f4 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 cCOND cIN f0 * * part cINSERT f1 part cEMPTY f3 f4
+ |- ((\e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))) = t')) ==> (((~ g') ==> (((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))))) = (((COND g') t') e')))))) e')
T * / c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b1 b1 f4 c==> c==> c~ f2 c= cvector_add * / c% * f3 b1 b1 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b1 b1 b0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b1 b1 cvector_add * / c% * f3 b1 b1 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b1 b1 cCOND f2 f4 b0 f5
- |- ((c IN EMPTY) ==> ((vec (NUMERAL _0)) = (vec (NUMERAL _0))))
T c==> cIN f0 part cEMPTY c= cvec cNUMERAL c_0 cvec cNUMERAL c_0
+ |- ((real_neg ((real_sub ((real_sub ((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (f c))) (b $ i))) ((real_mul (f c)) (c $ i)))) (b $ i))) ((real_mul (f c)) ((real_sub (c $ i)) (b $ i))))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_sub creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 * f0 f1 c$ f2 f3 creal_mul * f0 f1 c$ f1 f3 c$ f2 f3 creal_mul * f0 f1 creal_sub c$ f1 f3 c$ f2 f3 creal_of_num cNUMERAL c_0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((real_sub ((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (f c))) (b $ i))) ((real_mul (f c)) (c $ i)))) (b $ i)) = ((real_mul (f c)) ((real_sub (c $ i)) (b $ i)))) = (((lambdai. ((real_sub ((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (f c))) (b $ i))) $ i)) ((lambdai. ((real_mul (f c)) (c $ i))) $ i))) $ i)) (b $ i))) $ i) = ((lambdai. ((real_mul (f c)) ((lambdai. ((real_sub (c $ i)) (b $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= creal_sub creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 * f1 f2 c$ f3 f0 creal_mul * f1 f2 c$ f2 f0 c$ f3 f0 creal_mul * f1 f2 creal_sub c$ f2 f0 c$ f3 f0 c= c$ clambda / creal_sub c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 * f1 f2 c$ f3 b1 b1 c$ clambda / creal_mul * f1 f2 c$ f2 b1 b1 b0 c$ f3 b0 f0 c$ clambda / creal_mul * f1 f2 c$ clambda / creal_sub c$ f2 b1 c$ f3 b1 b0 f0
- |- ((((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F) ==> ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F)) = ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F))
T c= c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF
+ |- (((!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> (((vsum EMPTY) (\v. ((% (u v)) v))) = t')) ==> (((~ g') ==> (((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> (((vsum EMPTY) (\v. ((% (u v)) v))) = t')) ==> (((~ g') ==> (((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> (((vsum EMPTY) (\v. ((% (u v)) v))) = t')) ==> (((~ g') ==> (((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cvsum part cEMPTY / c% * f2 b2 b2 b0 c==> c==> c~ f1 c= cvector_add * / c% * f2 b2 b2 f0 cvsum part cEMPTY / c% * f2 b2 b2 b1 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f2 b2 b2 cvector_add * / c% * f2 b2 b2 f0 cvsum part cEMPTY / c% * f2 b2 b2 cCOND f1 b0 b1 * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cvsum part cEMPTY / c% * f2 b2 b2 b0 c==> c==> c~ f1 c= cvector_add * / c% * f2 b2 b2 f0 cvsum part cEMPTY / c% * f2 b2 b2 b1 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f2 b2 b2 cvector_add * / c% * f2 b2 b2 f0 cvsum part cEMPTY / c% * f2 b2 b2 cCOND f1 b0 b1 f3 * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cvsum part cEMPTY / c% * f2 b2 b2 b0 c==> c==> c~ f1 c= cvector_add * / c% * f2 b2 b2 f0 cvsum part cEMPTY / c% * f2 b2 b2 b1 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f2 b2 b2 cvector_add * / c% * f2 b2 b2 f0 cvsum part cEMPTY / c% * f2 b2 b2 cCOND f1 b0 b1 f3
- (a = c) |- (T = ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= f0 f1 c= cT c==> cIN f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY
+ |- ((\t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((sum (c INSERT EMPTY)) u) = t')) ==> (((~ g') ==> (((real_add (u b)) ((sum (c INSERT EMPTY)) u)) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((sum (c INSERT EMPTY)) u)) ((real_add (u b)) ((sum (c INSERT EMPTY)) u))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= csum * * part cINSERT f1 part cEMPTY f3 b0 c==> c==> c~ f2 c= creal_add * f3 f0 csum * * part cINSERT f1 part cEMPTY f3 b1 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY csum * * part cINSERT f1 part cEMPTY f3 creal_add * f3 f0 csum * * part cINSERT f1 part cEMPTY f3 cCOND f2 b0 b1 f4
- |- (((b IN (c INSERT EMPTY)) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = t')) ==> (((~ (b IN (c INSERT EMPTY))) ==> (((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = (((COND (b IN (c INSERT EMPTY))) t') e'))))
T c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 f3 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 f4 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY f3 f4
+ |- ((\e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((sum (c INSERT EMPTY)) u) = t')) ==> (((~ g') ==> (((real_add (u b)) ((sum (c INSERT EMPTY)) u)) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((sum (c INSERT EMPTY)) u)) ((real_add (u b)) ((sum (c INSERT EMPTY)) u))) = (((COND g') t') e')))))) e')
T * / c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= csum * * part cINSERT f1 part cEMPTY f3 f4 c==> c==> c~ f2 c= creal_add * f3 f0 csum * * part cINSERT f1 part cEMPTY f3 b0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY csum * * part cINSERT f1 part cEMPTY f3 creal_add * f3 f0 csum * * part cINSERT f1 part cEMPTY f3 cCOND f2 f4 b0 f5
- ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))) = t')) ==> (((~ g') ==> (((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))))) = (((COND g') t') e')))))
T c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b0 b0 f4 c==> c==> c~ f2 c= cvector_add * / c% * f3 b0 b0 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b0 b0 f5 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b0 b0 cvector_add * / c% * f3 b0 b0 f0 cvsum * * part cINSERT f1 part cEMPTY / c% * f3 b0 b0 cCOND f2 f4 f5
+ |- ((\y. (!z. ((collinear (x INSERT (y INSERT (z INSERT EMPTY)))) = (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub x) y) INSERT (((vector_sub z) y) INSERT EMPTY))))))) y)
T * / ! c= ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 b0 * * part cINSERT cvector_sub b1 b0 part cEMPTY f1
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((~ (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a))))) ==> F) = (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))
T c= c==> c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 cF c= c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1
+ (x = b), (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- (~ (b = b))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f2 c~ c= f1 f1
- (~ (a = c)), (a = b) |- ((~ (a = c)) /\ ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c~ c= f0 f1 c==> c= f0 f2 c/\ c~ c= f0 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY
+ (b = c) |- ((b = c) /\ ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= f0 f1 c/\ c= f0 f1 c==> cIN f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (x = a), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- (~ (a = a))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f1 c~ c= f1 f1
+ (~ (a = b)), (~ (b = c)) |- (((((real_add (f b)) (f c)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% (f b)) b)) ((% (f c)) c)) = a)) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c~ c= f0 f1 c==> c~ c= f1 f2 c==> c/\ c= creal_add * f3 f1 * f3 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% * f3 f1 f1 c% * f3 f2 f2 f0 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((a = b) ==> ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= f0 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y)
T * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1
- ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F), (((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F) ==> ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F)) |- (((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F) /\ ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c/\ c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF
+ |- (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> (((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = ((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> q')))
T c==> c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 f3
+ |- ((((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = ((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) = (((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = ((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c= c==> c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (b IN (c INSERT EMPTY))) |- ((~ (b IN (c INSERT EMPTY))) /\ (((real_add (u b)) ((sum (c INSERT EMPTY)) u)) = ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))))
T c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c/\ c~ cIN f0 * * part cINSERT f1 part cEMPTY c= creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1
- (FINITE s) |- ((FINITE s) /\ (((hull affine) s) = (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum s) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum s) (\v. ((% (u v)) v))) = y)))) y))))))
T c==> cFINITE f0 c/\ cFINITE f0 c= * * part chull part caffine f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum f0 b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum f0 / c% * b2 b3 b3 b1 b1
+ |- ((\f. (!s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f))))))) f)
T * / ! c==> cFINITE b1 c= cvsum * * part cINSERT f0 b1 b0 cCOND cIN f0 b1 cvsum b1 b0 cvector_add * b0 f0 cvsum b1 b0 f1
- |- (((c IN EMPTY) = g') ==> ((g' ==> ((vec (NUMERAL _0)) = t')) ==> (((~ g') ==> (((vector_add ((% (u c)) c)) (vec (NUMERAL _0))) = e')) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND g') t') e')))))
T c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cvec cNUMERAL c_0 f2 c==> c==> c~ f1 c= cvector_add c% * f3 f0 f0 cvec cNUMERAL c_0 f4 c= cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f0 f0 cvec cNUMERAL c_0 cCOND f1 f2 f4
+ ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((~ (c IN EMPTY)) ==> (((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v)))) = ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ==> ((((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))) = (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = ((((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))) = (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))))
T c= c==> c==> c~ cIN f0 part cEMPTY c= cvector_add * / c% * f1 b0 b0 f0 cvsum part cEMPTY / c% * f1 b0 b0 cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f1 b0 b0 cvector_add * / c% * f1 b0 b0 f0 cvsum part cEMPTY / c% * f1 b0 b0 cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f1 b0 b0 cvector_add * / c% * f1 b0 b0 f0 cvsum part cEMPTY / c% * f1 b0 b0 cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0
+ |- (((!q'. (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) = p') ==> ((p' ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = (p' ==> q'))))) ==> ((\q'. (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) = p') ==> ((p' ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = (p' ==> q'))))) q')) = ((\q'. (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) = p') ==> ((p' ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cIN f0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b3 b4 b4 b2 b2 f3 c==> c==> f3 c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= c==> cIN f0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b3 b4 b4 b2 b2 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> f3 b0 * / c==> c= cIN f0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b3 b4 b4 b2 b2 f3 c==> c==> f3 c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= c==> cIN f0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b3 b4 b4 b2 b2 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> f3 b0 f4 * / c==> c= cIN f0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b3 b4 b4 b2 b2 f3 c==> c==> f3 c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= c==> cIN f0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b3 b4 b4 b2 b2 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> f3 b0 f4
+ |- ((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. (((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = y)))) y))))) ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_add * b2 f1 cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 cvector_add c% * b2 f1 f1 cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 b1 b1 c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((~ (c IN EMPTY)) ==> (((vector_add ((% (u c)) c)) (vec (NUMERAL _0))) = ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))
T c==> c~ cIN f0 part cEMPTY c= cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0
+ |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) ==> F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- (?u. ((((real_add (u b)) (u c)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% (u b)) b)) ((% (u c)) c)) = a))), (~ (a = b)), (~ (b = c)) |- (collinear (a INSERT (b INSERT (c INSERT EMPTY))))
T c==> c? / c/\ c= creal_add * b0 f0 * b0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% * b0 f0 f0 c% * b0 f1 f1 f2 c==> c~ c= f2 f0 c==> c~ c= f0 f1 ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- (FINITE s) |- ((FINITE s) /\ ((FINITE (x INSERT s)) = T))
T c==> cFINITE f0 c/\ cFINITE f0 c= cFINITE * * part cINSERT f1 f0 cT
+ |- ((!c. ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) = T)
T c= ! c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cT
+ |- (((!g'. (!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> (((vsum EMPTY) (\v. ((% (u v)) v))) = t')) ==> (((~ g') ==> (((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> (((vsum EMPTY) (\v. ((% (u v)) v))) = t')) ==> (((~ g') ==> (((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> (((vsum EMPTY) (\v. ((% (u v)) v))) = t')) ==> (((~ g') ==> (((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cIN f0 part cEMPTY b0 c==> c==> b0 c= cvsum part cEMPTY / c% * f1 b3 b3 b1 c==> c==> c~ b0 c= cvector_add * / c% * f1 b3 b3 f0 cvsum part cEMPTY / c% * f1 b3 b3 b2 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f1 b3 b3 cvector_add * / c% * f1 b3 b3 f0 cvsum part cEMPTY / c% * f1 b3 b3 cCOND b0 b1 b2 * / ! ! c==> c= cIN f0 part cEMPTY b0 c==> c==> b0 c= cvsum part cEMPTY / c% * f1 b3 b3 b1 c==> c==> c~ b0 c= cvector_add * / c% * f1 b3 b3 f0 cvsum part cEMPTY / c% * f1 b3 b3 b2 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f1 b3 b3 cvector_add * / c% * f1 b3 b3 f0 cvsum part cEMPTY / c% * f1 b3 b3 cCOND b0 b1 b2 f2 * / ! ! c==> c= cIN f0 part cEMPTY b0 c==> c==> b0 c= cvsum part cEMPTY / c% * f1 b3 b3 b1 c==> c==> c~ b0 c= cvector_add * / c% * f1 b3 b3 f0 cvsum part cEMPTY / c% * f1 b3 b3 b2 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f1 b3 b3 cvector_add * / c% * f1 b3 b3 f0 cvsum part cEMPTY / c% * f1 b3 b3 cCOND b0 b1 b2 f2
+ |- ((FINITE (a INSERT EMPTY)) = T)
T c= cFINITE * * part cINSERT f0 part cEMPTY cT
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ (((real_add (f b)) (f c)) = (real_of_num (NUMERAL (BIT1 _0)))), (((vector_add ((% (f b)) b)) ((% (f c)) c)) = a) |- ((\c. (((vector_sub a) b) = ((% c) ((vector_sub c) b)))) (f c))
T c==> c= creal_add * f0 f1 * f0 f2 creal_of_num cNUMERAL cBIT1 c_0 c==> c= cvector_add c% * f0 f1 f1 c% * f0 f2 f2 f3 * / c= cvector_sub f3 f1 c% b0 cvector_sub f2 f1 * f0 f2
+ |- ((!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a))))) = (!x. ((x IN (a INSERT (b INSERT (c INSERT EMPTY)))) = (x IN (c INSERT (b INSERT (a INSERT EMPTY)))))))
T c= ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 ! c= cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
+ |- ((~ (a = b)) ==> ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c~ c= f0 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (x = a), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- F
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f1 cF
- (~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) |- F
T c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (x = b), (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- F
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f2 cF
+ |- ((b = c) ==> ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= f0 f1 c==> cIN f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((\e'. (((c IN EMPTY) = g') ==> ((g' ==> (((vsum EMPTY) (\v. ((% (u v)) v))) = t')) ==> (((~ g') ==> (((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))) = (((COND g') t') e')))))) e')
T * / c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cvsum part cEMPTY / c% * f2 b1 b1 f3 c==> c==> c~ f1 c= cvector_add * / c% * f2 b1 b1 f0 cvsum part cEMPTY / c% * f2 b1 b1 b0 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f2 b1 b1 cvector_add * / c% * f2 b1 b1 f0 cvsum part cEMPTY / c% * f2 b1 b1 cCOND f1 f3 b0 f4
+ (x = b), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- ((b = b) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f2 c==> c= f1 f1 cF
+ |- (((~ (c IN EMPTY)) ==> (((real_add (u c)) ((sum EMPTY) u)) = e')) ==> ((((COND (c IN EMPTY)) ((sum EMPTY) u)) ((real_add (u c)) ((sum EMPTY) u))) = (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) e')))
T c==> c==> c~ cIN f0 part cEMPTY c= creal_add * f1 f0 csum part cEMPTY f1 f2 c= cCOND cIN f0 part cEMPTY csum part cEMPTY f1 creal_add * f1 f0 csum part cEMPTY f1 cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 f2
+ |- ((\t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> (((sum EMPTY) u) = t')) ==> (((~ g') ==> (((real_add (u c)) ((sum EMPTY) u)) = e')) ==> ((((COND (c IN EMPTY)) ((sum EMPTY) u)) ((real_add (u c)) ((sum EMPTY) u))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= csum part cEMPTY f2 b0 c==> c==> c~ f1 c= creal_add * f2 f0 csum part cEMPTY f2 b1 c= cCOND cIN f0 part cEMPTY csum part cEMPTY f2 creal_add * f2 f0 csum part cEMPTY f2 cCOND f1 b0 b1 f3
- (x = b), (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- (~ (b = a))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f2 c~ c= f1 f2
+ (((real_add (f b)) (f c)) = (real_of_num (NUMERAL (BIT1 _0)))), (((vector_add ((% (f b)) b)) ((% (f c)) c)) = a) |- (((vector_sub a) b) = ((% (f c)) ((vector_sub c) b)))
T c==> c= creal_add * f0 f1 * f0 f2 creal_of_num cNUMERAL cBIT1 c_0 c==> c= cvector_add c% * f0 f1 f1 c% * f0 f2 f2 f3 c= cvector_sub f3 f1 c% * f0 f2 cvector_sub f2 f1
- |- ((\g'. (!t'. (!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((u c) = e')) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cIN f0 part cEMPTY b0 c==> c==> b0 c= creal_of_num cNUMERAL c_0 b1 c==> c==> c~ b0 c= * f1 f0 b2 c= cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f1 f0 cCOND b0 b1 b2 f2
- |- ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))))
T c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0
- |- ((!x. ((x IN (b INSERT (c INSERT EMPTY))) ==> (((% (u x)) x) = ((% (u x)) x)))) ==> (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = ((vsum (b INSERT (c INSERT EMPTY))) (\x. ((% (u x)) x)))))
T c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c% * f2 b0 b0 c% * f2 b0 b0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0
+ |- (((FINITE (b INSERT (c INSERT EMPTY))) ==> (((hull affine) (b INSERT (c INSERT EMPTY))) = (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y)))))) = (((hull affine) (b INSERT (c INSERT EMPTY))) = (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))))
T c= c==> cFINITE * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * b2 b3 b3 b1 b1 c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * b2 b3 b3 b1 b1
+ |- (((~ (b IN (c INSERT EMPTY))) ==> (((real_add (u b)) ((sum (c INSERT EMPTY)) u)) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((sum (c INSERT EMPTY)) u)) ((real_add (u b)) ((sum (c INSERT EMPTY)) u))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) e')))
T c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 f3 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY csum * * part cINSERT f1 part cEMPTY f2 creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 f3
- ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x = c) |- (F = F)
T c==> c= f0 f1 c= cF cF
- ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))), (((x = b) \/ (x = c)) ==> F) |- F
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f1 c==> c==> c\/ c= f0 f2 c= f0 f3 cF cF
+ (((real_add (f b)) (f c)) = (real_of_num (NUMERAL (BIT1 _0)))) |- ((((vector_sub ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (f c))) b)) ((% (f c)) c))) b) = ((% (f c)) ((vector_sub c) b))) = (((vector_sub ((vector_add ((% (f b)) b)) ((% (f c)) c))) b) = ((% (f c)) ((vector_sub c) b))))
T c==> c= creal_add * f0 f1 * f0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= c= cvector_sub cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 * f0 f2 f1 c% * f0 f2 f2 f1 c% * f0 f2 cvector_sub f2 f1 c= cvector_sub cvector_add c% * f0 f1 f1 c% * f0 f2 f2 f1 c% * f0 f2 cvector_sub f2 f1
+ |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
+ (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))), ((x = b) \/ (x = c)) |- (((x = b) \/ (x = c)) /\ F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f1 c==> c\/ c= f0 f2 c= f0 f3 c/\ c\/ c= f0 f2 c= f0 f3 cF
+ |- (((sum EMPTY) f) = (real_of_num (NUMERAL _0)))
T c= csum part cEMPTY f0 creal_of_num cNUMERAL c_0
+ |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- |- (((!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) ==> ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s)) = ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s))
T c= c==> ! c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2 * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2
- |- (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = ((vsum (b INSERT (c INSERT EMPTY))) (\x. ((% (u x)) x))))
T c= cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0
- ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (a = c) |- ((b = c) ==> ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= f0 f1 c==> c= f2 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\x. (~ (x IN EMPTY))) x)
T * / c~ cIN b0 part cEMPTY f0
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ |- (((b IN (c INSERT EMPTY)) ==> (((sum (c INSERT EMPTY)) u) = t')) ==> (((~ (b IN (c INSERT EMPTY))) ==> (((real_add (u b)) ((sum (c INSERT EMPTY)) u)) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((sum (c INSERT EMPTY)) u)) ((real_add (u b)) ((sum (c INSERT EMPTY)) u))) = (((COND (b IN (c INSERT EMPTY))) t') e'))))
T c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= csum * * part cINSERT f1 part cEMPTY f2 f3 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 f4 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY csum * * part cINSERT f1 part cEMPTY f2 creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 cCOND cIN f0 * * part cINSERT f1 part cEMPTY f3 f4
+ |- ((c IN EMPTY) ==> (((sum EMPTY) u) = (real_of_num (NUMERAL _0))))
T c==> cIN f0 part cEMPTY c= csum part cEMPTY f1 creal_of_num cNUMERAL c_0
- (a = b) |- ((a = c) ==> ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= f0 f1 c==> c= f0 f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (a = b)) |- ((~ (b = c)) ==> ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c~ c= f0 f1 c==> c~ c= f1 f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- ((\s. ((FINITE s) ==> (FINITE (x INSERT s)))) s)
T * / c==> cFINITE b0 cFINITE * * part cINSERT f0 b0 f1
- |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (g i)))) ==> (((sum (m .. n)) f) = ((sum (m .. n)) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 f2 csum * * part c.. f0 f1 f3
- |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- (~ F), (x = b), (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f2 c/\ c~ cF cF
- ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F) |- (((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F) /\ ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c/\ c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF
- (x = c), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c==> c~ cF cF
+ |- (((vector_sub ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (f c))) b)) ((% (f c)) c))) b) = ((% (f c)) ((vector_sub c) b)))
T c= cvector_sub cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 * f0 f1 f2 c% * f0 f1 f1 f2 c% * f0 f1 cvector_sub f1 f2
+ (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- (((x = b) \/ (x = c)) ==> F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f1 c==> c\/ c= f0 f2 c= f0 f3 cF
+ |- (((!f. (((sum EMPTY) f) = (real_of_num (NUMERAL _0)))) ==> ((\f. (((sum EMPTY) f) = (real_of_num (NUMERAL _0)))) f)) = ((\f. (((sum EMPTY) f) = (real_of_num (NUMERAL _0)))) f))
T c= c==> ! c= csum part cEMPTY b0 creal_of_num cNUMERAL c_0 * / c= csum part cEMPTY b0 creal_of_num cNUMERAL c_0 f0 * / c= csum part cEMPTY b0 creal_of_num cNUMERAL c_0 f0
- (a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. (((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = y)))) y))))) |- ((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. (((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = y)))) y))))) = T)
T c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_add * b2 f1 cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 cvector_add c% * b2 f1 f1 cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 b1 b1 c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_add * b2 f1 cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 cvector_add c% * b2 f1 f1 cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 b1 b1 cT
+ ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((~ ((((real_add b) c) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (b = ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) c)))) ==> F)
T c==> c~ c==> c= creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (x = a), (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- ((x = a) /\ F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 c/\ c= f0 f1 cF
+ |- ((\f. (!s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f))))))) f)
T * / ! c==> cFINITE b1 c= csum * * part cINSERT f0 b1 b0 cCOND cIN f0 b1 csum b1 b0 creal_add * b0 f0 csum b1 b0 f1
+ (x = b), (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- ((b = b) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f2 c==> c= f1 f1 cF
- (a = c), (b = c) |- ((b = c) /\ ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= f0 f1 c==> c= f2 f1 c/\ c= f2 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY
- (a = b), (b = c) |- (T = ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= f0 f1 c==> c= f1 f2 c= cT c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- (((!x. ((x IN (b INSERT (c INSERT EMPTY))) ==> (((% (u x)) x) = ((% (u x)) x)))) ==> (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = ((vsum (b INSERT (c INSERT EMPTY))) (\x. ((% (u x)) x))))) = (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = ((vsum (b INSERT (c INSERT EMPTY))) (\x. ((% (u x)) x)))))
T c= c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c% * f2 b0 b0 c% * f2 b0 b0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 c= cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cvsum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0
+ (c IN EMPTY) |- ((c IN EMPTY) /\ (((sum EMPTY) u) = (real_of_num (NUMERAL _0))))
T c==> cIN f0 part cEMPTY c/\ cIN f0 part cEMPTY c= csum part cEMPTY f1 creal_of_num cNUMERAL c_0
+ (((real_add (f b)) (f c)) = (real_of_num (NUMERAL (BIT1 _0)))) |- (((vector_sub ((vector_add ((% (f b)) b)) ((% (f c)) c))) b) = ((% (f c)) ((vector_sub c) b)))
T c==> c= creal_add * f0 f1 * f0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_sub cvector_add c% * f0 f1 f1 c% * f0 f2 f2 f1 c% * f0 f2 cvector_sub f2 f1
- |- ((((~ (b IN (c INSERT EMPTY))) ==> (((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) = ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))))) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))))) = ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))))))
T c= c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0
+ (~ ((((real_add b) c) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (b = ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) c)))) |- (((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c==> c~ c==> c= creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c\/ c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
+ |- (((sum (b INSERT (c INSERT EMPTY))) u) = (((COND (b IN (c INSERT EMPTY))) ((sum (c INSERT EMPTY)) u)) ((real_add (u b)) ((sum (c INSERT EMPTY)) u))))
T c= csum * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cCOND cIN f0 * * part cINSERT f1 part cEMPTY csum * * part cINSERT f1 part cEMPTY f2 creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2
+ |- (((FINITE (c INSERT EMPTY)) ==> (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = (((COND (b IN (c INSERT EMPTY))) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))))))) = (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = (((COND (b IN (c INSERT EMPTY))) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) b)) ((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v)))))))
T c= c==> cFINITE * * part cINSERT f0 part cEMPTY c= cvsum * * part cINSERT f1 * * part cINSERT f0 part cEMPTY / c% * f2 b0 b0 cCOND cIN f1 * * part cINSERT f0 part cEMPTY cvsum * * part cINSERT f0 part cEMPTY / c% * f2 b0 b0 cvector_add * / c% * f2 b0 b0 f1 cvsum * * part cINSERT f0 part cEMPTY / c% * f2 b0 b0 c= cvsum * * part cINSERT f1 * * part cINSERT f0 part cEMPTY / c% * f2 b0 b0 cCOND cIN f1 * * part cINSERT f0 part cEMPTY cvsum * * part cINSERT f0 part cEMPTY / c% * f2 b0 b0 cvector_add * / c% * f2 b0 b0 f1 cvsum * * part cINSERT f0 part cEMPTY / c% * f2 b0 b0
+ |- (((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) = p') ==> ((p' ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> (((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = (p' ==> q'))))
T c==> c= cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c= c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> f3 f4
- |- (((!x. (collinear (x INSERT EMPTY))) ==> ((\x. (collinear (x INSERT EMPTY))) x)) = ((\x. (collinear (x INSERT EMPTY))) x))
T c= c==> ! ccollinear * * part cINSERT b0 part cEMPTY * / ccollinear * * part cINSERT b0 part cEMPTY f0 * / ccollinear * * part cINSERT b0 part cEMPTY f0
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- ((((c IN EMPTY) ==> (((vsum EMPTY) (\v. ((% (u v)) v))) = (vec (NUMERAL _0)))) ==> (((~ (c IN EMPTY)) ==> (((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))) = (((COND (c IN EMPTY)) (vec (NUMERAL _0))) e')))) = (((~ (c IN EMPTY)) ==> (((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v)))) = e')) ==> ((((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))) = (((COND (c IN EMPTY)) (vec (NUMERAL _0))) e'))))
T c= c==> c==> cIN f0 part cEMPTY c= cvsum part cEMPTY / c% * f1 b0 b0 cvec cNUMERAL c_0 c==> c==> c~ cIN f0 part cEMPTY c= cvector_add * / c% * f1 b0 b0 f0 cvsum part cEMPTY / c% * f1 b0 b0 f2 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f1 b0 b0 cvector_add * / c% * f1 b0 b0 f0 cvsum part cEMPTY / c% * f1 b0 b0 cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 f2 c==> c==> c~ cIN f0 part cEMPTY c= cvector_add * / c% * f1 b0 b0 f0 cvsum part cEMPTY / c% * f1 b0 b0 f2 c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f1 b0 b0 cvector_add * / c% * f1 b0 b0 f0 cvsum part cEMPTY / c% * f1 b0 b0 cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 f2
- (~ F), (x = a), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f1 c/\ c~ cF cF
+ |- (((!x. (((real_add x) (real_of_num (NUMERAL _0))) = x)) ==> ((\x. (((real_add x) (real_of_num (NUMERAL _0))) = x)) x)) = ((\x. (((real_add x) (real_of_num (NUMERAL _0))) = x)) x))
T c= c==> ! c= creal_add b0 creal_of_num cNUMERAL c_0 b0 * / c= creal_add b0 creal_of_num cNUMERAL c_0 b0 f0 * / c= creal_add b0 creal_of_num cNUMERAL c_0 b0 f0
- |- (((~ (c IN EMPTY)) ==> (((vector_add ((% (u c)) c)) (vec (NUMERAL _0))) = e')) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND (c IN EMPTY)) (vec (NUMERAL _0))) e')))
T c==> c==> c~ cIN f0 part cEMPTY c= cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 f2 c= cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 f2
- |- ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))))
T c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (!f. (!s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f)))))))) ==> ((\x. (!f. (!s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f)))))))) x)) = ((\x. (!f. (!s. ((FINITE s) ==> (((vsum (x INSERT s)) f) = (((COND (x IN s)) ((vsum s) f)) ((vector_add (f x)) ((vsum s) f)))))))) x))
T c= c==> ! ! ! c==> cFINITE b2 c= cvsum * * part cINSERT b0 b2 b1 cCOND cIN b0 b2 cvsum b2 b1 cvector_add * b1 b0 cvsum b2 b1 * / ! ! c==> cFINITE b2 c= cvsum * * part cINSERT b0 b2 b1 cCOND cIN b0 b2 cvsum b2 b1 cvector_add * b1 b0 cvsum b2 b1 f0 * / ! ! c==> cFINITE b2 c= cvsum * * part cINSERT b0 b2 b1 cCOND cIN b0 b2 cvsum b2 b1 cvector_add * b1 b0 cvsum b2 b1 f0
+ |- (((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((\s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) s)) = ((\s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) s))
T c= c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 * / ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 f0 * / ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 f0
- |- ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))
T c= cIN f0 * part cGSPEC / * f1 * part cSETSPEC b0 * f1 / / c/\ b0 c= f0 b1
+ (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))), (((x = b) \/ (x = a)) ==> F) |- F
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 c==> c==> c\/ c= f0 f2 c= f0 f1 cF cF
+ (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))), ((x = c) ==> F), ((x = b) \/ (x = c)) |- F
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f1 c==> c==> c= f0 f3 cF c==> c\/ c= f0 f2 c= f0 f3 cF
- (~ F), (x = a), (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 c/\ c~ cF cF
+ (b = c) |- (T = ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= f0 f1 c= cT c==> cIN f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- (((!x. (!f. (!s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f)))))))) ==> ((\x. (!f. (!s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f)))))))) x)) = ((\x. (!f. (!s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f)))))))) x))
T c= c==> ! ! ! c==> cFINITE b2 c= csum * * part cINSERT b0 b2 b1 cCOND cIN b0 b2 csum b2 b1 creal_add * b1 b0 csum b2 b1 * / ! ! c==> cFINITE b2 c= csum * * part cINSERT b0 b2 b1 cCOND cIN b0 b2 csum b2 b1 creal_add * b1 b0 csum b2 b1 f0 * / ! ! c==> cFINITE b2 c= csum * * part cINSERT b0 b2 b1 cCOND cIN b0 b2 csum b2 b1 creal_add * b1 b0 csum b2 b1 f0
+ |- (T = (FINITE (b INSERT (c INSERT EMPTY))))
T c= cT cFINITE * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- ((x = b) ==> F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f1 c==> c= f0 f2 cF
+ |- ((!b. (!c. ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) = T)
T c= ! ! c==> cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cT
+ (~ (a = b)), (~ (b = c)) |- (((\u. ((((real_add (u b)) (u c)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% (u b)) b)) ((% (u c)) c)) = a))) f) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c~ c= f0 f1 c==> c~ c= f1 f2 c==> * / c/\ c= creal_add * b0 f1 * b0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% * b0 f1 f1 c% * b0 f2 f2 f0 f3 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (((real_add (f b)) (f c)) = (real_of_num (NUMERAL (BIT1 _0)))) |- ((f b) = ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (f c)))
T c==> c= creal_add * f0 f1 * f0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= * f0 f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 * f0 f2
+ |- (((!s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f)))))) ==> ((\s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f)))))) s)) = ((\s. ((FINITE s) ==> (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f)))))) s))
T c= c==> ! c==> cFINITE b0 c= csum * * part cINSERT f0 b0 f1 cCOND cIN f0 b0 csum b0 f1 creal_add * f1 f0 csum b0 f1 * / c==> cFINITE b0 c= csum * * part cINSERT f0 b0 f1 cCOND cIN f0 b0 csum b0 f1 creal_add * f1 f0 csum b0 f1 f2 * / c==> cFINITE b0 c= csum * * part cINSERT f0 b0 f1 cCOND cIN f0 b0 csum b0 f1 creal_add * f1 f0 csum b0 f1 f2
+ |- (((!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((sum (c INSERT EMPTY)) u) = t')) ==> (((~ g') ==> (((real_add (u b)) ((sum (c INSERT EMPTY)) u)) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((sum (c INSERT EMPTY)) u)) ((real_add (u b)) ((sum (c INSERT EMPTY)) u))) = (((COND g') t') e')))))) ==> ((\e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((sum (c INSERT EMPTY)) u) = t')) ==> (((~ g') ==> (((real_add (u b)) ((sum (c INSERT EMPTY)) u)) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((sum (c INSERT EMPTY)) u)) ((real_add (u b)) ((sum (c INSERT EMPTY)) u))) = (((COND g') t') e')))))) e')) = ((\e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> (((sum (c INSERT EMPTY)) u) = t')) ==> (((~ g') ==> (((real_add (u b)) ((sum (c INSERT EMPTY)) u)) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((sum (c INSERT EMPTY)) u)) ((real_add (u b)) ((sum (c INSERT EMPTY)) u))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= csum * * part cINSERT f1 part cEMPTY f3 f4 c==> c==> c~ f2 c= creal_add * f3 f0 csum * * part cINSERT f1 part cEMPTY f3 b0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY csum * * part cINSERT f1 part cEMPTY f3 creal_add * f3 f0 csum * * part cINSERT f1 part cEMPTY f3 cCOND f2 f4 b0 * / c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= csum * * part cINSERT f1 part cEMPTY f3 f4 c==> c==> c~ f2 c= creal_add * f3 f0 csum * * part cINSERT f1 part cEMPTY f3 b0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY csum * * part cINSERT f1 part cEMPTY f3 creal_add * f3 f0 csum * * part cINSERT f1 part cEMPTY f3 cCOND f2 f4 b0 f5 * / c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= csum * * part cINSERT f1 part cEMPTY f3 f4 c==> c==> c~ f2 c= creal_add * f3 f0 csum * * part cINSERT f1 part cEMPTY f3 b0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY csum * * part cINSERT f1 part cEMPTY f3 creal_add * f3 f0 csum * * part cINSERT f1 part cEMPTY f3 cCOND f2 f4 b0 f5
+ |- (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = ((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> q')))
T c==> c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 f3
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_sub ((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (f c))) (b $ i))) $ i)) ((lambdai. ((real_mul (f c)) (c $ i))) $ i))) $ i)) (b $ i))) $ i) = ((lambdai. ((real_mul (f c)) ((lambdai. ((real_sub (c $ i)) (b $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_sub c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 * f1 f2 c$ f3 b1 b1 c$ clambda / creal_mul * f1 f2 c$ f2 b1 b1 b0 c$ f3 b0 f0 c$ clambda / creal_mul * f1 f2 c$ clambda / creal_sub c$ f2 b1 c$ f3 b1 b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x = a), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- (~ (a = c))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f1 c~ c= f1 f3
- |- ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s)
T * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2
+ |- (((!x. (!y. ((((vector_sub x) y) = (vec (NUMERAL _0))) = (x = y)))) ==> ((\x. (!y. ((((vector_sub x) y) = (vec (NUMERAL _0))) = (x = y)))) x)) = ((\x. (!y. ((((vector_sub x) y) = (vec (NUMERAL _0))) = (x = y)))) x))
T c= c==> ! ! c= c= cvector_sub b0 b1 cvec cNUMERAL c_0 c= b0 b1 * / ! c= c= cvector_sub b0 b1 cvec cNUMERAL c_0 c= b0 b1 f0 * / ! c= c= cvector_sub b0 b1 cvec cNUMERAL c_0 c= b0 b1 f0
- (x = c), (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- (~ (c = a))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c~ c= f1 f2
- (x = b), (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- (~ (b = c))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f2 c~ c= f1 f3
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_sub ((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (f c))) (b $ i))) $ i)) ((lambdai. ((real_mul (f c)) (c $ i))) $ i))) $ i)) (b $ i))) $ i) = ((lambdai. ((real_mul (f c)) ((lambdai. ((real_sub (c $ i)) (b $ i))) $ i))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (f c))) b)) ((% (f c)) c))) b) $ i) = (((% (f c)) ((vector_sub c) b)) $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_sub c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 * f1 f2 c$ f3 b1 b1 c$ clambda / creal_mul * f1 f2 c$ f2 b1 b1 b0 c$ f3 b0 f0 c$ clambda / creal_mul * f1 f2 c$ clambda / creal_sub c$ f2 b1 c$ f3 b1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 * f1 f2 f3 c% * f1 f2 f2 f3 f0 c$ c% * f1 f2 cvector_sub f2 f3 f0
+ |- (((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = T)
T c= c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
- ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F) |- ((((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F) ==> ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F)) ==> ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (b IN (c INSERT EMPTY)) |- ((b IN (c INSERT EMPTY)) /\ ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))))
T c==> cIN f0 * * part cINSERT f1 part cEMPTY c/\ cIN f0 * * part cINSERT f1 part cEMPTY c= cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0
+ (x = c), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- F
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 cF
+ (((real_add (f b)) (f c)) = (real_of_num (NUMERAL (BIT1 _0)))) |- ((((vector_sub ((vector_add ((% (f b)) b)) ((% (f c)) c))) b) = ((% (f c)) ((vector_sub c) b))) = (((vector_sub ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (f c))) b)) ((% (f c)) c))) b) = ((% (f c)) ((vector_sub c) b))))
T c==> c= creal_add * f0 f1 * f0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= c= cvector_sub cvector_add c% * f0 f1 f1 c% * f0 f2 f2 f1 c% * f0 f2 cvector_sub f2 f1 c= cvector_sub cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 * f0 f2 f1 c% * f0 f2 f2 f1 c% * f0 f2 cvector_sub f2 f1
- (((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F) ==> ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F)) |- ((((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F) ==> ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F)) /\ (((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F) ==> ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c/\ c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF
- |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (f c))) b)) ((% (f c)) c))) b) $ i) = (((% (f c)) ((vector_sub c) b)) $ i)))) = (((vector_sub ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (f c))) b)) ((% (f c)) c))) b) = ((% (f c)) ((vector_sub c) b))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 * f0 f1 f2 c% * f0 f1 f1 f2 b0 c$ c% * f0 f1 cvector_sub f1 f2 b0 c= cvector_sub cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 * f0 f1 f2 c% * f0 f1 f1 f2 c% * f0 f1 cvector_sub f1 f2
+ |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
- |- (((!x. (!s. ((FINITE s) ==> (FINITE (x INSERT s))))) ==> ((\x. (!s. ((FINITE s) ==> (FINITE (x INSERT s))))) x)) = ((\x. (!s. ((FINITE s) ==> (FINITE (x INSERT s))))) x))
T c= c==> ! ! c==> cFINITE b1 cFINITE * * part cINSERT b0 b1 * / ! c==> cFINITE b1 cFINITE * * part cINSERT b0 b1 f0 * / ! c==> cFINITE b1 cFINITE * * part cINSERT b0 b1 f0
+ |- ((((COND (c IN EMPTY)) ((vsum EMPTY) (\v. ((% (u v)) v)))) ((vector_add ((\v. ((% (u v)) v)) c)) ((vsum EMPTY) (\v. ((% (u v)) v))))) = (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))
T c= cCOND cIN f0 part cEMPTY cvsum part cEMPTY / c% * f1 b0 b0 cvector_add * / c% * f1 b0 b0 f0 cvsum part cEMPTY / c% * f1 b0 b0 cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0
+ (a = b) |- (T = ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= f0 f1 c= cT c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (b = c)) |- (((?u. ((((real_add (u b)) (u c)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% (u b)) b)) ((% (u c)) c)) = a))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = ((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. (((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c~ c= f0 f1 c= c==> c? / c/\ c= creal_add * b0 f0 * b0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% * b0 f0 f0 c% * b0 f1 f1 f2 ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f1 creal_add * b2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f1 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * b2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f1 f1 cvec cNUMERAL c_0 b1 b1 ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- ((\e'. (((c IN EMPTY) = g') ==> ((g' ==> ((vec (NUMERAL _0)) = t')) ==> (((~ g') ==> (((vector_add ((% (u c)) c)) (vec (NUMERAL _0))) = e')) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND g') t') e')))))) e')
T * / c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cvec cNUMERAL c_0 f2 c==> c==> c~ f1 c= cvector_add c% * f3 f0 f0 cvec cNUMERAL c_0 b0 c= cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f0 f0 cvec cNUMERAL c_0 cCOND f1 f2 b0 f4
- |- ((\g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = t')) ==> (((~ g') ==> (((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 b1 c==> c==> c~ b0 c= creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 cCOND b0 b1 b2 f3
+ ((~ (b = c)) ==> ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))), ((b = c) ==> ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) |- ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c==> c~ c= f0 f1 c==> cIN f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c==> c= f0 f1 c==> cIN f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((\y. (collinear (x INSERT (y INSERT EMPTY)))) y)
T * / ccollinear * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
+ |- (((!x. (!y. (collinear (x INSERT (y INSERT EMPTY))))) ==> ((\x. (!y. (collinear (x INSERT (y INSERT EMPTY))))) x)) = ((\x. (!y. (collinear (x INSERT (y INSERT EMPTY))))) x))
T c= c==> ! ! ccollinear * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! ccollinear * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 * / ! ccollinear * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- ((x = a) ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 c==> c= f0 f1 cF
+ |- ((((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = ((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) = (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = ((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c= c==> c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ |- ((collinear (x INSERT (y INSERT EMPTY))) = T)
T c= ccollinear * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
+ |- ((\a. (FINITE (a INSERT EMPTY))) a)
T * / cFINITE * * part cINSERT b0 part cEMPTY f0
- |- (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = t')) ==> (((~ g') ==> (((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (((COND g') t') e')))))
T c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 f4 c==> c==> c~ f2 c= creal_add * f3 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 f5 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 creal_add * f3 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 cCOND f2 f4 f5
- |- ((((c IN EMPTY) = (c IN EMPTY)) ==> (((c IN EMPTY) ==> ((vec (NUMERAL _0)) = t')) ==> (((~ (c IN EMPTY)) ==> (((vector_add ((% (u c)) c)) (vec (NUMERAL _0))) = e')) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND (c IN EMPTY)) t') e'))))) = (((c IN EMPTY) ==> ((vec (NUMERAL _0)) = t')) ==> (((~ (c IN EMPTY)) ==> (((vector_add ((% (u c)) c)) (vec (NUMERAL _0))) = e')) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND (c IN EMPTY)) t') e')))))
T c= c==> c= cIN f0 part cEMPTY cIN f0 part cEMPTY c==> c==> cIN f0 part cEMPTY c= cvec cNUMERAL c_0 f1 c==> c==> c~ cIN f0 part cEMPTY c= cvector_add c% * f2 f0 f0 cvec cNUMERAL c_0 f3 c= cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cvec cNUMERAL c_0 cCOND cIN f0 part cEMPTY f1 f3 c==> c==> cIN f0 part cEMPTY c= cvec cNUMERAL c_0 f1 c==> c==> c~ cIN f0 part cEMPTY c= cvector_add c% * f2 f0 f0 cvec cNUMERAL c_0 f3 c= cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cvec cNUMERAL c_0 cCOND cIN f0 part cEMPTY f1 f3
+ (((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> F), (((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (f c))) b)) ((% (f c)) c))) b) $ i) = (((% (f c)) ((vector_sub c) b)) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 * f1 f2 f3 c% * f1 f2 f2 f3 f0 c$ c% * f1 f2 cvector_sub f2 f3 f0
+ |- ((((~ (((real_sub ((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (f c))) (b $ i))) ((real_mul (f c)) (c $ i)))) (b $ i)) = ((real_mul (f c)) ((real_sub (c $ i)) (b $ i))))) ==> F) ==> (((real_sub ((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (f c))) (b $ i))) ((real_mul (f c)) (c $ i)))) (b $ i)) = ((real_mul (f c)) ((real_sub (c $ i)) (b $ i))))) = (((real_sub ((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (f c))) (b $ i))) ((real_mul (f c)) (c $ i)))) (b $ i)) = ((real_mul (f c)) ((real_sub (c $ i)) (b $ i)))))
T c= c==> c==> c~ c= creal_sub creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 * f0 f1 c$ f2 f3 creal_mul * f0 f1 c$ f1 f3 c$ f2 f3 creal_mul * f0 f1 creal_sub c$ f1 f3 c$ f2 f3 cF c= creal_sub creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 * f0 f1 c$ f2 f3 creal_mul * f0 f1 c$ f1 f3 c$ f2 f3 creal_mul * f0 f1 creal_sub c$ f1 f3 c$ f2 f3 c= creal_sub creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 * f0 f1 c$ f2 f3 creal_mul * f0 f1 c$ f1 f3 c$ f2 f3 creal_mul * f0 f1 creal_sub c$ f1 f3 c$ f2 f3
- ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!a. (FINITE (a INSERT EMPTY))) ==> ((\a. (FINITE (a INSERT EMPTY))) a)) = ((\a. (FINITE (a INSERT EMPTY))) a))
T c= c==> ! cFINITE * * part cINSERT b0 part cEMPTY * / cFINITE * * part cINSERT b0 part cEMPTY f0 * / cFINITE * * part cINSERT b0 part cEMPTY f0
+ (b IN (c INSERT EMPTY)) |- ((b IN (c INSERT EMPTY)) /\ (((vsum (c INSERT EMPTY)) (\v. ((% (u v)) v))) = (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))))
T c==> cIN f0 * * part cINSERT f1 part cEMPTY c/\ cIN f0 * * part cINSERT f1 part cEMPTY c= cvsum * * part cINSERT f1 part cEMPTY / c% * f2 b0 b0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0
- |- (((~ (b IN (c INSERT EMPTY))) ==> (((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) e')))
T c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 f3 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 f3
+ |- ((\x. (!y. ((collinear ((vec (NUMERAL _0)) INSERT (x INSERT (y INSERT EMPTY)))) = ((x = (vec (NUMERAL _0))) \/ ((y = (vec (NUMERAL _0))) \/ (?c. (y = ((% c) x)))))))) x)
T * / ! c= ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c= b0 cvec cNUMERAL c_0 c\/ c= b1 cvec cNUMERAL c_0 c? / c= b1 c% b2 b0 f0
- |- (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> (((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = (((COND g') t') e')))))
T c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 f4 c==> c==> c~ f2 c= cvector_add c% * f3 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 f5 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f3 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 cCOND f2 f4 f5
+ |- (T = (FINITE (c INSERT EMPTY)))
T c= cT cFINITE * * part cINSERT f0 part cEMPTY
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
+ |- (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. (((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = ((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. (((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c= c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_add * b2 f1 cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 cvector_add c% * b2 f1 f1 cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 b1 b1 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_add * b2 f1 cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 cvector_add c% * b2 f1 f1 cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 b1 b1 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((\p'. (!q'. (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) = p') ==> ((p' ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 * part cGSPEC / c? / cSETSPEC b2 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b4 b5 b5 b3 b3 b0 c==> c==> b0 c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= c==> cIN f0 * part cGSPEC / c? / cSETSPEC b2 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b4 b5 b5 b3 b3 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> b0 b1 f3
+ |- ((\s. ((FINITE s) ==> (((hull affine) s) = (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum s) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum s) (\v. ((% (u v)) v))) = y)))) y))))))) s)
T * / c==> cFINITE b0 c= * * part chull part caffine b0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ c= csum b0 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum b0 / c% * b3 b4 b4 b2 b2 f0
+ |- (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. (((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = y)))) y))))) ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. (((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = ((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. (((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = y)))) y))))) ==> q')))
T c==> c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_add * b2 f1 cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 cvector_add c% * b2 f1 f1 cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 b1 b1 c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_add * b2 f1 cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 cvector_add c% * b2 f1 f1 cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 b1 b1 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_add * b2 f1 cCOND cIN f2 part cEMPTY creal_of_num cNUMERAL c_0 * b2 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cIN f1 * * part cINSERT f2 part cEMPTY cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 cvector_add c% * b2 f1 f1 cCOND cIN f2 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * b2 f2 f2 cvec cNUMERAL c_0 b1 b1 f3
- (~ (a = b)), (~ (a = c)) |- ((~ (a = c)) /\ ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c/\ c~ c= f0 f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((((c IN EMPTY) = (c IN EMPTY)) ==> (((c IN EMPTY) ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ (c IN EMPTY)) ==> ((u c) = e')) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND (c IN EMPTY)) t') e'))))) = (((c IN EMPTY) ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ (c IN EMPTY)) ==> ((u c) = e')) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND (c IN EMPTY)) t') e')))))
T c= c==> c= cIN f0 part cEMPTY cIN f0 part cEMPTY c==> c==> cIN f0 part cEMPTY c= creal_of_num cNUMERAL c_0 f1 c==> c==> c~ cIN f0 part cEMPTY c= * f2 f0 f3 c= cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f0 cCOND cIN f0 part cEMPTY f1 f3 c==> c==> cIN f0 part cEMPTY c= creal_of_num cNUMERAL c_0 f1 c==> c==> c~ cIN f0 part cEMPTY c= * f2 f0 f3 c= cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f0 cCOND cIN f0 part cEMPTY f1 f3
- |- ((\x. (collinear (x INSERT EMPTY))) x)
T * / ccollinear * * part cINSERT b0 part cEMPTY f0
+ (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- (~ (x = b))
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 c~ c= f0 f2
+ (x = c) |- ((~ (x = c)) = (~ (c = c)))
T c==> c= f0 f1 c= c~ c= f0 f1 c~ c= f1 f1
+ |- ((\q'. (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) = p') ==> ((p' ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = q')) ==> (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b3 b4 b4 b2 b2 f3 c==> c==> f3 c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= c==> cIN f0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b3 b4 b4 b2 b2 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> f3 b0 f4
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (a = b)), (~ (b = c)), ((\u. ((((real_add (u b)) (u c)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% (u b)) b)) ((% (u c)) c)) = a))) f) |- (((\u. ((((real_add (u b)) (u c)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% (u b)) b)) ((% (u c)) c)) = a))) f) /\ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c~ c= f0 f1 c==> c~ c= f1 f2 c==> * / c/\ c= creal_add * b0 f1 * b0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% * b0 f1 f1 c% * b0 f2 f2 f0 f3 c/\ * / c/\ c= creal_add * b0 f1 * b0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% * b0 f1 f1 c% * b0 f2 f2 f0 f3 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((F \/ t) = t)
T c= c\/ cF f0 f0
+ (~ (a = b)), (~ (b = c)), ((((real_add (f b)) (f c)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% (f b)) b)) ((% (f c)) c)) = a)) |- (((((real_add (f b)) (f c)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% (f b)) b)) ((% (f c)) c)) = a)) /\ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c~ c= f0 f1 c==> c~ c= f1 f2 c==> c/\ c= creal_add * f3 f1 * f3 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% * f3 f1 f1 c% * f3 f2 f2 f0 c/\ c/\ c= creal_add * f3 f1 * f3 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% * f3 f1 f1 c% * f3 f2 f2 f0 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) |- (((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) |- ((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) /\ ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 c/\ cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (x = c), (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c==> c~ cF cF
+ |- (((a IN (GSPEC (\GEN%PVAR%5275. (?y. (((SETSPEC GEN%PVAR%5275) (?u. ((((sum (b INSERT (c INSERT EMPTY))) u) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vsum (b INSERT (c INSERT EMPTY))) (\v. ((% (u v)) v))) = y)))) y))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c= c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ c= csum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 creal_of_num cNUMERAL cBIT1 c_0 c= cvsum * * part cINSERT f1 * * part cINSERT f2 part cEMPTY / c% * b2 b3 b3 b1 b1 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((x IN EMPTY) = F)
T c= cIN f0 part cEMPTY cF
- |- ((~ (b IN (c INSERT EMPTY))) ==> (((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) = ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))))
T c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1
+ (x = a), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- ((a = a) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f1 c==> c= f1 f1 cF
+ (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- ((~ (x = b)) /\ (~ (x = a)))
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f1
- |- (((!s. ((FINITE s) ==> (FINITE (x INSERT s)))) ==> ((\s. ((FINITE s) ==> (FINITE (x INSERT s)))) s)) = ((\s. ((FINITE s) ==> (FINITE (x INSERT s)))) s))
T c= c==> ! c==> cFINITE b0 cFINITE * * part cINSERT f0 b0 * / c==> cFINITE b0 cFINITE * * part cINSERT f0 b0 f1 * / c==> cFINITE b0 cFINITE * * part cINSERT f0 b0 f1
- (~ (a = b)) |- ((~ (a = c)) ==> ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))) = T)
T c= c= c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 cT
- |- (((c IN EMPTY) ==> ((vec (NUMERAL _0)) = t')) ==> (((~ (c IN EMPTY)) ==> (((vector_add ((% (u c)) c)) (vec (NUMERAL _0))) = e')) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND (c IN EMPTY)) t') e'))))
T c==> c==> cIN f0 part cEMPTY c= cvec cNUMERAL c_0 f1 c==> c==> c~ cIN f0 part cEMPTY c= cvector_add c% * f2 f0 f0 cvec cNUMERAL c_0 f3 c= cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cvec cNUMERAL c_0 cCOND cIN f0 part cEMPTY f1 f3
+ |- ((((b IN (c INSERT EMPTY)) ==> (((sum (c INSERT EMPTY)) u) = (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) ==> (((~ (b IN (c INSERT EMPTY))) ==> (((real_add (u b)) ((sum (c INSERT EMPTY)) u)) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((sum (c INSERT EMPTY)) u)) ((real_add (u b)) ((sum (c INSERT EMPTY)) u))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) e')))) = (((~ (b IN (c INSERT EMPTY))) ==> (((real_add (u b)) ((sum (c INSERT EMPTY)) u)) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) ((sum (c INSERT EMPTY)) u)) ((real_add (u b)) ((sum (c INSERT EMPTY)) u))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) e'))))
T c= c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= csum * * part cINSERT f1 part cEMPTY f2 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 f3 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY csum * * part cINSERT f1 part cEMPTY f2 creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 f3 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 f3 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY csum * * part cINSERT f1 part cEMPTY f2 creal_add * f2 f0 csum * * part cINSERT f1 part cEMPTY f2 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 f3
- (~ (b IN (c INSERT EMPTY))) |- ((b IN (c INSERT EMPTY)) = F)
T c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cIN f0 * * part cINSERT f1 part cEMPTY cF
- (~ (b IN (c INSERT EMPTY))) |- ((~ (b IN (c INSERT EMPTY))) /\ (((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) = ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))))
T c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c/\ c~ cIN f0 * * part cINSERT f1 part cEMPTY c= creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1
- (~ (c IN EMPTY)) |- ((~ (c IN EMPTY)) /\ ((u c) = (u c)))
T c==> c~ cIN f0 part cEMPTY c/\ c~ cIN f0 part cEMPTY c= * f1 f0 * f1 f0
- (a = c) |- ((a = c) /\ ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= f0 f1 c/\ c= f0 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- (x = a), (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- (~ (a = b))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 c~ c= f1 f2
- (~ (b IN (c INSERT EMPTY))) |- ((~ (b IN (c INSERT EMPTY))) /\ (((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) = ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))))
T c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c/\ c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0
- |- (((!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((vec (NUMERAL _0)) = t')) ==> (((~ g') ==> (((vector_add ((% (u c)) c)) (vec (NUMERAL _0))) = e')) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND g') t') e')))))) ==> ((\e'. (((c IN EMPTY) = g') ==> ((g' ==> ((vec (NUMERAL _0)) = t')) ==> (((~ g') ==> (((vector_add ((% (u c)) c)) (vec (NUMERAL _0))) = e')) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND g') t') e')))))) e')) = ((\e'. (((c IN EMPTY) = g') ==> ((g' ==> ((vec (NUMERAL _0)) = t')) ==> (((~ g') ==> (((vector_add ((% (u c)) c)) (vec (NUMERAL _0))) = e')) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cvec cNUMERAL c_0 f2 c==> c==> c~ f1 c= cvector_add c% * f3 f0 f0 cvec cNUMERAL c_0 b0 c= cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f0 f0 cvec cNUMERAL c_0 cCOND f1 f2 b0 * / c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cvec cNUMERAL c_0 f2 c==> c==> c~ f1 c= cvector_add c% * f3 f0 f0 cvec cNUMERAL c_0 b0 c= cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f0 f0 cvec cNUMERAL c_0 cCOND f1 f2 b0 f4 * / c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cvec cNUMERAL c_0 f2 c==> c==> c~ f1 c= cvector_add c% * f3 f0 f0 cvec cNUMERAL c_0 b0 c= cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f0 f0 cvec cNUMERAL c_0 cCOND f1 f2 b0 f4
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
- (a = b) |- ((~ (a = c)) ==> ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= f0 f1 c==> c~ c= f0 f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!x. (P x)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (!g. ((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((vsum s) (\v. (f v))) = ((vsum s) g))))
T c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= cvsum f0 / * f1 b0 cvsum f0 f2
- (x = c), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- (~ (c = a))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c~ c= f1 f2
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (~ F), (x = c), (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c/\ c~ cF cF
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- (a = b), ((~ (b = c)) ==> ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) |- ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c= f0 f1 c==> c==> c~ c= f1 f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((((c IN EMPTY) ==> ((vec (NUMERAL _0)) = (vec (NUMERAL _0)))) ==> (((~ (c IN EMPTY)) ==> (((vector_add ((% (u c)) c)) (vec (NUMERAL _0))) = e')) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND (c IN EMPTY)) (vec (NUMERAL _0))) e')))) = (((~ (c IN EMPTY)) ==> (((vector_add ((% (u c)) c)) (vec (NUMERAL _0))) = e')) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND (c IN EMPTY)) (vec (NUMERAL _0))) e'))))
T c= c==> c==> cIN f0 part cEMPTY c= cvec cNUMERAL c_0 cvec cNUMERAL c_0 c==> c==> c~ cIN f0 part cEMPTY c= cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 f2 c= cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 f2 c==> c==> c~ cIN f0 part cEMPTY c= cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 f2 c= cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 f2
- (a = b), (a = c) |- ((a = c) /\ ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= f0 f1 c==> c= f0 f2 c/\ c= f0 f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((!a. (!b. (!c. (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))))) = (!a. (!b. (!c. ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F)))))
T c= ! ! ! ! c= c\/ c= b3 b0 c\/ c= b3 b1 c= b3 b2 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 ! ! ! c==> c~ ! c= c\/ c= b3 b0 c\/ c= b3 b1 c= b3 b2 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF
- (x = b), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f2 c==> c~ cF cF
- |- ((!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a))))) = T)
T c= ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cT
- (~ (b = c)), (a = b) |- ((~ (b = c)) /\ ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c~ c= f0 f1 c==> c= f2 f0 c/\ c~ c= f0 f1 c==> cIN f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((!e'. (((c IN EMPTY) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((u c) = e')) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND g') t') e')))))) ==> ((\e'. (((c IN EMPTY) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((u c) = e')) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND g') t') e')))))) e')) = ((\e'. (((c IN EMPTY) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((u c) = e')) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= creal_of_num cNUMERAL c_0 f2 c==> c==> c~ f1 c= * f3 f0 b0 c= cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f0 cCOND f1 f2 b0 * / c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= creal_of_num cNUMERAL c_0 f2 c==> c==> c~ f1 c= * f3 f0 b0 c= cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f0 cCOND f1 f2 b0 f4 * / c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= creal_of_num cNUMERAL c_0 f2 c==> c==> c~ f1 c= * f3 f0 b0 c= cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f0 cCOND f1 f2 b0 f4
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x = a), (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 c==> c~ cF cF
- ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) ==> ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y)) = ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y))
T c= c==> ! ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1 * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1
- |- (((\i. (f i)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((((c IN EMPTY) ==> ((real_of_num (NUMERAL _0)) = (real_of_num (NUMERAL _0)))) ==> (((~ (c IN EMPTY)) ==> ((u c) = e')) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) e')))) = (((~ (c IN EMPTY)) ==> ((u c) = e')) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) e'))))
T c= c==> c==> cIN f0 part cEMPTY c= creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c==> c==> c~ cIN f0 part cEMPTY c= * f1 f0 f2 c= cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f1 f0 cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 f2 c==> c==> c~ cIN f0 part cEMPTY c= * f1 f0 f2 c= cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f1 f0 cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 f2
- (a = c), ((~ (b = c)) ==> ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) |- ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c= f0 f1 c==> c==> c~ c= f2 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY
- |- ((((b IN (c INSERT EMPTY)) = (b IN (c INSERT EMPTY))) ==> (((b IN (c INSERT EMPTY)) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = t')) ==> (((~ (b IN (c INSERT EMPTY))) ==> (((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = (((COND (b IN (c INSERT EMPTY))) t') e'))))) = (((b IN (c INSERT EMPTY)) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = t')) ==> (((~ (b IN (c INSERT EMPTY))) ==> (((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = (((COND (b IN (c INSERT EMPTY))) t') e')))))
T c= c==> c= cIN f0 * * part cINSERT f1 part cEMPTY cIN f0 * * part cINSERT f1 part cEMPTY c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 f3 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 f4 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY f3 f4 c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 f3 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 f4 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY f3 f4
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ (c IN EMPTY)) ==> ((u c) = (u c))) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))))
T c= c==> c==> c~ cIN f0 part cEMPTY c= * f1 f0 * f1 f0 c= cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f1 f0 cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f1 f0 c= cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f1 f0 cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f1 f0
- |- (((!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) ==> ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x)) = ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x))
T c= c==> ! ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0 * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0
- |- ((\g'. (!t'. (!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> (((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 b1 c==> c==> c~ b0 c= cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 b2 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cCOND b0 b1 b2 f3
- |- (((~ (c IN EMPTY)) ==> ((u c) = e')) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) e')))
T c==> c==> c~ cIN f0 part cEMPTY c= * f1 f0 f2 c= cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f1 f0 cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 f2
- ((((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) c)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ (c = c)) |- ((~ (c = c)) /\ (c = c))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- (x = a), (((~ (x = a)) /\ ((~ (x = b)) /\ (~ (x = c)))) /\ ((x = c) \/ ((x = b) \/ (x = a)))) |- (~ (a = c))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f1 c~ c= f1 f3
- |- ((FINITE s) ==> ((FINITE (x INSERT s)) = T))
T c==> cFINITE f0 c= cFINITE * * part cINSERT f1 f0 cT
- |- (((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add b) ((real_add c) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_add f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (b IN (c INSERT EMPTY)) |- ((b IN (c INSERT EMPTY)) = T)
T c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cIN f0 * * part cINSERT f1 part cEMPTY cT
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((a = c) ==> ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= f0 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f1 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY
- |- (((FINITE EMPTY) ==> ((FINITE (c INSERT EMPTY)) = T)) = ((FINITE (c INSERT EMPTY)) = T))
T c= c==> cFINITE part cEMPTY c= cFINITE * * part cINSERT f0 part cEMPTY cT c= cFINITE * * part cINSERT f0 part cEMPTY cT
- |- (collinear (x INSERT EMPTY))
T ccollinear * * part cINSERT f0 part cEMPTY
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- |- ((((b IN (c INSERT EMPTY)) ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) ==> (((~ (b IN (c INSERT EMPTY))) ==> (((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) e')))) = (((~ (b IN (c INSERT EMPTY))) ==> (((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = (((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) e'))))
T c= c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 f3 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 f3 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 f3 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f2 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f2 f1 f1 cvec cNUMERAL c_0 f3
- |- (((!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = t')) ==> (((~ g') ==> (((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (((COND g') t') e')))))) ==> ((\e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = t')) ==> (((~ g') ==> (((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (((COND g') t') e')))))) e')) = ((\e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = t')) ==> (((~ g') ==> (((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 f4 c==> c==> c~ f2 c= creal_add * f3 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 b0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 creal_add * f3 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 cCOND f2 f4 b0 * / c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 f4 c==> c==> c~ f2 c= creal_add * f3 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 b0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 creal_add * f3 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 cCOND f2 f4 b0 f5 * / c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 f4 c==> c==> c~ f2 c= creal_add * f3 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 b0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 creal_add * f3 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f3 f1 cCOND f2 f4 b0 f5
- ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F), (((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F) ==> ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F)) |- ((((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F) ==> ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F)) /\ ((~ (!x. (((x = a) \/ ((x = b) \/ (x = c))) = ((x = c) \/ ((x = b) \/ (x = a)))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c/\ c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f0 cF
- |- ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))
T c= cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0 cCOND cIN f0 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f1 f0 f0 cvec cNUMERAL c_0
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- (~ F), (x = b), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f2 c/\ c~ cF cF
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- (((!e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> (((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = (((COND g') t') e')))))) ==> ((\e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> (((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = (((COND g') t') e')))))) e')) = ((\e'. (((b IN (c INSERT EMPTY)) = g') ==> ((g' ==> ((((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> (((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0))))) ((vector_add ((% (u b)) b)) (((COND (c IN EMPTY)) (vec (NUMERAL _0))) ((vector_add ((% (u c)) c)) (vec (NUMERAL _0)))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 f4 c==> c==> c~ f2 c= cvector_add c% * f3 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 b0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f3 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 cCOND f2 f4 b0 * / c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 f4 c==> c==> c~ f2 c= cvector_add c% * f3 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 b0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f3 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 cCOND f2 f4 b0 f5 * / c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 f4 c==> c==> c~ f2 c= cvector_add c% * f3 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 b0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 cvector_add c% * f3 f0 f0 cCOND cIN f1 part cEMPTY cvec cNUMERAL c_0 cvector_add c% * f3 f1 f1 cvec cNUMERAL c_0 cCOND f2 f4 b0 f5
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (FINITE s) |- ((FINITE s) /\ (((sum (x INSERT s)) f) = (((COND (x IN s)) ((sum s) f)) ((real_add (f x)) ((sum s) f)))))
T c==> cFINITE f0 c/\ cFINITE f0 c= csum * * part cINSERT f1 f0 f2 cCOND cIN f1 f0 csum f0 f2 creal_add * f2 f1 csum f0 f2
- (a = b), (b = c) |- ((b = c) /\ ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= f0 f1 c==> c= f1 f2 c/\ c= f1 f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((b IN (c INSERT EMPTY)) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = t')) ==> (((~ (b IN (c INSERT EMPTY))) ==> (((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) = e')) ==> ((((COND (b IN (c INSERT EMPTY))) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c))) ((real_add (u b)) (((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)))) = (((COND (b IN (c INSERT EMPTY))) t') e'))))
T c==> c==> cIN f0 * * part cINSERT f1 part cEMPTY c= cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 f3 c==> c==> c~ cIN f0 * * part cINSERT f1 part cEMPTY c= creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 f4 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 creal_add * f2 f0 cCOND cIN f1 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f1 cCOND cIN f0 * * part cINSERT f1 part cEMPTY f3 f4
- (x = a), (((x = a) \/ ((x = b) \/ (x = c))) /\ ((~ (x = c)) /\ ((~ (x = b)) /\ (~ (x = a))))) |- (~ (a = b))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f3 c/\ c~ c= f0 f2 c~ c= f0 f1 c~ c= f1 f2
- |- (((c IN EMPTY) ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ (c IN EMPTY)) ==> ((u c) = e')) ==> ((((COND (c IN EMPTY)) (real_of_num (NUMERAL _0))) (u c)) = (((COND (c IN EMPTY)) t') e'))))
T c==> c==> cIN f0 part cEMPTY c= creal_of_num cNUMERAL c_0 f1 c==> c==> c~ cIN f0 part cEMPTY c= * f2 f0 f3 c= cCOND cIN f0 part cEMPTY creal_of_num cNUMERAL c_0 * f2 f0 cCOND cIN f0 part cEMPTY f1 f3
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- (a = b) |- ((b = c) ==> ((a IN ((hull affine) (b INSERT (c INSERT EMPTY)))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= f0 f1 c==> c= f1 f2 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\x. (!s. ((FINITE s) ==> (FINITE (x INSERT s))))) x)
T * / ! c==> cFINITE b1 cFINITE * * part cINSERT b0 b1 f0
