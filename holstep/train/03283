N Hypermap.lemma_inverse_on_loop
C |- (!L. (((loop_map L) = (inverse (inv_loop_map L))) /\ ((inv_loop_map L) = (inverse (loop_map L)))))
T c/\ c= * part cloop_map f0 * part cinverse * part cinv_loop_map f0 c= * part cinv_loop_map f0 * part cinverse * part cloop_map f0
D PERMUTES_INVERSE_INVERSE
A |- (!p. (((permutes p) s) ==> ((inverse (inverse p)) = p)))
T c==> cpermutes f0 f1 c= * part cinverse * part cinverse f0 f0
D Hypermap.loop_map
A |- (!L. ((loop_map L) = (SND (tuple_loop L))))
T c= * part cloop_map f0 * part cSND ctuple_loop f0
D Hypermap.inv_loop_map
A |- (!L. ((inv_loop_map L) = (inverse (SND (tuple_loop L)))))
T c= * part cinv_loop_map f0 * part cinverse * part cSND ctuple_loop f0
D Hypermap.loop_lemma
A |- (!L. ((FINITE (dart_of_loop L)) /\ (((permutes (loop_map L)) (dart_of_loop L)) /\ (?x. (((in_dart_of_loop x) L) /\ (((orbit_map (loop_map L)) x) = (dart_of_loop L)))))))
T c/\ cFINITE * part cdart_of_loop f0 c/\ cpermutes * part cloop_map f0 * part cdart_of_loop f0 c? / c/\ cin_dart_of_loop b0 f0 c= * * part corbit_map * part cloop_map f0 b0 * part cdart_of_loop f0
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ ((loop_map L) = (inverse (inverse (loop_map L)))) |- ((inverse (inverse (loop_map L))) = (loop_map L))
T c==> c= * part cloop_map f0 * part cinverse * part cinverse * part cloop_map f0 c= * part cinverse * part cinverse * part cloop_map f0 * part cloop_map f0
- |- (T = ((inverse (inverse (loop_map L))) = (loop_map L)))
T c= cT c= * part cinverse * part cinverse * part cloop_map f0 * part cloop_map f0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
