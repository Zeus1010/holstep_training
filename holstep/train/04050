N Aq12.exist_final_list_e_list
C |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> ((final_list L) ((find_list N) (e_list lp))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cl'y f0 f2 f3 f4 c/\ c~ cfinal_list f0 f2 c/\ cMEM f5 cparts f0 f2 c/\ cMEM f4 f5 c= cLAST f5 f6 cfinal_list f0 cfind_list f1 ce_list f6
D TRUTH
A |- T
T cT
D Seq.mem_cat
A |- (!x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))))
T c= cMEM f0 ccat f1 f2 c\/ cMEM f0 f1 cMEM f0 f2
D Seq.mem_filter
A |- (!a. (!x. (!s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s))))))
T c= cMEM f0 cfilter f1 f2 c/\ * f1 f0 cMEM f0 f2
D Seq2.mem_flatten
A |- (!x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))))
T c= cMEM f0 cflatten f1 c? / c/\ cMEM b0 f1 cMEM f0 b0
D Tame_defs2.normal_list
A |- (!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))))))
T c= cnormal_list f0 f1 c/\ cuniq cflatten f1 c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1
D Tame_defs2.final_dart_list
A |- (!L. (!N. (((final_dart_list L) N) = (flatten ((filter (final_list L)) N)))))
T c= cfinal_dart_list f0 f1 cflatten cfilter * part cfinal_list f0 f1
D Tame_defs2.s_flag_list
A |- (!L. (!N. (!r. (!x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))))))))
T c= cs_flag_list f0 f1 f2 f3 c/\ ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Tame_list.find_list_uniq
A |- (!L. (!s. (!x. (((uniq (flatten L)) /\ (((MEM x) s) /\ ((MEM s) L))) ==> (((find_list L) x) = s)))))
T c==> c/\ cuniq cflatten f0 c/\ cMEM f1 f2 cMEM f2 f0 c= cfind_list f0 f1 f2
D Aq12.last_parts_y_not_s_list
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM lp) (((s_list L) r) x))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cl'y f0 f2 f3 f4 c/\ c~ cfinal_list f0 f2 c/\ cMEM f5 cparts f0 f2 c/\ cMEM f4 f5 c= cLAST f5 f6 c~ cMEM f6 cs_list f0 f2 f3
D Aq12.last_parts_e_list_y_not_s_list
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cl'y f0 f2 f3 f4 c/\ c~ cfinal_list f0 f2 c/\ cMEM f5 cparts f0 f2 c/\ cMEM f4 f5 c= cLAST f5 f6 c~ cMEM ce_list f6 cs_list f0 f2 f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((final_list L) ((find_list N) (e_list lp)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cl'y f0 f1 f4 f5 c==> c/\ c= cnext_el f1 f4 cf_list f0 f4 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c/\ ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f6 cMEM b1 cfinal_dart_list f0 f6 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f6 ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 cfinal_list f0 cfind_list f6 ce_list f3
+ (((find_list N) (e_list lp)) = l), ((final_list L) l) |- ((((find_list N) (e_list lp)) = l) /\ ((final_list L) ((find_list N) (e_list lp))))
T c==> c= cfind_list f0 ce_list f1 f2 c==> cfinal_list f3 f2 c/\ c= cfind_list f0 ce_list f1 f2 cfinal_list f3 cfind_list f0 ce_list f1
+ (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (~ ((MEM lp) (((s_list L) r) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), (((final_list L) l) /\ ((MEM l) N)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM (e_list lp)) l), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((final_list L) ((find_list N) (e_list lp)))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c~ cMEM f2 cs_list f0 f3 f4 c==> c~ cfinal_list f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f5 f2 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> c= cl'y f0 f3 f4 f6 c==> c/\ cfinal_list f0 f7 cMEM f7 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f4 f3 c==> cMEM f6 f5 c==> cMEM ce_list f2 f7 c==> cMEM f5 cparts f0 f3 c==> cMEM f3 f1 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f3 f4 cfinal_list f0 cfind_list f1 ce_list f2
- |- ((!lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x))))))))) = T)
T c= ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'y b1 b3 b4 f0 c/\ c~ cfinal_list b1 b3 c/\ cMEM f1 cparts b1 b3 c/\ cMEM f0 f1 c= cLAST f1 b0 c~ cMEM ce_list b0 cs_list b1 b3 b4 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((MEM y) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((LAST p) = lp) /\ ((final_list L) ((find_list N) (e_list lp))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cmarked_list f0 f6 f1 f4 c/\ c= cLAST f2 f3 cfinal_list f0 cfind_list f6 ce_list f3
+ ((MEM (e_list lp)) l) |- (((MEM (e_list lp)) l) = T)
T c==> cMEM ce_list f0 f1 c= cMEM ce_list f0 f1 cT
+ ((normal_list L) N) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) ==> ((~ ((MEM lp) (((s_list L) r) x))) ==> (((final_list L) l) ==> (((MEM l) N) ==> (((MEM (e_list lp)) l) ==> ((~ ((MEM (e_list lp)) (((s_list L) r) x))) ==> ((final_list L) ((find_list N) (e_list lp))))))))))
T c==> cnormal_list f0 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c~ cMEM f3 cs_list f0 f4 f2 c==> cfinal_list f0 f5 c==> cMEM f5 f1 c==> cMEM ce_list f3 f5 c==> c~ cMEM ce_list f3 cs_list f0 f4 f2 cfinal_list f0 cfind_list f1 ce_list f3
+ (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- ((~ ((MEM lp) (((s_list L) r) x))) ==> (((final_list L) l) ==> (((MEM l) N) ==> (((MEM (e_list lp)) l) ==> ((~ ((MEM (e_list lp)) (((s_list L) r) x))) ==> ((final_list L) ((find_list N) (e_list lp))))))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f2 f1 c==> cnormal_list f0 f1 c==> c~ cMEM f4 cs_list f0 f2 f3 c==> cfinal_list f0 f5 c==> cMEM f5 f1 c==> cMEM ce_list f4 f5 c==> c~ cMEM ce_list f4 cs_list f0 f2 f3 cfinal_list f0 cfind_list f1 ce_list f4
+ |- ((\L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) L)
T * / c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 f1
+ |- ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x))))))) N)
T * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= cl'y f0 b1 b2 f1 c/\ c~ cfinal_list f0 b1 c/\ cMEM f2 cparts f0 b1 c/\ cMEM f1 f2 c= cLAST f2 f3 c~ cMEM ce_list f3 cs_list f0 b1 b2 f4
+ ((MEM r) N), ((normal_list L) N) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) ==> ((~ ((MEM lp) (((s_list L) r) x))) ==> (((final_list L) l) ==> (((MEM l) N) ==> (((MEM (e_list lp)) l) ==> ((~ ((MEM (e_list lp)) (((s_list L) r) x))) ==> ((final_list L) ((find_list N) (e_list lp)))))))))))))
T c==> cMEM f0 f1 c==> cnormal_list f2 f1 c==> cMEM f3 f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f2 f1 c==> c= cnext_el f0 f3 cf_list f2 f3 c==> cLET / cLET_END cfinal_list f2 b0 cfind_list f1 ce_list f3 c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f2 f1 cMEM b1 cfinal_dart_list f2 f1 c? / c/\ ccontour_list f2 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f2 f1 c==> c~ cMEM f4 cs_list f2 f0 f3 c==> cfinal_list f2 f5 c==> cMEM f5 f1 c==> cMEM ce_list f4 f5 c==> c~ cMEM ce_list f4 cs_list f2 f0 f3 cfinal_list f2 cfind_list f1 ce_list f4
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
+ |- ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1)
T * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
+ |- (((((uniq (flatten N)) /\ (((MEM (e_list lp)) l) /\ ((MEM l) N))) ==> (((find_list N) (e_list lp)) = l)) ==> ((final_list L) ((find_list N) (e_list lp)))) = ((final_list L) ((find_list N) (e_list lp))))
T c= c==> c==> c/\ cuniq cflatten f0 c/\ cMEM ce_list f1 f2 cMEM f2 f0 c= cfind_list f0 ce_list f1 f2 cfinal_list f3 cfind_list f0 ce_list f1 cfinal_list f3 cfind_list f0 ce_list f1
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ |- (((!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) ==> ((\s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) s2)) = ((\s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) s2))
T c= c==> ! c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 * / c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2 * / c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
- |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x)))))))) = T)
T c= ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cl'y b0 b2 b3 f0 c/\ c~ cfinal_list b0 b2 c/\ cMEM f1 cparts b0 b2 c/\ cMEM f0 f1 c= cLAST f1 f2 c~ cMEM ce_list f2 cs_list b0 b2 b3 cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))))))), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((final_list L) ((find_list N) (e_list lp)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c/\ cMEM f4 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c/\ c= cnext_el f1 f4 cf_list f0 f4 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c/\ ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f6 cMEM b1 cfinal_dart_list f0 f6 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f6 ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 cfinal_list f0 cfind_list f6 ce_list f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))), ((((marked_list L) N) r) x) |- ((final_list L) ((find_list N) (e_list lp)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c/\ c~ cfinal_list f0 f1 c/\ cMEM f4 cparts f0 f1 c/\ cMEM f3 f4 c= cLAST f4 f5 c==> cmarked_list f0 f6 f1 f2 cfinal_list f0 cfind_list f6 ce_list f5
- (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
+ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ ((~ ((final_list L) r)) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 ! c==> c/\ c= b0 cLAST f4 c/\ cMEM f4 cparts f0 f2 c/\ cMEM f2 f1 c/\ c~ cfinal_list f0 f2 c~ cMEM b0 cs_list f0 f2 f3 cMEM ce_list b0 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1
+ |- (((!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) ==> ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)) = ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L))
T c= c==> ! ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
+ (~ ((MEM lp) (((s_list L) r) x))), ((normal_list L) N) |- ((~ ((MEM lp) (((s_list L) r) x))) /\ (((final_list L) l) ==> (((MEM l) N) ==> (((MEM (e_list lp)) l) ==> ((~ ((MEM (e_list lp)) (((s_list L) r) x))) ==> ((final_list L) ((find_list N) (e_list lp))))))))
T c==> c~ cMEM f0 cs_list f1 f2 f3 c==> cnormal_list f1 f4 c/\ c~ cMEM f0 cs_list f1 f2 f3 c==> cfinal_list f1 f5 c==> cMEM f5 f4 c==> cMEM ce_list f0 f5 c==> c~ cMEM ce_list f0 cs_list f1 f2 f3 cfinal_list f1 cfind_list f4 ce_list f0
+ ((MEM l) N), ((normal_list L) N), ((final_list L) l) |- (((MEM l) N) /\ (((MEM (e_list lp)) l) ==> ((~ ((MEM (e_list lp)) (((s_list L) r) x))) ==> ((final_list L) ((find_list N) (e_list lp))))))
T c==> cMEM f0 f1 c==> cnormal_list f2 f1 c==> cfinal_list f2 f0 c/\ cMEM f0 f1 c==> cMEM ce_list f3 f0 c==> c~ cMEM ce_list f3 cs_list f2 f4 f5 cfinal_list f2 cfind_list f1 ce_list f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((MEM y) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))))))))))) ==> ((final_list L) ((find_list N) (e_list lp))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cmarked_list f0 f6 f1 f4 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f6 c/\ cMEM f1 f6 c/\ cMEM f4 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c/\ c= cnext_el f1 f4 cf_list f0 f4 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c/\ ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f6 cMEM b1 cfinal_dart_list f0 f6 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f6 ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 cfinal_list f0 cfind_list f6 ce_list f3
+ (((find_list N) (e_list lp)) = l), ((final_list L) l) |- (T = ((final_list L) ((find_list N) (e_list lp))))
T c==> c= cfind_list f0 ce_list f1 f2 c==> cfinal_list f3 f2 c= cT cfinal_list f3 cfind_list f0 ce_list f1
+ (uniq (flatten N)) |- ((uniq (flatten N)) = T)
T c==> cuniq cflatten f0 c= cuniq cflatten f0 cT
+ |- (((!r. (!x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))))))) ==> ((\r. (!x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))))))) r)) = ((\r. (!x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))))))) r))
T c= c==> ! ! c= cs_flag_list f0 f1 b0 b1 c/\ ! ! c==> c/\ cMEM b2 cfinal_dart_list f0 f1 cMEM b3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 b2 c/\ c= cLAST b4 b3 cSUBSET * part cset_of_list b4 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b4 cLAST b3 c/\ cMEM b3 cparts f0 b2 c/\ cMEM b2 f1 c/\ c~ cfinal_list f0 b2 c~ cMEM b4 cs_list f0 b0 b1 cMEM ce_list b4 ccat cs_list f0 b0 b1 cfinal_dart_list f0 f1 * / ! c= cs_flag_list f0 f1 b0 b1 c/\ ! ! c==> c/\ cMEM b2 cfinal_dart_list f0 f1 cMEM b3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 b2 c/\ c= cLAST b4 b3 cSUBSET * part cset_of_list b4 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b4 cLAST b3 c/\ cMEM b3 cparts f0 b2 c/\ cMEM b2 f1 c/\ c~ cfinal_list f0 b2 c~ cMEM b4 cs_list f0 b0 b1 cMEM ce_list b4 ccat cs_list f0 b0 b1 cfinal_dart_list f0 f1 f2 * / ! c= cs_flag_list f0 f1 b0 b1 c/\ ! ! c==> c/\ cMEM b2 cfinal_dart_list f0 f1 cMEM b3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 b2 c/\ c= cLAST b4 b3 cSUBSET * part cset_of_list b4 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b4 cLAST b3 c/\ cMEM b3 cparts f0 b2 c/\ cMEM b2 f1 c/\ c~ cfinal_list f0 b2 c~ cMEM b4 cs_list f0 b0 b1 cMEM ce_list b4 ccat cs_list f0 b0 b1 cfinal_dart_list f0 f1 f2
+ |- (((!x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))))) ==> ((\x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))))) x)) = ((\x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))))) x))
T c= c==> ! c= cs_flag_list f0 f1 f2 b0 c/\ ! ! c==> c/\ cMEM b1 cfinal_dart_list f0 f1 cMEM b2 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 b1 c/\ c= cLAST b3 b2 cSUBSET * part cset_of_list b3 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b3 cLAST b2 c/\ cMEM b2 cparts f0 b1 c/\ cMEM b1 f1 c/\ c~ cfinal_list f0 b1 c~ cMEM b3 cs_list f0 f2 b0 cMEM ce_list b3 ccat cs_list f0 f2 b0 cfinal_dart_list f0 f1 * / c= cs_flag_list f0 f1 f2 b0 c/\ ! ! c==> c/\ cMEM b1 cfinal_dart_list f0 f1 cMEM b2 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 b1 c/\ c= cLAST b3 b2 cSUBSET * part cset_of_list b3 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b3 cLAST b2 c/\ cMEM b2 cparts f0 b1 c/\ cMEM b1 f1 c/\ c~ cfinal_list f0 b1 c~ cMEM b3 cs_list f0 f2 b0 cMEM ce_list b3 ccat cs_list f0 f2 b0 cfinal_dart_list f0 f1 f3 * / c= cs_flag_list f0 f1 f2 b0 c/\ ! ! c==> c/\ cMEM b1 cfinal_dart_list f0 f1 cMEM b2 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 b1 c/\ c= cLAST b3 b2 cSUBSET * part cset_of_list b3 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b3 cLAST b2 c/\ cMEM b2 cparts f0 b1 c/\ cMEM b1 f1 c/\ c~ cfinal_list f0 b1 c~ cMEM b3 cs_list f0 f2 b0 cMEM ce_list b3 ccat cs_list f0 f2 b0 cfinal_dart_list f0 f1 f3
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> ((final_list L) ((find_list N) (e_list lp))))) = T)
T c= ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c= cl'y f0 f2 b0 f3 c/\ c~ cfinal_list f0 f2 c/\ cMEM f4 cparts f0 f2 c/\ cMEM f3 f4 c= cLAST f4 f5 cfinal_list f0 cfind_list f1 ce_list f5 cT
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM lp) (((s_list L) r) x)))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cl'y b0 b2 b3 f0 c/\ c~ cfinal_list b0 b2 c/\ cMEM f1 cparts b0 b2 c/\ cMEM f0 f1 c= cLAST f1 f2 c~ cMEM f2 cs_list b0 b2 b3 f3
+ |- (((!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) ==> ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1)) = ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1))
T c= c==> ! ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1 * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
+ (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (~ ((MEM lp) (((s_list L) r) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x), ((\l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM (e_list lp)) l))) l) |- (((\l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM (e_list lp)) l))) l) /\ ((final_list L) ((find_list N) (e_list lp))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c~ cMEM f2 cs_list f0 f3 f4 c==> c~ cfinal_list f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f5 f2 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> c= cl'y f0 f3 f4 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f4 f3 c==> cMEM f6 f5 c==> cMEM f5 cparts f0 f3 c==> cMEM f3 f1 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f3 f4 c==> * / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM ce_list f2 b0 f7 c/\ * / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM ce_list f2 b0 f7 cfinal_list f0 cfind_list f1 ce_list f2
+ ((normal_list L) N) |- ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) ==> ((~ ((MEM lp) (((s_list L) r) x))) ==> (((final_list L) l) ==> (((MEM l) N) ==> (((MEM (e_list lp)) l) ==> ((~ ((MEM (e_list lp)) (((s_list L) r) x))) ==> ((final_list L) ((find_list N) (e_list lp)))))))))
T c==> cnormal_list f0 f1 c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c~ cMEM f2 cs_list f0 f3 f4 c==> cfinal_list f0 f5 c==> cMEM f5 f1 c==> cMEM ce_list f2 f5 c==> c~ cMEM ce_list f2 cs_list f0 f3 f4 cfinal_list f0 cfind_list f1 ce_list f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((((marked_list L) N) r) x) |- (((MEM p) ((parts L) r)) ==> (((MEM y) p) ==> (((LAST p) = lp) ==> ((final_list L) ((find_list N) (e_list lp))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cmarked_list f0 f4 f1 f2 c==> cMEM f5 cparts f0 f1 c==> cMEM f3 f5 c==> c= cLAST f5 f6 cfinal_list f0 cfind_list f4 ce_list f6
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))) = T)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c= c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((MEM y) p) ==> (((LAST p) = lp) ==> ((final_list L) ((find_list N) (e_list lp)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cMEM f4 cparts f0 f1 c==> cmarked_list f0 f5 f1 f2 c==> cMEM f3 f4 c==> c= cLAST f4 f6 cfinal_list f0 cfind_list f5 ce_list f6
+ |- (((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x))))))) ==> ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x))))))) N)) = ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x))))))) N))
T c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= cl'y f0 b1 b2 f1 c/\ c~ cfinal_list f0 b1 c/\ cMEM f2 cparts f0 b1 c/\ cMEM f1 f2 c= cLAST f2 f3 c~ cMEM ce_list f3 cs_list f0 b1 b2 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= cl'y f0 b1 b2 f1 c/\ c~ cfinal_list f0 b1 c/\ cMEM f2 cparts f0 b1 c/\ cMEM f1 f2 c= cLAST f2 f3 c~ cMEM ce_list f3 cs_list f0 b1 b2 f4 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= cl'y f0 b1 b2 f1 c/\ c~ cfinal_list f0 b1 c/\ cMEM f2 cparts f0 b1 c/\ cMEM f1 f2 c= cLAST f2 f3 c~ cMEM ce_list f3 cs_list f0 b1 b2 f4
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (~ ((MEM lp) (((s_list L) r) x))), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((final_list L) l) |- (((MEM l) N) ==> (((MEM (e_list lp)) l) ==> ((~ ((MEM (e_list lp)) (((s_list L) r) x))) ==> ((final_list L) ((find_list N) (e_list lp))))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c~ cMEM f2 cs_list f0 f3 f4 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f4 f3 c==> cMEM f3 f1 c==> cnormal_list f0 f1 c==> cfinal_list f0 f5 c==> cMEM f5 f1 c==> cMEM ce_list f2 f5 c==> c~ cMEM ce_list f2 cs_list f0 f3 f4 cfinal_list f0 cfind_list f1 ce_list f2
- |- ((!d. t) = t)
T c= ! f0 f0
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
+ (good_list L), (good_list_nodes L), (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))) |- ((final_list L) ((find_list N) (e_list lp)))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cmarked_list f0 f1 f2 f3 c/\ c= cl'y f0 f2 f3 f4 c/\ c~ cfinal_list f0 f2 c/\ cMEM f5 cparts f0 f2 c/\ cMEM f4 f5 c= cLAST f5 f6 cfinal_list f0 cfind_list f1 ce_list f6
+ |- (((!x. (((uniq (flatten N)) /\ (((MEM x) l) /\ ((MEM l) N))) ==> (((find_list N) x) = l))) ==> ((\x. (((uniq (flatten N)) /\ (((MEM x) l) /\ ((MEM l) N))) ==> (((find_list N) x) = l))) (e_list lp))) = ((\x. (((uniq (flatten N)) /\ (((MEM x) l) /\ ((MEM l) N))) ==> (((find_list N) x) = l))) (e_list lp)))
T c= c==> ! c==> c/\ cuniq cflatten f0 c/\ cMEM b0 f1 cMEM f1 f0 c= cfind_list f0 b0 f1 * / c==> c/\ cuniq cflatten f0 c/\ cMEM b0 f1 cMEM f1 f0 c= cfind_list f0 b0 f1 ce_list f2 * / c==> c/\ cuniq cflatten f0 c/\ cMEM b0 f1 cMEM f1 f0 c= cfind_list f0 b0 f1 ce_list f2
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ |- ((\L. (!N. (((final_dart_list L) N) = (flatten ((filter (final_list L)) N))))) L)
T * / ! c= cfinal_dart_list b0 b1 cflatten cfilter * part cfinal_list b0 b1 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM (e_list lp)) l))) ==> ((final_list L) ((find_list N) (e_list lp)))), (((MEM (e_list lp)) (((s_list L) r) x)) \/ (?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM (e_list lp)) l)))), ((MEM y) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- ((final_list L) ((find_list N) (e_list lp)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c==> c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f6 cMEM ce_list f3 b0 cfinal_list f0 cfind_list f6 ce_list f3 c==> c\/ cMEM ce_list f3 cs_list f0 f1 f4 c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f6 cMEM ce_list f3 b0 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cmarked_list f0 f6 f1 f4 cfinal_list f0 cfind_list f6 ce_list f3
+ (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (~ ((MEM lp) (((s_list L) r) x))), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM (e_list lp)) l), ((MEM l) N), ((MEM r) N), ((normal_list L) N), ((final_list L) l) |- ((~ ((MEM (e_list lp)) (((s_list L) r) x))) ==> ((final_list L) ((find_list N) (e_list lp))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c~ cMEM f2 cs_list f0 f3 f4 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f4 f3 c==> cMEM ce_list f2 f5 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cnormal_list f0 f1 c==> cfinal_list f0 f5 c==> c~ cMEM ce_list f2 cs_list f0 f3 f4 cfinal_list f0 cfind_list f1 ce_list f2
+ ((normal_list L) N) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) ==> ((~ ((MEM lp) (((s_list L) r) x))) ==> (((final_list L) l) ==> (((MEM l) N) ==> (((MEM (e_list lp)) l) ==> ((~ ((MEM (e_list lp)) (((s_list L) r) x))) ==> ((final_list L) ((find_list N) (e_list lp)))))))))))))
T c==> cnormal_list f0 f1 c==> cMEM f2 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f3 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c~ cMEM f4 cs_list f0 f3 f2 c==> cfinal_list f0 f5 c==> cMEM f5 f1 c==> cMEM ce_list f4 f5 c==> c~ cMEM ce_list f4 cs_list f0 f3 f2 cfinal_list f0 cfind_list f1 ce_list f4
+ (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (~ ((MEM lp) (((s_list L) r) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM (e_list lp)) l))) ==> ((final_list L) ((find_list N) (e_list lp))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c~ cMEM f2 cs_list f0 f3 f4 c==> c~ cfinal_list f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f5 f2 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> c= cl'y f0 f3 f4 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f4 f3 c==> cMEM f6 f5 c==> cMEM f5 cparts f0 f3 c==> cMEM f3 f1 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f3 f4 c==> c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM ce_list f2 b0 cfinal_list f0 cfind_list f1 ce_list f2
+ (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) ==> ((~ ((MEM lp) (((s_list L) r) x))) ==> (((final_list L) l) ==> (((MEM l) N) ==> (((MEM (e_list lp)) l) ==> ((~ ((MEM (e_list lp)) (((s_list L) r) x))) ==> ((final_list L) ((find_list N) (e_list lp)))))))))
T c==> c= cnext_el f0 f1 cf_list f2 f1 c==> cLET / cLET_END cfinal_list f2 b0 cfind_list f3 ce_list f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f2 f3 c==> cMEM f1 f0 c==> cMEM f0 f3 c==> cnormal_list f2 f3 c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f2 f3 cMEM b1 cfinal_dart_list f2 f3 c? / c/\ ccontour_list f2 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f2 f3 c==> c~ cMEM f4 cs_list f2 f0 f1 c==> cfinal_list f2 f5 c==> cMEM f5 f3 c==> cMEM ce_list f4 f5 c==> c~ cMEM ce_list f4 cs_list f2 f0 f1 cfinal_list f2 cfind_list f3 ce_list f4
- (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) ==> (((MEM p) ((parts L) r)) ==> (((MEM y) p) ==> (((LAST p) = lp) ==> ((final_list L) ((find_list N) (e_list lp))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cmarked_list f0 f4 f1 f2 c/\ c= cl'y f0 f1 f2 f3 c==> c~ cfinal_list f0 f1 c==> cMEM f5 cparts f0 f1 c==> cMEM f3 f5 c==> c= cLAST f5 f6 cfinal_list f0 cfind_list f4 ce_list f6
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 ! c==> c/\ c= b0 cLAST f4 c/\ cMEM f4 cparts f0 f5 c/\ cMEM f5 f1 c/\ c~ cfinal_list f0 f5 c~ cMEM b0 cs_list f0 f2 f3 cMEM ce_list b0 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1
+ ((MEM l) N), ((normal_list L) N), ((final_list L) l) |- (((MEM (e_list lp)) l) ==> ((~ ((MEM (e_list lp)) (((s_list L) r) x))) ==> ((final_list L) ((find_list N) (e_list lp)))))
T c==> cMEM f0 f1 c==> cnormal_list f2 f1 c==> cfinal_list f2 f0 c==> cMEM ce_list f3 f0 c==> c~ cMEM ce_list f3 cs_list f2 f4 f5 cfinal_list f2 cfind_list f1 ce_list f3
- |- ((?l. t) = t)
T c= c? / f0 f0
+ ((MEM (e_list lp)) l), ((MEM l) N), ((normal_list L) N), ((final_list L) l) |- ((final_list L) ((find_list N) (e_list lp)))
T c==> cMEM ce_list f0 f1 c==> cMEM f1 f2 c==> cnormal_list f3 f2 c==> cfinal_list f3 f1 cfinal_list f3 cfind_list f2 ce_list f0
+ ((MEM (e_list lp)) l), ((MEM l) N), ((final_list L) l) |- (((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))) ==> ((final_list L) ((find_list N) (e_list lp))))
T c==> cMEM ce_list f0 f1 c==> cMEM f1 f2 c==> cfinal_list f3 f1 c==> c/\ cuniq cflatten f2 c/\ call / c~ c= b0 cNIL f2 c/\ call * part cf_last f3 f2 c/\ call * part cloop_list f3 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f3 b0 * part cset_of_list cflatten f2 cfinal_list f3 cfind_list f2 ce_list f0
+ (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM lp) (((s_list L) r) x)))) ==> ((final_list L) ((find_list N) (e_list lp))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f4 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cl'y f0 f2 f3 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f6 f4 c==> cMEM f4 cparts f0 f2 c==> cMEM f2 f1 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f2 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cl'y f0 f2 f3 f6 c/\ c~ cfinal_list f0 f2 c/\ cMEM f4 cparts f0 f2 c/\ cMEM f6 f4 c= cLAST f4 f5 c~ cMEM f5 cs_list f0 f2 f3 cfinal_list f0 cfind_list f1 ce_list f5
+ (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (~ ((MEM lp) (((s_list L) r) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM (e_list lp)) l), ((MEM l) N), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((final_list L) l), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x)))) ==> ((final_list L) ((find_list N) (e_list lp))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c~ cMEM f2 cs_list f0 f3 f4 c==> c~ cfinal_list f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f5 f2 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> c= cl'y f0 f3 f4 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f4 f3 c==> cMEM f6 f5 c==> cMEM ce_list f2 f7 c==> cMEM f7 f1 c==> cMEM f5 cparts f0 f3 c==> cMEM f3 f1 c==> cnormal_list f0 f1 c==> cfinal_list f0 f7 c==> cmarked_list f0 f1 f3 f4 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f3 f4 c/\ c= cl'y f0 f3 f4 f6 c/\ c~ cfinal_list f0 f3 c/\ cMEM f5 cparts f0 f3 c/\ cMEM f6 f5 c= cLAST f5 f2 c~ cMEM ce_list f2 cs_list f0 f3 f4 cfinal_list f0 cfind_list f1 ce_list f2
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- (((!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))) ==> ((\y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))) y)) = ((\y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))) y))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c= c==> ! c==> c/\ c= b0 cLAST f4 c/\ cMEM f4 cparts f0 f5 c/\ cMEM f5 f1 c/\ c~ cfinal_list f0 f5 c~ cMEM b0 cs_list f0 f2 f3 cMEM ce_list b0 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 * / c==> c/\ c= b0 cLAST f4 c/\ cMEM f4 cparts f0 f5 c/\ cMEM f5 f1 c/\ c~ cfinal_list f0 f5 c~ cMEM b0 cs_list f0 f2 f3 cMEM ce_list b0 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f6 * / c==> c/\ c= b0 cLAST f4 c/\ cMEM f4 cparts f0 f5 c/\ cMEM f5 f1 c/\ c~ cfinal_list f0 f5 c~ cMEM b0 cs_list f0 f2 f3 cMEM ce_list b0 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f6
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM lp) (((s_list L) r) x)))) ==> ((final_list L) ((find_list N) (e_list lp)))) = ((final_list L) ((find_list N) (e_list lp))))
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cl'y f0 f2 f3 f4 c/\ c~ cfinal_list f0 f2 c/\ cMEM f5 cparts f0 f2 c/\ cMEM f4 f5 c= cLAST f5 f6 c~ cMEM f6 cs_list f0 f2 f3 cfinal_list f0 cfind_list f1 ce_list f6 cfinal_list f0 cfind_list f1 ce_list f6
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp))), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- ((final_list L) ((find_list N) (e_list lp)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c/\ cMEM f4 cparts f0 f1 c/\ cMEM f3 f4 c= cLAST f4 f5 c==> cMEM f4 cparts f0 f1 c==> cmarked_list f0 f6 f1 f2 cfinal_list f0 cfind_list f6 ce_list f5
- ((all (loop_list L)) N) |- (((all (loop_list L)) N) = T)
T c==> call * part cloop_list f0 f1 c= call * part cloop_list f0 f1 cT
+ |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x))))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c= cl'y f0 f2 b0 f3 c/\ c~ cfinal_list f0 f2 c/\ cMEM f4 cparts f0 f2 c/\ cMEM f3 f4 c= cLAST f4 f5 c~ cMEM ce_list f5 cs_list f0 f2 b0 f6
+ (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (~ ((MEM lp) (((s_list L) r) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), (((MEM (e_list lp)) (((s_list L) r) x)) \/ (?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM (e_list lp)) l)))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((MEM (e_list lp)) (((s_list L) r) x)) \/ (?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM (e_list lp)) l)))) /\ ((final_list L) ((find_list N) (e_list lp))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c~ cMEM f2 cs_list f0 f3 f4 c==> c~ cfinal_list f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f5 f2 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> c= cl'y f0 f3 f4 f6 c==> c\/ cMEM ce_list f2 cs_list f0 f3 f4 c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM ce_list f2 b0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f4 f3 c==> cMEM f6 f5 c==> cMEM f5 cparts f0 f3 c==> cMEM f3 f1 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f3 f4 c/\ c\/ cMEM ce_list f2 cs_list f0 f3 f4 c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM ce_list f2 b0 cfinal_list f0 cfind_list f1 ce_list f2
- |- (((!p. (!lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x)))))))))) ==> ((\p. (!lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x)))))))))) p)) = ((\p. (!lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x)))))))))) p))
T c= c==> ! ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'y b2 b4 b5 f0 c/\ c~ cfinal_list b2 b4 c/\ cMEM b0 cparts b2 b4 c/\ cMEM f0 b0 c= cLAST b0 b1 c~ cMEM ce_list b1 cs_list b2 b4 b5 * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'y b2 b4 b5 f0 c/\ c~ cfinal_list b2 b4 c/\ cMEM b0 cparts b2 b4 c/\ cMEM f0 b0 c= cLAST b0 b1 c~ cMEM ce_list b1 cs_list b2 b4 b5 f1 * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'y b2 b4 b5 f0 c/\ c~ cfinal_list b2 b4 c/\ cMEM b0 cparts b2 b4 c/\ cMEM f0 b0 c= cLAST b0 b1 c~ cMEM ce_list b1 cs_list b2 b4 b5 f1
- ((all (\s. (~ (s = NIL)))) N) |- (((all (\s. (~ (s = NIL)))) N) = T)
T c==> call / c~ c= b0 cNIL f0 c= call / c~ c= b0 cNIL f0 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) ==> (((MEM y) p) ==> (((LAST p) = lp) ==> ((final_list L) ((find_list N) (e_list lp)))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cmarked_list f0 f4 f1 f2 c/\ c~ cfinal_list f0 f1 c==> cMEM f5 cparts f0 f1 c==> cMEM f3 f5 c==> c= cLAST f5 f6 cfinal_list f0 cfind_list f4 ce_list f6
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))))))), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((final_list L) ((find_list N) (e_list lp)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c/\ cMEM f4 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c/\ c= cnext_el f1 f4 cf_list f0 f4 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c/\ ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f6 cMEM b1 cfinal_dart_list f0 f6 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f6 ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 c==> cMEM f4 f1 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f6 c==> cnormal_list f0 f6 c==> cmarked_list f0 f6 f1 f4 cfinal_list f0 cfind_list f6 ce_list f3
+ ((final_list L) l) |- (((final_list L) l) = T)
T c==> cfinal_list f0 f1 c= cfinal_list f0 f1 cT
+ |- (((!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) ==> ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)) = ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x))
T c= c==> ! c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ |- ((\N. (((final_dart_list L) N) = (flatten ((filter (final_list L)) N)))) N)
T * / c= cfinal_dart_list f0 b0 cflatten cfilter * part cfinal_list f0 b0 f1
- ((normal_list L) N) |- (((normal_list L) N) = T)
T c==> cnormal_list f0 f1 c= cnormal_list f0 f1 cT
+ (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))), ((((marked_list L) N) r) x) |- ((final_list L) ((find_list N) (e_list lp)))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c/\ c~ cfinal_list f0 f1 c/\ cMEM f4 cparts f0 f1 c/\ cMEM f3 f4 c= cLAST f4 f5 c==> cmarked_list f0 f6 f1 f2 cfinal_list f0 cfind_list f6 ce_list f5
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((final_list L) ((find_list N) (e_list lp)))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f4 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cl'y f0 f2 f3 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f6 f4 c==> cMEM f4 cparts f0 f2 c==> cMEM f2 f1 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f2 f3 cfinal_list f0 cfind_list f1 ce_list f5
+ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- (((!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ ((~ ((final_list L) r)) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))) ==> ((\p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ ((~ ((final_list L) r)) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))) p)) = ((\p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r)) /\ (((MEM r) N) /\ ((~ ((final_list L) r)) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))) p))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c= c==> ! ! c==> c/\ c= b1 cLAST b0 c/\ cMEM b0 cparts f0 f2 c/\ cMEM f2 f1 c/\ c~ cfinal_list f0 f2 c~ cMEM b1 cs_list f0 f2 f3 cMEM ce_list b1 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 * / ! c==> c/\ c= b1 cLAST b0 c/\ cMEM b0 cparts f0 f2 c/\ cMEM f2 f1 c/\ c~ cfinal_list f0 f2 c~ cMEM b1 cs_list f0 f2 f3 cMEM ce_list b1 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f4 * / ! c==> c/\ c= b1 cLAST b0 c/\ cMEM b0 cparts f0 f2 c/\ cMEM f2 f1 c/\ c~ cfinal_list f0 f2 c~ cMEM b1 cs_list f0 f2 f3 cMEM ce_list b1 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f4
- |- ((!p. (!lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM lp) (((s_list L) r) x)))))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'y b2 b4 b5 f0 c/\ c~ cfinal_list b2 b4 c/\ cMEM b0 cparts b2 b4 c/\ cMEM f0 b0 c= cLAST b0 b1 c~ cMEM b1 cs_list b2 b4 b5 cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = lp), ((((l'y L) r) x) = y), ((MEM y) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- ((final_list L) ((find_list N) (e_list lp)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> cMEM f5 f2 c==> cMEM f2 cparts f0 f1 c==> cmarked_list f0 f6 f1 f4 cfinal_list f0 cfind_list f6 ce_list f3
+ ((MEM r) N), ((normal_list L) N) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) ==> ((~ ((MEM lp) (((s_list L) r) x))) ==> (((final_list L) l) ==> (((MEM l) N) ==> (((MEM (e_list lp)) l) ==> ((~ ((MEM (e_list lp)) (((s_list L) r) x))) ==> ((final_list L) ((find_list N) (e_list lp))))))))))))))
T c==> cMEM f0 f1 c==> cnormal_list f2 f1 c/\ cMEM f0 f1 c==> cMEM f3 f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f2 f1 c==> c= cnext_el f0 f3 cf_list f2 f3 c==> cLET / cLET_END cfinal_list f2 b0 cfind_list f1 ce_list f3 c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f2 f1 cMEM b1 cfinal_dart_list f2 f1 c? / c/\ ccontour_list f2 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f2 f1 c==> c~ cMEM f4 cs_list f2 f0 f3 c==> cfinal_list f2 f5 c==> cMEM f5 f1 c==> cMEM ce_list f4 f5 c==> c~ cMEM ce_list f4 cs_list f2 f0 f3 cfinal_list f2 cfind_list f1 ce_list f4
+ (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ ((MEM lp) (((s_list L) r) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((~ ((MEM lp) (((s_list L) r) x))) /\ ((final_list L) ((find_list N) (e_list lp))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ cMEM f4 cs_list f0 f2 f3 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f5 f4 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cl'y f0 f2 f3 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f6 f5 c==> cMEM f5 cparts f0 f2 c==> cMEM f2 f1 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f2 f3 c/\ c~ cMEM f4 cs_list f0 f2 f3 cfinal_list f0 cfind_list f1 ce_list f4
+ (((next_el r) x) = ((f_list L) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) ==> ((~ ((MEM lp) (((s_list L) r) x))) ==> (((final_list L) l) ==> (((MEM l) N) ==> (((MEM (e_list lp)) l) ==> ((~ ((MEM (e_list lp)) (((s_list L) r) x))) ==> ((final_list L) ((find_list N) (e_list lp))))))))))
T c==> c= cnext_el f0 f1 cf_list f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f2 f3 c==> cMEM f1 f0 c==> cMEM f0 f3 c==> cnormal_list f2 f3 c==> cLET / cLET_END cfinal_list f2 b0 cfind_list f3 ce_list f1 c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f2 f3 cMEM b1 cfinal_dart_list f2 f3 c? / c/\ ccontour_list f2 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f2 f3 c==> c~ cMEM f4 cs_list f2 f0 f1 c==> cfinal_list f2 f5 c==> cMEM f5 f3 c==> cMEM ce_list f4 f5 c==> c~ cMEM ce_list f4 cs_list f2 f0 f1 cfinal_list f2 cfind_list f3 ce_list f4
+ ((MEM (e_list lp)) (((s_list L) r) x)) |- (((MEM (e_list lp)) (((s_list L) r) x)) = T)
T c==> cMEM ce_list f0 cs_list f1 f2 f3 c= cMEM ce_list f0 cs_list f1 f2 f3 cT
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- ((\p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))) p)
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 * / ! c==> c/\ c= b1 cLAST b0 c/\ cMEM b0 cparts f0 f4 c/\ cMEM f4 f1 c/\ c~ cfinal_list f0 f4 c~ cMEM b1 cs_list f0 f2 f3 cMEM ce_list b1 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f5
- |- ((\y. (!p. (!lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM lp) (((s_list L) r) x))))))))))) y)
T * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'y b3 b5 b6 b0 c/\ c~ cfinal_list b3 b5 c/\ cMEM b1 cparts b3 b5 c/\ cMEM b0 b1 c= cLAST b1 b2 c~ cMEM b2 cs_list b3 b5 b6 f0
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (~ ((MEM lp) (((s_list L) r) x))), (~ ((MEM (e_list lp)) (((s_list L) r) x))), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM (e_list lp)) l), ((MEM l) N), ((MEM r) N), ((normal_list L) N), ((final_list L) l) |- ((~ ((MEM (e_list lp)) (((s_list L) r) x))) /\ ((final_list L) ((find_list N) (e_list lp))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c~ cMEM f2 cs_list f0 f3 f4 c==> c~ cMEM ce_list f2 cs_list f0 f3 f4 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f4 f3 c==> cMEM ce_list f2 f5 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cnormal_list f0 f1 c==> cfinal_list f0 f5 c/\ c~ cMEM ce_list f2 cs_list f0 f3 f4 cfinal_list f0 cfind_list f1 ce_list f2
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- (((!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))) ==> ((\p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))) p)) = ((\p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))) p))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c= c==> ! ! c==> c/\ c= b1 cLAST b0 c/\ cMEM b0 cparts f0 f4 c/\ cMEM f4 f1 c/\ c~ cfinal_list f0 f4 c~ cMEM b1 cs_list f0 f2 f3 cMEM ce_list b1 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 * / ! c==> c/\ c= b1 cLAST b0 c/\ cMEM b0 cparts f0 f4 c/\ cMEM f4 f1 c/\ c~ cfinal_list f0 f4 c~ cMEM b1 cs_list f0 f2 f3 cMEM ce_list b1 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f5 * / ! c==> c/\ c= b1 cLAST b0 c/\ cMEM b0 cparts f0 f4 c/\ cMEM f4 f1 c/\ c~ cfinal_list f0 f4 c~ cMEM b1 cs_list f0 f2 f3 cMEM ce_list b1 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f5
- |- (((!y. (!p. (!lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x))))))))))) ==> ((\y. (!p. (!lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x))))))))))) y)) = ((\y. (!p. (!lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x))))))))))) y))
T c= c==> ! ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'y b3 b5 b6 b0 c/\ c~ cfinal_list b3 b5 c/\ cMEM b1 cparts b3 b5 c/\ cMEM b0 b1 c= cLAST b1 b2 c~ cMEM ce_list b2 cs_list b3 b5 b6 * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'y b3 b5 b6 b0 c/\ c~ cfinal_list b3 b5 c/\ cMEM b1 cparts b3 b5 c/\ cMEM b0 b1 c= cLAST b1 b2 c~ cMEM ce_list b2 cs_list b3 b5 b6 f0 * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'y b3 b5 b6 b0 c/\ c~ cfinal_list b3 b5 c/\ cMEM b1 cparts b3 b5 c/\ cMEM b0 b1 c= cLAST b1 b2 c~ cMEM ce_list b2 cs_list b3 b5 b6 f0
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM (e_list lp)) l))), (~ ((MEM lp) (((s_list L) r) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((final_list L) ((find_list N) (e_list lp)))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM ce_list f2 b0 c==> c~ cMEM f2 cs_list f0 f3 f4 c==> c~ cfinal_list f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f5 f2 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> c= cl'y f0 f3 f4 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f4 f3 c==> cMEM f6 f5 c==> cMEM f5 cparts f0 f3 c==> cMEM f3 f1 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f3 f4 cfinal_list f0 cfind_list f1 ce_list f2
- |- (((!p. (!lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM lp) (((s_list L) r) x)))))))))) ==> ((\p. (!lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM lp) (((s_list L) r) x)))))))))) p)) = ((\p. (!lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM lp) (((s_list L) r) x)))))))))) p))
T c= c==> ! ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'y b2 b4 b5 f0 c/\ c~ cfinal_list b2 b4 c/\ cMEM b0 cparts b2 b4 c/\ cMEM f0 b0 c= cLAST b0 b1 c~ cMEM b1 cs_list b2 b4 b5 * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'y b2 b4 b5 f0 c/\ c~ cfinal_list b2 b4 c/\ cMEM b0 cparts b2 b4 c/\ cMEM f0 b0 c= cLAST b0 b1 c~ cMEM b1 cs_list b2 b4 b5 f1 * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'y b2 b4 b5 f0 c/\ c~ cfinal_list b2 b4 c/\ cMEM b0 cparts b2 b4 c/\ cMEM f0 b0 c= cLAST b0 b1 c~ cMEM b1 cs_list b2 b4 b5 f1
- |- ((!p. (!lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x)))))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'y b2 b4 b5 f0 c/\ c~ cfinal_list b2 b4 c/\ cMEM b0 cparts b2 b4 c/\ cMEM f0 b0 c= cLAST b0 b1 c~ cMEM ce_list b1 cs_list b2 b4 b5 cT
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) |- ((\u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) u)
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 * / ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 f2
- |- (((!lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM lp) (((s_list L) r) x))))))))) ==> ((\lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM lp) (((s_list L) r) x))))))))) lp)) = ((\lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM lp) (((s_list L) r) x))))))))) lp))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'y b1 b3 b4 f0 c/\ c~ cfinal_list b1 b3 c/\ cMEM f1 cparts b1 b3 c/\ cMEM f0 f1 c= cLAST f1 b0 c~ cMEM b0 cs_list b1 b3 b4 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'y b1 b3 b4 f0 c/\ c~ cfinal_list b1 b3 c/\ cMEM f1 cparts b1 b3 c/\ cMEM f0 f1 c= cLAST f1 b0 c~ cMEM b0 cs_list b1 b3 b4 f2 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'y b1 b3 b4 f0 c/\ c~ cfinal_list b1 b3 c/\ cMEM f1 cparts b1 b3 c/\ cMEM f0 f1 c= cLAST f1 b0 c~ cMEM b0 cs_list b1 b3 b4 f2
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) |- ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c/\ cMEM f2 cfinal_dart_list f0 f1 cMEM f3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f1
- |- ((\lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM lp) (((s_list L) r) x))))))))) lp)
T * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'y b1 b3 b4 f0 c/\ c~ cfinal_list b1 b3 c/\ cMEM f1 cparts b1 b3 c/\ cMEM f0 f1 c= cLAST f1 b0 c~ cMEM b0 cs_list b1 b3 b4 f2
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c/\ c= f4 cLAST f5 c/\ cMEM f5 cparts f0 f6 c/\ cMEM f6 f1 c/\ c~ cfinal_list f0 f6 c~ cMEM f4 cs_list f0 f2 f3 cMEM ce_list f4 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1
- (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) ==> (((MEM p) ((parts L) r)) ==> (((MEM y) p) ==> (((LAST p) = lp) ==> ((final_list L) ((find_list N) (e_list lp)))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cmarked_list f0 f4 f1 f2 c==> c~ cfinal_list f0 f1 c==> cMEM f5 cparts f0 f1 c==> cMEM f3 f5 c==> c= cLAST f5 f6 cfinal_list f0 cfind_list f4 ce_list f6
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) |- (((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))) = T)
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c= c==> c/\ cMEM f2 cfinal_dart_list f0 f1 cMEM f3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f1 cT
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (~ ((MEM lp) (((s_list L) r) x))), (~ ((MEM (e_list lp)) (((s_list L) r) x))), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM (e_list lp)) l), ((MEM l) N), ((MEM r) N), ((normal_list L) N), ((final_list L) l) |- ((final_list L) ((find_list N) (e_list lp)))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c~ cMEM f2 cs_list f0 f3 f4 c==> c~ cMEM ce_list f2 cs_list f0 f3 f4 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f4 f3 c==> cMEM ce_list f2 f5 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> cnormal_list f0 f1 c==> cfinal_list f0 f5 cfinal_list f0 cfind_list f1 ce_list f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((MEM p) ((parts L) r)) /\ (((MEM y) p) ==> (((LAST p) = lp) ==> ((final_list L) ((find_list N) (e_list lp))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cMEM f4 cparts f0 f1 c==> cmarked_list f0 f5 f1 f2 c/\ cMEM f4 cparts f0 f1 c==> cMEM f3 f4 c==> c= cLAST f4 f6 cfinal_list f0 cfind_list f5 ce_list f6
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 ! ! c==> c/\ c= b1 cLAST b0 c/\ cMEM b0 cparts f0 f4 c/\ cMEM f4 f1 c/\ c~ cfinal_list f0 f4 c~ cMEM b1 cs_list f0 f2 f3 cMEM ce_list b1 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((MEM y) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((MEM y) p) /\ (((LAST p) = lp) ==> ((final_list L) ((find_list N) (e_list lp)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cMEM f3 f4 c==> cMEM f4 cparts f0 f1 c==> cmarked_list f0 f5 f1 f2 c/\ cMEM f3 f4 c==> c= cLAST f4 f6 cfinal_list f0 cfind_list f5 ce_list f6
- |- ((\p. (!lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x)))))))))) p)
T * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'y b2 b4 b5 f0 c/\ c~ cfinal_list b2 b4 c/\ cMEM b0 cparts b2 b4 c/\ cMEM f0 b0 c= cLAST b0 b1 c~ cMEM ce_list b1 cs_list b2 b4 b5 f1
- |- ((\lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x))))))))) lp)
T * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'y b1 b3 b4 f0 c/\ c~ cfinal_list b1 b3 c/\ cMEM f1 cparts b1 b3 c/\ cMEM f0 f1 c= cLAST f1 b0 c~ cMEM ce_list b0 cs_list b1 b3 b4 f2
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((\d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) d)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 * / c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 f2
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) |- (((!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))))) ==> ((\v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))))) v)) = ((\v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))))) v))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c= c==> ! c==> c/\ cMEM f2 cfinal_dart_list f0 f1 cMEM b0 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f2 c/\ c= cLAST b1 b0 cSUBSET * part cset_of_list b1 * part cset_of_list cfinal_dart_list f0 f1 * / c==> c/\ cMEM f2 cfinal_dart_list f0 f1 cMEM b0 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f2 c/\ c= cLAST b1 b0 cSUBSET * part cset_of_list b1 * part cset_of_list cfinal_dart_list f0 f1 f3 * / c==> c/\ cMEM f2 cfinal_dart_list f0 f1 cMEM b0 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f2 c/\ c= cLAST b1 b0 cSUBSET * part cset_of_list b1 * part cset_of_list cfinal_dart_list f0 f1 f3
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) |- (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 ! c==> c/\ cMEM f2 cfinal_dart_list f0 f1 cMEM b0 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f2 c/\ c= cLAST b1 b0 cSUBSET * part cset_of_list b1 * part cset_of_list cfinal_dart_list f0 f1
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- ((\r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) r')
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 * / ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f4
- |- ((!lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM lp) (((s_list L) r) x))))))))) = T)
T c= ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'y b1 b3 b4 f0 c/\ c~ cfinal_list b1 b3 c/\ cMEM f1 cparts b1 b3 c/\ cMEM f0 f1 c= cLAST f1 b0 c~ cMEM b0 cs_list b1 b3 b4 cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM (e_list lp)) l))), (~ ((MEM lp) (((s_list L) r) x))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = lp), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM y) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM (e_list lp)) l))) /\ ((final_list L) ((find_list N) (e_list lp))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM ce_list f2 b0 c==> c~ cMEM f2 cs_list f0 f3 f4 c==> c~ cfinal_list f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f5 f2 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> c= cl'y f0 f3 f4 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f4 f3 c==> cMEM f6 f5 c==> cMEM f5 cparts f0 f3 c==> cMEM f3 f1 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f3 f4 c/\ c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM ce_list f2 b0 cfinal_list f0 cfind_list f1 ce_list f2
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- ((\y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))) y)
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 * / c==> c/\ c= b0 cLAST f4 c/\ cMEM f4 cparts f0 f5 c/\ cMEM f5 f1 c/\ c~ cfinal_list f0 f5 c~ cMEM b0 cs_list f0 f2 f3 cMEM ce_list b0 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f6
- |- (((!y. (!p. (!lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM lp) (((s_list L) r) x))))))))))) ==> ((\y. (!p. (!lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM lp) (((s_list L) r) x))))))))))) y)) = ((\y. (!p. (!lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM lp) (((s_list L) r) x))))))))))) y))
T c= c==> ! ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'y b3 b5 b6 b0 c/\ c~ cfinal_list b3 b5 c/\ cMEM b1 cparts b3 b5 c/\ cMEM b0 b1 c= cLAST b1 b2 c~ cMEM b2 cs_list b3 b5 b6 * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'y b3 b5 b6 b0 c/\ c~ cfinal_list b3 b5 c/\ cMEM b1 cparts b3 b5 c/\ cMEM b0 b1 c= cLAST b1 b2 c~ cMEM b2 cs_list b3 b5 b6 f0 * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'y b3 b5 b6 b0 c/\ c~ cfinal_list b3 b5 c/\ cMEM b1 cparts b3 b5 c/\ cMEM b0 b1 c= cLAST b1 b2 c~ cMEM b2 cs_list b3 b5 b6 f0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0
- |- ((\y. (!p. (!lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x))))))))))) y)
T * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'y b3 b5 b6 b0 c/\ c~ cfinal_list b3 b5 c/\ cMEM b1 cparts b3 b5 c/\ cMEM b0 b1 c= cLAST b1 b2 c~ cMEM ce_list b2 cs_list b3 b5 b6 f0
- (~ ((MEM (e_list lp)) (((s_list L) r) x))) |- (((MEM (e_list lp)) (((s_list L) r) x)) = F)
T c==> c~ cMEM ce_list f0 cs_list f1 f2 f3 c= cMEM ce_list f0 cs_list f1 f2 f3 cF
- |- (((!lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x))))))))) ==> ((\lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x))))))))) lp)) = ((\lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM (e_list lp)) (((s_list L) r) x))))))))) lp))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'y b1 b3 b4 f0 c/\ c~ cfinal_list b1 b3 c/\ cMEM f1 cparts b1 b3 c/\ cMEM f0 f1 c= cLAST f1 b0 c~ cMEM ce_list b0 cs_list b1 b3 b4 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'y b1 b3 b4 f0 c/\ c~ cfinal_list b1 b3 c/\ cMEM f1 cparts b1 b3 c/\ cMEM f0 f1 c= cLAST f1 b0 c~ cMEM ce_list b0 cs_list b1 b3 b4 f2 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'y b1 b3 b4 f0 c/\ c~ cfinal_list b1 b3 c/\ cMEM f1 cparts b1 b3 c/\ cMEM f0 f1 c= cLAST f1 b0 c~ cMEM ce_list b0 cs_list b1 b3 b4 f2
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c= cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 cT
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 cT
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- ((((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))) = T)
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c= c==> c/\ c= f4 cLAST f5 c/\ cMEM f5 cparts f0 f6 c/\ cMEM f6 f1 c/\ c~ cfinal_list f0 f6 c~ cMEM f4 cs_list f0 f2 f3 cMEM ce_list f4 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 cT
- ((all (f_last L)) N) |- (((all (f_last L)) N) = T)
T c==> call * part cf_last f0 f1 c= call * part cf_last f0 f1 cT
- |- ((\p. (!lp. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM lp) (((s_list L) r) x)))))))))) p)
T * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'y b2 b4 b5 f0 c/\ c~ cfinal_list b2 b4 c/\ cMEM b0 cparts b2 b4 c/\ cMEM f0 b0 c= cLAST b0 b1 c~ cMEM b1 cs_list b2 b4 b5 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((MEM y) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((LAST p) = lp) ==> ((final_list L) ((find_list N) (e_list lp))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cMEM f3 f4 c==> cMEM f4 cparts f0 f1 c==> cmarked_list f0 f5 f1 f2 c==> c= cLAST f4 f6 cfinal_list f0 cfind_list f5 ce_list f6
- |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((((l'y L) r) x) = y) /\ ((~ ((final_list L) r)) /\ (((MEM p) ((parts L) r)) /\ (((MEM y) p) /\ ((LAST p) = lp)))))))) ==> (~ ((MEM lp) (((s_list L) r) x)))))))) = T)
T c= ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cl'y b0 b2 b3 f0 c/\ c~ cfinal_list b0 b2 c/\ cMEM f1 cparts b0 b2 c/\ cMEM f0 f1 c= cLAST f1 f2 c~ cMEM f2 cs_list b0 b2 b3 cT
- (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) ==> ((~ ((final_list L) r)) ==> (((MEM p) ((parts L) r)) ==> (((MEM y) p) ==> (((LAST p) = lp) ==> ((final_list L) ((find_list N) (e_list lp))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c= cl'y f0 f2 f3 f4 c==> c~ cfinal_list f0 f2 c==> cMEM f5 cparts f0 f2 c==> cMEM f4 f5 c==> c= cLAST f5 f6 cfinal_list f0 cfind_list f1 ce_list f6
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) |- ((\v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))))) v)
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 * / c==> c/\ cMEM f2 cfinal_dart_list f0 f1 cMEM b0 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f2 c/\ c= cLAST b1 b0 cSUBSET * part cset_of_list b1 * part cset_of_list cfinal_dart_list f0 f1 f3
