N Asfutbf.hypermap_of_fan_neg
C |- (!V. ((contravening V) ==> ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))))
T c==> ccontravening f0 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 copposite_hypermap chypermap_of_fan c, f0 * part cESTD f0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D FORALL_BOOL_THM
A |- ((!b. (P b)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D FORALL_PAIR_THM
A |- (!P. ((!p. (P p)) = (!p1. (!p2. (P (p1 , p2))))))
T c= ! * f0 b0 ! ! * f0 c, b0 b1
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D Misc_defs_and_lemmas.IN_ELIM_THM'
A |- ((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D VECTOR_NEG_NEG
A |- ((vector_neg (vector_neg x)) = x)
T c= cvector_neg cvector_neg f0 f0
D PERMUTES_INVERSE_EQ
A |- (!p. (!s. (((permutes p) s) ==> (!x. (!y. ((((inverse p) y) = x) = ((p x) = y)))))))
T c==> cpermutes f0 f1 ! ! c= c= cinverse f0 b1 b0 c= * f0 b0 b1
D Hypermap.node_map_and_darts
A |- (!H. ((FINITE (dart H)) /\ ((permutes (node_map H)) (dart H))))
T c/\ cFINITE * part cdart f0 cpermutes * part cnode_map f0 * part cdart f0
D Hypermap.iso_sym
A |- (!H. (!G. (((iso H) G) ==> ((iso G) H))))
T c==> ciso f0 f1 ciso f1 f0
D Hypermap.iso_trans
A |- (!H. (!G. (!W. ((((iso H) G) /\ ((iso G) W)) ==> ((iso H) W)))))
T c==> c/\ ciso f0 f1 ciso f1 f2 ciso f0 f2
D Fan_defs.set_of_edge
A |- (!v. (!E. (!V. ((((set_of_edge v) V) E) = (GSPEC (\GEN%PVAR%5439. (?w. (((SETSPEC GEN%PVAR%5439) (((v INSERT (w INSERT EMPTY)) IN E) /\ (w IN V))) w))))))))
T c= * * * part cset_of_edge f0 f1 f2 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f2 cIN b1 f1 b1
D Fan_defs.n_fan_pair
A |- (!V. (!E. (!v. (!w. (((n_fan_pair (V , E)) (v , w)) = (v , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)))))))
T c= cn_fan_pair c, f0 f1 c, f2 f3 c, f2 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3
D Fan_defs.n_fan_pair_ext
A |- (!V. (!E. (!x. (((n_fan_pair_ext (V , E)) x) = (((COND (x IN (dart1_of_fan (V , E)))) ((n_fan_pair (V , E)) x)) x)))))
T c= cn_fan_pair_ext c, f0 f1 f2 cCOND cIN f2 * part cdart1_of_fan c, f0 f1 cn_fan_pair c, f0 f1 f2 f2
D Hypermap_and_fan.N_FAN_PAIR_EXT_PERMUTES_DART_OF_FAN
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 cpermutes * part cn_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1
D Hypermap_and_fan.COMPONENTS_HYPERMAP_OF_FAN
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((dart (hypermap_of_fan (V , E))) = (dart_of_fan (V , E))) /\ (((edge_map (hypermap_of_fan (V , E))) = (e_fan_pair_ext (V , E))) /\ (((node_map (hypermap_of_fan (V , E))) = (n_fan_pair_ext (V , E))) /\ ((face_map (hypermap_of_fan (V , E))) = (f_fan_pair_ext (V , E)))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ c= * part cdart chypermap_of_fan c, f0 f1 * part cdart_of_fan c, f0 f1 c/\ c= * part cedge_map chypermap_of_fan c, f0 f1 * part ce_fan_pair_ext c, f0 f1 c/\ c= * part cnode_map chypermap_of_fan c, f0 f1 * part cn_fan_pair_ext c, f0 f1 c= * part cface_map chypermap_of_fan c, f0 f1 * part cf_fan_pair_ext c, f0 f1
D Lvducxu.PROPERTIES_OF_IVS_AZIM_CYCLE2
A |- (((FAN (x , (V , E))) /\ (w IN ((EE v) E))) ==> ((((((ivs_azim_cycle ((EE v) E)) x) v) w) IN ((EE v) E)) /\ (((((azim_cycle ((EE v) E)) x) v) ((((ivs_azim_cycle ((EE v) E)) x) v) w)) = w)))
T c==> c/\ cFAN c, f0 c, f1 f2 cIN f3 * * part cEE f4 f2 c/\ cIN civs_azim_cycle * * part cEE f4 f2 f0 f4 f3 * * part cEE f4 f2 c= cazim_cycle * * part cEE f4 f2 f0 f4 civs_azim_cycle * * part cEE f4 f2 f0 f4 f3 f3
D Localization.EE_elim
A |- (!V. (!E. (!v. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((EE v) E) = (((set_of_edge v) V) E))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= * * part cEE f2 f1 * * * part cset_of_edge f2 f0 f1
D Localization.AZIM_CYCLE_EQ_SIGMA_FAN_ALT
A |- (!V. (!E. (!u. (!v. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> (((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u) = (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 c= cazim_cycle * * * part cset_of_edge f3 f0 f1 cvec cNUMERAL c_0 f3 f2 csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f2
D Localization.ivs_azim_cycle_elim
A |- (!V. (!E. (!p1. (!p2. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) ==> (((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2) = (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c= civs_azim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 f3 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3
D Tame_defs.ESTD
A |- (!V. ((ESTD V) = (GSPEC (\GEN%PVAR%7619. (?v. (?w. (((SETSPEC GEN%PVAR%7619) ((v IN V) /\ ((w IN V) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))))) (v INSERT (w INSERT EMPTY)))))))))
T c= * part cESTD f0 * part cGSPEC / c? / c? / cSETSPEC b0 c/\ cIN b1 f0 c/\ cIN b2 f0 c/\ c~ c= b1 b2 creal_le cdistance c, b1 b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
D Hypermap_iso.hyp_iso_imp_iso
A |- (!H. (!G. (!f. (((hyp_iso f) (H , G)) ==> ((iso H) G)))))
T c==> chyp_iso f0 c, f1 f2 ciso f1 f2
D Hypermap_iso.hyp_iso_edge_node
A |- (!G. (!f. (!H. (((hyp_iso f) (H , G)) = ((((BIJ f) (dart H)) (dart G)) /\ (!x. ((x IN (dart H)) ==> ((((edge_map G) (f x)) = (f ((edge_map H) x))) /\ (((node_map G) (f x)) = (f ((node_map H) x)))))))))))
T c= chyp_iso f0 c, f1 f2 c/\ cBIJ f0 * part cdart f1 * part cdart f2 ! c==> cIN b0 * part cdart f1 c/\ c= cedge_map f2 * f0 b0 * f0 cedge_map f1 b0 c= cnode_map f2 * f0 b0 * f0 cnode_map f1 b0
D Tame_general.CONTRAVENING_FAN
A |- (!V. ((contravening V) ==> (FAN ((vec (NUMERAL _0)) , (V , (ESTD V))))))
T c==> ccontravening f0 cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0
D Tame_opposite.opposite_components
A |- (!H. (!x. (((dart (opposite_hypermap H)) = (dart H)) /\ ((((node (opposite_hypermap H)) x) = ((node H) x)) /\ (((face (opposite_hypermap H)) x) = ((face H) x))))))
T c/\ c= * part cdart copposite_hypermap f0 * part cdart f0 c/\ c= * * part cnode copposite_hypermap f0 f1 * * part cnode f0 f1 c= * * part cface copposite_hypermap f0 f1 * * part cface f0 f1
D Add_triangle.inE_eq_in_dart1
A |- (!V. (!E. (!v. (!w. (((v INSERT (w INSERT EMPTY)) IN E) = ((v , w) IN (dart1_of_fan (V , E))))))))
T c= cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cIN c, f0 f1 * part cdart1_of_fan c, f3 f2
D Add_triangle.inv_e_fan_pair_ext
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((inverse (e_fan_pair_ext (V , E))) = (e_fan_pair_ext (V , E))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= * part cinverse * part ce_fan_pair_ext c, f0 f1 * part ce_fan_pair_ext c, f0 f1
D List_hypermap_iso.e_fan_pair_ext_explicit
A |- (!V. (!E. (!v. (!w. (((v , w) IN (dart_of_fan (V , E))) ==> (((e_fan_pair_ext (V , E)) (v , w)) = (w , v)))))))
T c==> cIN c, f0 f1 * part cdart_of_fan c, f2 f3 c= ce_fan_pair_ext c, f2 f3 c, f0 f1 c, f1 f0
D More_list_hypermap.contravening_dart_eq_dart1
A |- (!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V))))))
T c==> ccontravening f0 c= * part cdart_of_fan c, f0 * part cESTD f0 * part cdart1_of_fan c, f0 * part cESTD f0
D Asfutbf.FORALL_NEG
A |- (!P. ((!v. (P v)) = (!v. (P (vector_neg v)))))
T c= ! * f0 b0 ! * f0 cvector_neg b0
D Asfutbf.contravening_negative
A |- (!V. ((contravening V) ==> (contravening ((IMAGE vector_neg) V))))
T c==> ccontravening f0 ccontravening * * part cIMAGE part cvector_neg f0
D Asfutbf.dart1_of_fan_neg
A |- (!V. (!u. (!v. ((((vector_neg u) , (vector_neg v)) IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) = ((u , v) IN (dart1_of_fan (V , (ESTD V))))))))
T c= cIN c, cvector_neg f0 cvector_neg f1 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f2 * part cESTD * * part cIMAGE part cvector_neg f2 cIN c, f0 f1 * part cdart1_of_fan c, f2 * part cESTD f2
D Asfutbf.BIJ_dart1_of_fan_neg
A |- (!V. (((BIJ (\uv. ((vector_neg (FST uv)) , (vector_neg (SND uv))))) (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (dart1_of_fan (V , (ESTD V)))))
T cBIJ / c, cvector_neg cFST b0 cvector_neg cSND b0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 * part cdart1_of_fan c, f0 * part cESTD f0
D Asfutbf.hyp_conj_opposite_components
A |- (!H. (((dart ((hyp_conj (node_map H)) (opposite_hypermap H))) = (dart H)) /\ (((edge_map ((hyp_conj (node_map H)) (opposite_hypermap H))) = (inverse (edge_map H))) /\ (((node_map ((hyp_conj (node_map H)) (opposite_hypermap H))) = (inverse (node_map H))) /\ ((face_map ((hyp_conj (node_map H)) (opposite_hypermap H))) = ((node_map H) o ((inverse (face_map H)) o (inverse (node_map H)))))))))
T c/\ c= * part cdart chyp_conj * part cnode_map f0 copposite_hypermap f0 * part cdart f0 c/\ c= * part cedge_map chyp_conj * part cnode_map f0 copposite_hypermap f0 * part cinverse * part cedge_map f0 c/\ c= * part cnode_map chyp_conj * part cnode_map f0 copposite_hypermap f0 * part cinverse * part cnode_map f0 c= * part cface_map chyp_conj * part cnode_map f0 copposite_hypermap f0 * * part co * part cnode_map f0 * * part co * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0
D Asfutbf.hyp_conj_hyp_iso
A |- (!p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H))))))
T c==> cpermutes f0 * part cdart f1 chyp_iso f0 c, f1 chyp_conj f0 f1
D Asfutbf.n_fan_pair_neg
A |- (!V. (!v. (!w. (((contravening V) /\ ((v , w) IN (dart1_of_fan (V , (ESTD V))))) ==> (((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg v) , (vector_neg w))) = ((vector_neg v) , (vector_neg (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) v) w))))))))
T c==> c/\ ccontravening f0 cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c= cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg f2 c, cvector_neg f1 cvector_neg cinverse_sigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 f1 f2
- (x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) |- ((x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) = T)
T c==> cIN f0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c= cIN f0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 cT
- |- ((!E'. ((~ (FAN ((vec (NUMERAL _0)) , (V , E)))) \/ ((permutes (n_fan_pair_ext (V , E'))) (dart_of_fan (V , E'))))) = ((~ (FAN ((vec (NUMERAL _0)) , (V , E)))) \/ (!E. ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E))))))
T c= ! c\/ c~ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cpermutes * part cn_fan_pair_ext c, f0 b0 * part cdart_of_fan c, f0 b0 c\/ c~ cFAN c, cvec cNUMERAL c_0 c, f0 f1 ! cpermutes * part cn_fan_pair_ext c, f0 b0 * part cdart_of_fan c, f0 b0
+ (~ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) |- (T = (~ (((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) /\ (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN V))))
T c==> c~ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= cT c~ c/\ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f1
+ (~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) |- (((!s. (~ ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((\s. (~ ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) _10268345)) = ((\s. (~ ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) _10268345))
T c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c= c==> ! c~ cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 * / c~ cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 f1 * / c~ cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 f1
+ |- ((\f. (!H. (((hyp_iso f) (H , G)) = ((((BIJ f) (dart H)) (dart G)) /\ (!x. ((x IN (dart H)) ==> ((((edge_map G) (f x)) = (f ((edge_map H) x))) /\ (((node_map G) (f x)) = (f ((node_map H) x)))))))))) f)
T * / ! c= chyp_iso b0 c, b1 f0 c/\ cBIJ b0 * part cdart b1 * part cdart f0 ! c==> cIN b2 * part cdart b1 c/\ c= cedge_map f0 * b0 b2 * b0 cedge_map b1 b2 c= cnode_map f0 * b0 b2 * b0 cnode_map b1 b2 f1
+ |- ((!p1. (!p2. ((((vector_neg p1) , p2) IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (vector_neg p1)) , (vector_neg p2))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , p2)))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , p2)))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (vector_neg p1)) , (vector_neg p2))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , p2)))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , p2)))))))))) = (!p1. (!p2. (((p1 , p2) IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg p1) , (vector_neg p2))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) (p1 , p2)))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) (p1 , p2)))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg p1) , (vector_neg p2))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) (p1 , p2)))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) (p1 , p2)))))))))))
T c= ! ! c==> cIN c, cvector_neg b0 b1 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c/\ c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, cvector_neg cvector_neg b0 cvector_neg b1 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg b0 b1 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg b0 b1 c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, cvector_neg cvector_neg b0 cvector_neg b1 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg b0 b1 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg b0 b1 ! ! c==> cIN c, b0 b1 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c/\ c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, cvector_neg b0 cvector_neg b1 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, b0 b1 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, b0 b1 c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, cvector_neg b0 cvector_neg b1 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, b0 b1 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, b0 b1
- |- (((x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))))) = ((x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))))))
T c= c==> cIN f0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c==> cIN f0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0
+ |- ((\V. (!E. (!u. (!v. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) u) = ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))))))) V)
T * / ! ! ! c==> c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c= csigma_fan cvec cNUMERAL c_0 b0 b1 b3 b2 cazim_cycle * * * part cset_of_edge b3 b0 b1 cvec cNUMERAL c_0 b3 b2 f0
+ (contravening V), ((hypermap_of_fan (V , (ESTD V))) = H) |- ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ((hyp_conj (node_map H)) (opposite_hypermap H)))
T c==> ccontravening f0 c==> c= chypermap_of_fan c, f0 * part cESTD f0 f1 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1
- (!H. (!G. (((iso H) G) ==> ((iso G) H)))), ((iso H) G) |- ((!H. (!G. (((iso H) G) ==> ((iso G) H)))) /\ ((iso G) H))
T c==> ! ! c==> ciso b0 b1 ciso b1 b0 c==> ciso f0 f1 c/\ ! ! c==> ciso b0 b1 ciso b1 b0 ciso f1 f0
- (p2 IN (((set_of_edge p1) V) (ESTD V))) |- ((T ==> (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) = q')) ==> (((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) = (T ==> q')))
T c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c==> c==> cT c= c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 f3 c= c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 c==> cT f3
- (!p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))) |- ((((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))) = T)
T c==> ! ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1 c= c==> cpermutes f0 * part cdart f1 chyp_iso f0 c, f1 chyp_conj f0 f1 cT
+ (!V. (!E. (!p1. (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))))) |- ((\P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))) P)
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 * b4 civs_azim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 * / c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 * b0 civs_azim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 f3 * b0 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 f4
- |- ((!x'. (((x = p1) \/ (x = p2)) \/ ((~ (x' = v)) /\ (~ (x' = w))))) = (((x = p1) \/ (x = p2)) \/ (!x. ((~ (x = v)) /\ (~ (x = w))))))
T c= ! c\/ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c\/ c= f0 f1 c= f0 f2 ! c/\ c~ c= b0 f3 c~ c= b0 f4
+ (!V. (!E. (!v. (!w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w))))))))) |- ((\w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w)))))) w)
T c==> ! ! ! ! ! c==> c/\ cIN c, b2 b3 * part cdart_of_fan c, b0 b1 * b4 c, b3 b2 * b4 ce_fan_pair_ext c, b0 b1 c, b2 b3 * / ! c==> c/\ cIN c, f0 b0 * part cdart_of_fan c, f1 f2 * b1 c, b0 f0 * b1 ce_fan_pair_ext c, f1 f2 c, f0 b0 f3
+ |- ((\q'. ((((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ (p2 IN ((EE p1) (ESTD V)))) = p') ==> ((p' ==> (((((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN ((EE p1) (ESTD V))) /\ (((((azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) = q')) ==> ((((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ (p2 IN ((EE p1) (ESTD V)))) ==> ((((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN ((EE p1) (ESTD V))) /\ (((((azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN f1 * * part cEE f2 * part cESTD f0 f3 c==> c==> f3 c= c/\ cIN civs_azim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 * * part cEE f2 * part cESTD f0 c= cazim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 civs_azim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 f1 b0 c= c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN f1 * * part cEE f2 * part cESTD f0 c/\ cIN civs_azim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 * * part cEE f2 * part cESTD f0 c= cazim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 civs_azim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 f1 c==> f3 b0 f4
+ |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) = (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))))
T c= c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1
+ |- ((\V. (!E. (!p1. (!p2. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2))))))) V)
T * / ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 * f0 civs_azim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * f0 cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 f1
+ (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) |- (!E. ((~ (FAN ((vec (NUMERAL _0)) , (_10268346 , E)))) \/ ((permutes (n_fan_pair_ext (_10268346 , E))) (dart_of_fan (_10268346 , E)))))
T c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 ! c\/ c~ cFAN c, cvec cNUMERAL c_0 c, f0 b0 cpermutes * part cn_fan_pair_ext c, f0 b0 * part cdart_of_fan c, f0 b0
+ (~ (V p1)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((((w = p1) /\ (V w)) ==> (V p1)) = (V p1))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f1 c= b0 f4 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f4 c\/ c= b0 f2 c= b0 f3 c= c==> c/\ c= f3 f1 * f0 f3 * f0 f1 * f0 f1
- |- ((face_map ((hyp_conj (node_map H)) (opposite_hypermap H))) = ((node_map H) o ((inverse (face_map H)) o (inverse (node_map H)))))
T c= * part cface_map chyp_conj * part cnode_map f0 copposite_hypermap f0 * * part co * part cnode_map f0 * * part co * part cinverse * part cface_map f0 * part cinverse * part cnode_map f0
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- ((\w. (((v INSERT (w INSERT EMPTY)) IN E) = ((v , w) IN (dart1_of_fan (V , E))))) w)
T * / c= cIN * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1 cIN c, f0 b0 * part cdart1_of_fan c, f2 f1 f3
- ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F) |- ((((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F) ==> ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F)) ==> ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F))
T c==> c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c==> c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF
- |- ((((~ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))))) = ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))))
T c= c==> c==> c~ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2
+ |- ((!x. (!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))) = T)
T c= ! ! c==> c/\ c? / cpermutes f0 b2 * b1 c= * f0 b0 f1 * b1 c= cinverse f0 f1 b0 cT
+ (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- (V v)
T c==> c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f3 c= b0 f4 c/\ c~ c= b0 f1 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f1 c= b0 f2 * f0 f1
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- (((((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V))) /\ ((\x. ((\v. ((((COND ((p1 INSERT (v INSERT EMPTY)) IN (ESTD V))) (p1 , (((((sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) v))) (p1 , v)) = (p1 , p2))) x)) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) ==> ((\x. ((\v. ((((COND ((p1 INSERT (v INSERT EMPTY)) IN (ESTD V))) (p1 , (((((sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) v))) (p1 , v)) = (p1 , p2))) x)) (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) p2))) = ((\x. ((\v. ((((COND ((p1 INSERT (v INSERT EMPTY)) IN (ESTD V))) (p1 , (((((sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) v))) (p1 , v)) = (p1 , p2))) x)) (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) p2)))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c= c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cESTD f0 * / * / c= cCOND cIN * * part cINSERT f1 * * part cINSERT b1 part cEMPTY * part cESTD f0 c, f1 csigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 f1 b1 c, f1 b1 c, f1 f2 b0 civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 * / * / c= cCOND cIN * * part cINSERT f1 * * part cINSERT b1 part cEMPTY * part cESTD f0 c, f1 csigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 f1 b1 c, f1 b1 c, f1 f2 b0 cinverse_sigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 f1 f2 * / * / c= cCOND cIN * * part cINSERT f1 * * part cINSERT b1 part cEMPTY * part cESTD f0 c, f1 csigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 f1 b1 c, f1 b1 c, f1 f2 b0 cinverse_sigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 f1 f2
+ (!V. (!E. (!p1. (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))))) |- ((\p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2))))) p2)
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 * b4 civs_azim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 * / ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f1 * b1 civs_azim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 b0 * b1 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 f3
+ |- (((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> F) = ((p1 , p2) IN (dart_of_fan (V , (ESTD V)))))
T c= c==> c~ cIN c, f0 f1 * part cdart_of_fan c, f2 * part cESTD f2 cF cIN c, f0 f1 * part cdart_of_fan c, f2 * part cESTD f2
+ |- (((!V. (!E. (!v. (!w. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w)))))))) ==> ((\V. (!E. (!v. (!w. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w)))))))) V)) = ((\V. (!E. (!v. (!w. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w)))))))) V))
T c= c==> ! ! ! ! c==> c/\ cIN c, b2 b3 * part cdart_of_fan c, b0 b1 * f0 c, b3 b2 * f0 ce_fan_pair_ext c, b0 b1 c, b2 b3 * / ! ! ! c==> c/\ cIN c, b2 b3 * part cdart_of_fan c, b0 b1 * f0 c, b3 b2 * f0 ce_fan_pair_ext c, b0 b1 c, b2 b3 f1 * / ! ! ! c==> c/\ cIN c, b2 b3 * part cdart_of_fan c, b0 b1 * f0 c, b3 b2 * f0 ce_fan_pair_ext c, b0 b1 c, b2 b3 f1
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0
- |- ((~ ((p1 , p2) = (p1 , p2))) ==> ((p1 , p2) = (p1 , p2)))
T c==> c~ c= c, f0 f1 c, f0 f1 c= c, f0 f1 c, f0 f1
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ (!V. (!E. (!v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))) |- (((!v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))) ==> ((\v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))) v)) = ((\v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))) v))
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 * b4 cazim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 c= c==> ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN b1 * * * part cset_of_edge b0 f0 f1 * b2 cazim_cycle * * * part cset_of_edge b0 f0 f1 cvec cNUMERAL c_0 b0 b1 * b2 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 * / ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN b1 * * * part cset_of_edge b0 f0 f1 * b2 cazim_cycle * * * part cset_of_edge b0 f0 f1 cvec cNUMERAL c_0 b0 b1 * b2 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 f2 * / ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN b1 * * * part cset_of_edge b0 f0 f1 * b2 cazim_cycle * * * part cset_of_edge b0 f0 f1 cvec cNUMERAL c_0 b0 b1 * b2 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 f2
+ (!V. (!E. (!p1. (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))))) |- ((\E. (!p1. (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2))))))) E)
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 * b4 civs_azim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 * / ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 b0 cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 * b3 civs_azim_cycle * * * part cset_of_edge b1 f0 b0 cvec cNUMERAL c_0 b1 b2 * b3 cinverse_sigma_fan cvec cNUMERAL c_0 f0 b0 b1 b2 f1
+ |- (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) = p') ==> ((p' ==> (((((edge_map ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((node_map ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x)))))) = q')) ==> (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> ((((edge_map ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((node_map ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))))) = (p' ==> q'))))
T c==> c= cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f2 c==> c==> f2 c= c/\ c= cedge_map chyp_conj * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 copposite_hypermap chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cnode_map chyp_conj * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 copposite_hypermap chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 f3 c= c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cedge_map chyp_conj * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 copposite_hypermap chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cnode_map chyp_conj * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 copposite_hypermap chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c==> f2 f3
+ (!H. (!G. (((iso H) G) ==> ((iso G) H)))) |- ((\G. (((iso H) G) ==> ((iso G) H))) G)
T c==> ! ! c==> ciso b0 b1 ciso b1 b0 * / c==> ciso f0 b0 ciso b0 f0 f1
+ |- ((\v. (!w. (((contravening V) /\ ((v , w) IN (dart1_of_fan (V , (ESTD V))))) ==> (((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg v) , (vector_neg w))) = ((vector_neg v) , (vector_neg (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) v) w))))))) v)
T * / ! c==> c/\ ccontravening f0 cIN c, b0 b1 * part cdart1_of_fan c, f0 * part cESTD f0 c= cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg b0 cvector_neg b1 c, cvector_neg b0 cvector_neg cinverse_sigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 b0 b1 f1
+ (~ ((V p1) /\ (V p2))) |- ((~ (V p1)) \/ (~ (V p2)))
T c==> c~ c/\ * f0 f1 * f0 f2 c\/ c~ * f0 f1 c~ * f0 f2
+ |- (T = (((F ==> B) /\ F) ==> B))
T c= cT c==> c/\ c==> cF f0 cF f0
- |- ((((e_fan_pair_ext (V , (ESTD V))) (p1 , p2)) = (p2 , p1)) = ((\x. ((\v. (v = (p2 , p1))) x)) ((e_fan_pair_ext (V , (ESTD V))) (p1 , p2))))
T c= c= ce_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, f2 f1 * / * / c= b1 c, f2 f1 b0 ce_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2
+ (!V. (!E. (!v. (!w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w))))))))) |- ((!v. (!w. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w)))))) = T)
T c==> ! ! ! ! ! c==> c/\ cIN c, b2 b3 * part cdart_of_fan c, b0 b1 * b4 c, b3 b2 * b4 ce_fan_pair_ext c, b0 b1 c, b2 b3 c= ! ! c==> c/\ cIN c, b0 b1 * part cdart_of_fan c, f0 f1 * f2 c, b1 b0 * f2 ce_fan_pair_ext c, f0 f1 c, b0 b1 cT
+ |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ |- (((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) = q')) ==> (((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) = ((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> q')))
T c==> c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 f3 c= c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 f3
- (~ ((dart_of_fan (V , (ESTD V))) = (dart_of_fan (V , (ESTD V))))) |- ((~ ((dart_of_fan (V , (ESTD V))) = (dart_of_fan (V , (ESTD V))))) /\ ((dart_of_fan (V , (ESTD V))) = (dart_of_fan (V , (ESTD V)))))
T c==> c~ c= * part cdart_of_fan c, f0 * part cESTD f0 * part cdart_of_fan c, f0 * part cESTD f0 c/\ c~ c= * part cdart_of_fan c, f0 * part cESTD f0 * part cdart_of_fan c, f0 * part cESTD f0 c= * part cdart_of_fan c, f0 * part cESTD f0 * part cdart_of_fan c, f0 * part cESTD f0
+ ((permutes p) s) |- ((\y. ((((inverse p) y) = x) = ((p x) = y))) y)
T c==> cpermutes f0 f1 * / c= c= cinverse f0 b0 f2 c= * f0 f2 b0 f3
+ (!V. (!E. (!p1. (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))))) |- ((!p1. (!p2. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2))))) = T)
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 * b4 civs_azim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 c= ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 * f2 civs_azim_cycle * * * part cset_of_edge b0 f0 f1 cvec cNUMERAL c_0 b0 b1 * f2 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 cT
+ (~ (V p1)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((V w) = ((w = p1) /\ (V w)))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f1 c= b0 f4 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f4 c\/ c= b0 f2 c= b0 f3 c= * f0 f3 c/\ c= f3 f1 * f0 f3
+ |- ((\E. (!v. (!w. (((v INSERT (w INSERT EMPTY)) IN E) = ((v , w) IN (dart1_of_fan (V , E))))))) E)
T * / ! ! c= cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 cIN c, b1 b2 * part cdart1_of_fan c, f0 b0 f1
- (~ (contravening V)), (contravening V) |- ((~ (contravening V)) /\ (contravening V))
T c==> c~ ccontravening f0 c==> ccontravening f0 c/\ c~ ccontravening f0 ccontravening f0
+ |- (((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2))) = ((?v. (?w. (((v IN V) /\ ((w IN V) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. ((x IN (p1 INSERT (p2 INSERT EMPTY))) = (x IN (v INSERT (w INSERT EMPTY)))))))) ==> ((p1 IN V) /\ (p2 IN V))))
T c= c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 c==> c? / c? / c/\ c/\ cIN b0 f0 c/\ cIN b1 f0 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= cIN b2 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b2 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cIN f1 f0 cIN f2 f0
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- ((((((vector_neg p1) , (vector_neg p2)) IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) /\ ((\x. ((\v. (((inverse (e_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = ((vector_neg (FST v)) , (vector_neg (SND v))))) x)) ((vector_neg p2) , (vector_neg p1)))) ==> ((\x. ((\v. (((inverse (e_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = ((vector_neg (FST v)) , (vector_neg (SND v))))) x)) ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2))))) = ((\x. ((\v. (((inverse (e_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = ((vector_neg (FST v)) , (vector_neg (SND v))))) x)) ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2)))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c= c==> c/\ cIN c, cvector_neg f1 cvector_neg f2 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 * / * / c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, cvector_neg cFST b1 cvector_neg cSND b1 b0 c, cvector_neg f2 cvector_neg f1 * / * / c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, cvector_neg cFST b1 cvector_neg cSND b1 b0 ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg f2 * / * / c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, cvector_neg cFST b1 cvector_neg cSND b1 b0 ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg f2
+ (!V. (!E. (!v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))) |- (!V. (!E. (!v. (!u. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 * b4 cazim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 * f0 cazim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * f0 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3
+ ((p1 IN V) /\ (p2 IN V)), ((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V)) |- (((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V)) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)))))
T c==> c/\ cIN f0 f1 cIN f2 f1 c==> cIN * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part cESTD f1 c==> c==> cIN f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c/\ cIN * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part cESTD f1 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2
- (_10268313 = _10268314) |- ((_10268313 = _10268314) /\ ((dart_of_fan _10268313) = (dart_of_fan _10268314)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * part cdart_of_fan f0 * part cdart_of_fan f1
+ |- (((((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ (p2 IN ((EE p1) (ESTD V)))) ==> ((((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN ((EE p1) (ESTD V))) /\ (((((azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) = p') ==> ((p' ==> ((((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V)))) /\ (((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V))) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)))) = q')) ==> (((((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ (p2 IN ((EE p1) (ESTD V)))) ==> ((((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN ((EE p1) (ESTD V))) /\ (((((azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) ==> (((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V)))) /\ (((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V))) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))))) = (p' ==> q'))))
T c==> c= c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN f1 * * part cEE f2 * part cESTD f0 c/\ cIN civs_azim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 * * part cEE f2 * part cESTD f0 c= cazim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 civs_azim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 f1 f3 c==> c==> f3 c= c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 * * * part cset_of_edge f2 f0 * part cESTD f0 c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * part cESTD f0 c= cCOND cIN * * part cINSERT f2 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 part cEMPTY * part cESTD f0 c, f2 cazim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 c, f2 civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 c, f2 f1 f4 c= c==> c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN f1 * * part cEE f2 * part cESTD f0 c/\ cIN civs_azim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 * * part cEE f2 * part cESTD f0 c= cazim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 civs_azim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 f1 c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 * * * part cset_of_edge f2 f0 * part cESTD f0 c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * part cESTD f0 c= cCOND cIN * * part cINSERT f2 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 part cEMPTY * part cESTD f0 c, f2 cazim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 c, f2 civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 c, f2 f1 c==> f3 f4
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (p2 = p2)) ==> (p2 = p2))
T c==> c~ c= f0 f0 c= f0 f0
+ (~ (V p2)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((p2 = w) /\ (p2 = p2))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f4 c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f4 c~ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c/\ c= f1 f3 c= f1 f1
- (!p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))), ((permutes p) (dart H)) |- (((permutes p) (dart H)) /\ ((hyp_iso p) (H , ((hyp_conj p) H))))
T c==> ! ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1 c==> cpermutes f0 * part cdart f1 c/\ cpermutes f0 * part cdart f1 chyp_iso f0 c, f1 chyp_conj f0 f1
- |- ((((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> (((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)) = q')) ==> ((((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))) = (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> q')))
T c==> c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 f3 c= c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 f3
- (~ F), (~ (P b)), (P c), (b = c) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ cF cF
+ ((p1 IN V) /\ (p2 IN V)), ((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V)) |- (T = (p2 IN (((set_of_edge p1) V) (ESTD V))))
T c==> c/\ cIN f0 f1 cIN f2 f1 c==> cIN * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part cESTD f1 c= cT cIN f2 * * * part cset_of_edge f0 f1 * part cESTD f1
+ |- ((\q'. (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) = p') ==> ((p' ==> (((((edge_map ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((node_map ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x)))))) = q')) ==> (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> ((((edge_map ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((node_map ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f2 c==> c==> f2 c= c/\ c= cedge_map chyp_conj * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 copposite_hypermap chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cnode_map chyp_conj * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 copposite_hypermap chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 b0 c= c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cedge_map chyp_conj * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 copposite_hypermap chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cnode_map chyp_conj * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 copposite_hypermap chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c==> f2 b0 f3
+ |- (((!p1. (!p2. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2))))) ==> ((\p1. (!p2. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2))))) p1)) = ((\p1. (!p2. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2))))) p1))
T c= c==> ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 * f2 civs_azim_cycle * * * part cset_of_edge b0 f0 f1 cvec cNUMERAL c_0 b0 b1 * f2 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 * / ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 * f2 civs_azim_cycle * * * part cset_of_edge b0 f0 f1 cvec cNUMERAL c_0 b0 b1 * f2 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 f3 * / ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 * f2 civs_azim_cycle * * * part cset_of_edge b0 f0 f1 cvec cNUMERAL c_0 b0 b1 * f2 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 f3
+ (!H. (!G. (!f. (((hyp_iso f) (H , G)) ==> ((iso H) G))))) |- (!G. ((?f. ((hyp_iso f) (H , G))) ==> ((iso H) G)))
T c==> ! ! ! c==> chyp_iso b2 c, b0 b1 ciso b0 b1 ! c==> c? / chyp_iso b1 c, f0 b0 ciso f0 b0
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
+ |- ((\G. ((?f. ((hyp_iso f) (H , G))) ==> ((iso H) G))) G)
T * / c==> c? / chyp_iso b1 c, f0 b0 ciso f0 b0 f1
- |- ((~ (_10268402 = _10268403)) \/ ((BIT1 _10268402) = (BIT1 _10268403)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ (~ (V p1)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((w = p1) /\ (V w))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f1 c= b0 f4 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f4 c\/ c= b0 f2 c= b0 f3 c/\ c= f3 f1 * f0 f3
+ |- (((!y. (((\x. ((\v. (v = (p2 , p1))) x)) y) = ((\v. (v = (p2 , p1))) y))) ==> ((\y. (((\x. ((\v. (v = (p2 , p1))) x)) y) = ((\v. (v = (p2 , p1))) y))) ((e_fan_pair_ext (V , (ESTD V))) (p1 , p2)))) = ((\y. (((\x. ((\v. (v = (p2 , p1))) x)) y) = ((\v. (v = (p2 , p1))) y))) ((e_fan_pair_ext (V , (ESTD V))) (p1 , p2))))
T c= c==> ! c= * / * / c= b2 c, f0 f1 b1 b0 * / c= b1 c, f0 f1 b0 * / c= * / * / c= b2 c, f0 f1 b1 b0 * / c= b1 c, f0 f1 b0 ce_fan_pair_ext c, f2 * part cESTD f2 c, f1 f0 * / c= * / * / c= b2 c, f0 f1 b1 b0 * / c= b1 c, f0 f1 b0 ce_fan_pair_ext c, f2 * part cESTD f2 c, f1 f0
- |- ((_10268396 = _10268398) ==> ((~ (_10268397 = _10268399)) \/ ((_10268396 , _10268397) = (_10268398 , _10268399))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- (((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> B) /\ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> B) |- ((((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> B) /\ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> B) /\ (((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> B) /\ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> B))
T c==> c==> c/\ c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 c/\ c==> c/\ c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 c==> c/\ c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3
+ ((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V)) |- ((p1 IN V) /\ (p2 IN V))
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cESTD f2 c/\ cIN f0 f2 cIN f1 f2
- ((hypermap_of_fan (V , (ESTD V))) = H) |- (((hypermap_of_fan (V , (ESTD V))) = H) /\ (?H. ((hypermap_of_fan (V , (ESTD V))) = H)))
T c==> c= chypermap_of_fan c, f0 * part cESTD f0 f1 c/\ c= chypermap_of_fan c, f0 * part cESTD f0 f1 c? / c= chypermap_of_fan c, f0 * part cESTD f0 b0
+ (p2 IN (((set_of_edge p1) V) (ESTD V))) |- ((p2 IN (((set_of_edge p1) V) (ESTD V))) /\ (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) = ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))))
T c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0
- |- ((?w'. (((V v) /\ ((V w') /\ ((~ (v = w')) /\ ((real_le (distance (v , w'))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w)))))) = ((?w. ((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))
T c= c? / c/\ c/\ * f0 f1 c/\ * f0 b0 c/\ c~ c= f1 b0 creal_le cdistance c, f1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b1 f2 c= b1 f3 c\/ c= b1 f1 c= b1 f4 c/\ c? / c/\ * f0 f1 c/\ * f0 b0 c/\ c~ c= f1 b0 creal_le cdistance c, f1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f1 c= b0 f4
+ (!V. (!E. (!p1. (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))))) |- (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 * b4 civs_azim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f1 * b1 civs_azim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 b0 * b1 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0
+ (~ ((V p1) /\ (V p2))), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) /\ F)
T c==> c~ c/\ * f0 f1 * f0 f2 c==> c/\ c/\ * f0 f3 c/\ * f0 f4 c/\ c~ c= f3 f4 creal_le cdistance c, f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f1 c= b0 f2 c/\ c~ c= b0 f3 c~ c= b0 f4 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 c\/ c= b0 f3 c= b0 f4 c/\ c/\ c/\ * f0 f3 c/\ * f0 f4 c/\ c~ c= f3 f4 creal_le cdistance c, f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f1 c= b0 f2 c/\ c~ c= b0 f3 c~ c= b0 f4 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 c\/ c= b0 f3 c= b0 f4 cF
+ ((permutes p) s) |- (((!y. ((((inverse p) y) = x) = ((p x) = y))) ==> ((\y. ((((inverse p) y) = x) = ((p x) = y))) y)) = ((\y. ((((inverse p) y) = x) = ((p x) = y))) y))
T c==> cpermutes f0 f1 c= c==> ! c= c= cinverse f0 b0 f2 c= * f0 f2 b0 * / c= c= cinverse f0 b0 f2 c= * f0 f2 b0 f3 * / c= c= cinverse f0 b0 f2 c= * f0 f2 b0 f3
- (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- (((!x. ((((x = p1) \/ (x = p2)) \/ (~ (x = v))) /\ (((x = p1) \/ (x = p2)) \/ (~ (x = w))))) ==> ((\x. ((((x = p1) \/ (x = p2)) \/ (~ (x = v))) /\ (((x = p1) \/ (x = p2)) \/ (~ (x = w))))) _10268364)) = ((\x. ((((x = p1) \/ (x = p2)) \/ (~ (x = v))) /\ (((x = p1) \/ (x = p2)) \/ (~ (x = w))))) _10268364))
T c==> c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f3 c= b0 f4 c/\ c~ c= b0 f1 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c= c==> ! c/\ c\/ c\/ c= b0 f3 c= b0 f4 c~ c= b0 f1 c\/ c\/ c= b0 f3 c= b0 f4 c~ c= b0 f2 * / c/\ c\/ c\/ c= b0 f3 c= b0 f4 c~ c= b0 f1 c\/ c\/ c= b0 f3 c= b0 f4 c~ c= b0 f2 f5 * / c/\ c\/ c\/ c= b0 f3 c= b0 f4 c~ c= b0 f1 c\/ c\/ c= b0 f3 c= b0 f4 c~ c= b0 f2 f5
+ |- ((\c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))) c)
T * / c==> c==> f0 c= f1 b0 ! c==> c/\ f0 * b1 b0 * b1 f1 f2
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ |- ((\v. (!w. (((v , w) IN (dart1_of_fan (V , E))) = ((v INSERT (w INSERT EMPTY)) IN E)))) v)
T * / ! c= cIN c, b0 b1 * part cdart1_of_fan c, f0 f1 cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 f2
+ (contravening ((IMAGE vector_neg) V)), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- ((((inverse (e_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = (p2 , p1)) = ((((vector_neg p1) , (vector_neg p2)) IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) /\ (((inverse (e_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = ((vector_neg (vector_neg p2)) , (vector_neg (vector_neg p1))))))
T c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c= c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, f2 f1 c/\ cIN c, cvector_neg f1 cvector_neg f2 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, cvector_neg cvector_neg f2 cvector_neg cvector_neg f1
+ |- ((~ (((p1 INSERT (((((ivs_azim_cycle (GSPEC (\GEN%PVAR%5439. (?w. (((SETSPEC GEN%PVAR%5439) (((p1 INSERT (w INSERT EMPTY)) IN (ESTD V)) /\ (w IN V))) w))))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) /\ (((((ivs_azim_cycle (GSPEC (\GEN%PVAR%5439. (?w. (((SETSPEC GEN%PVAR%5439) (((p1 INSERT (w INSERT EMPTY)) IN (ESTD V)) /\ (w IN V))) w))))) (vec (NUMERAL _0))) p1) p2) IN V))) = ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) ==> F))
T c= c~ c/\ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * part cGSPEC / c? / cSETSPEC b0 c/\ cIN * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * part cESTD f1 cIN b1 f1 b1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 cIN civs_azim_cycle * part cGSPEC / c? / cSETSPEC b0 c/\ cIN * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * part cESTD f1 cIN b1 f1 b1 cvec cNUMERAL c_0 f0 f2 f1 c==> cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 cF
+ |- ((((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) = (x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))))) ==> (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> (((((edge_map ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((node_map ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x)))))) = q')) ==> (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> ((((edge_map ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((node_map ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))))) = ((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> q')))) = (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> (((((edge_map ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((node_map ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x)))))) = q')) ==> (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> ((((edge_map ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((node_map ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))))) = ((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> q'))))
T c= c==> c= cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c==> c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c= c/\ c= cedge_map chyp_conj * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 copposite_hypermap chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cnode_map chyp_conj * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 copposite_hypermap chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 f2 c= c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cedge_map chyp_conj * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 copposite_hypermap chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cnode_map chyp_conj * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 copposite_hypermap chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f2 c==> c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c= c/\ c= cedge_map chyp_conj * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 copposite_hypermap chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cnode_map chyp_conj * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 copposite_hypermap chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 f2 c= c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cedge_map chyp_conj * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 copposite_hypermap chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cnode_map chyp_conj * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 copposite_hypermap chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f2
+ |- (((!V. (!E. (!v. (!w. (((n_fan_pair (V , E)) (v , w)) = (v , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w))))))) ==> ((\V. (!E. (!v. (!w. (((n_fan_pair (V , E)) (v , w)) = (v , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w))))))) V)) = ((\V. (!E. (!v. (!w. (((n_fan_pair (V , E)) (v , w)) = (v , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w))))))) V))
T c= c==> ! ! ! ! c= cn_fan_pair c, b0 b1 c, b2 b3 c, b2 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 * / ! ! ! c= cn_fan_pair c, b0 b1 c, b2 b3 c, b2 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 f0 * / ! ! ! c= cn_fan_pair c, b0 b1 c, b2 b3 c, b2 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 f0
+ (P c), (b = c) |- (P b)
T c==> * f0 f1 c==> c= f2 f1 * f0 f2
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ (!V. (!E. (!v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))) |- ((!v. (!u. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u))))) = T)
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 * b4 cazim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 c= ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN b1 * * * part cset_of_edge b0 f0 f1 * f2 cazim_cycle * * * part cset_of_edge b0 f0 f1 cvec cNUMERAL c_0 b0 b1 * f2 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 cT
+ |- (!V. (!p2. (!p1. ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> (~ (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E))))))))))))))))
T c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c~ ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1
+ |- ((\E. (!V. ((GSPEC (\GEN%PVAR%5439. (?w. (((SETSPEC GEN%PVAR%5439) (((v INSERT (w INSERT EMPTY)) IN E) /\ (w IN V))) w)))) = (((set_of_edge v) V) E)))) E)
T * / ! c= * part cGSPEC / c? / cSETSPEC b2 c/\ cIN * * part cINSERT f0 * * part cINSERT b3 part cEMPTY b0 cIN b3 b1 b3 * * * part cset_of_edge f0 b1 b0 f1
- (contravening ((IMAGE vector_neg) V)) |- ((contravening ((IMAGE vector_neg) V)) = T)
T c==> ccontravening * * part cIMAGE part cvector_neg f0 c= ccontravening * * part cIMAGE part cvector_neg f0 cT
+ |- (((b = c) ==> (!P. ((P c) ==> (P b)))) = T)
T c= c==> c= f0 f1 ! c==> * b0 f1 * b0 f0 cT
+ |- (((!V. (!E. (!x. (((n_fan_pair_ext (V , E)) x) = (((COND (x IN (dart1_of_fan (V , E)))) ((n_fan_pair (V , E)) x)) x))))) ==> ((\V. (!E. (!x. (((n_fan_pair_ext (V , E)) x) = (((COND (x IN (dart1_of_fan (V , E)))) ((n_fan_pair (V , E)) x)) x))))) V)) = ((\V. (!E. (!x. (((n_fan_pair_ext (V , E)) x) = (((COND (x IN (dart1_of_fan (V , E)))) ((n_fan_pair (V , E)) x)) x))))) V))
T c= c==> ! ! ! c= cn_fan_pair_ext c, b0 b1 b2 cCOND cIN b2 * part cdart1_of_fan c, b0 b1 cn_fan_pair c, b0 b1 b2 b2 * / ! ! c= cn_fan_pair_ext c, b0 b1 b2 cCOND cIN b2 * part cdart1_of_fan c, b0 b1 cn_fan_pair c, b0 b1 b2 b2 f0 * / ! ! c= cn_fan_pair_ext c, b0 b1 b2 cCOND cIN b2 * part cdart1_of_fan c, b0 b1 cn_fan_pair c, b0 b1 b2 b2 f0
+ (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) |- ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))
T c==> cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- ((\x. ((\v. (((inverse (e_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = ((vector_neg (FST v)) , (vector_neg (SND v))))) x)) ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 * / * / c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, cvector_neg cFST b1 cvector_neg cSND b1 b0 ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg f2
+ |- ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. v))
T * / ! c= * / * b0 b2 b1 * b0 b1 / b0
- ((?s. ((permutes p) s)) /\ (P ((p x) = y))) |- ((!p. (!y. (!x. (!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))))) ==> (P (((inverse p) y) = x)))
T c==> c/\ c? / cpermutes f0 b0 * f1 c= * f0 f2 f3 c==> ! ! ! ! c==> c/\ c? / cpermutes b0 b4 * b3 c= * b0 b2 b1 * b3 c= cinverse b0 b1 b2 * f1 c= cinverse f0 f3 f2
+ (!V. (!E. (!p1. (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))))) |- ((!V. (!E. (!p1. (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))))) /\ (!P. (!V. (!E. (!p1. (!p2. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))))))
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 * b4 civs_azim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 c/\ ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 * b4 civs_azim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b1 b2 cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 * b0 civs_azim_cycle * * * part cset_of_edge b3 b1 b2 cvec cNUMERAL c_0 b3 b4 * b0 cinverse_sigma_fan cvec cNUMERAL c_0 b1 b2 b3 b4
+ |- (((!E. (!v. (!w. (((n_fan_pair (V , E)) (v , w)) = (v , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)))))) ==> ((\E. (!v. (!w. (((n_fan_pair (V , E)) (v , w)) = (v , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)))))) E)) = ((\E. (!v. (!w. (((n_fan_pair (V , E)) (v , w)) = (v , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)))))) E))
T c= c==> ! ! ! c= cn_fan_pair c, f0 b0 c, b1 b2 c, b1 csigma_fan cvec cNUMERAL c_0 f0 b0 b1 b2 * / ! ! c= cn_fan_pair c, f0 b0 c, b1 b2 c, b1 csigma_fan cvec cNUMERAL c_0 f0 b0 b1 b2 f1 * / ! ! c= cn_fan_pair c, f0 b0 c, b1 b2 c, b1 csigma_fan cvec cNUMERAL c_0 f0 b0 b1 b2 f1
+ (!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))), (contravening V) |- (((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))) /\ ((dart_of_fan (V , (ESTD V))) = (dart_of_fan (V , (ESTD V)))))
T c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 c==> ccontravening f0 c/\ c= * part cdart_of_fan c, f0 * part cESTD f0 * part cdart1_of_fan c, f0 * part cESTD f0 c= * part cdart_of_fan c, f0 * part cESTD f0 * part cdart_of_fan c, f0 * part cESTD f0
- |- (((!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) ==> ((\y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) y)) = ((\y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) y))
T c= c==> ! ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 * / ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 f1 * / ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 f1
+ |- ((\H. (((dart ((hyp_conj (node_map H)) (opposite_hypermap H))) = (dart H)) /\ (((edge_map ((hyp_conj (node_map H)) (opposite_hypermap H))) = (inverse (edge_map H))) /\ (((node_map ((hyp_conj (node_map H)) (opposite_hypermap H))) = (inverse (node_map H))) /\ ((face_map ((hyp_conj (node_map H)) (opposite_hypermap H))) = ((node_map H) o ((inverse (face_map H)) o (inverse (node_map H))))))))) H)
T * / c/\ c= * part cdart chyp_conj * part cnode_map b0 copposite_hypermap b0 * part cdart b0 c/\ c= * part cedge_map chyp_conj * part cnode_map b0 copposite_hypermap b0 * part cinverse * part cedge_map b0 c/\ c= * part cnode_map chyp_conj * part cnode_map b0 copposite_hypermap b0 * part cinverse * part cnode_map b0 c= * part cface_map chyp_conj * part cnode_map b0 copposite_hypermap b0 * * part co * part cnode_map b0 * * part co * part cinverse * part cface_map b0 * part cinverse * part cnode_map b0 f0
+ (A = F) |- ((((A ==> B) /\ A) ==> B) = (((F ==> B) /\ F) ==> B))
T c==> c= f0 cF c= c==> c/\ c==> f0 f1 f0 f1 c==> c/\ c==> cF f1 cF f1
- |- ((_10268313 = _10268314) ==> ((dart_of_fan _10268313) = (dart_of_fan _10268314)))
T c==> c= f0 f1 c= * part cdart_of_fan f0 * part cdart_of_fan f1
+ (!H. (!G. (!f. (((hyp_iso f) (H , G)) ==> ((iso H) G))))) |- ((!H. (!G. (!f. (((hyp_iso f) (H , G)) ==> ((iso H) G))))) /\ (!H. (!G. ((?f. ((hyp_iso f) (H , G))) ==> ((iso H) G)))))
T c==> ! ! ! c==> chyp_iso b2 c, b0 b1 ciso b0 b1 c/\ ! ! ! c==> chyp_iso b2 c, b0 b1 ciso b0 b1 ! ! c==> c? / chyp_iso b2 c, b0 b1 ciso b0 b1
- (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((~ (V w)) ==> (V w))
T c==> c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f3 c= b0 f4 c/\ c~ c= b0 f1 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c==> c~ * f0 f2 * f0 f2
- (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((~ (V v)) ==> (V v))
T c==> c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f3 c= b0 f4 c/\ c~ c= b0 f1 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c==> c~ * f0 f1 * f0 f1
- (~ (V p2)), (v = p2), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((v = p2) /\ (~ (v = p2)))
T c==> c~ * f0 f1 c==> c= f2 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f4 c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f4 c~ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c/\ c= f2 f1 c~ c= f2 f1
- |- (((!V. (!E. (!x. (!v. (!w. (((FAN (x , (V , E))) /\ (w IN ((EE v) E))) ==> ((((((ivs_azim_cycle ((EE v) E)) x) v) w) IN ((EE v) E)) /\ (((((azim_cycle ((EE v) E)) x) v) ((((ivs_azim_cycle ((EE v) E)) x) v) w)) = w)))))))) ==> ((\V. (!E. (!x. (!v. (!w. (((FAN (x , (V , E))) /\ (w IN ((EE v) E))) ==> ((((((ivs_azim_cycle ((EE v) E)) x) v) w) IN ((EE v) E)) /\ (((((azim_cycle ((EE v) E)) x) v) ((((ivs_azim_cycle ((EE v) E)) x) v) w)) = w)))))))) V)) = ((\V. (!E. (!x. (!v. (!w. (((FAN (x , (V , E))) /\ (w IN ((EE v) E))) ==> ((((((ivs_azim_cycle ((EE v) E)) x) v) w) IN ((EE v) E)) /\ (((((azim_cycle ((EE v) E)) x) v) ((((ivs_azim_cycle ((EE v) E)) x) v) w)) = w)))))))) V))
T c= c==> ! ! ! ! ! c==> c/\ cFAN c, b2 c, b0 b1 cIN b4 * * part cEE b3 b1 c/\ cIN civs_azim_cycle * * part cEE b3 b1 b2 b3 b4 * * part cEE b3 b1 c= cazim_cycle * * part cEE b3 b1 b2 b3 civs_azim_cycle * * part cEE b3 b1 b2 b3 b4 b4 * / ! ! ! ! c==> c/\ cFAN c, b2 c, b0 b1 cIN b4 * * part cEE b3 b1 c/\ cIN civs_azim_cycle * * part cEE b3 b1 b2 b3 b4 * * part cEE b3 b1 c= cazim_cycle * * part cEE b3 b1 b2 b3 civs_azim_cycle * * part cEE b3 b1 b2 b3 b4 b4 f0 * / ! ! ! ! c==> c/\ cFAN c, b2 c, b0 b1 cIN b4 * * part cEE b3 b1 c/\ cIN civs_azim_cycle * * part cEE b3 b1 b2 b3 b4 * * part cEE b3 b1 c= cazim_cycle * * part cEE b3 b1 b2 b3 civs_azim_cycle * * part cEE b3 b1 b2 b3 b4 b4 f0
- (((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ((hyp_conj (node_map H)) (opposite_hypermap H))) /\ ((iso ((hyp_conj (node_map H)) (opposite_hypermap H))) (opposite_hypermap H))), ((((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ((hyp_conj (node_map H)) (opposite_hypermap H))) /\ ((iso ((hyp_conj (node_map H)) (opposite_hypermap H))) (opposite_hypermap H))) ==> ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (opposite_hypermap H))) |- (((((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ((hyp_conj (node_map H)) (opposite_hypermap H))) /\ ((iso ((hyp_conj (node_map H)) (opposite_hypermap H))) (opposite_hypermap H))) ==> ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (opposite_hypermap H))) /\ ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (opposite_hypermap H)))
T c==> c/\ ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1 ciso chyp_conj * part cnode_map f1 copposite_hypermap f1 copposite_hypermap f1 c==> c==> c/\ ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1 ciso chyp_conj * part cnode_map f1 copposite_hypermap f1 copposite_hypermap f1 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 copposite_hypermap f1 c/\ c==> c/\ ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1 ciso chyp_conj * part cnode_map f1 copposite_hypermap f1 copposite_hypermap f1 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 copposite_hypermap f1 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 copposite_hypermap f1
+ (~ ((V p1) /\ (V p2))), ((\w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w))))))) w) |- (((\w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w))))))) w) /\ F)
T c==> c~ c/\ * f0 f1 * f0 f2 c==> * / c/\ c/\ * f0 f3 c/\ * f0 b0 c/\ c~ c= f3 b0 creal_le cdistance c, f3 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b1 f1 c= b1 f2 c/\ c~ c= b1 f3 c~ c= b1 b0 ! c\/ c/\ c~ c= b1 f1 c~ c= b1 f2 c\/ c= b1 f3 c= b1 b0 f4 c/\ * / c/\ c/\ * f0 f3 c/\ * f0 b0 c/\ c~ c= f3 b0 creal_le cdistance c, f3 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b1 f1 c= b1 f2 c/\ c~ c= b1 f3 c~ c= b1 b0 ! c\/ c/\ c~ c= b1 f1 c~ c= b1 f2 c\/ c= b1 f3 c= b1 b0 f4 cF
- |- ((_10268325 = _10268326) ==> ((ESTD _10268325) = (ESTD _10268326)))
T c==> c= f0 f1 c= * part cESTD f0 * part cESTD f1
+ |- (((!V. ((ESTD V) = (GSPEC (\GEN%PVAR%7619. (?v. (?w. (((SETSPEC GEN%PVAR%7619) ((v IN V) /\ ((w IN V) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))))) (v INSERT (w INSERT EMPTY))))))))) ==> ((\V. ((ESTD V) = (GSPEC (\GEN%PVAR%7619. (?v. (?w. (((SETSPEC GEN%PVAR%7619) ((v IN V) /\ ((w IN V) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))))) (v INSERT (w INSERT EMPTY))))))))) V)) = ((\V. ((ESTD V) = (GSPEC (\GEN%PVAR%7619. (?v. (?w. (((SETSPEC GEN%PVAR%7619) ((v IN V) /\ ((w IN V) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))))) (v INSERT (w INSERT EMPTY))))))))) V))
T c= c==> ! c= * part cESTD b0 * part cGSPEC / c? / c? / cSETSPEC b1 c/\ cIN b2 b0 c/\ cIN b3 b0 c/\ c~ c= b2 b3 creal_le cdistance c, b2 b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / c= * part cESTD b0 * part cGSPEC / c? / c? / cSETSPEC b1 c/\ cIN b2 b0 c/\ cIN b3 b0 c/\ c~ c= b2 b3 creal_le cdistance c, b2 b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0 * / c= * part cESTD b0 * part cGSPEC / c? / c? / cSETSPEC b1 c/\ cIN b2 b0 c/\ cIN b3 b0 c/\ c~ c= b2 b3 creal_le cdistance c, b2 b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
+ ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- (((p1 , p2) = (p1 , p2)) /\ ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))))
T c==> cIN c, f0 f1 * part cdart1_of_fan c, f2 * part cESTD f2 c/\ c= c, f0 f1 c, f0 f1 cIN c, f0 f1 * part cdart1_of_fan c, f2 * part cESTD f2
- |- ((!p2. (!V. (!p1. ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))))) = (!p2. (!V. (!p1. ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F)))))
T c= ! ! ! c==> c? / c? / c/\ c/\ * b1 b3 c/\ * b1 b4 c/\ c~ c= b3 b4 creal_le cdistance c, b3 b4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b5 b2 c= b5 b0 c\/ c= b5 b3 c= b5 b4 c/\ * b1 b2 * b1 b0 ! ! ! c==> c~ c==> c? / c? / c/\ c/\ * b1 b3 c/\ * b1 b4 c/\ c~ c= b3 b4 creal_le cdistance c, b3 b4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b5 b2 c= b5 b0 c\/ c= b5 b3 c= b5 b4 c/\ * b1 b2 * b1 b0 cF
+ |- ((\s. (((permutes p) s) ==> (!x. (!y. ((((inverse p) y) = x) = ((p x) = y)))))) s)
T * / c==> cpermutes f0 b0 ! ! c= c= cinverse f0 b2 b1 c= * f0 b1 b2 f1
- (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((((_10268364 = p1) \/ (_10268364 = p2)) \/ (~ (_10268364 = v))) /\ (((_10268364 = p1) \/ (_10268364 = p2)) \/ (~ (_10268364 = w))))
T c==> c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f3 c= b0 f4 c/\ c~ c= b0 f1 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c/\ c\/ c\/ c= f5 f3 c= f5 f4 c~ c= f5 f1 c\/ c\/ c= f5 f3 c= f5 f4 c~ c= f5 f2
- ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> B) /\ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))), (((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> B) /\ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> B) |- ((((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> B) /\ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> B) /\ B)
T c==> c/\ c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c==> c==> c/\ c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 c/\ c==> c/\ c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 f3
- (~ (V p2)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((~ (p2 = w)) ==> (p2 = w))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f4 c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f4 c~ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c==> c~ c= f1 f3 c= f1 f3
+ (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((~ (V p2)) ==> F)
T c==> c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f3 c= b0 f4 c/\ c~ c= b0 f1 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c==> c~ * f0 f4 cF
+ |- ((\v. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((EE v) E) = (((set_of_edge v) V) E)))) v)
T * / c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= * * part cEE b0 f1 * * * part cset_of_edge b0 f0 f1 f2
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)) |- (!p1. (!p2. ((((vector_neg p1) , p2) IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (vector_neg p1)) , (vector_neg p2))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , p2)))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , p2)))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (vector_neg p1)) , (vector_neg p2))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , p2)))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , p2))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 ! ! c==> cIN c, cvector_neg b0 b1 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c/\ c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, cvector_neg cvector_neg b0 cvector_neg b1 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg b0 b1 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg b0 b1 c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, cvector_neg cvector_neg b0 cvector_neg b1 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg b0 b1 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg b0 b1
+ (!H. (!G. (!f. (((hyp_iso f) (H , G)) ==> ((iso H) G))))) |- (((!f. (((hyp_iso f) (H , G)) ==> ((iso H) G))) ==> ((\f. (((hyp_iso f) (H , G)) ==> ((iso H) G))) f)) = ((\f. (((hyp_iso f) (H , G)) ==> ((iso H) G))) f))
T c==> ! ! ! c==> chyp_iso b2 c, b0 b1 ciso b0 b1 c= c==> ! c==> chyp_iso b0 c, f0 f1 ciso f0 f1 * / c==> chyp_iso b0 c, f0 f1 ciso f0 f1 f2 * / c==> chyp_iso b0 c, f0 f1 ciso f0 f1 f2
- (!p. (!y. (!x. (!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))))), ((?s. ((permutes p) s)) /\ (P ((p x) = y))) |- (((?s. ((permutes p) s)) /\ (P ((p x) = y))) /\ (P (((inverse p) y) = x)))
T c==> ! ! ! ! c==> c/\ c? / cpermutes b0 b4 * b3 c= * b0 b2 b1 * b3 c= cinverse b0 b1 b2 c==> c/\ c? / cpermutes f0 b0 * f1 c= * f0 f2 f3 c/\ c/\ c? / cpermutes f0 b0 * f1 c= * f0 f2 f3 * f1 c= cinverse f0 f3 f2
- (!p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))) |- ((\H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H))))) H)
T c==> ! ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1 * / c==> cpermutes f0 * part cdart b0 chyp_iso f0 c, b0 chyp_conj f0 b0 f1
+ (contravening V), (contravening ((IMAGE vector_neg) V)) |- ((hyp_iso (\uv. ((vector_neg (FST uv)) , (vector_neg (SND uv))))) ((hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) , ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))))
T c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 chyp_iso / c, cvector_neg cFST b0 cvector_neg cSND b0 c, chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map chypermap_of_fan c, f0 * part cESTD f0 copposite_hypermap chypermap_of_fan c, f0 * part cESTD f0
- (contravening V) |- (T = (contravening V))
T c==> ccontravening f0 c= cT ccontravening f0
+ (~ (V p1)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((~ (V p1)) /\ F)
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f1 c= b0 f4 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f4 c\/ c= b0 f2 c= b0 f3 c/\ c~ * f0 f1 cF
+ |- ((!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x)))) = T)
T c= ! c==> c/\ c? / cpermutes f0 b1 * b0 c= * f0 f1 f2 * b0 c= cinverse f0 f2 f1 cT
+ |- ((\E. (!u. (!v. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) u) = ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u)))))) E)
T * / ! ! c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 b0 cIN b1 * * * part cset_of_edge b2 f0 b0 c= csigma_fan cvec cNUMERAL c_0 f0 b0 b2 b1 cazim_cycle * * * part cset_of_edge b2 f0 b0 cvec cNUMERAL c_0 b2 b1 f1
- (contravening V) |- ((contravening V) /\ ((contravening ((IMAGE vector_neg) V)) = T))
T c==> ccontravening f0 c/\ ccontravening f0 c= ccontravening * * part cIMAGE part cvector_neg f0 cT
+ |- (((v , w) IN (dart1_of_fan (V , E))) = ((v INSERT (w INSERT EMPTY)) IN E))
T c= cIN c, f0 f1 * part cdart1_of_fan c, f2 f3 cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3
- |- ((?w'. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w'))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w'))))))) = (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (?w. ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w))))))))
T c= c? / c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b1 f3 c= b1 f4 c/\ c~ c= b1 f1 c~ c= b1 b0 ! c\/ c/\ c~ c= b1 f3 c~ c= b1 f4 c\/ c= b1 f1 c= b1 b0 c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c? / c/\ ! c\/ c\/ c= b1 f3 c= b1 f4 c/\ c~ c= b1 f1 c~ c= b1 b0 ! c\/ c/\ c~ c= b1 f3 c~ c= b1 f4 c\/ c= b1 f1 c= b1 b0
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- |- ((?w'. (((V v) /\ ((V w') /\ ((~ (v = w')) /\ ((real_le (distance (v , w'))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. ((((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w)))) /\ (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w))))))) = ((?w. ((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))))) /\ (!x. ((((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w)))) /\ (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))))
T c= c? / c/\ c/\ * f0 f1 c/\ * f0 b0 c/\ c~ c= f1 b0 creal_le cdistance c, f1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c/\ c\/ c\/ c= b1 f2 c= b1 f3 c/\ c~ c= b1 f1 c~ c= b1 f4 c\/ c/\ c~ c= b1 f2 c~ c= b1 f3 c\/ c= b1 f1 c= b1 f4 c/\ c? / c/\ * f0 f1 c/\ * f0 b0 c/\ c~ c= f1 b0 creal_le cdistance c, f1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c/\ c\/ c\/ c= b0 f2 c= b0 f3 c/\ c~ c= b0 f1 c~ c= b0 f4 c\/ c/\ c~ c= b0 f2 c~ c= b0 f3 c\/ c= b0 f1 c= b0 f4
- |- ((!p1. ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) = T)
T c= ! c==> c? / c? / c/\ c/\ * f0 b1 c/\ * f0 b2 c/\ c~ c= b1 b2 creal_le cdistance c, b1 b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b3 b0 c= b3 f1 c\/ c= b3 b1 c= b3 b2 c/\ * f0 b0 * f0 f1 cT
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- (((inverse (n_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = (p1 , (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) p2)))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, f1 cinverse_sigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 f1 f2
+ |- (((~ (_10268365 = p2)) \/ ((_10268365 = v) \/ (_10268365 = w))) = ((_10268365 = w) \/ ((~ (_10268365 = p2)) \/ (_10268365 = v))))
T c= c\/ c~ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c\/ c= f0 f3 c\/ c~ c= f0 f1 c= f0 f2
+ (!p. (!y. (!x. (!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))))) |- (((!y. (!x. (!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x)))))) ==> ((\y. (!x. (!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x)))))) y)) = ((\y. (!x. (!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x)))))) y))
T c==> ! ! ! ! c==> c/\ c? / cpermutes b0 b4 * b3 c= * b0 b2 b1 * b3 c= cinverse b0 b1 b2 c= c==> ! ! ! c==> c/\ c? / cpermutes f0 b3 * b2 c= * f0 b1 b0 * b2 c= cinverse f0 b0 b1 * / ! ! c==> c/\ c? / cpermutes f0 b3 * b2 c= * f0 b1 b0 * b2 c= cinverse f0 b0 b1 f1 * / ! ! c==> c/\ c? / cpermutes f0 b3 * b2 c= * f0 b1 b0 * b2 c= cinverse f0 b0 b1 f1
+ (contravening V), ((hypermap_of_fan (V , (ESTD V))) = H) |- ((hyp_iso (\uv. ((vector_neg (FST uv)) , (vector_neg (SND uv))))) ((hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) , ((hyp_conj (node_map H)) (opposite_hypermap H))))
T c==> ccontravening f0 c==> c= chypermap_of_fan c, f0 * part cESTD f0 f1 chyp_iso / c, cvector_neg cFST b0 cvector_neg cSND b0 c, chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1
+ (!V. (!E. (!p1. (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))))) |- (((!p1. (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))) ==> ((\p1. (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))) p1)) = ((\p1. (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))) p1))
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 * b4 civs_azim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 c= c==> ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 * b2 civs_azim_cycle * * * part cset_of_edge b0 f0 f1 cvec cNUMERAL c_0 b0 b1 * b2 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 * / ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 * b2 civs_azim_cycle * * * part cset_of_edge b0 f0 f1 cvec cNUMERAL c_0 b0 b1 * b2 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 f2 * / ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 * b2 civs_azim_cycle * * * part cset_of_edge b0 f0 f1 cvec cNUMERAL c_0 b0 b1 * b2 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 f2
+ |- (((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> (~ (!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V))))))))))))) = T)
T c= c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c~ ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cT
+ ((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V)) |- (((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V)) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)))))
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cESTD f2 c==> c==> cIN f1 * * * part cset_of_edge f0 f2 * part cESTD f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f2 * part cESTD f2 cvec cNUMERAL c_0 f0 f1 * * * part cset_of_edge f0 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f0 f2 * part cESTD f2 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f2 * part cESTD f2 cvec cNUMERAL c_0 f0 f1 f1 c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f2 * part cESTD f2 cvec cNUMERAL c_0 f0 f1 * * * part cset_of_edge f0 f2 * part cESTD f2 c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cESTD f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f2 * part cESTD f2 cvec cNUMERAL c_0 f0 f1 part cEMPTY * part cESTD f2 c, f0 cazim_cycle * * * part cset_of_edge f0 f2 * part cESTD f2 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f2 * part cESTD f2 cvec cNUMERAL c_0 f0 f1 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f2 * part cESTD f2 cvec cNUMERAL c_0 f0 f1 c, f0 f1
+ (~ (V p1)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- (w = p1)
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f1 c= b0 f4 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f4 c\/ c= b0 f2 c= b0 f3 c= f3 f1
+ (!V. (!E. (!p1. (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))))) |- (((!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2))))) ==> ((\p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2))))) p2)) = ((\p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2))))) p2))
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 * b4 civs_azim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 c= c==> ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f1 * b1 civs_azim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 b0 * b1 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 * / ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f1 * b1 civs_azim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 b0 * b1 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 f3 * / ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f1 * b1 civs_azim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 b0 * b1 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 f3
+ (contravening ((IMAGE vector_neg) V)) |- (((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x)))))) = q')) ==> (((x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))))) = ((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> q')))
T c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> c==> cIN f1 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c= c/\ c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, cvector_neg cFST f1 cvector_neg cSND f1 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, cvector_neg cFST f1 cvector_neg cSND f1 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 f2 c= c==> cIN f1 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c/\ c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, cvector_neg cFST f1 cvector_neg cSND f1 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, cvector_neg cFST f1 cvector_neg cSND f1 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 c==> cIN f1 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f2
+ |- ((iso (opposite_hypermap H)) ((hyp_conj (node_map H)) (opposite_hypermap H)))
T ciso copposite_hypermap f0 chyp_conj * part cnode_map f0 copposite_hypermap f0
+ (~ ((V p1) /\ (V p2))), ((~ (V p1)) ==> F), ((~ (V p2)) ==> F) |- F
T c==> c~ c/\ * f0 f1 * f0 f2 c==> c==> c~ * f0 f1 cF c==> c==> c~ * f0 f2 cF cF
+ (_10268306 = _10268308) |- ((_10268306 = _10268308) /\ ((~ (_10268305 = _10268307)) \/ ((_10268307 IN _10268308) \/ (~ (_10268305 IN _10268306)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f3 f1 c~ cIN f2 f0
+ ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) = T)
T c==> cIN c, f0 f1 * part cdart1_of_fan c, f2 * part cESTD f2 c= cIN c, f0 f1 * part cdart1_of_fan c, f2 * part cESTD f2 cT
- |- ((?w. (P w)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
+ |- ((\v. (!w. (((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ (w IN ((EE v) (ESTD V)))) ==> ((((((ivs_azim_cycle ((EE v) (ESTD V))) (vec (NUMERAL _0))) v) w) IN ((EE v) (ESTD V))) /\ (((((azim_cycle ((EE v) (ESTD V))) (vec (NUMERAL _0))) v) ((((ivs_azim_cycle ((EE v) (ESTD V))) (vec (NUMERAL _0))) v) w)) = w))))) p1)
T * / ! c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN b1 * * part cEE b0 * part cESTD f0 c/\ cIN civs_azim_cycle * * part cEE b0 * part cESTD f0 cvec cNUMERAL c_0 b0 b1 * * part cEE b0 * part cESTD f0 c= cazim_cycle * * part cEE b0 * part cESTD f0 cvec cNUMERAL c_0 b0 civs_azim_cycle * * part cEE b0 * part cESTD f0 cvec cNUMERAL c_0 b0 b1 b1 f1
+ (x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) |- ((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) /\ (((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x)))))) = ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))))))
T c==> cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c= c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0
- |- ((?H. ((hypermap_of_fan (V , (ESTD V))) = H)) ==> (?H. ((hypermap_of_fan (V , (ESTD V))) = H)))
T c==> c? / c= chypermap_of_fan c, f0 * part cESTD f0 b0 c? / c= chypermap_of_fan c, f0 * part cESTD f0 b0
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- (((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V)))) /\ (((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V))) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 * * * part cset_of_edge f1 f0 * part cESTD f0 c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cESTD f0 c= cCOND cIN * * part cINSERT f1 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 part cEMPTY * part cESTD f0 c, f1 cazim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 c, f1 civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 c, f1 f2
- (x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) |- ((x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) /\ (((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x)))))) = ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))))))
T c==> cIN f0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ cIN f0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c= c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0
+ |- (((_10268394 = _10268395) /\ (V _10268394)) ==> (V _10268395))
T c==> c/\ c= f0 f1 * f2 f0 * f2 f1
+ |- ((\p2. (!p1. ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))))) p2)
T * / ! c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, b1 b0 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, b1 b0 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b2 c= * part cdart_of_fan c, b2 * part cESTD b2 * part cdart1_of_fan c, b2 * part cESTD b2 cF f1
+ (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) |- (((!V. (!E. ((~ (FAN ((vec (NUMERAL _0)) , (V , E)))) \/ ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> ((\V. (!E. ((~ (FAN ((vec (NUMERAL _0)) , (V , E)))) \/ ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) _10268346)) = ((\V. (!E. ((~ (FAN ((vec (NUMERAL _0)) , (V , E)))) \/ ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) _10268346))
T c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 c= c==> ! ! c\/ c~ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 * / ! c\/ c~ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 f0 * / ! c\/ c~ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 f0
+ ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) |- ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))))
T c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2
- (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) |- (T = (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c= cT cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0
+ (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))), (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) |- ((permutes (n_fan_pair_ext (V , (ESTD V)))) (dart_of_fan (V , (ESTD V))))
T c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 * part cdart_of_fan c, f0 * part cESTD f0
- |- (((((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F)))))))) ==> (((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))))) = (((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F)))))))))
T c= c==> c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF
+ (!V. (!E. (!p1. (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))))) |- (!p1. (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2))))))
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 * b4 civs_azim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 * b2 civs_azim_cycle * * * part cset_of_edge b0 f0 f1 cvec cNUMERAL c_0 b0 b1 * b2 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1
- (~ F), (~ (V p1)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f1 c= b0 f4 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f4 c\/ c= b0 f2 c= b0 f3 c/\ c~ cF cF
+ (~ (V p2)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((((w = p2) /\ (V w)) ==> (V p2)) = (V p2))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f4 c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f4 c~ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c= c==> c/\ c= f3 f1 * f0 f3 * f0 f1 * f0 f1
- |- ((((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F)))))))) ==> (((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F)))))))))
T c==> c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF
+ |- ((!p2. (!p1. ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> (~ (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E))))))))))))))) = T)
T c= ! ! c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, b1 b0 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b2 c~ ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b2 b3 cpermutes * part cn_fan_pair_ext c, b2 b3 * part cdart_of_fan c, b2 b3 cT
- (!p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))), ((permutes p) (dart H)) |- ((hyp_iso p) (H , ((hyp_conj p) H)))
T c==> ! ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1 c==> cpermutes f0 * part cdart f1 chyp_iso f0 c, f1 chyp_conj f0 f1
- (((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F)))))))) |- ((((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F)))))))) /\ (((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F)))))))))
T c==> c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c/\ c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF
- (~ (V p2)), (~ (p2 = w)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((~ (p2 = w)) /\ (p2 = w))
T c==> c~ * f0 f1 c==> c~ c= f1 f2 c==> c/\ c/\ * f0 f3 c/\ * f0 f2 c/\ c~ c= f3 f2 creal_le cdistance c, f3 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f4 c= b0 f1 c/\ c~ c= b0 f3 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f4 c~ c= b0 f1 c\/ c= b0 f3 c= b0 f2 c/\ c~ c= f1 f2 c= f1 f2
+ (_10268306 = _10268308), (_10268305 = _10268307) |- ((((_10268305 IN _10268306) = (_10268307 IN _10268308)) ==> ((_10268307 IN _10268308) \/ (~ (_10268305 IN _10268306)))) = ((_10268307 IN _10268308) \/ (~ (_10268305 IN _10268306))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cIN f2 f0 cIN f3 f1 c\/ cIN f3 f1 c~ cIN f2 f0 c\/ cIN f3 f1 c~ cIN f2 f0
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- ((\H. ((hypermap_of_fan (V , (ESTD V))) = H)) H) |- ((((hypermap_of_fan (V , (ESTD V))) = H) ==> (?H. ((hypermap_of_fan (V , (ESTD V))) = H))) = (?H. ((hypermap_of_fan (V , (ESTD V))) = H)))
T c==> * / c= chypermap_of_fan c, f0 * part cESTD f0 b0 f1 c= c==> c= chypermap_of_fan c, f0 * part cESTD f0 f1 c? / c= chypermap_of_fan c, f0 * part cESTD f0 b0 c? / c= chypermap_of_fan c, f0 * part cESTD f0 b0
+ (~ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) |- (((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) = F)
T c==> c~ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 cF
- (!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))), (~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))), (contravening V), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- ((~ F) ==> F)
T c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 c==> c~ cIN c, f0 f1 * part cdart_of_fan c, f2 * part cESTD f2 c==> ccontravening f2 c==> cIN c, f0 f1 * part cdart1_of_fan c, f2 * part cESTD f2 c==> c~ cF cF
+ (FAN ((vec (NUMERAL _0)) , (V , E))) |- ((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((node_map (hypermap_of_fan (V , E))) = (n_fan_pair_ext (V , E))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= * part cnode_map chypermap_of_fan c, f0 f1 * part cn_fan_pair_ext c, f0 f1
- |- ((~ (_10268313 = _10268314)) \/ ((dart_of_fan _10268313) = (dart_of_fan _10268314)))
T c\/ c~ c= f0 f1 c= * part cdart_of_fan f0 * part cdart_of_fan f1
- |- ((\e'. ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) = g') ==> ((g' ==> ((p1 , p2) = t')) ==> (((~ g') ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND g') t') e')))))) e')
T * / c==> c= cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 c==> c==> f3 c= c, f0 f2 f4 c==> c==> c~ f3 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 b0 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND f3 f4 b0 f5
+ (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) |- ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))) /\ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)))
T c==> cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c/\ c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1
+ (!p. (!y. (!x. (!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))))) |- (!x. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))
T c==> ! ! ! ! c==> c/\ c? / cpermutes b0 b4 * b3 c= * b0 b2 b1 * b3 c= cinverse b0 b1 b2 ! c==> c/\ c? / cpermutes f0 b1 * f1 c= * f0 b0 f2 * f1 c= cinverse f0 f2 b0
- (_10268390 = _10268392), (_10268391 = _10268393) |- ((_10268391 = _10268393) /\ (((real_le _10268392) _10268393) \/ (~ ((real_le _10268390) _10268391))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2
+ (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- (V w)
T c==> c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f3 c= b0 f4 c/\ c~ c= b0 f1 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f1 c= b0 f2 * f0 f2
+ (~ ((V p1) /\ (V p2))) |- ((((\w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w))))))) w) ==> F) = T)
T c==> c~ c/\ * f0 f1 * f0 f2 c= c==> * / c/\ c/\ * f0 f3 c/\ * f0 b0 c/\ c~ c= f3 b0 creal_le cdistance c, f3 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b1 f1 c= b1 f2 c/\ c~ c= b1 f3 c~ c= b1 b0 ! c\/ c/\ c~ c= b1 f1 c~ c= b1 f2 c\/ c= b1 f3 c= b1 b0 f4 cF cT
- (((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ((hyp_conj (node_map H)) (opposite_hypermap H))) /\ ((iso ((hyp_conj (node_map H)) (opposite_hypermap H))) (opposite_hypermap H))), ((((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ((hyp_conj (node_map H)) (opposite_hypermap H))) /\ ((iso ((hyp_conj (node_map H)) (opposite_hypermap H))) (opposite_hypermap H))) ==> ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (opposite_hypermap H))) |- ((((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ((hyp_conj (node_map H)) (opposite_hypermap H))) /\ ((iso ((hyp_conj (node_map H)) (opposite_hypermap H))) (opposite_hypermap H))) /\ ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (opposite_hypermap H)))
T c==> c/\ ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1 ciso chyp_conj * part cnode_map f1 copposite_hypermap f1 copposite_hypermap f1 c==> c==> c/\ ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1 ciso chyp_conj * part cnode_map f1 copposite_hypermap f1 copposite_hypermap f1 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 copposite_hypermap f1 c/\ c/\ ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1 ciso chyp_conj * part cnode_map f1 copposite_hypermap f1 copposite_hypermap f1 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 copposite_hypermap f1
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- ((((vector_neg p1) , (vector_neg p2)) IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) /\ (((inverse (e_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = ((vector_neg (FST ((vector_neg p2) , (vector_neg p1)))) , (vector_neg (SND ((vector_neg p2) , (vector_neg p1)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c/\ cIN c, cvector_neg f1 cvector_neg f2 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, cvector_neg cFST c, cvector_neg f2 cvector_neg f1 cvector_neg cSND c, cvector_neg f2 cvector_neg f1
+ |- ((\E. (!v. (!w. (((n_fan_pair (V , E)) (v , w)) = (v , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)))))) E)
T * / ! ! c= cn_fan_pair c, f0 b0 c, b1 b2 c, b1 csigma_fan cvec cNUMERAL c_0 f0 b0 b1 b2 f1
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((!E. (!x. (!v. (!w. (((FAN (x , (V , E))) /\ (w IN ((EE v) E))) ==> ((((((ivs_azim_cycle ((EE v) E)) x) v) w) IN ((EE v) E)) /\ (((((azim_cycle ((EE v) E)) x) v) ((((ivs_azim_cycle ((EE v) E)) x) v) w)) = w))))))) ==> ((\E. (!x. (!v. (!w. (((FAN (x , (V , E))) /\ (w IN ((EE v) E))) ==> ((((((ivs_azim_cycle ((EE v) E)) x) v) w) IN ((EE v) E)) /\ (((((azim_cycle ((EE v) E)) x) v) ((((ivs_azim_cycle ((EE v) E)) x) v) w)) = w))))))) (ESTD V))) = ((\E. (!x. (!v. (!w. (((FAN (x , (V , E))) /\ (w IN ((EE v) E))) ==> ((((((ivs_azim_cycle ((EE v) E)) x) v) w) IN ((EE v) E)) /\ (((((azim_cycle ((EE v) E)) x) v) ((((ivs_azim_cycle ((EE v) E)) x) v) w)) = w))))))) (ESTD V)))
T c= c==> ! ! ! ! c==> c/\ cFAN c, b1 c, f0 b0 cIN b3 * * part cEE b2 b0 c/\ cIN civs_azim_cycle * * part cEE b2 b0 b1 b2 b3 * * part cEE b2 b0 c= cazim_cycle * * part cEE b2 b0 b1 b2 civs_azim_cycle * * part cEE b2 b0 b1 b2 b3 b3 * / ! ! ! c==> c/\ cFAN c, b1 c, f0 b0 cIN b3 * * part cEE b2 b0 c/\ cIN civs_azim_cycle * * part cEE b2 b0 b1 b2 b3 * * part cEE b2 b0 c= cazim_cycle * * part cEE b2 b0 b1 b2 civs_azim_cycle * * part cEE b2 b0 b1 b2 b3 b3 * part cESTD f0 * / ! ! ! c==> c/\ cFAN c, b1 c, f0 b0 cIN b3 * * part cEE b2 b0 c/\ cIN civs_azim_cycle * * part cEE b2 b0 b1 b2 b3 * * part cEE b2 b0 c= cazim_cycle * * part cEE b2 b0 b1 b2 civs_azim_cycle * * part cEE b2 b0 b1 b2 b3 b3 * part cESTD f0
+ (~ ((V p1) /\ (V p2))) |- (!v. (((\v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))))) v) ==> F))
T c==> c~ c/\ * f0 f1 * f0 f2 ! c==> * / c? / c/\ c/\ * f0 b1 c/\ * f0 b1 c/\ c~ c= b1 b1 creal_le cdistance c, b1 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b2 f1 c= b2 f2 c/\ c~ c= b2 b1 c~ c= b2 b1 ! c\/ c/\ c~ c= b2 f1 c~ c= b2 f2 c\/ c= b2 b1 c= b2 b1 b0 cF
- (((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) |- ((!V. (!E. (!v. (!w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w))))))))) ==> (P ((e_fan_pair_ext (V , E)) (v , w))))
T c==> c/\ cIN c, f0 f1 * part cdart_of_fan c, f2 f3 * f4 c, f1 f0 c==> ! ! ! ! ! c==> c/\ cIN c, b2 b3 * part cdart_of_fan c, b0 b1 * b4 c, b3 b2 * b4 ce_fan_pair_ext c, b0 b1 c, b2 b3 * f4 ce_fan_pair_ext c, f2 f3 c, f0 f1
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- (((e_fan_pair_ext (V , (ESTD V))) (p1 , p2)) = (p2 , p1))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c= ce_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, f2 f1
+ (?f. ((hyp_iso f) (H , G))) |- ((!H. (!G. (!f. (((hyp_iso f) (H , G)) ==> ((iso H) G))))) ==> ((iso H) G))
T c==> c? / chyp_iso b0 c, f0 f1 c==> ! ! ! c==> chyp_iso b2 c, b0 b1 ciso b0 b1 ciso f0 f1
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- (_10268396 = _10268398), (_10268397 = _10268399) |- ((_10268397 = _10268399) /\ ((_10268396 , _10268397) = (_10268398 , _10268399)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= c, f0 f2 c, f1 f3
+ |- (((!V. (!E. (!v. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((EE v) E) = (((set_of_edge v) V) E)))))) ==> ((\V. (!E. (!v. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((EE v) E) = (((set_of_edge v) V) E)))))) V)) = ((\V. (!E. (!v. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((EE v) E) = (((set_of_edge v) V) E)))))) V))
T c= c==> ! ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 c= * * part cEE b2 b1 * * * part cset_of_edge b2 b0 b1 * / ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 c= * * part cEE b2 b1 * * * part cset_of_edge b2 b0 b1 f0 * / ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 c= * * part cEE b2 b1 * * * part cset_of_edge b2 b0 b1 f0
+ (!V. (!E. (!v. (!w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w))))))))) |- ((!E. (!v. (!w. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w))))))) = T)
T c==> ! ! ! ! ! c==> c/\ cIN c, b2 b3 * part cdart_of_fan c, b0 b1 * b4 c, b3 b2 * b4 ce_fan_pair_ext c, b0 b1 c, b2 b3 c= ! ! ! c==> c/\ cIN c, b1 b2 * part cdart_of_fan c, f0 b0 * f1 c, b2 b1 * f1 ce_fan_pair_ext c, f0 b0 c, b1 b2 cT
+ ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) |- (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)))
T c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c/\ c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2
+ |- (((T ==> B) /\ T) ==> B)
T c==> c/\ c==> cT f0 cT f0
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- (((inverse (n_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2))))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg f2 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg f2
- |- ((\q'. (((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) = p') ==> ((p' ==> (((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x)))))) = q')) ==> (((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f2 c==> c==> f2 c= c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 b0 c= c==> cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c==> f2 b0 f3
+ (!V. (!E. (!v. (!w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w))))))))) |- (((!E. (!v. (!w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w)))))))) ==> ((\E. (!v. (!w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w)))))))) E)) = ((\E. (!v. (!w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w)))))))) E))
T c==> ! ! ! ! ! c==> c/\ cIN c, b2 b3 * part cdart_of_fan c, b0 b1 * b4 c, b3 b2 * b4 ce_fan_pair_ext c, b0 b1 c, b2 b3 c= c==> ! ! ! ! c==> c/\ cIN c, b1 b2 * part cdart_of_fan c, f0 b0 * b3 c, b2 b1 * b3 ce_fan_pair_ext c, f0 b0 c, b1 b2 * / ! ! ! c==> c/\ cIN c, b1 b2 * part cdart_of_fan c, f0 b0 * b3 c, b2 b1 * b3 ce_fan_pair_ext c, f0 b0 c, b1 b2 f1 * / ! ! ! c==> c/\ cIN c, b1 b2 * part cdart_of_fan c, f0 b0 * b3 c, b2 b1 * b3 ce_fan_pair_ext c, f0 b0 c, b1 b2 f1
+ (!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))), (contravening V), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- (((dart1_of_fan (V , (ESTD V))) = (dart_of_fan (V , (ESTD V)))) /\ (((p1 , p2) = (p1 , p2)) /\ ((p1 , p2) IN (dart1_of_fan (V , (ESTD V))))))
T c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 c==> ccontravening f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c/\ c= * part cdart1_of_fan c, f0 * part cESTD f0 * part cdart_of_fan c, f0 * part cESTD f0 c/\ c= c, f1 f2 c, f1 f2 cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0
+ ((hypermap_of_fan (V , (ESTD V))) = H) |- (((hyp_iso (\uv. ((vector_neg (FST uv)) , (vector_neg (SND uv))))) ((hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) , ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V))))))) = ((hyp_iso (\uv. ((vector_neg (FST uv)) , (vector_neg (SND uv))))) ((hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) , ((hyp_conj (node_map H)) (opposite_hypermap H)))))
T c==> c= chypermap_of_fan c, f0 * part cESTD f0 f1 c= chyp_iso / c, cvector_neg cFST b0 cvector_neg cSND b0 c, chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map chypermap_of_fan c, f0 * part cESTD f0 copposite_hypermap chypermap_of_fan c, f0 * part cESTD f0 chyp_iso / c, cvector_neg cFST b0 cvector_neg cSND b0 c, chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1
+ (!V. (!E. (!v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))) |- ((!V. (!E. (!v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))) /\ (!P. (!V. (!E. (!v. (!u. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))))
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 * b4 cazim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 c/\ ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 * b4 cazim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b1 b2 cIN b4 * * * part cset_of_edge b3 b1 b2 * b0 cazim_cycle * * * part cset_of_edge b3 b1 b2 cvec cNUMERAL c_0 b3 b4 * b0 csigma_fan cvec cNUMERAL c_0 b1 b2 b3 b4
+ |- ((\E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((inverse (e_fan_pair_ext (V , E))) = (e_fan_pair_ext (V , E))))) E)
T * / c==> cFAN c, cvec cNUMERAL c_0 c, f0 b0 c= * part cinverse * part ce_fan_pair_ext c, f0 b0 * part ce_fan_pair_ext c, f0 b0 f1
- |- (((((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> B) /\ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> B) ==> (((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> B) /\ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> B)) = (((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> B) /\ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> B))
T c= c==> c==> c/\ c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 c==> c/\ c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 c==> c/\ c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3
- (!V. (!E. (!p1. (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))))), (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) |- ((!V. (!E. (!p1. (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))))) /\ (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 * b4 civs_azim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 * f4 civs_azim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 f3 c/\ ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 * b4 civs_azim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 * f4 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3
+ |- ((\v. (!E. (!V. ((GSPEC (\GEN%PVAR%5439. (?w. (((SETSPEC GEN%PVAR%5439) (((v INSERT (w INSERT EMPTY)) IN E) /\ (w IN V))) w)))) = (((set_of_edge v) V) E))))) v)
T * / ! ! c= * part cGSPEC / c? / cSETSPEC b3 c/\ cIN * * part cINSERT b0 * * part cINSERT b4 part cEMPTY b1 cIN b4 b2 b4 * * * part cset_of_edge b0 b2 b1 f0
- |- (T ==> (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) = ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))))
T c==> cT c= c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2
+ ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)), ((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V)) |- (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) /\ (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V)) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)))) = ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))))
T c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c==> cIN * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part cESTD f1 c/\ c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c/\ cIN * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part cESTD f1 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2
- |- ((((\H. ((hypermap_of_fan (V , (ESTD V))) = H)) H) ==> (?H. ((hypermap_of_fan (V , (ESTD V))) = H))) = T)
T c= c==> * / c= chypermap_of_fan c, f0 * part cESTD f0 b0 f1 c? / c= chypermap_of_fan c, f0 * part cESTD f0 b0 cT
+ |- ((\H. (!G. (!W. ((((iso H) G) /\ ((iso G) W)) ==> ((iso H) W))))) (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))
T * / ! ! c==> c/\ ciso b0 b1 ciso b1 b2 ciso b0 b2 chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0
- |- ((!V'. ((~ (contravening V)) \/ ((dart_of_fan (V' , (ESTD V'))) = (dart1_of_fan (V' , (ESTD V')))))) = ((~ (contravening V)) \/ (!V. ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))))
T c= ! c\/ c~ ccontravening f0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 c\/ c~ ccontravening f0 ! c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0
+ |- (((!s. (((permutes p) s) ==> (!x. (!y. ((((inverse p) y) = x) = ((p x) = y)))))) ==> ((\s. (((permutes p) s) ==> (!x. (!y. ((((inverse p) y) = x) = ((p x) = y)))))) s)) = ((\s. (((permutes p) s) ==> (!x. (!y. ((((inverse p) y) = x) = ((p x) = y)))))) s))
T c= c==> ! c==> cpermutes f0 b0 ! ! c= c= cinverse f0 b2 b1 c= * f0 b1 b2 * / c==> cpermutes f0 b0 ! ! c= c= cinverse f0 b2 b1 c= * f0 b1 b2 f1 * / c==> cpermutes f0 b0 ! ! c= c= cinverse f0 b2 b1 c= * f0 b1 b2 f1
+ (~ ((V p1) /\ (V p2))) |- ((((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) ==> F)
T c==> c~ c/\ * f0 f1 * f0 f2 c==> c/\ c/\ * f0 f3 c/\ * f0 f4 c/\ c~ c= f3 f4 creal_le cdistance c, f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f1 c= b0 f2 c/\ c~ c= b0 f3 c~ c= b0 f4 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 c\/ c= b0 f3 c= b0 f4 cF
- |- (((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) = ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> ((p1 , p2) = t')) ==> (((~ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) t') e'))))) = ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> ((p1 , p2) = t')) ==> (((~ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) t') e')))))
T c= c==> c= cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c==> c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= c, f0 f2 f3 c==> c==> c~ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f4 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 f4 c==> c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= c, f0 f2 f3 c==> c==> c~ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f4 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 f4
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- ((((BIJ (\uv. ((vector_neg (FST uv)) , (vector_neg (SND uv))))) (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (dart1_of_fan (V , (ESTD V)))) = T)
T c= cBIJ / c, cvector_neg cFST b0 cvector_neg cSND b0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 * part cdart1_of_fan c, f0 * part cESTD f0 cT
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) |- ((edge_map (hypermap_of_fan (V , (ESTD V)))) = (e_fan_pair_ext (V , (ESTD V))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c= * part cedge_map chypermap_of_fan c, f0 * part cESTD f0 * part ce_fan_pair_ext c, f0 * part cESTD f0
+ (!H. (!G. (!f. (((hyp_iso f) (H , G)) ==> ((iso H) G))))), (?f. ((hyp_iso f) (H , G))) |- ((?f. ((hyp_iso f) (H , G))) /\ ((iso H) G))
T c==> ! ! ! c==> chyp_iso b2 c, b0 b1 ciso b0 b1 c==> c? / chyp_iso b0 c, f0 f1 c/\ c? / chyp_iso b0 c, f0 f1 ciso f0 f1
+ (~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))), (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) |- ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) /\ (~ (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E))))))))
T c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c/\ c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c~ ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1
+ (!p. (!y. (!x. (!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))))) |- ((!y. (!x. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))) = T)
T c==> ! ! ! ! c==> c/\ c? / cpermutes b0 b4 * b3 c= * b0 b2 b1 * b3 c= cinverse b0 b1 b2 c= ! ! c==> c/\ c? / cpermutes f0 b2 * f1 c= * f0 b1 b0 * f1 c= cinverse f0 b0 b1 cT
+ |- ((!x. (!v. (!w. (((FAN (x , (V , E))) /\ (w IN ((EE v) E))) ==> ((((((ivs_azim_cycle ((EE v) E)) x) v) w) IN ((EE v) E)) /\ (((((azim_cycle ((EE v) E)) x) v) ((((ivs_azim_cycle ((EE v) E)) x) v) w)) = w)))))) = T)
T c= ! ! ! c==> c/\ cFAN c, b0 c, f0 f1 cIN b2 * * part cEE b1 f1 c/\ cIN civs_azim_cycle * * part cEE b1 f1 b0 b1 b2 * * part cEE b1 f1 c= cazim_cycle * * part cEE b1 f1 b0 b1 civs_azim_cycle * * part cEE b1 f1 b0 b1 b2 b2 cT
- ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) |- (((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) /\ ((p1 , p2) = (p1 , p2)))
T c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c/\ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= c, f0 f2 c, f0 f2
+ |- (((!f. (!y. (((\x. (f x)) y) = (f y)))) ==> ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. (((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V))) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , v)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)))))) = ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. (((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V))) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , v)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))))))
T c= c==> ! ! c= * / * b0 b2 b1 * b0 b1 * / ! c= * / * b0 b2 b1 * b0 b1 / c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cESTD f0 c= cCOND cIN * * part cINSERT f1 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 part cEMPTY * part cESTD f0 c, f1 b0 c, f1 civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 c, f1 f2 * / ! c= * / * b0 b2 b1 * b0 b1 / c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cESTD f0 c= cCOND cIN * * part cINSERT f1 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 part cEMPTY * part cESTD f0 c, f1 b0 c, f1 civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 c, f1 f2
- |- (((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))))
T c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF
- |- ((\p1. ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F)) p1)
T * / c==> c~ c==> c? / c? / c/\ c/\ * f0 b1 c/\ * f0 b2 c/\ c~ c= b1 b2 creal_le cdistance c, b1 b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b3 b0 c= b3 f1 c\/ c= b3 b1 c= b3 b2 c/\ * f0 b0 * f0 f1 cF f2
- (~ (V p1)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f1 c= b0 f4 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f4 c\/ c= b0 f2 c= b0 f3 c==> c~ cF cF
- |- ((((node (opposite_hypermap H)) x) = ((node H) x)) /\ (((face (opposite_hypermap H)) x) = ((face H) x)))
T c/\ c= * * part cnode copposite_hypermap f0 f1 * * part cnode f0 f1 c= * * part cface copposite_hypermap f0 f1 * * part cface f0 f1
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- ((\x. ((\v. v) x)) (((inverse (n_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = (p1 , (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) p2))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 * / * / b1 b0 c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, f1 cinverse_sigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 f1 f2
- ((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) |- ((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) = T))
T c==> c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 cT
+ |- ((?s. ((permutes p) s)) ==> ((((inverse p) y) = x) = ((p x) = y)))
T c==> c? / cpermutes f0 b0 c= c= cinverse f0 f1 f2 c= * f0 f2 f1
+ |- (((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ((hyp_conj (node_map H)) (opposite_hypermap H))) = (((iso ((hyp_conj (node_map H)) (opposite_hypermap H))) (opposite_hypermap H)) /\ ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ((hyp_conj (node_map H)) (opposite_hypermap H)))))
T c= ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1 c/\ ciso chyp_conj * part cnode_map f1 copposite_hypermap f1 copposite_hypermap f1 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1
- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))), (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) |- ((~ ((permutes (n_fan_pair_ext (V , (ESTD V)))) (dart_of_fan (V , (ESTD V))))) ==> ((permutes (n_fan_pair_ext (V , (ESTD V)))) (dart_of_fan (V , (ESTD V)))))
T c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> c~ cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 * part cdart_of_fan c, f0 * part cESTD f0 cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 * part cdart_of_fan c, f0 * part cESTD f0
+ |- ((permutes (node_map H)) (dart H))
T cpermutes * part cnode_map f0 * part cdart f0
+ |- ((\v. ((((vector_neg u) , (vector_neg v)) IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) = ((u , v) IN (dart1_of_fan (V , (ESTD V)))))) v)
T * / c= cIN c, cvector_neg f0 cvector_neg b0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 cIN c, f0 b0 * part cdart1_of_fan c, f1 * part cESTD f1 f2
+ |- (((F ==> B) /\ F) ==> B)
T c==> c/\ c==> cF f0 cF f0
+ |- (((!p. (!y. (!x. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x)))))) ==> ((\p. (!y. (!x. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x)))))) p)) = ((\p. (!y. (!x. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x)))))) p))
T c= c==> ! ! ! c==> c/\ c? / cpermutes b0 b3 * f0 c= * b0 b2 b1 * f0 c= cinverse b0 b1 b2 * / ! ! c==> c/\ c? / cpermutes b0 b3 * f0 c= * b0 b2 b1 * f0 c= cinverse b0 b1 b2 f1 * / ! ! c==> c/\ c? / cpermutes b0 b3 * f0 c= * b0 b2 b1 * f0 c= cinverse b0 b1 b2 f1
+ (~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) |- (((p1 , p2) IN (dart_of_fan (V , (ESTD V)))) ==> F)
T c==> c~ cIN c, f0 f1 * part cdart_of_fan c, f2 * part cESTD f2 c==> cIN c, f0 f1 * part cdart_of_fan c, f2 * part cESTD f2 cF
+ |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- (((!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) ==> ((\a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) a)) = ((\a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) a))
T c= c==> ! ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 * / ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 f2 * / ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 f2
- ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- ((~ ((p1 , p2) IN (dart1_of_fan (V , (ESTD V))))) ==> ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))))
T c==> cIN c, f0 f1 * part cdart1_of_fan c, f2 * part cESTD f2 c==> c~ cIN c, f0 f1 * part cdart1_of_fan c, f2 * part cESTD f2 cIN c, f0 f1 * part cdart1_of_fan c, f2 * part cESTD f2
- ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> B) /\ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))), (((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> B) /\ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> B) |- (((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> B) /\ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) /\ B)
T c==> c/\ c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c==> c==> c/\ c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 c/\ c/\ c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3
+ |- ((\p'. (!q'. ((((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ (p2 IN ((EE p1) (ESTD V)))) = p') ==> ((p' ==> (((((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN ((EE p1) (ESTD V))) /\ (((((azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) = q')) ==> ((((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ (p2 IN ((EE p1) (ESTD V)))) ==> ((((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN ((EE p1) (ESTD V))) /\ (((((azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN f1 * * part cEE f2 * part cESTD f0 b0 c==> c==> b0 c= c/\ cIN civs_azim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 * * part cEE f2 * part cESTD f0 c= cazim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 civs_azim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 f1 b1 c= c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN f1 * * part cEE f2 * part cESTD f0 c/\ cIN civs_azim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 * * part cEE f2 * part cESTD f0 c= cazim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 civs_azim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 f1 c==> b0 b1 f3
+ (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) |- ((~ (FAN ((vec (NUMERAL _0)) , (_10268346 , _10268347)))) \/ ((permutes (n_fan_pair_ext (_10268346 , _10268347))) (dart_of_fan (_10268346 , _10268347))))
T c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 c\/ c~ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cpermutes * part cn_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1
+ |- (T = (((~ (_10268365 = p2)) \/ ((_10268365 = v) \/ (_10268365 = w))) = ((_10268365 = w) \/ ((~ (_10268365 = p2)) \/ (_10268365 = v)))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c\/ c= f0 f3 c\/ c~ c= f0 f1 c= f0 f2
- |- ((~ (_10268408 = _10268409)) \/ ((real_of_num _10268408) = (real_of_num _10268409)))
T c\/ c~ c= f0 f1 c= creal_of_num f0 creal_of_num f1
- |- ((_10268404 = _10268405) ==> ((BIT0 _10268404) = (BIT0 _10268405)))
T c==> c= f0 f1 c= cBIT0 f0 cBIT0 f1
+ |- ((\w. (((v , w) IN (dart_of_fan (V , E))) ==> (((e_fan_pair_ext (V , E)) (v , w)) = (w , v)))) w)
T * / c==> cIN c, f0 b0 * part cdart_of_fan c, f1 f2 c= ce_fan_pair_ext c, f1 f2 c, f0 b0 c, b0 f0 f3
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) |- ((((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V)) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))))) = ((((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ (p2 IN ((EE p1) (ESTD V)))) ==> ((((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN ((EE p1) (ESTD V))) /\ (((((azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) ==> (((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V)))) /\ (((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V))) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c= c==> c==> cIN f1 * * * part cset_of_edge f2 f0 * part cESTD f0 c/\ cIN civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 * * * part cset_of_edge f2 f0 * part cESTD f0 c= cazim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 f1 c/\ cIN civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 * * * part cset_of_edge f2 f0 * part cESTD f0 c/\ cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * part cESTD f0 c= cCOND cIN * * part cINSERT f2 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 part cEMPTY * part cESTD f0 c, f2 cazim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 c, f2 civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 c, f2 f1 c==> c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN f1 * * part cEE f2 * part cESTD f0 c/\ cIN civs_azim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 * * part cEE f2 * part cESTD f0 c= cazim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 civs_azim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 f1 c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 * * * part cset_of_edge f2 f0 * part cESTD f0 c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * part cESTD f0 c= cCOND cIN * * part cINSERT f2 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 part cEMPTY * part cESTD f0 c, f2 cazim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 c, f2 civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 c, f2 f1
- (!p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))) |- (((!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H))))) ==> ((\H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H))))) H)) = ((\H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H))))) H))
T c==> ! ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1 c= c==> ! c==> cpermutes f0 * part cdart b0 chyp_iso f0 c, b0 chyp_conj f0 b0 * / c==> cpermutes f0 * part cdart b0 chyp_iso f0 c, b0 chyp_conj f0 b0 f1 * / c==> cpermutes f0 * part cdart b0 chyp_iso f0 c, b0 chyp_conj f0 b0 f1
+ |- (((!G. (!f. (!H. (((hyp_iso f) (H , G)) = ((((BIJ f) (dart H)) (dart G)) /\ (!x. ((x IN (dart H)) ==> ((((edge_map G) (f x)) = (f ((edge_map H) x))) /\ (((node_map G) (f x)) = (f ((node_map H) x))))))))))) ==> ((\G. (!f. (!H. (((hyp_iso f) (H , G)) = ((((BIJ f) (dart H)) (dart G)) /\ (!x. ((x IN (dart H)) ==> ((((edge_map G) (f x)) = (f ((edge_map H) x))) /\ (((node_map G) (f x)) = (f ((node_map H) x))))))))))) G)) = ((\G. (!f. (!H. (((hyp_iso f) (H , G)) = ((((BIJ f) (dart H)) (dart G)) /\ (!x. ((x IN (dart H)) ==> ((((edge_map G) (f x)) = (f ((edge_map H) x))) /\ (((node_map G) (f x)) = (f ((node_map H) x))))))))))) G))
T c= c==> ! ! ! c= chyp_iso b1 c, b2 b0 c/\ cBIJ b1 * part cdart b2 * part cdart b0 ! c==> cIN b3 * part cdart b2 c/\ c= cedge_map b0 * b1 b3 * b1 cedge_map b2 b3 c= cnode_map b0 * b1 b3 * b1 cnode_map b2 b3 * / ! ! c= chyp_iso b1 c, b2 b0 c/\ cBIJ b1 * part cdart b2 * part cdart b0 ! c==> cIN b3 * part cdart b2 c/\ c= cedge_map b0 * b1 b3 * b1 cedge_map b2 b3 c= cnode_map b0 * b1 b3 * b1 cnode_map b2 b3 f0 * / ! ! c= chyp_iso b1 c, b2 b0 c/\ cBIJ b1 * part cdart b2 * part cdart b0 ! c==> cIN b3 * part cdart b2 c/\ c= cedge_map b0 * b1 b3 * b1 cedge_map b2 b3 c= cnode_map b0 * b1 b3 * b1 cnode_map b2 b3 f0
+ (~ (V p2)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((V w) = ((w = p2) /\ (V w)))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f4 c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f4 c~ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c= * f0 f3 c/\ c= f3 f1 * f0 f3
- (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((\x. ((((x = p1) \/ (x = p2)) \/ (~ (x = v))) /\ (((x = p1) \/ (x = p2)) \/ (~ (x = w))))) _10268364)
T c==> c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f3 c= b0 f4 c/\ c~ c= b0 f1 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f1 c= b0 f2 * / c/\ c\/ c\/ c= b0 f3 c= b0 f4 c~ c= b0 f1 c\/ c\/ c= b0 f3 c= b0 f4 c~ c= b0 f2 f5
+ (contravening V) |- ((((\H. ((hypermap_of_fan (V , (ESTD V))) = H)) H) ==> ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) = T)
T c==> ccontravening f0 c= c==> * / c= chypermap_of_fan c, f0 * part cESTD f0 b0 f1 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 copposite_hypermap chypermap_of_fan c, f0 * part cESTD f0 cT
- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))), (~ ((permutes (n_fan_pair_ext (V , (ESTD V)))) (dart_of_fan (V , (ESTD V))))), (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) |- ((~ ((permutes (n_fan_pair_ext (V , (ESTD V)))) (dart_of_fan (V , (ESTD V))))) /\ ((permutes (n_fan_pair_ext (V , (ESTD V)))) (dart_of_fan (V , (ESTD V)))))
T c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 c==> c~ cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 * part cdart_of_fan c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c/\ c~ cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 * part cdart_of_fan c, f0 * part cESTD f0 cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 * part cdart_of_fan c, f0 * part cESTD f0
+ (!V. (!E. (!v. (!w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w))))))))) |- ((\E. (!v. (!w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w)))))))) E)
T c==> ! ! ! ! ! c==> c/\ cIN c, b2 b3 * part cdart_of_fan c, b0 b1 * b4 c, b3 b2 * b4 ce_fan_pair_ext c, b0 b1 c, b2 b3 * / ! ! ! c==> c/\ cIN c, b1 b2 * part cdart_of_fan c, f0 b0 * b3 c, b2 b1 * b3 ce_fan_pair_ext c, f0 b0 c, b1 b2 f1
+ |- (((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) ==> ((((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2) = ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2))))) = (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))
T c= c==> c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c= cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 civs_azim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 f3 ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 * b0 civs_azim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 f3 * b0 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 * b0 civs_azim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 f3 * b0 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3
+ |- ((\E. (!v. (!u. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))) E)
T * / ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 b0 cIN b2 * * * part cset_of_edge b1 f0 b0 * f1 cazim_cycle * * * part cset_of_edge b1 f0 b0 cvec cNUMERAL c_0 b1 b2 * f1 csigma_fan cvec cNUMERAL c_0 f0 b0 b1 b2 f2
- |- ((~ (_10268309 = _10268310)) \/ ((FAN _10268310) \/ (~ (FAN _10268309))))
T c\/ c~ c= f0 f1 c\/ cFAN f1 c~ cFAN f0
- |- (((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2))) = T)
T c= c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cT
- (b = c) |- ((P c) = (P c))
T c==> c= f0 f1 c= * f2 f1 * f2 f1
+ |- ((\H. ((hypermap_of_fan (V , (ESTD V))) = H)) (hypermap_of_fan (V , (ESTD V))))
T * / c= chypermap_of_fan c, f0 * part cESTD f0 b0 chypermap_of_fan c, f0 * part cESTD f0
+ |- (((!y. (((\x. ((\v. ((((COND ((p1 INSERT (v INSERT EMPTY)) IN (ESTD V))) (p1 , (((((sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) v))) (p1 , v)) = (p1 , p2))) x)) y) = ((\v. ((((COND ((p1 INSERT (v INSERT EMPTY)) IN (ESTD V))) (p1 , (((((sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) v))) (p1 , v)) = (p1 , p2))) y))) ==> ((\y. (((\x. ((\v. ((((COND ((p1 INSERT (v INSERT EMPTY)) IN (ESTD V))) (p1 , (((((sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) v))) (p1 , v)) = (p1 , p2))) x)) y) = ((\v. ((((COND ((p1 INSERT (v INSERT EMPTY)) IN (ESTD V))) (p1 , (((((sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) v))) (p1 , v)) = (p1 , p2))) y))) (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) p2))) = ((\y. (((\x. ((\v. ((((COND ((p1 INSERT (v INSERT EMPTY)) IN (ESTD V))) (p1 , (((((sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) v))) (p1 , v)) = (p1 , p2))) x)) y) = ((\v. ((((COND ((p1 INSERT (v INSERT EMPTY)) IN (ESTD V))) (p1 , (((((sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) v))) (p1 , v)) = (p1 , p2))) y))) (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) p2)))
T c= c==> ! c= * / * / c= cCOND cIN * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * part cESTD f1 c, f0 csigma_fan cvec cNUMERAL c_0 f1 * part cESTD f1 f0 b2 c, f0 b2 c, f0 f2 b1 b0 * / c= cCOND cIN * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * part cESTD f1 c, f0 csigma_fan cvec cNUMERAL c_0 f1 * part cESTD f1 f0 b1 c, f0 b1 c, f0 f2 b0 * / c= * / * / c= cCOND cIN * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * part cESTD f1 c, f0 csigma_fan cvec cNUMERAL c_0 f1 * part cESTD f1 f0 b2 c, f0 b2 c, f0 f2 b1 b0 * / c= cCOND cIN * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * part cESTD f1 c, f0 csigma_fan cvec cNUMERAL c_0 f1 * part cESTD f1 f0 b1 c, f0 b1 c, f0 f2 b0 cinverse_sigma_fan cvec cNUMERAL c_0 f1 * part cESTD f1 f0 f2 * / c= * / * / c= cCOND cIN * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * part cESTD f1 c, f0 csigma_fan cvec cNUMERAL c_0 f1 * part cESTD f1 f0 b2 c, f0 b2 c, f0 f2 b1 b0 * / c= cCOND cIN * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * part cESTD f1 c, f0 csigma_fan cvec cNUMERAL c_0 f1 * part cESTD f1 f0 b1 c, f0 b1 c, f0 f2 b0 cinverse_sigma_fan cvec cNUMERAL c_0 f1 * part cESTD f1 f0 f2
+ |- (((permutes (node_map H)) (dart H)) = ((permutes (node_map H)) (dart (opposite_hypermap H))))
T c= cpermutes * part cnode_map f0 * part cdart f0 cpermutes * part cnode_map f0 * part cdart copposite_hypermap f0
- ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> B) /\ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) |- ((((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> B) /\ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> B) ==> B)
T c==> c/\ c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c==> c==> c/\ c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 f3
+ (p2 IN (((set_of_edge p1) V) (ESTD V))) |- ((((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V)) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)))) = q')) ==> ((((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V)) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))))) = (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> q')))
T c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c==> c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 c= c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part cESTD f2 c= cCOND cIN * * part cINSERT f1 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 part cEMPTY * part cESTD f2 c, f1 cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 c, f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 c, f1 f0 f3 c= c==> c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part cESTD f2 c= cCOND cIN * * part cINSERT f1 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 part cEMPTY * part cESTD f2 c, f1 cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 c, f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 c, f1 f0 c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 f3
+ |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ (!V. (!E. (!v. (!w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w))))))))) |- ((!V. (!E. (!v. (!w. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w)))))))) = T)
T c==> ! ! ! ! ! c==> c/\ cIN c, b2 b3 * part cdart_of_fan c, b0 b1 * b4 c, b3 b2 * b4 ce_fan_pair_ext c, b0 b1 c, b2 b3 c= ! ! ! ! c==> c/\ cIN c, b2 b3 * part cdart_of_fan c, b0 b1 * f0 c, b3 b2 * f0 ce_fan_pair_ext c, b0 b1 c, b2 b3 cT
+ |- ((((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V)))) /\ (((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V))) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)))) = (((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V)))) /\ ((\x. ((\v. (((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V))) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , v)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)))) x)) ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))))
T c= c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 * * * part cset_of_edge f1 f0 * part cESTD f0 c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cESTD f0 c= cCOND cIN * * part cINSERT f1 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 part cEMPTY * part cESTD f0 c, f1 cazim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 c, f1 civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 c, f1 f2 c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 * * * part cset_of_edge f1 f0 * part cESTD f0 * / * / c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cESTD f0 c= cCOND cIN * * part cINSERT f1 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 part cEMPTY * part cESTD f0 c, f1 b1 c, f1 civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 c, f1 f2 b0 cazim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2
+ |- ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((edge_map (hypermap_of_fan (V , E))) = (e_fan_pair_ext (V , E))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= * part cedge_map chypermap_of_fan c, f0 f1 * part ce_fan_pair_ext c, f0 f1
+ (contravening V), ((hypermap_of_fan (V , (ESTD V))) = H) |- (((((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ((hyp_conj (node_map H)) (opposite_hypermap H))) /\ ((iso ((hyp_conj (node_map H)) (opposite_hypermap H))) (opposite_hypermap H))) ==> ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (opposite_hypermap H))) ==> ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (opposite_hypermap H)))
T c==> ccontravening f0 c==> c= chypermap_of_fan c, f0 * part cESTD f0 f1 c==> c==> c/\ ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1 ciso chyp_conj * part cnode_map f1 copposite_hypermap f1 copposite_hypermap f1 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 copposite_hypermap f1 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 copposite_hypermap f1
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ (~ (V p2)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- (p2 = w)
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f4 c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f4 c~ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c= f1 f3
+ (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))), (~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))), (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) |- ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) /\ F)
T c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c/\ ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF
+ |- (((hypermap_of_fan (V , (ESTD V))) = (hypermap_of_fan (V , (ESTD V)))) = ((\H. ((hypermap_of_fan (V , (ESTD V))) = H)) (hypermap_of_fan (V , (ESTD V)))))
T c= c= chypermap_of_fan c, f0 * part cESTD f0 chypermap_of_fan c, f0 * part cESTD f0 * / c= chypermap_of_fan c, f0 * part cESTD f0 b0 chypermap_of_fan c, f0 * part cESTD f0
+ |- (((?v. (?w. (((v IN V) /\ ((w IN V) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. ((x IN (p1 INSERT (p2 INSERT EMPTY))) = (x IN (v INSERT (w INSERT EMPTY)))))))) ==> ((p1 IN V) /\ (p2 IN V))) = ((?v. (?w. (((v IN V) /\ ((w IN V) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((p1 INSERT (p2 INSERT EMPTY)) = (v INSERT (w INSERT EMPTY)))))) ==> ((p1 IN V) /\ (p2 IN V))))
T c= c==> c? / c? / c/\ c/\ cIN b0 f0 c/\ cIN b1 f0 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= cIN b2 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b2 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cIN f1 f0 cIN f2 f0 c==> c? / c? / c/\ c/\ cIN b0 f0 c/\ cIN b1 f0 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c= * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cIN f1 f0 cIN f2 f0
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- (((p1 , p2) IN (dart_of_fan (V , (ESTD V)))) /\ ((\x. ((\v. (v = (p2 , p1))) x)) (p2 , p1)))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c/\ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 * / * / c= b1 c, f2 f1 b0 c, f2 f1
+ |- (((!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((inverse (e_fan_pair_ext (V , E))) = (e_fan_pair_ext (V , E))))) ==> ((\E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((inverse (e_fan_pair_ext (V , E))) = (e_fan_pair_ext (V , E))))) E)) = ((\E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((inverse (e_fan_pair_ext (V , E))) = (e_fan_pair_ext (V , E))))) E))
T c= c==> ! c==> cFAN c, cvec cNUMERAL c_0 c, f0 b0 c= * part cinverse * part ce_fan_pair_ext c, f0 b0 * part ce_fan_pair_ext c, f0 b0 * / c==> cFAN c, cvec cNUMERAL c_0 c, f0 b0 c= * part cinverse * part ce_fan_pair_ext c, f0 b0 * part ce_fan_pair_ext c, f0 b0 f1 * / c==> cFAN c, cvec cNUMERAL c_0 c, f0 b0 c= * part cinverse * part ce_fan_pair_ext c, f0 b0 * part ce_fan_pair_ext c, f0 b0 f1
- ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))), (((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F)))))))) |- (((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))) /\ ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))))
T c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c/\ c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF
+ |- ((!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))) = T)
T c= ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 * b0 cazim_cycle * * * part cset_of_edge f3 f0 f1 cvec cNUMERAL c_0 f3 f2 * b0 csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f2 cT
+ (~ (V p2)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((w = p2) /\ (V w))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f4 c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f4 c~ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c/\ c= f3 f1 * f0 f3
+ (!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))), (~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))), (contravening V), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- F
T c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 c==> c~ cIN c, f0 f1 * part cdart_of_fan c, f2 * part cESTD f2 c==> ccontravening f2 c==> cIN c, f0 f1 * part cdart1_of_fan c, f2 * part cESTD f2 cF
- (!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))), (~ F), (~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))), (contravening V), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- ((~ F) /\ F)
T c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 c==> c~ cF c==> c~ cIN c, f0 f1 * part cdart_of_fan c, f2 * part cESTD f2 c==> ccontravening f2 c==> cIN c, f0 f1 * part cdart1_of_fan c, f2 * part cESTD f2 c/\ c~ cF cF
+ |- (((~ (V _10268395)) /\ (V _10268394)) ==> (~ (_10268394 = _10268395)))
T c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f2 f1
- |- (((!e'. ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) = g') ==> ((g' ==> ((p1 , p2) = t')) ==> (((~ g') ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND g') t') e')))))) ==> ((\e'. ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) = g') ==> ((g' ==> ((p1 , p2) = t')) ==> (((~ g') ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND g') t') e')))))) e')) = ((\e'. ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) = g') ==> ((g' ==> ((p1 , p2) = t')) ==> (((~ g') ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 c==> c==> f3 c= c, f0 f2 f4 c==> c==> c~ f3 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 b0 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND f3 f4 b0 * / c==> c= cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 c==> c==> f3 c= c, f0 f2 f4 c==> c==> c~ f3 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 b0 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND f3 f4 b0 f5 * / c==> c= cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 c==> c==> f3 c= c, f0 f2 f4 c==> c==> c~ f3 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 b0 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND f3 f4 b0 f5
+ |- (((\x. ((\v. v) x)) (((inverse (n_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = (p1 , (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) p2)))) = ((\v. v) (((inverse (n_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = (p1 , (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) p2)))))
T c= * / * / b1 b0 c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, f1 cinverse_sigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 f1 f2 * / b0 c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, f1 cinverse_sigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 f1 f2
+ (_10268306 = _10268308) |- ((_10268305 = _10268307) ==> ((_10268307 IN _10268308) \/ (~ (_10268305 IN _10268306))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cIN f3 f1 c~ cIN f2 f0
+ |- ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. ((((COND ((p1 INSERT (v INSERT EMPTY)) IN (ESTD V))) (p1 , (((((sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) v))) (p1 , v)) = (p1 , p2))))
T * / ! c= * / * b0 b2 b1 * b0 b1 / c= cCOND cIN * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part cESTD f1 c, f0 csigma_fan cvec cNUMERAL c_0 f1 * part cESTD f1 f0 b0 c, f0 b0 c, f0 f2
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?w. t) = t)
T c= c? / f0 f0
- |- (((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F) ==> ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F))
T c==> c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF
+ (contravening V), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) /\ ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> (~ (!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))))))
T c==> ccontravening f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c/\ cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c~ ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0
+ |- (((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F) = F)
T c= c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF cF
+ (~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))), (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F)
T c==> c~ cIN c, f0 f1 * part cdart_of_fan c, f2 * part cESTD f2 c==> cFAN c, cvec cNUMERAL c_0 c, f2 * part cESTD f2 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f2 * part cESTD * * part cIMAGE part cvector_neg f2 c==> ccontravening f2 c==> ccontravening * * part cIMAGE part cvector_neg f2 c==> cIN c, f0 f1 * part cdart1_of_fan c, f2 * part cESTD f2 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF
+ |- (((!V. ((contravening V) ==> (contravening ((IMAGE vector_neg) V)))) ==> ((\V. ((contravening V) ==> (contravening ((IMAGE vector_neg) V)))) V)) = ((\V. ((contravening V) ==> (contravening ((IMAGE vector_neg) V)))) V))
T c= c==> ! c==> ccontravening b0 ccontravening * * part cIMAGE part cvector_neg b0 * / c==> ccontravening b0 ccontravening * * part cIMAGE part cvector_neg b0 f0 * / c==> ccontravening b0 ccontravening * * part cIMAGE part cvector_neg b0 f0
+ |- (((!y. (((\x. ((\v. v) x)) y) = ((\v. v) y))) ==> ((\y. (((\x. ((\v. v) x)) y) = ((\v. v) y))) (((inverse (n_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = (p1 , (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) p2))))) = ((\y. (((\x. ((\v. v) x)) y) = ((\v. v) y))) (((inverse (n_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = (p1 , (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) p2)))))
T c= c==> ! c= * / * / b2 b1 b0 * / b1 b0 * / c= * / * / b2 b1 b0 * / b1 b0 c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, f1 cinverse_sigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 f1 f2 * / c= * / * / b2 b1 b0 * / b1 b0 c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, f1 cinverse_sigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 f1 f2
+ |- (((!v. (!w. (((n_fan_pair (V , E)) (v , w)) = (v , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w))))) ==> ((\v. (!w. (((n_fan_pair (V , E)) (v , w)) = (v , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w))))) v)) = ((\v. (!w. (((n_fan_pair (V , E)) (v , w)) = (v , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w))))) v))
T c= c==> ! ! c= cn_fan_pair c, f0 f1 c, b0 b1 c, b0 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 * / ! c= cn_fan_pair c, f0 f1 c, b0 b1 c, b0 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 f2 * / ! c= cn_fan_pair c, f0 f1 c, b0 b1 c, b0 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 f2
+ (!H. (!G. (!f. (((hyp_iso f) (H , G)) ==> ((iso H) G))))) |- ((\H. (!G. (!f. (((hyp_iso f) (H , G)) ==> ((iso H) G))))) H)
T c==> ! ! ! c==> chyp_iso b2 c, b0 b1 ciso b0 b1 * / ! ! c==> chyp_iso b2 c, b0 b1 ciso b0 b1 f0
+ |- ((\v. (!w. (((v , w) IN (dart_of_fan (V , E))) ==> (((e_fan_pair_ext (V , E)) (v , w)) = (w , v))))) v)
T * / ! c==> cIN c, b0 b1 * part cdart_of_fan c, f0 f1 c= ce_fan_pair_ext c, f0 f1 c, b0 b1 c, b1 b0 f2
+ (!V. (!E. (!v. (!w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w))))))))) |- (((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w)))) = T)
T c==> ! ! ! ! ! c==> c/\ cIN c, b2 b3 * part cdart_of_fan c, b0 b1 * b4 c, b3 b2 * b4 ce_fan_pair_ext c, b0 b1 c, b2 b3 c= c==> c/\ cIN c, f0 f1 * part cdart_of_fan c, f2 f3 * f4 c, f1 f0 * f4 ce_fan_pair_ext c, f2 f3 c, f0 f1 cT
- (~ (V p2)), (V p2) |- ((V p2) /\ (~ (V p2)))
T c==> c~ * f0 f1 c==> * f0 f1 c/\ * f0 f1 c~ * f0 f1
+ |- (((!u. (!v. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) u) = ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))))) ==> ((\u. (!v. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) u) = ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))))) u)) = ((\u. (!v. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) u) = ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))))) u))
T c= c==> ! ! c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN b0 * * * part cset_of_edge b1 f0 f1 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b1 b0 cazim_cycle * * * part cset_of_edge b1 f0 f1 cvec cNUMERAL c_0 b1 b0 * / ! c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN b0 * * * part cset_of_edge b1 f0 f1 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b1 b0 cazim_cycle * * * part cset_of_edge b1 f0 f1 cvec cNUMERAL c_0 b1 b0 f2 * / ! c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN b0 * * * part cset_of_edge b1 f0 f1 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b1 b0 cazim_cycle * * * part cset_of_edge b1 f0 f1 cvec cNUMERAL c_0 b1 b0 f2
+ (!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) |- ((\V. ((~ (contravening V)) \/ ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) _10268304)
T c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 * / c\/ c~ ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 f0
+ |- ((\V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) V)
T * / c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 f0
+ |- (((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) = ((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))))
T c= c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ |- ((\V. (!E. (!v. (!w. (((v , w) IN (dart_of_fan (V , E))) ==> (((e_fan_pair_ext (V , E)) (v , w)) = (w , v))))))) V)
T * / ! ! ! c==> cIN c, b2 b3 * part cdart_of_fan c, b0 b1 c= ce_fan_pair_ext c, b0 b1 c, b2 b3 c, b3 b2 f0
+ |- ((\p'. (!q'. ((((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) = p') ==> ((p' ==> (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V)) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)))) = q')) ==> ((((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V)) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))))) = (p' ==> q')))))) p')
T * / ! c==> c= c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 b0 c==> c==> b0 c= c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part cESTD f2 c= cCOND cIN * * part cINSERT f1 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 part cEMPTY * part cESTD f2 c, f1 cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 c, f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 c, f1 f0 b1 c= c==> c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part cESTD f2 c= cCOND cIN * * part cINSERT f1 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 part cEMPTY * part cESTD f2 c, f1 cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 c, f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 c, f1 f0 c==> b0 b1 f3
+ (A = T) |- ((A = T) /\ (((A ==> B) /\ A) ==> B))
T c==> c= f0 cT c/\ c= f0 cT c==> c/\ c==> f0 f1 f0 f1
- |- (((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))) = (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c= c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ |- (((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> F) = (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s)))
T c= c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 cF c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0
- |- ((_10268400 = _10268401) ==> ((distance _10268400) = (distance _10268401)))
T c==> c= f0 f1 c= cdistance f0 cdistance f1
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- (((p1 , p2) IN (dart_of_fan (V , (ESTD V)))) /\ ((p2 , p1) = (p2 , p1)))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c/\ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c= c, f2 f1 c, f2 f1
+ (!V. (!E. (!v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))) |- (!E. (!v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 * b4 cazim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 b0 cIN b2 * * * part cset_of_edge b1 f0 b0 * b3 cazim_cycle * * * part cset_of_edge b1 f0 b0 cvec cNUMERAL c_0 b1 b2 * b3 csigma_fan cvec cNUMERAL c_0 f0 b0 b1 b2
- |- ((~ (_10268390 = _10268392)) \/ ((~ (_10268391 = _10268393)) \/ (((real_le _10268392) _10268393) \/ (~ ((real_le _10268390) _10268391)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2
+ |- (((!V. ((contravening V) ==> (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))))) ==> ((\V. ((contravening V) ==> (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))))) V)) = ((\V. ((contravening V) ==> (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))))) V))
T c= c==> ! c==> ccontravening b0 cFAN c, cvec cNUMERAL c_0 c, b0 * part cESTD b0 * / c==> ccontravening b0 cFAN c, cvec cNUMERAL c_0 c, b0 * part cESTD b0 f0 * / c==> ccontravening b0 cFAN c, cvec cNUMERAL c_0 c, b0 * part cESTD b0 f0
+ (!V. (!E. (!v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))) |- (!E. (!v. (!u. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u))))))
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 * b4 cazim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 b0 cIN b2 * * * part cset_of_edge b1 f0 b0 * f1 cazim_cycle * * * part cset_of_edge b1 f0 b0 cvec cNUMERAL c_0 b1 b2 * f1 csigma_fan cvec cNUMERAL c_0 f0 b0 b1 b2
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
- |- ((\V. (!E. (!x. (!v. (!w. (((FAN (x , (V , E))) /\ (w IN ((EE v) E))) ==> ((((((ivs_azim_cycle ((EE v) E)) x) v) w) IN ((EE v) E)) /\ (((((azim_cycle ((EE v) E)) x) v) ((((ivs_azim_cycle ((EE v) E)) x) v) w)) = w)))))))) V)
T * / ! ! ! ! c==> c/\ cFAN c, b2 c, b0 b1 cIN b4 * * part cEE b3 b1 c/\ cIN civs_azim_cycle * * part cEE b3 b1 b2 b3 b4 * * part cEE b3 b1 c= cazim_cycle * * part cEE b3 b1 b2 b3 civs_azim_cycle * * part cEE b3 b1 b2 b3 b4 b4 f0
- |- (((face (opposite_hypermap H)) x) = ((face H) x))
T c= * * part cface copposite_hypermap f0 f1 * * part cface f0 f1
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)) |- ((((BIJ (\uv. ((vector_neg (FST uv)) , (vector_neg (SND uv))))) (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (dart_of_fan (V , (ESTD V)))) /\ (!x. ((x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x)))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c/\ cBIJ / c, cvector_neg cFST b0 cvector_neg cSND b0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 * part cdart_of_fan c, f0 * part cESTD f0 ! c==> cIN b0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c/\ c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, cvector_neg cFST b0 cvector_neg cSND b0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 b0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 b0 c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, cvector_neg cFST b0 cvector_neg cSND b0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 b0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 b0
+ |- ((\E. (!v. (!w. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w))))))) E)
T * / ! ! c==> c/\ cIN c, b1 b2 * part cdart_of_fan c, f0 b0 * f1 c, b2 b1 * f1 ce_fan_pair_ext c, f0 b0 c, b1 b2 f2
+ |- ((\P. ((!v. (P v)) = (!v. (P (vector_neg v))))) P)
T * / c= ! * b0 b1 ! * b0 cvector_neg b1 f0
+ (~ (V p2)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((p2 = p2) /\ (~ (p2 = v)))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f4 c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f4 c~ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c/\ c= f1 f1 c~ c= f1 f2
- |- (((!x. (!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))))) ==> ((\x. (!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))))) x)) = ((\x. (!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))))) x))
T c= c==> ! ! ! ! c= c= c, b0 b1 c, b2 b3 c/\ c= b0 b2 c= b1 b3 * / ! ! ! c= c= c, b0 b1 c, b2 b3 c/\ c= b0 b2 c= b1 b3 f0 * / ! ! ! c= c= c, b0 b1 c, b2 b3 c/\ c= b0 b2 c= b1 b3 f0
+ (!V. (!E. (!v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))) |- (((!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))) ==> ((\P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))) P)) = ((\P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))) P))
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 * b4 cazim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 c= c==> ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 * b0 cazim_cycle * * * part cset_of_edge f3 f0 f1 cvec cNUMERAL c_0 f3 f2 * b0 csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f2 * / c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 * b0 cazim_cycle * * * part cset_of_edge f3 f0 f1 cvec cNUMERAL c_0 f3 f2 * b0 csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f2 f4 * / c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 * b0 cazim_cycle * * * part cset_of_edge f3 f0 f1 cvec cNUMERAL c_0 f3 f2 * b0 csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f2 f4
+ |- ((\w. (((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ (w IN ((EE p1) (ESTD V)))) ==> ((((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) w) IN ((EE p1) (ESTD V))) /\ (((((azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) w)) = w)))) p2)
T * / c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN b0 * * part cEE f1 * part cESTD f0 c/\ cIN civs_azim_cycle * * part cEE f1 * part cESTD f0 cvec cNUMERAL c_0 f1 b0 * * part cEE f1 * part cESTD f0 c= cazim_cycle * * part cEE f1 * part cESTD f0 cvec cNUMERAL c_0 f1 civs_azim_cycle * * part cEE f1 * part cESTD f0 cvec cNUMERAL c_0 f1 b0 b0 f2
+ |- ((\V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((inverse (e_fan_pair_ext (V , E))) = (e_fan_pair_ext (V , E)))))) V)
T * / ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 c= * part cinverse * part ce_fan_pair_ext c, b0 b1 * part ce_fan_pair_ext c, b0 b1 f0
+ |- ((_10268306 = _10268308) ==> ((~ (_10268305 = _10268307)) \/ ((_10268307 IN _10268308) \/ (~ (_10268305 IN _10268306)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f3 f1 c~ cIN f2 f0
- (~ F), (~ (V p2)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f4 c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f4 c~ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c/\ c~ cF cF
+ |- (((!v. (!E. (!V. ((GSPEC (\GEN%PVAR%5439. (?w. (((SETSPEC GEN%PVAR%5439) (((v INSERT (w INSERT EMPTY)) IN E) /\ (w IN V))) w)))) = (((set_of_edge v) V) E))))) ==> ((\v. (!E. (!V. ((GSPEC (\GEN%PVAR%5439. (?w. (((SETSPEC GEN%PVAR%5439) (((v INSERT (w INSERT EMPTY)) IN E) /\ (w IN V))) w)))) = (((set_of_edge v) V) E))))) v)) = ((\v. (!E. (!V. ((GSPEC (\GEN%PVAR%5439. (?w. (((SETSPEC GEN%PVAR%5439) (((v INSERT (w INSERT EMPTY)) IN E) /\ (w IN V))) w)))) = (((set_of_edge v) V) E))))) v))
T c= c==> ! ! ! c= * part cGSPEC / c? / cSETSPEC b3 c/\ cIN * * part cINSERT b0 * * part cINSERT b4 part cEMPTY b1 cIN b4 b2 b4 * * * part cset_of_edge b0 b2 b1 * / ! ! c= * part cGSPEC / c? / cSETSPEC b3 c/\ cIN * * part cINSERT b0 * * part cINSERT b4 part cEMPTY b1 cIN b4 b2 b4 * * * part cset_of_edge b0 b2 b1 f0 * / ! ! c= * part cGSPEC / c? / cSETSPEC b3 c/\ cIN * * part cINSERT b0 * * part cINSERT b4 part cEMPTY b1 cIN b4 b2 b4 * * * part cset_of_edge b0 b2 b1 f0
+ (!V. (!E. (!v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))) |- (!v. (!u. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 * b4 cazim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN b1 * * * part cset_of_edge b0 f0 f1 * f2 cazim_cycle * * * part cset_of_edge b0 f0 f1 cvec cNUMERAL c_0 b0 b1 * f2 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1
+ (~ (V p1)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((p1 = w) /\ (p1 = p1))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f1 c= b0 f4 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f4 c\/ c= b0 f2 c= b0 f3 c/\ c= f1 f3 c= f1 f1
- |- ((~ (_10268396 = _10268398)) \/ ((~ (_10268397 = _10268399)) \/ ((_10268396 , _10268397) = (_10268398 , _10268399))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) |- ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> (~ (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c~ ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1
+ |- (((_10268306 = _10268308) /\ ((_10268305 = _10268307) /\ (_10268305 IN _10268306))) ==> (_10268307 IN _10268308))
T c==> c/\ c= f0 f1 c/\ c= f2 f3 cIN f2 f0 cIN f3 f1
+ ((\f. ((hyp_iso f) (H , G))) f) |- (((\f. ((hyp_iso f) (H , G))) f) /\ ((!H. (!G. (!f. (((hyp_iso f) (H , G)) ==> ((iso H) G))))) ==> ((iso H) G)))
T c==> * / chyp_iso b0 c, f0 f1 f2 c/\ * / chyp_iso b0 c, f0 f1 f2 c==> ! ! ! c==> chyp_iso b2 c, b0 b1 ciso b0 b1 ciso f0 f1
- ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))), (((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F)))))))) |- (((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))) /\ ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))))
T c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c/\ c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF
- |- (T = (((~ (x = y)) \/ ((~ (x = z)) \/ (y = z))) = ((y = z) \/ ((~ (x = y)) \/ (~ (x = z))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f0 f2 c= f1 f2 c\/ c= f1 f2 c\/ c~ c= f0 f1 c~ c= f0 f2
+ |- ((\W. ((((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ((hyp_conj (node_map H)) (opposite_hypermap H))) /\ ((iso ((hyp_conj (node_map H)) (opposite_hypermap H))) W)) ==> ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) W))) (opposite_hypermap H))
T * / c==> c/\ ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1 ciso chyp_conj * part cnode_map f1 copposite_hypermap f1 b0 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 b0 copposite_hypermap f1
- |- (((!p1. ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F)) ==> ((\p1. ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F)) p1)) = ((\p1. ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F)) p1))
T c= c==> ! c==> c~ c==> c? / c? / c/\ c/\ * f0 b1 c/\ * f0 b2 c/\ c~ c= b1 b2 creal_le cdistance c, b1 b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b3 b0 c= b3 f1 c\/ c= b3 b1 c= b3 b2 c/\ * f0 b0 * f0 f1 cF * / c==> c~ c==> c? / c? / c/\ c/\ * f0 b1 c/\ * f0 b2 c/\ c~ c= b1 b2 creal_le cdistance c, b1 b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b3 b0 c= b3 f1 c\/ c= b3 b1 c= b3 b2 c/\ * f0 b0 * f0 f1 cF f2 * / c==> c~ c==> c? / c? / c/\ c/\ * f0 b1 c/\ * f0 b2 c/\ c~ c= b1 b2 creal_le cdistance c, b1 b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b3 b0 c= b3 f1 c\/ c= b3 b1 c= b3 b2 c/\ * f0 b0 * f0 f1 cF f2
+ (contravening V), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- ((contravening V) /\ ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))))
T c==> ccontravening f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c/\ ccontravening f0 cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0
+ (((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2) = (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)) |- ((((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2) = ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))
T c==> c= civs_azim_cycle * * * part cset_of_edge f0 f1 f2 cvec cNUMERAL c_0 f0 f3 cinverse_sigma_fan cvec cNUMERAL c_0 f1 f2 f0 f3 c= cinverse_sigma_fan cvec cNUMERAL c_0 f1 f2 f0 f3 civs_azim_cycle * * * part cset_of_edge f0 f1 f2 cvec cNUMERAL c_0 f0 f3
+ |- (!b. (!c. ((b = c) ==> (!P. ((P c) ==> (P b))))))
T c==> c= f0 f1 ! c==> * b0 f1 * b0 f0
- (!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))), (~ ((dart1_of_fan (V , (ESTD V))) = (dart_of_fan (V , (ESTD V))))), (contravening V) |- ((~ ((dart1_of_fan (V , (ESTD V))) = (dart_of_fan (V , (ESTD V))))) /\ ((dart1_of_fan (V , (ESTD V))) = (dart_of_fan (V , (ESTD V)))))
T c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 c==> c~ c= * part cdart1_of_fan c, f0 * part cESTD f0 * part cdart_of_fan c, f0 * part cESTD f0 c==> ccontravening f0 c/\ c~ c= * part cdart1_of_fan c, f0 * part cESTD f0 * part cdart_of_fan c, f0 * part cESTD f0 c= * part cdart1_of_fan c, f0 * part cESTD f0 * part cdart_of_fan c, f0 * part cESTD f0
+ (~ (P b)), (P c), (b = c) |- ((~ (P b)) /\ F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ * f0 f1 cF
+ |- ((!w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w)))))) = T)
T c= ! ! c==> c/\ cIN c, f0 b0 * part cdart_of_fan c, f1 f2 * b1 c, b0 f0 * b1 ce_fan_pair_ext c, f1 f2 c, f0 b0 cT
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) /\ ((((inverse (e_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2))))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2))))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2))))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2)))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c/\ cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c/\ c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg f2 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg f2 c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg f2 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg f2
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((~ (V p1)) ==> (V p1))
T c==> c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f3 c= b0 f4 c/\ c~ c= b0 f1 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c==> c~ * f0 f3 * f0 f3
- |- (((node (opposite_hypermap H)) x) = ((node H) x))
T c= * * part cnode copposite_hypermap f0 f1 * * part cnode f0 f1
- ((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) |- ((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))
T c==> c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0
+ (!V. (!E. (!v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))) |- (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 * b4 cazim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN b0 * * * part cset_of_edge f2 f0 f1 * b1 cazim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 b0 * b1 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- ((\x. (((dart (opposite_hypermap H)) = (dart H)) /\ ((((node (opposite_hypermap H)) x) = ((node H) x)) /\ (((face (opposite_hypermap H)) x) = ((face H) x))))) x)
T * / c/\ c= * part cdart copposite_hypermap f0 * part cdart f0 c/\ c= * * part cnode copposite_hypermap f0 b0 * * part cnode f0 b0 c= * * part cface copposite_hypermap f0 b0 * * part cface f0 b0 f1
- |- (((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x)))))) = q')) ==> (((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))))) = ((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> q')))
T c==> c==> cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c= c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 f2 c= c==> cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c==> cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f2
+ |- ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))
T c==> c==> f0 c= f1 f2 ! c==> c/\ f0 * b0 f2 * b0 f1
+ |- ((\V. ((ESTD V) = (GSPEC (\GEN%PVAR%7619. (?v. (?w. (((SETSPEC GEN%PVAR%7619) ((v IN V) /\ ((w IN V) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))))) (v INSERT (w INSERT EMPTY))))))))) V)
T * / c= * part cESTD b0 * part cGSPEC / c? / c? / cSETSPEC b1 c/\ cIN b2 b0 c/\ cIN b3 b0 c/\ c~ c= b2 b3 creal_le cdistance c, b2 b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
+ (~ ((V p1) /\ (V p2))) |- (((!x. (((\v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))))) x) ==> F)) ==> ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))))) ==> F)) = ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))))) ==> F))
T c==> c~ c/\ * f0 f1 * f0 f2 c= c==> ! c==> * / c? / c/\ c/\ * f0 b1 c/\ * f0 b2 c/\ c~ c= b1 b2 creal_le cdistance c, b1 b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b3 f1 c= b3 f2 c/\ c~ c= b3 b1 c~ c= b3 b2 ! c\/ c/\ c~ c= b3 f1 c~ c= b3 f2 c\/ c= b3 b1 c= b3 b2 b0 cF c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b2 f1 c= b2 f2 c/\ c~ c= b2 b0 c~ c= b2 b1 ! c\/ c/\ c~ c= b2 f1 c~ c= b2 f2 c\/ c= b2 b0 c= b2 b1 cF c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b2 f1 c= b2 f2 c/\ c~ c= b2 b0 c~ c= b2 b1 ! c\/ c/\ c~ c= b2 f1 c~ c= b2 f2 c\/ c= b2 b0 c= b2 b1 cF
- (_10268311 = _10268312) |- ((_10268311 = _10268312) /\ ((contravening _10268312) \/ (~ (contravening _10268311))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ ccontravening f1 c~ ccontravening f0
+ ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)), ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) |- (((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) /\ ((p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)))
T c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c/\ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2
+ |- ((\p1. ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F)))))))) p1)
T * / c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, b0 f1 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, b0 f1 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b1 c= * part cdart_of_fan c, b1 * part cESTD b1 * part cdart1_of_fan c, b1 * part cESTD b1 cF f2
- T |- (T = T)
T c==> cT c= cT cT
+ |- ((!V. (!E. (!v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))) ==> (!P. (!V. (!E. (!v. (!u. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))))
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 * b4 cazim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b1 b2 cIN b4 * * * part cset_of_edge b3 b1 b2 * b0 cazim_cycle * * * part cset_of_edge b3 b1 b2 cvec cNUMERAL c_0 b3 b4 * b0 csigma_fan cvec cNUMERAL c_0 b1 b2 b3 b4
+ (b = c) |- ((b = c) /\ (!P. ((P c) ==> (P b))))
T c==> c= f0 f1 c/\ c= f0 f1 ! c==> * b0 f1 * b0 f0
+ (~ ((V p1) /\ (V p2))), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))), ((~ (V p2)) ==> F) |- F
T c==> c~ c/\ * f0 f1 * f0 f2 c==> c/\ c/\ * f0 f3 c/\ * f0 f4 c/\ c~ c= f3 f4 creal_le cdistance c, f3 f4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f1 c= b0 f2 c/\ c~ c= b0 f3 c~ c= b0 f4 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f2 c\/ c= b0 f3 c= b0 f4 c==> c==> c~ * f0 f2 cF cF
+ |- (((!V. (!E. (!v. (!w. (((v , w) IN (dart1_of_fan (V , E))) = ((v INSERT (w INSERT EMPTY)) IN E)))))) ==> ((\V. (!E. (!v. (!w. (((v , w) IN (dart1_of_fan (V , E))) = ((v INSERT (w INSERT EMPTY)) IN E)))))) V)) = ((\V. (!E. (!v. (!w. (((v , w) IN (dart1_of_fan (V , E))) = ((v INSERT (w INSERT EMPTY)) IN E)))))) V))
T c= c==> ! ! ! ! c= cIN c, b2 b3 * part cdart1_of_fan c, b0 b1 cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 * / ! ! ! c= cIN c, b2 b3 * part cdart1_of_fan c, b0 b1 cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 f0 * / ! ! ! c= cIN c, b2 b3 * part cdart1_of_fan c, b0 b1 cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 f0
+ |- ((\y. (((\x. ((\v. (v = (p2 , p1))) x)) y) = ((\v. (v = (p2 , p1))) y))) ((e_fan_pair_ext (V , (ESTD V))) (p1 , p2)))
T * / c= * / * / c= b2 c, f0 f1 b1 b0 * / c= b1 c, f0 f1 b0 ce_fan_pair_ext c, f2 * part cESTD f2 c, f1 f0
+ |- ((\P. (!p. (!y. (!x. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))))) P)
T * / ! ! ! c==> c/\ c? / cpermutes b1 b4 * b0 c= * b1 b3 b2 * b0 c= cinverse b1 b2 b3 f0
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) |- (((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> (((((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN ((EE p1) (ESTD V))) /\ (((((azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) = q')) ==> ((((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ (p2 IN ((EE p1) (ESTD V)))) ==> ((((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN ((EE p1) (ESTD V))) /\ (((((azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) = ((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> q')))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> c==> cIN f1 * * * part cset_of_edge f2 f0 * part cESTD f0 c= c/\ cIN civs_azim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 * * part cEE f2 * part cESTD f0 c= cazim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 civs_azim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 f1 f3 c= c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN f1 * * part cEE f2 * part cESTD f0 c/\ cIN civs_azim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 * * part cEE f2 * part cESTD f0 c= cazim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 civs_azim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 f1 c==> cIN f1 * * * part cset_of_edge f2 f0 * part cESTD f0 f3
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) |- ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) = T)
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c= cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cT
+ |- ((\v. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) u) = ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u)))) v)
T * / c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN f2 * * * part cset_of_edge b0 f0 f1 c= csigma_fan cvec cNUMERAL c_0 f0 f1 b0 f2 cazim_cycle * * * part cset_of_edge b0 f0 f1 cvec cNUMERAL c_0 b0 f2 f3
+ (~ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))), (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) |- F
T c==> c~ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c==> cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 cF
+ (!V. (!E. (!p1. (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))))) |- ((\p1. (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))) p1)
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 * b4 civs_azim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 * / ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 * b2 civs_azim_cycle * * * part cset_of_edge b0 f0 f1 cvec cNUMERAL c_0 b0 b1 * b2 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 f2
- (_10268390 = _10268392) |- ((_10268390 = _10268392) /\ ((~ (_10268391 = _10268393)) \/ (((real_le _10268392) _10268393) \/ (~ ((real_le _10268390) _10268391)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)) |- ((hyp_iso (\uv. ((vector_neg (FST uv)) , (vector_neg (SND uv))))) ((hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) , ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 chyp_iso / c, cvector_neg cFST b0 cvector_neg cSND b0 c, chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map chypermap_of_fan c, f0 * part cESTD f0 copposite_hypermap chypermap_of_fan c, f0 * part cESTD f0
- |- (FINITE (dart H))
T cFINITE * part cdart f0
+ |- ((\P. (!V. (!E. (!p1. (!p2. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))))) P)
T * / ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b1 b2 cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 * b0 civs_azim_cycle * * * part cset_of_edge b3 b1 b2 cvec cNUMERAL c_0 b3 b4 * b0 cinverse_sigma_fan cvec cNUMERAL c_0 b1 b2 b3 b4 f0
+ (!p. (!y. (!x. (!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))))) |- (!y. (!x. (!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))))
T c==> ! ! ! ! c==> c/\ c? / cpermutes b0 b4 * b3 c= * b0 b2 b1 * b3 c= cinverse b0 b1 b2 ! ! ! c==> c/\ c? / cpermutes f0 b3 * b2 c= * f0 b1 b0 * b2 c= cinverse f0 b0 b1
+ |- ((\p2. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) ==> ((((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2) = ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2)))) p2)
T * / c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f1 c= cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 civs_azim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 b0 f3
- |- ((((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F)))))))) ==> (((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F)))))))))
T c==> c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF
+ (~ (V p2)) |- ((V p2) ==> F)
T c==> c~ * f0 f1 c==> * f0 f1 cF
- (_10268390 = _10268392) |- ((_10268391 = _10268393) ==> (((real_le _10268392) _10268393) \/ (~ ((real_le _10268390) _10268391))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2
+ (contravening V), ((hypermap_of_fan (V , (ESTD V))) = H) |- ((\f. ((hyp_iso f) ((hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) , ((hyp_conj (node_map H)) (opposite_hypermap H))))) (\uv. ((vector_neg (FST uv)) , (vector_neg (SND uv)))))
T c==> ccontravening f0 c==> c= chypermap_of_fan c, f0 * part cESTD f0 f1 * / chyp_iso b0 c, chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1 / c, cvector_neg cFST b0 cvector_neg cSND b0
+ |- ((\E. (!v. (!w. (((v , w) IN (dart_of_fan (V , E))) ==> (((e_fan_pair_ext (V , E)) (v , w)) = (w , v)))))) E)
T * / ! ! c==> cIN c, b1 b2 * part cdart_of_fan c, f0 b0 c= ce_fan_pair_ext c, f0 b0 c, b1 b2 c, b2 b1 f1
+ (A = F) |- ((((F ==> B) /\ F) ==> B) = (((A ==> B) /\ A) ==> B))
T c==> c= f0 cF c= c==> c/\ c==> cF f1 cF f1 c==> c/\ c==> f0 f1 f0 f1
+ (FAN ((vec (NUMERAL _0)) , (V , E))) |- (((edge_map (hypermap_of_fan (V , E))) = (e_fan_pair_ext (V , E))) /\ (((node_map (hypermap_of_fan (V , E))) = (n_fan_pair_ext (V , E))) /\ ((face_map (hypermap_of_fan (V , E))) = (f_fan_pair_ext (V , E)))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ c= * part cedge_map chypermap_of_fan c, f0 f1 * part ce_fan_pair_ext c, f0 f1 c/\ c= * part cnode_map chypermap_of_fan c, f0 f1 * part cn_fan_pair_ext c, f0 f1 c= * part cface_map chypermap_of_fan c, f0 f1 * part cf_fan_pair_ext c, f0 f1
+ |- (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) = (((p1 , p2) = (p1 , p2)) /\ ((p1 , p2) IN (dart1_of_fan (V , (ESTD V))))))
T c= cIN c, f0 f1 * part cdart1_of_fan c, f2 * part cESTD f2 c/\ c= c, f0 f1 c, f0 f1 cIN c, f0 f1 * part cdart1_of_fan c, f2 * part cESTD f2
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)) |- ((!p2. ((((vector_neg p1) , p2) IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (vector_neg p1)) , (vector_neg p2))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , p2)))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , p2)))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (vector_neg p1)) , (vector_neg p2))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , p2)))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , p2))))))))) = T)
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c= ! c==> cIN c, cvector_neg f1 b0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c/\ c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, cvector_neg cvector_neg f1 cvector_neg b0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 b0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 b0 c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, cvector_neg cvector_neg f1 cvector_neg b0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 b0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 b0 cT
- |- (((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F) = ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2))))
T c= c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2
+ (!V. (!E. (!v. (!w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w))))))))) |- (!E. (!v. (!w. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w)))))))
T c==> ! ! ! ! ! c==> c/\ cIN c, b2 b3 * part cdart_of_fan c, b0 b1 * b4 c, b3 b2 * b4 ce_fan_pair_ext c, b0 b1 c, b2 b3 ! ! ! c==> c/\ cIN c, b1 b2 * part cdart_of_fan c, f0 b0 * f1 c, b2 b1 * f1 ce_fan_pair_ext c, f0 b0 c, b1 b2
+ |- ((\g'. (!t'. (!e'. ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) = g') ==> ((g' ==> ((p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = t')) ==> (((~ g') ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 b0 c==> c==> b0 c= c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 b1 c==> c==> c~ b0 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 b2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND b0 b1 b2 f3
+ |- (((!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((dart (hypermap_of_fan (V , E))) = (dart_of_fan (V , E))) /\ (((edge_map (hypermap_of_fan (V , E))) = (e_fan_pair_ext (V , E))) /\ (((node_map (hypermap_of_fan (V , E))) = (n_fan_pair_ext (V , E))) /\ ((face_map (hypermap_of_fan (V , E))) = (f_fan_pair_ext (V , E)))))))) ==> ((\E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((dart (hypermap_of_fan (V , E))) = (dart_of_fan (V , E))) /\ (((edge_map (hypermap_of_fan (V , E))) = (e_fan_pair_ext (V , E))) /\ (((node_map (hypermap_of_fan (V , E))) = (n_fan_pair_ext (V , E))) /\ ((face_map (hypermap_of_fan (V , E))) = (f_fan_pair_ext (V , E)))))))) E)) = ((\E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((dart (hypermap_of_fan (V , E))) = (dart_of_fan (V , E))) /\ (((edge_map (hypermap_of_fan (V , E))) = (e_fan_pair_ext (V , E))) /\ (((node_map (hypermap_of_fan (V , E))) = (n_fan_pair_ext (V , E))) /\ ((face_map (hypermap_of_fan (V , E))) = (f_fan_pair_ext (V , E)))))))) E))
T c= c==> ! c==> cFAN c, cvec cNUMERAL c_0 c, f0 b0 c/\ c= * part cdart chypermap_of_fan c, f0 b0 * part cdart_of_fan c, f0 b0 c/\ c= * part cedge_map chypermap_of_fan c, f0 b0 * part ce_fan_pair_ext c, f0 b0 c/\ c= * part cnode_map chypermap_of_fan c, f0 b0 * part cn_fan_pair_ext c, f0 b0 c= * part cface_map chypermap_of_fan c, f0 b0 * part cf_fan_pair_ext c, f0 b0 * / c==> cFAN c, cvec cNUMERAL c_0 c, f0 b0 c/\ c= * part cdart chypermap_of_fan c, f0 b0 * part cdart_of_fan c, f0 b0 c/\ c= * part cedge_map chypermap_of_fan c, f0 b0 * part ce_fan_pair_ext c, f0 b0 c/\ c= * part cnode_map chypermap_of_fan c, f0 b0 * part cn_fan_pair_ext c, f0 b0 c= * part cface_map chypermap_of_fan c, f0 b0 * part cf_fan_pair_ext c, f0 b0 f1 * / c==> cFAN c, cvec cNUMERAL c_0 c, f0 b0 c/\ c= * part cdart chypermap_of_fan c, f0 b0 * part cdart_of_fan c, f0 b0 c/\ c= * part cedge_map chypermap_of_fan c, f0 b0 * part ce_fan_pair_ext c, f0 b0 c/\ c= * part cnode_map chypermap_of_fan c, f0 b0 * part cn_fan_pair_ext c, f0 b0 c= * part cface_map chypermap_of_fan c, f0 b0 * part cf_fan_pair_ext c, f0 b0 f1
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ ((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V)), (p2 IN (((set_of_edge p1) V) (ESTD V))) |- ((((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V)) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))))) = (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))))
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cESTD f2 c==> cIN f1 * * * part cset_of_edge f0 f2 * part cESTD f2 c= c==> c==> cIN f1 * * * part cset_of_edge f0 f2 * part cESTD f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f2 * part cESTD f2 cvec cNUMERAL c_0 f0 f1 * * * part cset_of_edge f0 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f0 f2 * part cESTD f2 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f2 * part cESTD f2 cvec cNUMERAL c_0 f0 f1 f1 c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f2 * part cESTD f2 cvec cNUMERAL c_0 f0 f1 * * * part cset_of_edge f0 f2 * part cESTD f2 c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cESTD f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f2 * part cESTD f2 cvec cNUMERAL c_0 f0 f1 part cEMPTY * part cESTD f2 c, f0 cazim_cycle * * * part cset_of_edge f0 f2 * part cESTD f2 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f2 * part cESTD f2 cvec cNUMERAL c_0 f0 f1 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f2 * part cESTD f2 cvec cNUMERAL c_0 f0 f1 c, f0 f1 c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f2 * part cESTD f2 cvec cNUMERAL c_0 f0 f1 * * * part cset_of_edge f0 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f0 f2 * part cESTD f2 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f2 * part cESTD f2 cvec cNUMERAL c_0 f0 f1 f1 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f2 * part cESTD f2 cvec cNUMERAL c_0 f0 f1 part cEMPTY * part cESTD f2 c, f0 f1 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f2 * part cESTD f2 cvec cNUMERAL c_0 f0 f1 c, f0 f1
- |- ((!p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))) ==> (!p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))))
T c==> ! ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1 ! ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- ((((inverse (n_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2))))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2))))))) = ((((inverse (e_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2))))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2))))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2))))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2)))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c= c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg f2 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg f2 c/\ c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg f2 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg f2 c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg f2 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg f2
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) |- ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> (~ (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c~ ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1
- (~ ((p1 , p2) IN (dart1_of_fan (V , (ESTD V))))), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- ((~ ((p1 , p2) IN (dart1_of_fan (V , (ESTD V))))) /\ ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))))
T c==> c~ cIN c, f0 f1 * part cdart1_of_fan c, f2 * part cESTD f2 c==> cIN c, f0 f1 * part cdart1_of_fan c, f2 * part cESTD f2 c/\ c~ cIN c, f0 f1 * part cdart1_of_fan c, f2 * part cESTD f2 cIN c, f0 f1 * part cdart1_of_fan c, f2 * part cESTD f2
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ (!V. (!E. (!v. (!w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w))))))))) |- (!v. (!w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w)))))))
T c==> ! ! ! ! ! c==> c/\ cIN c, b2 b3 * part cdart_of_fan c, b0 b1 * b4 c, b3 b2 * b4 ce_fan_pair_ext c, b0 b1 c, b2 b3 ! ! ! c==> c/\ cIN c, b0 b1 * part cdart_of_fan c, f0 f1 * b2 c, b1 b0 * b2 ce_fan_pair_ext c, f0 f1 c, b0 b1
+ (!p. (!y. (!x. (!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))))) |- ((\x. (!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))) x)
T c==> ! ! ! ! c==> c/\ c? / cpermutes b0 b4 * b3 c= * b0 b2 b1 * b3 c= cinverse b0 b1 b2 * / ! c==> c/\ c? / cpermutes f0 b2 * b1 c= * f0 b0 f1 * b1 c= cinverse f0 f1 b0 f2
+ (~ (V p2)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((p2 = p2) = ((p2 = w) /\ (p2 = p2)))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f4 c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f4 c~ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c= c= f1 f1 c/\ c= f1 f3 c= f1 f1
+ (P c), (b = c) |- ((~ (P b)) ==> F)
T c==> * f0 f1 c==> c= f2 f1 c==> c~ * f0 f2 cF
+ |- (((hyp_iso (node_map H)) ((opposite_hypermap H) , ((hyp_conj (node_map H)) (opposite_hypermap H)))) = ((\f. ((hyp_iso f) ((opposite_hypermap H) , ((hyp_conj (node_map H)) (opposite_hypermap H))))) (node_map H)))
T c= chyp_iso * part cnode_map f0 c, copposite_hypermap f0 chyp_conj * part cnode_map f0 copposite_hypermap f0 * / chyp_iso b0 c, copposite_hypermap f0 chyp_conj * part cnode_map f0 copposite_hypermap f0 * part cnode_map f0
+ |- (((!p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))) ==> ((\p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))) p)) = ((\p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))) p))
T c= c==> ! ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1 * / ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1 f0 * / ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1 f0
- (~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) |- ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) /\ F)
T c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 c/\ c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- (((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V)))) /\ ((\x. ((\v. (((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V))) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , v)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)))) x)) ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 * * * part cset_of_edge f1 f0 * part cESTD f0 * / * / c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cESTD f0 c= cCOND cIN * * part cINSERT f1 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 part cEMPTY * part cESTD f0 c, f1 b1 c, f1 civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 c, f1 f2 b0 cazim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)) |- ((((BIJ (\uv. ((vector_neg (FST uv)) , (vector_neg (SND uv))))) (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) (dart ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V))))))) /\ (!x. ((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> ((((edge_map ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((node_map ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x)))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c/\ cBIJ / c, cvector_neg cFST b0 cvector_neg cSND b0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 * part cdart chyp_conj * part cnode_map chypermap_of_fan c, f0 * part cESTD f0 copposite_hypermap chypermap_of_fan c, f0 * part cESTD f0 ! c==> cIN b0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c/\ c= cedge_map chyp_conj * part cnode_map chypermap_of_fan c, f0 * part cESTD f0 copposite_hypermap chypermap_of_fan c, f0 * part cESTD f0 c, cvector_neg cFST b0 cvector_neg cSND b0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 b0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 b0 c= cnode_map chyp_conj * part cnode_map chypermap_of_fan c, f0 * part cESTD f0 copposite_hypermap chypermap_of_fan c, f0 * part cESTD f0 c, cvector_neg cFST b0 cvector_neg cSND b0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 b0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 b0
+ |- ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> (~ (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E))))))))))))
T c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c~ ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1
- (((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ((hyp_conj (node_map H)) (opposite_hypermap H))) /\ ((iso ((hyp_conj (node_map H)) (opposite_hypermap H))) (opposite_hypermap H))) |- (((((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ((hyp_conj (node_map H)) (opposite_hypermap H))) /\ ((iso ((hyp_conj (node_map H)) (opposite_hypermap H))) (opposite_hypermap H))) ==> ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (opposite_hypermap H))) ==> ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (opposite_hypermap H)))
T c==> c/\ ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1 ciso chyp_conj * part cnode_map f1 copposite_hypermap f1 copposite_hypermap f1 c==> c==> c/\ ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1 ciso chyp_conj * part cnode_map f1 copposite_hypermap f1 copposite_hypermap f1 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 copposite_hypermap f1 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 copposite_hypermap f1
+ |- ((((FAN (x , (V , E))) /\ (w IN ((EE v) E))) ==> ((((((ivs_azim_cycle ((EE v) E)) x) v) w) IN ((EE v) E)) /\ (((((azim_cycle ((EE v) E)) x) v) ((((ivs_azim_cycle ((EE v) E)) x) v) w)) = w))) = T)
T c= c==> c/\ cFAN c, f0 c, f1 f2 cIN f3 * * part cEE f4 f2 c/\ cIN civs_azim_cycle * * part cEE f4 f2 f0 f4 f3 * * part cEE f4 f2 c= cazim_cycle * * part cEE f4 f2 f0 f4 civs_azim_cycle * * part cEE f4 f2 f0 f4 f3 f3 cT
+ (!V. (!E. (!v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))) |- ((\E. (!v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u))))))) E)
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 * b4 cazim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 * / ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 b0 cIN b2 * * * part cset_of_edge b1 f0 b0 * b3 cazim_cycle * * * part cset_of_edge b1 f0 b0 cvec cNUMERAL c_0 b1 b2 * b3 csigma_fan cvec cNUMERAL c_0 f0 b0 b1 b2 f1
+ (~ (P b)), (b = c) |- (~ (P c))
T c==> c~ * f0 f1 c==> c= f1 f2 c~ * f0 f2
+ |- (((!H. (!x. (((dart (opposite_hypermap H)) = (dart H)) /\ ((((node (opposite_hypermap H)) x) = ((node H) x)) /\ (((face (opposite_hypermap H)) x) = ((face H) x)))))) ==> ((\H. (!x. (((dart (opposite_hypermap H)) = (dart H)) /\ ((((node (opposite_hypermap H)) x) = ((node H) x)) /\ (((face (opposite_hypermap H)) x) = ((face H) x)))))) H)) = ((\H. (!x. (((dart (opposite_hypermap H)) = (dart H)) /\ ((((node (opposite_hypermap H)) x) = ((node H) x)) /\ (((face (opposite_hypermap H)) x) = ((face H) x)))))) H))
T c= c==> ! ! c/\ c= * part cdart copposite_hypermap b0 * part cdart b0 c/\ c= * * part cnode copposite_hypermap b0 b1 * * part cnode b0 b1 c= * * part cface copposite_hypermap b0 b1 * * part cface b0 b1 * / ! c/\ c= * part cdart copposite_hypermap b0 * part cdart b0 c/\ c= * * part cnode copposite_hypermap b0 b1 * * part cnode b0 b1 c= * * part cface copposite_hypermap b0 b1 * * part cface b0 b1 f0 * / ! c/\ c= * part cdart copposite_hypermap b0 * part cdart b0 c/\ c= * * part cnode copposite_hypermap b0 b1 * * part cnode b0 b1 c= * * part cface copposite_hypermap b0 b1 * * part cface b0 b1 f0
+ |- (((!H. (((iso H) G) ==> ((iso G) H))) ==> ((\H. (((iso H) G) ==> ((iso G) H))) H)) = ((\H. (((iso H) G) ==> ((iso G) H))) H))
T c= c==> ! c==> ciso b0 f0 ciso f0 b0 * / c==> ciso b0 f0 ciso f0 b0 f1 * / c==> ciso b0 f0 ciso f0 b0 f1
+ |- ((A = F) ==> (((A ==> B) /\ A) ==> B))
T c==> c= f0 cF c==> c/\ c==> f0 f1 f0 f1
+ |- ((_10268394 = _10268395) ==> ((V _10268395) \/ (~ (V _10268394))))
T c==> c= f0 f1 c\/ * f2 f1 c~ * f2 f0
+ (~ (V p2)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((((p2 = p2) /\ (~ (v = p2))) ==> (~ (p2 = v))) = (~ (p2 = v)))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f4 c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f4 c~ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c= c==> c/\ c= f1 f1 c~ c= f2 f1 c~ c= f1 f2 c~ c= f1 f2
+ |- (((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> (~ (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E))))))))))))) = T)
T c= c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c~ ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cT
+ |- (((!x. (((n_fan_pair_ext (V , E)) x) = (((COND (x IN (dart1_of_fan (V , E)))) ((n_fan_pair (V , E)) x)) x))) ==> ((\x. (((n_fan_pair_ext (V , E)) x) = (((COND (x IN (dart1_of_fan (V , E)))) ((n_fan_pair (V , E)) x)) x))) x)) = ((\x. (((n_fan_pair_ext (V , E)) x) = (((COND (x IN (dart1_of_fan (V , E)))) ((n_fan_pair (V , E)) x)) x))) x))
T c= c==> ! c= cn_fan_pair_ext c, f0 f1 b0 cCOND cIN b0 * part cdart1_of_fan c, f0 f1 cn_fan_pair c, f0 f1 b0 b0 * / c= cn_fan_pair_ext c, f0 f1 b0 cCOND cIN b0 * part cdart1_of_fan c, f0 f1 cn_fan_pair c, f0 f1 b0 b0 f2 * / c= cn_fan_pair_ext c, f0 f1 b0 cCOND cIN b0 * part cdart1_of_fan c, f0 f1 cn_fan_pair c, f0 f1 b0 b0 f2
+ (!V. (!E. (!v. (!w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w))))))))) |- (((!w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w)))))) ==> ((\w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w)))))) w)) = ((\w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w)))))) w))
T c==> ! ! ! ! ! c==> c/\ cIN c, b2 b3 * part cdart_of_fan c, b0 b1 * b4 c, b3 b2 * b4 ce_fan_pair_ext c, b0 b1 c, b2 b3 c= c==> ! ! c==> c/\ cIN c, f0 b0 * part cdart_of_fan c, f1 f2 * b1 c, b0 f0 * b1 ce_fan_pair_ext c, f1 f2 c, f0 b0 * / ! c==> c/\ cIN c, f0 b0 * part cdart_of_fan c, f1 f2 * b1 c, b0 f0 * b1 ce_fan_pair_ext c, f1 f2 c, f0 b0 f3 * / ! c==> c/\ cIN c, f0 b0 * part cdart_of_fan c, f1 f2 * b1 c, b0 f0 * b1 ce_fan_pair_ext c, f1 f2 c, f0 b0 f3
- |- (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> (((((inverse (edge_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((inverse (node_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x)))))) = q')) ==> (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> ((((inverse (edge_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((inverse (node_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))))) = ((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> q')))
T c==> c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c= c/\ c= cinverse * part cedge_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 f2 c= c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cinverse * part cedge_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f2
- ((v , w) IN (dart_of_fan (V , E))) |- (((v , w) IN (dart_of_fan (V , E))) /\ (((e_fan_pair_ext (V , E)) (v , w)) = (w , v)))
T c==> cIN c, f0 f1 * part cdart_of_fan c, f2 f3 c/\ cIN c, f0 f1 * part cdart_of_fan c, f2 f3 c= ce_fan_pair_ext c, f2 f3 c, f0 f1 c, f1 f0
+ (!H. (!G. (((iso H) G) ==> ((iso G) H)))) |- ((((iso H) G) ==> ((iso G) H)) = T)
T c==> ! ! c==> ciso b0 b1 ciso b1 b0 c= c==> ciso f0 f1 ciso f1 f0 cT
+ |- ((!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))) = ((!b. (!c. ((T ==> (b = c)) ==> (!P. ((T /\ (P c)) ==> (P b)))))) /\ (!b. (!c. ((F ==> (b = c)) ==> (!P. ((F /\ (P c)) ==> (P b))))))))
T c= ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 c/\ ! ! c==> c==> cT c= b0 b1 ! c==> c/\ cT * b2 b1 * b2 b0 ! ! c==> c==> cF c= b0 b1 ! c==> c/\ cF * b2 b1 * b2 b0
+ |- (((!v. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((EE v) E) = (((set_of_edge v) V) E)))) ==> ((\v. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((EE v) E) = (((set_of_edge v) V) E)))) v)) = ((\v. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((EE v) E) = (((set_of_edge v) V) E)))) v))
T c= c==> ! c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= * * part cEE b0 f1 * * * part cset_of_edge b0 f0 f1 * / c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= * * part cEE b0 f1 * * * part cset_of_edge b0 f0 f1 f2 * / c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= * * part cEE b0 f1 * * * part cset_of_edge b0 f0 f1 f2
+ |- ((\y. (((\x. ((\v. (((inverse (e_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = ((vector_neg (FST v)) , (vector_neg (SND v))))) x)) y) = ((\v. (((inverse (e_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = ((vector_neg (FST v)) , (vector_neg (SND v))))) y))) ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2))))
T * / c= * / * / c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, cvector_neg cFST b2 cvector_neg cSND b2 b1 b0 * / c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, cvector_neg cFST b1 cvector_neg cSND b1 b0 ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg f2
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
+ |- ((\V. (!E. (!p1. (!p2. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) ==> ((((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2) = ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))))))) V)
T * / ! ! ! c==> c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c= cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 civs_azim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 f0
+ (contravening ((IMAGE vector_neg) V)) |- ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) = T)
T c==> ccontravening * * part cIMAGE part cvector_neg f0 c= cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 cT
+ ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) |- ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) = T)
T c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 cT
+ |- ((\q'. (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) = p') ==> ((p' ==> (((((inverse (edge_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((inverse (node_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x)))))) = q')) ==> (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> ((((inverse (edge_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((inverse (node_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f2 c==> c==> f2 c= c/\ c= cinverse * part cedge_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 b0 c= c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cinverse * part cedge_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c==> f2 b0 f3
- (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- (((_10268364 = p1) \/ (_10268364 = p2)) \/ (~ (_10268364 = v)))
T c==> c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f3 c= b0 f4 c/\ c~ c= b0 f1 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c\/ c\/ c= f5 f3 c= f5 f4 c~ c= f5 f1
- |- ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) = T))
T c==> ccontravening f0 c= ccontravening * * part cIMAGE part cvector_neg f0 cT
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- ((((n_fan_pair_ext (V , (ESTD V))) (p1 , (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) p2))) = (p1 , p2)) = ((?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s)) /\ (((n_fan_pair_ext (V , (ESTD V))) (p1 , (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) p2))) = (p1 , p2))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c= c= cn_fan_pair_ext c, f0 * part cESTD f0 c, f1 cinverse_sigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 f1 f2 c, f1 f2 c/\ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c= cn_fan_pair_ext c, f0 * part cESTD f0 c, f1 cinverse_sigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 f1 f2 c, f1 f2
+ |- (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> (((((edge_map ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((node_map ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x)))))) = q')) ==> (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> ((((edge_map ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((node_map ((hyp_conj (node_map (hypermap_of_fan (V , (ESTD V))))) (opposite_hypermap (hypermap_of_fan (V , (ESTD V)))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))))) = ((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> q')))
T c==> c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c= c/\ c= cedge_map chyp_conj * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 copposite_hypermap chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cnode_map chyp_conj * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 copposite_hypermap chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 f2 c= c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cedge_map chyp_conj * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 copposite_hypermap chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cnode_map chyp_conj * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 copposite_hypermap chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f2
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (p2 IN (((set_of_edge p1) V) (ESTD V))) |- ((p2 IN (((set_of_edge p1) V) (ESTD V))) /\ (((((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN ((EE p1) (ESTD V))) /\ (((((azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) = ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cIN f1 * * * part cset_of_edge f2 f0 * part cESTD f0 c/\ cIN f1 * * * part cset_of_edge f2 f0 * part cESTD f0 c= c/\ cIN civs_azim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 * * part cEE f2 * part cESTD f0 c= cazim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 civs_azim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 f1 c/\ cIN civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 * * * part cset_of_edge f2 f0 * part cESTD f0 c= cazim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 f1
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!x. ((P x) \/ Q)) = ((!x. (P x)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ |- ((\x. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x)))) x)
T * / c==> c/\ c? / cpermutes f0 b1 * f1 c= * f0 b0 f2 * f1 c= cinverse f0 f2 b0 f3
- (_10268410 = _10268412), (_10268411 = _10268413) |- ((_10268411 = _10268413) /\ (((real_mul _10268410) _10268411) = ((real_mul _10268412) _10268413)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= creal_mul f0 f2 creal_mul f1 f3
- (_10268309 = _10268310) |- ((_10268309 = _10268310) /\ ((FAN _10268310) \/ (~ (FAN _10268309))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cFAN f1 c~ cFAN f0
+ |- (((~ (P b)) ==> F) = (P b))
T c= c==> c~ * f0 f1 cF * f0 f1
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)) |- (!p2. (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2))))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2))))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2))))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 ! c==> cIN c, f1 b0 * part cdart1_of_fan c, f0 * part cESTD f0 c/\ c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, f1 b0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg b0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg b0 c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, f1 b0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg b0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg b0
+ ((\H. ((hypermap_of_fan (V , (ESTD V))) = H)) H) |- ((hypermap_of_fan (V , (ESTD V))) = H)
T c==> * / c= chypermap_of_fan c, f0 * part cESTD f0 b0 f1 c= chypermap_of_fan c, f0 * part cESTD f0 f1
+ |- (((!V. ((GSPEC (\GEN%PVAR%5439. (?w. (((SETSPEC GEN%PVAR%5439) (((v INSERT (w INSERT EMPTY)) IN E) /\ (w IN V))) w)))) = (((set_of_edge v) V) E))) ==> ((\V. ((GSPEC (\GEN%PVAR%5439. (?w. (((SETSPEC GEN%PVAR%5439) (((v INSERT (w INSERT EMPTY)) IN E) /\ (w IN V))) w)))) = (((set_of_edge v) V) E))) V)) = ((\V. ((GSPEC (\GEN%PVAR%5439. (?w. (((SETSPEC GEN%PVAR%5439) (((v INSERT (w INSERT EMPTY)) IN E) /\ (w IN V))) w)))) = (((set_of_edge v) V) E))) V))
T c= c==> ! c= * part cGSPEC / c? / cSETSPEC b1 c/\ cIN * * part cINSERT f0 * * part cINSERT b2 part cEMPTY f1 cIN b2 b0 b2 * * * part cset_of_edge f0 b0 f1 * / c= * part cGSPEC / c? / cSETSPEC b1 c/\ cIN * * part cINSERT f0 * * part cINSERT b2 part cEMPTY f1 cIN b2 b0 b2 * * * part cset_of_edge f0 b0 f1 f2 * / c= * part cGSPEC / c? / cSETSPEC b1 c/\ cIN * * part cINSERT f0 * * part cINSERT b2 part cEMPTY f1 cIN b2 b0 b2 * * * part cset_of_edge f0 b0 f1 f2
+ (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) |- ((dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) = (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))
T c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c= * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0
- |- ((((~ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))))) = ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))))
T c= c==> c==> c~ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2
+ (!V. (!E. (!v. (!w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w))))))))) |- (((!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w))))) ==> ((\P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w))))) P)) = ((\P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w))))) P))
T c==> ! ! ! ! ! c==> c/\ cIN c, b2 b3 * part cdart_of_fan c, b0 b1 * b4 c, b3 b2 * b4 ce_fan_pair_ext c, b0 b1 c, b2 b3 c= c==> ! c==> c/\ cIN c, f0 f1 * part cdart_of_fan c, f2 f3 * b0 c, f1 f0 * b0 ce_fan_pair_ext c, f2 f3 c, f0 f1 * / c==> c/\ cIN c, f0 f1 * part cdart_of_fan c, f2 f3 * b0 c, f1 f0 * b0 ce_fan_pair_ext c, f2 f3 c, f0 f1 f4 * / c==> c/\ cIN c, f0 f1 * part cdart_of_fan c, f2 f3 * b0 c, f1 f0 * b0 ce_fan_pair_ext c, f2 f3 c, f0 f1 f4
+ (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((_10268363 = w) \/ ((~ (_10268363 = p1)) \/ (_10268363 = v)))
T c==> c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f3 c= b0 f4 c/\ c~ c= b0 f1 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c\/ c= f5 f2 c\/ c~ c= f5 f3 c= f5 f1
+ (~ (V p1)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((p1 = p1) = ((p1 = w) /\ (p1 = p1)))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f1 c= b0 f4 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f4 c\/ c= b0 f2 c= b0 f3 c= c= f1 f1 c/\ c= f1 f3 c= f1 f1
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) |- (((((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ (p2 IN ((EE p1) (ESTD V)))) ==> ((((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN ((EE p1) (ESTD V))) /\ (((((azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle ((EE p1) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) ==> (((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V)))) /\ (((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V))) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))))) = (((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V)) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c= c==> c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN f1 * * part cEE f2 * part cESTD f0 c/\ cIN civs_azim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 * * part cEE f2 * part cESTD f0 c= cazim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 civs_azim_cycle * * part cEE f2 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 f1 c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 * * * part cset_of_edge f2 f0 * part cESTD f0 c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * part cESTD f0 c= cCOND cIN * * part cINSERT f2 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 part cEMPTY * part cESTD f0 c, f2 cazim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 c, f2 civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 c, f2 f1 c==> c==> cIN f1 * * * part cset_of_edge f2 f0 * part cESTD f0 c/\ cIN civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 * * * part cset_of_edge f2 f0 * part cESTD f0 c= cazim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 f1 c/\ cIN civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 * * * part cset_of_edge f2 f0 * part cESTD f0 c/\ cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * part cESTD f0 c= cCOND cIN * * part cINSERT f2 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 part cEMPTY * part cESTD f0 c, f2 cazim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 c, f2 civs_azim_cycle * * * part cset_of_edge f2 f0 * part cESTD f0 cvec cNUMERAL c_0 f2 f1 c, f2 f1
+ (!V. (!E. (!v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))) |- (((!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u))))) ==> ((\u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u))))) u)) = ((\u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u))))) u))
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 * b4 cazim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 c= c==> ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN b0 * * * part cset_of_edge f2 f0 f1 * b1 cazim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 b0 * b1 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 * / ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN b0 * * * part cset_of_edge f2 f0 f1 * b1 cazim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 b0 * b1 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 f3 * / ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN b0 * * * part cset_of_edge f2 f0 f1 * b1 cazim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 b0 * b1 csigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 f3
+ |- (((!E. (!x. (((n_fan_pair_ext (V , E)) x) = (((COND (x IN (dart1_of_fan (V , E)))) ((n_fan_pair (V , E)) x)) x)))) ==> ((\E. (!x. (((n_fan_pair_ext (V , E)) x) = (((COND (x IN (dart1_of_fan (V , E)))) ((n_fan_pair (V , E)) x)) x)))) E)) = ((\E. (!x. (((n_fan_pair_ext (V , E)) x) = (((COND (x IN (dart1_of_fan (V , E)))) ((n_fan_pair (V , E)) x)) x)))) E))
T c= c==> ! ! c= cn_fan_pair_ext c, f0 b0 b1 cCOND cIN b1 * part cdart1_of_fan c, f0 b0 cn_fan_pair c, f0 b0 b1 b1 * / ! c= cn_fan_pair_ext c, f0 b0 b1 cCOND cIN b1 * part cdart1_of_fan c, f0 b0 cn_fan_pair c, f0 b0 b1 b1 f1 * / ! c= cn_fan_pair_ext c, f0 b0 b1 cCOND cIN b1 * part cdart1_of_fan c, f0 b0 cn_fan_pair c, f0 b0 b1 b1 f1
+ |- (((!e'. ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) = g') ==> ((g' ==> ((p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = t')) ==> (((~ g') ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND g') t') e')))))) ==> ((\e'. ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) = g') ==> ((g' ==> ((p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = t')) ==> (((~ g') ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND g') t') e')))))) e')) = ((\e'. ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) = g') ==> ((g' ==> ((p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = t')) ==> (((~ g') ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 c==> c==> f3 c= c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f4 c==> c==> c~ f3 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 b0 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND f3 f4 b0 * / c==> c= cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 c==> c==> f3 c= c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f4 c==> c==> c~ f3 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 b0 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND f3 f4 b0 f5 * / c==> c= cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 c==> c==> f3 c= c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f4 c==> c==> c~ f3 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 b0 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND f3 f4 b0 f5
- (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))
T c==> c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f3 c= b0 f4 c/\ c~ c= b0 f1 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0
+ |- (((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) u) = ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u))))) = (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))
T c= c==> c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f2 cazim_cycle * * * part cset_of_edge f3 f0 f1 cvec cNUMERAL c_0 f3 f2 ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 * b0 cazim_cycle * * * part cset_of_edge f3 f0 f1 cvec cNUMERAL c_0 f3 f2 * b0 csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f2 ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 * b0 cazim_cycle * * * part cset_of_edge f3 f0 f1 cvec cNUMERAL c_0 f3 f2 * b0 csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f2
+ |- ((\E. (!p1. (!p2. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))) E)
T * / ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 b0 cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 * f1 civs_azim_cycle * * * part cset_of_edge b1 f0 b0 cvec cNUMERAL c_0 b1 b2 * f1 cinverse_sigma_fan cvec cNUMERAL c_0 f0 b0 b1 b2 f2
+ |- ((~ (p2 = v)) = ((p2 = p2) /\ (~ (p2 = v))))
T c= c~ c= f0 f1 c/\ c= f0 f0 c~ c= f0 f1
- (!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))), (~ ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V))))), (contravening V) |- ((~ ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V))))) /\ ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))
T c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 c==> c~ c= * part cdart_of_fan c, f0 * part cESTD f0 * part cdart1_of_fan c, f0 * part cESTD f0 c==> ccontravening f0 c/\ c~ c= * part cdart_of_fan c, f0 * part cESTD f0 * part cdart1_of_fan c, f0 * part cESTD f0 c= * part cdart_of_fan c, f0 * part cESTD f0 * part cdart1_of_fan c, f0 * part cESTD f0
+ (contravening V), ((hypermap_of_fan (V , (ESTD V))) = H) |- (((((iso ((hyp_conj (node_map H)) (opposite_hypermap H))) (opposite_hypermap H)) /\ ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ((hyp_conj (node_map H)) (opposite_hypermap H)))) ==> (((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ((hyp_conj (node_map H)) (opposite_hypermap H))) /\ ((iso ((hyp_conj (node_map H)) (opposite_hypermap H))) (opposite_hypermap H)))) = (((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ((hyp_conj (node_map H)) (opposite_hypermap H))) /\ ((iso ((hyp_conj (node_map H)) (opposite_hypermap H))) (opposite_hypermap H))))
T c==> ccontravening f0 c==> c= chypermap_of_fan c, f0 * part cESTD f0 f1 c= c==> c/\ ciso chyp_conj * part cnode_map f1 copposite_hypermap f1 copposite_hypermap f1 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1 c/\ ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1 ciso chyp_conj * part cnode_map f1 copposite_hypermap f1 copposite_hypermap f1 c/\ ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1 ciso chyp_conj * part cnode_map f1 copposite_hypermap f1 copposite_hypermap f1
+ |- (((!v. ((((vector_neg u) , (vector_neg v)) IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) = ((u , v) IN (dart1_of_fan (V , (ESTD V)))))) ==> ((\v. ((((vector_neg u) , (vector_neg v)) IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) = ((u , v) IN (dart1_of_fan (V , (ESTD V)))))) v)) = ((\v. ((((vector_neg u) , (vector_neg v)) IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) = ((u , v) IN (dart1_of_fan (V , (ESTD V)))))) v))
T c= c==> ! c= cIN c, cvector_neg f0 cvector_neg b0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 cIN c, f0 b0 * part cdart1_of_fan c, f1 * part cESTD f1 * / c= cIN c, cvector_neg f0 cvector_neg b0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 cIN c, f0 b0 * part cdart1_of_fan c, f1 * part cESTD f1 f2 * / c= cIN c, cvector_neg f0 cvector_neg b0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 cIN c, f0 b0 * part cdart1_of_fan c, f1 * part cESTD f1 f2
+ |- (((!H. (((dart ((hyp_conj (node_map H)) (opposite_hypermap H))) = (dart H)) /\ (((edge_map ((hyp_conj (node_map H)) (opposite_hypermap H))) = (inverse (edge_map H))) /\ (((node_map ((hyp_conj (node_map H)) (opposite_hypermap H))) = (inverse (node_map H))) /\ ((face_map ((hyp_conj (node_map H)) (opposite_hypermap H))) = ((node_map H) o ((inverse (face_map H)) o (inverse (node_map H))))))))) ==> ((\H. (((dart ((hyp_conj (node_map H)) (opposite_hypermap H))) = (dart H)) /\ (((edge_map ((hyp_conj (node_map H)) (opposite_hypermap H))) = (inverse (edge_map H))) /\ (((node_map ((hyp_conj (node_map H)) (opposite_hypermap H))) = (inverse (node_map H))) /\ ((face_map ((hyp_conj (node_map H)) (opposite_hypermap H))) = ((node_map H) o ((inverse (face_map H)) o (inverse (node_map H))))))))) H)) = ((\H. (((dart ((hyp_conj (node_map H)) (opposite_hypermap H))) = (dart H)) /\ (((edge_map ((hyp_conj (node_map H)) (opposite_hypermap H))) = (inverse (edge_map H))) /\ (((node_map ((hyp_conj (node_map H)) (opposite_hypermap H))) = (inverse (node_map H))) /\ ((face_map ((hyp_conj (node_map H)) (opposite_hypermap H))) = ((node_map H) o ((inverse (face_map H)) o (inverse (node_map H))))))))) H))
T c= c==> ! c/\ c= * part cdart chyp_conj * part cnode_map b0 copposite_hypermap b0 * part cdart b0 c/\ c= * part cedge_map chyp_conj * part cnode_map b0 copposite_hypermap b0 * part cinverse * part cedge_map b0 c/\ c= * part cnode_map chyp_conj * part cnode_map b0 copposite_hypermap b0 * part cinverse * part cnode_map b0 c= * part cface_map chyp_conj * part cnode_map b0 copposite_hypermap b0 * * part co * part cnode_map b0 * * part co * part cinverse * part cface_map b0 * part cinverse * part cnode_map b0 * / c/\ c= * part cdart chyp_conj * part cnode_map b0 copposite_hypermap b0 * part cdart b0 c/\ c= * part cedge_map chyp_conj * part cnode_map b0 copposite_hypermap b0 * part cinverse * part cedge_map b0 c/\ c= * part cnode_map chyp_conj * part cnode_map b0 copposite_hypermap b0 * part cinverse * part cnode_map b0 c= * part cface_map chyp_conj * part cnode_map b0 copposite_hypermap b0 * * part co * part cnode_map b0 * * part co * part cinverse * part cface_map b0 * part cinverse * part cnode_map b0 f0 * / c/\ c= * part cdart chyp_conj * part cnode_map b0 copposite_hypermap b0 * part cdart b0 c/\ c= * part cedge_map chyp_conj * part cnode_map b0 copposite_hypermap b0 * part cinverse * part cedge_map b0 c/\ c= * part cnode_map chyp_conj * part cnode_map b0 copposite_hypermap b0 * part cinverse * part cnode_map b0 c= * part cface_map chyp_conj * part cnode_map b0 copposite_hypermap b0 * * part co * part cnode_map b0 * * part co * part cinverse * part cface_map b0 * part cinverse * part cnode_map b0 f0
- (~ (V p2)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f4 c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f4 c~ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c==> c~ cF cF
- |- ((\p2. (!V. (!p1. ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F)))) p2)
T * / ! ! c==> c~ c==> c? / c? / c/\ c/\ * b1 b3 c/\ * b1 b4 c/\ c~ c= b3 b4 creal_le cdistance c, b3 b4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b5 b2 c= b5 b0 c\/ c= b5 b3 c= b5 b4 c/\ * b1 b2 * b1 b0 cF f0
+ (!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))), (contravening V), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))
T c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 c==> ccontravening f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0
+ |- ((((iso (opposite_hypermap H)) ((hyp_conj (node_map H)) (opposite_hypermap H))) ==> ((iso ((hyp_conj (node_map H)) (opposite_hypermap H))) (opposite_hypermap H))) = ((iso ((hyp_conj (node_map H)) (opposite_hypermap H))) (opposite_hypermap H)))
T c= c==> ciso copposite_hypermap f0 chyp_conj * part cnode_map f0 copposite_hypermap f0 ciso chyp_conj * part cnode_map f0 copposite_hypermap f0 copposite_hypermap f0 ciso chyp_conj * part cnode_map f0 copposite_hypermap f0 copposite_hypermap f0
+ |- (((!v. (!w. (((v , w) IN (dart1_of_fan (V , E))) = ((v INSERT (w INSERT EMPTY)) IN E)))) ==> ((\v. (!w. (((v , w) IN (dart1_of_fan (V , E))) = ((v INSERT (w INSERT EMPTY)) IN E)))) v)) = ((\v. (!w. (((v , w) IN (dart1_of_fan (V , E))) = ((v INSERT (w INSERT EMPTY)) IN E)))) v))
T c= c==> ! ! c= cIN c, b0 b1 * part cdart1_of_fan c, f0 f1 cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 * / ! c= cIN c, b0 b1 * part cdart1_of_fan c, f0 f1 cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 f2 * / ! c= cIN c, b0 b1 * part cdart1_of_fan c, f0 f1 cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 f2
+ |- ((GSPEC (\GEN%PVAR%5439. (?w. (((SETSPEC GEN%PVAR%5439) (((v INSERT (w INSERT EMPTY)) IN E) /\ (w IN V))) w)))) = (((set_of_edge v) V) E))
T c= * part cGSPEC / c? / cSETSPEC b0 c/\ cIN * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f1 cIN b1 f2 b1 * * * part cset_of_edge f0 f2 f1
- (_10268309 = _10268310) |- ((((FAN _10268309) = (FAN _10268310)) ==> ((FAN _10268310) \/ (~ (FAN _10268309)))) = ((FAN _10268310) \/ (~ (FAN _10268309))))
T c==> c= f0 f1 c= c==> c= cFAN f0 cFAN f1 c\/ cFAN f1 c~ cFAN f0 c\/ cFAN f1 c~ cFAN f0
- (x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) |- ((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) = T)
T c==> cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c= cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 cT
- (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- (!x. ((((x = p1) \/ (x = p2)) \/ (~ (x = v))) /\ (((x = p1) \/ (x = p2)) \/ (~ (x = w)))))
T c==> c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f3 c= b0 f4 c/\ c~ c= b0 f1 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f1 c= b0 f2 ! c/\ c\/ c\/ c= b0 f3 c= b0 f4 c~ c= b0 f1 c\/ c\/ c= b0 f3 c= b0 f4 c~ c= b0 f2
+ (!H. (!G. (((iso H) G) ==> ((iso G) H)))) |- ((\H. (!G. (((iso H) G) ==> ((iso G) H)))) H)
T c==> ! ! c==> ciso b0 b1 ciso b1 b0 * / ! c==> ciso b0 b1 ciso b1 b0 f0
+ |- (((!w. (((contravening V) /\ ((v , w) IN (dart1_of_fan (V , (ESTD V))))) ==> (((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg v) , (vector_neg w))) = ((vector_neg v) , (vector_neg (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) v) w)))))) ==> ((\w. (((contravening V) /\ ((v , w) IN (dart1_of_fan (V , (ESTD V))))) ==> (((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg v) , (vector_neg w))) = ((vector_neg v) , (vector_neg (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) v) w)))))) w)) = ((\w. (((contravening V) /\ ((v , w) IN (dart1_of_fan (V , (ESTD V))))) ==> (((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg v) , (vector_neg w))) = ((vector_neg v) , (vector_neg (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) v) w)))))) w))
T c= c==> ! c==> c/\ ccontravening f0 cIN c, f1 b0 * part cdart1_of_fan c, f0 * part cESTD f0 c= cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg b0 c, cvector_neg f1 cvector_neg cinverse_sigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 f1 b0 * / c==> c/\ ccontravening f0 cIN c, f1 b0 * part cdart1_of_fan c, f0 * part cESTD f0 c= cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg b0 c, cvector_neg f1 cvector_neg cinverse_sigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 f1 b0 f2 * / c==> c/\ ccontravening f0 cIN c, f1 b0 * part cdart1_of_fan c, f0 * part cESTD f0 c= cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg b0 c, cvector_neg f1 cvector_neg cinverse_sigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 f1 b0 f2
+ |- ((\p'. (!q'. (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) = p') ==> ((p' ==> (((((inverse (edge_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((inverse (node_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x)))))) = q')) ==> (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> ((((inverse (edge_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((inverse (node_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 b0 c==> c==> b0 c= c/\ c= cinverse * part cedge_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 b1 c= c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cinverse * part cedge_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c==> b0 b1 f2
- |- (((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> ((p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))))) ==> (((~ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) e')))) = (((~ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) e'))))
T c= c==> c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c==> c==> c~ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f3 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f3 c==> c==> c~ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f3 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f3
+ (~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))), (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) /\ F)
T c==> c~ cIN c, f0 f1 * part cdart_of_fan c, f2 * part cESTD f2 c==> cFAN c, cvec cNUMERAL c_0 c, f2 * part cESTD f2 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f2 * part cESTD * * part cIMAGE part cvector_neg f2 c==> ccontravening f2 c==> ccontravening * * part cIMAGE part cvector_neg f2 c==> cIN c, f0 f1 * part cdart1_of_fan c, f2 * part cESTD f2 c/\ c~ cIN c, f0 f1 * part cdart_of_fan c, f2 * part cESTD f2 cF
- |- ((!x'. (((x' = p1) \/ (x' = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) = ((!x. ((x = p1) \/ (x = p2))) \/ ((~ (x = v)) /\ (~ (x = w)))))
T c= ! c\/ c\/ c= b0 f0 c= b0 f1 c/\ c~ c= f2 f3 c~ c= f2 f4 c\/ ! c\/ c= b0 f0 c= b0 f1 c/\ c~ c= f2 f3 c~ c= f2 f4
+ |- ((((~ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))))) = ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))))
T c= c==> c==> c~ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2
+ |- (((!x. (((dart (opposite_hypermap H)) = (dart H)) /\ ((((node (opposite_hypermap H)) x) = ((node H) x)) /\ (((face (opposite_hypermap H)) x) = ((face H) x))))) ==> ((\x. (((dart (opposite_hypermap H)) = (dart H)) /\ ((((node (opposite_hypermap H)) x) = ((node H) x)) /\ (((face (opposite_hypermap H)) x) = ((face H) x))))) x)) = ((\x. (((dart (opposite_hypermap H)) = (dart H)) /\ ((((node (opposite_hypermap H)) x) = ((node H) x)) /\ (((face (opposite_hypermap H)) x) = ((face H) x))))) x))
T c= c==> ! c/\ c= * part cdart copposite_hypermap f0 * part cdart f0 c/\ c= * * part cnode copposite_hypermap f0 b0 * * part cnode f0 b0 c= * * part cface copposite_hypermap f0 b0 * * part cface f0 b0 * / c/\ c= * part cdart copposite_hypermap f0 * part cdart f0 c/\ c= * * part cnode copposite_hypermap f0 b0 * * part cnode f0 b0 c= * * part cface copposite_hypermap f0 b0 * * part cface f0 b0 f1 * / c/\ c= * part cdart copposite_hypermap f0 * part cdart f0 c/\ c= * * part cnode copposite_hypermap f0 b0 * * part cnode f0 b0 c= * * part cface copposite_hypermap f0 b0 * * part cface f0 b0 f1
+ (!H. (!G. (!f. (((hyp_iso f) (H , G)) ==> ((iso H) G))))), ((hyp_iso f) (H , G)) |- ((iso H) G)
T c==> ! ! ! c==> chyp_iso b2 c, b0 b1 ciso b0 b1 c==> chyp_iso f0 c, f1 f2 ciso f1 f2
+ |- ((\H. (!x. (((dart (opposite_hypermap H)) = (dart H)) /\ ((((node (opposite_hypermap H)) x) = ((node H) x)) /\ (((face (opposite_hypermap H)) x) = ((face H) x)))))) H)
T * / ! c/\ c= * part cdart copposite_hypermap b0 * part cdart b0 c/\ c= * * part cnode copposite_hypermap b0 b1 * * part cnode b0 b1 c= * * part cface copposite_hypermap b0 b1 * * part cface b0 b1 f0
+ ((A = T) ==> (((A ==> B) /\ A) ==> B)), ((A = F) ==> (((A ==> B) /\ A) ==> B)) |- (((A ==> B) /\ A) ==> B)
T c==> c==> c= f0 cT c==> c/\ c==> f0 f1 f0 f1 c==> c==> c= f0 cF c==> c/\ c==> f0 f1 f0 f1 c==> c/\ c==> f0 f1 f0 f1
+ ((hypermap_of_fan (V , (ESTD V))) = H) |- (H = (hypermap_of_fan (V , (ESTD V))))
T c==> c= chypermap_of_fan c, f0 * part cESTD f0 f1 c= f1 chypermap_of_fan c, f0 * part cESTD f0
+ |- ((\V. (!v. (!w. (((contravening V) /\ ((v , w) IN (dart1_of_fan (V , (ESTD V))))) ==> (((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg v) , (vector_neg w))) = ((vector_neg v) , (vector_neg (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) v) w)))))))) V)
T * / ! ! c==> c/\ ccontravening b0 cIN c, b1 b2 * part cdart1_of_fan c, b0 * part cESTD b0 c= cn_fan_pair_ext c, * * part cIMAGE part cvector_neg b0 * part cESTD * * part cIMAGE part cvector_neg b0 c, cvector_neg b1 cvector_neg b2 c, cvector_neg b1 cvector_neg cinverse_sigma_fan cvec cNUMERAL c_0 b0 * part cESTD b0 b1 b2 f0
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ |- ((((((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ((hyp_conj (node_map H)) (opposite_hypermap H))) /\ ((iso ((hyp_conj (node_map H)) (opposite_hypermap H))) (opposite_hypermap H))) ==> ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (opposite_hypermap H))) ==> ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (opposite_hypermap H))) = ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (opposite_hypermap H)))
T c= c==> c==> c/\ ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1 ciso chyp_conj * part cnode_map f1 copposite_hypermap f1 copposite_hypermap f1 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 copposite_hypermap f1 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 copposite_hypermap f1 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 copposite_hypermap f1
+ (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) |- ((~ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> F)
T c==> cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c==> c~ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 cF
+ |- ((\V. (!E. (!v. (!u. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u))))))) V)
T * / ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 * f0 cazim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * f0 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 f1
+ (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) |- ((((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) = (x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> (((x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((((inverse (edge_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((inverse (node_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x)))))) = q')) ==> (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> ((((inverse (edge_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((inverse (node_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))))) = ((x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> q')))) = (((x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((((inverse (edge_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((inverse (node_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x)))))) = q')) ==> (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> ((((inverse (edge_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((inverse (node_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))))) = ((x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> q'))))
T c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c= c==> c= cIN f1 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 cIN f1 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> c==> cIN f1 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c= c/\ c= cinverse * part cedge_map chypermap_of_fan c, f0 * part cESTD f0 c, cvector_neg cFST f1 cvector_neg cSND f1 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 c= cinverse * part cnode_map chypermap_of_fan c, f0 * part cESTD f0 c, cvector_neg cFST f1 cvector_neg cSND f1 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 f2 c= c==> cIN f1 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c/\ c= cinverse * part cedge_map chypermap_of_fan c, f0 * part cESTD f0 c, cvector_neg cFST f1 cvector_neg cSND f1 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 c= cinverse * part cnode_map chypermap_of_fan c, f0 * part cESTD f0 c, cvector_neg cFST f1 cvector_neg cSND f1 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 c==> cIN f1 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f2 c==> c==> cIN f1 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c= c/\ c= cinverse * part cedge_map chypermap_of_fan c, f0 * part cESTD f0 c, cvector_neg cFST f1 cvector_neg cSND f1 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 c= cinverse * part cnode_map chypermap_of_fan c, f0 * part cESTD f0 c, cvector_neg cFST f1 cvector_neg cSND f1 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 f2 c= c==> cIN f1 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c/\ c= cinverse * part cedge_map chypermap_of_fan c, f0 * part cESTD f0 c, cvector_neg cFST f1 cvector_neg cSND f1 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 c= cinverse * part cnode_map chypermap_of_fan c, f0 * part cESTD f0 c, cvector_neg cFST f1 cvector_neg cSND f1 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f1 c==> cIN f1 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 f2
+ |- (((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) = ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))) /\ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))))
T c= cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c/\ c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1
+ |- (((!p. (!s. (((permutes p) s) ==> (!x. (!y. ((((inverse p) y) = x) = ((p x) = y))))))) ==> ((\p. (!s. (((permutes p) s) ==> (!x. (!y. ((((inverse p) y) = x) = ((p x) = y))))))) p)) = ((\p. (!s. (((permutes p) s) ==> (!x. (!y. ((((inverse p) y) = x) = ((p x) = y))))))) p))
T c= c==> ! ! c==> cpermutes b0 b1 ! ! c= c= cinverse b0 b3 b2 c= * b0 b2 b3 * / ! c==> cpermutes b0 b1 ! ! c= c= cinverse b0 b3 b2 c= * b0 b2 b3 f0 * / ! c==> cpermutes b0 b1 ! ! c= c= cinverse b0 b3 b2 c= * b0 b2 b3 f0
+ (~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))), (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) |- ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F)
T c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF
+ ((\f. ((hyp_iso f) (H , G))) f) |- ((hyp_iso f) (H , G))
T c==> * / chyp_iso b0 c, f0 f1 f2 chyp_iso f2 c, f0 f1
+ |- (((!E. (!v. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((EE v) E) = (((set_of_edge v) V) E))))) ==> ((\E. (!v. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((EE v) E) = (((set_of_edge v) V) E))))) E)) = ((\E. (!v. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((EE v) E) = (((set_of_edge v) V) E))))) E))
T c= c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, f0 b0 c= * * part cEE b1 b0 * * * part cset_of_edge b1 f0 b0 * / ! c==> cFAN c, cvec cNUMERAL c_0 c, f0 b0 c= * * part cEE b1 b0 * * * part cset_of_edge b1 f0 b0 f1 * / ! c==> cFAN c, cvec cNUMERAL c_0 c, f0 b0 c= * * part cEE b1 b0 * * * part cset_of_edge b1 f0 b0 f1
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)) |- (!p2. ((((vector_neg p1) , (vector_neg p2)) IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (vector_neg p1)) , (vector_neg (vector_neg p2)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2))))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2))))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (vector_neg p1)) , (vector_neg (vector_neg p2)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2))))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 ! c==> cIN c, cvector_neg f1 cvector_neg b0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c/\ c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, cvector_neg cvector_neg f1 cvector_neg cvector_neg b0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg b0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg b0 c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, cvector_neg cvector_neg f1 cvector_neg cvector_neg b0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg b0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg b0
+ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) |- (((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)))
T c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c/\ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2
+ (~ (V p2)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((((~ (V p2)) /\ (V v)) ==> (~ (v = p2))) = (~ (v = p2)))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f4 c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f4 c~ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c= c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f2 f1 c~ c= f2 f1
+ |- (((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((inverse (e_fan_pair_ext (V , E))) = (e_fan_pair_ext (V , E)))))) ==> ((\V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((inverse (e_fan_pair_ext (V , E))) = (e_fan_pair_ext (V , E)))))) V)) = ((\V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((inverse (e_fan_pair_ext (V , E))) = (e_fan_pair_ext (V , E)))))) V))
T c= c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 c= * part cinverse * part ce_fan_pair_ext c, b0 b1 * part ce_fan_pair_ext c, b0 b1 * / ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 c= * part cinverse * part ce_fan_pair_ext c, b0 b1 * part ce_fan_pair_ext c, b0 b1 f0 * / ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 c= * part cinverse * part ce_fan_pair_ext c, b0 b1 * part ce_fan_pair_ext c, b0 b1 f0
+ ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- ((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V))
T c==> cIN c, f0 f1 * part cdart1_of_fan c, f2 * part cESTD f2 cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cESTD f2
+ |- (((!V. (!E. (!v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))) ==> (!P. (!V. (!E. (!v. (!u. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u))))))))) = (!P. (!V. (!E. (!v. (!u. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))))
T c= c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 * b4 cazim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b1 b2 cIN b4 * * * part cset_of_edge b3 b1 b2 * b0 cazim_cycle * * * part cset_of_edge b3 b1 b2 cvec cNUMERAL c_0 b3 b4 * b0 csigma_fan cvec cNUMERAL c_0 b1 b2 b3 b4 ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b1 b2 cIN b4 * * * part cset_of_edge b3 b1 b2 * b0 cazim_cycle * * * part cset_of_edge b3 b1 b2 cvec cNUMERAL c_0 b3 b4 * b0 csigma_fan cvec cNUMERAL c_0 b1 b2 b3 b4
+ (contravening V), (contravening ((IMAGE vector_neg) V)) |- (((((BIJ (\uv. ((vector_neg (FST uv)) , (vector_neg (SND uv))))) (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (dart1_of_fan (V , (ESTD V)))) /\ (!x. ((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))))))) = ((((BIJ (\uv. ((vector_neg (FST uv)) , (vector_neg (SND uv))))) (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (dart_of_fan (V , (ESTD V)))) /\ (!x. ((x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))))))))
T c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c= c/\ cBIJ / c, cvector_neg cFST b0 cvector_neg cSND b0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 * part cdart1_of_fan c, f0 * part cESTD f0 ! c==> cIN b0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c/\ c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, cvector_neg cFST b0 cvector_neg cSND b0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 b0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 b0 c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, cvector_neg cFST b0 cvector_neg cSND b0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 b0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 b0 c/\ cBIJ / c, cvector_neg cFST b0 cvector_neg cSND b0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 * part cdart_of_fan c, f0 * part cESTD f0 ! c==> cIN b0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c/\ c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, cvector_neg cFST b0 cvector_neg cSND b0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 b0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 b0 c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, cvector_neg cFST b0 cvector_neg cSND b0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 b0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 b0
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) |- ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) /\ (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> (~ (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c/\ cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c~ ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1
- (FAN ((vec (NUMERAL _0)) , (V , E))) |- ((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((face_map (hypermap_of_fan (V , E))) = (f_fan_pair_ext (V , E))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= * part cface_map chypermap_of_fan c, f0 f1 * part cf_fan_pair_ext c, f0 f1
+ |- ((\v. (!w. (((v INSERT (w INSERT EMPTY)) IN E) = ((v , w) IN (dart1_of_fan (V , E)))))) v)
T * / ! c= cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 cIN c, b0 b1 * part cdart1_of_fan c, f1 f0 f2
+ (!p. (!y. (!x. (!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))))) |- ((!p. (!y. (!x. (!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))))) /\ (!P. (!p. (!y. (!x. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))))))
T c==> ! ! ! ! c==> c/\ c? / cpermutes b0 b4 * b3 c= * b0 b2 b1 * b3 c= cinverse b0 b1 b2 c/\ ! ! ! ! c==> c/\ c? / cpermutes b0 b4 * b3 c= * b0 b2 b1 * b3 c= cinverse b0 b1 b2 ! ! ! ! c==> c/\ c? / cpermutes b1 b4 * b0 c= * b1 b3 b2 * b0 c= cinverse b1 b2 b3
+ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))), (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))), (contravening V), (contravening ((IMAGE vector_neg) V)), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- ((((vector_neg p1) , (vector_neg p2)) IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) /\ ((\x. ((\v. (((inverse (e_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = ((vector_neg (FST v)) , (vector_neg (SND v))))) x)) ((vector_neg p2) , (vector_neg p1))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c/\ cIN c, cvector_neg f1 cvector_neg f2 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 * / * / c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, cvector_neg cFST b1 cvector_neg cSND b1 b0 c, cvector_neg f2 cvector_neg f1
+ |- (?H. ((hypermap_of_fan (V , (ESTD V))) = H))
T c? / c= chypermap_of_fan c, f0 * part cESTD f0 b0
+ (contravening ((IMAGE vector_neg) V)) |- (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))
T c==> ccontravening * * part cIMAGE part cvector_neg f0 cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0
+ |- ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. (v = (p2 , p1))))
T * / ! c= * / * b0 b2 b1 * b0 b1 / c= b0 c, f0 f1
+ |- (!y. (((\x. ((\v. (v = (p2 , p1))) x)) y) = ((\v. (v = (p2 , p1))) y)))
T c= * / * / c= b1 c, f0 f1 b0 f2 * / c= b0 c, f0 f1 f2
+ |- ((contravening V) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) = T))
T c==> ccontravening f0 c= cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cT
+ |- (((!p2. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))) ==> ((\p2. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))) p2)) = ((\p2. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))) p2))
T c= c==> ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f1 * f3 civs_azim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 b0 * f3 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 * / c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f1 * f3 civs_azim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 b0 * f3 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 f4 * / c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f1 * f3 civs_azim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 b0 * f3 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0 f4
+ |- (?f. ((hyp_iso f) ((opposite_hypermap H) , ((hyp_conj (node_map H)) (opposite_hypermap H)))))
T c? / chyp_iso b0 c, copposite_hypermap f0 chyp_conj * part cnode_map f0 copposite_hypermap f0
+ |- ((\V. ((contravening V) ==> (contravening ((IMAGE vector_neg) V)))) V)
T * / c==> ccontravening b0 ccontravening * * part cIMAGE part cvector_neg b0 f0
+ (!p. (!y. (!x. (!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))))) |- ((!p. (!y. (!x. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x)))))) = T)
T c==> ! ! ! ! c==> c/\ c? / cpermutes b0 b4 * b3 c= * b0 b2 b1 * b3 c= cinverse b0 b1 b2 c= ! ! ! c==> c/\ c? / cpermutes b0 b3 * f0 c= * b0 b2 b1 * f0 c= cinverse b0 b1 b2 cT
+ |- (((!u. (!v. ((((vector_neg u) , (vector_neg v)) IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) = ((u , v) IN (dart1_of_fan (V , (ESTD V))))))) ==> ((\u. (!v. ((((vector_neg u) , (vector_neg v)) IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) = ((u , v) IN (dart1_of_fan (V , (ESTD V))))))) u)) = ((\u. (!v. ((((vector_neg u) , (vector_neg v)) IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) = ((u , v) IN (dart1_of_fan (V , (ESTD V))))))) u))
T c= c==> ! ! c= cIN c, cvector_neg b0 cvector_neg b1 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 cIN c, b0 b1 * part cdart1_of_fan c, f0 * part cESTD f0 * / ! c= cIN c, cvector_neg b0 cvector_neg b1 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 cIN c, b0 b1 * part cdart1_of_fan c, f0 * part cESTD f0 f1 * / ! c= cIN c, cvector_neg b0 cvector_neg b1 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 cIN c, b0 b1 * part cdart1_of_fan c, f0 * part cESTD f0 f1
+ (!H. (!G. (((iso H) G) ==> ((iso G) H)))) |- ((!H. (!G. (((iso H) G) ==> ((iso G) H)))) /\ (!G. (!H. (((iso H) G) ==> ((iso G) H)))))
T c==> ! ! c==> ciso b0 b1 ciso b1 b0 c/\ ! ! c==> ciso b0 b1 ciso b1 b0 ! ! c==> ciso b1 b0 ciso b0 b1
+ (!H. (!G. (((iso H) G) ==> ((iso G) H)))) |- (((!G. (((iso H) G) ==> ((iso G) H))) ==> ((\G. (((iso H) G) ==> ((iso G) H))) G)) = ((\G. (((iso H) G) ==> ((iso G) H))) G))
T c==> ! ! c==> ciso b0 b1 ciso b1 b0 c= c==> ! c==> ciso f0 b0 ciso b0 f0 * / c==> ciso f0 b0 ciso b0 f0 f1 * / c==> ciso f0 b0 ciso b0 f0 f1
- |- ((\a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) a)
T * / ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 f2
+ (!V. (!E. (!p1. (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))))) |- (!p2. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2))))
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 * b4 civs_azim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f1 * f3 civs_azim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 b0 * f3 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 b0
- ((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))), (p2 IN (((set_of_edge p1) V) (ESTD V))) |- (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V)))
T c==> c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2
+ (contravening V), ((hypermap_of_fan (V , (ESTD V))) = H) |- (?f. ((hyp_iso f) ((hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) , ((hyp_conj (node_map H)) (opposite_hypermap H)))))
T c==> ccontravening f0 c==> c= chypermap_of_fan c, f0 * part cESTD f0 f1 c? / chyp_iso b0 c, chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1
- (p2 IN (((set_of_edge p1) V) (ESTD V))) |- (((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) = (T ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))))
T c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 c==> cT c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0
- (~ (V p1)), (~ (w = p1)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((~ (w = p1)) /\ (w = p1))
T c==> c~ * f0 f1 c==> c~ c= f2 f1 c==> c/\ c/\ * f0 f3 c/\ * f0 f2 c/\ c~ c= f3 f2 creal_le cdistance c, f3 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f1 c= b0 f4 c/\ c~ c= b0 f3 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f4 c\/ c= b0 f3 c= b0 f2 c/\ c~ c= f2 f1 c= f2 f1
+ (~ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) |- (~ (((p1 INSERT (((((ivs_azim_cycle (GSPEC (\GEN%PVAR%5439. (?w. (((SETSPEC GEN%PVAR%5439) (((p1 INSERT (w INSERT EMPTY)) IN (ESTD V)) /\ (w IN V))) w))))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) /\ (((((ivs_azim_cycle (GSPEC (\GEN%PVAR%5439. (?w. (((SETSPEC GEN%PVAR%5439) (((p1 INSERT (w INSERT EMPTY)) IN (ESTD V)) /\ (w IN V))) w))))) (vec (NUMERAL _0))) p1) p2) IN V)))
T c==> c~ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c~ c/\ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * part cGSPEC / c? / cSETSPEC b0 c/\ cIN * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * part cESTD f1 cIN b1 f1 b1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 cIN civs_azim_cycle * part cGSPEC / c? / cSETSPEC b0 c/\ cIN * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * part cESTD f1 cIN b1 f1 b1 cvec cNUMERAL c_0 f0 f2 f1
+ (!H. (!G. (!f. (((hyp_iso f) (H , G)) ==> ((iso H) G))))) |- (((?f. ((hyp_iso f) (H , G))) ==> ((iso H) G)) = T)
T c==> ! ! ! c==> chyp_iso b2 c, b0 b1 ciso b0 b1 c= c==> c? / chyp_iso b0 c, f0 f1 ciso f0 f1 cT
- (_10268336 = _10268338) |- ((_10268336 = _10268338) /\ ((~ (_10268335 = _10268337)) \/ (((IMAGE _10268335) _10268336) = ((IMAGE _10268337) _10268338))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cIMAGE f2 f0 * * part cIMAGE f3 f1
+ |- (((!f. (!y. (((\x. (f x)) y) = (f y)))) ==> ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. v))) = ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. v)))
T c= c==> ! ! c= * / * b0 b2 b1 * b0 b1 * / ! c= * / * b0 b2 b1 * b0 b1 / b0 * / ! c= * / * b0 b2 b1 * b0 b1 / b0
+ (!p. (!y. (!x. (!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))))) |- (((!x. (!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))) ==> ((\x. (!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))) x)) = ((\x. (!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))) x))
T c==> ! ! ! ! c==> c/\ c? / cpermutes b0 b4 * b3 c= * b0 b2 b1 * b3 c= cinverse b0 b1 b2 c= c==> ! ! c==> c/\ c? / cpermutes f0 b2 * b1 c= * f0 b0 f1 * b1 c= cinverse f0 f1 b0 * / ! c==> c/\ c? / cpermutes f0 b2 * b1 c= * f0 b0 f1 * b1 c= cinverse f0 f1 b0 f2 * / ! c==> c/\ c? / cpermutes f0 b2 * b1 c= * f0 b0 f1 * b1 c= cinverse f0 f1 b0 f2
- ((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))), (p2 IN (((set_of_edge p1) V) (ESTD V))) |- ((p2 IN (((set_of_edge p1) V) (ESTD V))) /\ ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) = T))
T c==> c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 cT
+ |- ((\e'. ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) = g') ==> ((g' ==> ((p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = t')) ==> (((~ g') ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND g') t') e')))))) e')
T * / c==> c= cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 c==> c==> f3 c= c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f4 c==> c==> c~ f3 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 b0 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND f3 f4 b0 f5
+ (contravening V), (contravening ((IMAGE vector_neg) V)) |- ((contravening ((IMAGE vector_neg) V)) /\ ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> (~ (!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V))))))))))))
T c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c/\ ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c~ ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0
+ (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) |- ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) = (e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))
T c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c= * part cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 * part ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- (((!V. (!v. (!w. (((contravening V) /\ ((v , w) IN (dart1_of_fan (V , (ESTD V))))) ==> (((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg v) , (vector_neg w))) = ((vector_neg v) , (vector_neg (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) v) w)))))))) ==> ((\V. (!v. (!w. (((contravening V) /\ ((v , w) IN (dart1_of_fan (V , (ESTD V))))) ==> (((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg v) , (vector_neg w))) = ((vector_neg v) , (vector_neg (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) v) w)))))))) V)) = ((\V. (!v. (!w. (((contravening V) /\ ((v , w) IN (dart1_of_fan (V , (ESTD V))))) ==> (((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg v) , (vector_neg w))) = ((vector_neg v) , (vector_neg (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) v) w)))))))) V))
T c= c==> ! ! ! c==> c/\ ccontravening b0 cIN c, b1 b2 * part cdart1_of_fan c, b0 * part cESTD b0 c= cn_fan_pair_ext c, * * part cIMAGE part cvector_neg b0 * part cESTD * * part cIMAGE part cvector_neg b0 c, cvector_neg b1 cvector_neg b2 c, cvector_neg b1 cvector_neg cinverse_sigma_fan cvec cNUMERAL c_0 b0 * part cESTD b0 b1 b2 * / ! ! c==> c/\ ccontravening b0 cIN c, b1 b2 * part cdart1_of_fan c, b0 * part cESTD b0 c= cn_fan_pair_ext c, * * part cIMAGE part cvector_neg b0 * part cESTD * * part cIMAGE part cvector_neg b0 c, cvector_neg b1 cvector_neg b2 c, cvector_neg b1 cvector_neg cinverse_sigma_fan cvec cNUMERAL c_0 b0 * part cESTD b0 b1 b2 f0 * / ! ! c==> c/\ ccontravening b0 cIN c, b1 b2 * part cdart1_of_fan c, b0 * part cESTD b0 c= cn_fan_pair_ext c, * * part cIMAGE part cvector_neg b0 * part cESTD * * part cIMAGE part cvector_neg b0 c, cvector_neg b1 cvector_neg b2 c, cvector_neg b1 cvector_neg cinverse_sigma_fan cvec cNUMERAL c_0 b0 * part cESTD b0 b1 b2 f0
- |- ((!V. (!p1. ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2))))) = T)
T c= ! ! c==> c? / c? / c/\ c/\ * b0 b2 c/\ * b0 b3 c/\ c~ c= b2 b3 creal_le cdistance c, b2 b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b4 b1 c= b4 f0 c\/ c= b4 b2 c= b4 b3 c/\ * b0 b1 * b0 f0 cT
+ ((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V)) |- (((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V)) = T)
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cESTD f2 c= cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cESTD f2 cT
+ |- (((!x. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x)))) ==> ((\x. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x)))) x)) = ((\x. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x)))) x))
T c= c==> ! c==> c/\ c? / cpermutes f0 b1 * f1 c= * f0 b0 f2 * f1 c= cinverse f0 f2 b0 * / c==> c/\ c? / cpermutes f0 b1 * f1 c= * f0 b0 f2 * f1 c= cinverse f0 f2 b0 f3 * / c==> c/\ c? / cpermutes f0 b1 * f1 c= * f0 b0 f2 * f1 c= cinverse f0 f2 b0 f3
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ (~ (V p1)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((~ (V p1)) /\ (V p1))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f1 c= b0 f4 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f4 c\/ c= b0 f2 c= b0 f3 c/\ c~ * f0 f1 * f0 f1
- ((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) |- (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) u) = ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u)))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 c= csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f2 cazim_cycle * * * part cset_of_edge f3 f0 f1 cvec cNUMERAL c_0 f3 f2
- (!p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))), ((permutes p) (dart H)) |- ((!p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))) /\ ((hyp_iso p) (H , ((hyp_conj p) H))))
T c==> ! ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1 c==> cpermutes f0 * part cdart f1 c/\ ! ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1 chyp_iso f0 c, f1 chyp_conj f0 f1
+ |- ((((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) ==> (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V)) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)))) = q')) ==> ((((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V)) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))))) = (((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) ==> q')))
T c==> c==> c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 c= c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part cESTD f2 c= cCOND cIN * * part cINSERT f1 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 part cEMPTY * part cESTD f2 c, f1 cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 c, f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 c, f1 f0 f3 c= c==> c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part cESTD f2 c= cCOND cIN * * part cINSERT f1 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 part cEMPTY * part cESTD f2 c, f1 cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 c, f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 c, f1 f0 c==> c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 f3
- |- ((((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))) = (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))))
T c= c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2
- |- ((~ (_10268410 = _10268412)) \/ ((~ (_10268411 = _10268413)) \/ (((real_mul _10268410) _10268411) = ((real_mul _10268412) _10268413))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= creal_mul f0 f2 creal_mul f1 f3
- (contravening V) |- (T = (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))))
T c==> ccontravening f0 c= cT cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0
- |- ((((inverse (e_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2))))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2))))))) = ((\x. ((\v. (((inverse (e_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = ((vector_neg (FST v)) , (vector_neg (SND v))))) x)) ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg p1) , (vector_neg p2)))))
T c= c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg f2 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg f2 * / * / c= cinverse * part ce_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, cvector_neg cFST b1 cvector_neg cSND b1 b0 ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg f2
- (_10268406 = _10268407) |- ((_10268406 = _10268407) /\ ((NUMERAL _10268406) = (NUMERAL _10268407)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- |- ((!V'. ((~ (contravening V')) \/ ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) = ((!V. (~ (contravening V))) \/ ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V))))))
T c= ! c\/ c~ ccontravening b0 c= * part cdart_of_fan c, f0 * part cESTD f0 * part cdart1_of_fan c, f0 * part cESTD f0 c\/ ! c~ ccontravening b0 c= * part cdart_of_fan c, f0 * part cESTD f0 * part cdart1_of_fan c, f0 * part cESTD f0
- (!H. (!G. (((iso H) G) ==> ((iso G) H)))), ((iso H) G) |- (((iso H) G) /\ ((iso G) H))
T c==> ! ! c==> ciso b0 b1 ciso b1 b0 c==> ciso f0 f1 c/\ ciso f0 f1 ciso f1 f0
- (_10268410 = _10268412) |- ((_10268411 = _10268413) ==> (((real_mul _10268410) _10268411) = ((real_mul _10268412) _10268413)))
T c==> c= f0 f1 c==> c= f2 f3 c= creal_mul f0 f2 creal_mul f1 f3
- (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w))))))), (~ ((V p1) /\ (V p2))) |- F
T c==> c? / c/\ c/\ * f0 f1 c/\ * f0 b0 c/\ c~ c= f1 b0 creal_le cdistance c, f1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b1 f2 c= b1 f3 c/\ c~ c= b1 f1 c~ c= b1 b0 ! c\/ c/\ c~ c= b1 f2 c~ c= b1 f3 c\/ c= b1 f1 c= b1 b0 c==> c~ c/\ * f0 f2 * f0 f3 cF
- (_10268311 = _10268312) |- ((((contravening _10268311) = (contravening _10268312)) ==> ((contravening _10268312) \/ (~ (contravening _10268311)))) = ((contravening _10268312) \/ (~ (contravening _10268311))))
T c==> c= f0 f1 c= c==> c= ccontravening f0 ccontravening f1 c\/ ccontravening f1 c~ ccontravening f0 c\/ ccontravening f1 c~ ccontravening f0
- (_10268402 = _10268403) |- ((_10268402 = _10268403) /\ ((BIT1 _10268402) = (BIT1 _10268403)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- (contravening V) |- ((~ (contravening V)) ==> (contravening V))
T c==> ccontravening f0 c==> c~ ccontravening f0 ccontravening f0
- |- ((?w'. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. ((((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w')))) /\ (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w'))))))) = (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (?w. (!x. ((((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w)))) /\ (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w))))))))
T c= c? / c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c/\ c\/ c\/ c= b1 f3 c= b1 f4 c/\ c~ c= b1 f1 c~ c= b1 b0 c\/ c/\ c~ c= b1 f3 c~ c= b1 f4 c\/ c= b1 f1 c= b1 b0 c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c? / ! c/\ c\/ c\/ c= b1 f3 c= b1 f4 c/\ c~ c= b1 f1 c~ c= b1 b0 c\/ c/\ c~ c= b1 f3 c~ c= b1 f4 c\/ c= b1 f1 c= b1 b0
- |- ((?w'. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w')))))) = (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (?w. (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w)))))))
T c= c? / c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b1 f3 c= b1 f4 c\/ c= b1 f1 c= b1 b0 c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c? / ! c= c\/ c= b1 f3 c= b1 f4 c\/ c= b1 f1 c= b1 b0
- (_10268410 = _10268412) |- ((_10268410 = _10268412) /\ ((~ (_10268411 = _10268413)) \/ (((real_mul _10268410) _10268411) = ((real_mul _10268412) _10268413))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= creal_mul f0 f2 creal_mul f1 f3
- |- ((~ (_10268406 = _10268407)) \/ ((NUMERAL _10268406) = (NUMERAL _10268407)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (!p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))) |- ((\p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))) p)
T c==> ! ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1 * / ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1 f0
- (FAN ((vec (NUMERAL _0)) , (V , E))) |- ((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (((EE v) E) = (((set_of_edge v) V) E)))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= * * part cEE f2 f1 * * * part cset_of_edge f2 f0 f1
- (p2 IN (((set_of_edge p1) V) (ESTD V))) |- ((p2 IN (((set_of_edge p1) V) (ESTD V))) = T)
T c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 cT
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F) |- (((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F) /\ ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F))
T c==> c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c/\ c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF
- (!V. (!E. (!p1. (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))))), (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) |- ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) /\ (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 * b4 civs_azim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 * f4 civs_azim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 f3 c/\ c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 * f4 civs_azim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 f3 * f4 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3
- |- ((((x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) = (x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> (((x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x)))))) = q')) ==> (((x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))))) = ((x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> q')))) = (((x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x)))))) = q')) ==> (((x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))))) = ((x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> q'))))
T c= c==> c= cIN f0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 cIN f0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c==> c==> cIN f0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c= c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 f2 c= c==> cIN f0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c==> cIN f0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f2 c==> c==> cIN f0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c= c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 f2 c= c==> cIN f0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c==> cIN f0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f2
- (~ (V p2)), (p2 = v), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((p2 = v) /\ (~ (p2 = v)))
T c==> c~ * f0 f1 c==> c= f1 f2 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f4 c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f4 c~ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c/\ c= f1 f2 c~ c= f1 f2
- ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) |- (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) /\ (((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)) = ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))))
T c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c/\ c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2
- |- ((_10268406 = _10268407) ==> ((NUMERAL _10268406) = (NUMERAL _10268407)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) |- (T = (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c= cT cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0
- (~ (V v)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((~ (V v)) /\ (V v))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f3 c= b0 f4 c/\ c~ c= b0 f1 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c/\ c~ * f0 f1 * f0 f1
- |- (T = (((~ (contravening _10268304)) \/ ((dart_of_fan (_10268304 , (ESTD _10268304))) = (dart1_of_fan (_10268304 , (ESTD _10268304))))) = (((dart_of_fan (_10268304 , (ESTD _10268304))) = (dart1_of_fan (_10268304 , (ESTD _10268304)))) \/ (~ (contravening _10268304)))))
T c= cT c= c\/ c~ ccontravening f0 c= * part cdart_of_fan c, f0 * part cESTD f0 * part cdart1_of_fan c, f0 * part cESTD f0 c\/ c= * part cdart_of_fan c, f0 * part cESTD f0 * part cdart1_of_fan c, f0 * part cESTD f0 c~ ccontravening f0
- |- ((x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x)))))) = ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))))))
T c==> cIN f0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c= c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0
- |- ((((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V))) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , (((((sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))) = ((\x. ((\v. (((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN (ESTD V))) /\ ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , v)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)))) x)) (((((sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))))
T c= c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cESTD f0 c= cCOND cIN * * part cINSERT f1 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 part cEMPTY * part cESTD f0 c, f1 csigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 f1 civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 c, f1 civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 c, f1 f2 * / * / c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cESTD f0 c= cCOND cIN * * part cINSERT f1 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 part cEMPTY * part cESTD f0 c, f1 b1 c, f1 civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2 c, f1 f2 b0 csigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 f1 civs_azim_cycle * * * part cset_of_edge f1 f0 * part cESTD f0 cvec cNUMERAL c_0 f1 f2
- (~ (V p1)), (p1 = v), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((p1 = v) /\ (~ (p1 = v)))
T c==> c~ * f0 f1 c==> c= f1 f2 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f1 c= b0 f4 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f4 c\/ c= b0 f2 c= b0 f3 c/\ c= f1 f2 c~ c= f1 f2
- ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))) |- ((((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F)))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))))
T c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF
- |- ((~ (_10268400 = _10268401)) \/ ((distance _10268400) = (distance _10268401)))
T c\/ c~ c= f0 f1 c= cdistance f0 cdistance f1
- (~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) |- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) /\ F)
T c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 c/\ c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> ((p1 , p2) = (p1 , p2))) ==> (((~ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) e')))) = (((~ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) e'))))
T c= c==> c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= c, f0 f2 c, f0 f2 c==> c==> c~ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f3 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 f3 c==> c==> c~ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f3 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 f3
- (!V. (!E. (!v. (!w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w))))))))), (((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) |- ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) /\ (P ((e_fan_pair_ext (V , E)) (v , w))))
T c==> ! ! ! ! ! c==> c/\ cIN c, b2 b3 * part cdart_of_fan c, b0 b1 * b4 c, b3 b2 * b4 ce_fan_pair_ext c, b0 b1 c, b2 b3 c==> c/\ cIN c, f0 f1 * part cdart_of_fan c, f2 f3 * f4 c, f1 f0 c/\ c/\ cIN c, f0 f1 * part cdart_of_fan c, f2 f3 * f4 c, f1 f0 * f4 ce_fan_pair_ext c, f2 f3 c, f0 f1
- (FAN ((vec (NUMERAL _0)) , (V , E))) |- ((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((inverse (e_fan_pair_ext (V , E))) = (e_fan_pair_ext (V , E))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= * part cinverse * part ce_fan_pair_ext c, f0 f1 * part ce_fan_pair_ext c, f0 f1
- ((((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ((hyp_conj (node_map H)) (opposite_hypermap H))) /\ ((iso ((hyp_conj (node_map H)) (opposite_hypermap H))) (opposite_hypermap H))) ==> ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (opposite_hypermap H))) |- (((((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ((hyp_conj (node_map H)) (opposite_hypermap H))) /\ ((iso ((hyp_conj (node_map H)) (opposite_hypermap H))) (opposite_hypermap H))) ==> ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (opposite_hypermap H))) /\ ((((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ((hyp_conj (node_map H)) (opposite_hypermap H))) /\ ((iso ((hyp_conj (node_map H)) (opposite_hypermap H))) (opposite_hypermap H))) ==> ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (opposite_hypermap H))))
T c==> c==> c/\ ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1 ciso chyp_conj * part cnode_map f1 copposite_hypermap f1 copposite_hypermap f1 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 copposite_hypermap f1 c/\ c==> c/\ ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1 ciso chyp_conj * part cnode_map f1 copposite_hypermap f1 copposite_hypermap f1 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 copposite_hypermap f1 c==> c/\ ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1 ciso chyp_conj * part cnode_map f1 copposite_hypermap f1 copposite_hypermap f1 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 copposite_hypermap f1
- |- (((T ==> (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) = ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)))) ==> (((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) = (T ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))))) = (((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) = (T ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)))))
T c= c==> c==> cT c= c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= c==> cIN f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c==> cT c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= c==> cIN f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c==> cT c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2
- |- ((!E. (!x. (!v. (!w. (((FAN (x , (V , E))) /\ (w IN ((EE v) E))) ==> ((((((ivs_azim_cycle ((EE v) E)) x) v) w) IN ((EE v) E)) /\ (((((azim_cycle ((EE v) E)) x) v) ((((ivs_azim_cycle ((EE v) E)) x) v) w)) = w))))))) = T)
T c= ! ! ! ! c==> c/\ cFAN c, b1 c, f0 b0 cIN b3 * * part cEE b2 b0 c/\ cIN civs_azim_cycle * * part cEE b2 b0 b1 b2 b3 * * part cEE b2 b0 c= cazim_cycle * * part cEE b2 b0 b1 b2 civs_azim_cycle * * part cEE b2 b0 b1 b2 b3 b3 cT
- |- ((p ==> (~ p)) = (~ p))
T c= c==> f0 c~ f0 c~ f0
- ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))) |- ((((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F)))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))))
T c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
- |- ((((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F)))))))) = ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))))
T c= c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF
- (_10268332 = _10268334), (_10268331 = _10268333) |- ((_10268332 = _10268334) /\ ((_10268331 , _10268332) = (_10268333 , _10268334)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= c, f2 f0 c, f3 f1
- |- (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> ((((inverse (edge_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((inverse (node_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))))) = ((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> ((((inverse (edge_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((inverse (node_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))))))
T c= c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cinverse * part cedge_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cinverse * part cedge_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0
- |- (T = (((~ (_10268394 = _10268395)) \/ ((V _10268395) \/ (~ (V _10268394)))) = ((V _10268395) \/ ((~ (_10268394 = _10268395)) \/ (~ (V _10268394))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ * f2 f1 c~ * f2 f0 c\/ * f2 f1 c\/ c~ c= f0 f1 c~ * f2 f0
- (b = c) |- (F = F)
T c==> c= f0 f1 c= cF cF
- ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) |- (((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) /\ ((p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))))
T c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c/\ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2
- |- ((((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) = p') ==> ((p' ==> (((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)) = q')) ==> ((((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))) = (p' ==> q'))))
T c==> c= c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 f3 c==> c==> f3 c= c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 f4 c= c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 c==> f3 f4
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F) ==> ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F)) ==> (((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F) ==> ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F))) = (((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F) ==> ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F)))
T c= c==> c==> c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- ((((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> B) /\ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> B) ==> (((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> B) /\ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> B))
T c==> c==> c/\ c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 c==> c/\ c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3
- (~ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V))))), (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) |- ((~ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V))))) /\ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))))
T c==> c~ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c/\ c~ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0
- |- ((_10268402 = _10268403) ==> ((BIT1 _10268402) = (BIT1 _10268403)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
- |- (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> (((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)) = ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))))
T c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2
- ((p1 IN V) /\ (p2 IN V)) |- ((p1 IN V) = T)
T c==> c/\ cIN f0 f1 cIN f2 f1 c= cIN f0 f1 cT
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- ((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))), (p2 IN (((set_of_edge p1) V) (ESTD V))) |- ((p2 IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))
T c==> c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0
- ((iso H) G) |- ((!H. (!G. (((iso H) G) ==> ((iso G) H)))) ==> ((iso G) H))
T c==> ciso f0 f1 c==> ! ! c==> ciso b0 b1 ciso b1 b0 ciso f1 f0
- (!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))), (contravening V) |- ((~ ((dart1_of_fan (V , (ESTD V))) = (dart_of_fan (V , (ESTD V))))) ==> ((dart1_of_fan (V , (ESTD V))) = (dart_of_fan (V , (ESTD V)))))
T c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 c==> ccontravening f0 c==> c~ c= * part cdart1_of_fan c, f0 * part cESTD f0 * part cdart_of_fan c, f0 * part cESTD f0 c= * part cdart1_of_fan c, f0 * part cESTD f0 * part cdart_of_fan c, f0 * part cESTD f0
- (~ (V p1)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((p1 = v) ==> (~ (p1 = v)))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f1 c= b0 f4 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f4 c\/ c= b0 f2 c= b0 f3 c==> c= f1 f2 c~ c= f1 f2
- (~ (V p2)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((v = p2) ==> (~ (v = p2)))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f4 c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f4 c~ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c==> c= f2 f1 c~ c= f2 f1
- (contravening ((IMAGE vector_neg) V)) |- (T = (contravening ((IMAGE vector_neg) V)))
T c==> ccontravening * * part cIMAGE part cvector_neg f0 c= cT ccontravening * * part cIMAGE part cvector_neg f0
- |- (((!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))) ==> ((\b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))) b)) = ((\b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))) b))
T c= c==> ! c= c= c, f0 f1 c, f2 b0 c/\ c= f0 f2 c= f1 b0 * / c= c= c, f0 f1 c, f2 b0 c/\ c= f0 f2 c= f1 b0 f3 * / c= c= c, f0 f1 c, f2 b0 c/\ c= f0 f2 c= f1 b0 f3
- |- ((_10268319 = _10268320) ==> ((dart1_of_fan _10268319) = (dart1_of_fan _10268320)))
T c==> c= f0 f1 c= * part cdart1_of_fan f0 * part cdart1_of_fan f1
- (~ (V p1)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((~ (p1 = w)) ==> (p1 = w))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f1 c= b0 f4 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f4 c\/ c= b0 f2 c= b0 f3 c==> c~ c= f1 f3 c= f1 f3
- |- (((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) = p') ==> ((p' ==> (((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x)))))) = q')) ==> (((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))))) = (p' ==> q'))))
T c==> c= cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f2 c==> c==> f2 c= c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 f3 c= c==> cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c==> f2 f3
- (x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) |- ((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) = T)
T c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c= cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 cT
- (~ (V p1)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((v = p1) ==> (~ (v = p1)))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f1 c= b0 f4 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f4 c\/ c= b0 f2 c= b0 f3 c==> c= f2 f1 c~ c= f2 f1
- (contravening V) |- ((contravening V) /\ ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))
T c==> ccontravening f0 c/\ ccontravening f0 c= * part cdart_of_fan c, f0 * part cESTD f0 * part cdart1_of_fan c, f0 * part cESTD f0
- |- ((FINITE (dart H)) = T)
T c= cFINITE * part cdart f0 cT
- |- ((!E'. ((~ (FAN ((vec (NUMERAL _0)) , (V , E')))) \/ ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E))))) = ((!E. (~ (FAN ((vec (NUMERAL _0)) , (V , E))))) \/ ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))
T c= ! c\/ c~ cFAN c, cvec cNUMERAL c_0 c, f0 b0 cpermutes * part cn_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1 c\/ ! c~ cFAN c, cvec cNUMERAL c_0 c, f0 b0 cpermutes * part cn_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1
- |- ((\V. (!p1. ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F))) V)
T * / ! c==> c~ c==> c? / c? / c/\ c/\ * b0 b2 c/\ * b0 b3 c/\ c~ c= b2 b3 creal_le cdistance c, b2 b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b4 b1 c= b4 f0 c\/ c= b4 b2 c= b4 b3 c/\ * b0 b1 * b0 f0 cF f1
- |- ((\b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))) b)
T * / c= c= c, f0 f1 c, f2 b0 c/\ c= f0 f2 c= f1 b0 f3
- ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))), (((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F)))))))) |- ((((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F)))))))) /\ ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))))
T c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c/\ c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF
- |- ((\y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) y)
T * / ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 f1
- |- ((\t'. (!e'. ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) = g') ==> ((g' ==> ((p1 , p2) = t')) ==> (((~ g') ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 c==> c==> f3 c= c, f0 f2 b0 c==> c==> c~ f3 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 b1 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND f3 b0 b1 f4
- |- ((_10268323 = _10268324) ==> ((vec _10268323) = (vec _10268324)))
T c==> c= f0 f1 c= cvec f0 cvec f1
- (~ (P c)), (P c) |- ((~ (P c)) /\ (P c))
T c==> c~ * f0 f1 c==> * f0 f1 c/\ c~ * f0 f1 * f0 f1
- ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))), (((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F)))))))) |- ((((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F)))))))) /\ ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))))
T c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c/\ c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF
- |- ((_10268336 = _10268338) ==> ((~ (_10268335 = _10268337)) \/ (((IMAGE _10268335) _10268336) = ((IMAGE _10268337) _10268338))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cIMAGE f2 f0 * * part cIMAGE f3 f1
- (((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F) ==> ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F)) |- ((((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F) ==> ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F)) /\ (((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F) ==> ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F)))
T c==> c==> c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c/\ c==> c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF
- ((permutes p) (dart H)) |- ((!p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))) ==> ((hyp_iso p) (H , ((hyp_conj p) H))))
T c==> cpermutes f0 * part cdart f1 c==> ! ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1 chyp_iso f0 c, f1 chyp_conj f0 f1
- |- (T = (((~ (FAN ((vec (NUMERAL _0)) , (_10268346 , _10268347)))) \/ ((permutes (n_fan_pair_ext (_10268346 , _10268347))) (dart_of_fan (_10268346 , _10268347)))) = (((permutes (n_fan_pair_ext (_10268346 , _10268347))) (dart_of_fan (_10268346 , _10268347))) \/ (~ (FAN ((vec (NUMERAL _0)) , (_10268346 , _10268347)))))))
T c= cT c= c\/ c~ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cpermutes * part cn_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1 c\/ cpermutes * part cn_fan_pair_ext c, f0 f1 * part cdart_of_fan c, f0 f1 c~ cFAN c, cvec cNUMERAL c_0 c, f0 f1
- (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))
T c==> c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f3 c= b0 f4 c/\ c~ c= b0 f1 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f1 c= b0 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0
- |- (((((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F)))))))) ==> (((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))))) = (((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F)))))))))
T c= c==> c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF
- |- ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- ((hypermap_of_fan (V , (ESTD V))) = H) |- ((\H. ((hypermap_of_fan (V , (ESTD V))) = H)) H)
T c==> c= chypermap_of_fan c, f0 * part cESTD f0 f1 * / c= chypermap_of_fan c, f0 * part cESTD f0 b0 f1
- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- (_10268390 = _10268392), (_10268391 = _10268393) |- (((((real_le _10268390) _10268391) = ((real_le _10268392) _10268393)) ==> (((real_le _10268392) _10268393) \/ (~ ((real_le _10268390) _10268391)))) = (((real_le _10268392) _10268393) \/ (~ ((real_le _10268390) _10268391))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= creal_le f0 f2 creal_le f1 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2 c\/ creal_le f1 f3 c~ creal_le f0 f2
- |- ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))))
T c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2
- |- ((~ (_10268319 = _10268320)) \/ ((dart1_of_fan _10268319) = (dart1_of_fan _10268320)))
T c\/ c~ c= f0 f1 c= * part cdart1_of_fan f0 * part cdart1_of_fan f1
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F), (((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F) ==> ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F)) |- (((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F) /\ ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F))
T c==> c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c==> c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c/\ c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF
- (!p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))) |- ((!p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))) /\ (!p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))))
T c==> ! ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1 c/\ ! ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1 ! ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1
- (!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))), (~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))), (contravening V), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) /\ ((p1 , p2) IN (dart_of_fan (V , (ESTD V)))))
T c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 c==> c~ cIN c, f0 f1 * part cdart_of_fan c, f2 * part cESTD f2 c==> ccontravening f2 c==> cIN c, f0 f1 * part cdart1_of_fan c, f2 * part cESTD f2 c/\ c~ cIN c, f0 f1 * part cdart_of_fan c, f2 * part cESTD f2 cIN c, f0 f1 * part cdart_of_fan c, f2 * part cESTD f2
- |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- ((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))), (p2 IN (((set_of_edge p1) V) (ESTD V))) |- ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))
T c==> c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0
- |- ((\q'. ((((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) = p') ==> ((p' ==> (((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)) = q')) ==> ((((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 f3 c==> c==> f3 c= c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 b0 c= c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 c==> f3 b0 f4
- |- ((_10268408 = _10268409) ==> ((real_of_num _10268408) = (real_of_num _10268409)))
T c==> c= f0 f1 c= creal_of_num f0 creal_of_num f1
- |- ((!x'. (((~ (x' = p1)) /\ (~ (x' = p2))) \/ ((x = v) \/ (x = w)))) = ((!x. ((~ (x = p1)) /\ (~ (x = p2)))) \/ ((x = v) \/ (x = w))))
T c= ! c\/ c/\ c~ c= b0 f0 c~ c= b0 f1 c\/ c= f2 f3 c= f2 f4 c\/ ! c/\ c~ c= b0 f0 c~ c= b0 f1 c\/ c= f2 f3 c= f2 f4
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) |- ((~ (FAN ((vec (NUMERAL _0)) , (V , (ESTD V))))) ==> (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> c~ cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0
- (_10268396 = _10268398) |- ((_10268396 = _10268398) /\ ((~ (_10268397 = _10268399)) \/ ((_10268396 , _10268397) = (_10268398 , _10268399))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- |- ((\g'. (!t'. (!e'. ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) = g') ==> ((g' ==> ((p1 , p2) = t')) ==> (((~ g') ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 b0 c==> c==> b0 c= c, f0 f2 b1 c==> c==> c~ b0 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 b2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND b0 b1 b2 f3
- (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((_10268364 = p1) \/ ((_10268364 = p2) \/ (~ (_10268364 = v))))
T c==> c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f3 c= b0 f4 c/\ c~ c= b0 f1 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c\/ c= f5 f3 c\/ c= f5 f4 c~ c= f5 f1
- |- ((_10268309 = _10268310) ==> ((FAN _10268310) \/ (~ (FAN _10268309))))
T c==> c= f0 f1 c\/ cFAN f1 c~ cFAN f0
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))) |- (((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))) /\ ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))))
T c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c/\ c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF
- (!p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))) |- ((!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H))))) = T)
T c==> ! ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1 c= ! c==> cpermutes f0 * part cdart b0 chyp_iso f0 c, b0 chyp_conj f0 b0 cT
- (_10268323 = _10268324) |- ((_10268323 = _10268324) /\ ((vec _10268323) = (vec _10268324)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cvec f0 cvec f1
- (~ (V p2)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((~ (w = p2)) ==> (w = p2))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f4 c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f4 c~ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c==> c~ c= f3 f1 c= f3 f1
- (_10268319 = _10268320) |- ((_10268319 = _10268320) /\ ((dart1_of_fan _10268319) = (dart1_of_fan _10268320)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * part cdart1_of_fan f0 * part cdart1_of_fan f1
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- ((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) |- (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ ((((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2) = ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2)))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c= cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3 civs_azim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 f3
- |- ((?w'. (((V v) /\ ((V w') /\ ((~ (v = w')) /\ ((real_le (distance (v , w'))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w))))))) = ((?w. ((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))))
T c= c? / c/\ c/\ * f0 f1 c/\ * f0 b0 c/\ c~ c= f1 b0 creal_le cdistance c, f1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b1 f2 c= b1 f3 c/\ c~ c= b1 f1 c~ c= b1 f4 ! c\/ c/\ c~ c= b1 f2 c~ c= b1 f3 c\/ c= b1 f1 c= b1 f4 c/\ c? / c/\ * f0 f1 c/\ * f0 b0 c/\ c~ c= f1 b0 creal_le cdistance c, f1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f2 c= b0 f3 c/\ c~ c= b0 f1 c~ c= b0 f4 ! c\/ c/\ c~ c= b0 f2 c~ c= b0 f3 c\/ c= b0 f1 c= b0 f4
- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))), (~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))), (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) |- ((~ F) ==> F)
T c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> c~ cF cF
- (_10268400 = _10268401) |- ((_10268400 = _10268401) /\ ((distance _10268400) = (distance _10268401)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cdistance f0 cdistance f1
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- ((_10268410 = _10268412) ==> ((~ (_10268411 = _10268413)) \/ (((real_mul _10268410) _10268411) = ((real_mul _10268412) _10268413))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= creal_mul f0 f2 creal_mul f1 f3
- |- (((!g'. (!t'. (!e'. ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) = g') ==> ((g' ==> ((p1 , p2) = t')) ==> (((~ g') ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) = g') ==> ((g' ==> ((p1 , p2) = t')) ==> (((~ g') ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) = g') ==> ((g' ==> ((p1 , p2) = t')) ==> (((~ g') ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 b0 c==> c==> b0 c= c, f0 f2 b1 c==> c==> c~ b0 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 b2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND b0 b1 b2 * / ! ! c==> c= cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 b0 c==> c==> b0 c= c, f0 f2 b1 c==> c==> c~ b0 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 b2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND b0 b1 b2 f3 * / ! ! c==> c= cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 b0 c==> c==> b0 c= c, f0 f2 b1 c==> c==> c~ b0 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 b2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND b0 b1 b2 f3
- (!V. (!E. (!v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))), (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) |- ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) /\ (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 * b4 cazim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 * f4 cazim_cycle * * * part cset_of_edge f3 f0 f1 cvec cNUMERAL c_0 f3 f2 c/\ c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 * f4 cazim_cycle * * * part cset_of_edge f3 f0 f1 cvec cNUMERAL c_0 f3 f2 * f4 csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f2
- (!V. (!E. (!v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))), (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) |- ((!V. (!E. (!v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))) /\ (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))
T c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 * b4 cazim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 * f4 cazim_cycle * * * part cset_of_edge f3 f0 f1 cvec cNUMERAL c_0 f3 f2 c/\ ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 * b4 cazim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 * f4 csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f2
- (_10268325 = _10268326) |- ((_10268325 = _10268326) /\ ((ESTD _10268325) = (ESTD _10268326)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * part cESTD f0 * part cESTD f1
- |- ((~ ((dart_of_fan (V , (ESTD V))) = (dart_of_fan (V , (ESTD V))))) ==> ((dart_of_fan (V , (ESTD V))) = (dart_of_fan (V , (ESTD V)))))
T c==> c~ c= * part cdart_of_fan c, f0 * part cESTD f0 * part cdart_of_fan c, f0 * part cESTD f0 c= * part cdart_of_fan c, f0 * part cESTD f0 * part cdart_of_fan c, f0 * part cESTD f0
- ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F), (((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F) ==> ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F)) |- ((((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F) ==> ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F)) /\ ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F))
T c==> c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c==> c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c/\ c==> c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF
- |- ((((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F) ==> ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F)) = ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F))
T c= c==> c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF
- |- (((!p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))) ==> (!p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H))))))) = (!p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))))
T c= c==> ! ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1 ! ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1 ! ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1
- (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- (~ (v = w))
T c==> c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f3 c= b0 f4 c/\ c~ c= b0 f1 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c~ c= f1 f2
- (!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))), (contravening V), ((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) |- ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((p1 , p2) IN (dart_of_fan (V , (ESTD V)))))
T c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 c==> ccontravening f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0
- |- (((!x. (((\H. ((hypermap_of_fan (V , (ESTD V))) = H)) x) ==> (?H. ((hypermap_of_fan (V , (ESTD V))) = H)))) ==> ((?H. ((hypermap_of_fan (V , (ESTD V))) = H)) ==> (?H. ((hypermap_of_fan (V , (ESTD V))) = H)))) = ((?H. ((hypermap_of_fan (V , (ESTD V))) = H)) ==> (?H. ((hypermap_of_fan (V , (ESTD V))) = H))))
T c= c==> ! c==> * / c= chypermap_of_fan c, f0 * part cESTD f0 b1 b0 c? / c= chypermap_of_fan c, f0 * part cESTD f0 b1 c==> c? / c= chypermap_of_fan c, f0 * part cESTD f0 b0 c? / c= chypermap_of_fan c, f0 * part cESTD f0 b0 c==> c? / c= chypermap_of_fan c, f0 * part cESTD f0 b0 c? / c= chypermap_of_fan c, f0 * part cESTD f0 b0
- (~ (V p1)), (v = p1), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((v = p1) /\ (~ (v = p1)))
T c==> c~ * f0 f1 c==> c= f2 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f1 c= b0 f4 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f4 c\/ c= b0 f2 c= b0 f3 c/\ c= f2 f1 c~ c= f2 f1
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))))
T c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2
- |- ((((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) = (x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))))) ==> (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> (((((inverse (edge_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((inverse (node_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x)))))) = q')) ==> (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> ((((inverse (edge_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((inverse (node_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))))) = ((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> q')))) = (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> (((((inverse (edge_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((inverse (node_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x)))))) = q')) ==> (((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> ((((inverse (edge_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((inverse (node_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))))) = ((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> q'))))
T c= c==> c= cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c==> c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c= c/\ c= cinverse * part cedge_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 f2 c= c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cinverse * part cedge_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f2 c==> c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c= c/\ c= cinverse * part cedge_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 f2 c= c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cinverse * part cedge_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f2
- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))), (~ F), (~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))), (FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) |- ((~ F) /\ F)
T c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 c==> c~ cF c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c/\ c~ cF cF
- |- (T = (((~ (_10268306 = _10268308)) \/ ((~ (_10268305 = _10268307)) \/ ((_10268307 IN _10268308) \/ (~ (_10268305 IN _10268306))))) = ((_10268307 IN _10268308) \/ ((~ (_10268306 = _10268308)) \/ ((~ (_10268305 = _10268307)) \/ (~ (_10268305 IN _10268306)))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f3 f1 c~ cIN f2 f0 c\/ cIN f3 f1 c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c~ cIN f2 f0
- |- (((((COND ((p1 INSERT ((((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , (((((sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) p2)))) (p1 , (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) p2))) = (p1 , p2)) = ((\x. ((\v. ((((COND ((p1 INSERT (v INSERT EMPTY)) IN (ESTD V))) (p1 , (((((sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) v))) (p1 , v)) = (p1 , p2))) x)) (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) p2)))
T c= c= cCOND cIN * * part cINSERT f0 * * part cINSERT cinverse_sigma_fan cvec cNUMERAL c_0 f1 * part cESTD f1 f0 f2 part cEMPTY * part cESTD f1 c, f0 csigma_fan cvec cNUMERAL c_0 f1 * part cESTD f1 f0 cinverse_sigma_fan cvec cNUMERAL c_0 f1 * part cESTD f1 f0 f2 c, f0 cinverse_sigma_fan cvec cNUMERAL c_0 f1 * part cESTD f1 f0 f2 c, f0 f2 * / * / c= cCOND cIN * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * part cESTD f1 c, f0 csigma_fan cvec cNUMERAL c_0 f1 * part cESTD f1 f0 b1 c, f0 b1 c, f0 f2 b0 cinverse_sigma_fan cvec cNUMERAL c_0 f1 * part cESTD f1 f0 f2
- (_10268336 = _10268338), (_10268335 = _10268337) |- ((_10268335 = _10268337) /\ (((IMAGE _10268335) _10268336) = ((IMAGE _10268337) _10268338)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= * * part cIMAGE f2 f0 * * part cIMAGE f3 f1
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) |- (T = ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)))
T c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= cT c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2
- ((contravening V) /\ ((v , w) IN (dart1_of_fan (V , (ESTD V))))) |- (((contravening V) /\ ((v , w) IN (dart1_of_fan (V , (ESTD V))))) /\ (((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) ((vector_neg v) , (vector_neg w))) = ((vector_neg v) , (vector_neg (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) v) w)))))
T c==> c/\ ccontravening f0 cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c/\ c/\ ccontravening f0 cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c= cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c, cvector_neg f1 cvector_neg f2 c, cvector_neg f1 cvector_neg cinverse_sigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 f1 f2
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- (((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))))) = ((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))))))
T c= c==> cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c==> cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0
- |- (((((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) = ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) ==> ((((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> (((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)) = q')) ==> ((((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))) = (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> q')))) = ((((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> (((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)) = q')) ==> ((((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))) = (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> q'))))
T c= c==> c= c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c==> c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 f3 c= c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 f3 c==> c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 f3 c= c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 f3
- |- (((((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> (((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)) = ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)))) ==> ((((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))) = (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))))) = ((((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))) = (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)))))
T c= c==> c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 c= c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 c= c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2
- (_10268404 = _10268405) |- ((_10268404 = _10268405) /\ ((BIT0 _10268404) = (BIT0 _10268405)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- |- (((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> ((p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))))
T c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2
- |- (((~ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) e')))
T c==> c==> c~ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f3 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 f3
- (((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F)))))))) |- ((((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F)))))))) /\ (((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F)))))))))
T c==> c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c/\ c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF
- (~ ((p1 , p2) = (p1 , p2))) |- ((~ ((p1 , p2) = (p1 , p2))) /\ ((p1 , p2) = (p1 , p2)))
T c==> c~ c= c, f0 f1 c, f0 f1 c/\ c~ c= c, f0 f1 c, f0 f1 c= c, f0 f1 c, f0 f1
- (~ (V p2)) |- ((V p2) ==> (~ (V p2)))
T c==> c~ * f0 f1 c==> * f0 f1 c~ * f0 f1
- |- (!H. (((\H. ((hypermap_of_fan (V , (ESTD V))) = H)) H) ==> (?H. ((hypermap_of_fan (V , (ESTD V))) = H))))
T c==> * / c= chypermap_of_fan c, f0 * part cESTD f0 b0 f1 c? / c= chypermap_of_fan c, f0 * part cESTD f0 b0
- (P c) |- ((~ (P c)) ==> (P c))
T c==> * f0 f1 c==> c~ * f0 f1 * f0 f1
- (~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) |- F
T c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF
- (_10268408 = _10268409) |- ((_10268408 = _10268409) /\ ((real_of_num _10268408) = (real_of_num _10268409)))
T c==> c= f0 f1 c/\ c= f0 f1 c= creal_of_num f0 creal_of_num f1
- |- (((~ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , ((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)))) e')))
T c==> c==> c~ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f3 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f3
- (FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) |- ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) = T)
T c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c= cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 cT
- |- ((_10268311 = _10268312) ==> ((contravening _10268312) \/ (~ (contravening _10268311))))
T c==> c= f0 f1 c\/ ccontravening f1 c~ ccontravening f0
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) = ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c= c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (~ (V p1)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((~ (w = p1)) ==> (w = p1))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f1 c= b0 f4 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f4 c\/ c= b0 f2 c= b0 f3 c==> c~ c= f3 f1 c= f3 f1
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- |- ((\x. (!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))))) x)
T * / ! ! ! c= c= c, b0 b1 c, b2 b3 c/\ c= b0 b2 c= b1 b3 f0
- |- ((~ (_10268404 = _10268405)) \/ ((BIT0 _10268404) = (BIT0 _10268405)))
T c\/ c~ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- |- ((?w. (P /\ (Q w))) = (P /\ (?w. (Q w))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
- (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) |- ((!V. (!E. (!v. (!u. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (u IN (((set_of_edge v) V) E))) /\ (P ((((azim_cycle (((set_of_edge v) V) E)) (vec (NUMERAL _0))) v) u))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))))))) ==> (P (((((sigma_fan (vec (NUMERAL _0))) V) E) v) u)))
T c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN f2 * * * part cset_of_edge f3 f0 f1 * f4 cazim_cycle * * * part cset_of_edge f3 f0 f1 cvec cNUMERAL c_0 f3 f2 c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 * b4 cazim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 csigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 * f4 csigma_fan cvec cNUMERAL c_0 f0 f1 f3 f2
- |- (((hypermap_of_fan (V , (ESTD V))) = H) ==> (?H. ((hypermap_of_fan (V , (ESTD V))) = H)))
T c==> c= chypermap_of_fan c, f0 * part cESTD f0 f1 c? / c= chypermap_of_fan c, f0 * part cESTD f0 b0
- |- (((\t. (f t)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))) |- (((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))) /\ ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ (?s. ((permutes (n_fan_pair_ext (V , (ESTD V)))) s))) ==> ((!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((permutes (n_fan_pair_ext (V , E))) (dart_of_fan (V , E)))))) ==> F))))))))
T c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c/\ c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ c? / cpermutes * part cn_fan_pair_ext c, f0 * part cESTD f0 b0 c==> ! ! c==> cFAN c, cvec cNUMERAL c_0 c, b0 b1 cpermutes * part cn_fan_pair_ext c, b0 b1 * part cdart_of_fan c, b0 b1 cF
- (x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) |- ((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) /\ (((((inverse (edge_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((inverse (node_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x)))))) = ((((inverse (edge_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((inverse (node_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))))))
T c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c= c/\ c= cinverse * part cedge_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c/\ c= cinverse * part cedge_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0
- |- ((_10268390 = _10268392) ==> ((~ (_10268391 = _10268393)) \/ (((real_le _10268392) _10268393) \/ (~ ((real_le _10268390) _10268391)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2
- |- ((((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F) ==> ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F)) ==> (((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F) ==> ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F)))
T c==> c==> c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF c==> c~ c==> c? / c? / c/\ c/\ * f0 b0 c/\ * f0 b1 c/\ c~ c= b0 b1 creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b2 f1 c= b2 f2 c\/ c= b2 b0 c= b2 b1 c/\ * f0 f1 * f0 f2 cF
- |- ((((inverse (n_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = (p1 , (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) p2))) = ((\x. ((\v. v) x)) (((inverse (n_fan_pair_ext (V , (ESTD V)))) (p1 , p2)) = (p1 , (((((inverse_sigma_fan (vec (NUMERAL _0))) V) (ESTD V)) p1) p2)))))
T c= c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, f1 cinverse_sigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 f1 f2 * / * / b1 b0 c= cinverse * part cn_fan_pair_ext c, f0 * part cESTD f0 c, f1 f2 c, f1 cinverse_sigma_fan cvec cNUMERAL c_0 f0 * part cESTD f0 f1 f2
- |- ((!x'. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x' = v) \/ (x' = w)))) = (((~ (x = p1)) /\ (~ (x = p2))) \/ (!x. ((x = v) \/ (x = w)))))
T c= ! c\/ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= b0 f3 c= b0 f4 c\/ c/\ c~ c= f0 f1 c~ c= f0 f2 ! c\/ c= b0 f3 c= b0 f4
- |- ((~ (_10268323 = _10268324)) \/ ((vec _10268323) = (vec _10268324)))
T c\/ c~ c= f0 f1 c= cvec f0 cvec f1
- |- ((((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) = (x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> (((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x)))))) = q')) ==> (((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))))) = ((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> q')))) = (((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x)))))) = q')) ==> (((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))))) = ((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> q'))))
T c= c==> c= cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c==> c==> cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c= c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 f2 c= c==> cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c==> cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f2 c==> c==> cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c= c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 f2 c= c==> cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c==> cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f2
- (~ (p2 = p2)) |- ((~ (p2 = p2)) /\ (p2 = p2))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- (~ (V p1)), (~ (p1 = w)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((~ (p1 = w)) /\ (p1 = w))
T c==> c~ * f0 f1 c==> c~ c= f1 f2 c==> c/\ c/\ * f0 f3 c/\ * f0 f2 c/\ c~ c= f3 f2 creal_le cdistance c, f3 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f1 c= b0 f4 c/\ c~ c= b0 f3 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f1 c~ c= b0 f4 c\/ c= b0 f3 c= b0 f2 c/\ c~ c= f1 f2 c= f1 f2
- |- ((\p'. (!q'. ((((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) = p') ==> ((p' ==> (((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2)) = q')) ==> ((((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (p1 , p2))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 b0 c==> c==> b0 c= c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 b1 c= c==> c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 c, f0 f2 c==> b0 b1 f3
- |- (((x , y) = (a , b)) = ((x = a) /\ (y = b)))
T c= c= c, f0 f1 c, f2 f3 c/\ c= f0 f2 c= f1 f3
- |- (((x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x)))))) = q')) ==> (((x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))))) = ((x IN (dart_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> q')))
T c==> c==> cIN f0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c= c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 f2 c= c==> cIN f0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c==> cIN f0 * part cdart_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f2
- (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) |- ((!V. (!E. (!p1. (!p2. (!P. ((((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((p1 INSERT (p2 INSERT EMPTY)) IN E)) /\ (P ((((ivs_azim_cycle (((set_of_edge p1) V) E)) (vec (NUMERAL _0))) p1) p2))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))))))) ==> (P (((((inverse_sigma_fan (vec (NUMERAL _0))) V) E) p1) p2)))
T c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 * f4 civs_azim_cycle * * * part cset_of_edge f2 f0 f1 cvec cNUMERAL c_0 f2 f3 c==> ! ! ! ! ! c==> c/\ c/\ cFAN c, cvec cNUMERAL c_0 c, b0 b1 cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 * b4 civs_azim_cycle * * * part cset_of_edge b2 b0 b1 cvec cNUMERAL c_0 b2 b3 * b4 cinverse_sigma_fan cvec cNUMERAL c_0 b0 b1 b2 b3 * f4 cinverse_sigma_fan cvec cNUMERAL c_0 f0 f1 f2 f3
- |- ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((face_map (hypermap_of_fan (V , E))) = (f_fan_pair_ext (V , E))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= * part cface_map chypermap_of_fan c, f0 f1 * part cf_fan_pair_ext c, f0 f1
- (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((_10268364 = p1) \/ ((_10268364 = p2) \/ (~ (_10268364 = w))))
T c==> c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f3 c= b0 f4 c/\ c~ c= b0 f1 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c\/ c= f5 f3 c\/ c= f5 f4 c~ c= f5 f2
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- |- (((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> ((p1 , p2) = (p1 , p2)))
T c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= c, f0 f2 c, f0 f2
- |- (((((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ((hyp_conj (node_map H)) (opposite_hypermap H))) /\ ((iso ((hyp_conj (node_map H)) (opposite_hypermap H))) (opposite_hypermap H))) ==> ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (opposite_hypermap H))) ==> ((((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ((hyp_conj (node_map H)) (opposite_hypermap H))) /\ ((iso ((hyp_conj (node_map H)) (opposite_hypermap H))) (opposite_hypermap H))) ==> ((iso (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) (opposite_hypermap H))))
T c==> c==> c/\ ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1 ciso chyp_conj * part cnode_map f1 copposite_hypermap f1 copposite_hypermap f1 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 copposite_hypermap f1 c==> c/\ ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 chyp_conj * part cnode_map f1 copposite_hypermap f1 ciso chyp_conj * part cnode_map f1 copposite_hypermap f1 copposite_hypermap f1 ciso chypermap_of_fan c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 copposite_hypermap f1
- (!p. (!y. (!x. (!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))))), ((?s. ((permutes p) s)) /\ (P ((p x) = y))) |- ((!p. (!y. (!x. (!P. (((?s. ((permutes p) s)) /\ (P ((p x) = y))) ==> (P (((inverse p) y) = x))))))) /\ (P (((inverse p) y) = x)))
T c==> ! ! ! ! c==> c/\ c? / cpermutes b0 b4 * b3 c= * b0 b2 b1 * b3 c= cinverse b0 b1 b2 c==> c/\ c? / cpermutes f0 b0 * f1 c= * f0 f2 f3 c/\ ! ! ! ! c==> c/\ c? / cpermutes b0 b4 * b3 c= * b0 b2 b1 * b3 c= cinverse b0 b1 b2 * f1 c= cinverse f0 f3 f2
- |- ((\p'. (!q'. (((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) = p') ==> ((p' ==> (((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x)))))) = q')) ==> (((x IN (dart1_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> ((((inverse (e_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((e_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))) /\ (((inverse (n_fan_pair_ext (V , (ESTD V)))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))) , (vector_neg (SND ((n_fan_pair_ext (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))) x))))))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 b0 c==> c==> b0 c= c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 b1 c= c==> cIN f0 * part cdart1_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c/\ c= cinverse * part ce_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND ce_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cn_fan_pair_ext c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cn_fan_pair_ext c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c==> b0 b1 f2
- |- (((!t'. (!e'. ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) = g') ==> ((g' ==> ((p1 , p2) = t')) ==> (((~ g') ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) = g') ==> ((g' ==> ((p1 , p2) = t')) ==> (((~ g') ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) = g') ==> ((g' ==> ((p1 , p2) = t')) ==> (((~ g') ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 c==> c==> f3 c= c, f0 f2 b0 c==> c==> c~ f3 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 b1 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND f3 b0 b1 * / ! c==> c= cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 c==> c==> f3 c= c, f0 f2 b0 c==> c==> c~ f3 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 b1 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND f3 b0 b1 f4 * / ! c==> c= cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 c==> c==> f3 c= c, f0 f2 b0 c==> c==> c~ f3 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 b1 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND f3 b0 b1 f4
- (p2 IN (((set_of_edge p1) V) (ESTD V))) |- ((((p2 IN (((set_of_edge p1) V) (ESTD V))) = T) ==> ((T ==> (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) = q')) ==> (((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) = (T ==> q')))) = ((T ==> (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) = q')) ==> (((p2 IN (((set_of_edge p1) V) (ESTD V))) ==> ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))) = (T ==> q'))))
T c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= c==> c= cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 cT c==> c==> cT c= c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 f3 c= c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 c==> cT f3 c==> c==> cT c= c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 f3 c= c==> cIN f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 * * * part cset_of_edge f1 f2 * part cESTD f2 c= cazim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 civs_azim_cycle * * * part cset_of_edge f1 f2 * part cESTD f2 cvec cNUMERAL c_0 f1 f0 f0 c==> cT f3
- (!V. (!E. (!v. (!w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w))))))))), (((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) |- ((!V. (!E. (!v. (!w. (!P. ((((v , w) IN (dart_of_fan (V , E))) /\ (P (w , v))) ==> (P ((e_fan_pair_ext (V , E)) (v , w))))))))) /\ (P ((e_fan_pair_ext (V , E)) (v , w))))
T c==> ! ! ! ! ! c==> c/\ cIN c, b2 b3 * part cdart_of_fan c, b0 b1 * b4 c, b3 b2 * b4 ce_fan_pair_ext c, b0 b1 c, b2 b3 c==> c/\ cIN c, f0 f1 * part cdart_of_fan c, f2 f3 * f4 c, f1 f0 c/\ ! ! ! ! ! c==> c/\ cIN c, b2 b3 * part cdart_of_fan c, b0 b1 * b4 c, b3 b2 * b4 ce_fan_pair_ext c, b0 b1 c, b2 b3 * f4 ce_fan_pair_ext c, f2 f3 c, f0 f1
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- (_10268396 = _10268398) |- ((_10268397 = _10268399) ==> ((_10268396 , _10268397) = (_10268398 , _10268399)))
T c==> c= f0 f1 c==> c= f2 f3 c= c, f0 f2 c, f1 f3
- (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w))))))), (~ ((V p1) /\ (V p2))) |- ((?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w))))))) /\ F)
T c==> c? / c/\ c/\ * f0 f1 c/\ * f0 b0 c/\ c~ c= f1 b0 creal_le cdistance c, f1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b1 f2 c= b1 f3 c/\ c~ c= b1 f1 c~ c= b1 b0 ! c\/ c/\ c~ c= b1 f2 c~ c= b1 f3 c\/ c= b1 f1 c= b1 b0 c==> c~ c/\ * f0 f2 * f0 f3 c/\ c? / c/\ c/\ * f0 f1 c/\ * f0 b0 c/\ c~ c= f1 b0 creal_le cdistance c, f1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b1 f2 c= b1 f3 c/\ c~ c= b1 f1 c~ c= b1 b0 ! c\/ c/\ c~ c= b1 f2 c~ c= b1 f3 c\/ c= b1 f1 c= b1 b0 cF
- T |- (T /\ (((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2)) = ((((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) IN (((set_of_edge p1) V) (ESTD V))) /\ (((((azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = p2))))
T c==> cT c/\ cT c= c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2 c/\ cIN civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 * * * part cset_of_edge f0 f1 * part cESTD f1 c= cazim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f2
- (contravening V) |- (T = (contravening ((IMAGE vector_neg) V)))
T c==> ccontravening f0 c= cT ccontravening * * part cIMAGE part cvector_neg f0
- |- (((!p2. (!V. (!p1. ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F)))) ==> ((\p2. (!V. (!p1. ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F)))) p2)) = ((\p2. (!V. (!p1. ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F)))) p2))
T c= c==> ! ! ! c==> c~ c==> c? / c? / c/\ c/\ * b1 b3 c/\ * b1 b4 c/\ c~ c= b3 b4 creal_le cdistance c, b3 b4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b5 b2 c= b5 b0 c\/ c= b5 b3 c= b5 b4 c/\ * b1 b2 * b1 b0 cF * / ! ! c==> c~ c==> c? / c? / c/\ c/\ * b1 b3 c/\ * b1 b4 c/\ c~ c= b3 b4 creal_le cdistance c, b3 b4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b5 b2 c= b5 b0 c\/ c= b5 b3 c= b5 b4 c/\ * b1 b2 * b1 b0 cF f0 * / ! ! c==> c~ c==> c? / c? / c/\ c/\ * b1 b3 c/\ * b1 b4 c/\ c~ c= b3 b4 creal_le cdistance c, b3 b4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b5 b2 c= b5 b0 c\/ c= b5 b3 c= b5 b4 c/\ * b1 b2 * b1 b0 cF f0
- |- (((!V. (!p1. ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F))) ==> ((\V. (!p1. ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F))) V)) = ((\V. (!p1. ((~ ((?v. (?w. (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ (!x. (((x = p1) \/ (x = p2)) = ((x = v) \/ (x = w))))))) ==> ((V p1) /\ (V p2)))) ==> F))) V))
T c= c==> ! ! c==> c~ c==> c? / c? / c/\ c/\ * b0 b2 c/\ * b0 b3 c/\ c~ c= b2 b3 creal_le cdistance c, b2 b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b4 b1 c= b4 f0 c\/ c= b4 b2 c= b4 b3 c/\ * b0 b1 * b0 f0 cF * / ! c==> c~ c==> c? / c? / c/\ c/\ * b0 b2 c/\ * b0 b3 c/\ c~ c= b2 b3 creal_le cdistance c, b2 b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b4 b1 c= b4 f0 c\/ c= b4 b2 c= b4 b3 c/\ * b0 b1 * b0 f0 cF f1 * / ! c==> c~ c==> c? / c? / c/\ c/\ * b0 b2 c/\ * b0 b3 c/\ c~ c= b2 b3 creal_le cdistance c, b2 b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 ! c= c\/ c= b4 b1 c= b4 f0 c\/ c= b4 b2 c= b4 b3 c/\ * b0 b1 * b0 f0 cF f1
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- (!p. (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))) |- (!H. (((permutes p) (dart H)) ==> ((hyp_iso p) (H , ((hyp_conj p) H)))))
T c==> ! ! c==> cpermutes b0 * part cdart b1 chyp_iso b0 c, b1 chyp_conj b0 b1 ! c==> cpermutes f0 * part cdart b0 chyp_iso f0 c, b0 chyp_conj f0 b0
- (~ (P b)), (P c), (b = c) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c==> c~ cF cF
- (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- (((_10268364 = p1) \/ (_10268364 = p2)) \/ (~ (_10268364 = w)))
T c==> c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f3 c= b0 f4 c/\ c~ c= b0 f1 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c\/ c\/ c= f5 f3 c= f5 f4 c~ c= f5 f2
- (_10268336 = _10268338) |- ((_10268335 = _10268337) ==> (((IMAGE _10268335) _10268336) = ((IMAGE _10268337) _10268338)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cIMAGE f2 f0 * * part cIMAGE f3 f1
- |- ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) = g') ==> ((g' ==> ((p1 , p2) = t')) ==> (((~ g') ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND g') t') e')))))
T c==> c= cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 c==> c==> f3 c= c, f0 f2 f4 c==> c==> c~ f3 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f5 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND f3 f4 f5
- (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- (!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w)))))
T c==> c/\ c/\ * f0 f1 c/\ * f0 f2 c/\ c~ c= f1 f2 creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f3 c= b0 f4 c/\ c~ c= b0 f1 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f1 c= b0 f2 ! c\/ c\/ c= b0 f3 c= b0 f4 c/\ c~ c= b0 f1 c~ c= b0 f2
- |- ((x IN (dart (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V)))))) ==> (((((inverse (edge_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((inverse (node_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x)))))) = ((((inverse (edge_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((edge_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))) /\ (((inverse (node_map (hypermap_of_fan (V , (ESTD V))))) ((vector_neg (FST x)) , (vector_neg (SND x)))) = ((vector_neg (FST ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))) , (vector_neg (SND ((node_map (hypermap_of_fan (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) x))))))))
T c==> cIN f0 * part cdart chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 c= c/\ c= cinverse * part cedge_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c/\ c= cinverse * part cedge_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cedge_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 c= cinverse * part cnode_map chypermap_of_fan c, f1 * part cESTD f1 c, cvector_neg cFST f0 cvector_neg cSND f0 c, cvector_neg cFST cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0 cvector_neg cSND cnode_map chypermap_of_fan c, * * part cIMAGE part cvector_neg f1 * part cESTD * * part cIMAGE part cvector_neg f1 f0
- ((\H. ((hypermap_of_fan (V , (ESTD V))) = H)) H) |- (((\H. ((hypermap_of_fan (V , (ESTD V))) = H)) H) /\ (?H. ((hypermap_of_fan (V , (ESTD V))) = H)))
T c==> * / c= chypermap_of_fan c, f0 * part cESTD f0 b0 f1 c/\ * / c= chypermap_of_fan c, f0 * part cESTD f0 b0 f1 c? / c= chypermap_of_fan c, f0 * part cESTD f0 b0
- |- (((hypermap_of_fan (V , (ESTD V))) = H) = ((\H. ((hypermap_of_fan (V , (ESTD V))) = H)) H))
T c= c= chypermap_of_fan c, f0 * part cESTD f0 f1 * / c= chypermap_of_fan c, f0 * part cESTD f0 b0 f1
- |- ((?w. ((P w) /\ Q)) = ((?w. (P w)) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- (~ (V w)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((~ (V w)) /\ (V w))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f1 c/\ c~ c= f2 f1 creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f3 c= b0 f4 c/\ c~ c= b0 f2 c~ c= b0 f1 ! c\/ c/\ c~ c= b0 f3 c~ c= b0 f4 c\/ c= b0 f2 c= b0 f1 c/\ c~ * f0 f1 * f0 f1
- |- ((~ (_10268311 = _10268312)) \/ ((contravening _10268312) \/ (~ (contravening _10268311))))
T c\/ c~ c= f0 f1 c\/ ccontravening f1 c~ ccontravening f0
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((~ (_10268336 = _10268338)) \/ ((~ (_10268335 = _10268337)) \/ (((IMAGE _10268335) _10268336) = ((IMAGE _10268337) _10268338))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cIMAGE f2 f0 * * part cIMAGE f3 f1
- |- ((((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V)) ==> ((p1 , p2) = t')) ==> (((~ ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) ==> ((p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2)) = e')) ==> ((((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) (p1 , p2)) (p1 , ((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2))) = (((COND ((p1 INSERT (((((ivs_azim_cycle (((set_of_edge p1) V) (ESTD V))) (vec (NUMERAL _0))) p1) p2) INSERT EMPTY)) IN (ESTD V))) t') e'))))
T c==> c==> cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= c, f0 f2 f3 c==> c==> c~ cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c= c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 f4 c= cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 c, f0 f2 c, f0 civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 cCOND cIN * * part cINSERT f0 * * part cINSERT civs_azim_cycle * * * part cset_of_edge f0 f1 * part cESTD f1 cvec cNUMERAL c_0 f0 f2 part cEMPTY * part cESTD f1 f3 f4
- (~ (V p2)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((p2 = v) ==> (~ (p2 = v)))
T c==> c~ * f0 f1 c==> c/\ c/\ * f0 f2 c/\ * f0 f3 c/\ c~ c= f2 f3 creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f4 c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 ! c\/ c/\ c~ c= b0 f4 c~ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c==> c= f1 f2 c~ c= f1 f2
- |- (((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))))
T c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF
- (!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))), (contravening V) |- ((~ ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V))))) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))
T c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 c==> ccontravening f0 c==> c~ c= * part cdart_of_fan c, f0 * part cESTD f0 * part cdart1_of_fan c, f0 * part cESTD f0 c= * part cdart_of_fan c, f0 * part cESTD f0 * part cdart1_of_fan c, f0 * part cESTD f0
- |- ((~ (_10268325 = _10268326)) \/ ((ESTD _10268325) = (ESTD _10268326)))
T c\/ c~ c= f0 f1 c= * part cESTD f0 * part cESTD f1
- (~ (V p2)), (~ (w = p2)), (((V v) /\ ((V w) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))))) /\ ((!x. (((x = p1) \/ (x = p2)) \/ ((~ (x = v)) /\ (~ (x = w))))) /\ (!x. (((~ (x = p1)) /\ (~ (x = p2))) \/ ((x = v) \/ (x = w)))))) |- ((~ (w = p2)) /\ (w = p2))
T c==> c~ * f0 f1 c==> c~ c= f2 f1 c==> c/\ c/\ * f0 f3 c/\ * f0 f2 c/\ c~ c= f3 f2 creal_le cdistance c, f3 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c/\ ! c\/ c\/ c= b0 f4 c= b0 f1 c/\ c~ c= b0 f3 c~ c= b0 f2 ! c\/ c/\ c~ c= b0 f4 c~ c= b0 f1 c\/ c= b0 f3 c= b0 f2 c/\ c~ c= f2 f1 c= f2 f1
- |- ((((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))) ==> ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F)))))))) = ((contravening V) ==> ((contravening ((IMAGE vector_neg) V)) ==> ((FAN ((vec (NUMERAL _0)) , (V , (ESTD V)))) ==> ((FAN ((vec (NUMERAL _0)) , (((IMAGE vector_neg) V) , (ESTD ((IMAGE vector_neg) V))))) ==> (((p1 , p2) IN (dart1_of_fan (V , (ESTD V)))) ==> ((~ ((p1 , p2) IN (dart_of_fan (V , (ESTD V))))) ==> ((!V. ((contravening V) ==> ((dart_of_fan (V , (ESTD V))) = (dart1_of_fan (V , (ESTD V)))))) ==> F))))))))
T c= c==> c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF c==> ccontravening f0 c==> ccontravening * * part cIMAGE part cvector_neg f0 c==> cFAN c, cvec cNUMERAL c_0 c, f0 * part cESTD f0 c==> cFAN c, cvec cNUMERAL c_0 c, * * part cIMAGE part cvector_neg f0 * part cESTD * * part cIMAGE part cvector_neg f0 c==> cIN c, f1 f2 * part cdart1_of_fan c, f0 * part cESTD f0 c==> c~ cIN c, f1 f2 * part cdart_of_fan c, f0 * part cESTD f0 c==> ! c==> ccontravening b0 c= * part cdart_of_fan c, b0 * part cESTD b0 * part cdart1_of_fan c, b0 * part cESTD b0 cF
