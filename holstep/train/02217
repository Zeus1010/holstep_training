N RE_CACS
C |- (!z. ((Re (cacs z)) = (Im (clog ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))))))))
T c= cRe ccacs f0 cIm cclog cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0
D TRUTH
A |- T
T cT
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D COMPLEX_MUL_LNEG
A |- (!x. (!y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y)))))
T c= ccomplex_mul cvector_neg f0 f1 cvector_neg ccomplex_mul f0 f1
D RE_NEG
A |- (!x. ((Re (vector_neg x)) = (real_neg (Re x))))
T c= cRe cvector_neg f0 creal_neg cRe f0
D RE_MUL_II
A |- (!z. (((Re ((complex_mul z) ii)) = (real_neg (Im z))) /\ ((Re ((complex_mul ii) z)) = (real_neg (Im z)))))
T c/\ c= cRe ccomplex_mul f0 cii creal_neg cIm f0 c= cRe ccomplex_mul cii f0 creal_neg cIm f0
D cacs
A |- (!z. ((cacs z) = ((complex_mul (vector_neg ii)) (clog ((vector_add z) ((complex_mul ii) (csqrt ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow z) (NUMERAL (BIT0 (BIT1 _0))))))))))))
T c= ccacs f0 ccomplex_mul cvector_neg cii cclog cvector_add f0 ccomplex_mul cii ccsqrt cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\x. (!y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y))))) x)
T * / ! c= ccomplex_mul cvector_neg b0 b1 cvector_neg ccomplex_mul b0 b1 f0
- |- ((Re ((complex_mul z) ii)) = (real_neg (Im z)))
T c= cRe ccomplex_mul f0 cii creal_neg cIm f0
