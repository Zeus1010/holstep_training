N Pwssrat.ytrans_mem_rtrans
C |- (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i))))))) ==> ((MEM (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))
T c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cMEM cytrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4
D TRUTH
A |- T
T cT
D Tame_list.POWER_TO_ITER
A |- (!n. (((POWER f) n) = ((ITER n) f)))
T c= * * part cPOWER f0 f1 * * part cITER f1 f0
D Tame_defs2.normal_list
A |- (!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))))))
T c= cnormal_list f0 f1 c/\ cuniq cflatten f1 c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1
D Tame_defs2.ytrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))))
T c= cytrans f0 f1 f2 f3 f4 cl'y f0 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Tame_list.uniq_flatten_uniq
A |- (!L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s))))
T c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1
D Tame_list.AQIUNPP3
A |- (!L. (!i. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))
T c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
D Pwssrat.f_eq_next_el_x
A |- (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x))))))))
T c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 c= cf_list f0 f3 cnext_el crotate_to crtrans f0 f1 f2 f3 f4 f3 f3
D Pwssrat.MEM_POWER_NEXT_EL
A |- (!k. ((((MEM x) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) x)) r)))
T c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 f2 f0 f1
D Pwssrat.l_y_rep_power
A |- ((((f_list L) x) = ((next_el r) x)) ==> ((((l'y L) r) x) = (((ITER (SUC (((l'm L) r) x))) (next_el r)) x)))
T c==> c= cf_list f0 f1 cnext_el f2 f1 c= cl'y f0 f2 f1 cITER cSUC cl'm f0 f2 f1 * part cnext_el f2 f1
+ (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x)), ((((l'y L) r1) x) = (((POWER (next_el r1)) (SUC (((l'm L) r1) x))) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((MEM (((POWER (next_el r1)) (SUC (((l'm L) r1) x))) x)) r1)
T c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= cf_list f0 f3 cnext_el crotate_to crtrans f0 f1 f2 f3 f4 f3 f3 c==> c= cl'y f0 f5 f3 cPOWER * part cnext_el f5 cSUC cl'm f0 f5 f3 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cMEM cPOWER * part cnext_el f5 cSUC cl'm f0 f5 f3 f3 f5
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((marked_list L) N) r) x) |- (((((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x)) ==> ((MEM (((l'y L) (((((rtrans L) N) r) x) i)) x)) (((((rtrans L) N) r) x) i))) = ((((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x))) ==> ((MEM (((l'y L) (((((rtrans L) N) r) x) i)) x)) (((((rtrans L) N) r) x) i))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> cmarked_list f0 f1 f2 f3 c= c==> c= cf_list f0 f3 cnext_el crotate_to crtrans f0 f1 f2 f3 f4 f3 f3 cMEM cl'y f0 crtrans f0 f1 f2 f3 f4 f3 crtrans f0 f1 f2 f3 f4 c==> c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 c= cf_list f0 f3 cnext_el crotate_to crtrans f0 f1 f2 f3 f4 f3 f3 cMEM cl'y f0 crtrans f0 f1 f2 f3 f4 f3 crtrans f0 f1 f2 f3 f4
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((marked_list L) N) r) x) |- ((MEM (((l'y L) (((((rtrans L) N) r) x) i)) x)) (((((rtrans L) N) r) x) i))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> cmarked_list f0 f1 f2 f3 cMEM cl'y f0 crtrans f0 f1 f2 f3 f4 f3 crtrans f0 f1 f2 f3 f4
- ((((((rtrans L) N) r) x) i) = r1), ((MEM x) (((((rtrans L) N) r) x) i)) |- (((MEM x) r1) = T)
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c= cMEM f3 f5 cT
+ |- (((!L. (!r. (!x. ((((f_list L) x) = ((next_el r) x)) ==> ((((l'y L) r) x) = (((ITER (SUC (((l'm L) r) x))) (next_el r)) x)))))) ==> ((\L. (!r. (!x. ((((f_list L) x) = ((next_el r) x)) ==> ((((l'y L) r) x) = (((ITER (SUC (((l'm L) r) x))) (next_el r)) x)))))) L)) = ((\L. (!r. (!x. ((((f_list L) x) = ((next_el r) x)) ==> ((((l'y L) r) x) = (((ITER (SUC (((l'm L) r) x))) (next_el r)) x)))))) L))
T c= c==> ! ! ! c==> c= cf_list b0 b2 cnext_el b1 b2 c= cl'y b0 b1 b2 cITER cSUC cl'm b0 b1 b2 * part cnext_el b1 b2 * / ! ! c==> c= cf_list b0 b2 cnext_el b1 b2 c= cl'y b0 b1 b2 cITER cSUC cl'm b0 b1 b2 * part cnext_el b1 b2 f0 * / ! ! c==> c= cf_list b0 b2 cnext_el b1 b2 c= cl'y b0 b1 b2 cITER cSUC cl'm b0 b1 b2 * part cnext_el b1 b2 f0
- |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
+ (good_list L), (transform_assumption_v2 L), ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i)))))) |- ((MEM (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))
T c==> cgood_list f0 c==> ctransform_assumption_v2 f0 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cMEM cytrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4
+ (((next_el r1) x) = ((f_list L) x)), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)) |- ((((next_el r1) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((((f_list L) x) = ((next_el ((rotate_to r1) x)) x)) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = (((POWER (next_el r1)) (SUC (((l'm L) r1) x))) x)) ==> (((MEM x) r1) /\ (uniq r1))))))))
T c==> c= cnext_el f0 f1 cf_list f2 f1 c==> cMEM f1 f0 c==> cMEM f0 cntrans f2 f3 f4 f1 f5 c==> cnormal_list f2 cntrans f2 f3 f4 f1 f5 c/\ c= cnext_el f0 f1 cf_list f2 f1 c==> cLET / cLET_END cfinal_list f2 b0 cfind_list cntrans f2 f3 f4 f1 f5 ce_list f1 c==> cs_flag_list f2 cntrans f2 f3 f4 f1 f5 f0 f1 c==> c= cf_list f2 f1 cnext_el crotate_to f0 f1 f1 c==> c= crtrans f2 f3 f4 f1 f5 f0 c==> c= cl'y f2 f0 f1 cPOWER * part cnext_el f0 cSUC cl'm f2 f0 f1 f1 c/\ cMEM f1 f0 cuniq f0
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
+ (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((?r1. ((((((rtrans L) N) r) x) i) = r1)) ==> ((MEM (((l'y L) (((((rtrans L) N) r) x) i)) x)) (((((rtrans L) N) r) x) i)))
T c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= cf_list f0 f3 cnext_el crotate_to crtrans f0 f1 f2 f3 f4 f3 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c? / c= crtrans f0 f1 f2 f3 f4 b0 cMEM cl'y f0 crtrans f0 f1 f2 f3 f4 f3 crtrans f0 f1 f2 f3 f4
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x)))))))) |- (((!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x))))))) ==> ((\N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x))))))) N)) = ((\N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x))))))) N))
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cf_list b0 b3 cnext_el crotate_to crtrans b0 b1 b2 b3 b4 b3 b3 c= c==> ! ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b0 b1 b2 c= cf_list f0 b2 cnext_el crotate_to crtrans f0 b0 b1 b2 b3 b2 b2 * / ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b0 b1 b2 c= cf_list f0 b2 cnext_el crotate_to crtrans f0 b0 b1 b2 b3 b2 b2 f1 * / ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b0 b1 b2 c= cf_list f0 b2 cnext_el crotate_to crtrans f0 b0 b1 b2 b3 b2 b2 f1
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))) |- (((final_list L) (((((rtrans L) N) r) x) i)) = F)
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c= cfinal_list f0 crtrans f0 f1 f2 f3 f4 cF
- (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
- |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
+ (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x), ((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) |- (((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) /\ ((MEM (((l'y L) (((((rtrans L) N) r) x) i)) x)) (((((rtrans L) N) r) x) i)))
T c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= cf_list f0 f3 cnext_el crotate_to crtrans f0 f1 f2 f3 f4 f3 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c/\ * / c= crtrans f0 f1 f2 f3 f4 b0 f5 cMEM cl'y f0 crtrans f0 f1 f2 f3 f4 f3 crtrans f0 f1 f2 f3 f4
+ |- (((uniq (flatten (((((ntrans L) N) r) x) i))) /\ ((MEM r1) (((((ntrans L) N) r) x) i))) ==> (uniq r1))
T c==> c/\ cuniq cflatten cntrans f0 f1 f2 f3 f4 cMEM f5 cntrans f0 f1 f2 f3 f4 cuniq f5
+ ((((((rtrans L) N) r) x) i) = r1), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((((f_list L) x) = ((next_el ((rotate_to r1) x)) x)) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = (((POWER (next_el r1)) (SUC (((l'm L) r1) x))) x)) ==> (((MEM x) r1) /\ (uniq r1)))))) = ((((f_list L) x) = ((next_el ((rotate_to r1) x)) x)) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = (((POWER (next_el r1)) (SUC (((l'm L) r1) x))) x)) ==> (((MEM x) r1) /\ (uniq r1))))))
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> c= cf_list f0 f3 cnext_el crotate_to f5 f3 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c= cl'y f0 f5 f3 cPOWER * part cnext_el f5 cSUC cl'm f0 f5 f3 f3 c/\ cMEM f3 f5 cuniq f5 c==> c= cf_list f0 f3 cnext_el crotate_to f5 f3 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c= cl'y f0 f5 f3 cPOWER * part cnext_el f5 cSUC cl'm f0 f5 f3 f3 c/\ cMEM f3 f5 cuniq f5
- |- ((?r1. ((((((rtrans L) N) r) x) i) = r1)) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1)))
T c==> c? / c= crtrans f0 f1 f2 f3 f4 b0 c? / c= crtrans f0 f1 f2 f3 f4 b0
+ (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x)) ==> ((MEM (((l'y L) (((((rtrans L) N) r) x) i)) x)) (((((rtrans L) N) r) x) i)))
T c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c= cf_list f0 f3 cnext_el crotate_to crtrans f0 f1 f2 f3 f4 f3 f3 cMEM cl'y f0 crtrans f0 f1 f2 f3 f4 f3 crtrans f0 f1 f2 f3 f4
+ (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((MEM (((l'y L) r1) x)) r1)
T c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= cf_list f0 f3 cnext_el crotate_to crtrans f0 f1 f2 f3 f4 f3 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cMEM cl'y f0 f5 f3 f5
- (!k. ((((MEM x) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) x)) r))), (((MEM x) r) /\ (uniq r)) |- ((((MEM x) r) /\ (uniq r)) /\ ((MEM (((POWER (next_el r)) k) x)) r))
T c==> ! c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1 c==> c/\ cMEM f0 f1 cuniq f1 c/\ c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 f2 f0 f1
+ (((f_list L) x) = ((next_el ((rotate_to r1) x)) x)), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)) |- ((((f_list L) x) = ((next_el ((rotate_to r1) x)) x)) /\ (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = (((POWER (next_el r1)) (SUC (((l'm L) r1) x))) x)) ==> (((MEM x) r1) /\ (uniq r1)))))
T c==> c= cf_list f0 f1 cnext_el crotate_to f2 f1 f1 c==> cMEM f1 f2 c==> cMEM f2 cntrans f0 f3 f4 f1 f5 c==> cnormal_list f0 cntrans f0 f3 f4 f1 f5 c/\ c= cf_list f0 f1 cnext_el crotate_to f2 f1 f1 c==> c= crtrans f0 f3 f4 f1 f5 f2 c==> c= cl'y f0 f2 f1 cPOWER * part cnext_el f2 cSUC cl'm f0 f2 f1 f1 c/\ cMEM f1 f2 cuniq f2
+ (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x)))))))) |- ((\r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x)))))) r)
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cf_list b0 b3 cnext_el crotate_to crtrans b0 b1 b2 b3 b4 b3 b3 * / ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 b0 b1 c= cf_list f0 b1 cnext_el crotate_to crtrans f0 f1 b0 b1 b2 b1 b1 f2
+ |- (((!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) ==> ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)) = ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L))
T c= c==> ! ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
+ (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x)))))))) |- ((\N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x))))))) N)
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cf_list b0 b3 cnext_el crotate_to crtrans b0 b1 b2 b3 b4 b3 b3 * / ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b0 b1 b2 c= cf_list f0 b2 cnext_el crotate_to crtrans f0 b0 b1 b2 b3 b2 b2 f1
+ (uniq (flatten (((((ntrans L) N) r) x) i))), ((MEM r1) (((((ntrans L) N) r) x) i)) |- ((((uniq (flatten (((((ntrans L) N) r) x) i))) /\ ((MEM r1) (((((ntrans L) N) r) x) i))) ==> (uniq r1)) ==> (uniq r1))
T c==> cuniq cflatten cntrans f0 f1 f2 f3 f4 c==> cMEM f5 cntrans f0 f1 f2 f3 f4 c==> c==> c/\ cuniq cflatten cntrans f0 f1 f2 f3 f4 cMEM f5 cntrans f0 f1 f2 f3 f4 cuniq f5 cuniq f5
+ ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)) |- (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((((f_list L) x) = ((next_el ((rotate_to r1) x)) x)) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = (((POWER (next_el r1)) (SUC (((l'm L) r1) x))) x)) ==> (((MEM x) r1) /\ (uniq r1))))))))))
T c==> cMEM f0 cntrans f1 f2 f3 f4 f5 c==> cnormal_list f1 cntrans f1 f2 f3 f4 f5 c==> cMEM f4 f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 cntrans f1 f2 f3 f4 f5 c==> c= cnext_el f0 f4 cf_list f1 f4 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list cntrans f1 f2 f3 f4 f5 ce_list f4 c==> cs_flag_list f1 cntrans f1 f2 f3 f4 f5 f0 f4 c==> c= cf_list f1 f4 cnext_el crotate_to f0 f4 f4 c==> c= crtrans f1 f2 f3 f4 f5 f0 c==> c= cl'y f1 f0 f4 cPOWER * part cnext_el f0 cSUC cl'm f1 f0 f4 f4 c/\ cMEM f4 f0 cuniq f0
+ ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)) |- (((MEM x) r1) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) ==> (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) ==> ((((f_list L) x) = ((next_el ((rotate_to r1) x)) x)) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = (((POWER (next_el r1)) (SUC (((l'm L) r1) x))) x)) ==> (((MEM x) r1) /\ (uniq r1))))))))))
T c==> cMEM f0 f1 c==> cMEM f1 cntrans f2 f3 f4 f0 f5 c==> cnormal_list f2 cntrans f2 f3 f4 f0 f5 c/\ cMEM f0 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f2 cntrans f2 f3 f4 f0 f5 c==> c= cnext_el f1 f0 cf_list f2 f0 c==> cLET / cLET_END cfinal_list f2 b0 cfind_list cntrans f2 f3 f4 f0 f5 ce_list f0 c==> cs_flag_list f2 cntrans f2 f3 f4 f0 f5 f1 f0 c==> c= cf_list f2 f0 cnext_el crotate_to f1 f0 f0 c==> c= crtrans f2 f3 f4 f0 f5 f1 c==> c= cl'y f2 f1 f0 cPOWER * part cnext_el f1 cSUC cl'm f2 f1 f0 f0 c/\ cMEM f0 f1 cuniq f1
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x) |- ((MEM (((l'y L) (((((rtrans L) N) r) x) i)) x)) (((((rtrans L) N) r) x) i))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 cMEM cl'y f0 crtrans f0 f1 f2 f3 f4 f3 crtrans f0 f1 f2 f3 f4
+ ((((((rtrans L) N) r) x) i) = r1), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)) |- (((((((rtrans L) N) r) x) i) = r1) /\ (((((l'y L) r1) x) = (((POWER (next_el r1)) (SUC (((l'm L) r1) x))) x)) ==> (((MEM x) r1) /\ (uniq r1))))
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cMEM f3 f5 c==> cMEM f5 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= crtrans f0 f1 f2 f3 f4 f5 c==> c= cl'y f0 f5 f3 cPOWER * part cnext_el f5 cSUC cl'm f0 f5 f3 f3 c/\ cMEM f3 f5 cuniq f5
+ (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (!r1. (((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) ==> ((MEM (((l'y L) (((((rtrans L) N) r) x) i)) x)) (((((rtrans L) N) r) x) i))))
T c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= cf_list f0 f3 cnext_el crotate_to crtrans f0 f1 f2 f3 f4 f3 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 ! c==> * / c= crtrans f0 f1 f2 f3 f4 b1 b0 cMEM cl'y f0 crtrans f0 f1 f2 f3 f4 f3 crtrans f0 f1 f2 f3 f4
+ ((uniq (flatten (((((ntrans L) N) r) x) i))) /\ (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)) /\ (((all (f_last L)) (((((ntrans L) N) r) x) i)) /\ (((all (loop_list L)) (((((ntrans L) N) r) x) i)) /\ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))))))), ((MEM r1) (((((ntrans L) N) r) x) i)) |- (uniq r1)
T c==> c/\ cuniq cflatten cntrans f0 f1 f2 f3 f4 c/\ call / c~ c= b0 cNIL cntrans f0 f1 f2 f3 f4 c/\ call * part cf_last f0 cntrans f0 f1 f2 f3 f4 c/\ call * part cloop_list f0 cntrans f0 f1 f2 f3 f4 ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 c==> cMEM f5 cntrans f0 f1 f2 f3 f4 cuniq f5
+ (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), ((((((rtrans L) N) r) x) i) = r1) |- (((next_el r1) x) = ((f_list L) x))
T c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c= cnext_el f5 f3 cf_list f0 f3
+ (transform_assumption_v2 L) |- ((transform_assumption_v2 L) = T)
T c==> ctransform_assumption_v2 f0 c= ctransform_assumption_v2 f0 cT
- ((((((rtrans L) N) r) x) i) = r1), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) = T)
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 cT
+ |- ((!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i))))))) ==> ((MEM (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))) = T)
T c= ! ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 crtrans f0 b0 b1 b2 b3 cMEM cytrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 cT
+ |- (((!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x)))))))) ==> ((MEM (((l'y L) (((((rtrans L) N) r) x) i)) x)) (((((rtrans L) N) r) x) i))) = ((MEM (((l'y L) (((((rtrans L) N) r) x) i)) x)) (((((rtrans L) N) r) x) i)))
T c= c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cf_list b0 b3 cnext_el crotate_to crtrans b0 b1 b2 b3 b4 b3 b3 cMEM cl'y f0 crtrans f0 f1 f2 f3 f4 f3 crtrans f0 f1 f2 f3 f4 cMEM cl'y f0 crtrans f0 f1 f2 f3 f4 f3 crtrans f0 f1 f2 f3 f4
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 cT
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((\x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) x)
T * / c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 b0 cmarked_list f0 cntrans f0 f1 f2 b0 f3 crtrans f0 f1 f2 b0 f3 b0 f4
+ (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x)))))))) |- ((\x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x))))) x)
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cf_list b0 b3 cnext_el crotate_to crtrans b0 b1 b2 b3 b4 b3 b3 * / ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 b0 c= cf_list f0 b0 cnext_el crotate_to crtrans f0 f1 f2 b0 b1 b0 b0 f3
- ((all (f_last L)) (((((ntrans L) N) r) x) i)) |- (((all (f_last L)) (((((ntrans L) N) r) x) i)) = T)
T c==> call * part cf_last f0 cntrans f0 f1 f2 f3 f4 c= call * part cf_last f0 cntrans f0 f1 f2 f3 f4 cT
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((marked_list L) N) r) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) /\ (((MEM x) (((((rtrans L) N) r) x) i)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))) ==> ((MEM (((l'y L) (((((rtrans L) N) r) x) i)) x)) (((((rtrans L) N) r) x) i)))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> cmarked_list f0 f1 f2 f3 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 cntrans f0 f1 f2 f3 f4 c/\ cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c/\ cMEM f3 crtrans f0 f1 f2 f3 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cMEM cl'y f0 crtrans f0 f1 f2 f3 f4 f3 crtrans f0 f1 f2 f3 f4
+ |- (((!r. (!x. ((((f_list L) x) = ((next_el r) x)) ==> ((((l'y L) r) x) = (((ITER (SUC (((l'm L) r) x))) (next_el r)) x))))) ==> ((\r. (!x. ((((f_list L) x) = ((next_el r) x)) ==> ((((l'y L) r) x) = (((ITER (SUC (((l'm L) r) x))) (next_el r)) x))))) r1)) = ((\r. (!x. ((((f_list L) x) = ((next_el r) x)) ==> ((((l'y L) r) x) = (((ITER (SUC (((l'm L) r) x))) (next_el r)) x))))) r1))
T c= c==> ! ! c==> c= cf_list f0 b1 cnext_el b0 b1 c= cl'y f0 b0 b1 cITER cSUC cl'm f0 b0 b1 * part cnext_el b0 b1 * / ! c==> c= cf_list f0 b1 cnext_el b0 b1 c= cl'y f0 b0 b1 cITER cSUC cl'm f0 b0 b1 * part cnext_el b0 b1 f1 * / ! c==> c= cf_list f0 b1 cnext_el b0 b1 c= cl'y f0 b0 b1 cITER cSUC cl'm f0 b0 b1 * part cnext_el b0 b1 f1
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), ((((((rtrans L) N) r) x) i) = r1) |- (((~ ((final_list L) r1)) ==> (((final_list L) r1) = F)) = (((final_list L) r1) = F))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> c= crtrans f0 f1 f2 f3 f4 f5 c= c==> c~ cfinal_list f0 f5 c= cfinal_list f0 f5 cF c= cfinal_list f0 f5 cF
- ((MEM x) (((((rtrans L) N) r) x) i)) |- (((MEM x) (((((rtrans L) N) r) x) i)) = T)
T c==> cMEM f0 crtrans f1 f2 f3 f0 f4 c= cMEM f0 crtrans f1 f2 f3 f0 f4 cT
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) /\ (((MEM x) (((((rtrans L) N) r) x) i)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))), ((((marked_list L) N) r) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) /\ (((MEM x) (((((rtrans L) N) r) x) i)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))) /\ ((MEM (((l'y L) (((((rtrans L) N) r) x) i)) x)) (((((rtrans L) N) r) x) i)))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 cntrans f0 f1 f2 f3 f4 c/\ cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c/\ cMEM f3 crtrans f0 f1 f2 f3 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cmarked_list f0 f1 f2 f3 c/\ c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 cntrans f0 f1 f2 f3 f4 c/\ cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c/\ cMEM f3 crtrans f0 f1 f2 f3 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cMEM cl'y f0 crtrans f0 f1 f2 f3 f4 f3 crtrans f0 f1 f2 f3 f4
+ |- ((!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i))))))) ==> ((MEM (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))) = T)
T c= ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 crtrans f0 f1 f2 b0 b1 cMEM cytrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 cT
- ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = T)
T c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cT
- |- (((LET f) x) = (f x))
T c= cLET f0 f1 * f0 f1
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- ((((((rtrans L) N) r) x) i) = r1), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) = T)
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 cT
- |- ((!d. t) = t)
T c= ! f0 f0
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((MEM x) (((((rtrans L) N) r) x) i)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x) |- ((MEM (((l'y L) (((((rtrans L) N) r) x) i)) x)) (((((rtrans L) N) r) x) i))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c/\ cMEM f1 crtrans f0 f2 f3 f1 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f2 f3 f1 f4 c/\ c= cnext_el crtrans f0 f2 f3 f1 f4 f1 cf_list f0 f1 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f2 f3 f1 f4 ce_list f1 cs_flag_list f0 cntrans f0 f2 f3 f1 f4 crtrans f0 f2 f3 f1 f4 f1 c==> cMEM crtrans f0 f2 f3 f1 f4 cntrans f0 f2 f3 f1 f4 c==> cnormal_list f0 cntrans f0 f2 f3 f1 f4 c==> cmarked_list f0 f2 f3 f1 cMEM cl'y f0 crtrans f0 f2 f3 f1 f4 f1 crtrans f0 f2 f3 f1 f4
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
+ |- (((((((rtrans L) N) r) x) i) = (((((rtrans L) N) r) x) i)) = ((\r1. ((((((rtrans L) N) r) x) i) = r1)) (((((rtrans L) N) r) x) i)))
T c= c= crtrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 * / c= crtrans f0 f1 f2 f3 f4 b0 crtrans f0 f1 f2 f3 f4
- |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ ((MEM x) r1) |- ((((uniq (flatten (((((ntrans L) N) r) x) i))) /\ (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)) /\ (((all (f_last L)) (((((ntrans L) N) r) x) i)) /\ (((all (loop_list L)) (((((ntrans L) N) r) x) i)) /\ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))))))) ==> (uniq r1)) = (((uniq (flatten (((((ntrans L) N) r) x) i))) /\ (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)) /\ (((all (f_last L)) (((((ntrans L) N) r) x) i)) /\ (((all (loop_list L)) (((((ntrans L) N) r) x) i)) /\ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))))))) ==> (((MEM x) r1) /\ (uniq r1))))
T c==> cMEM f0 f1 c= c==> c/\ cuniq cflatten cntrans f2 f3 f4 f0 f5 c/\ call / c~ c= b0 cNIL cntrans f2 f3 f4 f0 f5 c/\ call * part cf_last f2 cntrans f2 f3 f4 f0 f5 c/\ call * part cloop_list f2 cntrans f2 f3 f4 f0 f5 ! c==> cMEM b0 cflatten cntrans f2 f3 f4 f0 f5 cSUBSET * * part cnode chypermap_of_list f2 b0 * part cset_of_list cflatten cntrans f2 f3 f4 f0 f5 cuniq f1 c==> c/\ cuniq cflatten cntrans f2 f3 f4 f0 f5 c/\ call / c~ c= b0 cNIL cntrans f2 f3 f4 f0 f5 c/\ call * part cf_last f2 cntrans f2 f3 f4 f0 f5 c/\ call * part cloop_list f2 cntrans f2 f3 f4 f0 f5 ! c==> cMEM b0 cflatten cntrans f2 f3 f4 f0 f5 cSUBSET * * part cnode chypermap_of_list f2 b0 * part cset_of_list cflatten cntrans f2 f3 f4 f0 f5 c/\ cMEM f0 f1 cuniq f1
- (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x)))))))) |- ((((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x))) = T)
T c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cf_list b0 b3 cnext_el crotate_to crtrans b0 b1 b2 b3 b4 b3 b3 c= c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 c= cf_list f0 f3 cnext_el crotate_to crtrans f0 f1 f2 f3 f4 f3 f3 cT
+ (uniq (flatten (((((ntrans L) N) r) x) i))), ((MEM r1) (((((ntrans L) N) r) x) i)) |- (T = ((((uniq (flatten (((((ntrans L) N) r) x) i))) /\ ((MEM r1) (((((ntrans L) N) r) x) i))) ==> (uniq r1)) ==> (uniq r1)))
T c==> cuniq cflatten cntrans f0 f1 f2 f3 f4 c==> cMEM f5 cntrans f0 f1 f2 f3 f4 c= cT c==> c==> c/\ cuniq cflatten cntrans f0 f1 f2 f3 f4 cMEM f5 cntrans f0 f1 f2 f3 f4 cuniq f5 cuniq f5
- |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
+ (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) ==> ((MEM (((l'y L) (((((rtrans L) N) r) x) i)) x)) (((((rtrans L) N) r) x) i))) = T)
T c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= cf_list f0 f3 cnext_el crotate_to crtrans f0 f1 f2 f3 f4 f3 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 cMEM cl'y f0 crtrans f0 f1 f2 f3 f4 f3 crtrans f0 f1 f2 f3 f4 cT
+ |- (((!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) ==> ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i)) = ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i))
T c= c==> ! c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4
- (!k. ((((MEM x) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) x)) r))) |- ((!k. ((((MEM x) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) x)) r))) /\ (!k. ((((MEM x) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) x)) r))))
T c==> ! c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1 c/\ ! c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1 ! c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1
+ |- ((\r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))) r)
T * / ! ! c= cytrans f0 f1 b0 b1 b2 cl'y f0 crtrans f0 f1 b0 b1 b2 b1 f2
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((((marked_list L) N) r) x) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i)))) |- ((MEM (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cMEM cytrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4
- (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))) |- ((((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i))))) = T)
T c==> ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 c= c==> cMEM f5 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 f5 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 cT
+ (good_list L), (transform_assumption_v2 L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i))))) |- ((MEM (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))
T c==> cgood_list f0 c==> ctransform_assumption_v2 f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cMEM cytrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4
+ (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x)), ((((((rtrans L) N) r) x) i) = r1), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))), ((MEM x) (((((rtrans L) N) r) x) i)), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = (((POWER (next_el r1)) (SUC (((l'm L) r1) x))) x)) ==> (((MEM x) r1) /\ (uniq r1))))
T c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= cf_list f0 f3 cnext_el crotate_to crtrans f0 f1 f2 f3 f4 f3 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c= cl'y f0 f5 f3 cPOWER * part cnext_el f5 cSUC cl'm f0 f5 f3 f3 c/\ cMEM f3 f5 cuniq f5
+ (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x)), ((((((rtrans L) N) r) x) i) = r1) |- (((((f_list L) x) = ((next_el ((rotate_to r1) x)) x)) ==> (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = (((POWER (next_el r1)) (SUC (((l'm L) r1) x))) x)) ==> (((MEM x) r1) /\ (uniq r1))))) = (((((((rtrans L) N) r) x) i) = r1) ==> (((((l'y L) r1) x) = (((POWER (next_el r1)) (SUC (((l'm L) r1) x))) x)) ==> (((MEM x) r1) /\ (uniq r1)))))
T c==> c= cf_list f0 f1 cnext_el crotate_to crtrans f0 f2 f3 f1 f4 f1 f1 c==> c= crtrans f0 f2 f3 f1 f4 f5 c= c==> c= cf_list f0 f1 cnext_el crotate_to f5 f1 f1 c==> c= crtrans f0 f2 f3 f1 f4 f5 c==> c= cl'y f0 f5 f1 cPOWER * part cnext_el f5 cSUC cl'm f0 f5 f1 f1 c/\ cMEM f1 f5 cuniq f5 c==> c= crtrans f0 f2 f3 f1 f4 f5 c==> c= cl'y f0 f5 f1 cPOWER * part cnext_el f5 cSUC cl'm f0 f5 f1 f1 c/\ cMEM f1 f5 cuniq f5
+ |- ((\k. ((((MEM x) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) x)) r))) k)
T * / c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1 f2
+ |- (((!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) ==> ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)) = ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x))
T c= c==> ! c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ |- ((!x. ((((f_list L) x) = ((next_el r) x)) ==> ((((l'y L) r) x) = (((ITER (SUC (((l'm L) r) x))) (next_el r)) x)))) = T)
T c= ! c==> c= cf_list f0 b0 cnext_el f1 b0 c= cl'y f0 f1 b0 cITER cSUC cl'm f0 f1 b0 * part cnext_el f1 b0 cT
+ ((((((rtrans L) N) r) x) i) = r1), ((MEM x) (((((rtrans L) N) r) x) i)) |- ((MEM x) r1)
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 cMEM f3 f5
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- ((((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i))))))) ==> ((MEM (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))) = T)
T c= c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cMEM cytrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 cT
- (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))) |- (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))
T c==> ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 c==> cMEM f5 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 f5 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4
+ |- ((\n. (((ITER n) f) = ((POWER f) n))) n)
T * / c= * * part cITER b0 f0 * * part cPOWER f0 b0 f1
+ ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) i)), ((normal_list L) (((((ntrans L) N) r) x) i)) |- (((MEM x) r1) /\ (uniq r1))
T c==> cMEM f0 f1 c==> cMEM f1 cntrans f2 f3 f4 f0 f5 c==> cnormal_list f2 cntrans f2 f3 f4 f0 f5 c/\ cMEM f0 f1 cuniq f1
- ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) |- (((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) = T)
T c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c= cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 cT
- |- ((((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1))) = T)
T c= c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0 cT
- |- ((\j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))) j)
T * / c= cPOWER * * part ctransform_list f0 f1 b0 c, f2 f3 c, cntrans f0 f2 f3 f1 b0 crtrans f0 f2 f3 f1 b0 f4
- |- ((LET_END t) = t)
T c= cLET_END f0 f0
- ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = T)
T c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cT
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), ((((((rtrans L) N) r) x) i) = r1) |- (~ ((final_list L) r1))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> c= crtrans f0 f1 f2 f3 f4 f5 c~ cfinal_list f0 f5
- (good_list L), (good_list_nodes L), (transform_assumption_v2 L) |- ((\x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x))))) = (\x. (!i. (((((marked_list L) N) r) x) ==> (((f_list L) x) = ((next_el ((rotate_to (((((rtrans L) N) r) x) i)) x)) x))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c= / ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 b0 c= cf_list f0 b0 cnext_el crotate_to crtrans f0 f1 f2 b0 b1 b0 b0 / ! c==> cmarked_list f0 f1 f2 b0 c= cf_list f0 b0 cnext_el crotate_to crtrans f0 f1 f2 b0 b1 b0 b0
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c= cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cT
- ((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) |- (((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) /\ (?r1. ((((((rtrans L) N) r) x) i) = r1)))
T c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c/\ * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0
- |- (((((((rtrans L) N) r) x) i) = r1) = ((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1))
T c= c= crtrans f0 f1 f2 f3 f4 f5 * / c= crtrans f0 f1 f2 f3 f4 b0 f5
- |- (((!f. (!x. (((LET f) x) = (f x)))) ==> ((\f. (!x. (((LET f) x) = (f x)))) f)) = ((\f. (!x. (((LET f) x) = (f x)))) f))
T c= c==> ! ! c= cLET b0 b1 * b0 b1 * / ! c= cLET b0 b1 * b0 b1 f0 * / ! c= cLET b0 b1 * b0 b1 f0
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), ((((((rtrans L) N) r) x) i) = r1) |- (((final_list L) r1) = F)
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> c= crtrans f0 f1 f2 f3 f4 f5 c= cfinal_list f0 f5 cF
- (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))) |- ((\d. (((MEM d) (flatten (((((ntrans L) N) r) x) i))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) i)))))) d)
T c==> ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 * / c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 f5
- (((MEM x) r) /\ (uniq r)) |- ((!k. ((((MEM x) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) x)) r))) ==> ((MEM (((POWER (next_el r)) k) x)) r))
T c==> c/\ cMEM f0 f1 cuniq f1 c==> ! c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1 cMEM cPOWER * part cnext_el f1 f2 f0 f1
- (!k. ((((MEM x) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) x)) r))) |- (((((MEM x) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) x)) r)) = T)
T c==> ! c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1 c= c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 f2 f0 f1 cT
- |- (((!k. ((((MEM x) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) x)) r))) ==> (!k. ((((MEM x) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) x)) r)))) = (!k. ((((MEM x) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) x)) r))))
T c= c==> ! c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1 ! c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1 ! c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1
- (!k. ((((MEM x) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) x)) r))), (((MEM x) r) /\ (uniq r)) |- ((!k. ((((MEM x) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) x)) r))) /\ ((MEM (((POWER (next_el r)) k) x)) r))
T c==> ! c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1 c==> c/\ cMEM f0 f1 cuniq f1 c/\ ! c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1 cMEM cPOWER * part cnext_el f1 f2 f0 f1
- (!k. ((((MEM x) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) x)) r))) |- ((\k. ((((MEM x) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) x)) r))) k)
T c==> ! c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1 * / c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1 f2
- ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)) |- (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) i)) = T)
T c==> call / c~ c= b0 cNIL cntrans f0 f1 f2 f3 f4 c= call / c~ c= b0 cNIL cntrans f0 f1 f2 f3 f4 cT
- ((((((rtrans L) N) r) x) i) = r1) |- ((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1)
T c==> c= crtrans f0 f1 f2 f3 f4 f5 * / c= crtrans f0 f1 f2 f3 f4 b0 f5
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!k. ((((MEM x) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) x)) r))), (((MEM x) r) /\ (uniq r)) |- ((MEM (((POWER (next_el r)) k) x)) r)
T c==> ! c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1 c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 f2 f0 f1
- ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) |- (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) = T)
T c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c= cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 cT
- ((((((rtrans L) N) r) x) i) = r1) |- (((((((rtrans L) N) r) x) i) = r1) /\ (?r1. ((((((rtrans L) N) r) x) i) = r1)))
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c/\ c= crtrans f0 f1 f2 f3 f4 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0
- |- (((((((rtrans L) N) r) x) i) = r1) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1)))
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0
- ((all (loop_list L)) (((((ntrans L) N) r) x) i)) |- (((all (loop_list L)) (((((ntrans L) N) r) x) i)) = T)
T c==> call * part cloop_list f0 cntrans f0 f1 f2 f3 f4 c= call * part cloop_list f0 cntrans f0 f1 f2 f3 f4 cT
- |- (!r1. (((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1))))
T c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0
- ((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) |- ((((((((rtrans L) N) r) x) i) = r1) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1))) = (?r1. ((((((rtrans L) N) r) x) i) = r1)))
T c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c= c==> c= crtrans f0 f1 f2 f3 f4 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0 c? / c= crtrans f0 f1 f2 f3 f4 b0
- |- ((\t. ((LET_END t) = t)) t)
T * / c= cLET_END b0 b0 f0
- ((((((rtrans L) N) r) x) i) = r1), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x)
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3
- |- ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))
T c= cPOWER * * part ctransform_list f0 f1 f2 c, f3 f4 c, cntrans f0 f3 f4 f1 f2 crtrans f0 f3 f4 f1 f2
- |- (((!x. (((\r1. ((((((rtrans L) N) r) x) i) = r1)) x) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1)))) ==> ((?r1. ((((((rtrans L) N) r) x) i) = r1)) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1)))) = ((?r1. ((((((rtrans L) N) r) x) i) = r1)) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1))))
T c= c==> ! c==> * / c= crtrans f0 f1 f2 f3 f4 b1 b0 c? / c= crtrans f0 f1 f2 f3 f4 b1 c==> c? / c= crtrans f0 f1 f2 f3 f4 b0 c? / c= crtrans f0 f1 f2 f3 f4 b0 c==> c? / c= crtrans f0 f1 f2 f3 f4 b0 c? / c= crtrans f0 f1 f2 f3 f4 b0
- |- (((!j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))) ==> ((\j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))) j)) = ((\j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))) j))
T c= c==> ! c= cPOWER * * part ctransform_list f0 f1 b0 c, f2 f3 c, cntrans f0 f2 f3 f1 b0 crtrans f0 f2 f3 f1 b0 * / c= cPOWER * * part ctransform_list f0 f1 b0 c, f2 f3 c, cntrans f0 f2 f3 f1 b0 crtrans f0 f2 f3 f1 b0 f4 * / c= cPOWER * * part ctransform_list f0 f1 b0 c, f2 f3 c, cntrans f0 f2 f3 f1 b0 crtrans f0 f2 f3 f1 b0 f4
- ((((((rtrans L) N) r) x) i) = r1), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) |- (((MEM r1) (((((ntrans L) N) r) x) i)) = T)
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c= cMEM f5 cntrans f0 f1 f2 f3 f4 cT
- |- ((!k. ((((MEM x) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) x)) r))) ==> (!k. ((((MEM x) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) x)) r))))
T c==> ! c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1 ! c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((marked_list L) N) r) x), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) /\ ((MEM (((l'y L) (((((rtrans L) N) r) x) i)) x)) (((((rtrans L) N) r) x) i)))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> cmarked_list f0 f1 f2 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c/\ cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cMEM cl'y f0 crtrans f0 f1 f2 f3 f4 f3 crtrans f0 f1 f2 f3 f4
- ((normal_list L) (((((ntrans L) N) r) x) i)) |- (((normal_list L) (((((ntrans L) N) r) x) i)) = T)
T c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c= cnormal_list f0 cntrans f0 f1 f2 f3 f4 cT
