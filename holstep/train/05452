N Reduction3.last_dest_triple0
C |- (!uvns. (!f. (!s. ((~ (uvns = NIL)) ==> ((LAST (((dest_triple0 f) s) uvns)) = (SOME (FST (SND (LAST uvns)))))))))
T c==> c~ c= f0 cNIL c= cLAST cdest_triple0 f1 f2 f0 cSOME cFST cSND cLAST f0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D SELECT_AX
A |- (!P. (!x. ((P x) ==> (P (@ P)))))
T c==> * f0 f1 * f0 c@ f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D COND_ELIM_THM
A |- ((P (((COND c) x) y)) = ((c ==> (P x)) /\ ((~ c) ==> (P y))))
T c= * f0 cCOND f1 f2 f3 c/\ c==> f1 * f0 f2 c==> c~ f1 * f0 f3
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D GABS_DEF
A |- (!P. ((GABS P) = (@ P)))
T c= cGABS f0 c@ f0
D GEQ_DEF
A |- (!a. (!b. (((GEQ a) b) = (a = b))))
T c= cGEQ f0 f1 c= f0 f1
D PAIR_EQ
A |- (!x. (!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))))
T c= c= c, f0 f1 c, f2 f3 c/\ c= f0 f2 c= f1 f3
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D PAIR
A |- (!x. (((FST x) , (SND x)) = x))
T c= c, cFST f0 cSND f0 f0
D pair_RECURSION
A |- (!PAIR'. (?fn. (!a0. (!a1. ((fn (a0 , a1)) = ((PAIR' a0) a1))))))
T c? / ! ! c= * b0 c, b1 b2 * * f0 b1 b2
D list_INDUCT
A |- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))))
T c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
D LAST
A |- ((LAST ((CONS h) t)) = (((COND (t = NIL)) h) (LAST t)))
T c= cLAST cCONS f0 f1 cCOND c= f1 cNIL f0 cLAST f1
D NOT_CONS_NIL
A |- (!h. (!t. (~ (((CONS h) t) = NIL))))
T c~ c= cCONS f0 f1 cNIL
D APPEND_EQ_NIL
A |- (!l. (!m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL)))))
T c= c= cAPPEND f0 f1 cNIL c/\ c= f0 cNIL c= f1 cNIL
D LAST_APPEND
A |- (!p. (!q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q)))))
T c= cLAST cAPPEND f0 f1 cCOND c= f1 cNIL cLAST f0 cLAST f1
D Tame_defs2.dest_triple0
A |- (((((dest_triple0 f) sofar) NIL) = sofar) /\ ((((dest_triple0 f) sofar) ((CONS uvn) uvns)) = ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (sofar = NIL)) (((dest_triple0 f) (flatten ((CONS sofar) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS sofar) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) uvns)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS sofar) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) uvns)) (((dest_triple0 f) (flatten ((CONS sofar) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) uvns))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST sofar)))))) ((nseq n) NONE)))))))))) uvn)))
T c/\ c= cdest_triple0 f0 f1 cNIL f1 c= cdest_triple0 f0 f1 cCONS f2 f3 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f1 cNIL cdest_triple0 f0 cflatten cCONS f1 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f3 cCOND c= b5 b1 cdest_triple0 f0 cflatten cCONS f1 cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f3 cCOND c= cnext_el f0 b5 b1 cdest_triple0 f0 cflatten cCONS f1 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f3 cdest_triple0 f0 cflatten cCONS f1 cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f3 cMAP part cSOME cbetwn f0 b5 b1 cthe cLAST f1 cnseq b3 cNONE f2
D Tame_list.concat_flatten
A |- (!x. (!xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs))))))
T c/\ c= cflatten cNIL cNIL c= cflatten cCONS f0 f1 cAPPEND f0 cflatten f1
- |- (~ (NIL = ((CONS h) t)))
T c~ c= cNIL cCONS f0 f1
- (ns = ((nseq n) NONE)) |- ((!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) = (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))))
T c==> c= f0 cnseq f1 cNONE c= ! ! c==> c~ c= f2 cNIL c= cLAST cdest_triple0 b0 b1 f2 cSOME cFST cSND cLAST f2 ! ! c==> c~ c= f2 cNIL c= cLAST cdest_triple0 b0 b1 f2 cSOME cFST cSND cLAST f2
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))), (~ (((next_el f) u0) = u)) |- ((~ (((next_el f) u0) = u)) /\ ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t)) = (SOME (FST (SND (((COND (t = NIL)) (u , (v , n))) (LAST t)))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> c~ c= cnext_el f1 f2 f3 c/\ c~ c= cnext_el f1 f2 f3 c= cLAST cdest_triple0 f1 cflatten cCONS f4 cCONS f5 cCONS cCONS cSOME f3 cNIL cCONS f6 cCONS cCONS cSOME f7 cNIL cNIL f0 cSOME cFST cSND cCOND c= f0 cNIL c, f3 c, f7 f8 cLAST f0
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) |- (((!x. (((\u. (?v. (?n. ((u , (v , n)) = h)))) x) ==> ((LAST ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE)))))))))) h)) = (SOME (FST (SND (LAST ((CONS h) t)))))))) ==> ((?u. (?v. (?n. ((u , (v , n)) = h)))) ==> ((LAST ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE)))))))))) h)) = (SOME (FST (SND (LAST ((CONS h) t)))))))) = ((?u. (?v. (?n. ((u , (v , n)) = h)))) ==> ((LAST ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE)))))))))) h)) = (SOME (FST (SND (LAST ((CONS h) t))))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c= c==> ! c==> * / c? / c? / c= c, b1 c, b2 b3 f1 b0 c= cLAST cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f2 cNIL cdest_triple0 f3 cflatten cCONS f2 cCONS cCONS cSOME b2 cNIL cCONS b5 cCONS cCONS cSOME b3 cNIL cNIL f0 cCOND c= b6 b2 cdest_triple0 f3 cflatten cCONS f2 cCONS b5 cCONS cCONS cSOME b3 cNIL cNIL f0 cCOND c= cnext_el f3 b6 b2 cdest_triple0 f3 cflatten cCONS f2 cCONS cCONS cSOME b2 cNIL cCONS b5 cCONS cCONS cSOME b3 cNIL cNIL f0 cdest_triple0 f3 cflatten cCONS f2 cCONS b7 cCONS cCONS cSOME b2 cNIL cCONS b5 cCONS cCONS cSOME b3 cNIL cNIL f0 cMAP part cSOME cbetwn f3 b6 b2 cthe cLAST f2 cnseq b4 cNONE f1 cSOME cFST cSND cLAST cCONS f1 f0 c==> c? / c? / c? / c= c, b0 c, b1 b2 f1 c= cLAST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f2 cNIL cdest_triple0 f3 cflatten cCONS f2 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cCOND c= b5 b1 cdest_triple0 f3 cflatten cCONS f2 cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cCOND c= cnext_el f3 b5 b1 cdest_triple0 f3 cflatten cCONS f2 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cdest_triple0 f3 cflatten cCONS f2 cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cMAP part cSOME cbetwn f3 b5 b1 cthe cLAST f2 cnseq b3 cNONE f1 cSOME cFST cSND cLAST cCONS f1 f0 c==> c? / c? / c? / c= c, b0 c, b1 b2 f1 c= cLAST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f2 cNIL cdest_triple0 f3 cflatten cCONS f2 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cCOND c= b5 b1 cdest_triple0 f3 cflatten cCONS f2 cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cCOND c= cnext_el f3 b5 b1 cdest_triple0 f3 cflatten cCONS f2 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cdest_triple0 f3 cflatten cCONS f2 cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cMAP part cSOME cbetwn f3 b5 b1 cthe cLAST f2 cnseq b3 cNONE f1 cSOME cFST cSND cLAST cCONS f1 f0
+ (t = NIL) |- ((t = NIL) /\ ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (u , (v , n)))))))
T c==> c= f0 cNIL c/\ c= f0 cNIL c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cSOME cFST cSND c, f3 c, f5 f6
+ ((\ns. (ns = ((nseq n) NONE))) ns) |- (ns = ((nseq n) NONE))
T c==> * / c= b0 cnseq f0 cNONE f1 c= f1 cnseq f0 cNONE
+ |- ((a /\ T) = a)
T c= c/\ f0 cT f0
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) |- (!n. (((\n. ((u , (v , n)) = h)) n) ==> ((LAST ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE)))))))))) h)) = (SOME (FST (SND (LAST ((CONS h) t))))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 ! c==> * / c= c, f1 c, f2 b1 f3 b0 c= cLAST cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f4 cNIL cdest_triple0 f5 cflatten cCONS f4 cCONS cCONS cSOME b2 cNIL cCONS b4 cCONS cCONS cSOME b3 cNIL cNIL f0 cCOND c= b5 b2 cdest_triple0 f5 cflatten cCONS f4 cCONS b4 cCONS cCONS cSOME b3 cNIL cNIL f0 cCOND c= cnext_el f5 b5 b2 cdest_triple0 f5 cflatten cCONS f4 cCONS cCONS cSOME b2 cNIL cCONS b4 cCONS cCONS cSOME b3 cNIL cNIL f0 cdest_triple0 f5 cflatten cCONS f4 cCONS b6 cCONS cCONS cSOME b2 cNIL cCONS b4 cCONS cCONS cSOME b3 cNIL cNIL f0 cMAP part cSOME cbetwn f5 b5 b2 cthe cLAST f4 cnseq b4 cNONE f3 cSOME cFST cSND cLAST cCONS f3 f0
+ |- ((t = NIL) ==> ((LAST (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (u , (v , n)))))))
T c==> c= f0 cNIL c= cLAST cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND c, f2 c, f4 f5
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) |- (((u , (v , n)) = h) ==> ((LAST ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE)))))))))) h)) = (SOME (FST (SND (LAST ((CONS h) t)))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> c= c, f1 c, f2 f3 f4 c= cLAST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f5 cNIL cdest_triple0 f6 cflatten cCONS f5 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cCOND c= b5 b1 cdest_triple0 f6 cflatten cCONS f5 cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cCOND c= cnext_el f6 b5 b1 cdest_triple0 f6 cflatten cCONS f5 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cdest_triple0 f6 cflatten cCONS f5 cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cMAP part cSOME cbetwn f6 b5 b1 cthe cLAST f5 cnseq b3 cNONE f4 cSOME cFST cSND cLAST cCONS f4 f0
- (~ (t = NIL)) |- ((NIL = t) = F)
T c==> c~ c= f0 cNIL c= c= cNIL f0 cF
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))), ((\n. ((u , (v , n)) = h)) n) |- (((\n. ((u , (v , n)) = h)) n) /\ ((LAST ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE)))))))))) h)) = (SOME (FST (SND (LAST ((CONS h) t)))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> * / c= c, f1 c, f2 b0 f3 f4 c/\ * / c= c, f1 c, f2 b0 f3 f4 c= cLAST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f5 cNIL cdest_triple0 f6 cflatten cCONS f5 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cCOND c= b5 b1 cdest_triple0 f6 cflatten cCONS f5 cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cCOND c= cnext_el f6 b5 b1 cdest_triple0 f6 cflatten cCONS f5 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cdest_triple0 f6 cflatten cCONS f5 cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cMAP part cSOME cbetwn f6 b5 b1 cthe cLAST f5 cnseq b3 cNONE f3 cSOME cFST cSND cLAST cCONS f3 f0
+ |- ((LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE))) = (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) (u , (v , n))))) NIL)) ((CONS ns) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (u , (v , n)))))) NIL)) NIL)))))) t)) (((COND (u0 = ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) (u , (v , n))))) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (u , (v , n)))))) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) (u , (v , n))))) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) (u , (v , n))))) NIL)) ((CONS ns) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (u , (v , n)))))) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) (u , (v , n))))) NIL)) ((CONS ns) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (u , (v , n)))))) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) (u , (v , n))))))))) (the (LAST s)))))) ((nseq ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (u , (v , n))))) NONE))))
T c= cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f0 cNIL cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL f4 cCOND c= b1 f2 cdest_triple0 f1 cflatten cCONS f0 cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL f4 cCOND c= cnext_el f1 b1 f2 cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL f4 cdest_triple0 f1 cflatten cCONS f0 cCONS b2 cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL f4 cMAP part cSOME cbetwn f1 b1 f2 cthe cLAST f0 cnseq f5 cNONE cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f0 cNIL cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME c@ / ! ! c= * b3 c, b4 b5 b4 c, f2 c, f3 f5 cNIL cCONS b0 cCONS cCONS cSOME c@ / ! ! c= * b3 c, b4 b5 b4 c@ / ! ! c= * b3 c, b4 b5 b5 c, f2 c, f3 f5 cNIL cNIL f4 cCOND c= b1 c@ / ! ! c= * b3 c, b4 b5 b4 c, f2 c, f3 f5 cdest_triple0 f1 cflatten cCONS f0 cCONS b0 cCONS cCONS cSOME c@ / ! ! c= * b3 c, b4 b5 b4 c@ / ! ! c= * b3 c, b4 b5 b5 c, f2 c, f3 f5 cNIL cNIL f4 cCOND c= cnext_el f1 b1 c@ / ! ! c= * b3 c, b4 b5 b4 c, f2 c, f3 f5 cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME c@ / ! ! c= * b3 c, b4 b5 b4 c, f2 c, f3 f5 cNIL cCONS b0 cCONS cCONS cSOME c@ / ! ! c= * b3 c, b4 b5 b4 c@ / ! ! c= * b3 c, b4 b5 b5 c, f2 c, f3 f5 cNIL cNIL f4 cdest_triple0 f1 cflatten cCONS f0 cCONS b2 cCONS cCONS cSOME c@ / ! ! c= * b3 c, b4 b5 b4 c, f2 c, f3 f5 cNIL cCONS b0 cCONS cCONS cSOME c@ / ! ! c= * b3 c, b4 b5 b4 c@ / ! ! c= * b3 c, b4 b5 b5 c, f2 c, f3 f5 cNIL cNIL f4 cMAP part cSOME cbetwn f1 b1 c@ / ! ! c= * b2 c, b3 b4 b3 c, f2 c, f3 f5 cthe cLAST f0 cnseq c@ / ! ! c= * b0 c, b1 b2 b2 c@ / ! ! c= * b0 c, b1 b2 b2 c, f2 c, f3 f5 cNONE
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) |- ((((\ns. (ns = ((nseq n) NONE))) ns) ==> ((LAST ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE))) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t))))))) = T)
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c= c==> * / c= b0 cnseq f1 cNONE f2 c= cLAST cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f3 cNIL cdest_triple0 f4 cflatten cCONS f3 cCONS cCONS cSOME f5 cNIL cCONS b0 cCONS cCONS cSOME f6 cNIL cNIL f0 cCOND c= b1 f5 cdest_triple0 f4 cflatten cCONS f3 cCONS b0 cCONS cCONS cSOME f6 cNIL cNIL f0 cCOND c= cnext_el f4 b1 f5 cdest_triple0 f4 cflatten cCONS f3 cCONS cCONS cSOME f5 cNIL cCONS b0 cCONS cCONS cSOME f6 cNIL cNIL f0 cdest_triple0 f4 cflatten cCONS f3 cCONS b2 cCONS cCONS cSOME f5 cNIL cCONS b0 cCONS cCONS cSOME f6 cNIL cNIL f0 cMAP part cSOME cbetwn f4 b1 f5 cthe cLAST f3 cnseq f1 cNONE cSOME cFST cSND cLAST cCONS c, f5 c, f6 f1 f0 cT
+ (t = NIL) |- (((LAST (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = (SOME v)) = ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) = (SOME (FST (SND (u , (v , n)))))))
T c==> c= f0 cNIL c= c= cLAST cflatten cCONS f1 cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cSOME f3 c= cLAST cdest_triple0 f4 cflatten cCONS f1 cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL f0 cSOME cFST cSND c, f5 c, f3 f6
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))), ((\v. (?n. ((u , (v , n)) = h))) v) |- (((\v. (?n. ((u , (v , n)) = h))) v) /\ ((LAST ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE)))))))))) h)) = (SOME (FST (SND (LAST ((CONS h) t)))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> * / c? / c= c, f1 c, b0 b1 f2 f3 c/\ * / c? / c= c, f1 c, b0 b1 f2 f3 c= cLAST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f4 cNIL cdest_triple0 f5 cflatten cCONS f4 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cCOND c= b5 b1 cdest_triple0 f5 cflatten cCONS f4 cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cCOND c= cnext_el f5 b5 b1 cdest_triple0 f5 cflatten cCONS f4 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cdest_triple0 f5 cflatten cCONS f4 cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cMAP part cSOME cbetwn f5 b5 b1 cthe cLAST f4 cnseq b3 cNONE f2 cSOME cFST cSND cLAST cCONS f2 f0
+ ((\u0. (u0 = (the (LAST s)))) u0) |- (u0 = (the (LAST s)))
T c==> * / c= b0 cthe cLAST f0 f1 c= f1 cthe cLAST f0
- (s = NIL) |- (((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t)))))) = ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t)))))))
T c==> c= f0 cNIL c= c= cLAST cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f5 cSOME cFST cSND cLAST cCONS c, f2 c, f4 f6 f5 c= cLAST cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f5 cSOME cFST cSND cLAST cCONS c, f2 c, f4 f6 f5
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) |- ((~ (s = NIL)) ==> ((LAST (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t)))) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t)))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> c~ c= f1 cNIL c= cLAST cCOND c= f2 f3 cdest_triple0 f4 cflatten cCONS f1 cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cCOND c= cnext_el f4 f2 f3 cdest_triple0 f4 cflatten cCONS f1 cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cdest_triple0 f4 cflatten cCONS f1 cCONS f7 cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cSOME cFST cSND cLAST cCONS c, f3 c, f6 f8 f0
- (u0 = (the (LAST s))) |- ((h = (u , (v , n))) = (h = (u , (v , n))))
T c==> c= f0 cthe cLAST f1 c= c= f2 c, f3 c, f4 f5 c= f2 c, f3 c, f4 f5
+ |- ((T ==> (?ns. (ns = ((nseq n) NONE)))) = (?ns. (ns = ((nseq n) NONE))))
T c= c==> cT c? / c= b0 cnseq f0 cNONE c? / c= b0 cnseq f0 cNONE
+ ((u , (v , n)) = h) |- (((LAST ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE)))))))))) h)) = (SOME (FST (SND (LAST ((CONS h) t)))))) = ((LAST ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE)))))))))) (u , (v , n)))) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t)))))))
T c==> c= c, f0 c, f1 f2 f3 c= c= cLAST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f4 cNIL cdest_triple0 f5 cflatten cCONS f4 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f6 cCOND c= b5 b1 cdest_triple0 f5 cflatten cCONS f4 cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f6 cCOND c= cnext_el f5 b5 b1 cdest_triple0 f5 cflatten cCONS f4 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f6 cdest_triple0 f5 cflatten cCONS f4 cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f6 cMAP part cSOME cbetwn f5 b5 b1 cthe cLAST f4 cnseq b3 cNONE f3 cSOME cFST cSND cLAST cCONS f3 f6 c= cLAST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f4 cNIL cdest_triple0 f5 cflatten cCONS f4 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f6 cCOND c= b5 b1 cdest_triple0 f5 cflatten cCONS f4 cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f6 cCOND c= cnext_el f5 b5 b1 cdest_triple0 f5 cflatten cCONS f4 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f6 cdest_triple0 f5 cflatten cCONS f4 cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f6 cMAP part cSOME cbetwn f5 b5 b1 cthe cLAST f4 cnseq b3 cNONE c, f0 c, f1 f2 cSOME cFST cSND cLAST cCONS c, f0 c, f1 f2 f6
+ |- (((?b. (b = ((MAP SOME) (((betwn f) u0) u)))) ==> ((LAST ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t))))))) = ((LAST ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t)))))))
T c= c==> c? / c= b0 cMAP part cSOME cbetwn f0 f1 f2 c= cLAST cLET / cLET_END cCOND c= f3 cNIL cdest_triple0 f0 cflatten cCONS f3 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cCOND c= f1 f2 cdest_triple0 f0 cflatten cCONS f3 cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cCOND c= cnext_el f0 f1 f2 cdest_triple0 f0 cflatten cCONS f3 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cdest_triple0 f0 cflatten cCONS f3 cCONS b0 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cMAP part cSOME cbetwn f0 f1 f2 cSOME cFST cSND cLAST cCONS c, f2 c, f5 f7 f6 c= cLAST cLET / cLET_END cCOND c= f3 cNIL cdest_triple0 f0 cflatten cCONS f3 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cCOND c= f1 f2 cdest_triple0 f0 cflatten cCONS f3 cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cCOND c= cnext_el f0 f1 f2 cdest_triple0 f0 cflatten cCONS f3 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cdest_triple0 f0 cflatten cCONS f3 cCONS b0 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cMAP part cSOME cbetwn f0 f1 f2 cSOME cFST cSND cLAST cCONS c, f2 c, f5 f7 f6
+ |- (n = ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (u , (v , n)))))
T c= f0 c@ / ! ! c= * b0 c, b1 b2 b2 c@ / ! ! c= * b0 c, b1 b2 b2 c, f1 c, f2 f0
+ |- (((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) = (SOME (FST (SND (LAST t)))))) = (((t = NIL) ==> ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) = (SOME (FST (SND (u , (v , n))))))) /\ ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) = (SOME (FST (SND (LAST t))))))))
T c= c==> c~ c= f0 cNIL c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND cLAST f0 c/\ c==> c= f0 cNIL c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND c, f5 c, f4 f6 c==> c~ c= f0 cNIL c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND cLAST f0
+ |- ((!f. (!s. ((~ (NIL = NIL)) ==> ((LAST (((dest_triple0 f) s) NIL)) = (SOME (FST (SND (LAST NIL)))))))) /\ (!h. (!t. ((!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) ==> (!f. (!s. ((~ (((CONS h) t) = NIL)) ==> ((LAST (((dest_triple0 f) s) ((CONS h) t))) = (SOME (FST (SND (LAST ((CONS h) t)))))))))))))
T c/\ ! ! c==> c~ c= cNIL cNIL c= cLAST cdest_triple0 b0 b1 cNIL cSOME cFST cSND cLAST cNIL ! ! c==> ! ! c==> c~ c= b1 cNIL c= cLAST cdest_triple0 b2 b3 b1 cSOME cFST cSND cLAST b1 ! ! c==> c~ c= cCONS b0 b1 cNIL c= cLAST cdest_triple0 b2 b3 cCONS b0 b1 cSOME cFST cSND cLAST cCONS b0 b1
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) |- (((\b. (b = ((MAP SOME) (((betwn f) u0) u)))) b) ==> ((LAST ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t)))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> * / c= b0 cMAP part cSOME cbetwn f1 f2 f3 f4 c= cLAST cLET / cLET_END cCOND c= f5 cNIL cdest_triple0 f1 cflatten cCONS f5 cCONS cCONS cSOME f3 cNIL cCONS f6 cCONS cCONS cSOME f7 cNIL cNIL f0 cCOND c= f2 f3 cdest_triple0 f1 cflatten cCONS f5 cCONS f6 cCONS cCONS cSOME f7 cNIL cNIL f0 cCOND c= cnext_el f1 f2 f3 cdest_triple0 f1 cflatten cCONS f5 cCONS cCONS cSOME f3 cNIL cCONS f6 cCONS cCONS cSOME f7 cNIL cNIL f0 cdest_triple0 f1 cflatten cCONS f5 cCONS b0 cCONS cCONS cSOME f3 cNIL cCONS f6 cCONS cCONS cSOME f7 cNIL cNIL f0 cMAP part cSOME cbetwn f1 f2 f3 cSOME cFST cSND cLAST cCONS c, f3 c, f7 f8 f0
+ |- ((flatten NIL) = NIL)
T c= cflatten cNIL cNIL
- (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))), (~ (t = NIL)) |- (T = ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) = (SOME (FST (SND (LAST t))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> c~ c= f0 cNIL c= cT c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND cLAST f0
+ |- ((T ==> (?b. (b = ((MAP SOME) (((betwn f) u0) u))))) = (?b. (b = ((MAP SOME) (((betwn f) u0) u)))))
T c= c==> cT c? / c= b0 cMAP part cSOME cbetwn f0 f1 f2 c? / c= b0 cMAP part cSOME cbetwn f0 f1 f2
+ |- (T ==> (?u. (?v. (?n. ((u , (v , n)) = h)))))
T c==> cT c? / c? / c? / c= c, b0 c, b1 b2 f0
+ |- ((((!f. (!s. ((~ (NIL = NIL)) ==> ((LAST (((dest_triple0 f) s) NIL)) = (SOME (FST (SND (LAST NIL)))))))) /\ (!h. (!t. ((!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) ==> (!f. (!s. ((~ (((CONS h) t) = NIL)) ==> ((LAST (((dest_triple0 f) s) ((CONS h) t))) = (SOME (FST (SND (LAST ((CONS h) t))))))))))))) ==> (!uvns. (!f. (!s. ((~ (uvns = NIL)) ==> ((LAST (((dest_triple0 f) s) uvns)) = (SOME (FST (SND (LAST uvns)))))))))) = (!uvns. (!f. (!s. ((~ (uvns = NIL)) ==> ((LAST (((dest_triple0 f) s) uvns)) = (SOME (FST (SND (LAST uvns))))))))))
T c= c==> c/\ ! ! c==> c~ c= cNIL cNIL c= cLAST cdest_triple0 b0 b1 cNIL cSOME cFST cSND cLAST cNIL ! ! c==> ! ! c==> c~ c= b1 cNIL c= cLAST cdest_triple0 b2 b3 b1 cSOME cFST cSND cLAST b1 ! ! c==> c~ c= cCONS b0 b1 cNIL c= cLAST cdest_triple0 b2 b3 cCONS b0 b1 cSOME cFST cSND cLAST cCONS b0 b1 ! ! ! c==> c~ c= b0 cNIL c= cLAST cdest_triple0 b1 b2 b0 cSOME cFST cSND cLAST b0 ! ! ! c==> c~ c= b0 cNIL c= cLAST cdest_triple0 b1 b2 b0 cSOME cFST cSND cLAST b0
- (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))), (~ (t = NIL)) |- ((~ (t = NIL)) /\ ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> c~ c= f0 cNIL c/\ c~ c= f0 cNIL c= cLAST cdest_triple0 f1 f2 f0 cSOME cFST cSND cLAST f0
+ |- ((((CONS h) t) = NIL) = F)
T c= c= cCONS f0 f1 cNIL cF
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) |- (((((next_el f) u0) = u) ==> ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (((COND (t = NIL)) (u , (v , n))) (LAST t))))))) /\ ((~ (((next_el f) u0) = u)) ==> ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t)) = (SOME (FST (SND (((COND (t = NIL)) (u , (v , n))) (LAST t))))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c/\ c==> c= cnext_el f1 f2 f3 c= cLAST cdest_triple0 f1 cflatten cCONS f4 cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cSOME cFST cSND cCOND c= f0 cNIL c, f3 c, f6 f7 cLAST f0 c==> c~ c= cnext_el f1 f2 f3 c= cLAST cdest_triple0 f1 cflatten cCONS f4 cCONS f8 cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cSOME cFST cSND cCOND c= f0 cNIL c, f3 c, f6 f7 cLAST f0
+ |- (T ==> (?ns. (ns = ((nseq n) NONE))))
T c==> cT c? / c= b0 cnseq f0 cNONE
+ |- ((\l. (!m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL))))) l)
T * / ! c= c= cAPPEND b0 b1 cNIL c/\ c= b0 cNIL c= b1 cNIL f0
- ((u , (v , n)) = h) |- ((!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) = (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))))
T c==> c= c, f0 c, f1 f2 f3 c= ! ! c==> c~ c= f4 cNIL c= cLAST cdest_triple0 b0 b1 f4 cSOME cFST cSND cLAST f4 ! ! c==> c~ c= f4 cNIL c= cLAST cdest_triple0 b0 b1 f4 cSOME cFST cSND cLAST f4
+ |- (((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) (v , n)) = ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (u , (v , n)))))
T c= c@ / ! ! c= * b0 c, b1 b2 b1 c, f0 f1 c@ / ! ! c= * b0 c, b1 b2 b1 c@ / ! ! c= * b0 c, b1 b2 b2 c, f2 c, f0 f1
+ |- ((\n. ((GEQ ((GABS (\_10537732. (!u. (!v. (!n. ((GEQ (_10537732 (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE))))))))) (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE))))) n)
T * / cGEQ cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f0 cNIL cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME b2 cNIL cCONS b4 cCONS cCONS cSOME b3 cNIL cNIL f2 cCOND c= b5 b2 cdest_triple0 f1 cflatten cCONS f0 cCONS b4 cCONS cCONS cSOME b3 cNIL cNIL f2 cCOND c= cnext_el f1 b5 b2 cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME b2 cNIL cCONS b4 cCONS cCONS cSOME b3 cNIL cNIL f2 cdest_triple0 f1 cflatten cCONS f0 cCONS b6 cCONS cCONS cSOME b2 cNIL cCONS b4 cCONS cCONS cSOME b3 cNIL cNIL f2 cMAP part cSOME cbetwn f1 b5 b2 cthe cLAST f0 cnseq b4 cNONE c, f3 c, f4 b0 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f0 cNIL cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME f3 cNIL cCONS b1 cCONS cCONS cSOME f4 cNIL cNIL f2 cCOND c= b2 f3 cdest_triple0 f1 cflatten cCONS f0 cCONS b1 cCONS cCONS cSOME f4 cNIL cNIL f2 cCOND c= cnext_el f1 b2 f3 cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME f3 cNIL cCONS b1 cCONS cCONS cSOME f4 cNIL cNIL f2 cdest_triple0 f1 cflatten cCONS f0 cCONS b3 cCONS cCONS cSOME f3 cNIL cCONS b1 cCONS cCONS cSOME f4 cNIL cNIL f2 cMAP part cSOME cbetwn f1 b2 f3 cthe cLAST f0 cnseq b0 cNONE f5
+ |- ((((((next_el f) u0) = u) ==> ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (((COND (t = NIL)) (u , (v , n))) (LAST t))))))) /\ ((~ (((next_el f) u0) = u)) ==> ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t)) = (SOME (FST (SND (((COND (t = NIL)) (u , (v , n))) (LAST t)))))))) = ((LAST (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))) = (SOME (FST (SND (((COND (t = NIL)) (u , (v , n))) (LAST t)))))))
T c= c/\ c==> c= cnext_el f0 f1 f2 c= cLAST cdest_triple0 f0 cflatten cCONS f3 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cSOME cFST cSND cCOND c= f6 cNIL c, f2 c, f5 f7 cLAST f6 c==> c~ c= cnext_el f0 f1 f2 c= cLAST cdest_triple0 f0 cflatten cCONS f3 cCONS f8 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cSOME cFST cSND cCOND c= f6 cNIL c, f2 c, f5 f7 cLAST f6 c= cLAST cCOND c= cnext_el f0 f1 f2 cdest_triple0 f0 cflatten cCONS f3 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cdest_triple0 f0 cflatten cCONS f3 cCONS f8 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cSOME cFST cSND cCOND c= f6 cNIL c, f2 c, f5 f7 cLAST f6
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((\m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL)))) m)
T * / c= c= cAPPEND f0 b0 cNIL c/\ c= f0 cNIL c= b0 cNIL f1
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) |- (((!x. (((\b. (b = ((MAP SOME) (((betwn f) u0) u)))) x) ==> ((LAST ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t)))))))) ==> ((?b. (b = ((MAP SOME) (((betwn f) u0) u)))) ==> ((LAST ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t)))))))) = ((?b. (b = ((MAP SOME) (((betwn f) u0) u)))) ==> ((LAST ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t))))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c= c==> ! c==> * / c= b1 cMAP part cSOME cbetwn f1 f2 f3 b0 c= cLAST cLET / cLET_END cCOND c= f4 cNIL cdest_triple0 f1 cflatten cCONS f4 cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cCOND c= f2 f3 cdest_triple0 f1 cflatten cCONS f4 cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cCOND c= cnext_el f1 f2 f3 cdest_triple0 f1 cflatten cCONS f4 cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cdest_triple0 f1 cflatten cCONS f4 cCONS b1 cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cMAP part cSOME cbetwn f1 f2 f3 cSOME cFST cSND cLAST cCONS c, f3 c, f6 f7 f0 c==> c? / c= b0 cMAP part cSOME cbetwn f1 f2 f3 c= cLAST cLET / cLET_END cCOND c= f4 cNIL cdest_triple0 f1 cflatten cCONS f4 cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cCOND c= f2 f3 cdest_triple0 f1 cflatten cCONS f4 cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cCOND c= cnext_el f1 f2 f3 cdest_triple0 f1 cflatten cCONS f4 cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cdest_triple0 f1 cflatten cCONS f4 cCONS b0 cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cMAP part cSOME cbetwn f1 f2 f3 cSOME cFST cSND cLAST cCONS c, f3 c, f6 f7 f0 c==> c? / c= b0 cMAP part cSOME cbetwn f1 f2 f3 c= cLAST cLET / cLET_END cCOND c= f4 cNIL cdest_triple0 f1 cflatten cCONS f4 cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cCOND c= f2 f3 cdest_triple0 f1 cflatten cCONS f4 cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cCOND c= cnext_el f1 f2 f3 cdest_triple0 f1 cflatten cCONS f4 cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cdest_triple0 f1 cflatten cCONS f4 cCONS b0 cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cMAP part cSOME cbetwn f1 f2 f3 cSOME cFST cSND cLAST cCONS c, f3 c, f6 f7 f0
- (~ (t = NIL)) |- (((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t)) = (SOME (FST (SND (LAST t))))) = ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t)) = (SOME (FST (SND (LAST t))))))
T c==> c~ c= f0 cNIL c= c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS f3 cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cSOME cFST cSND cLAST f0 c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS f3 cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cSOME cFST cSND cLAST f0
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) |- (((t = NIL) ==> ((LAST (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (u , (v , n))))))) /\ ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (LAST t)))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c/\ c==> c= f0 cNIL c= cLAST cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND c, f2 c, f4 f5 c==> c~ c= f0 cNIL c= cLAST cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND cLAST f0
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) |- (((s = NIL) ==> ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t))))))) /\ ((~ (s = NIL)) ==> ((LAST (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t)))) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t))))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c/\ c==> c= f1 cNIL c= cLAST cdest_triple0 f2 cflatten cCONS f1 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cSOME cFST cSND cLAST cCONS c, f3 c, f5 f6 f0 c==> c~ c= f1 cNIL c= cLAST cCOND c= f7 f3 cdest_triple0 f2 cflatten cCONS f1 cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cCOND c= cnext_el f2 f7 f3 cdest_triple0 f2 cflatten cCONS f1 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cdest_triple0 f2 cflatten cCONS f1 cCONS f8 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cSOME cFST cSND cLAST cCONS c, f3 c, f5 f6 f0
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))), (b = ((MAP SOME) (((betwn f) u0) u))) |- ((b = ((MAP SOME) (((betwn f) u0) u))) /\ ((LAST ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t)))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> c= f1 cMAP part cSOME cbetwn f2 f3 f4 c/\ c= f1 cMAP part cSOME cbetwn f2 f3 f4 c= cLAST cLET / cLET_END cCOND c= f5 cNIL cdest_triple0 f2 cflatten cCONS f5 cCONS cCONS cSOME f4 cNIL cCONS f6 cCONS cCONS cSOME f7 cNIL cNIL f0 cCOND c= f3 f4 cdest_triple0 f2 cflatten cCONS f5 cCONS f6 cCONS cCONS cSOME f7 cNIL cNIL f0 cCOND c= cnext_el f2 f3 f4 cdest_triple0 f2 cflatten cCONS f5 cCONS cCONS cSOME f4 cNIL cCONS f6 cCONS cCONS cSOME f7 cNIL cNIL f0 cdest_triple0 f2 cflatten cCONS f5 cCONS b0 cCONS cCONS cSOME f4 cNIL cCONS f6 cCONS cCONS cSOME f7 cNIL cNIL f0 cMAP part cSOME cbetwn f2 f3 f4 cSOME cFST cSND cLAST cCONS c, f4 c, f7 f8 f0
- (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) |- (((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))) = T)
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c= c==> c~ c= f0 cNIL c= cLAST cdest_triple0 f1 f2 f0 cSOME cFST cSND cLAST f0 cT
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) |- ((LAST ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ns)) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c= cLAST cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f1 cNIL cdest_triple0 f2 cflatten cCONS f1 cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL f0 cCOND c= b1 f3 cdest_triple0 f2 cflatten cCONS f1 cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL f0 cCOND c= cnext_el f2 b1 f3 cdest_triple0 f2 cflatten cCONS f1 cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL f0 cdest_triple0 f2 cflatten cCONS f1 cCONS b2 cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL f0 cMAP part cSOME cbetwn f2 b1 f3 cthe cLAST f1 f5 cSOME cFST cSND cLAST cCONS c, f3 c, f4 f6 f0
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) |- ((?u0. (u0 = (the (LAST s)))) ==> ((LAST ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t)))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> c? / c= b0 cthe cLAST f1 c= cLAST cLET / cLET_END cLET / cLET_END cCOND c= f1 cNIL cdest_triple0 f2 cflatten cCONS f1 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cCOND c= b0 f3 cdest_triple0 f2 cflatten cCONS f1 cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cCOND c= cnext_el f2 b0 f3 cdest_triple0 f2 cflatten cCONS f1 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cdest_triple0 f2 cflatten cCONS f1 cCONS b1 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cMAP part cSOME cbetwn f2 b0 f3 cthe cLAST f1 cSOME cFST cSND cLAST cCONS c, f3 c, f5 f6 f0
+ |- ((!v. (!n. (((\_10537730. (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10537730))) NIL)) ((CONS ns) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10537730)))) NIL)) NIL)))))) t)) (((COND (u0 = ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10537730))) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10537730)))) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10537730))) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10537730))) NIL)) ((CONS ns) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10537730)))) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10537730))) NIL)) ((CONS ns) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10537730)))) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10537730))))))) (the (LAST s)))))) ((nseq ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10537730))) NONE)))) (u , (v , n))) = (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE)))))) = T)
T c= ! ! c= * / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f0 cNIL cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME c@ / ! ! c= * b6 c, b7 b8 b7 b2 cNIL cCONS b3 cCONS cCONS cSOME c@ / ! ! c= * b6 c, b7 b8 b7 c@ / ! ! c= * b6 c, b7 b8 b8 b2 cNIL cNIL f2 cCOND c= b4 c@ / ! ! c= * b6 c, b7 b8 b7 b2 cdest_triple0 f1 cflatten cCONS f0 cCONS b3 cCONS cCONS cSOME c@ / ! ! c= * b6 c, b7 b8 b7 c@ / ! ! c= * b6 c, b7 b8 b8 b2 cNIL cNIL f2 cCOND c= cnext_el f1 b4 c@ / ! ! c= * b6 c, b7 b8 b7 b2 cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME c@ / ! ! c= * b6 c, b7 b8 b7 b2 cNIL cCONS b3 cCONS cCONS cSOME c@ / ! ! c= * b6 c, b7 b8 b7 c@ / ! ! c= * b6 c, b7 b8 b8 b2 cNIL cNIL f2 cdest_triple0 f1 cflatten cCONS f0 cCONS b5 cCONS cCONS cSOME c@ / ! ! c= * b6 c, b7 b8 b7 b2 cNIL cCONS b3 cCONS cCONS cSOME c@ / ! ! c= * b6 c, b7 b8 b7 c@ / ! ! c= * b6 c, b7 b8 b8 b2 cNIL cNIL f2 cMAP part cSOME cbetwn f1 b4 c@ / ! ! c= * b5 c, b6 b7 b6 b2 cthe cLAST f0 cnseq c@ / ! ! c= * b3 c, b4 b5 b5 c@ / ! ! c= * b3 c, b4 b5 b5 b2 cNONE c, f3 c, b0 b1 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f0 cNIL cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME f3 cNIL cCONS b2 cCONS cCONS cSOME b0 cNIL cNIL f2 cCOND c= b3 f3 cdest_triple0 f1 cflatten cCONS f0 cCONS b2 cCONS cCONS cSOME b0 cNIL cNIL f2 cCOND c= cnext_el f1 b3 f3 cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME f3 cNIL cCONS b2 cCONS cCONS cSOME b0 cNIL cNIL f2 cdest_triple0 f1 cflatten cCONS f0 cCONS b4 cCONS cCONS cSOME f3 cNIL cCONS b2 cCONS cCONS cSOME b0 cNIL cNIL f2 cMAP part cSOME cbetwn f1 b3 f3 cthe cLAST f0 cnseq b1 cNONE cT
+ |- ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs)))
T c= cflatten cCONS f0 f1 cAPPEND f0 cflatten f1
+ ((u = (FST h)) /\ ((v = (FST (SND h))) /\ (n = (SND (SND h))))) |- ((\n. ((u , (v , n)) = h)) n)
T c==> c/\ c= f0 cFST f1 c/\ c= f2 cFST cSND f1 c= f3 cSND cSND f1 * / c= c, f0 c, f2 b0 f1 f3
- (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))), (~ (t = NIL)) |- ((~ (t = NIL)) /\ ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (LAST t))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> c~ c= f0 cNIL c/\ c~ c= f0 cNIL c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cSOME cFST cSND cLAST f0
+ (u0 = (the (LAST s))) |- (((LAST ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t)))))) = ((LAST ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) u0)) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t)))))))
T c==> c= f0 cthe cLAST f1 c= c= cLAST cLET / cLET_END cLET / cLET_END cCOND c= f1 cNIL cdest_triple0 f2 cflatten cCONS f1 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cCOND c= b0 f3 cdest_triple0 f2 cflatten cCONS f1 cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cCOND c= cnext_el f2 b0 f3 cdest_triple0 f2 cflatten cCONS f1 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cdest_triple0 f2 cflatten cCONS f1 cCONS b1 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cMAP part cSOME cbetwn f2 b0 f3 cthe cLAST f1 cSOME cFST cSND cLAST cCONS c, f3 c, f5 f7 f6 c= cLAST cLET / cLET_END cLET / cLET_END cCOND c= f1 cNIL cdest_triple0 f2 cflatten cCONS f1 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cCOND c= b0 f3 cdest_triple0 f2 cflatten cCONS f1 cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cCOND c= cnext_el f2 b0 f3 cdest_triple0 f2 cflatten cCONS f1 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cdest_triple0 f2 cflatten cCONS f1 cCONS b1 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cMAP part cSOME cbetwn f2 b0 f3 f0 cSOME cFST cSND cLAST cCONS c, f3 c, f5 f7 f6
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) |- ((LAST ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE)))))))))) h)) = (SOME (FST (SND (LAST ((CONS h) t))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c= cLAST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f1 cNIL cdest_triple0 f2 cflatten cCONS f1 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cCOND c= b5 b1 cdest_triple0 f2 cflatten cCONS f1 cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cCOND c= cnext_el f2 b5 b1 cdest_triple0 f2 cflatten cCONS f1 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cdest_triple0 f2 cflatten cCONS f1 cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cMAP part cSOME cbetwn f2 b5 b1 cthe cLAST f1 cnseq b3 cNONE f3 cSOME cFST cSND cLAST cCONS f3 f0
+ |- ((\h. (!t. (~ (((CONS h) t) = NIL)))) h)
T * / ! c~ c= cCONS b0 b1 cNIL f0
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) |- ((?u. (?v. (?n. ((u , (v , n)) = h)))) ==> ((LAST ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE)))))))))) h)) = (SOME (FST (SND (LAST ((CONS h) t)))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> c? / c? / c? / c= c, b0 c, b1 b2 f1 c= cLAST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f2 cNIL cdest_triple0 f3 cflatten cCONS f2 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cCOND c= b5 b1 cdest_triple0 f3 cflatten cCONS f2 cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cCOND c= cnext_el f3 b5 b1 cdest_triple0 f3 cflatten cCONS f2 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cdest_triple0 f3 cflatten cCONS f2 cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cMAP part cSOME cbetwn f3 b5 b1 cthe cLAST f2 cnseq b3 cNONE f1 cSOME cFST cSND cLAST cCONS f1 f0
+ |- ((\_10537732. (!u. (!v. (!n. ((_10537732 (u , (v , n))) = (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE)))))))) (\_10537730. (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10537730))) NIL)) ((CONS ns) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10537730)))) NIL)) NIL)))))) t)) (((COND (u0 = ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10537730))) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10537730)))) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10537730))) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10537730))) NIL)) ((CONS ns) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10537730)))) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10537730))) NIL)) ((CONS ns) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10537730)))) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10537730))))))) (the (LAST s)))))) ((nseq ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10537730))) NONE)))))
T * / ! ! ! c= * b0 c, b1 c, b2 b3 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f0 cNIL cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f2 cCOND c= b5 b1 cdest_triple0 f1 cflatten cCONS f0 cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f2 cCOND c= cnext_el f1 b5 b1 cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f2 cdest_triple0 f1 cflatten cCONS f0 cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f2 cMAP part cSOME cbetwn f1 b5 b1 cthe cLAST f0 cnseq b3 cNONE / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f0 cNIL cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME c@ / ! ! c= * b4 c, b5 b6 b5 b0 cNIL cCONS b1 cCONS cCONS cSOME c@ / ! ! c= * b4 c, b5 b6 b5 c@ / ! ! c= * b4 c, b5 b6 b6 b0 cNIL cNIL f2 cCOND c= b2 c@ / ! ! c= * b4 c, b5 b6 b5 b0 cdest_triple0 f1 cflatten cCONS f0 cCONS b1 cCONS cCONS cSOME c@ / ! ! c= * b4 c, b5 b6 b5 c@ / ! ! c= * b4 c, b5 b6 b6 b0 cNIL cNIL f2 cCOND c= cnext_el f1 b2 c@ / ! ! c= * b4 c, b5 b6 b5 b0 cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME c@ / ! ! c= * b4 c, b5 b6 b5 b0 cNIL cCONS b1 cCONS cCONS cSOME c@ / ! ! c= * b4 c, b5 b6 b5 c@ / ! ! c= * b4 c, b5 b6 b6 b0 cNIL cNIL f2 cdest_triple0 f1 cflatten cCONS f0 cCONS b3 cCONS cCONS cSOME c@ / ! ! c= * b4 c, b5 b6 b5 b0 cNIL cCONS b1 cCONS cCONS cSOME c@ / ! ! c= * b4 c, b5 b6 b5 c@ / ! ! c= * b4 c, b5 b6 b6 b0 cNIL cNIL f2 cMAP part cSOME cbetwn f1 b2 c@ / ! ! c= * b3 c, b4 b5 b4 b0 cthe cLAST f0 cnseq c@ / ! ! c= * b1 c, b2 b3 b3 c@ / ! ! c= * b1 c, b2 b3 b3 b0 cNONE
+ |- ((((t = NIL) ==> ((LAST (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (u , (v , n))))))) /\ ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (LAST t))))))) = ((LAST (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (((COND (t = NIL)) (u , (v , n))) (LAST t)))))))
T c= c/\ c==> c= f0 cNIL c= cLAST cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND c, f2 c, f4 f5 c==> c~ c= f0 cNIL c= cLAST cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND cLAST f0 c= cLAST cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND cCOND c= f0 cNIL c, f2 c, f4 f5 cLAST f0
- (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))), (~ (t = NIL)) |- ((LAST (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (LAST t)))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> c~ c= f0 cNIL c= cLAST cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND cLAST f0
+ |- (((!x. (!xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs)))))) ==> ((\x. (!xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs)))))) x)) = ((\x. (!xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs)))))) x))
T c= c==> ! ! c/\ c= cflatten cNIL cNIL c= cflatten cCONS b0 b1 cAPPEND b0 cflatten b1 * / ! c/\ c= cflatten cNIL cNIL c= cflatten cCONS b0 b1 cAPPEND b0 cflatten b1 f0 * / ! c/\ c= cflatten cNIL cNIL c= cflatten cCONS b0 b1 cAPPEND b0 cflatten b1 f0
- (~ (((next_el f) u0) = u)) |- (((~ (u = ((next_el f) u0))) ==> ((u = ((next_el f) u0)) = F)) = ((u = ((next_el f) u0)) = F))
T c==> c~ c= cnext_el f0 f1 f2 c= c==> c~ c= f2 cnext_el f0 f1 c= c= f2 cnext_el f0 f1 cF c= c= f2 cnext_el f0 f1 cF
+ |- ((a = b) = ((GEQ a) b))
T c= c= f0 f1 cGEQ f0 f1
+ |- (((GABS (\_10537732. (!u. (!v. (!n. ((GEQ (_10537732 (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE))))))))) (u , (v , n))) = (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE))))
T c= cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f0 cNIL cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f2 cCOND c= b5 b1 cdest_triple0 f1 cflatten cCONS f0 cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f2 cCOND c= cnext_el f1 b5 b1 cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f2 cdest_triple0 f1 cflatten cCONS f0 cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f2 cMAP part cSOME cbetwn f1 b5 b1 cthe cLAST f0 cnseq b3 cNONE c, f3 c, f4 f5 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f0 cNIL cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL f2 cCOND c= b1 f3 cdest_triple0 f1 cflatten cCONS f0 cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL f2 cCOND c= cnext_el f1 b1 f3 cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL f2 cdest_triple0 f1 cflatten cCONS f0 cCONS b2 cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL f2 cMAP part cSOME cbetwn f1 b1 f3 cthe cLAST f0 cnseq f5 cNONE
- (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))), (~ (t = NIL)) |- ((~ (t = NIL)) /\ ((LAST (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (LAST t))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> c~ c= f0 cNIL c/\ c~ c= f0 cNIL c= cLAST cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND cLAST f0
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) |- (((\n. ((u , (v , n)) = h)) n) ==> ((LAST ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE)))))))))) h)) = (SOME (FST (SND (LAST ((CONS h) t)))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> * / c= c, f1 c, f2 b0 f3 f4 c= cLAST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f5 cNIL cdest_triple0 f6 cflatten cCONS f5 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cCOND c= b5 b1 cdest_triple0 f6 cflatten cCONS f5 cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cCOND c= cnext_el f6 b5 b1 cdest_triple0 f6 cflatten cCONS f5 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cdest_triple0 f6 cflatten cCONS f5 cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cMAP part cSOME cbetwn f6 b5 b1 cthe cLAST f5 cnseq b3 cNONE f3 cSOME cFST cSND cLAST cCONS f3 f0
- (((next_el f) u0) = u) |- (((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (((COND (t = NIL)) (u , (v , n))) (LAST t)))))) = ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (((COND (t = NIL)) (u , (v , n))) (LAST t)))))))
T c==> c= cnext_el f0 f1 f2 c= c= cLAST cdest_triple0 f0 cflatten cCONS f3 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cSOME cFST cSND cCOND c= f6 cNIL c, f2 c, f5 f7 cLAST f6 c= cLAST cdest_triple0 f0 cflatten cCONS f3 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cSOME cFST cSND cCOND c= f6 cNIL c, f2 c, f5 f7 cLAST f6
+ |- ((((t = NIL) ==> ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) = (SOME (FST (SND (u , (v , n))))))) /\ ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) = (SOME (FST (SND (LAST t))))))) = ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) = (SOME (FST (SND (((COND (t = NIL)) (u , (v , n))) (LAST t)))))))
T c= c/\ c==> c= f0 cNIL c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND c, f5 c, f4 f6 c==> c~ c= f0 cNIL c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND cLAST f0 c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND cCOND c= f0 cNIL c, f5 c, f4 f6 cLAST f0
+ (ns = ((nseq n) NONE)) |- ((\ns. (ns = ((nseq n) NONE))) ns)
T c==> c= f0 cnseq f1 cNONE * / c= b0 cnseq f1 cNONE f0
+ |- (((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (((COND (t = NIL)) (u , (v , n))) (LAST t)))))) = (((t = NIL) ==> ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (u , (v , n))))))) /\ ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (LAST t))))))))
T c= c= cLAST cdest_triple0 f0 cflatten cCONS f1 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f5 cSOME cFST cSND cCOND c= f5 cNIL c, f2 c, f4 f6 cLAST f5 c/\ c==> c= f5 cNIL c= cLAST cdest_triple0 f0 cflatten cCONS f1 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f5 cSOME cFST cSND c, f2 c, f4 f6 c==> c~ c= f5 cNIL c= cLAST cdest_triple0 f0 cflatten cCONS f1 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f5 cSOME cFST cSND cLAST f5
+ ((\b. (b = ((MAP SOME) (((betwn f) u0) u)))) b) |- (((b = ((MAP SOME) (((betwn f) u0) u))) ==> ((LAST ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t))))))) = ((LAST ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t)))))))
T c==> * / c= b0 cMAP part cSOME cbetwn f0 f1 f2 f3 c= c==> c= f3 cMAP part cSOME cbetwn f0 f1 f2 c= cLAST cLET / cLET_END cCOND c= f4 cNIL cdest_triple0 f0 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f7 cCOND c= f1 f2 cdest_triple0 f0 cflatten cCONS f4 cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f7 cCOND c= cnext_el f0 f1 f2 cdest_triple0 f0 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f7 cdest_triple0 f0 cflatten cCONS f4 cCONS b0 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f7 cMAP part cSOME cbetwn f0 f1 f2 cSOME cFST cSND cLAST cCONS c, f2 c, f6 f8 f7 c= cLAST cLET / cLET_END cCOND c= f4 cNIL cdest_triple0 f0 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f7 cCOND c= f1 f2 cdest_triple0 f0 cflatten cCONS f4 cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f7 cCOND c= cnext_el f0 f1 f2 cdest_triple0 f0 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f7 cdest_triple0 f0 cflatten cCONS f4 cCONS b0 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f7 cMAP part cSOME cbetwn f0 f1 f2 cSOME cFST cSND cLAST cCONS c, f2 c, f6 f8 f7
+ |- ((((\_10537730. (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10537730))) NIL)) ((CONS ns) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10537730)))) NIL)) NIL)))))) t)) (((COND (u0 = ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10537730))) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10537730)))) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10537730))) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10537730))) NIL)) ((CONS ns) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10537730)))) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10537730))) NIL)) ((CONS ns) ((CONS ((CONS (SOME ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10537730)))) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) _10537730))))))) (the (LAST s)))))) ((nseq ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) _10537730))) NONE)))) (u , (v , n))) = (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE)))) = T)
T c= c= * / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f0 cNIL cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME c@ / ! ! c= * b4 c, b5 b6 b5 b0 cNIL cCONS b1 cCONS cCONS cSOME c@ / ! ! c= * b4 c, b5 b6 b5 c@ / ! ! c= * b4 c, b5 b6 b6 b0 cNIL cNIL f2 cCOND c= b2 c@ / ! ! c= * b4 c, b5 b6 b5 b0 cdest_triple0 f1 cflatten cCONS f0 cCONS b1 cCONS cCONS cSOME c@ / ! ! c= * b4 c, b5 b6 b5 c@ / ! ! c= * b4 c, b5 b6 b6 b0 cNIL cNIL f2 cCOND c= cnext_el f1 b2 c@ / ! ! c= * b4 c, b5 b6 b5 b0 cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME c@ / ! ! c= * b4 c, b5 b6 b5 b0 cNIL cCONS b1 cCONS cCONS cSOME c@ / ! ! c= * b4 c, b5 b6 b5 c@ / ! ! c= * b4 c, b5 b6 b6 b0 cNIL cNIL f2 cdest_triple0 f1 cflatten cCONS f0 cCONS b3 cCONS cCONS cSOME c@ / ! ! c= * b4 c, b5 b6 b5 b0 cNIL cCONS b1 cCONS cCONS cSOME c@ / ! ! c= * b4 c, b5 b6 b5 c@ / ! ! c= * b4 c, b5 b6 b6 b0 cNIL cNIL f2 cMAP part cSOME cbetwn f1 b2 c@ / ! ! c= * b3 c, b4 b5 b4 b0 cthe cLAST f0 cnseq c@ / ! ! c= * b1 c, b2 b3 b3 c@ / ! ! c= * b1 c, b2 b3 b3 b0 cNONE c, f3 c, f4 f5 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f0 cNIL cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL f2 cCOND c= b1 f3 cdest_triple0 f1 cflatten cCONS f0 cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL f2 cCOND c= cnext_el f1 b1 f3 cdest_triple0 f1 cflatten cCONS f0 cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL f2 cdest_triple0 f1 cflatten cCONS f0 cCONS b2 cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL f2 cMAP part cSOME cbetwn f1 b1 f3 cthe cLAST f0 cnseq f5 cNONE cT
+ |- (((!xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs))))) ==> ((\xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs))))) xs)) = ((\xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs))))) xs))
T c= c==> ! c/\ c= cflatten cNIL cNIL c= cflatten cCONS f0 b0 cAPPEND f0 cflatten b0 * / c/\ c= cflatten cNIL cNIL c= cflatten cCONS f0 b0 cAPPEND f0 cflatten b0 f1 * / c/\ c= cflatten cNIL cNIL c= cflatten cCONS f0 b0 cAPPEND f0 cflatten b0 f1
+ |- (((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (LAST t)))))) = (((t = NIL) ==> ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (u , (v , n))))))) /\ ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (LAST t))))))))
T c= c==> c~ c= f0 cNIL c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cSOME cFST cSND cLAST f0 c/\ c==> c= f0 cNIL c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cSOME cFST cSND c, f3 c, f5 f6 c==> c~ c= f0 cNIL c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cSOME cFST cSND cLAST f0
+ (t = NIL) |- (((LAST (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (SOME v)) = ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t)) = (SOME (FST (SND (u , (v , n)))))))
T c==> c= f0 cNIL c= c= cLAST cflatten cCONS f1 cCONS f2 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cSOME f5 c= cLAST cdest_triple0 f6 cflatten cCONS f1 cCONS f2 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cSOME cFST cSND c, f3 c, f5 f7
- (((next_el f) u0) = u) |- (u = ((next_el f) u0))
T c==> c= cnext_el f0 f1 f2 c= f2 cnext_el f0 f1
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (t = NIL) |- (((LAST (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (SOME v)) = ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (u , (v , n)))))))
T c==> c= f0 cNIL c= c= cLAST cflatten cCONS f1 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cSOME f4 c= cLAST cdest_triple0 f5 cflatten cCONS f1 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND c, f2 c, f4 f6
+ |- (T = (!f. (!s. ((~ (NIL = NIL)) ==> ((LAST (((dest_triple0 f) s) NIL)) = (SOME (FST (SND (LAST NIL)))))))))
T c= cT ! ! c==> c~ c= cNIL cNIL c= cLAST cdest_triple0 b0 b1 cNIL cSOME cFST cSND cLAST cNIL
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) |- ((LAST (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t)))) = (SOME (FST (SND (((COND (t = NIL)) (u , (v , n))) (LAST t))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c= cLAST cCOND c= f1 f2 cdest_triple0 f3 cflatten cCONS f4 cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cCOND c= cnext_el f3 f1 f2 cdest_triple0 f3 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cdest_triple0 f3 cflatten cCONS f4 cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cSOME cFST cSND cCOND c= f0 cNIL c, f2 c, f6 f8 cLAST f0
- (b = ((MAP SOME) (((betwn f) u0) u))) |- ((((nseq n) NONE) = ns) = (((nseq n) NONE) = ns))
T c==> c= f0 cMAP part cSOME cbetwn f1 f2 f3 c= c= cnseq f4 cNONE f5 c= cnseq f4 cNONE f5
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) |- ((LAST (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c= cLAST cCOND c= f1 cNIL cdest_triple0 f2 cflatten cCONS f1 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cCOND c= f6 f3 cdest_triple0 f2 cflatten cCONS f1 cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cCOND c= cnext_el f2 f6 f3 cdest_triple0 f2 cflatten cCONS f1 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cdest_triple0 f2 cflatten cCONS f1 cCONS f7 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cSOME cFST cSND cLAST cCONS c, f3 c, f5 f8 f0
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) |- ((!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) /\ (!f. (!s. ((~ (((CONS h) t) = NIL)) ==> ((LAST (((dest_triple0 f) s) ((CONS h) t))) = (SOME (FST (SND (LAST ((CONS h) t))))))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c/\ ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 ! ! c==> c~ c= cCONS f1 f0 cNIL c= cLAST cdest_triple0 b0 b1 cCONS f1 f0 cSOME cFST cSND cLAST cCONS f1 f0
+ (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) |- (((~ (s = NIL)) ==> ((LAST (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t)))) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t))))))) = (((s = NIL) ==> ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t))))))) /\ ((~ (s = NIL)) ==> ((LAST (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t)))) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t)))))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c= c==> c~ c= f1 cNIL c= cLAST cCOND c= f2 f3 cdest_triple0 f4 cflatten cCONS f1 cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cCOND c= cnext_el f4 f2 f3 cdest_triple0 f4 cflatten cCONS f1 cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cdest_triple0 f4 cflatten cCONS f1 cCONS f7 cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cSOME cFST cSND cLAST cCONS c, f3 c, f6 f8 f0 c/\ c==> c= f1 cNIL c= cLAST cdest_triple0 f4 cflatten cCONS f1 cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cSOME cFST cSND cLAST cCONS c, f3 c, f6 f8 f0 c==> c~ c= f1 cNIL c= cLAST cCOND c= f2 f3 cdest_triple0 f4 cflatten cCONS f1 cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cCOND c= cnext_el f4 f2 f3 cdest_triple0 f4 cflatten cCONS f1 cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cdest_triple0 f4 cflatten cCONS f1 cCONS f7 cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cSOME cFST cSND cLAST cCONS c, f3 c, f6 f8 f0
+ |- ((ns = ((nseq n) NONE)) ==> (?ns. (ns = ((nseq n) NONE))))
T c==> c= f0 cnseq f1 cNONE c? / c= b0 cnseq f1 cNONE
- (((next_el f) u0) = u) |- ((((next_el f) u0) = u) = T)
T c==> c= cnext_el f0 f1 f2 c= c= cnext_el f0 f1 f2 cT
- (u0 = u) |- ((u0 = u) = T)
T c==> c= f0 f1 c= c= f0 f1 cT
+ |- (((!t. (~ (((CONS h) t) = NIL))) ==> ((\t. (~ (((CONS h) t) = NIL))) t)) = ((\t. (~ (((CONS h) t) = NIL))) t))
T c= c==> ! c~ c= cCONS f0 b0 cNIL * / c~ c= cCONS f0 b0 cNIL f1 * / c~ c= cCONS f0 b0 cNIL f1
+ |- (!f. (!s. ((~ (NIL = NIL)) ==> ((LAST (((dest_triple0 f) s) NIL)) = (SOME (FST (SND (LAST NIL))))))))
T c==> c~ c= cNIL cNIL c= cLAST cdest_triple0 f0 f1 cNIL cSOME cFST cSND cLAST cNIL
+ |- ((\x. (!xs. (((flatten NIL) = NIL) /\ ((flatten ((CONS x) xs)) = ((APPEND x) (flatten xs)))))) x)
T * / ! c/\ c= cflatten cNIL cNIL c= cflatten cCONS b0 b1 cAPPEND b0 cflatten b1 f0
- (t = NIL) |- (((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t)) = (SOME (FST (SND (u , (v , n)))))) = ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t)) = (SOME (FST (SND (u , (v , n)))))))
T c==> c= f0 cNIL c= c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS f3 cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cSOME cFST cSND c, f4 c, f6 f7 c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS f3 cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cSOME cFST cSND c, f4 c, f6 f7
- (~ (u0 = u)) |- (((~ (u = u0)) ==> ((u = u0) = F)) = ((u = u0) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
- (~ (u0 = u)) |- ((u0 = u) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
- (b = ((MAP SOME) (((betwn f) u0) u))) |- ((!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) = (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))))
T c==> c= f0 cMAP part cSOME cbetwn f1 f2 f3 c= ! ! c==> c~ c= f4 cNIL c= cLAST cdest_triple0 b0 b1 f4 cSOME cFST cSND cLAST f4 ! ! c==> c~ c= f4 cNIL c= cLAST cdest_triple0 b0 b1 f4 cSOME cFST cSND cLAST f4
- (b = ((MAP SOME) (((betwn f) u0) u))) |- (((the (LAST s)) = u0) = ((the (LAST s)) = u0))
T c==> c= f0 cMAP part cSOME cbetwn f1 f2 f3 c= c= cthe cLAST f4 f2 c= cthe cLAST f4 f2
- (~ (((next_el f) u0) = u)) |- ((((next_el f) u0) = u) = F)
T c==> c~ c= cnext_el f0 f1 f2 c= c= cnext_el f0 f1 f2 cF
- (~ (t = NIL)) |- (T = (~ (t = NIL)))
T c==> c~ c= f0 cNIL c= cT c~ c= f0 cNIL
- (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))), (~ (t = NIL)) |- (T = ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (LAST t))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> c~ c= f0 cNIL c= cT c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cSOME cFST cSND cLAST f0
- |- (((~ (NIL = ((CONS h) t))) ==> ((NIL = ((CONS h) t)) = F)) = ((NIL = ((CONS h) t)) = F))
T c= c==> c~ c= cNIL cCONS f0 f1 c= c= cNIL cCONS f0 f1 cF c= c= cNIL cCONS f0 f1 cF
- (t = NIL) |- (((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (u , (v , n)))))) = ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (u , (v , n)))))))
T c==> c= f0 cNIL c= c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cSOME cFST cSND c, f3 c, f5 f6 c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cSOME cFST cSND c, f3 c, f5 f6
- (NIL = t) |- (t = NIL)
T c==> c= cNIL f0 c= f0 cNIL
- (NIL = ((CONS h) t)) |- (((CONS h) t) = NIL)
T c==> c= cNIL cCONS f0 f1 c= cCONS f0 f1 cNIL
- (b = ((MAP SOME) (((betwn f) u0) u))) |- ((h = (u , (v , n))) = (h = (u , (v , n))))
T c==> c= f0 cMAP part cSOME cbetwn f1 f2 f3 c= c= f4 c, f3 c, f5 f6 c= f4 c, f3 c, f5 f6
- (t = NIL) |- (((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) = (SOME (FST (SND (u , (v , n)))))) = ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) = (SOME (FST (SND (u , (v , n)))))))
T c==> c= f0 cNIL c= c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND c, f5 c, f4 f6 c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND c, f5 c, f4 f6
- (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))), (?n. ((u , (v , n)) = h)) |- ((?n. ((u , (v , n)) = h)) /\ ((LAST ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE)))))))))) h)) = (SOME (FST (SND (LAST ((CONS h) t)))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> c? / c= c, f1 c, f2 b0 f3 c/\ c? / c= c, f1 c, f2 b0 f3 c= cLAST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f4 cNIL cdest_triple0 f5 cflatten cCONS f4 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cCOND c= b5 b1 cdest_triple0 f5 cflatten cCONS f4 cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cCOND c= cnext_el f5 b5 b1 cdest_triple0 f5 cflatten cCONS f4 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cdest_triple0 f5 cflatten cCONS f4 cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cMAP part cSOME cbetwn f5 b5 b1 cthe cLAST f4 cnseq b3 cNONE f3 cSOME cFST cSND cLAST cCONS f3 f0
- (u = u0) |- (u0 = u)
T c==> c= f0 f1 c= f1 f0
- (~ (t = NIL)) |- (~ (NIL = t))
T c==> c~ c= f0 cNIL c~ c= cNIL f0
- (ns = ((nseq n) NONE)) |- ((h = (u , (v , n))) = (h = (u , (v , n))))
T c==> c= f0 cnseq f1 cNONE c= c= f2 c, f3 c, f4 f1 c= f2 c, f3 c, f4 f1
- (u0 = (the (LAST s))) |- ((((nseq n) NONE) = ns) = (((nseq n) NONE) = ns))
T c==> c= f0 cthe cLAST f1 c= c= cnseq f2 cNONE f3 c= cnseq f2 cNONE f3
- (((CONS h) t) = NIL) |- (NIL = ((CONS h) t))
T c==> c= cCONS f0 f1 cNIL c= cNIL cCONS f0 f1
- (t = NIL) |- (((LAST (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (u , (v , n)))))) = ((LAST (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (u , (v , n)))))))
T c==> c= f0 cNIL c= c= cLAST cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND c, f2 c, f4 f5 c= cLAST cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND c, f2 c, f4 f5
- (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))), (~ (t = NIL)) |- ((~ (t = NIL)) /\ ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t)) = (SOME (FST (SND (LAST t))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> c~ c= f0 cNIL c/\ c~ c= f0 cNIL c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS f3 cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cSOME cFST cSND cLAST f0
- (~ (u0 = u)) |- (((LAST (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))) = (SOME (FST (SND (((COND (t = NIL)) (u , (v , n))) (LAST t)))))) = ((LAST (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))) = (SOME (FST (SND (((COND (t = NIL)) (u , (v , n))) (LAST t)))))))
T c==> c~ c= f0 f1 c= c= cLAST cCOND c= cnext_el f2 f0 f1 cdest_triple0 f2 cflatten cCONS f3 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cdest_triple0 f2 cflatten cCONS f3 cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cSOME cFST cSND cCOND c= f6 cNIL c, f1 c, f5 f8 cLAST f6 c= cLAST cCOND c= cnext_el f2 f0 f1 cdest_triple0 f2 cflatten cCONS f3 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cdest_triple0 f2 cflatten cCONS f3 cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cSOME cFST cSND cCOND c= f6 cNIL c, f1 c, f5 f8 cLAST f6
- |- (T = ((LAST (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (SOME v)))
T c= cT c= cLAST cflatten cCONS f0 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cSOME f3
- (u = ((next_el f) u0)) |- (((next_el f) u0) = u)
T c==> c= f0 cnext_el f1 f2 c= cnext_el f1 f2 f0
- |- (T = ((LAST (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (SOME v)))
T c= cT c= cLAST cflatten cCONS f0 cCONS f1 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cSOME f4
- (~ (t = NIL)) |- (((~ (NIL = t)) ==> ((NIL = t) = F)) = ((NIL = t) = F))
T c==> c~ c= f0 cNIL c= c==> c~ c= cNIL f0 c= c= cNIL f0 cF c= c= cNIL f0 cF
- (~ (t = NIL)) |- (((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (LAST t))))) = ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (LAST t))))))
T c==> c~ c= f0 cNIL c= c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cSOME cFST cSND cLAST f0 c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cSOME cFST cSND cLAST f0
- (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))), (~ (t = NIL)) |- ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) = (SOME (FST (SND (LAST t)))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> c~ c= f0 cNIL c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND cLAST f0
- (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))), (~ (t = NIL)) |- (T = ((LAST (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (LAST t))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> c~ c= f0 cNIL c= cT c= cLAST cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND cLAST f0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (~ (u0 = u)) |- (~ (u = u0))
T c==> c~ c= f0 f1 c~ c= f1 f0
- |- ((NIL = ((CONS h) t)) = F)
T c= c= cNIL cCONS f0 f1 cF
- (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))), (~ (t = NIL)) |- ((~ (t = NIL)) /\ ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) = (SOME (FST (SND (LAST t))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> c~ c= f0 cNIL c/\ c~ c= f0 cNIL c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND cLAST f0
- (~ (t = NIL)) |- ((t = NIL) = F)
T c==> c~ c= f0 cNIL c= c= f0 cNIL cF
- (~ (u0 = u)) |- ((u = u0) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- (u0 = (the (LAST s))) |- ((!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))) = (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))))
T c==> c= f0 cthe cLAST f1 c= ! ! c==> c~ c= f2 cNIL c= cLAST cdest_triple0 b0 b1 f2 cSOME cFST cSND cLAST f2 ! ! c==> c~ c= f2 cNIL c= cLAST cdest_triple0 b0 b1 f2 cSOME cFST cSND cLAST f2
- |- (T = ((LAST (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (SOME v)))
T c= cT c= cLAST cflatten cCONS cNIL cCONS cCONS cSOME f0 cNIL cCONS f1 cCONS cCONS cSOME f2 cNIL cNIL cSOME f2
- (~ (t = NIL)) |- (((LAST (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (LAST t))))) = ((LAST (((dest_triple0 f) (flatten ((CONS NIL) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (LAST t))))))
T c==> c~ c= f0 cNIL c= c= cLAST cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND cLAST f0 c= cLAST cdest_triple0 f1 cflatten cCONS cNIL cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND cLAST f0
- (~ (((next_el f) u0) = u)) |- (~ (u = ((next_el f) u0)))
T c==> c~ c= cnext_el f0 f1 f2 c~ c= f2 cnext_el f0 f1
- (~ (((next_el f) u0) = u)) |- ((u = ((next_el f) u0)) = F)
T c==> c~ c= cnext_el f0 f1 f2 c= c= f2 cnext_el f0 f1 cF
- (~ (t = NIL)) |- (((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) = (SOME (FST (SND (LAST t))))) = ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) = (SOME (FST (SND (LAST t))))))
T c==> c~ c= f0 cNIL c= c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND cLAST f0 c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f0 cSOME cFST cSND cLAST f0
- (t = NIL) |- ((t = NIL) = T)
T c==> c= f0 cNIL c= c= f0 cNIL cT
- (~ (s = NIL)) |- (((LAST (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t)))) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t)))))) = ((LAST (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t)))) = (SOME (FST (SND (LAST ((CONS (u , (v , n))) t)))))))
T c==> c~ c= f0 cNIL c= c= cLAST cCOND c= f1 f2 cdest_triple0 f3 cflatten cCONS f0 cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cCOND c= cnext_el f3 f1 f2 cdest_triple0 f3 cflatten cCONS f0 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cdest_triple0 f3 cflatten cCONS f0 cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cSOME cFST cSND cLAST cCONS c, f2 c, f5 f8 f6 c= cLAST cCOND c= f1 f2 cdest_triple0 f3 cflatten cCONS f0 cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cCOND c= cnext_el f3 f1 f2 cdest_triple0 f3 cflatten cCONS f0 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cdest_triple0 f3 cflatten cCONS f0 cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cSOME cFST cSND cLAST cCONS c, f2 c, f5 f8 f6
- (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))), (~ (t = NIL)) |- ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t)) = (SOME (FST (SND (LAST t)))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> c~ c= f0 cNIL c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS f3 cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cSOME cFST cSND cLAST f0
- (u0 = u) |- (((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) = (SOME (FST (SND (((COND (t = NIL)) (u , (v , n))) (LAST t)))))) = ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) = (SOME (FST (SND (((COND (t = NIL)) (u , (v , n))) (LAST t)))))))
T c==> c= f0 f1 c= c= cLAST cdest_triple0 f2 cflatten cCONS f3 cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cSOME cFST cSND cCOND c= f6 cNIL c, f1 c, f5 f7 cLAST f6 c= cLAST cdest_triple0 f2 cflatten cCONS f3 cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 cSOME cFST cSND cCOND c= f6 cNIL c, f1 c, f5 f7 cLAST f6
- (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))), (~ (t = NIL)) |- ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) = (SOME (FST (SND (LAST t)))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> c~ c= f0 cNIL c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f0 cSOME cFST cSND cLAST f0
- (~ (((next_el f) u0) = u)) |- (((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t)) = (SOME (FST (SND (((COND (t = NIL)) (u , (v , n))) (LAST t)))))) = ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t)) = (SOME (FST (SND (((COND (t = NIL)) (u , (v , n))) (LAST t)))))))
T c==> c~ c= cnext_el f0 f1 f2 c= c= cLAST cdest_triple0 f0 cflatten cCONS f3 cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f7 cSOME cFST cSND cCOND c= f7 cNIL c, f2 c, f6 f8 cLAST f7 c= cLAST cdest_triple0 f0 cflatten cCONS f3 cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f7 cSOME cFST cSND cCOND c= f7 cNIL c, f2 c, f6 f8 cLAST f7
- (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))), (?v. (?n. ((u , (v , n)) = h))) |- ((?v. (?n. ((u , (v , n)) = h))) /\ ((LAST ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ns. (LET_END ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (s = NIL)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((COND (u0 = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) t)) (((COND (((next_el f) u0) = u)) (((dest_triple0 f) (flatten ((CONS s) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) t)) (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST s)))))) ((nseq n) NONE)))))))))) h)) = (SOME (FST (SND (LAST ((CONS h) t)))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> c? / c? / c= c, f1 c, b0 b1 f2 c/\ c? / c? / c= c, f1 c, b0 b1 f2 c= cLAST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND c= f3 cNIL cdest_triple0 f4 cflatten cCONS f3 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cCOND c= b5 b1 cdest_triple0 f4 cflatten cCONS f3 cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cCOND c= cnext_el f4 b5 b1 cdest_triple0 f4 cflatten cCONS f3 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cdest_triple0 f4 cflatten cCONS f3 cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME b2 cNIL cNIL f0 cMAP part cSOME cbetwn f4 b5 b1 cthe cLAST f3 cnseq b3 cNONE f2 cSOME cFST cSND cLAST cCONS f2 f0
- (t = NIL) |- (NIL = t)
T c==> c= f0 cNIL c= cNIL f0
- |- (T = ((LAST (flatten ((CONS s) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = (SOME v)))
T c= cT c= cLAST cflatten cCONS f0 cCONS f1 cCONS cCONS cSOME f2 cNIL cNIL cSOME f2
- (!f. (!s. ((~ (t = NIL)) ==> ((LAST (((dest_triple0 f) s) t)) = (SOME (FST (SND (LAST t)))))))), (~ (t = NIL)) |- (T = ((LAST (((dest_triple0 f) (flatten ((CONS s) ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) t)) = (SOME (FST (SND (LAST t))))))
T c==> ! ! c==> c~ c= f0 cNIL c= cLAST cdest_triple0 b0 b1 f0 cSOME cFST cSND cLAST f0 c==> c~ c= f0 cNIL c= cT c= cLAST cdest_triple0 f1 cflatten cCONS f2 cCONS f3 cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 cSOME cFST cSND cLAST f0
