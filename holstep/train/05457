N COVERING_SPACE_LIFT_PATH_STRONG
C |- (!p. (!c. (!s. (!g. (!a. ((((covering_space (c , p)) s) /\ ((path g) /\ (((path_image g) SUBSET s) /\ (((pathstart g) = (p a)) /\ (a IN c))))) ==> (?h. ((path h) /\ (((path_image h) SUBSET c) /\ (((pathstart h) = a) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (h t)) = (g t))))))))))))))
T c==> c/\ ccovering_space c, f0 f1 f2 c/\ cpath f3 c/\ cSUBSET * part cpath_image f3 f2 c/\ c= cpathstart f3 * f1 f4 cIN f4 f0 c? / c/\ cpath b0 c/\ cSUBSET * part cpath_image b0 f0 c/\ c= cpathstart b0 f4 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f1 * b0 b1 * f3 b1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D LEFT_OR_FORALL_THM
A |- (!P. (!Q. (((!x. (P x)) \/ Q) = (!x. ((P x) \/ Q)))))
T c= c\/ ! * f0 b0 f1 ! c\/ * f0 b0 f1
D RIGHT_OR_FORALL_THM
A |- (!P. (!Q. ((P \/ (!x. (Q x))) = (!x. (P \/ (Q x))))))
T c= c\/ f0 ! * f1 b0 ! c\/ f0 * f1 b0
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D IN_SING
A |- (!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y))))
T c= cIN f0 * * part cINSERT f1 part cEMPTY c= f0 f1
D IN_IMAGE
A |- (!y. (!s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s)))))))
T c= cIN f0 * * part cIMAGE f1 f2 c? / c/\ c= f0 * f1 b0 cIN b0 f2
D FORALL_IN_INSERT
A |- (!P. (!a. (!s. ((!x. ((x IN (a INSERT s)) ==> (P x))) = ((P a) /\ (!x. ((x IN s) ==> (P x))))))))
T c= ! c==> cIN b0 * * part cINSERT f0 f1 * f2 b0 c/\ * f2 f0 ! c==> cIN b0 f1 * f2 b0
D IMAGE_o
A |- (!f. (!g. (!s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s))))))
T c= * * part cIMAGE * * part co f0 f1 f2 * * part cIMAGE f0 * * part cIMAGE f1 f2
D FORALL_IN_IMAGE
A |- (!f. (!s. ((!y. ((y IN ((IMAGE f) s)) ==> (P y))) = (!x. ((x IN s) ==> (P (f x)))))))
T c= ! c==> cIN b0 * * part cIMAGE f0 f1 * f2 b0 ! c==> cIN b0 f1 * f2 * f0 b0
D FSTCART_PASTECART
A |- (!x. (!y. ((fstcart ((pastecart x) y)) = x)))
T c= cfstcart cpastecart f0 f1 f0
D FORALL_IN_PCROSS
A |- ((!z. ((z IN (s PCROSS t)) ==> (P z))) = (!x. (!y. (((x IN s) /\ (y IN t)) ==> (P ((pastecart x) y))))))
T c= ! c==> cIN b0 * * part cPCROSS f0 f1 * f2 b0 ! ! c==> c/\ cIN b0 f0 cIN b1 f1 * f2 cpastecart b0 b1
D PASTECART_IN_PCROSS
A |- (!s. (!t. (!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))))))
T c= cIN cpastecart f0 f1 * * part cPCROSS f2 f3 c/\ cIN f0 f2 cIN f1 f3
D LINEAR_FSTCART
A |- (linear fstcart)
T clinear part cfstcart
D CONTINUOUS_ON_SUBSET
A |- (!f. (!s. (!t. ((((continuous_on f) s) /\ (t SUBSET s)) ==> ((continuous_on f) t)))))
T c==> c/\ ccontinuous_on f0 f1 cSUBSET f2 f1 ccontinuous_on f0 f2
D CONTINUOUS_ON_CONST
A |- (!s. (!c. ((continuous_on (\x. c)) s)))
T ccontinuous_on / f0 f1
D CONTINUOUS_ON_ID
A |- (!s. ((continuous_on (\x. x)) s))
T ccontinuous_on / b0 f0
D CONTINUOUS_ON_COMPOSE
A |- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 ccontinuous_on * * part co f2 f0 f1
D LINEAR_CONTINUOUS_ON
A |- (!f. (!s. ((linear f) ==> ((continuous_on f) s))))
T c==> clinear f0 ccontinuous_on f0 f1
D CONTINUOUS_ON_PASTECART
A |- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s)))))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 ccontinuous_on / cpastecart * f0 b0 * f2 b0 f1
D path
A |- (!g. ((path g) = ((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c= cpath f0 ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
D pathstart
A |- (!g. ((pathstart g) = (g (vec (NUMERAL _0)))))
T c= cpathstart f0 * f0 cvec cNUMERAL c_0
D path_image
A |- (!g. ((path_image g) = ((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c= * part cpath_image f0 * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
D COVERING_SPACE_LIFT_HOMOTOPY
A |- (!p. (!c. (!s. (!h. (!f. (!u. ((((covering_space (c , p)) s) /\ (((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c)))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))
T c==> c/\ ccovering_space c, f0 f1 f2 c/\ ccontinuous_on f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c/\ cSUBSET * * part cIMAGE f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 f2 c/\ ! c==> cIN b0 f4 c= * f3 cpastecart cvec cNUMERAL c_0 b0 * f1 * f5 b0 c/\ ccontinuous_on f5 f4 cSUBSET * * part cIMAGE f5 f4 f0 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 f0 c/\ ! c==> cIN b1 f4 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f5 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c= * f3 b1 * f1 * b0 b1
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 ! ! c==> ccontinuous_on f0 b0 c==> cSUBSET b1 b0 ccontinuous_on f0 b1
+ |- ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((fstcart ((pastecart x) y)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> T))
T c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN cfstcart cpastecart f0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cT
+ ((((x = a) /\ (x' = b)) /\ (~ (s x))) /\ (s a)) |- (~ (s a))
T c==> c/\ c/\ c/\ c= f0 f1 c= f2 f3 c~ * f4 f0 * f4 f1 c~ * f4 f1
+ |- (((continuous_on f) s) ==> (!t. ((t SUBSET s) ==> ((continuous_on f) t))))
T c==> ccontinuous_on f0 f1 ! c==> cSUBSET b0 f1 ccontinuous_on f0 b0
+ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))) |- ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (k ((pastecart t) arb))) = (g t)))
T c==> ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f1 cfstcart b0 * f2 * f3 b0 c==> cIN f4 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f2 * f3 cpastecart f4 f0 * f1 f4
+ |- (((!s. ((linear f) ==> ((continuous_on f) s))) ==> ((\s. ((linear f) ==> ((continuous_on f) s))) s)) = ((\s. ((linear f) ==> ((continuous_on f) s))) s))
T c= c==> ! c==> clinear f0 ccontinuous_on f0 b0 * / c==> clinear f0 ccontinuous_on f0 b0 f1 * / c==> clinear f0 ccontinuous_on f0 b0 f1
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) |- (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) /\ (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))
T c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 c/\ c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0
+ ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) |- (((!x. (((~ (_783221 = ((I g) x))) \/ (~ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x))) \/ ((I s) _783221))) ==> ((\x. (((~ (_783221 = ((I g) x))) \/ (~ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x))) \/ ((I s) _783221))) _783222)) = ((\x. (((~ (_783221 = ((I g) x))) \/ (~ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x))) \/ ((I s) _783221))) _783222))
T c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 c= c==> ! c\/ c\/ c~ c= f5 cI f2 b0 c~ cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 cI f4 f5 * / c\/ c\/ c~ c= f5 cI f2 b0 c~ cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 cI f4 f5 f6 * / c\/ c\/ c~ c= f5 cI f2 b0 c~ cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 cI f4 f5 f6
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ |- ((\g. ((path g) = ((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) g)
T * / c= cpath b0 ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0
+ ((\k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET c) /\ (((k ((pastecart (vec (NUMERAL _0))) arb)) = a) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))))))) k) |- (((((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET c) /\ (((k ((pastecart (vec (NUMERAL _0))) arb)) = a) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z)))))))) ==> (?h. (((continuous_on h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET c) /\ (((h (vec (NUMERAL _0))) = a) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (h t)) = (g t))))))))) = (?h. (((continuous_on h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET c) /\ (((h (vec (NUMERAL _0))) = a) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (h t)) = (g t)))))))))
T c==> * / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY f1 c/\ c= * b0 cpastecart cvec cNUMERAL c_0 f0 f2 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f3 cfstcart b1 * f4 * b0 b1 f5 c= c==> c/\ ccontinuous_on f5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c/\ cSUBSET * * part cIMAGE f5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY f1 c/\ c= * f5 cpastecart cvec cNUMERAL c_0 f0 f2 ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f3 cfstcart b0 * f4 * f5 b0 c? / c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ c= * b0 cvec cNUMERAL c_0 f2 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 * b0 b1 * f3 b1 c? / c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ c= * b0 cvec cNUMERAL c_0 f2 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 * b0 b1 * f3 b1
+ |- (!a. (!s. (!b. ((!x. (((x = a) /\ (?x. (x = b))) ==> (s x))) = (s a)))))
T c= ! c==> c/\ c= b0 f0 c? / c= b1 f1 * f2 b0 * f2 f0
- |- ((!x'. ((~ (t x')) \/ (s x))) = ((!x. (~ (t x))) \/ (s x)))
T c= ! c\/ c~ * f0 b0 * f1 f2 c\/ ! c~ * f0 b0 * f1 f2
+ ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) |- ((((I g) (vec (NUMERAL _0))) = ((I p) a)) /\ ((!x. ((!x. ((~ (x = ((I g) x))) \/ (~ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x)))) \/ ((I s) x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))
T c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 c/\ c= cI f2 cvec cNUMERAL c_0 cI f3 f1 c/\ ! c\/ ! c\/ c~ c= b0 cI f2 b1 c~ cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 cI f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4
+ |- ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart x) y))) IN s)) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s)))
T c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f3 cfstcart cpastecart f0 f1 f4 c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f3 f0 f4
+ (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- ((\f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) f)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 * / ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 f0
+ (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), ((x = (k x')) /\ (t x')) |- (((c (k x')) ==> F) = F)
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c/\ c= f4 * f2 f5 * f0 f5 c= c==> * f3 * f2 f5 cF cF
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) |- ((\f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))) f)
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 * / ! c==> ccovering_space c, f0 f1 f2 c==> c/\ ccontinuous_on f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c/\ cSUBSET * * part cIMAGE f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 f2 c/\ ! c==> cIN b2 b1 c= * f3 cpastecart cvec cNUMERAL c_0 b2 * f1 * b0 b2 c/\ ccontinuous_on b0 b1 cSUBSET * * part cIMAGE b0 b1 f0 c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 f0 c/\ ! c==> cIN b3 b1 c= * b2 cpastecart cvec cNUMERAL c_0 b3 * b0 b3 ! c==> cIN b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= * f3 b3 * f1 * b2 b3 f4
+ |- (((!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) ==> ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)) = ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s))
T c= c==> ! ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
- ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> (((IMAGE k) t) SUBSET c)), (t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) |- (((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> (((IMAGE k) t) SUBSET c)) /\ (((IMAGE k) t) SUBSET c))
T c==> c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY cSUBSET * * part cIMAGE f2 f0 f3 c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c/\ c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY cSUBSET * * part cIMAGE f2 f0 f3 cSUBSET * * part cIMAGE f2 f0 f3
+ |- ((\f. (!s. ((linear f) ==> ((continuous_on f) s)))) f)
T * / ! c==> clinear b0 ccontinuous_on b0 b1 f0
+ |- (((?x. (?x. (((x = a) /\ (x = b)) /\ (~ (s x))))) /\ (s a)) = (?x. ((?x. (((x = a) /\ (x = b)) /\ (~ (s x)))) /\ (s a))))
T c= c/\ c? / c? / c/\ c/\ c= b0 f0 c= b1 f1 c~ * f2 b0 * f2 f0 c? / c/\ c? / c/\ c/\ c= b0 f0 c= b1 f1 c~ * f2 b0 * f2 f0
- ((x = (k x')) /\ (t x')) |- (F = F)
T c==> c/\ c= f0 * f1 f2 * f3 f2 c= cF cF
+ |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (b = b)) ==> (b = b))
T c==> c~ c= f0 f0 c= f0 f0
- (~ (t x')), ((x = (k x')) /\ (t x')) |- ((~ (t x')) /\ (t x'))
T c==> c~ * f0 f1 c==> c/\ c= f2 * f3 f1 * f0 f1 c/\ c~ * f0 f1 * f0 f1
- |- ((~ (_783267 = _783268)) \/ ((BIT1 _783267) = (BIT1 _783268)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ |- (((!y. ((x IN (y INSERT EMPTY)) = (x = y))) ==> ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y)) = ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y))
T c= c==> ! c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1
+ |- ((\y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))) y)
T * / c= cIN cpastecart f0 b0 * * part cPCROSS f1 f2 c/\ cIN f0 f1 cIN b0 f2 f3
+ ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) |- (((_783221 = ((I g) _783222)) /\ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) _783222)) ==> ((I s) _783221))
T c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 c==> c/\ c= f5 cI f2 f6 cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f6 cI f4 f5
- |- ((_783273 = _783275) ==> ((~ (_783274 = _783276)) \/ ((_783273 , _783274) = (_783275 , _783276))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- ((((x = a) /\ (x' = b)) /\ (~ (s x))) /\ (s a)) |- ((s a) = (s a))
T c==> c/\ c/\ c/\ c= f0 f1 c= f2 f3 c~ * f4 f0 * f4 f1 c= * f4 f1 * f4 f1
+ ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) |- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((continuous_on k) t)))
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY ccontinuous_on f0 b0
- |- ((_783278 = _783280) ==> ((~ (_783277 = _783279)) \/ (((CONS _783277) _783278) = ((CONS _783279) _783280))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f2 f0 cCONS f3 f1
- |- (T = (((~ (t _783184)) \/ (s _783184)) = ((s _783184) \/ (~ (t _783184)))))
T c= cT c= c\/ c~ * f0 f1 * f2 f1 c\/ * f2 f1 c~ * f0 f1
- |- ((!x'. ((~ (x = (k x'))) \/ (~ (s x)))) = ((!x. (~ (x = (k x)))) \/ (~ (s x))))
T c= ! c\/ c~ c= f0 * f1 b0 c~ * f2 f3 c\/ ! c~ c= f0 * f1 b0 c~ * f2 f3
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ |- ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) = p') ==> ((p' ==> (((g (fstcart ((pastecart x) y))) IN s) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart x) y))) IN s)) = (p' ==> q'))))
T c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cIN * f4 cfstcart cpastecart f0 f1 f5 f6 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f4 cfstcart cpastecart f0 f1 f5 c==> f3 f6
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((continuous_on k) t))), (t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) |- ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((continuous_on k) t))
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY ccontinuous_on f1 b0 c==> cSUBSET f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c/\ cSUBSET f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY ccontinuous_on f1 f2
+ |- (((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) ==> F)
T c==> c/\ ! c\/ c\/ c~ c= b0 f0 ! c~ c= b1 f1 * f2 b0 c~ * f2 f0 cF
+ ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) |- ((!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x)))) = T)
T c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 c= ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 c= b0 f6 * f4 * f2 f5 cT
+ |- (((~ (_783203 = a)) \/ ((~ (_783204 = b)) \/ (s _783203))) = ((s _783203) \/ ((~ (_783203 = a)) \/ (~ (_783204 = b)))))
T c= c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 * f4 f0 c\/ * f4 f0 c\/ c~ c= f0 f1 c~ c= f2 f3
+ ((covering_space (c , p)) s) |- ((\h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))) (g o fstcart))
T c==> ccovering_space c, f0 f1 f2 * / ! ! c==> c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 f2 c/\ ! c==> cIN b3 b2 c= * b0 cpastecart cvec cNUMERAL c_0 b3 * f1 * b1 b3 c/\ ccontinuous_on b1 b2 cSUBSET * * part cIMAGE b1 b2 f0 c? / c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 f0 c/\ ! c==> cIN b4 b2 c= * b3 cpastecart cvec cNUMERAL c_0 b4 * b1 b4 ! c==> cIN b4 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c= * b0 b4 * f1 * b3 b4 * * part co f3 part cfstcart
+ |- ((\f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) f)
T * / ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1 f1
- |- ((?x'. (((x' = a) /\ (?x. (x = b))) /\ (~ (s x)))) = ((?x. ((x = a) /\ (?x. (x = b)))) /\ (~ (s x))))
T c= c? / c/\ c/\ c= b0 f0 c? / c= b1 f1 c~ * f2 f3 c/\ c? / c/\ c= b0 f0 c? / c= b1 f1 c~ * f2 f3
+ |- ((!s. (!b. ((!x. (((x = a) /\ (?x. (x = b))) ==> (s x))) = (s a)))) = T)
T c= ! ! c= ! c==> c/\ c= b2 f0 c? / c= b3 b1 * b0 b2 * b0 f0 cT
- ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F), (((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) |- (((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) /\ ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))
T c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c/\ c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF
+ |- (T = (((IMAGE (\t. ((pastecart t) arb))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))))
T c= cT cSUBSET * * part cIMAGE / cpastecart b0 f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY
- ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) |- (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) = T)
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY cT
- |- ((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((continuous_on k) t))) ==> (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((continuous_on k) t))))
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY ccontinuous_on f1 b0 ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY ccontinuous_on f1 b0
+ |- (((!p'. (!q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) = p') ==> ((p' ==> (((fstcart ((pastecart x) y)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((fstcart ((pastecart x) y)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) = p') ==> ((p' ==> (((fstcart ((pastecart x) y)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((fstcart ((pastecart x) y)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) = p') ==> ((p' ==> (((fstcart ((pastecart x) y)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((fstcart ((pastecart x) y)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= cIN cfstcart cpastecart f0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN cfstcart cpastecart f0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 * / ! c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= cIN cfstcart cpastecart f0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN cfstcart cpastecart f0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 f3 * / ! c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= cIN cfstcart cpastecart f0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN cfstcart cpastecart f0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 f3
- |- ((((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) ==> (((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)))
T c==> c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF
+ |- (((!s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))) ==> ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))) s)) = ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))) s))
T c= c==> ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cpastecart * f0 b1 * f1 b1 b0 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cpastecart * f0 b1 * f1 b1 b0 f2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cpastecart * f0 b1 * f1 b1 b0 f2
- (~ F), ((((x = a) /\ (x' = b)) /\ (~ (s x))) /\ (s a)) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ c/\ c/\ c= f0 f1 c= f2 f3 c~ * f4 f0 * f4 f1 c/\ c~ cF cF
+ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET c) /\ (((k ((pastecart (vec (NUMERAL _0))) arb)) = a) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))))), ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) |- (?h. (((continuous_on h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET c) /\ (((h (vec (NUMERAL _0))) = a) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (h t)) = (g t))))))))
T c==> c/\ cSUBSET * * part cIMAGE f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY f2 c/\ c= * f0 cpastecart cvec cNUMERAL c_0 f1 f3 ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f4 cfstcart b0 * f5 * f0 b0 c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c? / c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ c= * b0 cvec cNUMERAL c_0 f3 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f5 * b0 b1 * f4 b1
+ ((((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET s) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ (a IN c))), ((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((covering_space (c , p)) s) |- (?h. (((continuous_on h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET c) /\ (((h (vec (NUMERAL _0))) = a) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (h t)) = (g t))))))))
T c==> c/\ cSUBSET * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ c= * f0 cvec cNUMERAL c_0 * f2 f3 cIN f3 f4 c==> ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> ccovering_space c, f4 f2 f1 c? / c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c/\ c= * b0 cvec cNUMERAL c_0 f3 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f2 * b0 b1 * f0 b1
+ (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), (~ (c x)) |- (((!x. (((\x. ((x = (k x)) /\ (t x))) x) ==> F)) ==> ((?x. ((x = (k x)) /\ (t x))) ==> F)) = ((?x. ((x = (k x)) /\ (t x))) ==> F))
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c~ * f3 f4 c= c==> ! c==> * / c/\ c= f4 * f2 b1 * f0 b1 b0 cF c==> c? / c/\ c= f4 * f2 b0 * f0 b0 cF c==> c? / c/\ c= f4 * f2 b0 * f0 b0 cF
- (t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) |- (((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> (((IMAGE k) t) SUBSET c)) ==> (((IMAGE k) t) SUBSET c))
T c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c==> c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY cSUBSET * * part cIMAGE f2 f0 f3 cSUBSET * * part cIMAGE f2 f0 f3
- (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))) |- (((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z)))) = T)
T c==> ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f1 cfstcart b0 * f2 * f3 b0 c= c==> cIN f4 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f1 cfstcart f4 * f2 * f3 f4 cT
+ |- (((!x. (!y. ((fstcart ((pastecart x) y)) = x))) ==> ((\x. (!y. ((fstcart ((pastecart x) y)) = x))) x)) = ((\x. (!y. ((fstcart ((pastecart x) y)) = x))) x))
T c= c==> ! ! c= cfstcart cpastecart b0 b1 b0 * / ! c= cfstcart cpastecart b0 b1 b0 f0 * / ! c= cfstcart cpastecart b0 b1 b0 f0
- ((covering_space (c , p)) s) |- (((covering_space (c , p)) s) = T)
T c==> ccovering_space c, f0 f1 f2 c= ccovering_space c, f0 f1 f2 cT
+ ((g (vec (NUMERAL _0))) = (p a)) |- ((((continuous_on (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((((IMAGE g) ((IMAGE fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY)))) SUBSET s) /\ (((IMAGE (\y. a)) (arb INSERT EMPTY)) SUBSET c))) = (((continuous_on (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((((IMAGE (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET s) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ (((continuous_on (\y. a)) (arb INSERT EMPTY)) /\ (((IMAGE (\y. a)) (arb INSERT EMPTY)) SUBSET c))))))
T c==> c= * f0 cvec cNUMERAL c_0 * f1 f2 c= c/\ ccontinuous_on * * part co f0 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f3 part cEMPTY c/\ cSUBSET * * part cIMAGE f0 * * part cIMAGE part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f3 part cEMPTY f4 cSUBSET * * part cIMAGE / f2 * * part cINSERT f3 part cEMPTY f5 c/\ ccontinuous_on * * part co f0 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f3 part cEMPTY c/\ cSUBSET * * part cIMAGE * * part co f0 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f3 part cEMPTY f4 c/\ c= * f0 cvec cNUMERAL c_0 * f1 f2 c/\ ccontinuous_on / f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cIMAGE / f2 * * part cINSERT f3 part cEMPTY f5
- ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) |- (((I g) (vec (NUMERAL _0))) = ((I p) a))
T c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 c= cI f2 cvec cNUMERAL c_0 cI f3 f1
- (((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) |- (F = F)
T c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= f1 f2 c= cF cF
+ |- (!p. (!c. (!s. (!g. (!a. ((((covering_space (c , p)) s) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET s) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ (a IN c))))) ==> (?h. (((continuous_on h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET c) /\ (((h (vec (NUMERAL _0))) = a) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (h t)) = (g t))))))))))))))
T c==> c/\ ccovering_space c, f0 f1 f2 c/\ ccontinuous_on f3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE f3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ c= * f3 cvec cNUMERAL c_0 * f1 f4 cIN f4 f0 c? / c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ c= * b0 cvec cNUMERAL c_0 f4 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f1 * b0 b1 * f3 b1
- |- ((!c. (!t. (!k. (!s. ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x))))))))) = (!c. (!t. (!k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))))))
T c= ! ! ! ! c==> ! c==> c? / c/\ c= b4 * b2 b5 * b3 b5 * b0 b4 c==> ! c==> * b1 b4 * b3 b4 ! c==> c? / c/\ c= b4 * b2 b5 * b1 b5 * b0 b4 ! ! ! ! c==> c~ c==> ! c==> c? / c/\ c= b4 * b2 b5 * b3 b5 * b0 b4 c==> ! c==> * b1 b4 * b3 b4 ! c==> c? / c/\ c= b4 * b2 b5 * b1 b5 * b0 b4 cF
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))), (((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) |- ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) /\ ((continuous_on (g o f)) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 c/\ c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 ccontinuous_on * * part co f2 f0 f1
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) |- (((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) /\ ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))
T c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c/\ c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF
+ |- ((\p'. (!q'. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = p') ==> ((p' ==> ((((\t. ((pastecart t) arb)) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) = q')) ==> (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((\t. ((pastecart t) arb)) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY)))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= cIN * / cpastecart b2 f1 f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY b1 c= c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN * / cpastecart b2 f1 f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c==> b0 b1 f2
+ ((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) |- (((_783203 = a) /\ (_783204 = b)) ==> (s _783203))
T c==> c/\ ! c\/ c\/ c~ c= b0 f0 ! c~ c= b1 f1 * f2 b0 c~ * f2 f0 c==> c/\ c= f3 f0 c= f4 f1 * f2 f3
+ |- ((!c. (!s. (!g. (!a. ((((covering_space (c , p)) s) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET s) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ (a IN c))))) ==> (?h. (((continuous_on h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET c) /\ (((h (vec (NUMERAL _0))) = a) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (h t)) = (g t))))))))))))) = T)
T c= ! ! ! ! c==> c/\ ccovering_space c, b0 f0 b1 c/\ ccontinuous_on b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c/\ c= * b2 cvec cNUMERAL c_0 * f0 b3 cIN b3 b0 c? / c/\ ccontinuous_on b4 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b4 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c/\ c= * b4 cvec cNUMERAL c_0 b3 ! c==> cIN b5 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 * b4 b5 * b2 b5 cT
- |- ((?x. (P x)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
- |- (((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F) ==> ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F))
T c==> c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF
- ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> (((IMAGE k) t) SUBSET c)) |- (((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> (((IMAGE k) t) SUBSET c)) /\ ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> (((IMAGE k) t) SUBSET c)))
T c==> c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY cSUBSET * * part cIMAGE f2 f0 f3 c/\ c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY cSUBSET * * part cIMAGE f2 f0 f3 c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY cSUBSET * * part cIMAGE f2 f0 f3
+ ((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) |- (((~ (_783203 = a)) \/ (~ (_783204 = b))) \/ (s _783203))
T c==> c/\ ! c\/ c\/ c~ c= b0 f0 ! c~ c= b1 f1 * f2 b0 c~ * f2 f0 c\/ c\/ c~ c= f3 f0 c~ c= f4 f1 * f2 f3
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) |- ((!c. (!s. (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z)))))))))))))))) = T)
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 c= ! ! c==> ccovering_space c, b0 f0 b1 ! ! ! c==> c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b1 c/\ ! c==> cIN b5 b4 c= * b2 cpastecart cvec cNUMERAL c_0 b5 * f0 * b3 b5 c/\ ccontinuous_on b3 b4 cSUBSET * * part cIMAGE b3 b4 b0 c? / c/\ ccontinuous_on b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b0 c/\ ! c==> cIN b6 b4 c= * b5 cpastecart cvec cNUMERAL c_0 b6 * b3 b6 ! c==> cIN b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c= * b2 b6 * f0 * b5 b6 cT
- ((x = (k x')) /\ (t x')) |- (((~ (t _783184)) \/ (s _783184)) = ((~ (t _783184)) \/ (s _783184)))
T c==> c/\ c= f0 * f1 f2 * f3 f2 c= c\/ c~ * f3 f4 * f5 f4 c\/ c~ * f3 f4 * f5 f4
+ (((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) |- ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x)
T c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= f1 f2 cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0
- (~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) |- ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) /\ F)
T c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 c/\ c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF
+ (~ (s (g x))) |- (~ ((I s) ((I g) x)))
T c==> c~ * f0 * f1 f2 c~ cI f0 cI f1 f2
+ |- ((?x. ((x = a) /\ (x = b))) = ((x = a) /\ (?x. (x = b))))
T c= c? / c/\ c= f0 f1 c= b0 f2 c/\ c= f0 f1 c? / c= b0 f2
+ |- (((!p'. (!q'. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = p') ==> ((p' ==> ((((\t. ((pastecart t) arb)) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) = q')) ==> (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((\t. ((pastecart t) arb)) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY)))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = p') ==> ((p' ==> ((((\t. ((pastecart t) arb)) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) = q')) ==> (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((\t. ((pastecart t) arb)) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = p') ==> ((p' ==> ((((\t. ((pastecart t) arb)) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) = q')) ==> (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((\t. ((pastecart t) arb)) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= cIN * / cpastecart b2 f1 f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY b1 c= c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN * / cpastecart b2 f1 f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c==> b0 b1 * / ! c==> c= cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= cIN * / cpastecart b2 f1 f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY b1 c= c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN * / cpastecart b2 f1 f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c==> b0 b1 f2 * / ! c==> c= cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= cIN * / cpastecart b2 f1 f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY b1 c= c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN * / cpastecart b2 f1 f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c==> b0 b1 f2
+ |- ((\y. ((fstcart ((pastecart x) y)) = x)) y)
T * / c= cfstcart cpastecart f0 b0 f0 f1
+ |- ((((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) = p') ==> ((p' ==> (((p (k ((pastecart t) arb))) = (g t)) = q')) ==> ((((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) ==> ((p (k ((pastecart t) arb))) = (g t))) = (p' ==> q'))))
T c==> c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f2 cfstcart cpastecart f0 f1 * f3 * f4 cpastecart f0 f1 f5 c==> c==> f5 c= c= * f3 * f4 cpastecart f0 f1 * f2 f0 f6 c= c==> c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f2 cfstcart cpastecart f0 f1 * f3 * f4 cpastecart f0 f1 c= * f3 * f4 cpastecart f0 f1 * f2 f0 c==> f5 f6
+ |- (((?x. (P x)) /\ Q) = (?x. ((P x) /\ Q)))
T c= c/\ c? / * f0 b0 f1 c? / c/\ * f0 b0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- (((!q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) = p') ==> ((p' ==> (((g x) IN s) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s)) = (p' ==> q'))))) ==> ((\q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) = p') ==> ((p' ==> (((g x) IN s) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s)) = (p' ==> q'))))) q')) = ((\q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) = p') ==> ((p' ==> (((g x) IN s) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s)) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cIN * f4 f0 f5 b0 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f4 f0 f5 c==> f3 b0 * / c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cIN * f4 f0 f5 b0 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f4 f0 f5 c==> f3 b0 f6 * / c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cIN * f4 f0 f5 b0 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f4 f0 f5 c==> f3 b0 f6
- ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) |- ((covering_space (c , p)) s)
T c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ccovering_space c, f0 f3 f4
+ ((g (vec (NUMERAL _0))) = (p a)), (a IN c), (((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET s), ((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((covering_space (c , p)) s) |- (((continuous_on (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ (((IMAGE g) ((IMAGE fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY)))) SUBSET s))
T c==> c= * f0 cvec cNUMERAL c_0 * f1 f2 c==> cIN f2 f3 c==> cSUBSET * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c==> ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> ccovering_space c, f3 f1 f4 c/\ ccontinuous_on * * part co f0 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f5 part cEMPTY cSUBSET * * part cIMAGE f0 * * part cIMAGE part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f5 part cEMPTY f4
+ |- ((((IMAGE (\y. a)) (b INSERT EMPTY)) SUBSET s) = (a IN s))
T c= cSUBSET * * part cIMAGE / f0 * * part cINSERT f1 part cEMPTY f2 cIN f0 f2
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- (_783273 = _783275), (_783274 = _783276) |- ((_783274 = _783276) /\ ((_783273 , _783274) = (_783275 , _783276)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= c, f0 f2 c, f1 f3
- |- ((~ (_783281 = _783282)) \/ ((closed_interval _783281) = (closed_interval _783282)))
T c\/ c~ c= f0 f1 c= * part cclosed_interval f0 * part cclosed_interval f1
+ |- (((!x. (((\k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET c) /\ (((k ((pastecart (vec (NUMERAL _0))) arb)) = a) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))))))) x) ==> (?h. (((continuous_on h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET c) /\ (((h (vec (NUMERAL _0))) = a) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (h t)) = (g t)))))))))) ==> ((?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET c) /\ (((k ((pastecart (vec (NUMERAL _0))) arb)) = a) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))))))) ==> (?h. (((continuous_on h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET c) /\ (((h (vec (NUMERAL _0))) = a) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (h t)) = (g t)))))))))) = ((?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET c) /\ (((k ((pastecart (vec (NUMERAL _0))) arb)) = a) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))))))) ==> (?h. (((continuous_on h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET c) /\ (((h (vec (NUMERAL _0))) = a) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (h t)) = (g t))))))))))
T c= c==> ! c==> * / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY f1 c/\ c= * b1 cpastecart cvec cNUMERAL c_0 f0 f2 ! c==> cIN b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f3 cfstcart b2 * f4 * b1 b2 b0 c? / c/\ ccontinuous_on b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ c= * b1 cvec cNUMERAL c_0 f2 ! c==> cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 * b1 b2 * f3 b2 c==> c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY f1 c/\ c= * b0 cpastecart cvec cNUMERAL c_0 f0 f2 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f3 cfstcart b1 * f4 * b0 b1 c? / c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ c= * b0 cvec cNUMERAL c_0 f2 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 * b0 b1 * f3 b1 c==> c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY f1 c/\ c= * b0 cpastecart cvec cNUMERAL c_0 f0 f2 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f3 cfstcart b1 * f4 * b0 b1 c? / c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ c= * b0 cvec cNUMERAL c_0 f2 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 * b0 b1 * f3 b1
- ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F), (((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F) ==> ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)) |- ((((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F) ==> ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)) /\ ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F))
T c==> c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c==> c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c/\ c==> c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF
+ ((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) t))
T c==> ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cSUBSET f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 f1
+ ((covering_space (c , p)) s) |- (((!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))) ==> ((\h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))) (g o fstcart))) = ((\h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))) (g o fstcart)))
T c==> ccovering_space c, f0 f1 f2 c= c==> ! ! ! c==> c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 f2 c/\ ! c==> cIN b3 b2 c= * b0 cpastecart cvec cNUMERAL c_0 b3 * f1 * b1 b3 c/\ ccontinuous_on b1 b2 cSUBSET * * part cIMAGE b1 b2 f0 c? / c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 f0 c/\ ! c==> cIN b4 b2 c= * b3 cpastecart cvec cNUMERAL c_0 b4 * b1 b4 ! c==> cIN b4 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c= * b0 b4 * f1 * b3 b4 * / ! ! c==> c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 f2 c/\ ! c==> cIN b3 b2 c= * b0 cpastecart cvec cNUMERAL c_0 b3 * f1 * b1 b3 c/\ ccontinuous_on b1 b2 cSUBSET * * part cIMAGE b1 b2 f0 c? / c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 f0 c/\ ! c==> cIN b4 b2 c= * b3 cpastecart cvec cNUMERAL c_0 b4 * b1 b4 ! c==> cIN b4 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c= * b0 b4 * f1 * b3 b4 * * part co f3 part cfstcart * / ! ! c==> c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 f2 c/\ ! c==> cIN b3 b2 c= * b0 cpastecart cvec cNUMERAL c_0 b3 * f1 * b1 b3 c/\ ccontinuous_on b1 b2 cSUBSET * * part cIMAGE b1 b2 f0 c? / c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 f0 c/\ ! c==> cIN b4 b2 c= * b3 cpastecart cvec cNUMERAL c_0 b4 * b1 b4 ! c==> cIN b4 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c= * b0 b4 * f1 * b3 b4 * * part co f3 part cfstcart
- (_783255 = _783257), (_783256 = _783258) |- (((((I _783255) _783256) = ((I _783257) _783258)) ==> (((I _783257) _783258) \/ (~ ((I _783255) _783256)))) = (((I _783257) _783258) \/ (~ ((I _783255) _783256))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cI f0 f2 cI f1 f3 c\/ cI f1 f3 c~ cI f0 f2 c\/ cI f1 f3 c~ cI f0 f2
+ |- ((\g. (!s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s))))) g)
T * / ! c= * * part cIMAGE * * part co f0 b0 b1 * * part cIMAGE f0 * * part cIMAGE b0 b1 f1
+ ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) |- ((\x. (((~ (_783221 = ((I g) x))) \/ (~ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x))) \/ ((I s) _783221))) _783222)
T c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 * / c\/ c\/ c~ c= f5 cI f2 b0 c~ cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 cI f4 f5 f6
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))), (((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) /\ ((continuous_on (g o f)) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 c/\ ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ccontinuous_on * * part co f2 f0 f1
+ |- ((\s. ((linear f) ==> ((continuous_on f) s))) s)
T * / c==> clinear f0 ccontinuous_on f0 b0 f1
+ |- ((((a = a) /\ (b = b)) ==> (s a)) = (s a))
T c= c==> c/\ c= f0 f0 c= f1 f1 * f2 f0 * f2 f0
+ |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) ==> (!g. (!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ! ! ! c==> c/\ ccontinuous_on b1 b2 ccontinuous_on b0 * * part cIMAGE b1 b2 ccontinuous_on * * part co b0 b1 b2
- (~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) |- F
T c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF
+ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (T = (((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) ==> ((p (k ((pastecart t) arb))) = (g t))))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cT c==> c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f2 cfstcart cpastecart f0 f1 * f3 * f4 cpastecart f0 f1 c= * f3 * f4 cpastecart f0 f1 * f2 f0
+ |- (((IMAGE (\t. ((pastecart t) arb))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY)))
T cSUBSET * * part cIMAGE / cpastecart b0 f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY
+ |- ((!x. ((x IN ((IMAGE k) s)) ==> (x IN c))) ==> ((!x. ((x IN t) ==> (x IN s))) ==> (!x. ((x IN ((IMAGE k) t)) ==> (x IN c)))))
T c==> ! c==> cIN b0 * * part cIMAGE f0 f1 cIN b0 f2 c==> ! c==> cIN b0 f3 cIN b0 f1 ! c==> cIN b0 * * part cIMAGE f0 f3 cIN b0 f2
+ |- (((((IMAGE fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) ((IMAGE fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))))) = ((continuous_on g) ((IMAGE fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY)))))
T c= c==> cSUBSET * * part cIMAGE part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f1 * * part cIMAGE part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY ccontinuous_on f1 * * part cIMAGE part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY
- (!x. ((t x) ==> (s x))), (~ (s x')), ((x = (k x')) /\ (t x')) |- ((~ (s x')) /\ (s x'))
T c==> ! c==> * f0 b0 * f1 b0 c==> c~ * f1 f2 c==> c/\ c= f3 * f4 f2 * f0 f2 c/\ c~ * f1 f2 * f1 f2
+ |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))) |- (((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (k ((pastecart t) arb))) = (g t))) = T)
T c==> ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f1 cfstcart b0 * f2 * f3 b0 c= c==> cIN f4 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f2 * f3 cpastecart f4 f0 * f1 f4 cT
+ ((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) |- ((s _783203) \/ ((~ (_783203 = a)) \/ (~ (_783204 = b))))
T c==> c/\ ! c\/ c\/ c~ c= b0 f0 ! c~ c= b1 f1 * f2 b0 c~ * f2 f0 c\/ * f2 f3 c\/ c~ c= f3 f0 c~ c= f4 f1
+ |- (((!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) ==> ((\f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) f)) = ((\f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) f))
T c= c==> ! ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1 * / ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1 f1 * / ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1 f1
+ |- (((continuous_on (\t. t)) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((continuous_on (\t. arb)) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))
T c/\ ccontinuous_on / b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on / f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) t))) |- ((\t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) t))) t)
T c==> ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 * / c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 f1
- |- (((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F) = (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x)))))))
T c= c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0
- (((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F) ==> ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F)) |- ((((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F) ==> ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F)) /\ (((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F) ==> ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F)))
T c==> c==> c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c/\ c==> c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF
+ (((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) \/ ((((x = a) /\ (x' = b)) /\ (~ (s x))) /\ (s a))) |- ((((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) \/ ((((x = a) /\ (x' = b)) /\ (~ (s x))) /\ (s a))) /\ F)
T c==> c\/ c/\ ! c\/ c\/ c~ c= b0 f0 ! c~ c= b1 f1 * f2 b0 c~ * f2 f0 c/\ c/\ c/\ c= f3 f0 c= f4 f1 c~ * f2 f3 * f2 f0 c/\ c\/ c/\ ! c\/ c\/ c~ c= b0 f0 ! c~ c= b1 f1 * f2 b0 c~ * f2 f0 c/\ c/\ c/\ c= f3 f0 c= f4 f1 c~ * f2 f3 * f2 f0 cF
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- (~ (s (g x))), ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))), (((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) |- ((~ F) ==> F)
T c==> c~ * f0 * f1 f2 c==> c/\ * f3 f4 c/\ c= * f1 cvec cNUMERAL c_0 * f5 f4 c/\ ! c==> c? / c/\ c= b0 * f1 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f0 b0 c/\ ccontinuous_on f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f3 f5 f0 c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= f6 f7 c==> c~ cF cF
- ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) |- ((((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))
T c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- (!x'. (((\x. (((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) \/ ((((x = a) /\ (x = b)) /\ (~ (s x))) /\ (s a)))) x') ==> F))
T c==> * / c\/ c/\ ! c\/ c\/ c~ c= b1 f0 ! c~ c= b2 f1 * f2 b1 c~ * f2 f0 c/\ c/\ c/\ c= f3 f0 c= b0 f1 c~ * f2 f3 * f2 f0 f4 cF
- |- ((?x'. ((x = (g x')) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) = ((?x. (x = (g x))) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x)))
T c= c? / c/\ c= f0 * f1 b0 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ c? / c= f0 * f1 b0 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2
+ ((g (vec (NUMERAL _0))) = (p a)), (a IN c), (((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET s), ((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((covering_space (c , p)) s) |- (((?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET c) /\ (((k ((pastecart (vec (NUMERAL _0))) arb)) = a) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))))))) ==> (?h. (((continuous_on h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET c) /\ (((h (vec (NUMERAL _0))) = a) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (h t)) = (g t))))))))) = ((((continuous_on (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((((IMAGE (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET s) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ (((continuous_on (\y. a)) (arb INSERT EMPTY)) /\ (((IMAGE (\y. a)) (arb INSERT EMPTY)) SUBSET c))))) /\ ((?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET c) /\ (((k ((pastecart (vec (NUMERAL _0))) arb)) = a) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))))))) ==> (?h. (((continuous_on h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET c) /\ (((h (vec (NUMERAL _0))) = a) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (h t)) = (g t)))))))))))
T c==> c= * f0 cvec cNUMERAL c_0 * f1 f2 c==> cIN f2 f3 c==> cSUBSET * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c==> ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> ccovering_space c, f3 f1 f4 c= c==> c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f5 part cEMPTY c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f5 part cEMPTY f3 c/\ c= * b0 cpastecart cvec cNUMERAL c_0 f5 f2 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f5 part cEMPTY c= * f0 cfstcart b1 * f1 * b0 b1 c? / c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c/\ c= * b0 cvec cNUMERAL c_0 f2 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f1 * b0 b1 * f0 b1 c/\ c/\ ccontinuous_on * * part co f0 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f5 part cEMPTY c/\ cSUBSET * * part cIMAGE * * part co f0 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f5 part cEMPTY f4 c/\ c= * f0 cvec cNUMERAL c_0 * f1 f2 c/\ ccontinuous_on / f2 * * part cINSERT f5 part cEMPTY cSUBSET * * part cIMAGE / f2 * * part cINSERT f5 part cEMPTY f3 c==> c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f5 part cEMPTY c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f5 part cEMPTY f3 c/\ c= * b0 cpastecart cvec cNUMERAL c_0 f5 f2 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f5 part cEMPTY c= * f0 cfstcart b1 * f1 * b0 b1 c? / c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c/\ c= * b0 cvec cNUMERAL c_0 f2 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f1 * b0 b1 * f0 b1
+ ((covering_space (c , p)) s) |- (((!u. ((((continuous_on (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> (((g o fstcart) ((pastecart (vec (NUMERAL _0))) y)) = (p ((\y. a) y))))) /\ (((continuous_on (\y. a)) u) /\ (((IMAGE (\y. a)) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = ((\y. a) y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((g o fstcart) z) = (p (k z))))))))))) ==> ((\u. ((((continuous_on (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> (((g o fstcart) ((pastecart (vec (NUMERAL _0))) y)) = (p ((\y. a) y))))) /\ (((continuous_on (\y. a)) u) /\ (((IMAGE (\y. a)) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = ((\y. a) y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((g o fstcart) z) = (p (k z))))))))))) (arb INSERT EMPTY))) = ((\u. ((((continuous_on (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> (((g o fstcart) ((pastecart (vec (NUMERAL _0))) y)) = (p ((\y. a) y))))) /\ (((continuous_on (\y. a)) u) /\ (((IMAGE (\y. a)) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = ((\y. a) y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((g o fstcart) z) = (p (k z))))))))))) (arb INSERT EMPTY)))
T c==> ccovering_space c, f0 f1 f2 c= c==> ! c==> c/\ ccontinuous_on * * part co f3 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c/\ cSUBSET * * part cIMAGE * * part co f3 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 f2 c/\ ! c==> cIN b1 b0 c= co f3 part cfstcart cpastecart cvec cNUMERAL c_0 b1 * f1 * / f4 b1 c/\ ccontinuous_on / f4 b0 cSUBSET * * part cIMAGE / f4 b0 f0 c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 f0 c/\ ! c==> cIN b2 b0 c= * b1 cpastecart cvec cNUMERAL c_0 b2 * / f4 b2 ! c==> cIN b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= co f3 part cfstcart b2 * f1 * b1 b2 * / c==> c/\ ccontinuous_on * * part co f3 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c/\ cSUBSET * * part cIMAGE * * part co f3 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 f2 c/\ ! c==> cIN b1 b0 c= co f3 part cfstcart cpastecart cvec cNUMERAL c_0 b1 * f1 * / f4 b1 c/\ ccontinuous_on / f4 b0 cSUBSET * * part cIMAGE / f4 b0 f0 c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 f0 c/\ ! c==> cIN b2 b0 c= * b1 cpastecart cvec cNUMERAL c_0 b2 * / f4 b2 ! c==> cIN b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= co f3 part cfstcart b2 * f1 * b1 b2 * * part cINSERT f5 part cEMPTY * / c==> c/\ ccontinuous_on * * part co f3 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c/\ cSUBSET * * part cIMAGE * * part co f3 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 f2 c/\ ! c==> cIN b1 b0 c= co f3 part cfstcart cpastecart cvec cNUMERAL c_0 b1 * f1 * / f4 b1 c/\ ccontinuous_on / f4 b0 cSUBSET * * part cIMAGE / f4 b0 f0 c? / c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 f0 c/\ ! c==> cIN b2 b0 c= * b1 cpastecart cvec cNUMERAL c_0 b2 * / f4 b2 ! c==> cIN b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= co f3 part cfstcart b2 * f1 * b1 b2 * * part cINSERT f5 part cEMPTY
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- ((\s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) s)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 f2
- (~ ((I s) ((I g) x))), ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))), (((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) |- ((~ ((I s) ((I g) x))) /\ ((I s) ((I g) x)))
T c==> c~ cI f0 cI f1 f2 c==> c/\ * f3 f4 c/\ c= * f1 cvec cNUMERAL c_0 * f5 f4 c/\ ! c==> c? / c/\ c= b0 * f1 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f0 b0 c/\ ccontinuous_on f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f3 f5 f0 c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= f6 f7 c/\ c~ cI f0 cI f1 f2 cI f0 cI f1 f2
- (_783240 = _783242), (_783239 = _783241) |- (((((covering_space _783239) _783240) = ((covering_space _783241) _783242)) ==> (((covering_space _783241) _783242) \/ (~ ((covering_space _783239) _783240)))) = (((covering_space _783241) _783242) \/ (~ ((covering_space _783239) _783240))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= ccovering_space f2 f0 ccovering_space f3 f1 c\/ ccovering_space f3 f1 c~ ccovering_space f2 f0 c\/ ccovering_space f3 f1 c~ ccovering_space f2 f0
+ |- ((\p'. (!q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) = p') ==> ((p' ==> (((fstcart ((pastecart x) y)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((fstcart ((pastecart x) y)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= cIN cfstcart cpastecart f0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN cfstcart cpastecart f0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 f3
+ |- ((!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((fstcart ((pastecart x) y)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) = (((IMAGE fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))
T c= ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 * * part cINSERT f0 part cEMPTY cIN cfstcart cpastecart b0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cSUBSET * * part cIMAGE part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ (~ (s (g x))), ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))), (((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) |- ((~ (s (g x))) /\ F)
T c==> c~ * f0 * f1 f2 c==> c/\ * f3 f4 c/\ c= * f1 cvec cNUMERAL c_0 * f5 f4 c/\ ! c==> c? / c/\ c= b0 * f1 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f0 b0 c/\ ccontinuous_on f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f3 f5 f0 c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= f6 f7 c/\ c~ * f0 * f1 f2 cF
- |- (((((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F) ==> ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)) ==> (((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F) ==> ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F))) = (((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F) ==> ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)))
T c= c==> c==> c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF
+ |- ((\f. (!g. (!s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s)))))) f)
T * / ! ! c= * * part cIMAGE * * part co b0 b1 b2 * * part cIMAGE b0 * * part cIMAGE b1 b2 f0
+ |- ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> (((g (fstcart ((pastecart x) y))) IN s) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart x) y))) IN s)) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> q')))
T c==> c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY c= cIN * f3 cfstcart cpastecart f0 f1 f4 f5 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f3 cfstcart cpastecart f0 f1 f4 c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY f5
+ ((\x. (((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) \/ ((((x = a) /\ (x = b)) /\ (~ (s x))) /\ (s a)))) x') |- (((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) \/ ((((x = a) /\ (x' = b)) /\ (~ (s x))) /\ (s a)))
T c==> * / c\/ c/\ ! c\/ c\/ c~ c= b1 f0 ! c~ c= b2 f1 * f2 b1 c~ * f2 f0 c/\ c/\ c/\ c= f3 f0 c= b0 f1 c~ * f2 f3 * f2 f0 f4 c\/ c/\ ! c\/ c\/ c~ c= b0 f0 ! c~ c= b1 f1 * f2 b0 c~ * f2 f0 c/\ c/\ c/\ c= f3 f0 c= f4 f1 c~ * f2 f3 * f2 f0
- |- (((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> (((IMAGE k) t) SUBSET c)) ==> ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> (((IMAGE k) t) SUBSET c)))
T c==> c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY cSUBSET * * part cIMAGE f2 f0 f3 c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY cSUBSET * * part cIMAGE f2 f0 f3
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- (((!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))) ==> ((\t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))) t)) = ((\t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))) t))
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 c= c==> ! c==> ccontinuous_on f0 f1 c==> cSUBSET b0 f1 ccontinuous_on f0 b0 * / c==> ccontinuous_on f0 f1 c==> cSUBSET b0 f1 ccontinuous_on f0 b0 f2 * / c==> ccontinuous_on f0 f1 c==> cSUBSET b0 f1 ccontinuous_on f0 b0 f2
+ ((((x = a) /\ (x' = b)) /\ (~ (s x))) /\ (s a)) |- ((x = a) /\ (x' = b))
T c==> c/\ c/\ c/\ c= f0 f1 c= f2 f3 c~ * f4 f0 * f4 f1 c/\ c= f0 f1 c= f2 f3
+ |- ((b = b) = ((a = a) /\ (b = b)))
T c= c= f0 f0 c/\ c= f1 f1 c= f0 f0
+ (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), (~ (c x)) |- (!x'. (((\x. ((x = (k x)) /\ (t x))) x') ==> F))
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c~ * f3 f4 ! c==> * / c/\ c= f4 * f2 b1 * f0 b1 b0 cF
+ ((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) t))) ==> ((\t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) t))) t)) = ((\t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) t))) t))
T c==> ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 * / c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 f1 * / c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 f1
+ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = T)
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
+ |- ((f x) = ((I f) x))
T c= * f0 f1 cI f0 f1
- |- (((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) = ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x))))))
T c= c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- |- ((~ (_783256 = _783258)) \/ ((~ (_783255 = _783257)) \/ (((I _783257) _783258) \/ (~ ((I _783255) _783256)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
+ |- (((!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) ==> ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)) = ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x))
T c= c==> ! ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
+ |- ((\q'. ((((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) = p') ==> ((p' ==> (((p (k ((pastecart t) arb))) = (g t)) = q')) ==> ((((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) ==> ((p (k ((pastecart t) arb))) = (g t))) = (p' ==> q'))))) q')
T * / c==> c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f2 cfstcart cpastecart f0 f1 * f3 * f4 cpastecart f0 f1 f5 c==> c==> f5 c= c= * f3 * f4 cpastecart f0 f1 * f2 f0 b0 c= c==> c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f2 cfstcart cpastecart f0 f1 * f3 * f4 cpastecart f0 f1 c= * f3 * f4 cpastecart f0 f1 * f2 f0 c==> f5 b0 f6
- |- (((((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F) ==> ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F)) ==> (((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F) ==> ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F))) = (((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F) ==> ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F)))
T c= c==> c==> c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF
+ ((\x. (((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) \/ ((((x = a) /\ (x = b)) /\ (~ (s x))) /\ (s a)))) x') |- (((((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) \/ ((((x = a) /\ (x' = b)) /\ (~ (s x))) /\ (s a))) ==> F) = F)
T c==> * / c\/ c/\ ! c\/ c\/ c~ c= b1 f0 ! c~ c= b2 f1 * f2 b1 c~ * f2 f0 c/\ c/\ c/\ c= f3 f0 c= b0 f1 c~ * f2 f3 * f2 f0 f4 c= c==> c\/ c/\ ! c\/ c\/ c~ c= b0 f0 ! c~ c= b1 f1 * f2 b0 c~ * f2 f0 c/\ c/\ c/\ c= f3 f0 c= f4 f1 c~ * f2 f3 * f2 f0 cF cF
+ |- (T = (((~ (_783182 = (k _783183))) \/ ((~ (s _783183)) \/ (c _783182))) = ((c _783182) \/ ((~ (_783182 = (k _783183))) \/ (~ (s _783183))))))
T c= cT c= c\/ c~ c= f0 * f1 f2 c\/ c~ * f3 f2 * f4 f0 c\/ * f4 f0 c\/ c~ c= f0 * f1 f2 c~ * f3 f2
+ ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) |- ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((continuous_on k) t))
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c==> cSUBSET f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY ccontinuous_on f0 f2
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((continuous_on k) t))), (t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) |- ((continuous_on k) t)
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY ccontinuous_on f1 b0 c==> cSUBSET f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY ccontinuous_on f1 f2
+ |- ((linear f) ==> (((continuous_on f) s) = T))
T c==> clinear f0 c= ccontinuous_on f0 f1 cT
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) |- ((!s. (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))) = T)
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 c= ! c==> ccovering_space c, f0 f1 b0 ! ! ! c==> c/\ ccontinuous_on b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b3 c/\ cSUBSET * * part cIMAGE b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b3 b0 c/\ ! c==> cIN b4 b3 c= * b1 cpastecart cvec cNUMERAL c_0 b4 * f1 * b2 b4 c/\ ccontinuous_on b2 b3 cSUBSET * * part cIMAGE b2 b3 f0 c? / c/\ ccontinuous_on b4 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b3 c/\ cSUBSET * * part cIMAGE b4 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b3 f0 c/\ ! c==> cIN b5 b3 c= * b4 cpastecart cvec cNUMERAL c_0 b5 * b2 b5 ! c==> cIN b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b3 c= * b1 b5 * f1 * b4 b5 cT
+ (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), (~ (c x)) |- ((?x. ((x = (k x)) /\ (t x))) ==> F)
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c~ * f3 f4 c==> c? / c/\ c= f4 * f2 b0 * f0 b0 cF
- |- ((\p'. (!q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) = p') ==> ((p' ==> (((g x) IN s) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s)) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= cIN * f3 f0 f4 b1 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f3 f0 f4 c==> b0 b1 f5
+ |- (((!g. (!x. (((f o g) x) = (f (g x))))) ==> ((\g. (!x. (((f o g) x) = (f (g x))))) g)) = ((\g. (!x. (((f o g) x) = (f (g x))))) g))
T c= c==> ! ! c= co f0 b0 b1 * f0 * b0 b1 * / ! c= co f0 b0 b1 * f0 * b0 b1 f1 * / ! c= co f0 b0 b1 * f0 * b0 b1 f1
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ |- (((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x))))) = ((!x. ((x IN ((IMAGE k) s)) ==> (x IN c))) ==> ((!x. ((x IN t) ==> (x IN s))) ==> (!x. ((x IN ((IMAGE k) t)) ==> (x IN c))))))
T c= c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 c==> ! c==> cIN b0 * * part cIMAGE f0 f1 cIN b0 f2 c==> ! c==> cIN b0 f3 cIN b0 f1 ! c==> cIN b0 * * part cIMAGE f0 f3 cIN b0 f2
- |- ((?k. t) = t)
T c= c? / f0 f0
+ ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) |- ((continuous_on (k o (\t. ((pastecart t) arb)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY ccontinuous_on * * part co f0 / cpastecart b0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) |- (((!x. (((~ (_783182 = (k x))) \/ (~ (s x))) \/ (c _783182))) ==> ((\x. (((~ (_783182 = (k x))) \/ (~ (s x))) \/ (c _783182))) _783183)) = ((\x. (((~ (_783182 = (k x))) \/ (~ (s x))) \/ (c _783182))) _783183))
T c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c= c==> ! c\/ c\/ c~ c= f3 * f0 b0 c~ * f1 b0 * f2 f3 * / c\/ c\/ c~ c= f3 * f0 b0 c~ * f1 b0 * f2 f3 f4 * / c\/ c\/ c~ c= f3 * f0 b0 c~ * f1 b0 * f2 f3 f4
+ (a IN c) |- ((a IN c) = T)
T c==> cIN f0 f1 c= cIN f0 f1 cT
+ ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) |- ((\t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((continuous_on k) t))) t)
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY * / c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY ccontinuous_on f0 b0 f2
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- ((\s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t))))) s)
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 * / ! c==> ccontinuous_on f0 b0 c==> cSUBSET b1 b0 ccontinuous_on f0 b1 f1
- (~ (((I g) x) = ((I g) x))) |- ((~ (((I g) x) = ((I g) x))) /\ (((I g) x) = ((I g) x)))
T c==> c~ c= cI f0 f1 cI f0 f1 c/\ c~ c= cI f0 f1 cI f0 f1 c= cI f0 f1 cI f0 f1
- ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F) |- (((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F) /\ ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F))
T c==> c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c/\ c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF
- (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) t))) |- ((!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) t))) /\ (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) t))))
T c==> ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 c/\ ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0
+ |- (((~ (x = a)) \/ (!x. (~ (x = b)))) = (!x. ((~ (x = a)) \/ (~ (x = b)))))
T c= c\/ c~ c= f0 f1 ! c~ c= b0 f2 ! c\/ c~ c= f0 f1 c~ c= b0 f2
+ |- (((!g. (!s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s))))) ==> ((\g. (!s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s))))) g)) = ((\g. (!s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s))))) g))
T c= c==> ! ! c= * * part cIMAGE * * part co f0 b0 b1 * * part cIMAGE f0 * * part cIMAGE b0 b1 * / ! c= * * part cIMAGE * * part co f0 b0 b1 * * part cIMAGE f0 * * part cIMAGE b0 b1 f1 * / ! c= * * part cIMAGE * * part co f0 b0 b1 * * part cIMAGE f0 * * part cIMAGE b0 b1 f1
- (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), (~ (c x)), ((x = (k x')) /\ (t x')) |- ((~ F) ==> F)
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c~ * f3 f4 c==> c/\ c= f4 * f2 f5 * f0 f5 c==> c~ cF cF
+ |- (((!t. (!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))))) ==> ((\t. (!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))))) t)) = ((\t. (!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))))) t))
T c= c==> ! ! ! c= cIN cpastecart b1 b2 * * part cPCROSS f0 b0 c/\ cIN b1 f0 cIN b2 b0 * / ! ! c= cIN cpastecart b1 b2 * * part cPCROSS f0 b0 c/\ cIN b1 f0 cIN b2 b0 f1 * / ! ! c= cIN cpastecart b1 b2 * * part cPCROSS f0 b0 c/\ cIN b1 f0 cIN b2 b0 f1
+ (!x. ((t x) ==> (s x))) |- ((~ (t _783184)) \/ (s _783184))
T c==> ! c==> * f0 b0 * f1 b0 c\/ c~ * f0 f2 * f1 f2
- (((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) |- ((~ ((I s) ((I g) x))) = (~ ((I s) ((I g) x))))
T c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= f1 f2 c= c~ cI f3 cI f4 f0 c~ cI f3 cI f4 f0
- ((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) |- ((~ F) ==> F)
T c==> c/\ ! c\/ c\/ c~ c= b0 f0 ! c~ c= b1 f1 * f2 b0 c~ * f2 f0 c==> c~ cF cF
- |- ((_783240 = _783242) ==> ((~ (_783239 = _783241)) \/ (((covering_space _783241) _783242) \/ (~ ((covering_space _783239) _783240)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ ccovering_space f3 f1 c~ ccovering_space f2 f0
+ |- (((!f. (!g. (!x. (((f o g) x) = (f (g x)))))) ==> ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f)) = ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f))
T c= c==> ! ! ! c= co b0 b1 b2 * b0 * b1 b2 * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0 * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0
+ |- ((\x. (!y. ((fstcart ((pastecart x) y)) = x))) x)
T * / ! c= cfstcart cpastecart b0 b1 b0 f0
- |- ((!x'. ((~ (x = (g x'))) \/ (~ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x)))) = ((!x. (~ (x = (g x)))) \/ (~ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))))
T c= ! c\/ c~ c= f0 * f1 b0 c~ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c\/ ! c~ c= f0 * f1 b0 c~ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2
+ |- (((!f. (!s. ((linear f) ==> ((continuous_on f) s)))) ==> ((\f. (!s. ((linear f) ==> ((continuous_on f) s)))) f)) = ((\f. (!s. ((linear f) ==> ((continuous_on f) s)))) f))
T c= c==> ! ! c==> clinear b0 ccontinuous_on b0 b1 * / ! c==> clinear b0 ccontinuous_on b0 b1 f0 * / ! c==> clinear b0 ccontinuous_on b0 b1 f0
+ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))), ((k ((pastecart (vec (NUMERAL _0))) arb)) = a), (((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET c), ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) |- ((\h. (((continuous_on h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET c) /\ (((h (vec (NUMERAL _0))) = a) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (h t)) = (g t)))))))) (k o (\t. ((pastecart t) arb))))
T c==> ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f1 cfstcart b0 * f2 * f3 b0 c==> c= * f3 cpastecart cvec cNUMERAL c_0 f0 f4 c==> cSUBSET * * part cIMAGE f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY f5 c==> ccontinuous_on f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY * / c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 c/\ c= * b0 cvec cNUMERAL c_0 f4 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f2 * b0 b1 * f1 b1 * * part co f3 / cpastecart b0 f0
+ ((k ((pastecart (vec (NUMERAL _0))) arb)) = a) |- ((((continuous_on (k o (\t. ((pastecart t) arb)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE k) ((IMAGE (\t. ((pastecart t) arb))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (k ((pastecart t) arb))) = (g t)))))) = (((continuous_on (k o (\t. ((pastecart t) arb)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE (k o (\t. ((pastecart t) arb)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET c) /\ ((((k o (\t. ((pastecart t) arb))) (vec (NUMERAL _0))) = a) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p ((k o (\t. ((pastecart t) arb))) t)) = (g t))))))))
T c==> c= * f0 cpastecart cvec cNUMERAL c_0 f1 f2 c= c/\ ccontinuous_on * * part co f0 / cpastecart b0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE f0 * * part cIMAGE / cpastecart b0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 * f0 cpastecart b0 f1 * f5 b0 c/\ ccontinuous_on * * part co f0 / cpastecart b0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE * * part co f0 / cpastecart b0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c/\ c= co f0 / cpastecart b0 f1 cvec cNUMERAL c_0 f2 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 co f0 / cpastecart b1 f1 b0 * f5 b0
+ ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) |- (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) /\ (((fstcart ((pastecart x) y)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = T))
T c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY c= cIN cfstcart cpastecart f0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
+ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))) |- ((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb)))))
T c==> ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f1 cfstcart b0 * f2 * f3 b0 c==> cIN cpastecart f4 f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f1 cfstcart cpastecart f4 f0 * f2 * f3 cpastecart f4 f0
- (_783240 = _783242) |- ((_783240 = _783242) /\ ((~ (_783239 = _783241)) \/ (((covering_space _783241) _783242) \/ (~ ((covering_space _783239) _783240)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ ccovering_space f3 f1 c~ ccovering_space f2 f0
- (~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) |- F
T c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF
- |- ((~ (_783273 = _783275)) \/ ((~ (_783274 = _783276)) \/ ((_783273 , _783274) = (_783275 , _783276))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- |- (((!arb. (!p. (!c. (!a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F))))) ==> ((\arb. (!p. (!c. (!a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F))))) arb)) = ((\arb. (!p. (!c. (!a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F))))) arb))
T c= c==> ! ! ! ! c==> c~ c==> c/\ * b2 b3 c/\ c= * f0 cvec cNUMERAL c_0 * b1 b3 c/\ ! c==> c? / c/\ c= b4 * f0 b5 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 * f1 b4 c/\ ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b2 b1 f1 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c= b5 b0 * f1 * f0 b4 cF * / ! ! ! c==> c~ c==> c/\ * b2 b3 c/\ c= * f0 cvec cNUMERAL c_0 * b1 b3 c/\ ! c==> c? / c/\ c= b4 * f0 b5 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 * f1 b4 c/\ ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b2 b1 f1 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c= b5 b0 * f1 * f0 b4 cF f2 * / ! ! ! c==> c~ c==> c/\ * b2 b3 c/\ c= * f0 cvec cNUMERAL c_0 * b1 b3 c/\ ! c==> c? / c/\ c= b4 * f0 b5 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 * f1 b4 c/\ ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b2 b1 f1 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c= b5 b0 * f1 * f0 b4 cF f2
- (_783278 = _783280) |- ((_783277 = _783279) ==> (((CONS _783277) _783278) = ((CONS _783279) _783280)))
T c==> c= f0 f1 c==> c= f2 f3 c= cCONS f2 f0 cCONS f3 f1
- |- ((\a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)) a)
T * / c==> c~ c==> c/\ * f0 b0 c/\ c= * f1 cvec cNUMERAL c_0 * f2 b0 c/\ ! c==> c? / c/\ c= b1 * f1 b2 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 * f3 b1 c/\ ccontinuous_on f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f2 f3 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= b2 f4 * f3 * f1 b1 cF f5
+ |- (((!c. (!s. (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z)))))))))))))))) ==> ((\c. (!s. (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z)))))))))))))))) c)) = ((\c. (!s. (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z)))))))))))))))) c))
T c= c==> ! ! c==> ccovering_space c, b0 f0 b1 ! ! ! c==> c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b1 c/\ ! c==> cIN b5 b4 c= * b2 cpastecart cvec cNUMERAL c_0 b5 * f0 * b3 b5 c/\ ccontinuous_on b3 b4 cSUBSET * * part cIMAGE b3 b4 b0 c? / c/\ ccontinuous_on b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b0 c/\ ! c==> cIN b6 b4 c= * b5 cpastecart cvec cNUMERAL c_0 b6 * b3 b6 ! c==> cIN b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c= * b2 b6 * f0 * b5 b6 * / ! c==> ccovering_space c, b0 f0 b1 ! ! ! c==> c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b1 c/\ ! c==> cIN b5 b4 c= * b2 cpastecart cvec cNUMERAL c_0 b5 * f0 * b3 b5 c/\ ccontinuous_on b3 b4 cSUBSET * * part cIMAGE b3 b4 b0 c? / c/\ ccontinuous_on b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b0 c/\ ! c==> cIN b6 b4 c= * b5 cpastecart cvec cNUMERAL c_0 b6 * b3 b6 ! c==> cIN b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c= * b2 b6 * f0 * b5 b6 f1 * / ! c==> ccovering_space c, b0 f0 b1 ! ! ! c==> c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b1 c/\ ! c==> cIN b5 b4 c= * b2 cpastecart cvec cNUMERAL c_0 b5 * f0 * b3 b5 c/\ ccontinuous_on b3 b4 cSUBSET * * part cIMAGE b3 b4 b0 c? / c/\ ccontinuous_on b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b0 c/\ ! c==> cIN b6 b4 c= * b5 cpastecart cvec cNUMERAL c_0 b6 * b3 b6 ! c==> cIN b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c= * b2 b6 * f0 * b5 b6 f1
+ ((((x = a) /\ (x' = b)) /\ (~ (s x))) /\ (s a)) |- ((~ (s x)) = (~ (s a)))
T c==> c/\ c/\ c/\ c= f0 f1 c= f2 f3 c~ * f4 f0 * f4 f1 c= c~ * f4 f0 c~ * f4 f1
- (((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) |- (((covering_space (c , p)) s) = ((covering_space (c , p)) s))
T c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= f1 f2 c= ccovering_space c, f3 f4 f5 ccovering_space c, f3 f4 f5
+ ((g t) = (p (k ((pastecart t) arb)))) |- (((g t) = (p (k ((pastecart t) arb)))) /\ (((p (k ((pastecart t) arb))) = (g t)) = T))
T c==> c= * f0 f1 * f2 * f3 cpastecart f1 f4 c/\ c= * f0 f1 * f2 * f3 cpastecart f1 f4 c= c= * f2 * f3 cpastecart f1 f4 * f0 f1 cT
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))), ((covering_space (c , p)) s) |- ((!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z)))))))))))) = T)
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 c==> ccovering_space c, f0 f1 f2 c= ! ! c==> c/\ ccontinuous_on f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c/\ cSUBSET * * part cIMAGE f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 f2 c/\ ! c==> cIN b2 b1 c= * f3 cpastecart cvec cNUMERAL c_0 b2 * f1 * b0 b2 c/\ ccontinuous_on b0 b1 cSUBSET * * part cIMAGE b0 b1 f0 c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 f0 c/\ ! c==> cIN b3 b1 c= * b2 cpastecart cvec cNUMERAL c_0 b3 * b0 b3 ! c==> cIN b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= * f3 b3 * f1 * b2 b3 cT
- (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) t))), (t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((continuous_on g) t)
T c==> ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 c==> cSUBSET f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 f1
- |- (((!a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)) ==> ((\a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)) a)) = ((\a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)) a))
T c= c==> ! c==> c~ c==> c/\ * f0 b0 c/\ c= * f1 cvec cNUMERAL c_0 * f2 b0 c/\ ! c==> c? / c/\ c= b1 * f1 b2 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 * f3 b1 c/\ ccontinuous_on f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f2 f3 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= b2 f4 * f3 * f1 b1 cF * / c==> c~ c==> c/\ * f0 b0 c/\ c= * f1 cvec cNUMERAL c_0 * f2 b0 c/\ ! c==> c? / c/\ c= b1 * f1 b2 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 * f3 b1 c/\ ccontinuous_on f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f2 f3 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= b2 f4 * f3 * f1 b1 cF f5 * / c==> c~ c==> c/\ * f0 b0 c/\ c= * f1 cvec cNUMERAL c_0 * f2 b0 c/\ ! c==> c? / c/\ c= b1 * f1 b2 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 * f3 b1 c/\ ccontinuous_on f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f2 f3 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= b2 f4 * f3 * f1 b1 cF f5
- (~ F), ((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ ! c\/ c\/ c~ c= b0 f0 ! c~ c= b1 f1 * f2 b0 c~ * f2 f0 c/\ c~ cF cF
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- (_783244 = _783246), (_783243 = _783245) |- ((_783243 = _783245) /\ (((continuous_on _783245) _783246) \/ (~ ((continuous_on _783243) _783244))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ ccontinuous_on f3 f1 c~ ccontinuous_on f2 f0
+ (!x. ((t x) ==> (s x))) |- ((t _783184) ==> (s _783184))
T c==> ! c==> * f0 b0 * f1 b0 c==> * f0 f2 * f1 f2
- ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) |- (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))
T c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4
+ |- ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))
T c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0
+ |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- (((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F) ==> ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)) |- ((((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F) ==> ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)) /\ (((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F) ==> ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c/\ c==> c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF
+ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))), (((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET c) |- ((((IMAGE k) ((IMAGE (\t. ((pastecart t) arb))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (k ((pastecart t) arb))) = (g t)))))
T c==> ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f1 cfstcart b0 * f2 * f3 b0 c==> cSUBSET * * part cIMAGE f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY f4 c/\ cSUBSET * * part cIMAGE f3 * * part cIMAGE / cpastecart b0 f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f2 * f3 cpastecart b0 f0 * f1 b0
- T |- (T = T)
T c==> cT c= cT cT
+ |- (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((((\t. ((pastecart t) arb)) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) = q')) ==> (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((\t. ((pastecart t) arb)) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY)))) = ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> q')))
T c==> c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cIN * / cpastecart b0 f1 f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY f2 c= c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN * / cpastecart b0 f1 f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2
- (((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET c) |- ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET c) = T)
T c==> cSUBSET * * part cIMAGE f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY f2 c= cSUBSET * * part cIMAGE f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY f2 cT
+ (((((x = a) /\ (x' = b)) /\ (~ (s x))) /\ (s a)) ==> F), (((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) \/ ((((x = a) /\ (x' = b)) /\ (~ (s x))) /\ (s a))) |- F
T c==> c==> c/\ c/\ c/\ c= f0 f1 c= f2 f3 c~ * f4 f0 * f4 f1 cF c==> c\/ c/\ ! c\/ c\/ c~ c= b0 f1 ! c~ c= b1 f3 * f4 b0 c~ * f4 f1 c/\ c/\ c/\ c= f0 f1 c= f2 f3 c~ * f4 f0 * f4 f1 cF
- |- (((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) = ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY)))) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> (((g x) IN s) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s)) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> q')))) = ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> (((g x) IN s) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s)) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> q'))))
T c= c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY c==> c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY c= cIN * f3 f0 f4 f5 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f3 f0 f4 c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY f5 c==> c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY c= cIN * f3 f0 f4 f5 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f3 f0 f4 c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY f5
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) |- ((\c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z)))))))))))))))) c)
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 * / ! ! ! ! c==> ccovering_space c, b0 f0 b1 c==> c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b1 c/\ ! c==> cIN b5 b4 c= * b2 cpastecart cvec cNUMERAL c_0 b5 * f0 * b3 b5 c/\ ccontinuous_on b3 b4 cSUBSET * * part cIMAGE b3 b4 b0 c? / c/\ ccontinuous_on b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b0 c/\ ! c==> cIN b6 b4 c= * b5 cpastecart cvec cNUMERAL c_0 b6 * b3 b6 ! c==> cIN b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c= * b2 b6 * f0 * b5 b6 f1
+ |- (((!q'. ((((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) = p') ==> ((p' ==> (((p (k ((pastecart t) arb))) = (g t)) = q')) ==> ((((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) ==> ((p (k ((pastecart t) arb))) = (g t))) = (p' ==> q'))))) ==> ((\q'. ((((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) = p') ==> ((p' ==> (((p (k ((pastecart t) arb))) = (g t)) = q')) ==> ((((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) ==> ((p (k ((pastecart t) arb))) = (g t))) = (p' ==> q'))))) q')) = ((\q'. ((((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) = p') ==> ((p' ==> (((p (k ((pastecart t) arb))) = (g t)) = q')) ==> ((((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) ==> ((p (k ((pastecart t) arb))) = (g t))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f2 cfstcart cpastecart f0 f1 * f3 * f4 cpastecart f0 f1 f5 c==> c==> f5 c= c= * f3 * f4 cpastecart f0 f1 * f2 f0 b0 c= c==> c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f2 cfstcart cpastecart f0 f1 * f3 * f4 cpastecart f0 f1 c= * f3 * f4 cpastecart f0 f1 * f2 f0 c==> f5 b0 * / c==> c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f2 cfstcart cpastecart f0 f1 * f3 * f4 cpastecart f0 f1 f5 c==> c==> f5 c= c= * f3 * f4 cpastecart f0 f1 * f2 f0 b0 c= c==> c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f2 cfstcart cpastecart f0 f1 * f3 * f4 cpastecart f0 f1 c= * f3 * f4 cpastecart f0 f1 * f2 f0 c==> f5 b0 f6 * / c==> c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f2 cfstcart cpastecart f0 f1 * f3 * f4 cpastecart f0 f1 f5 c==> c==> f5 c= c= * f3 * f4 cpastecart f0 f1 * f2 f0 b0 c= c==> c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f2 cfstcart cpastecart f0 f1 * f3 * f4 cpastecart f0 f1 c= * f3 * f4 cpastecart f0 f1 * f2 f0 c==> f5 b0 f6
+ |- (((continuous_on g) ((IMAGE fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY)))) = (((continuous_on fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((continuous_on g) ((IMAGE fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))))))
T c= ccontinuous_on f0 * * part cIMAGE part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c/\ ccontinuous_on part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY ccontinuous_on f0 * * part cIMAGE part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY
+ (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), (?x. ((x = (k x)) /\ (t x))), (~ (c x)) |- ((~ (c x)) /\ F)
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c? / c/\ c= f4 * f2 b0 * f0 b0 c==> c~ * f3 f4 c/\ c~ * f3 f4 cF
+ ((\x. (?x. (((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) \/ ((((x = a) /\ (x = b)) /\ (~ (s x))) /\ (s a))))) x) |- (?x. (((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) \/ ((((x = a) /\ (x = b)) /\ (~ (s x))) /\ (s a))))
T c==> * / c? / c\/ c/\ ! c\/ c\/ c~ c= b2 f0 ! c~ c= b2 f1 * f2 b2 c~ * f2 f0 c/\ c/\ c/\ c= b0 f0 c= b1 f1 c~ * f2 b0 * f2 f0 f3 c? / c\/ c/\ ! c\/ c\/ c~ c= b1 f0 ! c~ c= b2 f1 * f2 b1 c~ * f2 f0 c/\ c/\ c/\ c= f3 f0 c= b0 f1 c~ * f2 f3 * f2 f0
+ |- (((((IMAGE (\t. ((pastecart t) arb))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> (((IMAGE k) ((IMAGE (\t. ((pastecart t) arb))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c)) = (((IMAGE k) ((IMAGE (\t. ((pastecart t) arb))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) SUBSET c))
T c= c==> cSUBSET * * part cIMAGE / cpastecart b0 f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY cSUBSET * * part cIMAGE f1 * * part cIMAGE / cpastecart b0 f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 cSUBSET * * part cIMAGE f1 * * part cIMAGE / cpastecart b0 f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2
- (~ F), (~ (s (g x))), ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))), (((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 * f1 f2 c==> c/\ * f3 f4 c/\ c= * f1 cvec cNUMERAL c_0 * f5 f4 c/\ ! c==> c? / c/\ c= b0 * f1 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f0 b0 c/\ ccontinuous_on f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f3 f5 f0 c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= f6 f7 c/\ c~ cF cF
- |- (((!x. (~ (x IN EMPTY))) ==> ((\x. (~ (x IN EMPTY))) x)) = ((\x. (~ (x IN EMPTY))) x))
T c= c==> ! c~ cIN b0 part cEMPTY * / c~ cIN b0 part cEMPTY f0 * / c~ cIN b0 part cEMPTY f0
- ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) |- (((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((continuous_on k) t))) ==> (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((continuous_on k) t)))) = (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((continuous_on k) t))))
T c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY ccontinuous_on f0 b0 ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY ccontinuous_on f0 b0 ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY ccontinuous_on f0 b0
+ |- (((a IN c) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET s) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s)))))
T c==> c/\ cIN f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f0 c/\ cSUBSET * * part cIMAGE f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f1 f3 f4 ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 * * part cINSERT f5 part cEMPTY cIN * f2 b0 f4
+ |- ((\p'. (!q'. (((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) = p') ==> ((p' ==> (((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb)))) = q')) ==> (((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY b0 c==> c==> b0 c= c= * f2 cfstcart cpastecart f0 f1 * f3 * f4 cpastecart f0 f1 b1 c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f2 cfstcart cpastecart f0 f1 * f3 * f4 cpastecart f0 f1 c==> b0 b1 f5
+ |- (((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> (((fstcart ((pastecart x) y)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = T)) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((fstcart ((pastecart x) y)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> T))) = ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((fstcart ((pastecart x) y)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> T)))
T c= c==> c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY c= cIN cfstcart cpastecart f0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN cfstcart cpastecart f0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cT c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN cfstcart cpastecart f0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cT
+ (((covering_space (c , p)) s) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET s) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ (a IN c))))) |- ((((covering_space (c , p)) s) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET s) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ (a IN c))))) /\ (?h. (((continuous_on h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET c) /\ (((h (vec (NUMERAL _0))) = a) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (h t)) = (g t)))))))))
T c==> c/\ ccovering_space c, f0 f1 f2 c/\ ccontinuous_on f3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE f3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ c= * f3 cvec cNUMERAL c_0 * f1 f4 cIN f4 f0 c/\ c/\ ccovering_space c, f0 f1 f2 c/\ ccontinuous_on f3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE f3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ c= * f3 cvec cNUMERAL c_0 * f1 f4 cIN f4 f0 c? / c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ c= * b0 cvec cNUMERAL c_0 f4 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f1 * b0 b1 * f3 b1
+ |- (((((continuous_on (\t. t)) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((continuous_on (\t. arb)) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((continuous_on (\t. ((pastecart t) arb))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = T)) = (((continuous_on (\t. ((pastecart t) arb))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = T))
T c= c==> c/\ ccontinuous_on / b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on / f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= ccontinuous_on / cpastecart b0 f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT c= ccontinuous_on / cpastecart b0 f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
+ |- ((\s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s)))) s)
T * / c= * * part cIMAGE * * part co f0 f1 b0 * * part cIMAGE f0 * * part cIMAGE f1 b0 f2
+ (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), (~ (c x)) |- ((((\x. ((x = (k x)) /\ (t x))) x') ==> F) = T)
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c~ * f3 f4 c= c==> * / c/\ c= f4 * f2 b0 * f0 b0 f5 cF cT
+ |- ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)
T * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
- |- (((!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) ==> ((\s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) s)) = ((\s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) s))
T c= c==> ! c==> c~ c==> ! c==> c? / c/\ c= b1 * f0 b2 * b0 b2 * f1 b1 c==> ! c==> * f2 b1 * b0 b1 ! c==> c? / c/\ c= b1 * f0 b2 * f2 b2 * f1 b1 cF * / c==> c~ c==> ! c==> c? / c/\ c= b1 * f0 b2 * b0 b2 * f1 b1 c==> ! c==> * f2 b1 * b0 b1 ! c==> c? / c/\ c= b1 * f0 b2 * f2 b2 * f1 b1 cF f3 * / c==> c~ c==> ! c==> c? / c/\ c= b1 * f0 b2 * b0 b2 * f1 b1 c==> ! c==> * f2 b1 * b0 b1 ! c==> c? / c/\ c= b1 * f0 b2 * f2 b2 * f1 b1 cF f3
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) |- ((!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) /\ (!p. (!c. (!s. (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))))
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 c/\ ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 ! ! ! c==> ccovering_space c, b1 b0 b2 ! ! ! c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7
- ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) |- ((y IN (arb INSERT EMPTY)) = T)
T c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY c= cIN f1 * * part cINSERT f2 part cEMPTY cT
- (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) t))), (t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) t))) /\ ((continuous_on g) t))
T c==> ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 c==> cSUBSET f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 ccontinuous_on f0 f1
+ |- (((!b. ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F)) ==> ((\b. ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F)) b)) = ((\b. ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F)) b))
T c= c==> ! c==> c~ c= ! c==> c? / c/\ c= b1 f0 c= b2 b0 * f1 b1 * f1 f0 cF * / c==> c~ c= ! c==> c? / c/\ c= b1 f0 c= b2 b0 * f1 b1 * f1 f0 cF f2 * / c==> c~ c= ! c==> c? / c/\ c= b1 f0 c= b2 b0 * f1 b1 * f1 f0 cF f2
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ (!x. ((t x) ==> (s x))), ((x = (k x')) /\ (t x')) |- (((((k x') = (k x')) /\ (s x')) ==> (c (k x'))) = (c (k x')))
T c==> ! c==> * f0 b0 * f1 b0 c==> c/\ c= f2 * f3 f4 * f0 f4 c= c==> c/\ c= * f3 f4 * f3 f4 * f1 f4 * f5 * f3 f4 * f5 * f3 f4
+ ((g (vec (NUMERAL _0))) = (p a)), (a IN c), (((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET s), ((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((covering_space (c , p)) s) |- (((IMAGE g) ((IMAGE fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY)))) SUBSET s)
T c==> c= * f0 cvec cNUMERAL c_0 * f1 f2 c==> cIN f2 f3 c==> cSUBSET * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c==> ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> ccovering_space c, f3 f1 f4 cSUBSET * * part cIMAGE f0 * * part cIMAGE part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f5 part cEMPTY f4
+ |- (((T ==> (((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb)))) = ((g t) = (p (k ((pastecart t) arb)))))) ==> (((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) = (T ==> ((g t) = (p (k ((pastecart t) arb))))))) = (((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) = (T ==> ((g t) = (p (k ((pastecart t) arb)))))))
T c= c==> c==> cT c= c= * f0 cfstcart cpastecart f1 f2 * f3 * f4 cpastecart f1 f2 c= * f0 f1 * f3 * f4 cpastecart f1 f2 c= c==> cIN cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f2 part cEMPTY c= * f0 cfstcart cpastecart f1 f2 * f3 * f4 cpastecart f1 f2 c==> cT c= * f0 f1 * f3 * f4 cpastecart f1 f2 c= c==> cIN cpastecart f1 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f2 part cEMPTY c= * f0 cfstcart cpastecart f1 f2 * f3 * f4 cpastecart f1 f2 c==> cT c= * f0 f1 * f3 * f4 cpastecart f1 f2
- |- ((!t. (!k. (!s. ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))))) = T)
T c= ! ! ! c==> ! c==> c? / c/\ c= b3 * b1 b4 * b2 b4 * f0 b3 c==> ! c==> * b0 b3 * b2 b3 ! c==> c? / c/\ c= b3 * b1 b4 * b0 b4 * f0 b3 cT
- |- ((\q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) = p') ==> ((p' ==> (((g x) IN s) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s)) = (p' ==> q'))))) q')
T * / c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cIN * f4 f0 f5 b0 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f4 f0 f5 c==> f3 b0 f6
- (~ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x)), (((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) |- ((~ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x)) /\ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x))
T c==> c~ cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= f1 f2 c/\ c~ cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) |- (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 c==> ccovering_space c, f0 f1 f2 ! ! ! c==> c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 f2 c/\ ! c==> cIN b3 b2 c= * b0 cpastecart cvec cNUMERAL c_0 b3 * f1 * b1 b3 c/\ ccontinuous_on b1 b2 cSUBSET * * part cIMAGE b1 b2 f0 c? / c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 f0 c/\ ! c==> cIN b4 b2 c= * b3 cpastecart cvec cNUMERAL c_0 b4 * b1 b4 ! c==> cIN b4 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c= * b0 b4 * f1 * b3 b4
+ |- ((!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart x) y))) IN s)))) = (((IMAGE g) ((IMAGE fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY)))) SUBSET s))
T c= ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 * * part cINSERT f0 part cEMPTY cIN * f1 cfstcart cpastecart b0 b1 f2 cSUBSET * * part cIMAGE f1 * * part cIMAGE part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY f2
- ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F) |- (((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F) /\ ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F))
T c==> c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c/\ c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF
- |- ((_783219 = _783220) ==> ((s _783220) \/ (~ (s _783219))))
T c==> c= f0 f1 c\/ * f2 f1 c~ * f2 f0
+ ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) |- ((~ (_783221 = ((I g) _783222))) \/ ((~ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) _783222)) \/ ((I s) _783221)))
T c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 c\/ c~ c= f5 cI f2 f6 c\/ c~ cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f6 cI f4 f5
+ |- ((s x') = (((k x') = (k x')) /\ (s x')))
T c= * f0 f1 c/\ c= * f2 f1 * f2 f1 * f0 f1
+ |- (((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x) = ((((I g) x) = ((I g) x)) /\ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x)))
T c= cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ c= cI f1 f0 cI f1 f0 cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0
- ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))), (((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) |- ((~ ((I s) ((I g) x))) ==> ((I s) ((I g) x)))
T c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 c= f6 f7 c==> c~ cI f4 cI f2 f5 cI f4 cI f2 f5
+ |- (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = p') ==> ((p' ==> ((((\t. ((pastecart t) arb)) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) = q')) ==> (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((\t. ((pastecart t) arb)) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY)))) = (p' ==> q'))))
T c==> c= cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c==> c==> f1 c= cIN * / cpastecart b0 f2 f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f2 part cEMPTY f3 c= c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN * / cpastecart b0 f2 f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f2 part cEMPTY c==> f1 f3
- ((((x = a) /\ (x' = b)) /\ (~ (s x))) /\ (s a)) |- ((~ (s x)) = (~ (s x)))
T c==> c/\ c/\ c/\ c= f0 f1 c= f2 f3 c~ * f4 f0 * f4 f1 c= c~ * f4 f0 c~ * f4 f0
+ |- (((continuous_on (\t. t)) s) = T)
T c= ccontinuous_on / b0 f0 cT
+ |- ((!x. ((x IN ((IMAGE fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY)))) ==> (x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (!x. ((x IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((fstcart x) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))
T c= ! c==> cIN b0 * * part cIMAGE part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY cIN cfstcart b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- ((\t. (!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t)))))) t)
T * / ! ! c= cIN cpastecart b1 b2 * * part cPCROSS f0 b0 c/\ cIN b1 f0 cIN b2 b0 f1
- |- (((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))
T c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF
+ |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- (((!p. (!c. (!a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)))) ==> ((\p. (!c. (!a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)))) p)) = ((\p. (!c. (!a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)))) p))
T c= c==> ! ! ! c==> c~ c==> c/\ * b1 b2 c/\ c= * f0 cvec cNUMERAL c_0 * b0 b2 c/\ ! c==> c? / c/\ c= b3 * f0 b4 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 * f1 b3 c/\ ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b1 b0 f1 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b3 c= b4 f2 * f1 * f0 b3 cF * / ! ! c==> c~ c==> c/\ * b1 b2 c/\ c= * f0 cvec cNUMERAL c_0 * b0 b2 c/\ ! c==> c? / c/\ c= b3 * f0 b4 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 * f1 b3 c/\ ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b1 b0 f1 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b3 c= b4 f2 * f1 * f0 b3 cF f3 * / ! ! c==> c~ c==> c/\ * b1 b2 c/\ c= * f0 cvec cNUMERAL c_0 * b0 b2 c/\ ! c==> c? / c/\ c= b3 * f0 b4 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 * f1 b3 c/\ ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b1 b0 f1 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b3 c= b4 f2 * f1 * f0 b3 cF f3
- |- ((!x. ((P x) \/ Q)) = ((!x. (P x)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ |- (((~ (c x)) ==> F) = (c x))
T c= c==> c~ * f0 f1 cF * f0 f1
+ |- ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> (((fstcart ((pastecart x) y)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((fstcart ((pastecart x) y)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> q')))
T c==> c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY c= cIN cfstcart cpastecart f0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN cfstcart cpastecart f0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY f3
+ ((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) |- (!x. (((~ (_783203 = a)) \/ (~ (x = b))) \/ (s _783203)))
T c==> c/\ ! c\/ c\/ c~ c= b0 f0 ! c~ c= b1 f1 * f2 b0 c~ * f2 f0 ! c\/ c\/ c~ c= f3 f0 c~ c= b0 f1 * f2 f3
+ |- (((!s. (((continuous_on f) s) ==> (!t. ((t SUBSET s) ==> ((continuous_on f) t))))) ==> ((\s. (((continuous_on f) s) ==> (!t. ((t SUBSET s) ==> ((continuous_on f) t))))) s)) = ((\s. (((continuous_on f) s) ==> (!t. ((t SUBSET s) ==> ((continuous_on f) t))))) s))
T c= c==> ! c==> ccontinuous_on f0 b0 ! c==> cSUBSET b1 b0 ccontinuous_on f0 b1 * / c==> ccontinuous_on f0 b0 ! c==> cSUBSET b1 b0 ccontinuous_on f0 b1 f1 * / c==> ccontinuous_on f0 b0 ! c==> cSUBSET b1 b0 ccontinuous_on f0 b1 f1
+ (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), (~ (c x)) |- (((\x. ((x = (k x)) /\ (t x))) x') ==> F)
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c~ * f3 f4 c==> * / c/\ c= f4 * f2 b0 * f0 b0 f5 cF
+ ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) |- ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = T)
T c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY c= cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
+ |- (((?x. ((x = a) /\ (x = b))) /\ (~ (s x))) = (?x. (((x = a) /\ (x = b)) /\ (~ (s x)))))
T c= c/\ c? / c/\ c= f0 f1 c= b0 f2 c~ * f3 f0 c? / c/\ c/\ c= f0 f1 c= b0 f2 c~ * f3 f0
- |- (T = (((~ (_783221 = ((I g) _783222))) \/ ((~ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) _783222)) \/ ((I s) _783221))) = (((I s) _783221) \/ ((~ (_783221 = ((I g) _783222))) \/ (~ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) _783222))))))
T c= cT c= c\/ c~ c= f0 cI f1 f2 c\/ c~ cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 cI f3 f0 c\/ cI f3 f0 c\/ c~ c= f0 cI f1 f2 c~ cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2
+ |- ((!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) ==> (!p. (!c. (!s. (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))))
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 ! ! ! c==> ccovering_space c, b1 b0 b2 ! ! ! c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7
+ |- (((!f. (!g. (!s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s)))))) ==> ((\f. (!g. (!s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s)))))) f)) = ((\f. (!g. (!s. (((IMAGE (f o g)) s) = ((IMAGE f) ((IMAGE g) s)))))) f))
T c= c==> ! ! ! c= * * part cIMAGE * * part co b0 b1 b2 * * part cIMAGE b0 * * part cIMAGE b1 b2 * / ! ! c= * * part cIMAGE * * part co b0 b1 b2 * * part cIMAGE b0 * * part cIMAGE b1 b2 f0 * / ! ! c= * * part cIMAGE * * part co b0 b1 b2 * * part cIMAGE b0 * * part cIMAGE b1 b2 f0
+ |- ((\s. (!c. ((continuous_on (\x. c)) s))) s)
T * / ! ccontinuous_on / b1 b0 f0
+ |- (((!x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t))))) ==> ((\x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t))))) x)) = ((\x. (!y. ((((pastecart x) y) IN (s PCROSS t)) = ((x IN s) /\ (y IN t))))) x))
T c= c==> ! ! c= cIN cpastecart b0 b1 * * part cPCROSS f0 f1 c/\ cIN b0 f0 cIN b1 f1 * / ! c= cIN cpastecart b0 b1 * * part cPCROSS f0 f1 c/\ cIN b0 f0 cIN b1 f1 f2 * / ! c= cIN cpastecart b0 b1 * * part cPCROSS f0 f1 c/\ cIN b0 f0 cIN b1 f1 f2
+ |- ((\q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) = p') ==> ((p' ==> (((fstcart ((pastecart x) y)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((fstcart ((pastecart x) y)) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cIN cfstcart cpastecart f0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN cfstcart cpastecart f0 f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f3 b0 f4
+ |- (((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F) = ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a)))
T c= c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0
+ (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) |- ((\x. (!x. (((~ (x = (k x))) \/ (~ (s x))) \/ (c x)))) _783182)
T c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 * / ! c\/ c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0 f3
+ |- ((\q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) = p') ==> ((p' ==> (((g (fstcart ((pastecart x) y))) IN s) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart x) y))) IN s)) = (p' ==> q'))))) q')
T * / c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cIN * f4 cfstcart cpastecart f0 f1 f5 b0 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f4 cfstcart cpastecart f0 f1 f5 c==> f3 b0 f6
+ ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) |- (!x. ((!x. ((~ (x = ((I g) x))) \/ (~ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x)))) \/ ((I s) x)))
T c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! c\/ ! c\/ c~ c= b0 cI f2 b1 c~ cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 cI f4 b0
+ (a IN c) |- ((((continuous_on (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ (((IMAGE g) ((IMAGE fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY)))) SUBSET s)) = (((continuous_on (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((((IMAGE g) ((IMAGE fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY)))) SUBSET s) /\ (((IMAGE (\y. a)) (arb INSERT EMPTY)) SUBSET c))))
T c==> cIN f0 f1 c= c/\ ccontinuous_on * * part co f2 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f3 part cEMPTY cSUBSET * * part cIMAGE f2 * * part cIMAGE part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f3 part cEMPTY f4 c/\ ccontinuous_on * * part co f2 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f3 part cEMPTY c/\ cSUBSET * * part cIMAGE f2 * * part cIMAGE part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f3 part cEMPTY f4 cSUBSET * * part cIMAGE / f0 * * part cINSERT f3 part cEMPTY f1
- |- ((\s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) s)
T * / c==> c~ c==> ! c==> c? / c/\ c= b1 * f0 b2 * b0 b2 * f1 b1 c==> ! c==> * f2 b1 * b0 b1 ! c==> c? / c/\ c= b1 * f0 b2 * f2 b2 * f1 b1 cF f3
+ (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) |- (!x. (!x. (((~ (x = (k x))) \/ (~ (s x))) \/ (c x))))
T c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 ! ! c\/ c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 b0
+ |- (((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a)) = ((!x. ((x IN ((IMAGE (\y. a)) (b INSERT EMPTY))) ==> (x IN s))) = (a IN s)))
T c= c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 c= ! c==> cIN b0 * * part cIMAGE / f0 * * part cINSERT f1 part cEMPTY cIN b0 f2 cIN f0 f2
+ ((g (vec (NUMERAL _0))) = (p a)), (a IN c), (((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET s), ((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((covering_space (c , p)) s) |- (!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart x) y))) IN s))))
T c==> c= * f0 cvec cNUMERAL c_0 * f1 f2 c==> cIN f2 f3 c==> cSUBSET * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c==> ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> ccovering_space c, f3 f1 f4 ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 * * part cINSERT f5 part cEMPTY cIN * f0 cfstcart cpastecart b0 b1 f4
+ |- ((\s. ((!x. ((x IN (a INSERT s)) ==> (P x))) = ((P a) /\ (!x. ((x IN s) ==> (P x)))))) s)
T * / c= ! c==> cIN b1 * * part cINSERT f0 b0 * f1 b1 c/\ * f1 f0 ! c==> cIN b1 b0 * f1 b1 f2
+ |- ((!x. ((x IN ((IMAGE (\y. a)) (b INSERT EMPTY))) ==> (x IN s))) = (a IN s))
T c= ! c==> cIN b0 * * part cIMAGE / f0 * * part cINSERT f1 part cEMPTY cIN b0 f2 cIN f0 f2
+ ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))), (((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) |- ((I s) ((I g) x))
T c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 c= f6 f7 cI f4 cI f2 f5
+ (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- (!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ! ! c==> c/\ ccontinuous_on b0 b1 ccontinuous_on f0 * * part cIMAGE b0 b1 ccontinuous_on * * part co f0 b0 b1
- |- (((!t. (!k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)))) ==> ((\t. (!k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)))) t)) = ((\t. (!k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)))) t))
T c= c==> ! ! ! c==> c~ c==> ! c==> c? / c/\ c= b3 * b1 b4 * b2 b4 * f0 b3 c==> ! c==> * b0 b3 * b2 b3 ! c==> c? / c/\ c= b3 * b1 b4 * b0 b4 * f0 b3 cF * / ! ! c==> c~ c==> ! c==> c? / c/\ c= b3 * b1 b4 * b2 b4 * f0 b3 c==> ! c==> * b0 b3 * b2 b3 ! c==> c? / c/\ c= b3 * b1 b4 * b0 b4 * f0 b3 cF f1 * / ! ! c==> c~ c==> ! c==> c? / c/\ c= b3 * b1 b4 * b2 b4 * f0 b3 c==> ! c==> * b0 b3 * b2 b3 ! c==> c? / c/\ c= b3 * b1 b4 * b0 b4 * f0 b3 cF f1
+ |- ((!x. ((x IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart x)) IN s))) = (!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart x) y))) IN s)))))
T c= ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY cIN * f1 cfstcart b0 f2 ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 * * part cINSERT f0 part cEMPTY cIN * f1 cfstcart cpastecart b0 b1 f2
+ |- ((((\x. (?x. (((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) \/ ((((x = a) /\ (x = b)) /\ (~ (s x))) /\ (s a))))) x) ==> F) = T)
T c= c==> * / c? / c\/ c/\ ! c\/ c\/ c~ c= b2 f0 ! c~ c= b2 f1 * f2 b2 c~ * f2 f0 c/\ c/\ c/\ c= b0 f0 c= b1 f1 c~ * f2 b0 * f2 f0 f3 cF cT
+ ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) |- (!x. (!x. (((~ (x = ((I g) x))) \/ (~ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x))) \/ ((I s) x))))
T c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c\/ c\/ c~ c= b0 cI f2 b1 c~ cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 cI f4 b0
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) |- (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z)))))))))))))
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 ! ! c==> ccovering_space c, f0 f1 f2 c==> c/\ ccontinuous_on f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c/\ cSUBSET * * part cIMAGE f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 f2 c/\ ! c==> cIN b2 b1 c= * f3 cpastecart cvec cNUMERAL c_0 b2 * f1 * b0 b2 c/\ ccontinuous_on b0 b1 cSUBSET * * part cIMAGE b0 b1 f0 c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 f0 c/\ ! c==> cIN b3 b1 c= * b2 cpastecart cvec cNUMERAL c_0 b3 * b0 b3 ! c==> cIN b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= * f3 b3 * f1 * b2 b3
- |- (((~ (x IN EMPTY)) ==> ((x IN EMPTY) = F)) = ((x IN EMPTY) = F))
T c= c==> c~ cIN f0 part cEMPTY c= cIN f0 part cEMPTY cF c= cIN f0 part cEMPTY cF
+ ((\k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET c) /\ (((k ((pastecart (vec (NUMERAL _0))) arb)) = a) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))))))) k) |- (((\k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET c) /\ (((k ((pastecart (vec (NUMERAL _0))) arb)) = a) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))))))) k) /\ (?h. (((continuous_on h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET c) /\ (((h (vec (NUMERAL _0))) = a) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (h t)) = (g t)))))))))
T c==> * / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY f1 c/\ c= * b0 cpastecart cvec cNUMERAL c_0 f0 f2 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f3 cfstcart b1 * f4 * b0 b1 f5 c/\ * / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY f1 c/\ c= * b0 cpastecart cvec cNUMERAL c_0 f0 f2 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f3 cfstcart b1 * f4 * b0 b1 f5 c? / c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ c= * b0 cvec cNUMERAL c_0 f2 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 * b0 b1 * f3 b1
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) |- (!c. (!s. (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 ! ! c==> ccovering_space c, b0 f0 b1 ! ! ! c==> c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b1 c/\ ! c==> cIN b5 b4 c= * b2 cpastecart cvec cNUMERAL c_0 b5 * f0 * b3 b5 c/\ ccontinuous_on b3 b4 cSUBSET * * part cIMAGE b3 b4 b0 c? / c/\ ccontinuous_on b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b0 c/\ ! c==> cIN b6 b4 c= * b5 cpastecart cvec cNUMERAL c_0 b6 * b3 b6 ! c==> cIN b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c= * b2 b6 * f0 * b5 b6
+ |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ ((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((continuous_on (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY)))
T c==> ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on * * part co f0 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY
- ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F), (((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) |- ((((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) /\ ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))
T c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c/\ c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF
- (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET c) /\ (((k ((pastecart (vec (NUMERAL _0))) arb)) = a) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))))))) |- ((?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET c) /\ (((k ((pastecart (vec (NUMERAL _0))) arb)) = a) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))))))) /\ (?h. (((continuous_on h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET c) /\ (((h (vec (NUMERAL _0))) = a) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (h t)) = (g t)))))))))
T c==> c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY f1 c/\ c= * b0 cpastecart cvec cNUMERAL c_0 f0 f2 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f3 cfstcart b1 * f4 * b0 b1 c/\ c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY f1 c/\ c= * b0 cpastecart cvec cNUMERAL c_0 f0 f2 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f3 cfstcart b1 * f4 * b0 b1 c? / c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c/\ c= * b0 cvec cNUMERAL c_0 f2 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 * b0 b1 * f3 b1
+ |- (((?x. (((x = a) /\ (x = b)) /\ (~ (s x)))) /\ (s a)) = (?x. ((((x = a) /\ (x = b)) /\ (~ (s x))) /\ (s a))))
T c= c/\ c? / c/\ c/\ c= f0 f1 c= b0 f2 c~ * f3 f0 * f3 f1 c? / c/\ c/\ c/\ c= f0 f1 c= b0 f2 c~ * f3 f0 * f3 f1
+ ((covering_space (c , p)) s) |- ((((continuous_on (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((((IMAGE (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET s) /\ ((!y. ((y IN (arb INSERT EMPTY)) ==> (((g o fstcart) ((pastecart (vec (NUMERAL _0))) y)) = (p ((\y. a) y))))) /\ (((continuous_on (\y. a)) (arb INSERT EMPTY)) /\ (((IMAGE (\y. a)) (arb INSERT EMPTY)) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET c) /\ ((!y. ((y IN (arb INSERT EMPTY)) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = ((\y. a) y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> (((g o fstcart) z) = (p (k z))))))))))
T c==> ccovering_space c, f0 f1 f2 c==> c/\ ccontinuous_on * * part co f3 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cIMAGE * * part co f3 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f4 part cEMPTY f2 c/\ ! c==> cIN b0 * * part cINSERT f4 part cEMPTY c= co f3 part cfstcart cpastecart cvec cNUMERAL c_0 b0 * f1 * / f5 b0 c/\ ccontinuous_on / f5 * * part cINSERT f4 part cEMPTY cSUBSET * * part cIMAGE / f5 * * part cINSERT f4 part cEMPTY f0 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f4 part cEMPTY c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f4 part cEMPTY f0 c/\ ! c==> cIN b1 * * part cINSERT f4 part cEMPTY c= * b0 cpastecart cvec cNUMERAL c_0 b1 * / f5 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f4 part cEMPTY c= co f3 part cfstcart b1 * f1 * b0 b1
+ (((continuous_on f) s) /\ ((continuous_on g) s)) |- ((((continuous_on f) s) /\ ((continuous_on g) s)) /\ (((continuous_on (\x. ((pastecart (f x)) (g x)))) s) = T))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 c/\ c/\ ccontinuous_on f0 f1 ccontinuous_on f2 f1 c= ccontinuous_on / cpastecart * f0 b0 * f2 b0 f1 cT
+ |- (((!a. (!s. ((!x. ((x IN (a INSERT s)) ==> (P x))) = ((P a) /\ (!x. ((x IN s) ==> (P x))))))) ==> ((\a. (!s. ((!x. ((x IN (a INSERT s)) ==> (P x))) = ((P a) /\ (!x. ((x IN s) ==> (P x))))))) a)) = ((\a. (!s. ((!x. ((x IN (a INSERT s)) ==> (P x))) = ((P a) /\ (!x. ((x IN s) ==> (P x))))))) a))
T c= c==> ! ! c= ! c==> cIN b2 * * part cINSERT b0 b1 * f0 b2 c/\ * f0 b0 ! c==> cIN b2 b1 * f0 b2 * / ! c= ! c==> cIN b2 * * part cINSERT b0 b1 * f0 b2 c/\ * f0 b0 ! c==> cIN b2 b1 * f0 b2 f1 * / ! c= ! c==> cIN b2 * * part cINSERT b0 b1 * f0 b2 c/\ * f0 b0 ! c==> cIN b2 b1 * f0 b2 f1
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))), ((covering_space (c , p)) s) |- ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 c==> ccovering_space c, f0 f1 f2 c==> c/\ ccontinuous_on f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c/\ cSUBSET * * part cIMAGE f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 f2 c/\ ! c==> cIN b0 f4 c= * f3 cpastecart cvec cNUMERAL c_0 b0 * f1 * f5 b0 c/\ ccontinuous_on f5 f4 cSUBSET * * part cIMAGE f5 f4 f0 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 f0 c/\ ! c==> cIN b1 f4 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f5 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c= * f3 b1 * f1 * b0 b1
+ |- ((((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) \/ (?x. (?x. ((((x = a) /\ (x = b)) /\ (~ (s x))) /\ (s a))))) = (?x. (((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) \/ (?x. ((((x = a) /\ (x = b)) /\ (~ (s x))) /\ (s a))))))
T c= c\/ c/\ ! c\/ c\/ c~ c= b0 f0 ! c~ c= b1 f1 * f2 b0 c~ * f2 f0 c? / c? / c/\ c/\ c/\ c= b0 f0 c= b1 f1 c~ * f2 b0 * f2 f0 c? / c\/ c/\ ! c\/ c\/ c~ c= b1 f0 ! c~ c= b1 f1 * f2 b1 c~ * f2 f0 c? / c/\ c/\ c/\ c= b0 f0 c= b1 f1 c~ * f2 b0 * f2 f0
+ (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET c) /\ (((k ((pastecart (vec (NUMERAL _0))) arb)) = a) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z)))))))), ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) |- (?h. (((continuous_on h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET c) /\ (((h (vec (NUMERAL _0))) = a) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (h t)) = (g t))))))))
T c==> c/\ ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c/\ cSUBSET * * part cIMAGE f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY f2 c/\ c= * f0 cpastecart cvec cNUMERAL c_0 f1 f3 ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f4 cfstcart b0 * f5 * f0 b0 c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c? / c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ c= * b0 cvec cNUMERAL c_0 f3 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f5 * b0 b1 * f4 b1
- (_783269 = _783270) |- ((_783269 = _783270) /\ ((NUMERAL _783269) = (NUMERAL _783270)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ (((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) |- ((((((I g) x) = ((I g) x)) /\ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x)) ==> ((I s) ((I g) x))) = ((I s) ((I g) x)))
T c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= f1 f2 c= c==> c/\ c= cI f3 f0 cI f3 f0 cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 cI f4 cI f3 f0 cI f4 cI f3 f0
+ (((covering_space (c , p)) s) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET s) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ (a IN c))))), ((covering_space (c , p)) s) |- (?h. (((continuous_on h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET c) /\ (((h (vec (NUMERAL _0))) = a) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (h t)) = (g t))))))))
T c==> c/\ ccovering_space c, f0 f1 f2 c/\ ccontinuous_on f3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE f3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c/\ c= * f3 cvec cNUMERAL c_0 * f1 f4 cIN f4 f0 c==> ccovering_space c, f0 f1 f2 c? / c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c/\ c= * b0 cvec cNUMERAL c_0 f4 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f1 * b0 b1 * f3 b1
+ |- (((!p'. (!q'. ((((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) = p') ==> ((p' ==> (((p (k ((pastecart t) arb))) = (g t)) = q')) ==> ((((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) ==> ((p (k ((pastecart t) arb))) = (g t))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) = p') ==> ((p' ==> (((p (k ((pastecart t) arb))) = (g t)) = q')) ==> ((((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) ==> ((p (k ((pastecart t) arb))) = (g t))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) = p') ==> ((p' ==> (((p (k ((pastecart t) arb))) = (g t)) = q')) ==> ((((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) ==> ((p (k ((pastecart t) arb))) = (g t))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f2 cfstcart cpastecart f0 f1 * f3 * f4 cpastecart f0 f1 b0 c==> c==> b0 c= c= * f3 * f4 cpastecart f0 f1 * f2 f0 b1 c= c==> c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f2 cfstcart cpastecart f0 f1 * f3 * f4 cpastecart f0 f1 c= * f3 * f4 cpastecart f0 f1 * f2 f0 c==> b0 b1 * / ! c==> c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f2 cfstcart cpastecart f0 f1 * f3 * f4 cpastecart f0 f1 b0 c==> c==> b0 c= c= * f3 * f4 cpastecart f0 f1 * f2 f0 b1 c= c==> c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f2 cfstcart cpastecart f0 f1 * f3 * f4 cpastecart f0 f1 c= * f3 * f4 cpastecart f0 f1 * f2 f0 c==> b0 b1 f5 * / ! c==> c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f2 cfstcart cpastecart f0 f1 * f3 * f4 cpastecart f0 f1 b0 c==> c==> b0 c= c= * f3 * f4 cpastecart f0 f1 * f2 f0 b1 c= c==> c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f2 cfstcart cpastecart f0 f1 * f3 * f4 cpastecart f0 f1 c= * f3 * f4 cpastecart f0 f1 * f2 f0 c==> b0 b1 f5
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- (((!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t))))) ==> ((\s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t))))) s)) = ((\s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t))))) s))
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 c= c==> ! ! c==> ccontinuous_on f0 b0 c==> cSUBSET b1 b0 ccontinuous_on f0 b1 * / ! c==> ccontinuous_on f0 b0 c==> cSUBSET b1 b0 ccontinuous_on f0 b1 f1 * / ! c==> ccontinuous_on f0 b0 c==> cSUBSET b1 b0 ccontinuous_on f0 b1 f1
+ (((k ((pastecart (vec (NUMERAL _0))) arb)) = a) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z)))))), (((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET c), ((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) |- (?h. (((continuous_on h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET c) /\ (((h (vec (NUMERAL _0))) = a) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (h t)) = (g t))))))))
T c==> c/\ c= * f0 cpastecart cvec cNUMERAL c_0 f1 f2 ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f3 cfstcart b0 * f4 * f0 b0 c==> cSUBSET * * part cIMAGE f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY f5 c==> ccontinuous_on f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c? / c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 c/\ c= * b0 cvec cNUMERAL c_0 f2 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 * b0 b1 * f3 b1
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) |- (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 ! ! ! ! ! c==> ccovering_space c, b0 f0 b1 c==> c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b1 c/\ ! c==> cIN b5 b4 c= * b2 cpastecart cvec cNUMERAL c_0 b5 * f0 * b3 b5 c/\ ccontinuous_on b3 b4 cSUBSET * * part cIMAGE b3 b4 b0 c? / c/\ ccontinuous_on b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b0 c/\ ! c==> cIN b6 b4 c= * b5 cpastecart cvec cNUMERAL c_0 b6 * b3 b6 ! c==> cIN b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c= * b2 b6 * f0 * b5 b6
+ ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))), (((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) |- ((~ (s (g x))) ==> F)
T c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 c= f6 f7 c==> c~ * f4 * f2 f5 cF
- (_783201 = _783202) |- ((_783201 = _783202) /\ ((k _783201) = (k _783202)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * f2 f0 * f2 f1
+ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))) |- ((((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) ==> ((p (k ((pastecart t) arb))) = (g t))) = ((p (k ((pastecart t) arb))) = (g t)))
T c==> ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f1 cfstcart b0 * f2 * f3 b0 c= c==> c==> cIN cpastecart f4 f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f1 cfstcart cpastecart f4 f0 * f2 * f3 cpastecart f4 f0 c= * f2 * f3 cpastecart f4 f0 * f1 f4 c= * f2 * f3 cpastecart f4 f0 * f1 f4
- |- ((((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F) ==> ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)) = ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F))
T c= c==> c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF
+ |- (((continuous_on (\t. c)) s) = T)
T c= ccontinuous_on / f0 f1 cT
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- ((\t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))) t)
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 * / c==> ccontinuous_on f0 f1 c==> cSUBSET b0 f1 ccontinuous_on f0 b0 f2
+ |- ((\a. (!s. ((!x. ((x IN (a INSERT s)) ==> (P x))) = ((P a) /\ (!x. ((x IN s) ==> (P x))))))) a)
T * / ! c= ! c==> cIN b2 * * part cINSERT b0 b1 * f0 b2 c/\ * f0 b0 ! c==> cIN b2 b1 * f0 b2 f1
- (_783267 = _783268) |- ((_783267 = _783268) /\ ((BIT1 _783267) = (BIT1 _783268)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- |- ((!x'. ((~ (x = (k x))) \/ (~ (s x')))) = ((~ (x = (k x))) \/ (!x. (~ (s x)))))
T c= ! c\/ c~ c= f0 * f1 f2 c~ * f3 b0 c\/ c~ c= f0 * f1 f2 ! c~ * f3 b0
+ |- (((!g. ((path_image g) = ((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) ==> ((\g. ((path_image g) = ((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) g)) = ((\g. ((path_image g) = ((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) g))
T c= c==> ! c= * part cpath_image b0 * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * / c= * part cpath_image b0 * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 * / c= * part cpath_image b0 * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0
+ |- ((\P. (!a. (!s. ((!x. ((x IN (a INSERT s)) ==> (P x))) = ((P a) /\ (!x. ((x IN s) ==> (P x)))))))) P)
T * / ! ! c= ! c==> cIN b3 * * part cINSERT b1 b2 * b0 b3 c/\ * b0 b1 ! c==> cIN b3 b2 * b0 b3 f0
+ |- ((a = a) /\ (b = b))
T c/\ c= f0 f0 c= f1 f1
- |- ((~ (_783269 = _783270)) \/ ((NUMERAL _783269) = (NUMERAL _783270)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- |- ((((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x)))))) = T)
T c= c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cT
- (((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) |- (((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x) = ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x))
T c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= f1 f2 c= cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0
+ (t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((T ==> (((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb)))) = q')) ==> (((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) = (T ==> q')))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c==> cT c= c= * f1 cfstcart cpastecart f0 f2 * f3 * f4 cpastecart f0 f2 f5 c= c==> cIN cpastecart f0 f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f2 part cEMPTY c= * f1 cfstcart cpastecart f0 f2 * f3 * f4 cpastecart f0 f2 c==> cT f5
+ ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) |- ((\x. (!x. (((~ (x = ((I g) x))) \/ (~ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x))) \/ ((I s) x)))) _783221)
T c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 * / ! c\/ c\/ c~ c= b0 cI f2 b1 c~ cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 cI f4 b0 f5
+ ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) |- (((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))) = T)
T c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 c= c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 c= f6 f7 * f4 * f2 f5 cT
+ |- ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)
T * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
+ ((g (vec (NUMERAL _0))) = (p a)), (a IN c), (((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET s), ((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((covering_space (c , p)) s) |- (!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s))))
T c==> c= * f0 cvec cNUMERAL c_0 * f1 f2 c==> cIN f2 f3 c==> cSUBSET * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c==> ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> ccovering_space c, f3 f1 f4 ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b1 * * part cINSERT f5 part cEMPTY cIN * f0 b0 f4
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (T = (((continuous_on (\t. t)) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((continuous_on (\t. arb)) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c= cT c/\ ccontinuous_on / b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on / f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- (_783255 = _783257), (_783256 = _783258) |- ((_783255 = _783257) /\ (((I _783257) _783258) \/ (~ ((I _783255) _783256))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cI f1 f3 c~ cI f0 f2
+ |- (((!s. (!b. ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F))) ==> ((\s. (!b. ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F))) s)) = ((\s. (!b. ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F))) s))
T c= c==> ! ! c==> c~ c= ! c==> c? / c/\ c= b2 f0 c= b3 b1 * b0 b2 * b0 f0 cF * / ! c==> c~ c= ! c==> c? / c/\ c= b2 f0 c= b3 b1 * b0 b2 * b0 f0 cF f1 * / ! c==> c~ c= ! c==> c? / c/\ c= b2 f0 c= b3 b1 * b0 b2 * b0 f0 cF f1
+ |- (((((x = a) /\ (x' = b)) /\ (~ (s x))) /\ (s a)) ==> F)
T c==> c/\ c/\ c/\ c= f0 f1 c= f2 f3 c~ * f4 f0 * f4 f1 cF
+ |- ((!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) ==> (!f. (!s. (((continuous_on f) s) ==> (!t. ((t SUBSET s) ==> ((continuous_on f) t)))))))
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 ! ! c==> ccontinuous_on b0 b1 ! c==> cSUBSET b2 b1 ccontinuous_on b0 b2
- ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> (((IMAGE k) t) SUBSET c)), (t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) |- ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ (((IMAGE k) t) SUBSET c))
T c==> c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY cSUBSET * * part cIMAGE f2 f0 f3 c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c/\ cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY cSUBSET * * part cIMAGE f2 f0 f3
+ |- ((((IMAGE k) s) SUBSET c) ==> ((t SUBSET s) ==> (((IMAGE k) t) SUBSET c)))
T c==> cSUBSET * * part cIMAGE f0 f1 f2 c==> cSUBSET f3 f1 cSUBSET * * part cIMAGE f0 f3 f2
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
+ (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- (((!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) ==> ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) g)) = ((\g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)))) g))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c= c==> ! ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 * * part cIMAGE f0 b1 ccontinuous_on * * part co b0 f0 b1 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 * * part cIMAGE f0 b1 ccontinuous_on * * part co b0 f0 b1 f1 * / ! c==> c/\ ccontinuous_on f0 b1 ccontinuous_on b0 * * part cIMAGE f0 b1 ccontinuous_on * * part co b0 f0 b1 f1
- (_783240 = _783242) |- ((_783239 = _783241) ==> (((covering_space _783241) _783242) \/ (~ ((covering_space _783239) _783240))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ ccovering_space f3 f1 c~ ccovering_space f2 f0
+ ((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((((continuous_on fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((continuous_on g) ((IMAGE fstcart) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))))) ==> ((continuous_on (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY)))) = ((continuous_on (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))))
T c==> ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> c/\ ccontinuous_on part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY ccontinuous_on f0 * * part cIMAGE part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY ccontinuous_on * * part co f0 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY ccontinuous_on * * part co f0 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ (x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((\t. ((pastecart t) arb)) x) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) = T))
T c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cIN * / cpastecart b0 f1 f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY cT
+ |- (((!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))) ==> (!p. (!c. (!s. (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z)))))))))))))))))) = (!p. (!c. (!s. (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))))
T c= c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 ! ! ! c==> ccovering_space c, b1 b0 b2 ! ! ! c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 ! ! ! c==> ccovering_space c, b1 b0 b2 ! ! ! c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7
+ ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) |- (!x. (((~ (_783221 = ((I g) x))) \/ (~ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x))) \/ ((I s) _783221)))
T c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! c\/ c\/ c~ c= f5 cI f2 b0 c~ cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 cI f4 f5
+ ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) |- ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x)))
T c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 c= f6 f7 * f4 * f2 f5
+ (~ ((!x. (((x = a) /\ (?x. (x = b))) ==> (s x))) = (s a))) |- (?x. (?x. (((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) \/ ((((x = a) /\ (x = b)) /\ (~ (s x))) /\ (s a)))))
T c==> c~ c= ! c==> c/\ c= b0 f0 c? / c= b1 f1 * f2 b0 * f2 f0 c? / c? / c\/ c/\ ! c\/ c\/ c~ c= b2 f0 ! c~ c= b2 f1 * f2 b2 c~ * f2 f0 c/\ c/\ c/\ c= b0 f0 c= b1 f1 c~ * f2 b0 * f2 f0
+ ((g (vec (NUMERAL _0))) = (p a)), (a IN c), (((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET s), ((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((covering_space (c , p)) s) |- ((((continuous_on (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((((IMAGE (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET s) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ (((continuous_on (\y. a)) (arb INSERT EMPTY)) /\ (((IMAGE (\y. a)) (arb INSERT EMPTY)) SUBSET c))))) /\ ((?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET c) /\ (((k ((pastecart (vec (NUMERAL _0))) arb)) = a) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))))))) ==> (?h. (((continuous_on h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET c) /\ (((h (vec (NUMERAL _0))) = a) /\ (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (h t)) = (g t))))))))))
T c==> c= * f0 cvec cNUMERAL c_0 * f1 f2 c==> cIN f2 f3 c==> cSUBSET * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c==> ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> ccovering_space c, f3 f1 f4 c/\ c/\ ccontinuous_on * * part co f0 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f5 part cEMPTY c/\ cSUBSET * * part cIMAGE * * part co f0 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f5 part cEMPTY f4 c/\ c= * f0 cvec cNUMERAL c_0 * f1 f2 c/\ ccontinuous_on / f2 * * part cINSERT f5 part cEMPTY cSUBSET * * part cIMAGE / f2 * * part cINSERT f5 part cEMPTY f3 c==> c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f5 part cEMPTY c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f5 part cEMPTY f3 c/\ c= * b0 cpastecart cvec cNUMERAL c_0 f5 f2 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f5 part cEMPTY c= * f0 cfstcart b1 * f1 * b0 b1 c? / c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c/\ c= * b0 cvec cNUMERAL c_0 f2 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f1 * b0 b1 * f0 b1
+ |- (((!x. ((x IN ((IMAGE (\y. a)) (b INSERT EMPTY))) ==> (x IN s))) = (a IN s)) = ((((IMAGE (\y. a)) (b INSERT EMPTY)) SUBSET s) = (a IN s)))
T c= c= ! c==> cIN b0 * * part cIMAGE / f0 * * part cINSERT f1 part cEMPTY cIN b0 f2 cIN f0 f2 c= cSUBSET * * part cIMAGE / f0 * * part cINSERT f1 part cEMPTY f2 cIN f0 f2
+ |- (((!x. (((\x. (((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) \/ ((((x = a) /\ (x = b)) /\ (~ (s x))) /\ (s a)))) x) ==> F)) ==> ((?x. (((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) \/ ((((x = a) /\ (x = b)) /\ (~ (s x))) /\ (s a)))) ==> F)) = ((?x. (((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) \/ ((((x = a) /\ (x = b)) /\ (~ (s x))) /\ (s a)))) ==> F))
T c= c==> ! c==> * / c\/ c/\ ! c\/ c\/ c~ c= b1 f0 ! c~ c= b2 f1 * f2 b1 c~ * f2 f0 c/\ c/\ c/\ c= f3 f0 c= b1 f1 c~ * f2 f3 * f2 f0 b0 cF c==> c? / c\/ c/\ ! c\/ c\/ c~ c= b1 f0 ! c~ c= b2 f1 * f2 b1 c~ * f2 f0 c/\ c/\ c/\ c= f3 f0 c= b0 f1 c~ * f2 f3 * f2 f0 cF c==> c? / c\/ c/\ ! c\/ c\/ c~ c= b1 f0 ! c~ c= b2 f1 * f2 b1 c~ * f2 f0 c/\ c/\ c/\ c= f3 f0 c= b0 f1 c~ * f2 f3 * f2 f0 cF
- (_783283 = _783285), (_783284 = _783286) |- ((_783283 = _783285) /\ (((I _783283) _783284) = ((I _783285) _783286)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= cI f0 f2 cI f1 f3
+ |- ((\c. (!s. (((covering_space (c , p)) s) ==> (!h. (!f. (!u. ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z)))))))))))))))) c)
T * / ! c==> ccovering_space c, b0 f0 b1 ! ! ! c==> c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b1 c/\ ! c==> cIN b5 b4 c= * b2 cpastecart cvec cNUMERAL c_0 b5 * f0 * b3 b5 c/\ ccontinuous_on b3 b4 cSUBSET * * part cIMAGE b3 b4 b0 c? / c/\ ccontinuous_on b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c/\ cSUBSET * * part cIMAGE b5 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 b0 c/\ ! c==> cIN b6 b4 c= * b5 cpastecart cvec cNUMERAL c_0 b6 * b3 b6 ! c==> cIN b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c= * b2 b6 * f0 * b5 b6 f1
- |- ((_783269 = _783270) ==> ((NUMERAL _783269) = (NUMERAL _783270)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) |- ((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((continuous_on k) t))) ==> ((continuous_on k) t))
T c==> cSUBSET f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY ccontinuous_on f2 b0 ccontinuous_on f2 f0
+ |- ((\s. ((((continuous_on f) s) /\ ((continuous_on g) s)) ==> ((continuous_on (\x. ((pastecart (f x)) (g x)))) s))) s)
T * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 b0 ccontinuous_on / cpastecart * f0 b1 * f1 b1 b0 f2
+ |- ((\a. (!s. (!b. ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F)))) a)
T * / ! ! c==> c~ c= ! c==> c? / c/\ c= b3 b0 c= b4 b2 * b1 b3 * b1 b0 cF f0
- (((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) |- ((((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) /\ (((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)))
T c==> c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c/\ c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF
+ |- (((!x. ((~ (x = ((I g) x))) \/ (~ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x)))) \/ ((I s) x)) = (!x. (((~ (x = ((I g) x))) \/ (~ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x))) \/ ((I s) x))))
T c= c\/ ! c\/ c~ c= f0 cI f1 b0 c~ cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 cI f2 f0 ! c\/ c\/ c~ c= f0 cI f1 b0 c~ cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 cI f2 f0
+ (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) /\ (!g. (!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c/\ ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ! ! ! c==> c/\ ccontinuous_on b1 b2 ccontinuous_on b0 * * part cIMAGE b1 b2 ccontinuous_on * * part co b0 b1 b2
+ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))) |- (!t. ((t IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((p (k ((pastecart t) arb))) = (g t))))
T c==> ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f1 cfstcart b0 * f2 * f3 b0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f2 * f3 cpastecart b0 f0 * f1 b0
+ ((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) |- (((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) /\ F)
T c==> c/\ ! c\/ c\/ c~ c= b0 f0 ! c~ c= b1 f1 * f2 b0 c~ * f2 f0 c/\ c/\ ! c\/ c\/ c~ c= b0 f0 ! c~ c= b1 f1 * f2 b0 c~ * f2 f0 cF
+ |- ((\g. (!f. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) g)
T * / ! ! c==> c/\ ccontinuous_on b1 b2 ccontinuous_on b0 * * part cIMAGE b1 b2 ccontinuous_on * * part co b0 b1 b2 f0
+ ((((x = a) /\ (x' = b)) /\ (~ (s x))) /\ (s a)) |- (~ (s x))
T c==> c/\ c/\ c/\ c= f0 f1 c= f2 f3 c~ * f4 f0 * f4 f1 c~ * f4 f0
+ |- ((!y. ((y IN (arb INSERT EMPTY)) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = ((\y. a) y)))) = (((k ((pastecart (vec (NUMERAL _0))) arb)) = ((\y. a) arb)) /\ (!y. ((y IN EMPTY) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = ((\y. a) y))))))
T c= ! c==> cIN b0 * * part cINSERT f0 part cEMPTY c= * f1 cpastecart cvec cNUMERAL c_0 b0 * / f2 b0 c/\ c= * f1 cpastecart cvec cNUMERAL c_0 f0 * / f2 f0 ! c==> cIN b0 part cEMPTY c= * f1 cpastecart cvec cNUMERAL c_0 b0 * / f2 b0
- |- (((!g. (!s. (!arb. (!p. (!c. (!a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F))))))) ==> ((\g. (!s. (!arb. (!p. (!c. (!a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F))))))) g)) = ((\g. (!s. (!arb. (!p. (!c. (!a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F))))))) g))
T c= c==> ! ! ! ! ! ! c==> c~ c==> c/\ * b4 b5 c/\ c= * b0 cvec cNUMERAL c_0 * b3 b5 c/\ ! c==> c? / c/\ c= b6 * b0 b7 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b7 * b1 b6 c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b4 b3 b1 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b6 c= b7 b2 * b1 * b0 b6 cF * / ! ! ! ! ! c==> c~ c==> c/\ * b4 b5 c/\ c= * b0 cvec cNUMERAL c_0 * b3 b5 c/\ ! c==> c? / c/\ c= b6 * b0 b7 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b7 * b1 b6 c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b4 b3 b1 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b6 c= b7 b2 * b1 * b0 b6 cF f0 * / ! ! ! ! ! c==> c~ c==> c/\ * b4 b5 c/\ c= * b0 cvec cNUMERAL c_0 * b3 b5 c/\ ! c==> c? / c/\ c= b6 * b0 b7 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b7 * b1 b6 c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b4 b3 b1 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b6 c= b7 b2 * b1 * b0 b6 cF f0
- |- ((_783284 = _783286) ==> ((~ (_783283 = _783285)) \/ (((I _783283) _783284) = ((I _783285) _783286))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cI f2 f0 cI f3 f1
+ ((((x = a) /\ (x' = b)) /\ (~ (s x))) /\ (s a)) |- (((((x = a) /\ (x' = b)) /\ (~ (s x))) /\ (s a)) /\ F)
T c==> c/\ c/\ c/\ c= f0 f1 c= f2 f3 c~ * f4 f0 * f4 f1 c/\ c/\ c/\ c/\ c= f0 f1 c= f2 f3 c~ * f4 f0 * f4 f1 cF
- |- ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> (((g x) IN s) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s)) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> q')))
T c==> c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY c= cIN * f3 f0 f4 f5 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f3 f0 f4 c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY f5
+ (!f. (!s. (!t. (((continuous_on f) s) ==> ((t SUBSET s) ==> ((continuous_on f) t)))))) |- (!s. (((continuous_on f) s) ==> (!t. ((t SUBSET s) ==> ((continuous_on f) t)))))
T c==> ! ! ! c==> ccontinuous_on b0 b1 c==> cSUBSET b2 b1 ccontinuous_on b0 b2 ! c==> ccontinuous_on f0 b0 ! c==> cSUBSET b1 b0 ccontinuous_on f0 b1
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ |- (((!x. (((f o g) x) = (f (g x)))) ==> ((\x. (((f o g) x) = (f (g x)))) x)) = ((\x. (((f o g) x) = (f (g x)))) x))
T c= c==> ! c= co f0 f1 b0 * f0 * f1 b0 * / c= co f0 f1 b0 * f0 * f1 b0 f2 * / c= co f0 f1 b0 * f0 * f1 b0 f2
- |- ((_783201 = _783202) ==> ((k _783201) = (k _783202)))
T c==> c= f0 f1 c= * f2 f0 * f2 f1
+ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))) |- ((\z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))) ((pastecart t) arb))
T c==> ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f1 cfstcart b0 * f2 * f3 b0 * / c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f1 cfstcart b0 * f2 * f3 b0 cpastecart f4 f0
- ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) |- ((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))
T c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- (T = (((~ (_783203 = a)) \/ ((~ (_783204 = b)) \/ (s _783203))) = ((s _783203) \/ ((~ (_783203 = a)) \/ (~ (_783204 = b))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 * f4 f0 c\/ * f4 f0 c\/ c~ c= f0 f1 c~ c= f2 f3
+ |- (((!q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) = p') ==> ((p' ==> (((g (fstcart ((pastecart x) y))) IN s) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart x) y))) IN s)) = (p' ==> q'))))) ==> ((\q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) = p') ==> ((p' ==> (((g (fstcart ((pastecart x) y))) IN s) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart x) y))) IN s)) = (p' ==> q'))))) q')) = ((\q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) = p') ==> ((p' ==> (((g (fstcart ((pastecart x) y))) IN s) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart x) y))) IN s)) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cIN * f4 cfstcart cpastecart f0 f1 f5 b0 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f4 cfstcart cpastecart f0 f1 f5 c==> f3 b0 * / c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cIN * f4 cfstcart cpastecart f0 f1 f5 b0 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f4 cfstcart cpastecart f0 f1 f5 c==> f3 b0 f6 * / c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cIN * f4 cfstcart cpastecart f0 f1 f5 b0 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f4 cfstcart cpastecart f0 f1 f5 c==> f3 b0 f6
+ (!p. (!c. (!s. (!h. (!f. (!u. (((covering_space (c , p)) s) ==> ((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z))))))))))))))))), ((covering_space (c , p)) s) |- (((((continuous_on h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE h) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> ((h ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> ((h z) = (p (k z)))))))))) = T)
T c==> ! ! ! ! ! ! c==> ccovering_space c, b1 b0 b2 c==> c/\ ccontinuous_on b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b2 c/\ ! c==> cIN b6 b5 c= * b3 cpastecart cvec cNUMERAL c_0 b6 * b0 * b4 b6 c/\ ccontinuous_on b4 b5 cSUBSET * * part cIMAGE b4 b5 b1 c? / c/\ ccontinuous_on b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c/\ cSUBSET * * part cIMAGE b6 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 b1 c/\ ! c==> cIN b7 b5 c= * b6 cpastecart cvec cNUMERAL c_0 b7 * b4 b7 ! c==> cIN b7 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= * b3 b7 * b0 * b6 b7 c==> ccovering_space c, f0 f1 f2 c= c==> c/\ ccontinuous_on f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c/\ cSUBSET * * part cIMAGE f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 f2 c/\ ! c==> cIN b0 f4 c= * f3 cpastecart cvec cNUMERAL c_0 b0 * f1 * f5 b0 c/\ ccontinuous_on f5 f4 cSUBSET * * part cIMAGE f5 f4 f0 c? / c/\ ccontinuous_on b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c/\ cSUBSET * * part cIMAGE b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 f0 c/\ ! c==> cIN b1 f4 c= * b0 cpastecart cvec cNUMERAL c_0 b1 * f5 b1 ! c==> cIN b1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f4 c= * f3 b1 * f1 * b0 b1 cT
+ (~ (s (g x))) |- (((I s) ((I g) x)) ==> F)
T c==> c~ * f0 * f1 f2 c==> cI f0 cI f1 f2 cF
- |- ((!x'. ((!x. ((~ (x' = (k x))) \/ (~ (s x)))) \/ (c x))) = ((!x. (!x. ((~ (x = (k x))) \/ (~ (s x))))) \/ (c x)))
T c= ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 f3 c\/ ! ! c\/ c~ c= b0 * f0 b1 c~ * f1 b1 * f2 f3
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
+ ((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), ((covering_space (c , p)) s) |- (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))
T c==> ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> ccovering_space c, f1 f2 f3 c/\ ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f1 f2 f3
- |- ((~ (((I g) x) = ((I g) x))) ==> (((I g) x) = ((I g) x)))
T c==> c~ c= cI f0 f1 cI f0 f1 c= cI f0 f1 cI f0 f1
+ ((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((\t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) t))) t)
T c==> ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * / c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 f1
+ |- (((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> (((g (fstcart ((pastecart x) y))) IN s) = ((g x) IN s))) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart x) y))) IN s)) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s)))) = ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart x) y))) IN s)) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s))))
T c= c==> c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY c= cIN * f3 cfstcart cpastecart f0 f1 f4 cIN * f3 f0 f4 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f3 cfstcart cpastecart f0 f1 f4 c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f3 f0 f4 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f3 cfstcart cpastecart f0 f1 f4 c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f3 f0 f4
+ |- (((!q'. (((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) = p') ==> ((p' ==> (((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb)))) = q')) ==> (((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) = (p' ==> q'))))) ==> ((\q'. (((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) = p') ==> ((p' ==> (((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb)))) = q')) ==> (((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) = (p' ==> q'))))) q')) = ((\q'. (((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) = p') ==> ((p' ==> (((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb)))) = q')) ==> (((((pastecart t) arb) IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart ((pastecart t) arb))) = (p (k ((pastecart t) arb))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= c= * f3 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 b0 c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f3 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 c==> f2 b0 * / c==> c= cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= c= * f3 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 b0 c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f3 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 c==> f2 b0 f6 * / c==> c= cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= c= * f3 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 b0 c= c==> cIN cpastecart f0 f1 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY c= * f3 cfstcart cpastecart f0 f1 * f4 * f5 cpastecart f0 f1 c==> f2 b0 f6
- (t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) t))) ==> ((continuous_on g) t))
T c==> cSUBSET f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f1 b0 ccontinuous_on f1 f0
+ (((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) |- (((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x) /\ (y = arb))
T c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= f1 f2 c/\ cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= f1 f2
- (((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) |- (y = arb)
T c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= f1 f2 c= f1 f2
+ ((covering_space (c , p)) s) |- ((\f. (!u. ((((continuous_on (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE (g o fstcart)) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET s) /\ ((!y. ((y IN u) ==> (((g o fstcart) ((pastecart (vec (NUMERAL _0))) y)) = (p (f y))))) /\ (((continuous_on f) u) /\ (((IMAGE f) u) SUBSET c))))) ==> (?k. (((continuous_on k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) /\ ((((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) SUBSET c) /\ ((!y. ((y IN u) ==> ((k ((pastecart (vec (NUMERAL _0))) y)) = (f y)))) /\ (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS u)) ==> (((g o fstcart) z) = (p (k z)))))))))))) (\y. a))
T c==> ccovering_space c, f0 f1 f2 * / ! c==> c/\ ccontinuous_on * * part co f3 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c/\ cSUBSET * * part cIMAGE * * part co f3 part cfstcart * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 f2 c/\ ! c==> cIN b2 b1 c= co f3 part cfstcart cpastecart cvec cNUMERAL c_0 b2 * f1 * b0 b2 c/\ ccontinuous_on b0 b1 cSUBSET * * part cIMAGE b0 b1 f0 c? / c/\ ccontinuous_on b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c/\ cSUBSET * * part cIMAGE b2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 f0 c/\ ! c==> cIN b3 b1 c= * b2 cpastecart cvec cNUMERAL c_0 b3 * b0 b3 ! c==> cIN b3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= co f3 part cfstcart b3 * f1 * b2 b3 / f4
- |- (((!s. (!arb. (!p. (!c. (!a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)))))) ==> ((\s. (!arb. (!p. (!c. (!a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)))))) s)) = ((\s. (!arb. (!p. (!c. (!a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)))))) s))
T c= c==> ! ! ! ! ! c==> c~ c==> c/\ * b3 b4 c/\ c= * f0 cvec cNUMERAL c_0 * b2 b4 c/\ ! c==> c? / c/\ c= b5 * f0 b6 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b6 * b0 b5 c/\ ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b3 b2 b0 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= b6 b1 * b0 * f0 b5 cF * / ! ! ! ! c==> c~ c==> c/\ * b3 b4 c/\ c= * f0 cvec cNUMERAL c_0 * b2 b4 c/\ ! c==> c? / c/\ c= b5 * f0 b6 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b6 * b0 b5 c/\ ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b3 b2 b0 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= b6 b1 * b0 * f0 b5 cF f1 * / ! ! ! ! c==> c~ c==> c/\ * b3 b4 c/\ c= * f0 cvec cNUMERAL c_0 * b2 b4 c/\ ! c==> c? / c/\ c= b5 * f0 b6 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b6 * b0 b5 c/\ ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b3 b2 b0 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= b6 b1 * b0 * f0 b5 cF f1
- ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F) |- ((((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F) ==> ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F)) ==> ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F))
T c==> c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c==> c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF
- ((((x = a) /\ (x' = b)) /\ (~ (s x))) /\ (s a)) |- ((x = a) = (x = a))
T c==> c/\ c/\ c/\ c= f0 f1 c= f2 f3 c~ * f4 f0 * f4 f1 c= c= f0 f1 c= f0 f1
- (_783256 = _783258) |- ((_783256 = _783258) /\ ((~ (_783255 = _783257)) \/ (((I _783257) _783258) \/ (~ ((I _783255) _783256)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
- (_783219 = _783220) |- ((_783219 = _783220) /\ ((s _783220) \/ (~ (s _783219))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ * f2 f1 c~ * f2 f0
- (((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) |- (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = ((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))
T c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= f1 f2 c= ccontinuous_on f3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- (_783277 = _783279), (_783278 = _783280) |- ((_783277 = _783279) /\ (((CONS _783277) _783278) = ((CONS _783279) _783280)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= cCONS f0 f2 cCONS f1 f3
- |- ((!x'. (((~ (x' = a)) \/ (!x. (~ (x = b)))) \/ (s x))) = ((!x. ((~ (x = a)) \/ (!x. (~ (x = b))))) \/ (s x)))
T c= ! c\/ c\/ c~ c= b0 f0 ! c~ c= b1 f1 * f2 f3 c\/ ! c\/ c~ c= b0 f0 ! c~ c= b1 f1 * f2 f3
- (~ ((k x') = (k x'))) |- ((~ ((k x') = (k x'))) /\ ((k x') = (k x')))
T c==> c~ c= * f0 f1 * f0 f1 c/\ c~ c= * f0 f1 * f0 f1 c= * f0 f1 * f0 f1
- |- ((((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F) ==> ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)) ==> (((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F) ==> ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF
- |- ((\c. (!t. (!k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))))) c)
T * / ! ! ! c==> c~ c==> ! c==> c? / c/\ c= b4 * b2 b5 * b3 b5 * b0 b4 c==> ! c==> * b1 b4 * b3 b4 ! c==> c? / c/\ c= b4 * b2 b5 * b1 b5 * b0 b4 cF f0
- (((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) |- ((!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) ==> ((continuous_on (g o f)) s))
T c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 ccontinuous_on * * part co f2 f0 f1
- ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) |- (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) /\ (((g x) IN s) = ((g x) IN s)))
T c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY c= cIN * f3 f0 f4 cIN * f3 f0 f4
- |- ((\x. (~ (x IN EMPTY))) x)
T * / c~ cIN b0 part cEMPTY f0
- |- (((((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) ==> (((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))) = (((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)))
T c= c==> c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF
- |- ((_783267 = _783268) ==> ((BIT1 _783267) = (BIT1 _783268)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
- ((x = (k x')) /\ (t x')) |- ((~ (t x')) ==> (t x'))
T c==> c/\ c= f0 * f1 f2 * f3 f2 c==> c~ * f3 f2 * f3 f2
- (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) t))), (t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((continuous_on g) t))
T c==> ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 c==> cSUBSET f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cSUBSET f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 f1
- ((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) |- ((~ (s a)) ==> (s a))
T c==> c/\ ! c\/ c\/ c~ c= b0 f0 ! c~ c= b1 f1 * f2 b0 c~ * f2 f0 c==> c~ * f2 f0 * f2 f0
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((continuous_on k) t))) |- ((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((continuous_on k) t))) /\ (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((continuous_on k) t))))
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY ccontinuous_on f1 b0 c/\ ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY ccontinuous_on f1 b0 ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY ccontinuous_on f1 b0
- |- (((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> (((g x) IN s) = ((g x) IN s))) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s)) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s)))) = ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s)) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s))))
T c= c==> c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY c= cIN * f3 f0 f4 cIN * f3 f0 f4 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f3 f0 f4 c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f3 f0 f4 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f3 f0 f4 c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f3 f0 f4
- |- ((!s. ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) = T)
T c= ! c==> ! c==> c? / c/\ c= b1 * f0 b2 * b0 b2 * f1 b1 c==> ! c==> * f2 b1 * b0 b1 ! c==> c? / c/\ c= b1 * f0 b2 * f2 b2 * f1 b1 cT
- |- ((\k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))) k)
T * / ! c==> c~ c==> ! c==> c? / c/\ c= b2 * b0 b3 * b1 b3 * f0 b2 c==> ! c==> * f1 b2 * b1 b2 ! c==> c? / c/\ c= b2 * b0 b3 * f1 b3 * f0 b2 cF f2
- |- ((~ (_783284 = _783286)) \/ ((~ (_783283 = _783285)) \/ (((I _783283) _783284) = ((I _783285) _783286))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cI f2 f0 cI f3 f1
- (_783278 = _783280) |- ((_783278 = _783280) /\ ((~ (_783277 = _783279)) \/ (((CONS _783277) _783278) = ((CONS _783279) _783280))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f2 f0 cCONS f3 f1
- |- ((!arb. (!p. (!c. (!a. (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x)))))))))) = T)
T c= ! ! ! ! c==> c/\ * b2 b3 c/\ c= * f0 cvec cNUMERAL c_0 * b1 b3 c/\ ! c==> c? / c/\ c= b4 * f0 b5 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 * f1 b4 c/\ ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b2 b1 f1 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c= b5 b0 * f1 * f0 b4 cT
- ((((x = a) /\ (x' = b)) /\ (~ (s x))) /\ (s a)) |- ((~ F) ==> F)
T c==> c/\ c/\ c/\ c= f0 f1 c= f2 f3 c~ * f4 f0 * f4 f1 c==> c~ cF cF
- ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F), (((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F) ==> ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)) |- (((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F) /\ ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F))
T c==> c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c==> c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c/\ c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF
- (?x. (((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) \/ ((((x = a) /\ (x = b)) /\ (~ (s x))) /\ (s a)))) |- ((?x. (((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) \/ ((((x = a) /\ (x = b)) /\ (~ (s x))) /\ (s a)))) /\ F)
T c==> c? / c\/ c/\ ! c\/ c\/ c~ c= b1 f0 ! c~ c= b2 f1 * f2 b1 c~ * f2 f0 c/\ c/\ c/\ c= f3 f0 c= b0 f1 c~ * f2 f3 * f2 f0 c/\ c? / c\/ c/\ ! c\/ c\/ c~ c= b1 f0 ! c~ c= b2 f1 * f2 b1 c~ * f2 f0 c/\ c/\ c/\ c= f3 f0 c= b0 f1 c~ * f2 f3 * f2 f0 cF
- (~ (s a)), ((!x. (((~ (x = a)) \/ (!x. (~ (x = b)))) \/ (s x))) /\ (~ (s a))) |- ((~ (s a)) /\ (s a))
T c==> c~ * f0 f1 c==> c/\ ! c\/ c\/ c~ c= b0 f1 ! c~ c= b1 f2 * f0 b0 c~ * f0 f1 c/\ c~ * f0 f1 * f0 f1
- (((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET s) |- ((((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET s) = T)
T c==> cSUBSET * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= cSUBSET * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 cT
- (((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) |- ((~ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x)) ==> ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) x))
T c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= f1 f2 c==> c~ cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0
- (_783244 = _783246), (_783243 = _783245) |- (((((continuous_on _783243) _783244) = ((continuous_on _783245) _783246)) ==> (((continuous_on _783245) _783246) \/ (~ ((continuous_on _783243) _783244)))) = (((continuous_on _783245) _783246) \/ (~ ((continuous_on _783243) _783244))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= ccontinuous_on f2 f0 ccontinuous_on f3 f1 c\/ ccontinuous_on f3 f1 c~ ccontinuous_on f2 f0 c\/ ccontinuous_on f3 f1 c~ ccontinuous_on f2 f0
- |- ((_783271 = _783272) ==> ((vec _783271) = (vec _783272)))
T c==> c= f0 f1 c= cvec f0 cvec f1
- ((((x = a) /\ (x' = b)) /\ (~ (s x))) /\ (s a)) |- (F = F)
T c==> c/\ c/\ c/\ c= f0 f1 c= f2 f3 c~ * f4 f0 * f4 f1 c= cF cF
- (((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) |- (((~ (_783221 = ((I g) _783222))) \/ ((~ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) _783222)) \/ ((I s) _783221))) = ((~ (_783221 = ((I g) _783222))) \/ ((~ ((I (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) _783222)) \/ ((I s) _783221))))
T c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= f1 f2 c= c\/ c~ c= f3 cI f4 f5 c\/ c~ cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 cI f6 f3 c\/ c~ c= f3 cI f4 f5 c\/ c~ cI * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f5 cI f6 f3
- |- (((!p'. (!q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) = p') ==> ((p' ==> (((g x) IN s) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s)) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) = p') ==> ((p' ==> (((g x) IN s) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s)) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) = p') ==> ((p' ==> (((g x) IN s) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s)) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= cIN * f3 f0 f4 b1 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f3 f0 f4 c==> b0 b1 * / ! c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= cIN * f3 f0 f4 b1 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f3 f0 f4 c==> b0 b1 f5 * / ! c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= cIN * f3 f0 f4 b1 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f3 f0 f4 c==> b0 b1 f5
- |- ((~ ((k x') = (k x'))) ==> ((k x') = (k x')))
T c==> c~ c= * f0 f1 * f0 f1 c= * f0 f1 * f0 f1
- (_783240 = _783242), (_783239 = _783241) |- ((_783239 = _783241) /\ (((covering_space _783241) _783242) \/ (~ ((covering_space _783239) _783240))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ ccovering_space f3 f1 c~ ccovering_space f2 f0
- ((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = T)
T c==> ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
- |- ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), (~ (c (k x'))), ((x = (k x')) /\ (t x')) |- ((~ (c (k x'))) /\ (c (k x')))
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c~ * f3 * f2 f4 c==> c/\ c= f5 * f2 f4 * f0 f4 c/\ c~ * f3 * f2 f4 * f3 * f2 f4
- |- ((!s. (!arb. (!p. (!c. (!a. (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))))))) = T)
T c= ! ! ! ! ! c==> c/\ * b3 b4 c/\ c= * f0 cvec cNUMERAL c_0 * b2 b4 c/\ ! c==> c? / c/\ c= b5 * f0 b6 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b6 * b0 b5 c/\ ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b3 b2 b0 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= b6 b1 * b0 * f0 b5 cT
- (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) t))) |- (((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) t)) = T)
T c==> ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 c= c==> cSUBSET f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 f1 cT
- |- ((((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F) ==> ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)) = ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))
T c= c==> c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF c==> c~ c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cF
- |- ((~ (_783278 = _783280)) \/ ((~ (_783277 = _783279)) \/ (((CONS _783277) _783278) = ((CONS _783279) _783280))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f2 f0 cCONS f3 f1
- |- (((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x))))) = T)
T c= c==> ! c==> c? / c/\ c= b0 * f0 b1 * f1 b1 * f2 b0 c==> ! c==> * f3 b0 * f1 b0 ! c==> c? / c/\ c= b0 * f0 b1 * f3 b1 * f2 b0 cT
- ((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (((!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) t))) ==> (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) t)))) = (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) t))))
T c==> ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0
- |- ((?x'. (((x = a) /\ (?x. (x = b))) /\ (~ (s x')))) = (((x = a) /\ (?x. (x = b))) /\ (?x. (~ (s x)))))
T c= c? / c/\ c/\ c= f0 f1 c? / c= b1 f2 c~ * f3 b0 c/\ c/\ c= f0 f1 c? / c= b0 f2 c? / c~ * f3 b0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- ((x = (k x')) /\ (t x')) |- ((t x') = (t x'))
T c==> c/\ c= f0 * f1 f2 * f3 f2 c= * f3 f2 * f3 f2
- (!x. ((t x) ==> (s x))), ((x = (k x')) /\ (t x')) |- ((~ (s x')) ==> (s x'))
T c==> ! c==> * f0 b0 * f1 b0 c==> c/\ c= f2 * f3 f4 * f0 f4 c==> c~ * f1 f4 * f1 f4
- (_783255 = _783257), (_783256 = _783258) |- (((I _783257) _783258) \/ (~ ((I _783255) _783256)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
- |- ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s)) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s)))
T c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f3 f0 f4 c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f3 f0 f4
- |- ((!a. (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) = T)
T c= ! c==> c/\ * f0 b0 c/\ c= * f1 cvec cNUMERAL c_0 * f2 b0 c/\ ! c==> c? / c/\ c= b1 * f1 b2 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 * f3 b1 c/\ ccontinuous_on f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f2 f3 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= b2 f4 * f3 * f1 b1 cT
- |- ((~ (_783201 = _783202)) \/ ((k _783201) = (k _783202)))
T c\/ c~ c= f0 f1 c= * f2 f0 * f2 f1
- (_783273 = _783275) |- ((_783273 = _783275) /\ ((~ (_783274 = _783276)) \/ ((_783273 , _783274) = (_783275 , _783276))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- |- ((s = t) = (!x. ((x IN s) = (x IN t))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
- (_783271 = _783272) |- ((_783271 = _783272) /\ ((vec _783271) = (vec _783272)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cvec f0 cvec f1
- |- ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) = p') ==> ((p' ==> (((g x) IN s) = q')) ==> ((((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> ((g x) IN s)) = (p' ==> q'))))
T c==> c= c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cIN * f4 f0 f5 f6 c= c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY cIN * f4 f0 f5 c==> f3 f6
- |- ((!c. (!a. (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x)))))))) = T)
T c= ! ! c==> c/\ * b0 b1 c/\ c= * f0 cvec cNUMERAL c_0 * f1 b1 c/\ ! c==> c? / c/\ c= b2 * f0 b3 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b3 * f2 b2 c/\ ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b0 f1 f2 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c= b3 f3 * f2 * f0 b2 cT
- ((x = (k x')) /\ (t x')) |- (((~ (_783182 = (k _783183))) \/ ((~ (s _783183)) \/ (c _783182))) = ((~ (_783182 = (k _783183))) \/ ((~ (s _783183)) \/ (c _783182))))
T c==> c/\ c= f0 * f1 f2 * f3 f2 c= c\/ c~ c= f4 * f1 f5 c\/ c~ * f6 f5 * f7 f4 c\/ c~ c= f4 * f1 f5 c\/ c~ * f6 f5 * f7 f4
- (((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) |- (((I c) a) = ((I c) a))
T c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= f1 f2 c= cI f3 f4 cI f3 f4
- (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))) |- ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))
T c==> ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f1 cfstcart b0 * f2 * f3 b0 c==> cIN f4 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f1 cfstcart f4 * f2 * f3 f4
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((continuous_on k) t))) |- (((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((continuous_on k) t)) = T)
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY ccontinuous_on f1 b0 c= c==> cSUBSET f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY ccontinuous_on f1 f2 cT
- |- ((_783256 = _783258) ==> ((~ (_783255 = _783257)) \/ (((I _783257) _783258) \/ (~ ((I _783255) _783256)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
- |- ((\c. (!a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F))) c)
T * / ! c==> c~ c==> c/\ * b0 b1 c/\ c= * f0 cvec cNUMERAL c_0 * f1 b1 c/\ ! c==> c? / c/\ c= b2 * f0 b3 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b3 * f2 b2 c/\ ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b0 f1 f2 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c= b3 f3 * f2 * f0 b2 cF f4
- |- ((!x'. ((~ (x = (g x))) \/ (~ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x')))) = ((~ (x = (g x))) \/ (!x. (~ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x)))))
T c= ! c\/ c~ c= f0 * f1 f2 c~ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c\/ c~ c= f0 * f1 f2 ! c~ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0
- |- (((!c. (!t. (!k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))))) ==> ((\c. (!t. (!k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))))) c)) = ((\c. (!t. (!k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))))) c))
T c= c==> ! ! ! ! c==> c~ c==> ! c==> c? / c/\ c= b4 * b2 b5 * b3 b5 * b0 b4 c==> ! c==> * b1 b4 * b3 b4 ! c==> c? / c/\ c= b4 * b2 b5 * b1 b5 * b0 b4 cF * / ! ! ! c==> c~ c==> ! c==> c? / c/\ c= b4 * b2 b5 * b3 b5 * b0 b4 c==> ! c==> * b1 b4 * b3 b4 ! c==> c? / c/\ c= b4 * b2 b5 * b1 b5 * b0 b4 cF f0 * / ! ! ! c==> c~ c==> ! c==> c? / c/\ c= b4 * b2 b5 * b3 b5 * b0 b4 c==> ! c==> * b1 b4 * b3 b4 ! c==> c? / c/\ c= b4 * b2 b5 * b1 b5 * b0 b4 cF f0
- (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), ((x = (k x')) /\ (t x')) |- ((~ (c (k x'))) ==> (c (k x')))
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c/\ c= f4 * f2 f5 * f0 f5 c==> c~ * f3 * f2 f5 * f3 * f2 f5
- |- (((!c. (!a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F))) ==> ((\c. (!a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F))) c)) = ((\c. (!a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F))) c))
T c= c==> ! ! c==> c~ c==> c/\ * b0 b1 c/\ c= * f0 cvec cNUMERAL c_0 * f1 b1 c/\ ! c==> c? / c/\ c= b2 * f0 b3 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b3 * f2 b2 c/\ ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b0 f1 f2 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c= b3 f3 * f2 * f0 b2 cF * / ! c==> c~ c==> c/\ * b0 b1 c/\ c= * f0 cvec cNUMERAL c_0 * f1 b1 c/\ ! c==> c? / c/\ c= b2 * f0 b3 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b3 * f2 b2 c/\ ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b0 f1 f2 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c= b3 f3 * f2 * f0 b2 cF f4 * / ! c==> c~ c==> c/\ * b0 b1 c/\ c= * f0 cvec cNUMERAL c_0 * f1 b1 c/\ ! c==> c? / c/\ c= b2 * f0 b3 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b3 * f2 b2 c/\ ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b0 f1 f2 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b2 c= b3 f3 * f2 * f0 b2 cF f4
- |- ((_783244 = _783246) ==> ((~ (_783243 = _783245)) \/ (((continuous_on _783245) _783246) \/ (~ ((continuous_on _783243) _783244)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ ccontinuous_on f3 f1 c~ ccontinuous_on f2 f0
- |- ((\s. (!arb. (!p. (!c. (!a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)))))) s)
T * / ! ! ! ! c==> c~ c==> c/\ * b3 b4 c/\ c= * f0 cvec cNUMERAL c_0 * b2 b4 c/\ ! c==> c? / c/\ c= b5 * f0 b6 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b6 * b0 b5 c/\ ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b3 b2 b0 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 c= b6 b1 * b0 * f0 b5 cF f1
- |- (((!k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))) ==> ((\k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))) k)) = ((\k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F))) k))
T c= c==> ! ! c==> c~ c==> ! c==> c? / c/\ c= b2 * b0 b3 * b1 b3 * f0 b2 c==> ! c==> * f1 b2 * b1 b2 ! c==> c? / c/\ c= b2 * b0 b3 * f1 b3 * f0 b2 cF * / ! c==> c~ c==> ! c==> c? / c/\ c= b2 * b0 b3 * b1 b3 * f0 b2 c==> ! c==> * f1 b2 * b1 b2 ! c==> c? / c/\ c= b2 * b0 b3 * f1 b3 * f0 b2 cF f2 * / ! c==> c~ c==> ! c==> c? / c/\ c= b2 * b0 b3 * b1 b3 * f0 b2 c==> ! c==> * f1 b2 * b1 b2 ! c==> c? / c/\ c= b2 * b0 b3 * f1 b3 * f0 b2 cF f2
- (~ (s a)), ((((x = a) /\ (x' = b)) /\ (~ (s x))) /\ (s a)) |- ((~ (s a)) /\ (s a))
T c==> c~ * f0 f1 c==> c/\ c/\ c/\ c= f2 f1 c= f3 f4 c~ * f0 f2 * f0 f1 c/\ c~ * f0 f1 * f0 f1
- (!z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))) |- ((\z. ((z IN ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((g (fstcart z)) = (p (k z))))) z)
T c==> ! c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f1 cfstcart b0 * f2 * f3 b0 * / c==> cIN b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c= * f1 cfstcart b0 * f2 * f3 b0 f4
- |- ((?x'. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x'))) = ((x = (g x)) /\ (?x. ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))))
T c= c? / c/\ c= f0 * f1 f2 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c/\ c= f0 * f1 f2 c? / cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0
- ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F), (((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F) ==> ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F)) |- (((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F) /\ ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F))
T c==> c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c==> c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c/\ c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF
- (_783256 = _783258) |- ((_783255 = _783257) ==> (((I _783257) _783258) \/ (~ ((I _783255) _783256))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
- |- ((!y. (P y)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- (~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) |- ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) /\ F)
T c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 c/\ c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF
- (_783244 = _783246) |- ((_783244 = _783246) /\ ((~ (_783243 = _783245)) \/ (((continuous_on _783245) _783246) \/ (~ ((continuous_on _783243) _783244)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ ccontinuous_on f3 f1 c~ ccontinuous_on f2 f0
- |- ((?x'. ((x = (k x')) /\ (t x))) = ((?x. (x = (k x))) /\ (t x)))
T c= c? / c/\ c= f0 * f1 b0 * f2 f3 c/\ c? / c= f0 * f1 b0 * f2 f3
- |- (((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F) ==> ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F))
T c==> c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF
- (_783284 = _783286) |- ((_783283 = _783285) ==> (((I _783283) _783284) = ((I _783285) _783286)))
T c==> c= f0 f1 c==> c= f2 f3 c= cI f2 f0 cI f3 f1
- ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F) |- ((((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F) ==> ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)) ==> ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F))
T c==> c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c==> c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF c==> c~ c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= b1 f5 * f4 * f2 b0 cF
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((continuous_on k) t))) |- ((\t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((continuous_on k) t))) t)
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY ccontinuous_on f1 b0 * / c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY ccontinuous_on f1 b0 f2
- |- ((\p. (!c. (!a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F)))) p)
T * / ! ! c==> c~ c==> c/\ * b1 b2 c/\ c= * f0 cvec cNUMERAL c_0 * b0 b2 c/\ ! c==> c? / c/\ c= b3 * f0 b4 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 * f1 b3 c/\ ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b1 b0 f1 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b3 c= b4 f2 * f1 * f0 b3 cF f3
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))), (((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) |- ((continuous_on (g o f)) s)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 ccontinuous_on * * part co f2 f0 f1
- ((((x = a) /\ (x' = b)) /\ (~ (s x))) /\ (s a)) |- (x' = b)
T c==> c/\ c/\ c/\ c= f0 f1 c= f2 f3 c~ * f4 f0 * f4 f1 c= f2 f3
- |- ((~ (_783240 = _783242)) \/ ((~ (_783239 = _783241)) \/ (((covering_space _783241) _783242) \/ (~ ((covering_space _783239) _783240)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ ccovering_space f3 f1 c~ ccovering_space f2 f0
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- (((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s)) = T)
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c= c==> c/\ ccontinuous_on f0 f1 ccontinuous_on f2 * * part cIMAGE f0 f1 ccontinuous_on * * part co f2 f0 f1 cT
- |- ((!g. (!s. (!arb. (!p. (!c. (!a. (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x)))))))))))) = (!g. (!s. (!arb. (!p. (!c. (!a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F))))))))
T c= ! ! ! ! ! ! c==> c/\ * b4 b5 c/\ c= * b0 cvec cNUMERAL c_0 * b3 b5 c/\ ! c==> c? / c/\ c= b6 * b0 b7 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b7 * b1 b6 c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b4 b3 b1 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b6 c= b7 b2 * b1 * b0 b6 ! ! ! ! ! ! c==> c~ c==> c/\ * b4 b5 c/\ c= * b0 cvec cNUMERAL c_0 * b3 b5 c/\ ! c==> c? / c/\ c= b6 * b0 b7 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b7 * b1 b6 c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b4 b3 b1 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b6 c= b7 b2 * b1 * b0 b6 cF
- (_783281 = _783282) |- ((_783281 = _783282) /\ ((closed_interval _783281) = (closed_interval _783282)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * part cclosed_interval f0 * part cclosed_interval f1
- |- ((!x'. ((!x. ((~ (x' = (g x))) \/ (~ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x)))) \/ (s x))) = ((!x. (!x. ((~ (x = (g x))) \/ (~ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))))) \/ (s x)))
T c= ! c\/ ! c\/ c~ c= b0 * f0 b1 c~ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f1 f2 c\/ ! ! c\/ c~ c= b0 * f0 b1 c~ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f1 f2
- ((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) |- ((I c) a)
T c==> c/\ * f0 f1 c/\ c= * f2 cvec cNUMERAL c_0 * f3 f1 c/\ ! c==> c? / c/\ c= b0 * f2 b1 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 * f4 b0 c/\ ccontinuous_on f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, f0 f3 f4 cI f0 f1
- |- ((!k. (!s. ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x))))))) = T)
T c= ! ! c==> ! c==> c? / c/\ c= b2 * b0 b3 * b1 b3 * f0 b2 c==> ! c==> * f1 b2 * b1 b2 ! c==> c? / c/\ c= b2 * b0 b3 * f1 b3 * f0 b2 cT
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- |- (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (y IN (arb INSERT EMPTY))) ==> (((g x) IN s) = ((g x) IN s)))
T c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * * part cINSERT f2 part cEMPTY c= cIN * f3 f0 f4 cIN * f3 f0 f4
- |- ((\arb. (!p. (!c. (!a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F))))) arb)
T * / ! ! ! c==> c~ c==> c/\ * b2 b3 c/\ c= * f0 cvec cNUMERAL c_0 * b1 b3 c/\ ! c==> c? / c/\ c= b4 * f0 b5 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b5 * f1 b4 c/\ ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b2 b1 f1 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 c= b5 b0 * f1 * f0 b4 cF f2
- |- (((\t. (f t)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((_783281 = _783282) ==> ((closed_interval _783281) = (closed_interval _783282)))
T c==> c= f0 f1 c= * part cclosed_interval f0 * part cclosed_interval f1
- (_783219 = _783220) |- ((((s _783219) = (s _783220)) ==> ((s _783220) \/ (~ (s _783219)))) = ((s _783220) \/ (~ (s _783219))))
T c==> c= f0 f1 c= c==> c= * f2 f0 * f2 f1 c\/ * f2 f1 c~ * f2 f0 c\/ * f2 f1 c~ * f2 f0
- |- ((~ (_783271 = _783272)) \/ ((vec _783271) = (vec _783272)))
T c\/ c~ c= f0 f1 c= cvec f0 cvec f1
- (~ (b = b)) |- ((~ (b = b)) /\ (b = b))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- (_783244 = _783246) |- ((_783243 = _783245) ==> (((continuous_on _783245) _783246) \/ (~ ((continuous_on _783243) _783244))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ ccontinuous_on f3 f1 c~ ccontinuous_on f2 f0
- |- ((~ (_783219 = _783220)) \/ ((s _783220) \/ (~ (s _783219))))
T c\/ c~ c= f0 f1 c\/ * f2 f1 c~ * f2 f0
- (!x. ((t x) ==> (s x))), (!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))), (~ F), (~ (c x)), ((x = (k x')) /\ (t x')) |- ((~ F) /\ F)
T c==> ! c==> * f0 b0 * f1 b0 c==> ! c==> c? / c/\ c= b0 * f2 b1 * f1 b1 * f3 b0 c==> c~ cF c==> c~ * f3 f4 c==> c/\ c= f4 * f2 f5 * f0 f5 c/\ c~ cF cF
- (((IMAGE k) ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) SUBSET c) |- ((((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> (((IMAGE k) t) SUBSET c)) ==> ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> (((IMAGE k) t) SUBSET c))) = ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> (((IMAGE k) t) SUBSET c)))
T c==> cSUBSET * * part cIMAGE f0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY f2 c= c==> c==> cSUBSET f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY cSUBSET * * part cIMAGE f0 f3 f2 c==> cSUBSET f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY cSUBSET * * part cIMAGE f0 f3 f2 c==> cSUBSET f3 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f1 part cEMPTY cSUBSET * * part cIMAGE f0 f3 f2
- |- ((((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F) ==> ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F)) = ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F))
T c= c==> c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF
- ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F), (((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F) ==> ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F)) |- ((((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F) ==> ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F)) /\ ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F))
T c==> c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c==> c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c/\ c==> c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF
- (!f. (!g. (!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))))) |- (((!s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) ==> ((\s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) s)) = ((\s. ((((continuous_on f) s) /\ ((continuous_on g) ((IMAGE f) s))) ==> ((continuous_on (g o f)) s))) s))
T c==> ! ! ! c==> c/\ ccontinuous_on b0 b2 ccontinuous_on b1 * * part cIMAGE b0 b2 ccontinuous_on * * part co b1 b0 b2 c= c==> ! c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 f2 * / c==> c/\ ccontinuous_on f0 b0 ccontinuous_on f1 * * part cIMAGE f0 b0 ccontinuous_on * * part co f1 f0 b0 f2
- (_783273 = _783275) |- ((_783274 = _783276) ==> ((_783273 , _783274) = (_783275 , _783276)))
T c==> c= f0 f1 c==> c= f2 f3 c= c, f0 f2 c, f1 f3
- |- ((\g. (!s. (!arb. (!p. (!c. (!a. ((~ (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))) ==> F))))))) g)
T * / ! ! ! ! ! c==> c~ c==> c/\ * b4 b5 c/\ c= * b0 cvec cNUMERAL c_0 * b3 b5 c/\ ! c==> c? / c/\ c= b6 * b0 b7 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b7 * b1 b6 c/\ ccontinuous_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b4 b3 b1 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b6 c= b7 b2 * b1 * b0 b6 cF f0
- ((((x = a) /\ (x' = b)) /\ (~ (s x))) /\ (s a)) |- ((~ (s a)) ==> (s a))
T c==> c/\ c/\ c/\ c= f0 f1 c= f2 f3 c~ * f4 f0 * f4 f1 c==> c~ * f4 f1 * f4 f1
- (~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) |- ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) /\ F)
T c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 c/\ c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF
- |- ((~ (_783244 = _783246)) \/ ((~ (_783243 = _783245)) \/ (((continuous_on _783245) _783246) \/ (~ ((continuous_on _783243) _783244)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ ccontinuous_on f3 f1 c~ ccontinuous_on f2 f0
- (!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((continuous_on k) t))), (t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) |- ((!t. ((t SUBSET ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) PCROSS (arb INSERT EMPTY))) ==> ((continuous_on k) t))) /\ ((continuous_on k) t))
T c==> ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY ccontinuous_on f1 b0 c==> cSUBSET f2 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY c/\ ! c==> cSUBSET b0 * * part cPCROSS * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cINSERT f0 part cEMPTY ccontinuous_on f1 b0 ccontinuous_on f1 f2
- |- ((((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F) ==> ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F)) ==> (((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F) ==> ((~ ((!x. ((?x. ((x = a) /\ (x = b))) ==> (s x))) = (s a))) ==> F)))
T c==> c==> c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF c==> c~ c= ! c==> c? / c/\ c= b0 f0 c= b1 f1 * f2 b0 * f2 f0 cF
- |- ((!p. (!c. (!a. (((c a) /\ (((g (vec (NUMERAL _0))) = (p a)) /\ ((!x. ((?x. ((x = (g x)) /\ ((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x))) ==> (s x))) /\ (((continuous_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((covering_space (c , p)) s))))) ==> (!x. (!y. ((((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) ==> (s (g x))))))))) = T)
T c= ! ! ! c==> c/\ * b1 b2 c/\ c= * f0 cvec cNUMERAL c_0 * b0 b2 c/\ ! c==> c? / c/\ c= b3 * f0 b4 cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b4 * f1 b3 c/\ ccontinuous_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccovering_space c, b1 b0 f1 ! ! c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b3 c= b4 f2 * f1 * f0 b3 cT
- |- ((!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) t))) ==> (!t. ((t SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((continuous_on g) t))))
T c==> ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0 ! c==> cSUBSET b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ccontinuous_on f0 b0
- |- ((?x. ((P x) /\ Q)) = ((?x. (P x)) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
- (((closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)) x) /\ (y = arb)) |- ((((I g) (vec (NUMERAL _0))) = ((I p) a)) = (((I g) (vec (NUMERAL _0))) = ((I p) a)))
T c==> c/\ cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 c= f1 f2 c= c= cI f3 cvec cNUMERAL c_0 cI f4 f5 c= cI f3 cvec cNUMERAL c_0 cI f4 f5
- |- ((\t. (!k. (!s. ((~ ((!x. ((?x. ((x = (k x)) /\ (s x))) ==> (c x))) ==> ((!x. ((t x) ==> (s x))) ==> (!x. ((?x. ((x = (k x)) /\ (t x))) ==> (c x)))))) ==> F)))) t)
T * / ! ! c==> c~ c==> ! c==> c? / c/\ c= b3 * b1 b4 * b2 b4 * f0 b3 c==> ! c==> * b0 b3 * b2 b3 ! c==> c? / c/\ c= b3 * b1 b4 * b0 b4 * f0 b3 cF f1
- (_783284 = _783286) |- ((_783284 = _783286) /\ ((~ (_783283 = _783285)) \/ (((I _783283) _783284) = ((I _783285) _783286))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cI f2 f0 cI f3 f1
