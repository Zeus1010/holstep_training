N CONGRUENT_TRIANGLES_ASA
C |- (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (((angle (B , (A , C))) = (angle (B' , (A' , C')))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> ((distance (A , C)) = (distance (A' , C'))))))))))
T c==> c/\ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c/\ c= cdistance c, f0 f1 cdistance c, f3 f4 c/\ c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cdistance c, f0 f2 cdistance c, f3 f5
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_NEG_MINUS1
A |- (!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)))
T c= creal_neg f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D INSERT_AC
A |- (((x INSERT (y INSERT s)) = (y INSERT (x INSERT s))) /\ ((x INSERT (x INSERT s)) = (x INSERT s)))
T c/\ c= * * part cINSERT f0 * * part cINSERT f1 f2 * * part cINSERT f1 * * part cINSERT f0 f2 c= * * part cINSERT f0 * * part cINSERT f0 f2 * * part cINSERT f0 f2
D DIST_SYM
A |- (!x. (!y. ((distance (x , y)) = (distance (y , x)))))
T c= cdistance c, f0 f1 cdistance c, f1 f0
D DIST_EQ_0
A |- (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= cdistance c, f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D COLLINEAR_2
A |- (!x. (!y. (collinear (x INSERT (y INSERT EMPTY)))))
T ccollinear * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
D ANGLE_SYM
A |- (!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A)))))))
T c= cangle c, f0 c, f1 f2 cangle c, f2 c, f1 f0
D TRIANGLE_ANGLE_SUM
A |- (!A. (!B. (!C. ((~ ((A = B) /\ ((B = C) /\ (A = C)))) ==> (((real_add (angle (B , (A , C)))) ((real_add (angle (A , (B , C)))) (angle (B , (C , A))))) = pi)))))
T c==> c~ c/\ c= f0 f1 c/\ c= f1 f2 c= f0 f2 c= creal_add cangle c, f1 c, f0 f2 creal_add cangle c, f0 c, f1 f2 cangle c, f1 c, f2 f0 cpi
D CONGRUENT_TRIANGLES_AAS
A |- (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C')))))))))))
T c==> c/\ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c/\ c= cangle c, f1 c, f2 f0 cangle c, f4 c, f5 f3 c/\ c= cdistance c, f0 f1 cdistance c, f3 f4 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= cdistance c, f0 f2 cdistance c, f3 f5 c= cdistance c, f1 f2 cdistance c, f4 f5
+ (~ (((((real_add a) ((real_add b) x)) = pi) /\ (((real_add a) ((real_add b) y)) = pi)) ==> (x = y))) |- ((((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) \/ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))))
T c==> c~ c==> c/\ c= creal_add f0 creal_add f1 f2 cpi c= creal_add f0 creal_add f1 f3 cpi c= f2 f3 c\/ c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) = ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) pi))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 c= c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0
+ |- ((!C'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> (~ (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))))))))))))) = T)
T c= ! c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 b0 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 b0 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 f4 c==> ! ! c= c= cdistance c, b1 b2 creal_of_num cNUMERAL c_0 c= b1 b2 c==> ! ! c= c= cdistance c, b1 b2 creal_of_num cNUMERAL c_0 c= b1 b2 c~ ! ! c= c= cdistance c, b1 b2 creal_of_num cNUMERAL c_0 c= b1 b2 cT
+ |- ((real_neg ((real_sub x) y)) = ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y))
T c= creal_neg creal_sub f0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1
+ (~ (A = B)) |- (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> (~ (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))))))))))
T c==> c~ c= f0 f1 c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= cangle c, f1 c, f0 f4 cangle c, f3 c, f2 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c==> c= f2 f3 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c~ ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1
+ |- ((\A. (!B. (!C. ((~ ((A = B) /\ ((B = C) /\ (A = C)))) ==> (((real_add (angle (B , (A , C)))) ((real_add (angle (A , (B , C)))) (angle (B , (C , A))))) = pi))))) A)
T * / ! ! c==> c~ c/\ c= b0 b1 c/\ c= b1 b2 c= b0 b2 c= creal_add cangle c, b1 c, b0 b2 creal_add cangle c, b0 c, b1 b2 cangle c, b1 c, b2 b0 cpi f0
- (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0
+ ((distance (A , B)) = (distance (A' , B'))), (A' = B') |- (((distance (A , B)) = (distance (B' , B'))) /\ ((distance (A , B)) = (distance (A , B))))
T c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= f2 f3 c/\ c= cdistance c, f0 f1 cdistance c, f3 f3 c= cdistance c, f0 f1 cdistance c, f0 f1
+ (~ (A = B)), ((distance (A , B)) = (distance (A' , B'))) |- (((distance (A , B)) = (distance (A' , B'))) /\ (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> (~ (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))))))))))
T c==> c~ c= f0 f1 c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c/\ c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= cangle c, f1 c, f0 f4 cangle c, f3 c, f2 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c==> c= f2 f3 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c~ ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (A = B)), (~ (A' = B')), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))), ((angle (B , (A , C))) = (angle (B' , (A' , C')))), ((((real_add (angle (B' , (A' , C')))) ((real_add (angle (A' , (B' , C')))) (angle (B' , (C' , A'))))) = pi) /\ (((real_add (angle (B' , (A' , C')))) ((real_add (angle (A' , (B' , C')))) (angle (B , (C , A))))) = pi)) |- (((((real_add (angle (B' , (A' , C')))) ((real_add (angle (A' , (B' , C')))) (angle (B' , (C' , A'))))) = pi) /\ (((real_add (angle (B' , (A' , C')))) ((real_add (angle (A' , (B' , C')))) (angle (B , (C , A))))) = pi)) /\ ((distance (A , C)) = (distance (A' , C'))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f3 f4 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c/\ c= creal_add cangle c, f4 c, f3 f5 creal_add cangle c, f3 c, f4 f5 cangle c, f4 c, f5 f3 cpi c= creal_add cangle c, f4 c, f3 f5 creal_add cangle c, f3 c, f4 f5 cangle c, f1 c, f2 f0 cpi c/\ c/\ c= creal_add cangle c, f4 c, f3 f5 creal_add cangle c, f3 c, f4 f5 cangle c, f4 c, f5 f3 cpi c= creal_add cangle c, f4 c, f3 f5 creal_add cangle c, f3 c, f4 f5 cangle c, f1 c, f2 f0 cpi c= cdistance c, f0 f2 cdistance c, f3 f5
+ |- ((((~ ((A = B) /\ ((B = C) /\ (A = C)))) ==> (((real_add (angle (B , (A , C)))) ((real_add (angle (A , (B , C)))) (angle (B , (C , A))))) = pi)) ==> ((distance (A , C)) = (distance (A' , C')))) = ((distance (A , C)) = (distance (A' , C'))))
T c= c==> c==> c~ c/\ c= f0 f1 c/\ c= f1 f2 c= f0 f2 c= creal_add cangle c, f1 c, f0 f2 creal_add cangle c, f0 c, f1 f2 cangle c, f1 c, f2 f0 cpi c= cdistance c, f0 f2 cdistance c, f3 f4 c= cdistance c, f0 f2 cdistance c, f3 f4
+ |- ((!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (((angle (B , (A , C))) = (angle (B' , (A' , C')))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> ((distance (A , C)) = (distance (A' , C'))))) = T)
T c= ! c==> c/\ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 b0 c/\ c= cdistance c, f0 f1 cdistance c, f3 f4 c/\ c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 b0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cdistance c, f0 f2 cdistance c, f3 b0 cT
- (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))), (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))), ((distance (A , B)) = (distance (A' , B'))), (A' = B') |- ((~ (A = B)) ==> (A = B))
T c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= f2 f3 c==> c~ c= f0 f1 c= f0 f1
+ |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (B' = B')) ==> (B' = B'))
T c==> c~ c= f0 f0 c= f0 f0
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (A = B)), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))), ((angle (B , (A , C))) = (angle (B' , (A' , C')))) |- (~ (A' = B'))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c~ c= f3 f4
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- (((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c==> c= cangle c, f3 c, f4 f5 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f5 f4 c==> c= cdistance c, f0 f1 cdistance c, f5 f3 c==> c= cangle c, f0 c, f1 f2 cangle c, f5 c, f3 f4 c/\ c= cangle c, f0 c, f1 f2 cangle c, f5 c, f3 f4 c/\ c= cangle c, f1 c, f2 f0 cangle c, f3 c, f4 f5 c/\ c= cdistance c, f0 f1 cdistance c, f5 f3 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0
+ (~ (A = B)) |- ((~ (A = B)) /\ ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (((angle (B , (A , C))) = (angle (B' , (A' , C')))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> ((distance (A , C)) = (distance (A' , C')))))
T c==> c~ c= f0 f1 c/\ c~ c= f0 f1 c==> c/\ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c/\ c= cdistance c, f0 f1 cdistance c, f3 f4 c/\ c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cdistance c, f0 f2 cdistance c, f3 f5
- |- ((_2080942 = _2080944) ==> ((~ (_2080943 = _2080945)) \/ ((_2080942 , _2080943) = (_2080944 , _2080945))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (A = B)), (~ (A' = B')), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))), ((angle (B , (A , C))) = (angle (B' , (A' , C')))) |- ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> F))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f3 f4 c==> c~ c==> c= cangle c, f4 c, f5 f3 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f3 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 cF
+ |- (((!B. (!A. (!C'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F)))))))))))) ==> ((\B. (!A. (!C'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F)))))))))))) B)) = ((\B. (!A. (!C'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F)))))))))))) B))
T c= c==> ! ! ! c==> c~ c= b1 b0 c==> c= cangle c, b1 c, b0 f0 cangle c, f1 c, f2 b2 c==> c= cdistance c, b1 b0 cdistance c, f1 f2 c==> c= cangle c, b0 c, b1 f0 cangle c, f2 c, f1 b2 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c= f1 f2 c==> ! ! c= c= cdistance c, b3 b4 creal_of_num cNUMERAL c_0 c= b3 b4 c==> ! ! c= c= cdistance c, b3 b4 creal_of_num cNUMERAL c_0 c= b3 b4 c==> ! ! c= c= cdistance c, b3 b4 creal_of_num cNUMERAL c_0 c= b3 b4 cF * / ! ! c==> c~ c= b1 b0 c==> c= cangle c, b1 c, b0 f0 cangle c, f1 c, f2 b2 c==> c= cdistance c, b1 b0 cdistance c, f1 f2 c==> c= cangle c, b0 c, b1 f0 cangle c, f2 c, f1 b2 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c= f1 f2 c==> ! ! c= c= cdistance c, b3 b4 creal_of_num cNUMERAL c_0 c= b3 b4 c==> ! ! c= c= cdistance c, b3 b4 creal_of_num cNUMERAL c_0 c= b3 b4 c==> ! ! c= c= cdistance c, b3 b4 creal_of_num cNUMERAL c_0 c= b3 b4 cF f3 * / ! ! c==> c~ c= b1 b0 c==> c= cangle c, b1 c, b0 f0 cangle c, f1 c, f2 b2 c==> c= cdistance c, b1 b0 cdistance c, f1 f2 c==> c= cangle c, b0 c, b1 f0 cangle c, f2 c, f1 b2 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c= f1 f2 c==> ! ! c= c= cdistance c, b3 b4 creal_of_num cNUMERAL c_0 c= b3 b4 c==> ! ! c= c= cdistance c, b3 b4 creal_of_num cNUMERAL c_0 c= b3 b4 c==> ! ! c= c= cdistance c, b3 b4 creal_of_num cNUMERAL c_0 c= b3 b4 cF f3
+ |- ((((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 cF
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ (~ (A = B)), (~ (A' = B')), ((angle (A , (B , C))) = (angle (A' , (B' , C')))), ((angle (B , (A , C))) = (angle (B' , (A' , C')))) |- ((((((real_add (angle (B' , (A' , C')))) ((real_add (angle (A' , (B' , C')))) (angle (B' , (C' , A'))))) = pi) /\ (((real_add (angle (B' , (A' , C')))) ((real_add (angle (A' , (B' , C')))) (angle (B , (C , A))))) = pi)) ==> ((distance (A , C)) = (distance (A' , C')))) = (((~ ((A' = B') /\ ((B' = C') /\ (A' = C')))) ==> (((real_add (angle (B' , (A' , C')))) ((real_add (angle (A' , (B' , C')))) (angle (B' , (C' , A'))))) = pi)) ==> (((~ ((A = B) /\ ((B = C) /\ (A = C)))) ==> (((real_add (angle (B , (A , C)))) ((real_add (angle (A , (B , C)))) (angle (B , (C , A))))) = pi)) ==> ((distance (A , C)) = (distance (A' , C'))))))
T c==> c~ c= f0 f1 c==> c~ c= f2 f3 c==> c= cangle c, f0 c, f1 f4 cangle c, f2 c, f3 f5 c==> c= cangle c, f1 c, f0 f4 cangle c, f3 c, f2 f5 c= c==> c/\ c= creal_add cangle c, f3 c, f2 f5 creal_add cangle c, f2 c, f3 f5 cangle c, f3 c, f5 f2 cpi c= creal_add cangle c, f3 c, f2 f5 creal_add cangle c, f2 c, f3 f5 cangle c, f1 c, f4 f0 cpi c= cdistance c, f0 f4 cdistance c, f2 f5 c==> c==> c~ c/\ c= f2 f3 c/\ c= f3 f5 c= f2 f5 c= creal_add cangle c, f3 c, f2 f5 creal_add cangle c, f2 c, f3 f5 cangle c, f3 c, f5 f2 cpi c==> c==> c~ c/\ c= f0 f1 c/\ c= f1 f4 c= f0 f4 c= creal_add cangle c, f1 c, f0 f4 creal_add cangle c, f0 c, f1 f4 cangle c, f1 c, f4 f0 cpi c= cdistance c, f0 f4 cdistance c, f2 f5
+ ((distance (A , B)) = (distance (A' , B'))), (A' = B') |- (((distance (A , B)) = (distance (A , B))) = (((distance (A , B)) = (distance (B' , B'))) /\ ((distance (A , B)) = (distance (A , B)))))
T c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= f2 f3 c= c= cdistance c, f0 f1 cdistance c, f0 f1 c/\ c= cdistance c, f0 f1 cdistance c, f3 f3 c= cdistance c, f0 f1 cdistance c, f0 f1
+ |- (!C'. (!A'. (!C. (!A. (!B. (!B'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((~ (A' = B')) ==> ((~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> (~ (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))))))))))))))))))))))))))
T c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f3 f4 c==> c~ c==> c= cangle c, f4 c, f5 f3 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f3 f5 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5
+ ((((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) \/ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0))))) |- F
T c==> c\/ c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 cF
+ |- (((~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) ==> F) = (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C')))))
T c= c==> c~ c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c= cdistance c, f5 f4 cdistance c, f2 f1 cF c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c= cdistance c, f5 f4 cdistance c, f2 f1
+ ((distance (A , B)) = (distance (A' , B'))), (A' = B') |- (((distance (B' , B')) = (real_of_num (NUMERAL _0))) = (((distance (B' , B')) = (distance (A , B))) /\ ((distance (B' , B')) = (real_of_num (NUMERAL _0)))))
T c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= f2 f3 c= c= cdistance c, f3 f3 creal_of_num cNUMERAL c_0 c/\ c= cdistance c, f3 f3 cdistance c, f0 f1 c= cdistance c, f3 f3 creal_of_num cNUMERAL c_0
- (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))), (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- ((~ ((distance (A , C)) = (distance (A' , C')))) ==> ((distance (A , C)) = (distance (A' , C'))))
T c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c==> c= cangle c, f3 c, f4 f5 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f5 f4 c==> c= cdistance c, f0 f1 cdistance c, f5 f3 c==> c= cangle c, f0 c, f1 f2 cangle c, f5 c, f3 f4 c==> c~ c= cdistance c, f0 f2 cdistance c, f5 f4 c= cdistance c, f0 f2 cdistance c, f5 f4
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (A = B)), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))), ((angle (B , (A , C))) = (angle (B' , (A' , C')))) |- ((distance (A , C)) = (distance (A' , C')))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c= cdistance c, f0 f2 cdistance c, f3 f5
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0
+ (~ (A = B)), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((~ (A' = B')) ==> ((~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> F)))))))))))))))
T c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f3 f4 c==> c~ c==> c= cangle c, f4 c, f5 f3 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f3 f5 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 cF
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (A = B)), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))), ((angle (B , (A , C))) = (angle (B' , (A' , C')))), (A' = B') |- ((A' = B') /\ F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c= f3 f4 c/\ c= f3 f4 cF
+ (~ (A = B)), ((distance (A , B)) = (distance (A' , B'))), (A' = B') |- ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> (~ (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y))))))
T c==> c~ c= f0 f1 c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= f2 f3 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c~ ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1
- (!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) |- (((!B. (!C. ((angle (_2080863 , (B , C))) = (angle (C , (B , _2080863)))))) ==> ((\B. (!C. ((angle (_2080863 , (B , C))) = (angle (C , (B , _2080863)))))) _2080864)) = ((\B. (!C. ((angle (_2080863 , (B , C))) = (angle (C , (B , _2080863)))))) _2080864))
T c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c= c==> ! ! c= cangle c, f0 c, b0 b1 cangle c, b1 c, b0 f0 * / ! c= cangle c, f0 c, b0 b1 cangle c, b1 c, b0 f0 f1 * / ! c= cangle c, f0 c, b0 b1 cangle c, b1 c, b0 f0 f1
+ |- (((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F) = F)
T c= c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 cF cF
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (A = B)), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))), ((angle (B , (A , C))) = (angle (B' , (A' , C')))), (A' = B') |- ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c= f3 f4 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 cF
- (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (collinear (A INSERT (B INSERT (C INSERT EMPTY)))) |- ((collinear (A INSERT (B INSERT (C INSERT EMPTY)))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> F)))) = ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> F))))
T c= c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 cF c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) pi))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 cpi creal_of_num cNUMERAL c_0
+ (~ (A = B)), ((distance (A , B)) = (distance (A' , B'))) |- ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> (~ (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y))))))))
T c==> c~ c= f0 f1 c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= f2 f3 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c~ ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1
+ |- ((!B'. (!A'. (!C. (!B. (!A. (!C'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> (~ (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y))))))))))))))))))) = (!B'. (!A'. (!C. (!B. (!A. (!C'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F))))))))))))))))
T c= ! ! ! ! ! ! c==> c~ c= b4 b3 c==> c= cangle c, b4 c, b3 b2 cangle c, b1 c, b0 b5 c==> c= cdistance c, b4 b3 cdistance c, b1 b0 c==> c= cangle c, b3 c, b4 b2 cangle c, b0 c, b1 b5 c==> c~ ccollinear * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c==> c= b1 b0 c==> ! ! c= c= cdistance c, b6 b7 creal_of_num cNUMERAL c_0 c= b6 b7 c==> ! ! c= c= cdistance c, b6 b7 creal_of_num cNUMERAL c_0 c= b6 b7 c~ ! ! c= c= cdistance c, b6 b7 creal_of_num cNUMERAL c_0 c= b6 b7 ! ! ! ! ! ! c==> c~ c= b4 b3 c==> c= cangle c, b4 c, b3 b2 cangle c, b1 c, b0 b5 c==> c= cdistance c, b4 b3 cdistance c, b1 b0 c==> c= cangle c, b3 c, b4 b2 cangle c, b0 c, b1 b5 c==> c~ ccollinear * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c==> c= b1 b0 c==> ! ! c= c= cdistance c, b6 b7 creal_of_num cNUMERAL c_0 c= b6 b7 c==> ! ! c= c= cdistance c, b6 b7 creal_of_num cNUMERAL c_0 c= b6 b7 c==> ! ! c= c= cdistance c, b6 b7 creal_of_num cNUMERAL c_0 c= b6 b7 cF
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
+ |- ((\C'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F)))))))))) C')
T * / c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 b0 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 b0 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 f4 c==> ! ! c= c= cdistance c, b1 b2 creal_of_num cNUMERAL c_0 c= b1 b2 c==> ! ! c= c= cdistance c, b1 b2 creal_of_num cNUMERAL c_0 c= b1 b2 c==> ! ! c= c= cdistance c, b1 b2 creal_of_num cNUMERAL c_0 c= b1 b2 cF f5
- (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) |- ((~ ((angle (B , (C , A))) = (angle (B' , (C' , A'))))) ==> ((angle (B , (C , A))) = (angle (B' , (C' , A')))))
T c==> c~ c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c= cdistance c, f5 f4 cdistance c, f2 f1 c==> c~ c= cangle c, f3 c, f4 f5 cangle c, f0 c, f1 f2 c= cangle c, f3 c, f4 f5 cangle c, f0 c, f1 f2
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\A. (!B. (!B'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((~ (A' = B')) ==> ((~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> F)))))))))))))))))))) A)
T * / ! ! c==> c~ c= b0 b1 c==> c= cangle c, b0 c, b1 f0 cangle c, f1 c, b2 f2 c==> c= cdistance c, b0 b1 cdistance c, f1 b2 c==> c= cangle c, b1 c, b0 f0 cangle c, b2 c, f1 f2 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT f0 part cEMPTY c==> c~ c= f1 b2 c==> c~ c==> c= cangle c, b2 c, f2 f1 cangle c, b1 c, f0 b0 c= cdistance c, b0 f0 cdistance c, f1 f2 c==> ! ! ! c= cangle c, b3 c, b4 b5 cangle c, b5 c, b4 b3 c==> ! ! ! c= cangle c, b3 c, b4 b5 cangle c, b5 c, b4 b3 c==> ! ! ! c= cangle c, b3 c, b3 b3 cangle c, b3 c, b3 b3 c==> ! ! ! c= cangle c, b3 c, b4 b5 cangle c, b5 c, b4 b3 c==> ! ! c= cdistance c, b3 b4 cdistance c, b4 b3 c==> ! ! c= cdistance c, b3 b4 cdistance c, b4 b3 c==> ! ! c= cdistance c, b3 b4 cdistance c, b4 b3 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b3 c, b3 b3 cangle c, b4 c, b5 b6 c/\ c= cangle c, b3 c, b3 b3 cangle c, b5 c, b6 b4 c/\ c= cdistance c, b3 b3 cdistance c, b4 b5 c~ ccollinear * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c/\ c= cdistance c, b3 b3 cdistance c, b4 b6 c= cdistance c, b3 b3 cdistance c, b5 b6 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b3 c, b3 b3 cangle c, b4 c, b5 b5 c/\ c= cangle c, b3 c, b3 b3 cangle c, b5 c, b5 b4 c/\ c= cdistance c, b3 b3 cdistance c, b4 b5 c~ ccollinear * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c/\ c= cdistance c, b3 b3 cdistance c, b4 b5 c= cdistance c, b3 b3 cdistance c, b5 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b3 c, b4 b5 cangle c, b6 c, b7 b7 c/\ c= cangle c, b4 c, b5 b3 cangle c, b7 c, b7 b6 c/\ c= cdistance c, b3 b4 cdistance c, b6 b7 c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c= cdistance c, b3 b5 cdistance c, b6 b7 c= cdistance c, b4 b5 cdistance c, b7 b7 cF f3
- (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) |- ((~ ((angle (B' , (C' , A'))) = (angle (B , (C , A))))) ==> ((angle (B' , (C' , A'))) = (angle (B , (C , A)))))
T c==> c~ c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c= cdistance c, f5 f4 cdistance c, f2 f1 c==> c~ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5
+ (A = B) |- ((A = B) /\ ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (((angle (B , (A , C))) = (angle (B' , (A' , C')))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> ((distance (A , C)) = (distance (A' , C')))))
T c==> c= f0 f1 c/\ c= f0 f1 c==> c/\ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c/\ c= cdistance c, f0 f1 cdistance c, f3 f4 c/\ c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cdistance c, f0 f2 cdistance c, f3 f5
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ |- (((!B'. (!A'. (!C. (!B. (!A. (!C'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F))))))))))))))) ==> ((\B'. (!A'. (!C. (!B. (!A. (!C'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F))))))))))))))) B')) = ((\B'. (!A'. (!C. (!B. (!A. (!C'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F))))))))))))))) B'))
T c= c==> ! ! ! ! ! ! c==> c~ c= b4 b3 c==> c= cangle c, b4 c, b3 b2 cangle c, b1 c, b0 b5 c==> c= cdistance c, b4 b3 cdistance c, b1 b0 c==> c= cangle c, b3 c, b4 b2 cangle c, b0 c, b1 b5 c==> c~ ccollinear * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c==> c= b1 b0 c==> ! ! c= c= cdistance c, b6 b7 creal_of_num cNUMERAL c_0 c= b6 b7 c==> ! ! c= c= cdistance c, b6 b7 creal_of_num cNUMERAL c_0 c= b6 b7 c==> ! ! c= c= cdistance c, b6 b7 creal_of_num cNUMERAL c_0 c= b6 b7 cF * / ! ! ! ! ! c==> c~ c= b4 b3 c==> c= cangle c, b4 c, b3 b2 cangle c, b1 c, b0 b5 c==> c= cdistance c, b4 b3 cdistance c, b1 b0 c==> c= cangle c, b3 c, b4 b2 cangle c, b0 c, b1 b5 c==> c~ ccollinear * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c==> c= b1 b0 c==> ! ! c= c= cdistance c, b6 b7 creal_of_num cNUMERAL c_0 c= b6 b7 c==> ! ! c= c= cdistance c, b6 b7 creal_of_num cNUMERAL c_0 c= b6 b7 c==> ! ! c= c= cdistance c, b6 b7 creal_of_num cNUMERAL c_0 c= b6 b7 cF f0 * / ! ! ! ! ! c==> c~ c= b4 b3 c==> c= cangle c, b4 c, b3 b2 cangle c, b1 c, b0 b5 c==> c= cdistance c, b4 b3 cdistance c, b1 b0 c==> c= cangle c, b3 c, b4 b2 cangle c, b0 c, b1 b5 c==> c~ ccollinear * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c==> c= b1 b0 c==> ! ! c= c= cdistance c, b6 b7 creal_of_num cNUMERAL c_0 c= b6 b7 c==> ! ! c= c= cdistance c, b6 b7 creal_of_num cNUMERAL c_0 c= b6 b7 c==> ! ! c= c= cdistance c, b6 b7 creal_of_num cNUMERAL c_0 c= b6 b7 cF f0
- (_2080938 = _2080940), (_2080939 = _2080941) |- ((_2080939 = _2080941) /\ ((_2080938 , _2080939) = (_2080940 , _2080941)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= c, f0 f2 c, f1 f3
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ ((distance (A , B)) = (distance (A' , B'))), (A' = B') |- (((((distance (A , B)) = (distance (B' , B'))) /\ ((distance (A , B)) = (distance (A , B)))) ==> ((distance (B' , B')) = (distance (A , B)))) = ((distance (B' , B')) = (distance (A , B))))
T c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= f2 f3 c= c==> c/\ c= cdistance c, f0 f1 cdistance c, f3 f3 c= cdistance c, f0 f1 cdistance c, f0 f1 c= cdistance c, f3 f3 cdistance c, f0 f1 c= cdistance c, f3 f3 cdistance c, f0 f1
+ (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))), (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))), (~ (A = B)), ((distance (A , B)) = (distance (A' , B'))), (A' = B') |- ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) /\ F)
T c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> c~ c= f0 f1 c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= f2 f3 c/\ ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 cF
+ (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))), (~ (A = B)), ((distance (A , B)) = (distance (A' , B'))), (A' = B') |- ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) /\ ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> (~ (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))))))
T c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> c~ c= f0 f1 c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= f2 f3 c/\ ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c~ ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (A = B)), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))), ((angle (B , (A , C))) = (angle (B' , (A' , C')))) |- ((A' = B') ==> F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c= f3 f4 cF
- |- ((x INSERT (y INSERT s)) = (y INSERT (x INSERT s)))
T c= * * part cINSERT f0 * * part cINSERT f1 f2 * * part cINSERT f1 * * part cINSERT f0 f2
+ |- ((\C. (!B. (!A. (!C'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F))))))))))))) C)
T * / ! ! ! c==> c~ c= b2 b1 c==> c= cangle c, b2 c, b1 b0 cangle c, f0 c, f1 b3 c==> c= cdistance c, b2 b1 cdistance c, f0 f1 c==> c= cangle c, b1 c, b2 b0 cangle c, f1 c, f0 b3 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c= f0 f1 c==> ! ! c= c= cdistance c, b4 b5 creal_of_num cNUMERAL c_0 c= b4 b5 c==> ! ! c= c= cdistance c, b4 b5 creal_of_num cNUMERAL c_0 c= b4 b5 c==> ! ! c= c= cdistance c, b4 b5 creal_of_num cNUMERAL c_0 c= b4 b5 cF f2
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> (~ (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C')))))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c==> c= cangle c, f3 c, f4 f5 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f5 f4 c==> c= cdistance c, f0 f1 cdistance c, f5 f3 c==> c= cangle c, f0 c, f1 f2 cangle c, f5 c, f3 f4 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
+ (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) |- ((angle (B , (C , A))) = (angle (B' , (C' , A'))))
T c==> c~ c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c= cdistance c, f5 f4 cdistance c, f2 f1 c= cangle c, f3 c, f4 f5 cangle c, f0 c, f1 f2
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (A' = B')), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- ((~ (A' = B')) /\ ((~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> (~ (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C')))))))))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f3 f4 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c/\ c~ c= f3 f4 c==> c~ c==> c= cangle c, f4 c, f5 f3 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f3 f5 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5
- |- ((!y. t) = t)
T c= ! f0 f0
- |- ((~ (_2080824 = _2080825)) \/ ((real_of_num _2080824) = (real_of_num _2080825)))
T c\/ c~ c= f0 f1 c= creal_of_num f0 creal_of_num f1
+ ((distance (A , B)) = (distance (A' , B'))), (A' = B') |- ((distance (B' , B')) = (distance (A , B)))
T c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= f2 f3 c= cdistance c, f3 f3 cdistance c, f0 f1
+ |- ((A = B) ==> ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (((angle (B , (A , C))) = (angle (B' , (A' , C')))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> ((distance (A , C)) = (distance (A' , C')))))
T c==> c= f0 f1 c==> c/\ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c/\ c= cdistance c, f0 f1 cdistance c, f3 f4 c/\ c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cdistance c, f0 f2 cdistance c, f3 f5
- (~ ((distance (A , B)) = (distance (A' , B')))), ((distance (A , B)) = (distance (A' , B'))) |- ((~ ((distance (A , B)) = (distance (A' , B')))) /\ ((distance (A , B)) = (distance (A' , B'))))
T c==> c~ c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c/\ c~ c= cdistance c, f0 f1 cdistance c, f2 f3 c= cdistance c, f0 f1 cdistance c, f2 f3
+ (!x. (!y. ((distance (x , y)) = (distance (y , x))))), (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) /\ ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> (~ (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C')))))))))))))))))
T c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c==> c= cangle c, f3 c, f4 f5 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f5 f4 c==> c= cdistance c, f0 f1 cdistance c, f5 f3 c==> c= cangle c, f0 c, f1 f2 cangle c, f5 c, f3 f4 c/\ ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5
+ |- ((((~ ((A' = B') /\ ((B' = C') /\ (A' = C')))) ==> (((real_add (angle (B' , (A' , C')))) ((real_add (angle (A' , (B' , C')))) (angle (B' , (C' , A'))))) = pi)) ==> (((~ ((A = B) /\ ((B = C) /\ (A = C)))) ==> (((real_add (angle (B , (A , C)))) ((real_add (angle (A , (B , C)))) (angle (B , (C , A))))) = pi)) ==> ((distance (A , C)) = (distance (A' , C'))))) = (((~ ((A = B) /\ ((B = C) /\ (A = C)))) ==> (((real_add (angle (B , (A , C)))) ((real_add (angle (A , (B , C)))) (angle (B , (C , A))))) = pi)) ==> ((distance (A , C)) = (distance (A' , C')))))
T c= c==> c==> c~ c/\ c= f0 f1 c/\ c= f1 f2 c= f0 f2 c= creal_add cangle c, f1 c, f0 f2 creal_add cangle c, f0 c, f1 f2 cangle c, f1 c, f2 f0 cpi c==> c==> c~ c/\ c= f3 f4 c/\ c= f4 f5 c= f3 f5 c= creal_add cangle c, f4 c, f3 f5 creal_add cangle c, f3 c, f4 f5 cangle c, f4 c, f5 f3 cpi c= cdistance c, f3 f5 cdistance c, f0 f2 c==> c==> c~ c/\ c= f3 f4 c/\ c= f4 f5 c= f3 f5 c= creal_add cangle c, f4 c, f3 f5 creal_add cangle c, f3 c, f4 f5 cangle c, f4 c, f5 f3 cpi c= cdistance c, f3 f5 cdistance c, f0 f2
+ (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))), (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) /\ (~ (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C')))))))))))))
T c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c==> c= cangle c, f3 c, f4 f5 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f5 f4 c==> c= cdistance c, f0 f1 cdistance c, f5 f3 c==> c= cangle c, f0 c, f1 f2 cangle c, f5 c, f3 f4 c/\ ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5
+ |- ((!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (((angle (B , (A , C))) = (angle (B' , (A' , C')))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> ((distance (A , C)) = (distance (A' , C')))))))) = T)
T c= ! ! ! ! c==> c/\ c= cangle c, f0 c, f1 b0 cangle c, b1 c, b2 b3 c/\ c= cdistance c, f0 f1 cdistance c, b1 b2 c/\ c= cangle c, f1 c, f0 b0 cangle c, b2 c, b1 b3 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= cdistance c, f0 b0 cdistance c, b1 b3 cT
+ ((((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) ==> F), ((((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) \/ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!C. (!B. (!A. (!C'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> (~ (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y))))))))))))))))) = T)
T c= ! ! ! ! c==> c~ c= b2 b1 c==> c= cangle c, b2 c, b1 b0 cangle c, f0 c, f1 b3 c==> c= cdistance c, b2 b1 cdistance c, f0 f1 c==> c= cangle c, b1 c, b2 b0 cangle c, f1 c, f0 b3 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c= f0 f1 c==> ! ! c= c= cdistance c, b4 b5 creal_of_num cNUMERAL c_0 c= b4 b5 c==> ! ! c= c= cdistance c, b4 b5 creal_of_num cNUMERAL c_0 c= b4 b5 c~ ! ! c= c= cdistance c, b4 b5 creal_of_num cNUMERAL c_0 c= b4 b5 cT
+ (~ (A = B)) |- ((~ (A = B)) /\ (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> (~ (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))))))))))))
T c==> c~ c= f0 f1 c/\ c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 f4 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c~ ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1
+ |- ((\A. (!C'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F))))))))))) A)
T * / ! c==> c~ c= b0 f0 c==> c= cangle c, b0 c, f0 f1 cangle c, f2 c, f3 b1 c==> c= cdistance c, b0 f0 cdistance c, f2 f3 c==> c= cangle c, f0 c, b0 f1 cangle c, f3 c, f2 b1 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f2 f3 c==> ! ! c= c= cdistance c, b2 b3 creal_of_num cNUMERAL c_0 c= b2 b3 c==> ! ! c= c= cdistance c, b2 b3 creal_of_num cNUMERAL c_0 c= b2 b3 c==> ! ! c= c= cdistance c, b2 b3 creal_of_num cNUMERAL c_0 c= b2 b3 cF f4
+ (!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))), (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) /\ ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> (~ (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C')))))))))))))))))))))
T c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c==> c= cangle c, f3 c, f4 f5 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f5 f4 c==> c= cdistance c, f0 f1 cdistance c, f5 f3 c==> c= cangle c, f0 c, f1 f2 cangle c, f5 c, f3 f4 c/\ ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((~ (A' = B')) ==> ((~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> (~ (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C')))))))))))))))))))))))))
T c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= cangle c, f0 c, f1 f4 cangle c, f2 c, f3 f5 c==> c= cangle c, f1 c, f0 f4 cangle c, f3 c, f2 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f3 c==> c~ c==> c= cangle c, f3 c, f5 f2 cangle c, f1 c, f4 f0 c= cdistance c, f0 f4 cdistance c, f2 f5 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (A = B)), (~ (A' = B')), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))), ((angle (B , (A , C))) = (angle (B' , (A' , C')))) |- (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f3 f4 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c= cangle c, f4 c, f5 f3 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f3 f5
+ ((((real_add (angle (B' , (A' , C')))) ((real_add (angle (A' , (B' , C')))) (angle (B' , (C' , A'))))) = pi) /\ (((real_add (angle (B' , (A' , C')))) ((real_add (angle (A' , (B' , C')))) (angle (B , (C , A))))) = pi)) |- ((((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C')))) = ((distance (A , C)) = (distance (A' , C'))))
T c==> c/\ c= creal_add cangle c, f0 c, f1 f2 creal_add cangle c, f1 c, f0 f2 cangle c, f0 c, f2 f1 cpi c= creal_add cangle c, f0 c, f1 f2 creal_add cangle c, f1 c, f0 f2 cangle c, f3 c, f4 f5 cpi c= c==> c= cangle c, f0 c, f2 f1 cangle c, f3 c, f4 f5 c= cdistance c, f5 f4 cdistance c, f1 f2 c= cdistance c, f5 f4 cdistance c, f1 f2
+ (A = B) |- (((((angle (B , (B , C))) = (angle (A' , (B' , C')))) /\ (((distance (B , B)) = (distance (A' , B'))) /\ (((angle (B , (B , C))) = (angle (B' , (A' , C')))) /\ (~ (collinear (B INSERT (B INSERT (C INSERT EMPTY)))))))) ==> ((distance (B , C)) = (distance (A' , C')))) = ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (((angle (B , (A , C))) = (angle (B' , (A' , C')))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> ((distance (A , C)) = (distance (A' , C')))))
T c==> c= f0 f1 c= c==> c/\ c= cangle c, f1 c, f1 f2 cangle c, f3 c, f4 f5 c/\ c= cdistance c, f1 f1 cdistance c, f3 f4 c/\ c= cangle c, f1 c, f1 f2 cangle c, f4 c, f3 f5 c~ ccollinear * * part cINSERT f1 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cdistance c, f1 f2 cdistance c, f3 f5 c==> c/\ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c/\ c= cdistance c, f0 f1 cdistance c, f3 f4 c/\ c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cdistance c, f0 f2 cdistance c, f3 f5
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), ((distance (A , B)) = (distance (A' , B'))) |- (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c/\ c= cdistance c, f0 f1 cdistance c, f3 f4 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) pi)))) ((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 c= creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 cpi creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0
- (A' = B') |- ((~ (A = B)) = (~ (A = B)))
T c==> c= f0 f1 c= c~ c= f2 f3 c~ c= f2 f3
- |- ((_2080926 = _2080927) ==> ((distance _2080926) = (distance _2080927)))
T c==> c= f0 f1 c= cdistance f0 cdistance f1
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (A = B)), (~ (A' = B')), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))), ((angle (B , (A , C))) = (angle (B' , (A' , C')))) |- ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> F))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f3 f4 c==> c~ c==> c= cangle c, f4 c, f5 f3 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f3 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 cF
- |- ((_2080946 = _2080947) ==> ((angle _2080946) = (angle _2080947)))
T c==> c= f0 f1 c= cangle f0 cangle f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) = (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 c= creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
- (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
- (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))), (~ F), (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- ((~ F) /\ F)
T c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> c~ cF c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c==> c= cangle c, f3 c, f4 f5 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f5 f4 c==> c= cdistance c, f0 f1 cdistance c, f5 f3 c==> c= cangle c, f0 c, f1 f2 cangle c, f5 c, f3 f4 c/\ c~ cF cF
+ |- ((\t. (t \/ (~ t))) (A = B))
T * / c\/ b0 c~ b0 c= f0 f1
- |- ((~ (_2080942 = _2080944)) \/ ((~ (_2080943 = _2080945)) \/ ((_2080942 , _2080943) = (_2080944 , _2080945))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- |- (T = (((~ (x = y)) \/ ((~ (x = z)) \/ (y = z))) = ((y = z) \/ ((~ (x = y)) \/ (~ (x = z))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f0 f2 c= f1 f2 c\/ c= f1 f2 c\/ c~ c= f0 f1 c~ c= f0 f2
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- ((~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> (~ (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c~ c==> c= cangle c, f4 c, f5 f3 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f3 f5 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5
+ (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))), (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- ((distance (A , C)) = (distance (A' , C')))
T c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c==> c= cangle c, f3 c, f4 f5 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f5 f4 c==> c= cdistance c, f0 f1 cdistance c, f5 f3 c==> c= cangle c, f0 c, f1 f2 cangle c, f5 c, f3 f4 c= cdistance c, f0 f2 cdistance c, f5 f4
+ (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) |- (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) /\ (~ ((distance (A , C)) = (distance (A' , C')))))
T c==> c~ c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c= cdistance c, f5 f4 cdistance c, f2 f1 c/\ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c~ c= cdistance c, f5 f4 cdistance c, f2 f1
+ (~ (A = B)), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))), ((angle (B , (A , C))) = (angle (B' , (A' , C')))) |- ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((~ (A' = B')) ==> ((~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> F)))))))))))))
T c==> c~ c= f0 f1 c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= cangle c, f0 c, f1 f4 cangle c, f2 c, f3 f5 c==> c= cangle c, f1 c, f0 f4 cangle c, f3 c, f2 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f3 c==> c~ c==> c= cangle c, f3 c, f5 f2 cangle c, f1 c, f4 f0 c= cdistance c, f0 f4 cdistance c, f2 f5 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 cF
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (A = B)), (~ (A' = B')), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))), ((angle (B , (A , C))) = (angle (B' , (A' , C')))) |- ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> F))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f3 f4 c==> c~ c==> c= cangle c, f4 c, f5 f3 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f3 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 cF
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> (~ (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c==> c= cangle c, f3 c, f4 f5 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f5 f4 c==> c= cdistance c, f0 f1 cdistance c, f5 f3 c==> c= cangle c, f0 c, f1 f2 cangle c, f5 c, f3 f4 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ (y = (real_of_num (NUMERAL _0)))) ==> (((real_mul x) y) = (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 c= f1 creal_of_num cNUMERAL c_0 c= creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- ((\B'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((~ (A' = B')) ==> ((~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> F)))))))))))))))))) B')
T * / c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, b0 f4 c==> c= cdistance c, f0 f1 cdistance c, f3 b0 c==> c= cangle c, f1 c, f0 f2 cangle c, b0 c, f3 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f3 b0 c==> c~ c==> c= cangle c, b0 c, f4 f3 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f3 f4 c==> ! ! ! c= cangle c, b1 c, b2 b3 cangle c, b3 c, b2 b1 c==> ! ! ! c= cangle c, b1 c, b2 b3 cangle c, b3 c, b2 b1 c==> ! ! ! c= cangle c, b1 c, b2 b3 cangle c, b3 c, b2 b1 c==> ! ! ! c= cangle c, b1 c, b2 b3 cangle c, b3 c, b2 b1 c==> ! ! c= cdistance c, b1 b2 cdistance c, b2 b1 c==> ! ! c= cdistance c, b1 b2 cdistance c, b2 b1 c==> ! ! c= cdistance c, b1 b2 cdistance c, b2 b1 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b1 c, b2 b3 cangle c, b4 c, b5 b6 c/\ c= cangle c, b2 c, b3 b1 cangle c, b5 c, b6 b4 c/\ c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c= cdistance c, b1 b3 cdistance c, b4 b6 c= cdistance c, b2 b3 cdistance c, b5 b6 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b1 c, b2 b3 cangle c, b4 c, b5 b5 c/\ c= cangle c, b2 c, b3 b1 cangle c, b5 c, b5 b4 c/\ c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c= cdistance c, b1 b3 cdistance c, b4 b5 c= cdistance c, b2 b3 cdistance c, b5 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b1 c, b2 b3 cangle c, b4 c, b5 b5 c/\ c= cangle c, b2 c, b3 b1 cangle c, b5 c, b5 b4 c/\ c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c= cdistance c, b1 b3 cdistance c, b4 b5 c= cdistance c, b2 b3 cdistance c, b5 b5 cF f5
- (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))), (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))), (~ (A = B)), ((distance (A , B)) = (distance (A' , B'))), (A' = B') |- ((~ F) ==> F)
T c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> c~ c= f0 f1 c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= f2 f3 c==> c~ cF cF
+ |- ((!B'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((~ (A' = B')) ==> ((~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> (~ (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))))))))))))))))))))) = T)
T c= ! c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, b0 f4 c==> c= cdistance c, f0 f1 cdistance c, f3 b0 c==> c= cangle c, f1 c, f0 f2 cangle c, b0 c, f3 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f3 b0 c==> c~ c==> c= cangle c, b0 c, f4 f3 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f3 f4 c==> ! ! ! c= cangle c, b1 c, b2 b3 cangle c, b3 c, b2 b1 c==> ! ! ! c= cangle c, b1 c, b2 b3 cangle c, b3 c, b2 b1 c==> ! ! ! c= cangle c, b1 c, b2 b3 cangle c, b3 c, b2 b1 c==> ! ! ! c= cangle c, b1 c, b2 b3 cangle c, b3 c, b2 b1 c==> ! ! c= cdistance c, b1 b2 cdistance c, b2 b1 c==> ! ! c= cdistance c, b1 b2 cdistance c, b2 b1 c==> ! ! c= cdistance c, b1 b2 cdistance c, b2 b1 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b1 c, b2 b3 cangle c, b4 c, b5 b6 c/\ c= cangle c, b2 c, b3 b1 cangle c, b5 c, b6 b4 c/\ c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c= cdistance c, b1 b3 cdistance c, b4 b6 c= cdistance c, b2 b3 cdistance c, b5 b6 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b1 c, b2 b3 cangle c, b4 c, b5 b5 c/\ c= cangle c, b2 c, b3 b1 cangle c, b5 c, b5 b4 c/\ c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c= cdistance c, b1 b3 cdistance c, b4 b5 c= cdistance c, b2 b3 cdistance c, b5 b5 c~ ! ! ! ! ! ! c==> c/\ c= cangle c, b1 c, b2 b3 cangle c, b4 c, b5 b5 c/\ c= cangle c, b2 c, b3 b1 cangle c, b5 c, b5 b4 c/\ c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c= cdistance c, b1 b3 cdistance c, b4 b5 c= cdistance c, b2 b3 cdistance c, b5 b5 cT
+ (A' = B') |- (((distance (A , B)) = (distance (A' , B'))) = ((distance (A , B)) = (distance (B' , B'))))
T c==> c= f0 f1 c= c= cdistance c, f2 f3 cdistance c, f0 f1 c= cdistance c, f2 f3 cdistance c, f1 f1
+ |- (((!y. (collinear (x INSERT (y INSERT EMPTY)))) ==> ((\y. (collinear (x INSERT (y INSERT EMPTY)))) y)) = ((\y. (collinear (x INSERT (y INSERT EMPTY)))) y))
T c= c==> ! ccollinear * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / ccollinear * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1 * / ccollinear * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (A = B)), (~ (A' = B')), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))), ((angle (B , (A , C))) = (angle (B' , (A' , C')))) |- ((distance (A , C)) = (distance (A' , C')))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f3 f4 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c= cdistance c, f0 f2 cdistance c, f3 f5
- |- ((!C''. (((~ ((angle (A , (B , C))) = (angle (A' , (B' , C'))))) \/ ((~ ((angle (B , (C , A))) = (angle (B' , (C' , A'))))) \/ ((~ ((distance (A , B)) = (distance (A' , B')))) \/ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))))) \/ (((distance (A , C)) = (distance (A' , C''))) /\ ((distance (B , C)) = (distance (B' , C'')))))) = (((~ ((angle (A , (B , C))) = (angle (A' , (B' , C'))))) \/ ((~ ((angle (B , (C , A))) = (angle (B' , (C' , A'))))) \/ ((~ ((distance (A , B)) = (distance (A' , B')))) \/ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))))) \/ (!C'. (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C')))))))
T c= ! c\/ c\/ c~ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c\/ c~ c= cangle c, f1 c, f2 f0 cangle c, f4 c, f5 f3 c\/ c~ c= cdistance c, f0 f1 cdistance c, f3 f4 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= cdistance c, f0 f2 cdistance c, f3 b0 c= cdistance c, f1 f2 cdistance c, f4 b0 c\/ c\/ c~ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c\/ c~ c= cangle c, f1 c, f2 f0 cangle c, f4 c, f5 f3 c\/ c~ c= cdistance c, f0 f1 cdistance c, f3 f4 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c/\ c= cdistance c, f0 f2 cdistance c, f3 b0 c= cdistance c, f1 f2 cdistance c, f4 b0
+ |- ((\B. (!C. ((~ ((A = B) /\ ((B = C) /\ (A = C)))) ==> (((real_add (angle (B , (A , C)))) ((real_add (angle (A , (B , C)))) (angle (B , (C , A))))) = pi)))) B)
T * / ! c==> c~ c/\ c= f0 b0 c/\ c= b0 b1 c= f0 b1 c= creal_add cangle c, b0 c, f0 b1 creal_add cangle c, f0 c, b0 b1 cangle c, b0 c, b1 f0 cpi f1
+ |- ((\C'. (!A'. (!C. (!A. (!B. (!B'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((~ (A' = B')) ==> ((~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> F))))))))))))))))))))))) C')
T * / ! ! ! ! ! c==> c~ c= b3 b4 c==> c= cangle c, b3 c, b4 b2 cangle c, b1 c, b5 b0 c==> c= cdistance c, b3 b4 cdistance c, b1 b5 c==> c= cangle c, b4 c, b3 b2 cangle c, b5 c, b1 b0 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b2 part cEMPTY c==> c~ c= b1 b5 c==> c~ c==> c= cangle c, b5 c, b0 b1 cangle c, b4 c, b2 b3 c= cdistance c, b3 b2 cdistance c, b1 b0 c==> ! ! ! c= cangle c, b6 c, b7 b8 cangle c, b8 c, b7 b6 c==> ! ! ! c= cangle c, b6 c, b7 b8 cangle c, b8 c, b7 b6 c==> ! ! ! c= cangle c, b6 c, b6 b6 cangle c, b6 c, b6 b6 c==> ! ! ! c= cangle c, b6 c, b7 b8 cangle c, b8 c, b7 b6 c==> ! ! c= cdistance c, b6 b7 cdistance c, b7 b6 c==> ! ! c= cdistance c, b6 b7 cdistance c, b7 b6 c==> ! ! c= cdistance c, b6 b7 cdistance c, b7 b6 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b6 c, b6 b6 cangle c, b6 c, b7 b8 c/\ c= cangle c, b6 c, b6 b6 cangle c, b7 c, b8 b6 c/\ c= cdistance c, b6 b6 cdistance c, b6 b7 c~ ccollinear * * part cINSERT b6 * * part cINSERT b6 * * part cINSERT b6 part cEMPTY c/\ c= cdistance c, b6 b6 cdistance c, b6 b8 c= cdistance c, b6 b6 cdistance c, b7 b8 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b6 c, b6 b6 cangle c, b6 c, b6 b6 c/\ c= cangle c, b6 c, b6 b6 cangle c, b6 c, b6 b6 c/\ c= cdistance c, b6 b6 cdistance c, b6 b6 c~ ccollinear * * part cINSERT b6 * * part cINSERT b6 * * part cINSERT b6 part cEMPTY c/\ c= cdistance c, b6 b6 cdistance c, b6 b6 c= cdistance c, b6 b6 cdistance c, b6 b6 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b6 c, b7 b8 cangle c, b9 c, b9 b9 c/\ c= cangle c, b7 c, b8 b6 cangle c, b9 c, b9 b9 c/\ c= cdistance c, b6 b7 cdistance c, b9 b9 c~ ccollinear * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ c= cdistance c, b6 b8 cdistance c, b9 b9 c= cdistance c, b7 b8 cdistance c, b9 b9 cF f0
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (A = B)), (~ (A' = B')), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))), ((angle (B , (A , C))) = (angle (B' , (A' , C')))) |- (((~ ((A' = B') /\ ((B' = C') /\ (A' = C')))) ==> (((real_add (angle (B' , (A' , C')))) ((real_add (angle (A' , (B' , C')))) (angle (B' , (C' , A'))))) = pi)) ==> (((~ ((A = B) /\ ((B = C) /\ (A = C)))) ==> (((real_add (angle (B , (A , C)))) ((real_add (angle (A , (B , C)))) (angle (B , (C , A))))) = pi)) ==> ((distance (A , C)) = (distance (A' , C')))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f3 f4 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c==> c~ c/\ c= f3 f4 c/\ c= f4 f5 c= f3 f5 c= creal_add cangle c, f4 c, f3 f5 creal_add cangle c, f3 c, f4 f5 cangle c, f4 c, f5 f3 cpi c==> c==> c~ c/\ c= f0 f1 c/\ c= f1 f2 c= f0 f2 c= creal_add cangle c, f1 c, f0 f2 creal_add cangle c, f0 c, f1 f2 cangle c, f1 c, f2 f0 cpi c= cdistance c, f0 f2 cdistance c, f3 f5
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y) = (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0
- (~ ((angle (B' , (C' , A'))) = (angle (B , (C , A))))), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) |- ((~ ((angle (B' , (C' , A'))) = (angle (B , (C , A))))) /\ ((angle (B' , (C' , A'))) = (angle (B , (C , A)))))
T c==> c~ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c~ c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c= cdistance c, f5 f4 cdistance c, f2 f1 c/\ c~ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5
- (!x. (!y. ((distance (x , y)) = (distance (y , x))))) |- ((distance (_2080870 , _2080871)) = (distance (_2080871 , _2080870)))
T c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c= cdistance c, f0 f1 cdistance c, f1 f0
+ (~ (A = B)), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))), ((angle (B , (A , C))) = (angle (B' , (A' , C')))), (((angle (B , (A , C))) = (angle (B' , (A' , C')))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))) |- ((distance (A , C)) = (distance (A' , C')))
T c==> c~ c= f0 f1 c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= cangle c, f0 c, f1 f4 cangle c, f2 c, f3 f5 c==> c= cangle c, f1 c, f0 f4 cangle c, f3 c, f2 f5 c==> c/\ c= cangle c, f1 c, f0 f4 cangle c, f3 c, f2 f5 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c= cdistance c, f0 f4 cdistance c, f2 f5
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0
+ |- ((x INSERT (x INSERT s)) = (x INSERT s))
T c= * * part cINSERT f0 * * part cINSERT f0 f1 * * part cINSERT f0 f1
- (~ ((distance (A , B)) = (distance (B' , B')))), ((distance (A , B)) = (distance (A' , B'))), (A' = B') |- ((~ ((distance (A , B)) = (distance (B' , B')))) /\ ((distance (A , B)) = (distance (B' , B'))))
T c==> c~ c= cdistance c, f0 f1 cdistance c, f2 f2 c==> c= cdistance c, f0 f1 cdistance c, f3 f2 c==> c= f3 f2 c/\ c~ c= cdistance c, f0 f1 cdistance c, f2 f2 c= cdistance c, f0 f1 cdistance c, f2 f2
- (!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) |- ((\B. (!C. ((angle (_2080863 , (B , C))) = (angle (C , (B , _2080863)))))) _2080864)
T c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 * / ! c= cangle c, f0 c, b0 b1 cangle c, b1 c, b0 f0 f1
- (~ ((angle (B' , (C' , A'))) = (angle (B' , (C' , A'))))) |- ((~ ((angle (B' , (C' , A'))) = (angle (B' , (C' , A'))))) /\ ((angle (B' , (C' , A'))) = (angle (B' , (C' , A')))))
T c==> c~ c= cangle c, f0 c, f1 f2 cangle c, f0 c, f1 f2 c/\ c~ c= cangle c, f0 c, f1 f2 cangle c, f0 c, f1 f2 c= cangle c, f0 c, f1 f2 cangle c, f0 c, f1 f2
- (~ (A' = B')) |- (((~ (B' = A')) ==> ((B' = A') = F)) = ((B' = A') = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi))))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) ((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
- (!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) |- ((\C. ((angle (_2080863 , (_2080864 , C))) = (angle (C , (_2080864 , _2080863))))) _2080865)
T c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 * / c= cangle c, f0 c, f1 b0 cangle c, b0 c, f1 f0 f2
+ (~ (A' = B')) |- ((A' = B') = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
- (!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) |- (((!C. ((angle (_2080863 , (_2080864 , C))) = (angle (C , (_2080864 , _2080863))))) ==> ((\C. ((angle (_2080863 , (_2080864 , C))) = (angle (C , (_2080864 , _2080863))))) _2080865)) = ((\C. ((angle (_2080863 , (_2080864 , C))) = (angle (C , (_2080864 , _2080863))))) _2080865))
T c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c= c==> ! c= cangle c, f0 c, f1 b0 cangle c, b0 c, f1 f0 * / c= cangle c, f0 c, f1 b0 cangle c, b0 c, f1 f0 f2 * / c= cangle c, f0 c, f1 b0 cangle c, b0 c, f1 f0 f2
+ |- ((!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (((angle (B , (A , C))) = (angle (B' , (A' , C')))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> ((distance (A , C)) = (distance (A' , C'))))))))) = T)
T c= ! ! ! ! ! c==> c/\ c= cangle c, f0 c, b0 b1 cangle c, b2 c, b3 b4 c/\ c= cdistance c, f0 b0 cdistance c, b2 b3 c/\ c= cangle c, b0 c, f0 b1 cangle c, b3 c, b2 b4 c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= cdistance c, f0 b1 cdistance c, b2 b4 cT
+ (!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))), (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) /\ ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> (~ (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))))))))))
T c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c==> c= cangle c, f3 c, f4 f5 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f5 f4 c==> c= cdistance c, f0 f1 cdistance c, f5 f3 c==> c= cangle c, f0 c, f1 f2 cangle c, f5 c, f3 f4 c/\ ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0
- |- (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) |- ((((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))) = (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))))))
T c==> c~ c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c= cdistance c, f5 f4 cdistance c, f2 f1 c= c/\ c= cdistance c, f5 f3 cdistance c, f2 f0 c~ ccollinear * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c= cangle c, f3 c, f4 f5 cangle c, f0 c, f1 f2 c/\ c= cdistance c, f5 f3 cdistance c, f2 f0 c~ ccollinear * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((!C'. ((P C') \/ Q)) = ((!C'. (P C')) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ |- (((((real_add a) ((real_add b) x)) = pi) /\ (((real_add a) ((real_add b) y)) = pi)) ==> (x = y))
T c==> c/\ c= creal_add f0 creal_add f1 f2 cpi c= creal_add f0 creal_add f1 f3 cpi c= f2 f3
- (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
+ (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))), (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- ((((distance (A , C)) = (distance (A' , C'))) ==> F) = F)
T c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c==> c= cangle c, f3 c, f4 f5 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f5 f4 c==> c= cdistance c, f0 f1 cdistance c, f5 f3 c==> c= cangle c, f0 c, f1 f2 cangle c, f5 c, f3 f4 c= c==> c= cdistance c, f0 f2 cdistance c, f5 f4 cF cF
+ |- ((!A. (!C'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> (~ (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y))))))))))))))) = T)
T c= ! ! c==> c~ c= b0 f0 c==> c= cangle c, b0 c, f0 f1 cangle c, f2 c, f3 b1 c==> c= cdistance c, b0 f0 cdistance c, f2 f3 c==> c= cangle c, f0 c, b0 f1 cangle c, f3 c, f2 b1 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f2 f3 c==> ! ! c= c= cdistance c, b2 b3 creal_of_num cNUMERAL c_0 c= b2 b3 c==> ! ! c= c= cdistance c, b2 b3 creal_of_num cNUMERAL c_0 c= b2 b3 c~ ! ! c= c= cdistance c, b2 b3 creal_of_num cNUMERAL c_0 c= b2 b3 cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (T = (((~ ((angle (_2080878 , (_2080879 , _2080880))) = (angle (_2080881 , (_2080882 , _2080883))))) \/ ((~ ((angle (_2080879 , (_2080880 , _2080878))) = (angle (_2080882 , (_2080883 , _2080881))))) \/ ((~ ((distance (_2080878 , _2080879)) = (distance (_2080881 , _2080882)))) \/ ((collinear (_2080878 INSERT (_2080879 INSERT (_2080880 INSERT EMPTY)))) \/ ((distance (_2080878 , _2080880)) = (distance (_2080881 , _2080883))))))) = (((distance (_2080878 , _2080880)) = (distance (_2080881 , _2080883))) \/ ((~ ((angle (_2080878 , (_2080879 , _2080880))) = (angle (_2080881 , (_2080882 , _2080883))))) \/ ((~ ((angle (_2080879 , (_2080880 , _2080878))) = (angle (_2080882 , (_2080883 , _2080881))))) \/ ((~ ((distance (_2080878 , _2080879)) = (distance (_2080881 , _2080882)))) \/ (collinear (_2080878 INSERT (_2080879 INSERT (_2080880 INSERT EMPTY))))))))))
T c= cT c= c\/ c~ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c\/ c~ c= cangle c, f1 c, f2 f0 cangle c, f4 c, f5 f3 c\/ c~ c= cdistance c, f0 f1 cdistance c, f3 f4 c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cdistance c, f0 f2 cdistance c, f3 f5 c\/ c= cdistance c, f0 f2 cdistance c, f3 f5 c\/ c~ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c\/ c~ c= cangle c, f1 c, f2 f0 cangle c, f4 c, f5 f3 c\/ c~ c= cdistance c, f0 f1 cdistance c, f3 f4 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (A = B)), (~ (A' = B')), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))), ((angle (B , (A , C))) = (angle (B' , (A' , C')))) |- ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> F))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f3 f4 c==> c~ c==> c= cangle c, f4 c, f5 f3 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f3 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 cF
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (A = B)), (~ (A' = B')), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))), ((angle (B , (A , C))) = (angle (B' , (A' , C')))) |- ((~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> F)))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f3 f4 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c~ c==> c= cangle c, f4 c, f5 f3 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f3 f5 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 cF
- (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))), (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- ((~ F) ==> F)
T c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c==> c= cangle c, f3 c, f4 f5 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f5 f4 c==> c= cdistance c, f0 f1 cdistance c, f5 f3 c==> c= cangle c, f0 c, f1 f2 cangle c, f5 c, f3 f4 c==> c~ cF cF
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> (~ (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C')))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c==> c= cangle c, f3 c, f4 f5 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f5 f4 c==> c= cdistance c, f0 f1 cdistance c, f5 f3 c==> c= cangle c, f0 c, f1 f2 cangle c, f5 c, f3 f4 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) = ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 c= creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
+ |- (((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (((angle (B , (A , C))) = (angle (B' , (A' , C')))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> ((distance (A , C)) = (distance (A' , C')))) = T)
T c= c==> c/\ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c/\ c= cdistance c, f0 f1 cdistance c, f3 f4 c/\ c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cdistance c, f0 f2 cdistance c, f3 f5 cT
+ (~ (A = B)), ((distance (A , B)) = (distance (A' , B'))) |- ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> (~ (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))))))))
T c==> c~ c= f0 f1 c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c==> c= f2 f3 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c~ ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> (~ (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c==> c= cangle c, f3 c, f4 f5 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f5 f4 c==> c= cdistance c, f0 f1 cdistance c, f5 f3 c==> c= cangle c, f0 c, f1 f2 cangle c, f5 c, f3 f4 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))))
T c= c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (!x'. (((real_mul x') ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
+ ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- (((distance (A , B)) = (distance (A' , B'))) /\ (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((~ (A' = B')) ==> ((~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> (~ (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))))))))))))))))))
T c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= cangle c, f0 c, f1 f4 cangle c, f2 c, f3 f5 c/\ c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= cangle c, f1 c, f0 f4 cangle c, f3 c, f2 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f3 c==> c~ c==> c= cangle c, f3 c, f5 f2 cangle c, f1 c, f4 f0 c= cdistance c, f0 f4 cdistance c, f2 f5 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- ((~ (A' = B')) ==> ((~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> (~ (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C')))))))))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c~ c= f3 f4 c==> c~ c==> c= cangle c, f4 c, f5 f3 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f3 f5 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5
+ (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) |- ((_2080778 = _2080779) ==> ((distance (_2080778 , _2080779)) = (real_of_num (NUMERAL _0))))
T c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> c= f0 f1 c= cdistance c, f0 f1 creal_of_num cNUMERAL c_0
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (A = B)), (~ (A' = B')), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))), ((angle (B , (A , C))) = (angle (B' , (A' , C')))) |- ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> F))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f3 f4 c==> c~ c==> c= cangle c, f4 c, f5 f3 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f3 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 cF
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- (((!C'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F)))))))))) ==> ((\C'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F)))))))))) C')) = ((\C'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F)))))))))) C'))
T c= c==> ! c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 b0 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 b0 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 f4 c==> ! ! c= c= cdistance c, b1 b2 creal_of_num cNUMERAL c_0 c= b1 b2 c==> ! ! c= c= cdistance c, b1 b2 creal_of_num cNUMERAL c_0 c= b1 b2 c==> ! ! c= c= cdistance c, b1 b2 creal_of_num cNUMERAL c_0 c= b1 b2 cF * / c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 b0 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 b0 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 f4 c==> ! ! c= c= cdistance c, b1 b2 creal_of_num cNUMERAL c_0 c= b1 b2 c==> ! ! c= c= cdistance c, b1 b2 creal_of_num cNUMERAL c_0 c= b1 b2 c==> ! ! c= c= cdistance c, b1 b2 creal_of_num cNUMERAL c_0 c= b1 b2 cF f5 * / c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 b0 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 b0 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 f4 c==> ! ! c= c= cdistance c, b1 b2 creal_of_num cNUMERAL c_0 c= b1 b2 c==> ! ! c= c= cdistance c, b1 b2 creal_of_num cNUMERAL c_0 c= b1 b2 c==> ! ! c= c= cdistance c, b1 b2 creal_of_num cNUMERAL c_0 c= b1 b2 cF f5
+ ((((real_add (angle (B' , (A' , C')))) ((real_add (angle (A' , (B' , C')))) (angle (B' , (C' , A'))))) = pi) /\ (((real_add (angle (B' , (A' , C')))) ((real_add (angle (A' , (B' , C')))) (angle (B , (C , A))))) = pi)) |- ((angle (B' , (C' , A'))) = (angle (B , (C , A))))
T c==> c/\ c= creal_add cangle c, f0 c, f1 f2 creal_add cangle c, f1 c, f0 f2 cangle c, f0 c, f2 f1 cpi c= creal_add cangle c, f0 c, f1 f2 creal_add cangle c, f1 c, f0 f2 cangle c, f3 c, f4 f5 cpi c= cangle c, f0 c, f2 f1 cangle c, f3 c, f4 f5
- |- ((!C''. (((~ ((angle (A , (B , C))) = (angle (A' , (B' , C''))))) \/ ((~ ((angle (B , (C , A))) = (angle (B' , (C'' , A'))))) \/ ((~ ((distance (A , B)) = (distance (A' , B')))) \/ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))))) \/ (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C')))))) = ((!C'. ((~ ((angle (A , (B , C))) = (angle (A' , (B' , C'))))) \/ ((~ ((angle (B , (C , A))) = (angle (B' , (C' , A'))))) \/ ((~ ((distance (A , B)) = (distance (A' , B')))) \/ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) \/ (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))
T c= ! c\/ c\/ c~ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 b0 c\/ c~ c= cangle c, f1 c, f2 f0 cangle c, f4 c, b0 f3 c\/ c~ c= cdistance c, f0 f1 cdistance c, f3 f4 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= cdistance c, f0 f2 cdistance c, f3 f5 c= cdistance c, f1 f2 cdistance c, f4 f5 c\/ ! c\/ c~ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 b0 c\/ c~ c= cangle c, f1 c, f2 f0 cangle c, f4 c, b0 f3 c\/ c~ c= cdistance c, f0 f1 cdistance c, f3 f4 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= cdistance c, f0 f2 cdistance c, f3 f5 c= cdistance c, f1 f2 cdistance c, f4 f5
+ |- ((!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (((angle (B , (A , C))) = (angle (B' , (A' , C')))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> ((distance (A , C)) = (distance (A' , C')))))) = T)
T c= ! ! c==> c/\ c= cangle c, f0 c, f1 f2 cangle c, f3 c, b0 b1 c/\ c= cdistance c, f0 f1 cdistance c, f3 b0 c/\ c= cangle c, f1 c, f0 f2 cangle c, b0 c, f3 b1 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cdistance c, f0 f2 cdistance c, f3 b1 cT
+ |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- ((!A'. (!C. (!B. (!A. (!C'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> (~ (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))))))))))))))))) = T)
T c= ! ! ! ! ! c==> c~ c= b3 b2 c==> c= cangle c, b3 c, b2 b1 cangle c, b0 c, f0 b4 c==> c= cdistance c, b3 b2 cdistance c, b0 f0 c==> c= cangle c, b2 c, b3 b1 cangle c, f0 c, b0 b4 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> c= b0 f0 c==> ! ! c= c= cdistance c, b5 b6 creal_of_num cNUMERAL c_0 c= b5 b6 c==> ! ! c= c= cdistance c, b5 b6 creal_of_num cNUMERAL c_0 c= b5 b6 c~ ! ! c= c= cdistance c, b5 b6 creal_of_num cNUMERAL c_0 c= b5 b6 cT
+ (A = B) |- (((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (((angle (B , (A , C))) = (angle (B' , (A' , C')))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> ((distance (A , C)) = (distance (A' , C')))) = ((((angle (B , (B , C))) = (angle (A' , (B' , C')))) /\ (((distance (B , B)) = (distance (A' , B'))) /\ (((angle (B , (B , C))) = (angle (B' , (A' , C')))) /\ (~ (collinear (B INSERT (B INSERT (C INSERT EMPTY)))))))) ==> ((distance (B , C)) = (distance (A' , C')))))
T c==> c= f0 f1 c= c==> c/\ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c/\ c= cdistance c, f0 f1 cdistance c, f3 f4 c/\ c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cdistance c, f0 f2 cdistance c, f3 f5 c==> c/\ c= cangle c, f1 c, f1 f2 cangle c, f3 c, f4 f5 c/\ c= cdistance c, f1 f1 cdistance c, f3 f4 c/\ c= cangle c, f1 c, f1 f2 cangle c, f4 c, f3 f5 c~ ccollinear * * part cINSERT f1 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cdistance c, f1 f2 cdistance c, f3 f5
+ (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) |- (((((angle (B' , (C' , A'))) = (angle (B , (C , A)))) /\ ((angle (B' , (C' , A'))) = (angle (B' , (C' , A'))))) ==> ((angle (B , (C , A))) = (angle (B' , (C' , A'))))) = ((angle (B , (C , A))) = (angle (B' , (C' , A')))))
T c==> c~ c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c= cdistance c, f5 f4 cdistance c, f2 f1 c= c==> c/\ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c= cangle c, f0 c, f1 f2 cangle c, f0 c, f1 f2 c= cangle c, f3 c, f4 f5 cangle c, f0 c, f1 f2 c= cangle c, f3 c, f4 f5 cangle c, f0 c, f1 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (!x'. (((real_mul x') ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
+ |- (((B' = B') ==> ((distance (B' , B')) = (real_of_num (NUMERAL _0)))) = ((distance (B' , B')) = (real_of_num (NUMERAL _0))))
T c= c==> c= f0 f0 c= cdistance c, f0 f0 creal_of_num cNUMERAL c_0 c= cdistance c, f0 f0 creal_of_num cNUMERAL c_0
- (_2080822 = _2080823) |- ((_2080822 = _2080823) /\ ((NUMERAL _2080822) = (NUMERAL _2080823)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) |- ((angle (_2080863 , (_2080864 , _2080865))) = (angle (_2080865 , (_2080864 , _2080863))))
T c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c= cangle c, f0 c, f1 f2 cangle c, f2 c, f1 f0
+ (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))), (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))), (~ (A = B)), ((distance (A , B)) = (distance (A' , B'))), (A' = B') |- F
T c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> c~ c= f0 f1 c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= f2 f3 cF
- ((angle (B , (A , C))) = (angle (B' , (A' , C')))), (A' = B') |- ((angle (B , (A , C))) = (angle (B' , (B' , C'))))
T c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= f4 f3 c= cangle c, f0 c, f1 f2 cangle c, f3 c, f3 f5
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
- (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((!x'. (((real_mul x') ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) = (real_of_num (NUMERAL _0)))) ==> ((\x'. (((real_mul x') ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x'. (((real_mul x') ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) ((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0
- |- ((~ (_2080822 = _2080823)) \/ ((NUMERAL _2080822) = (NUMERAL _2080823)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ |- (((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> F)) = ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> F))
T c= c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 cF c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 cF
- ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- ((~ ((angle (A , (B , C))) = (angle (A' , (B' , C'))))) ==> ((angle (A , (B , C))) = (angle (A' , (B' , C')))))
T c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c~ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5
- |- ((_2080920 = _2080922) ==> ((~ (_2080921 = _2080923)) \/ ((_2080920 INSERT _2080921) = (_2080922 INSERT _2080923))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (_2080921 = _2080923), (_2080920 = _2080922) |- ((_2080921 = _2080923) /\ ((_2080920 INSERT _2080921) = (_2080922 INSERT _2080923)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cINSERT f2 f0 * * part cINSERT f3 f1
+ |- (((!C. (!B. (!A. (!C'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F))))))))))))) ==> ((\C. (!B. (!A. (!C'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F))))))))))))) C)) = ((\C. (!B. (!A. (!C'. ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F))))))))))))) C))
T c= c==> ! ! ! ! c==> c~ c= b2 b1 c==> c= cangle c, b2 c, b1 b0 cangle c, f0 c, f1 b3 c==> c= cdistance c, b2 b1 cdistance c, f0 f1 c==> c= cangle c, b1 c, b2 b0 cangle c, f1 c, f0 b3 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c= f0 f1 c==> ! ! c= c= cdistance c, b4 b5 creal_of_num cNUMERAL c_0 c= b4 b5 c==> ! ! c= c= cdistance c, b4 b5 creal_of_num cNUMERAL c_0 c= b4 b5 c==> ! ! c= c= cdistance c, b4 b5 creal_of_num cNUMERAL c_0 c= b4 b5 cF * / ! ! ! c==> c~ c= b2 b1 c==> c= cangle c, b2 c, b1 b0 cangle c, f0 c, f1 b3 c==> c= cdistance c, b2 b1 cdistance c, f0 f1 c==> c= cangle c, b1 c, b2 b0 cangle c, f1 c, f0 b3 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c= f0 f1 c==> ! ! c= c= cdistance c, b4 b5 creal_of_num cNUMERAL c_0 c= b4 b5 c==> ! ! c= c= cdistance c, b4 b5 creal_of_num cNUMERAL c_0 c= b4 b5 c==> ! ! c= c= cdistance c, b4 b5 creal_of_num cNUMERAL c_0 c= b4 b5 cF f2 * / ! ! ! c==> c~ c= b2 b1 c==> c= cangle c, b2 c, b1 b0 cangle c, f0 c, f1 b3 c==> c= cdistance c, b2 b1 cdistance c, f0 f1 c==> c= cangle c, b1 c, b2 b0 cangle c, f1 c, f0 b3 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c= f0 f1 c==> ! ! c= c= cdistance c, b4 b5 creal_of_num cNUMERAL c_0 c= b4 b5 c==> ! ! c= c= cdistance c, b4 b5 creal_of_num cNUMERAL c_0 c= b4 b5 c==> ! ! c= c= cdistance c, b4 b5 creal_of_num cNUMERAL c_0 c= b4 b5 cF f2
+ (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))), ((distance (A , B)) = (distance (A' , B'))), (A' = B') |- (((distance (B' , B')) = (distance (A , B))) /\ ((distance (B' , B')) = (real_of_num (NUMERAL _0))))
T c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= f2 f3 c/\ c= cdistance c, f3 f3 cdistance c, f0 f1 c= cdistance c, f3 f3 creal_of_num cNUMERAL c_0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> F))))) = ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> F)))))
T c= c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 cF c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 cF
+ ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((~ (A' = B')) ==> ((~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> (~ (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))))))))))))))))
T c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= cangle c, f0 c, f1 f4 cangle c, f2 c, f3 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f3 c==> c~ c==> c= cangle c, f3 c, f5 f2 cangle c, f1 c, f4 f0 c= cdistance c, f0 f4 cdistance c, f2 f5 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) = (real_of_num (NUMERAL _0))) ==> (!x'. (((real_mul x') ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) = (real_of_num (NUMERAL _0))))) = (!x'. (((real_mul x') ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 c= c==> c= creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
- (B' = A') |- (A' = B')
T c==> c= f0 f1 c= f1 f0
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- ((angle (A , (B , C))) = (angle (A' , (B' , C')))), (A' = B') |- ((angle (A , (B , C))) = (angle (B' , (B' , C'))))
T c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= f3 f4 c= cangle c, f0 c, f1 f2 cangle c, f4 c, f4 f5
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) = (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 c= creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
+ |- ((\C. ((~ ((A = B) /\ ((B = C) /\ (A = C)))) ==> (((real_add (angle (B , (A , C)))) ((real_add (angle (A , (B , C)))) (angle (B , (C , A))))) = pi))) C)
T * / c==> c~ c/\ c= f0 f1 c/\ c= f1 b0 c= f0 b0 c= creal_add cangle c, f1 c, f0 b0 creal_add cangle c, f0 c, f1 b0 cangle c, f1 c, b0 f0 cpi f2
- |- ((_2080822 = _2080823) ==> ((NUMERAL _2080822) = (NUMERAL _2080823)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))) |- (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c==> c= cangle c, f3 c, f4 f5 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f5 f4 c==> c= cdistance c, f0 f1 cdistance c, f5 f3 c/\ c= cangle c, f1 c, f2 f0 cangle c, f3 c, f4 f5 c/\ c= cdistance c, f0 f1 cdistance c, f5 f3 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))), (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) /\ ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> (~ (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))))))))))))
T c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c==> c= cangle c, f3 c, f4 f5 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f5 f4 c==> c= cdistance c, f0 f1 cdistance c, f5 f3 c==> c= cangle c, f0 c, f1 f2 cangle c, f5 c, f3 f4 c/\ ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5
- |- ((!y'. ((~ ((distance (x , y')) = (real_of_num (NUMERAL _0)))) \/ (x = y))) = ((!y. (~ ((distance (x , y)) = (real_of_num (NUMERAL _0))))) \/ (x = y)))
T c= ! c\/ c~ c= cdistance c, f0 b0 creal_of_num cNUMERAL c_0 c= f0 f1 c\/ ! c~ c= cdistance c, f0 b0 creal_of_num cNUMERAL c_0 c= f0 f1
+ |- (((x = (real_of_num (NUMERAL _0))) /\ (y = (real_of_num (NUMERAL _0)))) ==> (((real_add x) y) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c= f1 creal_of_num cNUMERAL c_0 c= creal_add f0 f1 creal_of_num cNUMERAL c_0
- |- ((((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F))))))))) ==> ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F)))))))))) = ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F))))))))))
T c= c==> c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 f4 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 cF c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 f4 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 cF c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 f4 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 cF
- |- ((~ (_2080926 = _2080927)) \/ ((distance _2080926) = (distance _2080927)))
T c\/ c~ c= f0 f1 c= cdistance f0 cdistance f1
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 c/\ c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 cF
- ((distance (A , B)) = (distance (A' , B'))), (A' = B') |- ((~ ((distance (B' , B')) = (distance (A , B)))) ==> ((distance (B' , B')) = (distance (A , B))))
T c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= f2 f3 c==> c~ c= cdistance c, f3 f3 cdistance c, f0 f1 c= cdistance c, f3 f3 cdistance c, f0 f1
- |- ((~ (_2080920 = _2080922)) \/ ((~ (_2080921 = _2080923)) \/ ((_2080920 INSERT _2080921) = (_2080922 INSERT _2080923))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) |- (!B. (!C. ((angle (_2080863 , (B , C))) = (angle (C , (B , _2080863))))))
T c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 ! ! c= cangle c, f0 c, b0 b1 cangle c, b1 c, b0 f0
+ (~ (A = B)), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))), (((angle (B , (A , C))) = (angle (B' , (A' , C')))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))) |- ((distance (A , C)) = (distance (A' , C')))
T c==> c~ c= f0 f1 c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= cangle c, f0 c, f1 f4 cangle c, f2 c, f3 f5 c==> c/\ c= cangle c, f1 c, f0 f4 cangle c, f3 c, f2 f5 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c= cdistance c, f0 f4 cdistance c, f2 f5
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
- (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))), (~ ((distance (B' , B')) = (real_of_num (NUMERAL _0)))) |- ((~ ((distance (B' , B')) = (real_of_num (NUMERAL _0)))) /\ ((distance (B' , B')) = (real_of_num (NUMERAL _0))))
T c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> c~ c= cdistance c, f0 f0 creal_of_num cNUMERAL c_0 c/\ c~ c= cdistance c, f0 f0 creal_of_num cNUMERAL c_0 c= cdistance c, f0 f0 creal_of_num cNUMERAL c_0
- |- ((p ==> (~ p)) = (~ p))
T c= c==> f0 c~ f0 c~ f0
- (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))), (~ ((distance (A , B)) = (real_of_num (NUMERAL _0)))), ((distance (A , B)) = (distance (A' , B'))), (A' = B') |- ((~ ((distance (A , B)) = (real_of_num (NUMERAL _0)))) /\ ((distance (A , B)) = (real_of_num (NUMERAL _0))))
T c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> c~ c= cdistance c, f0 f1 creal_of_num cNUMERAL c_0 c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= f2 f3 c/\ c~ c= cdistance c, f0 f1 creal_of_num cNUMERAL c_0 c= cdistance c, f0 f1 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) |- ((angle (B' , (C' , A'))) = (angle (B , (C , A))))
T c==> c~ c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c= cdistance c, f5 f4 cdistance c, f2 f1 c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5
+ ((~ (A = B)) ==> ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (((angle (B , (A , C))) = (angle (B' , (A' , C')))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> ((distance (A , C)) = (distance (A' , C'))))) |- ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (((angle (B , (A , C))) = (angle (B' , (A' , C')))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> ((distance (A , C)) = (distance (A' , C'))))
T c==> c==> c~ c= f0 f1 c==> c/\ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c/\ c= cdistance c, f0 f1 cdistance c, f3 f4 c/\ c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cdistance c, f0 f2 cdistance c, f3 f5 c==> c/\ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c/\ c= cdistance c, f0 f1 cdistance c, f3 f4 c/\ c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cdistance c, f0 f2 cdistance c, f3 f5
- |- ((!y'. (((distance (x , y')) = (real_of_num (NUMERAL _0))) \/ (~ (x = y)))) = ((!y. ((distance (x , y)) = (real_of_num (NUMERAL _0)))) \/ (~ (x = y))))
T c= ! c\/ c= cdistance c, f0 b0 creal_of_num cNUMERAL c_0 c~ c= f0 f1 c\/ ! c= cdistance c, f0 b0 creal_of_num cNUMERAL c_0 c~ c= f0 f1
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
+ (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) |- (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) /\ ((angle (B' , (C' , A'))) = (angle (B' , (C' , A')))))
T c==> c~ c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c= cdistance c, f5 f4 cdistance c, f2 f1 c/\ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c= cangle c, f0 c, f1 f2 cangle c, f0 c, f1 f2
- (A' = B') |- (((~ ((distance (_2080788 , _2080789)) = (real_of_num (NUMERAL _0)))) \/ (_2080788 = _2080789)) = ((~ ((distance (_2080788 , _2080789)) = (real_of_num (NUMERAL _0)))) \/ (_2080788 = _2080789)))
T c==> c= f0 f1 c= c\/ c~ c= cdistance c, f2 f3 creal_of_num cNUMERAL c_0 c= f2 f3 c\/ c~ c= cdistance c, f2 f3 creal_of_num cNUMERAL c_0 c= f2 f3
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0))) = ((((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0
- (_2080943 = _2080945), (_2080942 = _2080944) |- ((_2080943 = _2080945) /\ ((_2080942 , _2080943) = (_2080944 , _2080945)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= c, f2 f0 c, f3 f1
+ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (A = B)), (~ (A' = B')), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))), ((angle (B , (A , C))) = (angle (B' , (A' , C')))) |- ((~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) /\ F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f3 f4 c==> c~ c==> c= cangle c, f4 c, f5 f3 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f3 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c/\ c~ c==> c= cangle c, f4 c, f5 f3 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f3 f5 cF
+ (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- ((((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
+ (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))), ((distance (A , B)) = (distance (A' , B'))), (A' = B') |- ((((distance (A , B)) = (real_of_num (NUMERAL _0))) ==> (A = B)) = (A = B))
T c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= f2 f3 c= c==> c= cdistance c, f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1 c= f0 f1
- (A' = B') |- (F = F)
T c==> c= f0 f1 c= cF cF
+ (~ (A = B)), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))), ((angle (B , (A , C))) = (angle (B' , (A' , C')))) |- ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F)))))
T c==> c~ c= f0 f1 c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= cangle c, f0 c, f1 f4 cangle c, f2 c, f3 f5 c==> c= cangle c, f1 c, f0 f4 cangle c, f3 c, f2 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c==> c= f2 f3 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 cF
+ (!x. (!y. ((distance (x , y)) = (distance (y , x))))), (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) /\ ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> ((!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) ==> (~ (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C')))))))))))))))
T c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c==> c= cangle c, f3 c, f4 f5 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f5 f4 c==> c= cdistance c, f0 f1 cdistance c, f5 f3 c==> c= cangle c, f0 c, f1 f2 cangle c, f5 c, f3 f4 c/\ ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c~ ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5
- (~ ((angle (A , (B , C))) = (angle (A' , (B' , C'))))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- ((~ ((angle (A , (B , C))) = (angle (A' , (B' , C'))))) /\ ((angle (A , (B , C))) = (angle (A' , (B' , C')))))
T c==> c~ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c/\ c~ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5
+ |- (((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F)) = ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F))
T c= c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 cF c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 cF
+ |- (((!t. (t \/ (~ t))) ==> ((\t. (t \/ (~ t))) (A = B))) = ((\t. (t \/ (~ t))) (A = B)))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 c= f0 f1 * / c\/ b0 c~ b0 c= f0 f1
- (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))), (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))), (~ (A = B)), ((distance (A , B)) = (distance (A' , B'))), (A' = B') |- ((~ (A = B)) /\ (A = B))
T c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> c~ c= f0 f1 c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= f2 f3 c/\ c~ c= f0 f1 c= f0 f1
- (~ ((angle (B , (C , A))) = (angle (B' , (C' , A'))))), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))) |- ((~ ((angle (B , (C , A))) = (angle (B' , (C' , A'))))) /\ ((angle (B , (C , A))) = (angle (B' , (C' , A')))))
T c==> c~ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c~ c==> c= cangle c, f3 c, f4 f5 cangle c, f0 c, f1 f2 c= cdistance c, f2 f1 cdistance c, f5 f4 c/\ c~ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5
- |- (T = (((~ ((distance (_2080784 , _2080785)) = (real_of_num (NUMERAL _0)))) \/ (_2080784 = _2080785)) = ((_2080784 = _2080785) \/ (~ ((distance (_2080784 , _2080785)) = (real_of_num (NUMERAL _0)))))))
T c= cT c= c\/ c~ c= cdistance c, f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1 c\/ c= f0 f1 c~ c= cdistance c, f0 f1 creal_of_num cNUMERAL c_0
- (!x. (!y. ((distance (x , y)) = (distance (y , x))))) |- (((!y. ((distance (_2080870 , y)) = (distance (y , _2080870)))) ==> ((\y. ((distance (_2080870 , y)) = (distance (y , _2080870)))) _2080871)) = ((\y. ((distance (_2080870 , y)) = (distance (y , _2080870)))) _2080871))
T c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c= c==> ! c= cdistance c, f0 b0 cdistance c, b0 f0 * / c= cdistance c, f0 b0 cdistance c, b0 f0 f1 * / c= cdistance c, f0 b0 cdistance c, b0 f0 f1
- (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) = (real_of_num (NUMERAL _0))) ==> (!x'. (((real_mul x') ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) = (real_of_num (NUMERAL _0))))) = (!x'. (((real_mul x') ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 c= c==> c= creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
- |- ((~ (_2080946 = _2080947)) \/ ((angle _2080946) = (angle _2080947)))
T c\/ c~ c= f0 f1 c= cangle f0 cangle f1
- |- ((~ (_2080892 = _2080893)) \/ ((collinear _2080893) \/ (~ (collinear _2080892))))
T c\/ c~ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) |- ((collinear (A INSERT (B INSERT (C INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- (_2080920 = _2080922) |- ((_2080921 = _2080923) ==> ((_2080920 INSERT _2080921) = (_2080922 INSERT _2080923)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- ((!C'. (P \/ (Q C'))) = (P \/ (!C'. (Q C'))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- |- ((!y'. ((~ ((distance (x , y)) = (real_of_num (NUMERAL _0)))) \/ (x = y'))) = ((~ ((distance (x , y)) = (real_of_num (NUMERAL _0)))) \/ (!y. (x = y))))
T c= ! c\/ c~ c= cdistance c, f0 f1 creal_of_num cNUMERAL c_0 c= f0 b0 c\/ c~ c= cdistance c, f0 f1 creal_of_num cNUMERAL c_0 ! c= f0 b0
- |- ((!y'. (((distance (x , y)) = (real_of_num (NUMERAL _0))) \/ (~ (x = y')))) = (((distance (x , y)) = (real_of_num (NUMERAL _0))) \/ (!y. (~ (x = y)))))
T c= ! c\/ c= cdistance c, f0 f1 creal_of_num cNUMERAL c_0 c~ c= f0 b0 c\/ c= cdistance c, f0 f1 creal_of_num cNUMERAL c_0 ! c~ c= f0 b0
- (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) |- ((~ ((distance (B' , B')) = (real_of_num (NUMERAL _0)))) ==> ((distance (B' , B')) = (real_of_num (NUMERAL _0))))
T c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> c~ c= cdistance c, f0 f0 creal_of_num cNUMERAL c_0 c= cdistance c, f0 f0 creal_of_num cNUMERAL c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- (!x. (!y. ((distance (x , y)) = (distance (y , x))))) |- ((\x. (!y. ((distance (x , y)) = (distance (y , x))))) _2080870)
T c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 * / ! c= cdistance c, b0 b1 cdistance c, b1 b0 f0
- (A' = B') |- (((angle (B , (A , C))) = (angle (B' , (A' , C')))) = ((angle (B , (A , C))) = (angle (B' , (B' , C')))))
T c==> c= f0 f1 c= c= cangle c, f2 c, f3 f4 cangle c, f1 c, f0 f5 c= cangle c, f2 c, f3 f4 cangle c, f1 c, f1 f5
- |- ((_2080824 = _2080825) ==> ((real_of_num _2080824) = (real_of_num _2080825)))
T c==> c= f0 f1 c= creal_of_num f0 creal_of_num f1
- |- ((_2080892 = _2080893) ==> ((collinear _2080893) \/ (~ (collinear _2080892))))
T c==> c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- (A' = B') |- ((((distance (_2080786 , _2080787)) = (real_of_num (NUMERAL _0))) \/ (~ (_2080786 = _2080787))) = (((distance (_2080786 , _2080787)) = (real_of_num (NUMERAL _0))) \/ (~ (_2080786 = _2080787))))
T c==> c= f0 f1 c= c\/ c= cdistance c, f2 f3 creal_of_num cNUMERAL c_0 c~ c= f2 f3 c\/ c= cdistance c, f2 f3 creal_of_num cNUMERAL c_0 c~ c= f2 f3
- (_2080942 = _2080944) |- ((_2080942 = _2080944) /\ ((~ (_2080943 = _2080945)) \/ ((_2080942 , _2080943) = (_2080944 , _2080945))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- (A' = B') |- (((angle (A , (B , C))) = (angle (A' , (B' , C')))) = ((angle (A , (B , C))) = (angle (B' , (B' , C')))))
T c==> c= f0 f1 c= c= cangle c, f2 c, f3 f4 cangle c, f0 c, f1 f5 c= cangle c, f2 c, f3 f4 cangle c, f1 c, f1 f5
- (~ (A' = B')) |- (~ (B' = A'))
T c==> c~ c= f0 f1 c~ c= f1 f0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))), (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))), (~ ((distance (A , C)) = (distance (A' , C')))), (~ (((angle (B' , (C' , A'))) = (angle (B , (C , A)))) ==> ((distance (A , C)) = (distance (A' , C'))))), ((distance (A , B)) = (distance (A' , B'))), ((angle (A , (B , C))) = (angle (A' , (B' , C')))) |- ((~ ((distance (A , C)) = (distance (A' , C')))) /\ ((distance (A , C)) = (distance (A' , C'))))
T c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= cdistance c, f0 f2 cdistance c, f3 f4 c==> c~ c==> c= cangle c, f5 c, f4 f3 cangle c, f1 c, f2 f0 c= cdistance c, f0 f2 cdistance c, f3 f4 c==> c= cdistance c, f0 f1 cdistance c, f3 f5 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f5 f4 c/\ c~ c= cdistance c, f0 f2 cdistance c, f3 f4 c= cdistance c, f0 f2 cdistance c, f3 f4
- (_2080926 = _2080927) |- ((_2080926 = _2080927) /\ ((distance _2080926) = (distance _2080927)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cdistance f0 cdistance f1
- (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y))) (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) ==> (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi))))) = (real_of_num (NUMERAL _0)))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0
- (~ (A' = B')) |- ((B' = A') = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F))))))))) |- (((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F))))))))) /\ ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F))))))))))
T c==> c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 f4 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 cF c/\ c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 f4 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 cF c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 f4 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 cF
- (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((\x'. (((real_mul x') ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_2080892 = _2080893) |- ((((collinear _2080892) = (collinear _2080893)) ==> ((collinear _2080893) \/ (~ (collinear _2080892)))) = ((collinear _2080893) \/ (~ (collinear _2080892))))
T c==> c= f0 f1 c= c==> c= ccollinear f0 ccollinear f1 c\/ ccollinear f1 c~ ccollinear f0 c\/ ccollinear f1 c~ ccollinear f0
- (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))), ((distance (A , B)) = (distance (A' , B'))), (A' = B') |- ((~ ((distance (A , B)) = (real_of_num (NUMERAL _0)))) ==> ((distance (A , B)) = (real_of_num (NUMERAL _0))))
T c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= f2 f3 c==> c~ c= cdistance c, f0 f1 creal_of_num cNUMERAL c_0 c= cdistance c, f0 f1 creal_of_num cNUMERAL c_0
- (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0
- (~ ((distance (A , B)) = (distance (A , B)))) |- ((~ ((distance (A , B)) = (distance (A , B)))) /\ ((distance (A , B)) = (distance (A , B))))
T c==> c~ c= cdistance c, f0 f1 cdistance c, f0 f1 c/\ c~ c= cdistance c, f0 f1 cdistance c, f0 f1 c= cdistance c, f0 f1 cdistance c, f0 f1
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!y. (P y)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!x. (!y. ((distance (x , y)) = (distance (y , x))))) |- (!y. ((distance (_2080870 , y)) = (distance (y , _2080870))))
T c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 ! c= cdistance c, f0 b0 cdistance c, b0 f0
- |- ((((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F))))))))) ==> ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F)))))))))) ==> (((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F))))))))) ==> ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F)))))))))))
T c==> c==> c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 f4 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 cF c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 f4 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 cF c==> c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 f4 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 cF c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 f4 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 cF
- (_2080920 = _2080922) |- ((_2080920 = _2080922) /\ ((~ (_2080921 = _2080923)) \/ ((_2080920 INSERT _2080921) = (_2080922 INSERT _2080923))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) |- (((~ ((angle (_2080872 , (_2080873 , _2080874))) = (angle (_2080875 , (_2080876 , _2080877))))) \/ ((~ ((angle (_2080873 , (_2080874 , _2080872))) = (angle (_2080876 , (_2080877 , _2080875))))) \/ ((~ ((distance (_2080872 , _2080873)) = (distance (_2080875 , _2080876)))) \/ (collinear (_2080872 INSERT (_2080873 INSERT (_2080874 INSERT EMPTY))))))) \/ ((distance (_2080873 , _2080874)) = (distance (_2080876 , _2080877))))
T c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c\/ c\/ c~ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c\/ c~ c= cangle c, f1 c, f2 f0 cangle c, f4 c, f5 f3 c\/ c~ c= cdistance c, f0 f1 cdistance c, f3 f4 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cdistance c, f1 f2 cdistance c, f4 f5
- |- ((~ ((angle (B' , (C' , A'))) = (angle (B' , (C' , A'))))) ==> ((angle (B' , (C' , A'))) = (angle (B' , (C' , A')))))
T c==> c~ c= cangle c, f0 c, f1 f2 cangle c, f0 c, f1 f2 c= cangle c, f0 c, f1 f2 cangle c, f0 c, f1 f2
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (_2080824 = _2080825) |- ((_2080824 = _2080825) /\ ((real_of_num _2080824) = (real_of_num _2080825)))
T c==> c= f0 f1 c/\ c= f0 f1 c= creal_of_num f0 creal_of_num f1
- (!A. (!B. (!C. (!A'. (!B'. (!C'. ((((angle (A , (B , C))) = (angle (A' , (B' , C')))) /\ (((angle (B , (C , A))) = (angle (B' , (C' , A')))) /\ (((distance (A , B)) = (distance (A' , B'))) /\ (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY)))))))) ==> (((distance (A , C)) = (distance (A' , C'))) /\ ((distance (B , C)) = (distance (B' , C'))))))))))) |- ((~ ((angle (_2080872 , (_2080873 , _2080874))) = (angle (_2080875 , (_2080876 , _2080877))))) \/ ((~ ((angle (_2080873 , (_2080874 , _2080872))) = (angle (_2080876 , (_2080877 , _2080875))))) \/ ((~ ((distance (_2080872 , _2080873)) = (distance (_2080875 , _2080876)))) \/ ((collinear (_2080872 INSERT (_2080873 INSERT (_2080874 INSERT EMPTY)))) \/ ((distance (_2080873 , _2080874)) = (distance (_2080876 , _2080877)))))))
T c==> ! ! ! ! ! ! c==> c/\ c= cangle c, b0 c, b1 b2 cangle c, b3 c, b4 b5 c/\ c= cangle c, b1 c, b2 b0 cangle c, b4 c, b5 b3 c/\ c= cdistance c, b0 b1 cdistance c, b3 b4 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b0 b2 cdistance c, b3 b5 c= cdistance c, b1 b2 cdistance c, b4 b5 c\/ c~ c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c\/ c~ c= cangle c, f1 c, f2 f0 cangle c, f4 c, f5 f3 c\/ c~ c= cdistance c, f0 f1 cdistance c, f3 f4 c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cdistance c, f1 f2 cdistance c, f4 f5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0
- ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F))))))))) |- ((((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F))))))))) ==> ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F)))))))))) ==> ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F))))))))))
T c==> c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 f4 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 cF c==> c==> c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 f4 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 cF c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 f4 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 cF c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 f4 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 cF
- (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) ==> (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi))))) = (real_of_num (NUMERAL _0)))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0
- (_2080946 = _2080947) |- ((_2080946 = _2080947) /\ ((angle _2080946) = (angle _2080947)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cangle f0 cangle f1
- (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0
- |- ((~ ((distance (A , B)) = (distance (A , B)))) ==> ((distance (A , B)) = (distance (A , B))))
T c==> c~ c= cdistance c, f0 f1 cdistance c, f0 f1 c= cdistance c, f0 f1 cdistance c, f0 f1
- (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))), (!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))), (~ F), (~ (A = B)), ((distance (A , B)) = (distance (A' , B'))), (A' = B') |- ((~ F) /\ F)
T c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> c~ cF c==> c~ c= f0 f1 c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= f2 f3 c/\ c~ cF cF
- (~ (B' = B')) |- ((~ (B' = B')) /\ (B' = B'))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- (~ ((distance (B' , B')) = (distance (A , B)))), ((distance (A , B)) = (distance (A' , B'))), (A' = B') |- ((~ ((distance (B' , B')) = (distance (A , B)))) /\ ((distance (B' , B')) = (distance (A , B))))
T c==> c~ c= cdistance c, f0 f0 cdistance c, f1 f2 c==> c= cdistance c, f1 f2 cdistance c, f3 f0 c==> c= f3 f0 c/\ c~ c= cdistance c, f0 f0 cdistance c, f1 f2 c= cdistance c, f0 f0 cdistance c, f1 f2
- (!x. (!y. ((distance (x , y)) = (distance (y , x))))) |- ((\y. ((distance (_2080870 , y)) = (distance (y , _2080870)))) _2080871)
T c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 * / c= cdistance c, f0 b0 cdistance c, b0 f0 f1
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (_2080892 = _2080893) |- ((_2080892 = _2080893) /\ ((collinear _2080893) \/ (~ (collinear _2080892))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- ((distance (A , B)) = (distance (A' , B'))) |- ((~ ((distance (A , B)) = (distance (A' , B')))) ==> ((distance (A , B)) = (distance (A' , B'))))
T c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c~ c= cdistance c, f0 f1 cdistance c, f2 f3 c= cdistance c, f0 f1 cdistance c, f2 f3
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) |- ((\A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) _2080863)
T c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 * / ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 f0
- |- (((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F))))))))) ==> ((~ (A = B)) ==> (((angle (A , (B , C))) = (angle (A' , (B' , C')))) ==> (((distance (A , B)) = (distance (A' , B'))) ==> (((angle (B , (A , C))) = (angle (B' , (A' , C')))) ==> ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) ==> ((A' = B') ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> ((!x. (!y. (((distance (x , y)) = (real_of_num (NUMERAL _0))) = (x = y)))) ==> F))))))))))
T c==> c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 f4 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 cF c==> c~ c= f0 f1 c==> c= cangle c, f0 c, f1 f2 cangle c, f3 c, f4 f5 c==> c= cdistance c, f0 f1 cdistance c, f3 f4 c==> c= cangle c, f1 c, f0 f2 cangle c, f4 c, f3 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 f4 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 c==> ! ! c= c= cdistance c, b0 b1 creal_of_num cNUMERAL c_0 c= b0 b1 cF
- (_2080942 = _2080944) |- ((_2080943 = _2080945) ==> ((_2080942 , _2080943) = (_2080944 , _2080945)))
T c==> c= f0 f1 c==> c= f2 f3 c= c, f0 f2 c, f1 f3
- (((((real_add a) ((real_add b) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0))) /\ (((real_add a) ((real_add b) ((real_add y) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)))) = (real_of_num (NUMERAL _0)))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ c/\ c= creal_add f0 creal_add f1 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 c= creal_add f0 creal_add f1 creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (A' = B') |- ((~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) = (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))))
T c==> c= f0 f1 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!A. (!B. (!C. ((angle (A , (B , C))) = (angle (C , (B , A))))))) |- (!C. ((angle (_2080863 , (_2080864 , C))) = (angle (C , (_2080864 , _2080863)))))
T c==> ! ! ! c= cangle c, b0 c, b1 b2 cangle c, b2 c, b1 b0 ! c= cangle c, f0 c, f1 b0 cangle c, b0 c, f1 f0
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))) |- ((collinear (A INSERT (B INSERT (C INSERT EMPTY)))) ==> (~ (collinear (A INSERT (B INSERT (C INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((distance (A , B)) = (distance (A' , B'))), (A' = B') |- ((~ ((distance (A , B)) = (distance (B' , B')))) ==> ((distance (A , B)) = (distance (B' , B'))))
T c==> c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c= f2 f3 c==> c~ c= cdistance c, f0 f1 cdistance c, f3 f3 c= cdistance c, f0 f1 cdistance c, f3 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
