N Aq11.find_list_e_list_const
C |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((find_list (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) (e_list x)) = ((find_list N) (e_list x))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c= cfind_list cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 ce_list f3 cfind_list f1 ce_list f3
D TRUTH
A |- T
T cT
D List_hypermap.mem_find_list
A |- (!x. (!L. (((MEM x) (flatten L)) ==> ((MEM ((find_list L) x)) L))))
T c==> cMEM f0 cflatten f1 cMEM cfind_list f1 f0 f1
D Tame_list.mem_find_list1
A |- (!L. (!x. (((MEM x) (flatten L)) ==> ((MEM x) ((find_list L) x)))))
T c==> cMEM f0 cflatten f1 cMEM f0 cfind_list f1 f0
D Tame_list.find_list_uniq
A |- (!L. (!s. (!x. (((uniq (flatten L)) /\ (((MEM x) s) /\ ((MEM s) L))) ==> (((find_list L) x) = s)))))
T c==> c/\ cuniq cflatten f0 c/\ cMEM f1 f2 cMEM f2 f0 c= cfind_list f0 f1 f2
D Aq1.AQ1
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 cuniq cflatten cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
D Aq9.element_in_ntrans_suc
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((MEM f1) N) /\ (~ (f1 = r)))))) ==> ((MEM f1) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ cMEM f4 f1 c~ c= f4 f2 cMEM f4 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
D Aq11.e_list_mem_flatten
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (e_list x)) (flatten N)))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM ce_list f3 cflatten f1
D Aq11.find_list_e_not_r
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ (((find_list N) (e_list x)) = r)))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c~ c= cfind_list f1 ce_list f3 f2
+ |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ (((find_list N) (e_list x)) = r)))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ (((find_list N) (e_list x)) = r)))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ (((find_list N) (e_list x)) = r)))) x))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c~ c= cfind_list f1 ce_list b0 f2 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c~ c= cfind_list f1 ce_list b0 f2 f3 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c~ c= cfind_list f1 ce_list b0 f2 f3
+ (good_list L), (good_list_nodes L), (((find_list N) (e_list x)) = f1), ((MEM (e_list x)) (flatten N)), ((((marked_list L) N) r) x) |- (((MEM f1) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((find_list (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) (e_list x)) = f1))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cfind_list f1 ce_list f2 f3 c==> cMEM ce_list f2 cflatten f1 c==> cmarked_list f0 f1 f4 f2 c==> cMEM f3 cntrans f0 f1 f4 f2 cNUMERAL cBIT1 c_0 c= cfind_list cntrans f0 f1 f4 f2 cNUMERAL cBIT1 c_0 ce_list f2 f3
+ ((MEM (e_list x)) f1) |- (((MEM (e_list x)) f1) = T)
T c==> cMEM ce_list f0 f1 c= cMEM ce_list f0 f1 cT
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((MEM f1) N) /\ (~ (f1 = r)))))) ==> ((MEM f1) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ cMEM f3 f1 c~ c= f3 f2 cMEM f3 cntrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 f4
+ |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((MEM f1) N) /\ (~ (f1 = r)))))) ==> ((MEM f1) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))) r)
T * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ cMEM f2 f1 c~ c= f2 b0 cMEM f2 cntrans f0 f1 b0 b1 cNUMERAL cBIT1 c_0 f3
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ (!L. (!s. (!x. (((uniq (flatten L)) /\ (((MEM x) s) /\ ((MEM s) L))) ==> (((find_list L) x) = s))))) |- ((((uniq (flatten L)) /\ (((MEM x) s) /\ ((MEM s) L))) ==> (((find_list L) x) = s)) = T)
T c==> ! ! ! c==> c/\ cuniq cflatten b0 c/\ cMEM b2 b1 cMEM b1 b0 c= cfind_list b0 b2 b1 c= c==> c/\ cuniq cflatten f0 c/\ cMEM f1 f2 cMEM f2 f0 c= cfind_list f0 f1 f2 cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((find_list N) (e_list x)) = f1), ((MEM (e_list x)) (flatten N)), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ (((find_list N) (e_list x)) = r))) ==> (((find_list (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) (e_list x)) = f1))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cfind_list f2 ce_list f3 f4 c==> cMEM ce_list f3 cflatten f2 c==> cmarked_list f0 f2 f1 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c~ cfinal_list f0 f1 c~ c= cfind_list f2 ce_list f3 f1 c= cfind_list cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 ce_list f3 f4
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (e_list x)) (flatten N))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM ce_list b3 cflatten b1 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((find_list N) (e_list x)) = f1), ((((marked_list L) N) r) x) |- (((~ (f1 = r)) ==> (((find_list (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) (e_list x)) = f1)) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ (((find_list N) (e_list x)) = r))) ==> (((find_list (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) (e_list x)) = f1)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cfind_list f2 ce_list f3 f4 c==> cmarked_list f0 f2 f1 f3 c= c==> c~ c= f4 f1 c= cfind_list cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 ce_list f3 f4 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c~ cfinal_list f0 f1 c~ c= cfind_list f2 ce_list f3 f1 c= cfind_list cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 ce_list f3 f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((find_list N) (e_list x)) = f1), ((MEM (e_list x)) (flatten N)), ((((marked_list L) N) r) x) |- (((MEM (e_list x)) (flatten N)) /\ (((find_list (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) (e_list x)) = f1))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cfind_list f2 ce_list f3 f4 c==> cMEM ce_list f3 cflatten f2 c==> cmarked_list f0 f2 f1 f3 c/\ cMEM ce_list f3 cflatten f2 c= cfind_list cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 ce_list f3 f4
+ |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 b0 cuniq cflatten cntrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 f3
+ (!L. (!s. (!x. (((uniq (flatten L)) /\ (((MEM x) s) /\ ((MEM s) L))) ==> (((find_list L) x) = s))))) |- ((!L. (!s. (!x. (((uniq (flatten L)) /\ (((MEM x) s) /\ ((MEM s) L))) ==> (((find_list L) x) = s))))) /\ (!L. (!x. (!s. (((uniq (flatten L)) /\ (((MEM x) s) /\ ((MEM s) L))) ==> (((find_list L) x) = s))))))
T c==> ! ! ! c==> c/\ cuniq cflatten b0 c/\ cMEM b2 b1 cMEM b1 b0 c= cfind_list b0 b2 b1 c/\ ! ! ! c==> c/\ cuniq cflatten b0 c/\ cMEM b2 b1 cMEM b1 b0 c= cfind_list b0 b2 b1 ! ! ! c==> c/\ cuniq cflatten b0 c/\ cMEM b1 b2 cMEM b2 b0 c= cfind_list b0 b1 b2
+ (((find_list N) (e_list x)) = f1) |- ((((find_list (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) (e_list x)) = f1) = (((find_list (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) (e_list x)) = ((find_list N) (e_list x))))
T c==> c= cfind_list f0 ce_list f1 f2 c= c= cfind_list cntrans f3 f0 f4 f1 cNUMERAL cBIT1 c_0 ce_list f1 f2 c= cfind_list cntrans f3 f0 f4 f1 cNUMERAL cBIT1 c_0 ce_list f1 cfind_list f0 ce_list f1
+ |- ((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((find_list (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) (e_list x)) = ((find_list N) (e_list x))))) = T)
T c= ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c= cfind_list cntrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 ce_list b0 cfind_list f1 ce_list b0 cT
- (!L. (!s. (!x. (((uniq (flatten L)) /\ (((MEM x) s) /\ ((MEM s) L))) ==> (((find_list L) x) = s))))), ((uniq (flatten L)) /\ (((MEM x) s) /\ ((MEM s) L))) |- ((!L. (!s. (!x. (((uniq (flatten L)) /\ (((MEM x) s) /\ ((MEM s) L))) ==> (((find_list L) x) = s))))) /\ (((find_list L) x) = s))
T c==> ! ! ! c==> c/\ cuniq cflatten b0 c/\ cMEM b2 b1 cMEM b1 b0 c= cfind_list b0 b2 b1 c==> c/\ cuniq cflatten f0 c/\ cMEM f1 f2 cMEM f2 f0 c/\ ! ! ! c==> c/\ cuniq cflatten b0 c/\ cMEM b2 b1 cMEM b1 b0 c= cfind_list b0 b2 b1 c= cfind_list f0 f1 f2
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((\f1. (((find_list N) (e_list x)) = f1)) f1) ==> (((find_list (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) (e_list x)) = ((find_list N) (e_list x))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> * / c= cfind_list f2 ce_list f3 b0 f4 c= cfind_list cntrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 ce_list f3 cfind_list f2 ce_list f3
+ (~ (f1 = r)), (good_list L), (good_list_nodes L), (((find_list N) (e_list x)) = f1), ((MEM (e_list x)) (flatten N)), ((MEM f1) N), ((((marked_list L) N) r) x) |- (((MEM f1) N) /\ (((find_list (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) (e_list x)) = f1))
T c==> c~ c= f0 f1 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cfind_list f3 ce_list f4 f0 c==> cMEM ce_list f4 cflatten f3 c==> cMEM f0 f3 c==> cmarked_list f2 f3 f1 f4 c/\ cMEM f0 f3 c= cfind_list cntrans f2 f3 f1 f4 cNUMERAL cBIT1 c_0 ce_list f4 f0
+ |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ (((find_list N) (e_list x)) = r)))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c~ c= cfind_list f1 ce_list b0 f2 f3
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) ==> (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) = (uniq (flatten (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 cuniq cflatten cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cuniq cflatten cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cuniq cflatten cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
+ |- (?f1. (((find_list N) (e_list x)) = f1))
T c? / c= cfind_list f0 ce_list f1 b0
+ (~ (f1 = r)), (good_list L), (good_list_nodes L), (((find_list N) (e_list x)) = f1), ((MEM (e_list x)) (flatten N)), ((((marked_list L) N) r) x) |- (((find_list (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) (e_list x)) = f1)
T c==> c~ c= f0 f1 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cfind_list f3 ce_list f4 f0 c==> cMEM ce_list f4 cflatten f3 c==> cmarked_list f2 f3 f1 f4 c= cfind_list cntrans f2 f3 f1 f4 cNUMERAL cBIT1 c_0 ce_list f4 f0
- |- ((((find_list N) (e_list x)) = f1) ==> (?f1. (((find_list N) (e_list x)) = f1)))
T c==> c= cfind_list f0 ce_list f1 f2 c? / c= cfind_list f0 ce_list f1 b0
- (!L. (!s. (!x. (((uniq (flatten L)) /\ (((MEM x) s) /\ ((MEM s) L))) ==> (((find_list L) x) = s))))), ((uniq (flatten L)) /\ (((MEM x) s) /\ ((MEM s) L))) |- (((uniq (flatten L)) /\ (((MEM x) s) /\ ((MEM s) L))) /\ (((find_list L) x) = s))
T c==> ! ! ! c==> c/\ cuniq cflatten b0 c/\ cMEM b2 b1 cMEM b1 b0 c= cfind_list b0 b2 b1 c==> c/\ cuniq cflatten f0 c/\ cMEM f1 f2 cMEM f2 f0 c/\ c/\ cuniq cflatten f0 c/\ cMEM f1 f2 cMEM f2 f0 c= cfind_list f0 f1 f2
- |- (((!f1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((MEM f1) N) /\ (~ (f1 = r)))))) ==> ((MEM f1) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))) ==> ((\f1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((MEM f1) N) /\ (~ (f1 = r)))))) ==> ((MEM f1) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))) f1)) = ((\f1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((MEM f1) N) /\ (~ (f1 = r)))))) ==> ((MEM f1) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))) f1))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ cMEM b0 b2 c~ c= b0 b3 cMEM b0 cntrans b1 b2 b3 b4 cNUMERAL cBIT1 c_0 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ cMEM b0 b2 c~ c= b0 b3 cMEM b0 cntrans b1 b2 b3 b4 cNUMERAL cBIT1 c_0 f0 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ cMEM b0 b2 c~ c= b0 b3 cMEM b0 cntrans b1 b2 b3 b4 cNUMERAL cBIT1 c_0 f0
- (~ (f1 = r)) |- (((~ (r = f1)) ==> ((r = f1) = F)) = ((r = f1) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
- |- ((?f1. (((find_list N) (e_list x)) = f1)) ==> (?f1. (((find_list N) (e_list x)) = f1)))
T c==> c? / c= cfind_list f0 ce_list f1 b0 c? / c= cfind_list f0 ce_list f1 b0
- |- ((((find_list N) (e_list x)) = f1) = ((\f1. (((find_list N) (e_list x)) = f1)) f1))
T c= c= cfind_list f0 ce_list f1 f2 * / c= cfind_list f0 ce_list f1 b0 f2
- |- ((\f1. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((MEM f1) N) /\ (~ (f1 = r)))))) ==> ((MEM f1) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))) f1)
T * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ cMEM b0 b2 c~ c= b0 b3 cMEM b0 cntrans b1 b2 b3 b4 cNUMERAL cBIT1 c_0 f0
- |- ((x = x) = T)
T c= c= f0 f0 cT
- (r = f1) |- (f1 = r)
T c==> c= f0 f1 c= f1 f0
- |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((MEM f1) N) /\ (~ (f1 = r)))))) ==> ((MEM f1) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))))) = T)
T c= ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ cMEM f0 b1 c~ c= f0 b2 cMEM f0 cntrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 cT
- (((find_list N) (e_list x)) = f1) |- ((((find_list N) (e_list x)) = f1) /\ (?f1. (((find_list N) (e_list x)) = f1)))
T c==> c= cfind_list f0 ce_list f1 f2 c/\ c= cfind_list f0 ce_list f1 f2 c? / c= cfind_list f0 ce_list f1 b0
- |- (((!x. (((\f1. (((find_list N) (e_list x)) = f1)) x) ==> (?f1. (((find_list N) (e_list x)) = f1)))) ==> ((?f1. (((find_list N) (e_list x)) = f1)) ==> (?f1. (((find_list N) (e_list x)) = f1)))) = ((?f1. (((find_list N) (e_list x)) = f1)) ==> (?f1. (((find_list N) (e_list x)) = f1))))
T c= c==> ! c==> * / c= cfind_list f0 ce_list f1 b1 b0 c? / c= cfind_list f0 ce_list f1 b1 c==> c? / c= cfind_list f0 ce_list f1 b0 c? / c= cfind_list f0 ce_list f1 b0 c==> c? / c= cfind_list f0 ce_list f1 b0 c? / c= cfind_list f0 ce_list f1 b0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (((find_list N) (e_list x)) = f1) |- ((\f1. (((find_list N) (e_list x)) = f1)) f1)
T c==> c= cfind_list f0 ce_list f1 f2 * / c= cfind_list f0 ce_list f1 b0 f2
- (~ (f1 = r)) |- (~ (r = f1))
T c==> c~ c= f0 f1 c~ c= f1 f0
- (~ (f1 = r)) |- ((r = f1) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- |- ((((\f1. (((find_list N) (e_list x)) = f1)) f1) ==> (?f1. (((find_list N) (e_list x)) = f1))) = T)
T c= c==> * / c= cfind_list f0 ce_list f1 b0 f2 c? / c= cfind_list f0 ce_list f1 b0 cT
- ((\f1. (((find_list N) (e_list x)) = f1)) f1) |- (((\f1. (((find_list N) (e_list x)) = f1)) f1) /\ (?f1. (((find_list N) (e_list x)) = f1)))
T c==> * / c= cfind_list f0 ce_list f1 b0 f2 c/\ * / c= cfind_list f0 ce_list f1 b0 f2 c? / c= cfind_list f0 ce_list f1 b0
- ((\f1. (((find_list N) (e_list x)) = f1)) f1) |- (((((find_list N) (e_list x)) = f1) ==> (?f1. (((find_list N) (e_list x)) = f1))) = (?f1. (((find_list N) (e_list x)) = f1)))
T c==> * / c= cfind_list f0 ce_list f1 b0 f2 c= c==> c= cfind_list f0 ce_list f1 f2 c? / c= cfind_list f0 ce_list f1 b0 c? / c= cfind_list f0 ce_list f1 b0
- ((uniq (flatten L)) /\ (((MEM x) s) /\ ((MEM s) L))) |- ((!L. (!s. (!x. (((uniq (flatten L)) /\ (((MEM x) s) /\ ((MEM s) L))) ==> (((find_list L) x) = s))))) ==> (((find_list L) x) = s))
T c==> c/\ cuniq cflatten f0 c/\ cMEM f1 f2 cMEM f2 f0 c==> ! ! ! c==> c/\ cuniq cflatten b0 c/\ cMEM b2 b1 cMEM b1 b0 c= cfind_list b0 b2 b1 c= cfind_list f0 f1 f2
- |- (!f1. (((\f1. (((find_list N) (e_list x)) = f1)) f1) ==> (?f1. (((find_list N) (e_list x)) = f1))))
T c==> * / c= cfind_list f0 ce_list f1 b0 f2 c? / c= cfind_list f0 ce_list f1 b0
