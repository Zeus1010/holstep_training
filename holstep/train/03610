N Cfyxfty.CLOSURE_AFF_GT_1_3_EQ_AFF_GE_1_3
C |- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D OPEN_INTER
A |- (!s. (!t. (((open s) /\ (open t)) ==> (open (s INTER t)))))
T c==> c/\ copen f0 copen f1 copen * * part cINTER f0 f1
D CONVEX_INTER
A |- (!s. (!t. (((convex s) /\ (convex t)) ==> (convex (s INTER t)))))
T c==> c/\ cconvex f0 cconvex f1 cconvex * * part cINTER f0 f1
D CLOSURE_INTER_CONVEX_OPEN
A |- (!s. (!t. (((convex s) /\ ((open s) /\ ((convex t) /\ (open t)))) ==> ((closure (s INTER t)) = (((COND ((s INTER t) = EMPTY)) EMPTY) ((closure s) INTER (closure t)))))))
T c==> c/\ cconvex f0 c/\ copen f0 c/\ cconvex f1 copen f1 c= * part cclosure * * part cINTER f0 f1 * * * part cCOND c= * * part cINTER f0 f1 part cEMPTY part cEMPTY * * part cINTER * part cclosure f0 * part cclosure f1
D CONVEX_AFF_GT
A |- (!s. (!t. (convex ((aff_gt s) t))))
T cconvex * * part caff_gt f0 f1
D Planarity.inter_aff_gt_3_1_is_aff_gt_1_3
A |- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
D Planarity.notcoplanar_4point_aff_gt_1_3_not_empty
A |- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY
D Conforming.OPEN_AFF_GT_3_1
A |- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
D Cfyxfty.inter_aff_ge_3_1_is_aff_ge_1_3
A |- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
D Cfyxfty.CLOSURE_AFF_GT_3_1_EQ_AFF_GE_3_1
A |- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
- ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY) |- (EMPTY = (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))
T c==> c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c= part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- (~ F), (~ (A x)), ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c/\ c~ cF cF
- |- ((!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x))))) = T)
T c= ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cT
+ (~ (A x)), ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- ((~ (A x)) /\ F)
T c==> c~ * f0 f1 c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 c/\ c~ * f0 f1 cF
- ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F), (((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F) ==> ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F)) |- ((((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F) ==> ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F)) /\ ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F))
T c==> c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c/\ c==> c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
- |- ((!w. (!u. (!v. (!x. (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))))))))) = (!w. (!u. (!v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))))))
T c= ! ! ! ! ! c= c\/ c= b4 b3 c\/ c= b4 b1 c\/ c= b4 b0 c= b4 b2 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 ! ! ! ! c==> c~ ! c= c\/ c= b4 b3 c\/ c= b4 b1 c\/ c= b4 b0 c= b4 b2 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF
+ ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))), ((~ (A x)) \/ (~ (B x))) |- (((~ (A x)) \/ (~ (B x))) /\ F)
T c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c==> c\/ c~ * f0 f1 c~ * f2 f1 c/\ c\/ c~ * f0 f1 c~ * f2 f1 cF
+ |- (((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) ==> F)
T c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 cF
+ ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- (((C x) ==> F) = F)
T c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c= c==> * f3 f1 cF cF
- (((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) |- ((((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) /\ (((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c/\ c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
- (x' = x), (((~ (x' = x)) /\ ((~ (x' = w)) /\ ((~ (x' = v)) /\ (~ (x' = u))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (x = u))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c~ c= f1 f4
- (~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) |- ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) /\ F)
T c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 c/\ c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF
+ (~ (C x)), ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- ((~ (C x)) /\ F)
T c==> c~ * f0 f1 c==> c/\ c\/ c\/ c~ * f2 f1 c~ * f3 f1 c~ * f0 f1 c/\ * f2 f1 c/\ * f3 f1 * f0 f1 c/\ c~ * f0 f1 cF
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) |- (((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- (((!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY))))))) ==> ((\x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY))))))) x)) = ((\x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY))))))) x))
T c= c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ c= * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY part cEMPTY * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ c= * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY part cEMPTY f0 * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ c= * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY part cEMPTY f0
- (x' = v) |- ((~ (x' = w)) = (~ (v = w)))
T c==> c= f0 f1 c= c~ c= f0 f2 c~ c= f1 f2
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) |- ((convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- ((\t. (((convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) /\ ((open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) /\ ((convex t) /\ (open t)))) ==> ((closure ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER t)) = (((COND (((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER t) = EMPTY)) EMPTY) ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) INTER (closure t)))))) ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))
T * / c==> c/\ cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cconvex b0 copen b0 c= * part cclosure * * part cINTER * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 * * * part cCOND c= * * part cINTER * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 part cEMPTY part cEMPTY * * part cINTER * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- (((!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))))) ==> ((\x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))))) x)) = ((\x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))))) x))
T c= c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0 * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- (((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (A x)), ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- ((~ (A x)) /\ F)
T c==> c~ * f0 f1 c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c/\ c~ * f0 f1 cF
+ |- ((\w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))) w)
T * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (v = v)) ==> (v = v))
T c==> c~ c= f0 f0 c= f0 f0
- ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- ((~ (B x)) ==> (B x))
T c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c==> c~ * f2 f1 * f2 f1
- (x' = x), (((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (x = w))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f4 c\/ c= f0 f2 c= f0 f3 c~ c= f1 f3
- (x' = w), (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (w = u))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c~ c= f1 f4
- (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = EMPTY)) |- (((~ (EMPTY = (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))) ==> ((EMPTY = (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = F)) = ((EMPTY = (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = F))
T c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c= c==> c~ c= part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= c= part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY cF c= c= part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY cF
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) |- ((~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)) /\ ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) |- (((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F) |- ((((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F) ==> ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F)) ==> ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F))
T c==> c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
+ |- (((!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))))))) ==> ((\x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))))))) x)) = ((\x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))))))) x))
T c= c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY copen * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY copen * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY f0 * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY copen * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY f0
+ |- ((((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))) = ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))
T c= c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (x' = x), (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (x = v))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c~ c= f1 f3
- ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x'))) |- ((~ (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x')) ==> (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x'))
T c==> c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 c==> c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4
- (~ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')), ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x'))) |- ((~ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')) /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))
T c==> c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c==> c/\ caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c/\ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4
- (x' = v), (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (v = x))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f4 c~ c= f0 f3 c~ c= f1 f2
- (x' = v), (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (v = w))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f1 f4
+ |- ((((~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)) ==> (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = EMPTY))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c= c==> c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))) |- (((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x'))) ==> F)
T c==> ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c==> c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 cF
+ ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))), ((~ (A x)) ==> F), (((~ (B x)) \/ (~ (C x))) ==> F) |- F
T c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 c==> c==> c~ * f0 f1 cF c==> c==> c\/ c~ * f2 f1 c~ * f3 f1 cF cF
+ |- ((((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = ((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = (((~ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = ((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))))
T c= c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- |- ((((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) = ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))
T c= c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF
- (x' = v), (((~ (x' = x)) /\ ((~ (x' = w)) /\ ((~ (x' = v)) /\ (~ (x' = u))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f4 c= f0 f3 c==> c~ cF cF
- ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- ((~ (C x)) ==> (C x))
T c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 c==> c~ * f3 f1 * f3 f1
+ |- ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))) v)
T * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
- |- ((\w. (!u. (!x. ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F)))) w)
T * / ! ! c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT b2 * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b3 c/\ caff_gt * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_gt * * part cINSERT b2 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 c~ ! c~ c/\ caff_gt * * part cINSERT b2 * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b3 caff_gt * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 cF f1
+ |- ((\t. (((open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ (open t)) ==> (open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER t)))) ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))
T * / c==> c/\ copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY copen b0 copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY
- (x' = u), (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (u = w))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f1 c~ c= f0 f3 c~ c= f1 f3
+ ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- (((B x) ==> F) = F)
T c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 c= c==> * f2 f1 cF cF
- ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) |- (((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) /\ ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c/\ c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF
- |- ((!x. (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) = T)
T c= ! ! c= c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 c\/ c= b1 b0 c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f0 cT
+ |- (((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))))) = ((~ (!x'. ((x' IN (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (x' IN EMPTY)))) ==> (~ (!x'. ((x' IN (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = (x' IN EMPTY))))))
T c= c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c==> c~ ! c= cIN b0 * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b0 part cEMPTY c~ ! c= cIN b0 * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY cIN b0 part cEMPTY
- |- (((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F) ==> ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F))
T c==> c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
+ ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- (A x)
T c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 * f0 f1
+ ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- ((A x) /\ (B x))
T c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 * f2 f1
+ |- (((convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ ((open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ ((convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) /\ (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = (((COND ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = EMPTY)) EMPTY) ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))))))
T c==> c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * * part cCOND c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY
- (~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) |- F
T c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF
+ ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- ((B x) /\ (C x))
T c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c/\ * f2 f1 * f3 f1
+ ((\x'. ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))) x') |- ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))
T c==> * / c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 f4 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4
- (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = EMPTY)) |- (~ (EMPTY = (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))))
T c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c~ c= part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY
- ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) |- ((((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) ==> ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
- ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F), (((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) |- ((((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) /\ ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c/\ c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF
- (x' = x), (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (x = v))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f4 c/\ c~ c= f0 f2 c~ c= f0 f3 c~ c= f1 f4
- (~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) |- ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) /\ F)
T c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 c/\ c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
+ |- ((\u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY))))) u)
T * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY part cEMPTY f2
+ ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- (((~ (A x)) \/ (~ (B x))) ==> F)
T c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c==> c\/ c~ * f0 f1 c~ * f2 f1 cF
+ (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) |- ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) /\ (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))
T c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c/\ c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F), (((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) |- (((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) /\ ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c/\ c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- ((((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) ==> (((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = (((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))) ==> (((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- (((open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = (((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- |- ((!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))))) = T)
T c= ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY cT
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) |- ((open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) /\ ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- (~ F), (~ (C x)), ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> c/\ c/\ c/\ * f2 f1 * f3 f1 * f0 f1 c\/ c~ * f2 f1 c\/ c~ * f3 f1 c~ * f0 f1 c/\ c~ cF cF
+ |- (((!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))) ==> ((\u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))) u)) = ((\u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))) u))
T c= c==> ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
- ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) |- ((((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) ==> ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF
+ |- ((\t. (((convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ (convex t)) ==> (convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER t)))) ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))
T * / c==> c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY cconvex b0 cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- (((((open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) ==> (open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c= c==> c==> c/\ copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) |- (((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) /\ ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)) |- (~ (EMPTY = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))
T c==> c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c~ c= part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) |- ((~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)) |- (((~ (EMPTY = (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) ==> ((EMPTY = (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = F)) = ((EMPTY = (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = F))
T c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c= c==> c~ c= part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c= part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cF c= c= part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cF
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- (((!u. (!v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)))) ==> ((\u. (!v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)))) u)) = ((\u. (!v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)))) u))
T c= c==> ! ! ! c==> c~ ! c= c\/ c= b3 b2 c\/ c= b3 f0 c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF * / ! ! c==> c~ ! c= c\/ c= b3 b2 c\/ c= b3 f0 c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1 * / ! ! c==> c~ ! c= c\/ c= b3 b2 c\/ c= b3 f0 c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1
- |- ((!A. t) = t)
T c= ! f0 f0
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- (((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- ((\u'. (!w. ((~ (coplanar (x INSERT (u INSERT (u' INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (u INSERT (u' INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (u INSERT (u' INSERT EMPTY)))) (w INSERT EMPTY)))))) w)
T * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY f2
- (x' = u), (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (u = v))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f1 c~ c= f0 f3 c~ c= f1 f4
- (~ F), (x' = x), (((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f4 c\/ c= f0 f2 c= f0 f3 c/\ c~ cF cF
- |- ((\w. (!u. (!v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))))) w)
T * / ! ! ! c==> c~ ! c= c\/ c= b4 b3 c\/ c= b4 b1 c\/ c= b4 b0 c= b4 b2 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0
+ (~ (C x)), ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- ((~ (C x)) /\ F)
T c==> c~ * f0 f1 c==> c/\ c/\ c/\ * f2 f1 * f3 f1 * f0 f1 c\/ c~ * f2 f1 c\/ c~ * f3 f1 c~ * f0 f1 c/\ c~ * f0 f1 cF
- ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x'))) |- (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')
T c==> c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4
+ (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) |- ((open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) = T)
T c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY cT
- |- ((!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))))))) = T)
T c= ! ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY cT
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- (~ (A x)), ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- ((~ (A x)) /\ (A x))
T c==> c~ * f0 f1 c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c/\ c~ * f0 f1 * f0 f1
- (x' = u), (((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (u = x))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f1 c= f0 f3 c~ c= f1 f2
+ |- (((A INTER B) INTER C) = (A INTER (B INTER C)))
T c= * * part cINTER * * part cINTER f0 f1 f2 * * part cINTER f0 * * part cINTER f1 f2
- ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- ((~ (A x)) ==> (A x))
T c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 c==> c~ * f0 f1 * f0 f1
+ (~ (B x)), ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- F
T c==> c~ * f0 f1 c==> c/\ c\/ c\/ c~ * f2 f1 c~ * f0 f1 c~ * f3 f1 c/\ * f2 f1 c/\ * f0 f1 * f3 f1 cF
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?x'. t) = t)
T c= c? / f0 f0
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) |- ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), ((~ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = ((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) |- (((~ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = ((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) /\ ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) |- ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- (x' = v), (((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (v = x))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c~ c= f1 f2
+ ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) |- (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))
T c==> c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- (x' = x), (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f4 c/\ c~ c= f0 f2 c~ c= f0 f3 c==> c~ cF cF
+ (~ ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x))))) |- (((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) \/ ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))))
T c==> c~ c= c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c\/ c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1
+ ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- (((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) /\ F)
T c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c/\ c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 cF
+ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) |- (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))
T c==> c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- |- ((((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F) ==> ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F)) ==> (((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F) ==> ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F)))
T c==> c==> c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
- (x' = w), (((~ (x' = x)) /\ ((~ (x' = w)) /\ ((~ (x' = v)) /\ (~ (x' = u))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (w = v))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c~ c= f1 f3
+ |- (((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))) = T)
T c= c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))), ((\x'. ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))) x') |- (((\x'. ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))) x') /\ F)
T c==> ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c==> * / c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 f4 c/\ * / c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 f4 cF
- |- ((\v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))) v)
T * / ! c==> c~ ! c= c\/ c= b2 b1 c\/ c= b2 f0 c\/ c= b2 b0 c= b2 f1 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f1 c= b2 f0 cF f2
- (x' = u), (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (u = x))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f1 c~ c= f0 f3 c~ c= f1 f2
- |- (((!v. (!w. (!u. (!x. ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F))))) ==> ((\v. (!w. (!u. (!x. ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F))))) v)) = ((\v. (!w. (!u. (!x. ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F))))) v))
T c= c==> ! ! ! ! c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT b3 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY b4 c/\ caff_gt * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_gt * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 c~ ! c~ c/\ caff_gt * * part cINSERT b3 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY b4 caff_gt * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 cF * / ! ! ! c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT b3 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY b4 c/\ caff_gt * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_gt * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 c~ ! c~ c/\ caff_gt * * part cINSERT b3 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY b4 caff_gt * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 cF f0 * / ! ! ! c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT b3 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY b4 c/\ caff_gt * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_gt * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 c~ ! c~ c/\ caff_gt * * part cINSERT b3 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY b4 caff_gt * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 cF f0
- (x' = u), (((~ (x' = x)) /\ ((~ (x' = w)) /\ ((~ (x' = v)) /\ (~ (x' = u))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (u = w))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f1 c= f0 f3 c~ c= f1 f3
+ ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- ((~ (B x)) ==> F)
T c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c==> c~ * f2 f1 cF
- (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)) |- ((((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY) = F)
T c==> c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c= c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY cF
+ ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))), ((~ (C x)) ==> F), ((~ (B x)) \/ (~ (C x))) |- F
T c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 c==> c==> c~ * f3 f1 cF c==> c\/ c~ * f2 f1 c~ * f3 f1 cF
+ |- ((\w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)))) w)
T * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY part cEMPTY f3
- (~ F), (x' = w), (((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f3 c= f0 f1 c/\ c~ cF cF
- ((~ (coplanar (x INSERT (w INSERT (v INSERT (u INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) |- (((~ (coplanar (x INSERT (w INSERT (v INSERT (u INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = T)
T c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY cT
- ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x'))) |- ((~ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')) ==> (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))
T c==> c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 c==> c~ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- (~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) |- F
T c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- |- (((!w. (!u. (!x. ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F)))) ==> ((\w. (!u. (!x. ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F)))) w)) = ((\w. (!u. (!x. ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F)))) w))
T c= c==> ! ! ! c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT b2 * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b3 c/\ caff_gt * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_gt * * part cINSERT b2 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 c~ ! c~ c/\ caff_gt * * part cINSERT b2 * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b3 caff_gt * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 cF * / ! ! c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT b2 * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b3 c/\ caff_gt * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_gt * * part cINSERT b2 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 c~ ! c~ c/\ caff_gt * * part cINSERT b2 * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b3 caff_gt * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 cF f1 * / ! ! c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT b2 * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b3 c/\ caff_gt * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_gt * * part cINSERT b2 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 c~ ! c~ c/\ caff_gt * * part cINSERT b2 * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b3 caff_gt * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 cF f1
+ |- (((~ ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x))))) ==> F) = ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))
T c= c==> c~ c= c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 cF c= c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1
- |- (((!x. ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) ==> ((\x. ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) x)) = ((\x. ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) x))
T c= c==> ! c==> c~ ! c= c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 c\/ c= b1 b0 c\/ c= b1 f2 c\/ c= b1 f0 c= b1 f1 cF * / c==> c~ ! c= c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 c\/ c= b1 b0 c\/ c= b1 f2 c\/ c= b1 f0 c= b1 f1 cF f3 * / c==> c~ ! c= c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 c\/ c= b1 b0 c\/ c= b1 f2 c\/ c= b1 f0 c= b1 f1 cF f3
+ |- (((!t. (((convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ ((open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ ((convex t) /\ (open t)))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER t)) = (((COND ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER t) = EMPTY)) EMPTY) ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER (closure t)))))) ==> ((\t. (((convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ ((open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ ((convex t) /\ (open t)))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER t)) = (((COND ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER t) = EMPTY)) EMPTY) ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER (closure t)))))) ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = ((\t. (((convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ ((open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ ((convex t) /\ (open t)))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER t)) = (((COND ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER t) = EMPTY)) EMPTY) ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER (closure t)))))) ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))
T c= c==> ! c==> c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cconvex b0 copen b0 c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 * * * part cCOND c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 part cEMPTY part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure b0 * / c==> c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cconvex b0 copen b0 c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 * * * part cCOND c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 part cEMPTY part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * / c==> c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cconvex b0 copen b0 c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 * * * part cCOND c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 part cEMPTY part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- (((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))) |- (!x'. (((\x'. ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))) x') ==> F))
T c==> ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 ! c==> * / c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b1 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b1 b0 cF
+ |- ((((~ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = ((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c= c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY
- (~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) |- ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) /\ F)
T c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 c/\ c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF
+ ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))), ((~ (C x)) ==> F) |- F
T c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c==> c==> c~ * f3 f1 cF cF
- |- ((!x''. ((~ (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x'')) \/ (~ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))) = ((!x'. (~ (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x'))) \/ (~ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))
T c= ! c\/ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c~ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c\/ ! c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c~ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4
+ ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- (((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) /\ F)
T c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 c/\ c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 cF
+ ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) |- (((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))
T c==> c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x'))) |- (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')
T c==> c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4
+ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) |- (((~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))))
T c==> c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (~ (C x)) |- ((C x) ==> F)
T c==> c~ * f0 f1 c==> * f0 f1 cF
- |- (((!B. (!A. ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F))) ==> ((\B. (!A. ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F))) B)) = ((\B. (!A. ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F))) B))
T c= c==> ! ! c==> c~ ! c= c/\ c/\ * b1 b2 * b0 b2 * f0 b2 c/\ * b1 b2 c/\ * b0 b2 * f0 b2 cF * / ! c==> c~ ! c= c/\ c/\ * b1 b2 * b0 b2 * f0 b2 c/\ * b1 b2 c/\ * b0 b2 * f0 b2 cF f1 * / ! c==> c~ ! c= c/\ c/\ * b1 b2 * b0 b2 * f0 b2 c/\ * b1 b2 c/\ * b0 b2 * f0 b2 cF f1
- |- ((\B. (!A. ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F))) B)
T * / ! c==> c~ ! c= c/\ c/\ * b1 b2 * b0 b2 * f0 b2 c/\ * b1 b2 c/\ * b0 b2 * f0 b2 cF f1
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) |- ((open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- (((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- ((((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c= c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- (((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) ==> (((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- (x' = u), (((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (u = w))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f1 c= f0 f3 c~ c= f1 f3
- (x' = x), (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (x = u))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f4 c/\ c~ c= f0 f2 c~ c= f0 f3 c~ c= f1 f2
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) |- ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- ((~ ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x))))) ==> F)
T c==> c~ c= c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 cF
- |- ((\C. (!B. (!A. ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F)))) C)
T * / ! ! c==> c~ ! c= c/\ c/\ * b2 b3 * b1 b3 * b0 b3 c/\ * b2 b3 c/\ * b1 b3 * b0 b3 cF f0
+ ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- (A x)
T c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 * f0 f1
+ (~ (C x)), ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- F
T c==> c~ * f0 f1 c==> c/\ c/\ c/\ * f2 f1 * f3 f1 * f0 f1 c\/ c~ * f2 f1 c\/ c~ * f3 f1 c~ * f0 f1 cF
+ ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- ((~ (C x)) ==> F)
T c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c==> c~ * f3 f1 cF
- |- ((!x. (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) = T)
T c= ! ! c= c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 c\/ c= b1 b0 c\/ c= b1 f2 c\/ c= b1 f0 c= b1 f1 cT
- |- ((((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F) ==> ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F)) = ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F))
T c= c==> c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF
- ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F), (((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) |- ((((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) /\ ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c/\ c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- (((open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = (((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = EMPTY) |- (EMPTY = (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))
T c==> c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c= part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY
+ (~ (B x)), ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- ((~ (B x)) /\ F)
T c==> c~ * f0 f1 c==> c/\ c\/ c\/ c~ * f2 f1 c~ * f0 f1 c~ * f3 f1 c/\ * f2 f1 c/\ * f0 f1 * f3 f1 c/\ c~ * f0 f1 cF
+ |- (((!t. (((convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) /\ ((open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) /\ ((convex t) /\ (open t)))) ==> ((closure ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER t)) = (((COND (((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER t) = EMPTY)) EMPTY) ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) INTER (closure t)))))) ==> ((\t. (((convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) /\ ((open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) /\ ((convex t) /\ (open t)))) ==> ((closure ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER t)) = (((COND (((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER t) = EMPTY)) EMPTY) ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) INTER (closure t)))))) ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((\t. (((convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) /\ ((open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) /\ ((convex t) /\ (open t)))) ==> ((closure ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER t)) = (((COND (((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER t) = EMPTY)) EMPTY) ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) INTER (closure t)))))) ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))
T c= c==> ! c==> c/\ cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cconvex b0 copen b0 c= * part cclosure * * part cINTER * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 * * * part cCOND c= * * part cINTER * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 part cEMPTY part cEMPTY * * part cINTER * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure b0 * / c==> c/\ cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cconvex b0 copen b0 c= * part cclosure * * part cINTER * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 * * * part cCOND c= * * part cINTER * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 part cEMPTY part cEMPTY * * part cINTER * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * / c==> c/\ cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cconvex b0 copen b0 c= * part cclosure * * part cINTER * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 * * * part cCOND c= * * part cINTER * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 part cEMPTY part cEMPTY * * part cINTER * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- ((open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- (((B x) ==> F) = F)
T c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c= c==> * f2 f1 cF cF
- (~ (B x)), ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- ((~ (B x)) /\ (B x))
T c==> c~ * f0 f1 c==> c/\ c/\ c/\ * f2 f1 * f0 f1 * f3 f1 c\/ c~ * f2 f1 c\/ c~ * f0 f1 c~ * f3 f1 c/\ c~ * f0 f1 * f0 f1
+ (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) |- (((open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = ((((open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) ==> (open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))))
T c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c==> c/\ copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) |- ((convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!x'. ((P x') \/ Q)) = ((!x'. (P x')) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- (~ F), (x' = x), (((~ (x' = x)) /\ ((~ (x' = w)) /\ ((~ (x' = v)) /\ (~ (x' = u))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c/\ c~ cF cF
+ |- (((open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) ==> (open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))))
T c==> c/\ copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY
- (x' = x), (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (x = w))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c~ c= f1 f2
- (x' = x), (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (x = u))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c~ c= f1 f4
- (~ F), (~ (B x)), ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> c/\ c/\ c/\ * f2 f1 * f0 f1 * f3 f1 c\/ c~ * f2 f1 c\/ c~ * f0 f1 c~ * f3 f1 c/\ c~ cF cF
+ (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)) |- (((~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = EMPTY)) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = (((~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)) ==> (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = EMPTY))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))))
T c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c= c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- ((~ (!x'. ((x' IN (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (x' IN EMPTY)))) ==> (~ (!x'. ((x' IN (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = (x' IN EMPTY)))))
T c==> c~ ! c= cIN b0 * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b0 part cEMPTY c~ ! c= cIN b0 * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY cIN b0 part cEMPTY
+ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))), (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) |- F
T c==> ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 cF
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)), (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = EMPTY)), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) |- ((((convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ ((open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ ((convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) /\ (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = (((COND ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = EMPTY)) EMPTY) ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * * part cCOND c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- (x' = w), (((~ (x' = x)) /\ ((~ (x' = w)) /\ ((~ (x' = v)) /\ (~ (x' = u))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c==> c~ cF cF
- (((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F) ==> ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F)) |- ((((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F) ==> ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F)) /\ (((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F) ==> ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F)))
T c==> c==> c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c/\ c==> c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF
- ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F), (((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F) ==> ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F)) |- (((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F) /\ ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F))
T c==> c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c==> c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c/\ c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF
+ |- (((!s. (!t. (((open s) /\ (open t)) ==> (open (s INTER t))))) ==> ((\s. (!t. (((open s) /\ (open t)) ==> (open (s INTER t))))) ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))) = ((\s. (!t. (((open s) /\ (open t)) ==> (open (s INTER t))))) ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))))
T c= c==> ! ! c==> c/\ copen b0 copen b1 copen * * part cINTER b0 b1 * / ! c==> c/\ copen b0 copen b1 copen * * part cINTER b0 b1 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * / ! c==> c/\ copen b0 copen b1 copen * * part cINTER b0 b1 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
- |- (((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))) = T)
T c= c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY cT
- (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)) |- ((EMPTY = (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = F)
T c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c= c= part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cF
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- (((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = ((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- (((!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))) ==> ((\u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))) u)) = ((\u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))) u))
T c= c==> ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
- |- ((?x''. ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x'')))) = ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (?x'. ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))
T c= c? / c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c? / c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) |- (((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- (((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) |- (((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) /\ ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- ((((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c= c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)), (open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))) |- ((convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) /\ ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c==> copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (~ ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x))))) |- ((~ ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x))))) /\ F)
T c==> c~ c= c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c/\ c~ c= c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 cF
- (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) |- ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- (~ F), (x' = u), (((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f1 c= f0 f3 c/\ c~ cF cF
- (x' = v), (((~ (x' = x)) /\ ((~ (x' = w)) /\ ((~ (x' = v)) /\ (~ (x' = u))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (v = w))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f4 c= f0 f3 c~ c= f1 f3
- (x' = x), (((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f4 c\/ c= f0 f2 c= f0 f3 c==> c~ cF cF
+ |- ((((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))) = ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))))
T c= c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) |- ((convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) /\ ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- (~ F), (x' = x), (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c/\ c~ cF cF
+ |- ((\x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))))))) x)
T * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY copen * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY f0
- (x' = w), (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (w = v))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c~ c= f0 f1 c~ c= f1 f4
- (~ (C x)), ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- ((~ (C x)) /\ (C x))
T c==> c~ * f0 f1 c==> c/\ c/\ c/\ * f2 f1 * f3 f1 * f0 f1 c\/ c~ * f2 f1 c\/ c~ * f3 f1 c~ * f0 f1 c/\ c~ * f0 f1 * f0 f1
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- (((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F) ==> ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F)) |- ((((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F) ==> ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F)) /\ (((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F) ==> ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F)))
T c==> c==> c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c/\ c==> c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
- |- ((?x''. ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x'') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))) = ((?x'. (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x')) /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x'))))
T c= c? / c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 c/\ c? / caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4
+ |- ((\s. (!t. (((convex s) /\ ((open s) /\ ((convex t) /\ (open t)))) ==> ((closure (s INTER t)) = (((COND ((s INTER t) = EMPTY)) EMPTY) ((closure s) INTER (closure t))))))) ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))
T * / ! c==> c/\ cconvex b0 c/\ copen b0 c/\ cconvex b1 copen b1 c= * part cclosure * * part cINTER b0 b1 * * * part cCOND c= * * part cINTER b0 b1 part cEMPTY part cEMPTY * * part cINTER * part cclosure b0 * part cclosure b1 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
- (x' = v), (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (v = u))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f1 f3
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
+ |- ((((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = (((~ (coplanar (x INSERT (w INSERT (v INSERT (u INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))))
T c= c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- ((\u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))))) u)
T * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY f2
- (x' = v), (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (v = u))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f4 c~ c= f0 f3 c~ c= f1 f4
+ ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- ((~ (A x)) ==> F)
T c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c==> c~ * f0 f1 cF
+ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))) |- (((!x'. (((\x'. ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))) x') ==> F)) ==> ((?x'. ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))) ==> F)) = ((?x'. ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))) ==> F))
T c==> ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c= c==> ! c==> * / c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b1 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b1 b0 cF c==> c? / c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 cF c==> c? / c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 cF
- (~ (C x)), ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> c/\ c\/ c\/ c~ * f2 f1 c~ * f3 f1 c~ * f0 f1 c/\ * f2 f1 c/\ * f3 f1 * f0 f1 c==> c~ cF cF
- |- ((!v. (!w. (!u. (!x. ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))))))))) = (!v. (!w. (!u. (!x. ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F))))))
T c= ! ! ! ! c==> c~ ! c~ c/\ caff_gt * * part cINSERT b3 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY b4 c/\ caff_gt * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_gt * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 c~ ! c~ c/\ caff_gt * * part cINSERT b3 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY b4 caff_gt * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 ! ! ! ! c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT b3 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY b4 c/\ caff_gt * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_gt * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 c~ ! c~ c/\ caff_gt * * part cINSERT b3 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY b4 caff_gt * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 cF
+ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))), (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) |- ((!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))) /\ F)
T c==> ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c/\ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
- |- ((!A. (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) = T)
T c= ! ! c= c/\ c/\ * b0 b1 * f0 b1 * f1 b1 c/\ * b0 b1 c/\ * f0 b1 * f1 b1 cT
- |- (((((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F) ==> ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F)) ==> (((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F) ==> ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F))) = (((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F) ==> ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F)))
T c= c==> c==> c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) |- ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- |- (((!w. (!u. (!v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))))) ==> ((\w. (!u. (!v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))))) w)) = ((\w. (!u. (!v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))))) w))
T c= c==> ! ! ! ! c==> c~ ! c= c\/ c= b4 b3 c\/ c= b4 b1 c\/ c= b4 b0 c= b4 b2 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF * / ! ! ! c==> c~ ! c= c\/ c= b4 b3 c\/ c= b4 b1 c\/ c= b4 b0 c= b4 b2 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0 * / ! ! ! c==> c~ ! c= c\/ c= b4 b3 c\/ c= b4 b1 c\/ c= b4 b0 c= b4 b2 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0
- (x' = v), (((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (v = w))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c~ c= f1 f4
- ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F), (((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) |- (((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) /\ ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c/\ c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
+ (~ ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x))))), (((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) ==> F) |- F
T c==> c~ c= c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c==> c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 cF cF
+ |- (((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))) = T)
T c= c= c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 cT
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((\u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))) u)
T * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
- |- ((!u. (!x. ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))))))) = T)
T c= ! ! c==> c~ ! c~ c/\ caff_gt * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 c/\ caff_gt * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY b2 caff_gt * * part cINSERT b1 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 c~ ! c~ c/\ caff_gt * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_gt * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY b2 cT
- (x' = v), (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c==> c~ cF cF
+ |- (((((convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) ==> (convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c= c==> c==> c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))) |- ((\x'. ((~ (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x')) \/ (~ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))) _6547869)
T c==> ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 * / c\/ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c~ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 f4
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)), (open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))) |- ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c==> copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- (((!s. (!t. (((convex s) /\ (convex t)) ==> (convex (s INTER t))))) ==> ((\s. (!t. (((convex s) /\ (convex t)) ==> (convex (s INTER t))))) ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))) = ((\s. (!t. (((convex s) /\ (convex t)) ==> (convex (s INTER t))))) ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))))
T c= c==> ! ! c==> c/\ cconvex b0 cconvex b1 cconvex * * part cINTER b0 b1 * / ! c==> c/\ cconvex b0 cconvex b1 cconvex * * part cINTER b0 b1 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * / ! c==> c/\ cconvex b0 cconvex b1 cconvex * * part cINTER b0 b1 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
- (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), ((~ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) |- (((~ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) /\ ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- ((\t. (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) t))) (w INSERT EMPTY))
T * / cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * * part cINSERT f3 part cEMPTY
- (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), ((~ (coplanar (x INSERT (w INSERT (v INSERT (u INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) |- (((~ (coplanar (x INSERT (w INSERT (v INSERT (u INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) /\ ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) |- ((((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c= * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- ((!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))) = T)
T c= ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cT
+ (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)) |- (((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY) = F)
T c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c= c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY cF
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- ((((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))) = (((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((!v. (!x. (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))))))) = T)
T c= ! ! ! c= c\/ c= b2 b1 c\/ c= b2 f0 c\/ c= b2 f1 c= b2 b0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cT
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- (((~ a) \/ (~ b)) = (~ (a /\ b)))
T c= c\/ c~ f0 c~ f1 c~ c/\ f0 f1
+ ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- (C x)
T c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 * f3 f1
+ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))) |- (((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) _6547869) /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) _6547869)) ==> F)
T c==> ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c==> c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 cF
- |- ((!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))))) = T)
T c= ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cT
+ |- (((!s. (!t. (((convex s) /\ ((open s) /\ ((convex t) /\ (open t)))) ==> ((closure (s INTER t)) = (((COND ((s INTER t) = EMPTY)) EMPTY) ((closure s) INTER (closure t))))))) ==> ((\s. (!t. (((convex s) /\ ((open s) /\ ((convex t) /\ (open t)))) ==> ((closure (s INTER t)) = (((COND ((s INTER t) = EMPTY)) EMPTY) ((closure s) INTER (closure t))))))) ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))) = ((\s. (!t. (((convex s) /\ ((open s) /\ ((convex t) /\ (open t)))) ==> ((closure (s INTER t)) = (((COND ((s INTER t) = EMPTY)) EMPTY) ((closure s) INTER (closure t))))))) ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))))
T c= c==> ! ! c==> c/\ cconvex b0 c/\ copen b0 c/\ cconvex b1 copen b1 c= * part cclosure * * part cINTER b0 b1 * * * part cCOND c= * * part cINTER b0 b1 part cEMPTY part cEMPTY * * part cINTER * part cclosure b0 * part cclosure b1 * / ! c==> c/\ cconvex b0 c/\ copen b0 c/\ cconvex b1 copen b1 c= * part cclosure * * part cINTER b0 b1 * * * part cCOND c= * * part cINTER b0 b1 part cEMPTY part cEMPTY * * part cINTER * part cclosure b0 * part cclosure b1 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * / ! c==> c/\ cconvex b0 c/\ copen b0 c/\ cconvex b1 copen b1 c= * part cclosure * * part cINTER b0 b1 * * * part cCOND c= * * part cINTER b0 b1 part cEMPTY part cEMPTY * * part cINTER * part cclosure b0 * part cclosure b1 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
- (EMPTY = (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) |- ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = EMPTY)
T c==> c= part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY
+ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))) |- ((((\x'. ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))) x') ==> F) = T)
T c==> ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c= c==> * / c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 f4 cF cT
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- (((open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = (((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- (!x. ((x IN ((A INTER B) INTER C)) = (x IN (A INTER (B INTER C)))))
T c= cIN f0 * * part cINTER * * part cINTER f1 f2 f3 cIN f0 * * part cINTER f1 * * part cINTER f2 f3
+ |- (((!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))))) ==> ((\x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))))) x)) = ((\x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))))) x))
T c= c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0 * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
- (x' = w), (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (w = v))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c~ c= f1 f3
- ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) |- (((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) /\ ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c/\ c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
- |- (((!x. ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F)) ==> ((\x. ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F)) x)) = ((\x. ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F)) x))
T c= c==> ! c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b1 c/\ caff_gt * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 part cEMPTY b1 caff_gt * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 c~ ! c~ c/\ caff_gt * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b1 caff_gt * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 part cEMPTY b1 cF * / c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b1 c/\ caff_gt * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 part cEMPTY b1 caff_gt * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 c~ ! c~ c/\ caff_gt * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b1 caff_gt * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 part cEMPTY b1 cF f3 * / c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b1 c/\ caff_gt * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 part cEMPTY b1 caff_gt * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 c~ ! c~ c/\ caff_gt * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b1 caff_gt * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 part cEMPTY b1 cF f3
- |- (((((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) ==> (((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))) = (((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)))
T c= c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))) |- ((open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = EMPTY)) |- (((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = EMPTY) = F)
T c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c= c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY cF
- (x' = w), (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (w = u))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c~ c= f0 f1 c~ c= f1 f3
- |- ((!v. (!x. (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))))))) = T)
T c= ! ! ! c= c\/ c= b2 b1 c\/ c= b2 f0 c\/ c= b2 b0 c= b2 f1 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f1 c= b2 f0 cT
- (x' = v), (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f4 c~ c= f0 f3 c==> c~ cF cF
+ |- ((\s. (!t. (((convex s) /\ (convex t)) ==> (convex (s INTER t))))) ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))
T * / ! c==> c/\ cconvex b0 cconvex b1 cconvex * * part cINTER b0 b1 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
- |- ((!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))))) = T)
T c= ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cT
+ (~ (C x)), ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- F
T c==> c~ * f0 f1 c==> c/\ c\/ c\/ c~ * f2 f1 c~ * f3 f1 c~ * f0 f1 c/\ * f2 f1 c/\ * f3 f1 * f0 f1 cF
- |- (((!u. (!v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)))) ==> ((\u. (!v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)))) u)) = ((\u. (!v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)))) u))
T c= c==> ! ! ! c==> c~ ! c= c\/ c= b3 b2 c\/ c= b3 b0 c\/ c= b3 f0 c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF * / ! ! c==> c~ ! c= c\/ c= b3 b2 c\/ c= b3 b0 c\/ c= b3 f0 c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1 * / ! ! c==> c~ ! c= c\/ c= b3 b2 c\/ c= b3 b0 c\/ c= b3 f0 c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1
- (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), ((~ (coplanar (x INSERT (w INSERT (v INSERT (u INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) = ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) |- (((~ (coplanar (x INSERT (w INSERT (v INSERT (u INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) = ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) /\ ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- (x' = v), (((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c==> c~ cF cF
+ |- ((\x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY))))))) x)
T * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ c= * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY part cEMPTY f0
+ ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))), (((~ (B x)) \/ (~ (C x))) ==> F) |- F
T c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 c==> c==> c\/ c~ * f2 f1 c~ * f3 f1 cF cF
+ |- (((closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) = ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
- |- (((!v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))) ==> ((\v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))) v)) = ((\v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))) v))
T c= c==> ! ! c==> c~ ! c= c\/ c= b2 b1 c\/ c= b2 f0 c\/ c= b2 f1 c= b2 b0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF * / ! c==> c~ ! c= c\/ c= b2 b1 c\/ c= b2 f0 c\/ c= b2 f1 c= b2 b0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF f2 * / ! c==> c~ ! c= c\/ c= b2 b1 c\/ c= b2 f0 c\/ c= b2 f1 c= b2 b0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF f2
+ |- (((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) ==> F)
T c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 cF
+ |- (((!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))) ==> ((\w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))) w)) = ((\w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))) w))
T c= c==> ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3 * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- (((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = (((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- ((\u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))) u)
T * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
+ (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) |- (?x'. ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x'))))
T c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c? / c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0
- (x' = w), (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c==> c~ cF cF
- (x' = v) |- (F = F)
T c==> c= f0 f1 c= cF cF
- |- (((!x. ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) ==> ((\x. ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) x)) = ((\x. ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) x))
T c= c==> ! c==> c~ ! c= c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 c\/ c= b1 b0 c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f0 cF * / c==> c~ ! c= c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 c\/ c= b1 b0 c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f0 cF f3 * / c==> c~ ! c= c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 c\/ c= b1 b0 c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f0 cF f3
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- |- ((!u. (!v. (!x. (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))))) = T)
T c= ! ! ! ! c= c\/ c= b3 b2 c\/ c= b3 b0 c\/ c= b3 f0 c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cT
+ |- (((convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c= c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- (x' = w), (((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (w = v))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f3 c= f0 f1 c~ c= f1 f4
+ |- (((((convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) /\ ((open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) /\ ((convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) /\ (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) ==> ((closure ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = (((COND (((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) = EMPTY)) EMPTY) ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c= c==> c==> c/\ cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part cINTER * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * * part cCOND c= * * part cINTER * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY part cEMPTY * * part cINTER * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- (B x)
T c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 * f2 f1
+ |- ((\x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))))))) x)
T * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY f0
- |- (((!C. (!B. (!A. ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F)))) ==> ((\C. (!B. (!A. ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F)))) C)) = ((\C. (!B. (!A. ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F)))) C))
T c= c==> ! ! ! c==> c~ ! c= c/\ c/\ * b2 b3 * b1 b3 * b0 b3 c/\ * b2 b3 c/\ * b1 b3 * b0 b3 cF * / ! ! c==> c~ ! c= c/\ c/\ * b2 b3 * b1 b3 * b0 b3 c/\ * b2 b3 c/\ * b1 b3 * b0 b3 cF f0 * / ! ! c==> c~ ! c= c/\ c/\ * b2 b3 * b1 b3 * b0 b3 c/\ * b2 b3 c/\ * b1 b3 * b0 b3 cF f0
+ (~ (A x)), ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- F
T c==> c~ * f0 f1 c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 cF
+ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))) |- (((\x'. ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))) x') ==> F)
T c==> ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c==> * / c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 f4 cF
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = ((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) |- (((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = ((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) /\ ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- |- ((\x. ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F)) x)
T * / c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b1 c/\ caff_gt * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 part cEMPTY b1 caff_gt * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 c~ ! c~ c/\ caff_gt * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b1 caff_gt * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 part cEMPTY b1 cF f3
+ (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) |- (((?x'. ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))) ==> F) = F)
T c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c= c==> c? / c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 cF cF
- |- ((!u. (!v. (!x. (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))))) = T)
T c= ! ! ! ! c= c\/ c= b3 b2 c\/ c= b3 f0 c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cT
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) |- ((open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- (~ F), (x' = u), (((~ (x' = x)) /\ ((~ (x' = w)) /\ ((~ (x' = v)) /\ (~ (x' = u))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f1 c= f0 f3 c/\ c~ cF cF
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (x' = u), (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f1 c~ c= f0 f3 c==> c~ cF cF
- |- (((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F) ==> ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F))
T c==> c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF
+ (~ ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x))))), (((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) ==> F), (((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) ==> F) |- F
T c==> c~ c= c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c==> c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 cF c==> c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 cF cF
- |- ((\u. (!x. ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F))) u)
T * / ! c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 c/\ caff_gt * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY b2 caff_gt * * part cINSERT b1 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 c~ ! c~ c/\ caff_gt * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_gt * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY b2 cF f2
+ |- ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))) v)
T * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
+ |- (!t. (((convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ (convex t)) ==> (convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER t))))
T c==> c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY cconvex f4 cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4
- (x' = u), (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (u = v))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f1 c~ c= f0 f3 c~ c= f1 f4
+ (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) |- ((!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))) ==> F)
T c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c==> ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))) |- ((((open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) ==> (open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c==> c/\ copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x'))) |- ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') = ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))
T c==> c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 c= caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- (((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = ((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- (x' = w), (((~ (x' = x)) /\ ((~ (x' = w)) /\ ((~ (x' = v)) /\ (~ (x' = u))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (w = u))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c~ c= f1 f4
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) |- ((open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) /\ ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- (~ F), (x' = w), (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c~ c= f0 f1 c/\ c~ cF cF
+ |- ((((~ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c= c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY
- (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))), ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x'))) |- ((~ F) ==> F)
T c==> ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c==> c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 c==> c~ cF cF
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) |- ((convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- ((!x. ((x IN ((A INTER B) INTER C)) = (x IN (A INTER (B INTER C))))) = (((A INTER B) INTER C) = (A INTER (B INTER C))))
T c= ! c= cIN b0 * * part cINTER * * part cINTER f0 f1 f2 cIN b0 * * part cINTER f0 * * part cINTER f1 f2 c= * * part cINTER * * part cINTER f0 f1 f2 * * part cINTER f0 * * part cINTER f1 f2
- (x' = w), (((~ (x' = x)) /\ ((~ (x' = w)) /\ ((~ (x' = v)) /\ (~ (x' = u))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (w = x))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c~ c= f1 f2
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)), (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = EMPTY)), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) |- ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- |- (((!A. ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F)) ==> ((\A. ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F)) A)) = ((\A. ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F)) A))
T c= c==> ! c==> c~ ! c= c/\ c/\ * b0 b1 * f0 b1 * f1 b1 c/\ * b0 b1 c/\ * f0 b1 * f1 b1 cF * / c==> c~ ! c= c/\ c/\ * b0 b1 * f0 b1 * f1 b1 c/\ * b0 b1 c/\ * f0 b1 * f1 b1 cF f2 * / c==> c~ ! c= c/\ c/\ * b0 b1 * f0 b1 * f1 b1 c/\ * b0 b1 c/\ * f0 b1 * f1 b1 cF f2
+ ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))), ((~ (B x)) ==> F), ((~ (A x)) \/ (~ (B x))) |- F
T c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c==> c==> c~ * f2 f1 cF c==> c\/ c~ * f0 f1 c~ * f2 f1 cF
- |- ((((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F) ==> ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F)) ==> (((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F) ==> ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F)))
T c==> c==> c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF
+ |- ((!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))) = T)
T c= ! ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cT
- (x' = w), (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c~ c= f0 f1 c==> c~ cF cF
- ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F), (((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F) ==> ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F)) |- ((((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F) ==> ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F)) /\ ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F))
T c==> c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c==> c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c/\ c==> c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF
- (x' = x), (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c==> c~ cF cF
- (x' = u), (((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f1 c= f0 f3 c==> c~ cF cF
+ |- (((!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))))))) ==> ((\x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))))))) x)) = ((\x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))))))) x))
T c= c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY f0 * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY f0
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- (((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) = ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) |- (((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- (((!t. (((convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ (convex t)) ==> (convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER t)))) ==> ((\t. (((convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ (convex t)) ==> (convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER t)))) ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = ((\t. (((convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ (convex t)) ==> (convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER t)))) ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))
T c= c==> ! c==> c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY cconvex b0 cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 * / c==> c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY cconvex b0 cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * / c==> c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY cconvex b0 cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY
+ |- (((!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)))))) ==> ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)))))) v)) = ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)))))) v))
T c= c==> ! ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY part cEMPTY * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY part cEMPTY f1 * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY part cEMPTY f1
- (EMPTY = (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) |- ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)
T c==> c= part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY
- |- ((!B. (!A. (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x))))))) = T)
T c= ! ! ! c= c/\ c/\ * b1 b2 * b0 b2 * f0 b2 c/\ * b1 b2 c/\ * b0 b2 * f0 b2 cT
- ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F) |- (((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F) /\ ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F))
T c==> c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c/\ c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
- |- (((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F) = (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x))))))
T c= c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0
- (~ F), (x' = u), (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f1 c~ c= f0 f3 c/\ c~ cF cF
+ |- (((!w'. ((~ (coplanar (x INSERT (u INSERT (w INSERT (w' INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (w' INSERT EMPTY))) = ((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (w' INSERT EMPTY))))) ==> ((\w'. ((~ (coplanar (x INSERT (u INSERT (w INSERT (w' INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (w' INSERT EMPTY))) = ((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (w' INSERT EMPTY))))) v)) = ((\w'. ((~ (coplanar (x INSERT (u INSERT (w INSERT (w' INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (w' INSERT EMPTY))) = ((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (w' INSERT EMPTY))))) v))
T c= c==> ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY f3 * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY f3
+ ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- (((A x) ==> F) = F)
T c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 c= c==> * f0 f1 cF cF
- |- ((\A. ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F)) A)
T * / c==> c~ ! c= c/\ c/\ * b0 b1 * f0 b1 * f1 b1 c/\ * b0 b1 c/\ * f0 b1 * f1 b1 cF f2
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- (((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))) ==> (((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- (((!u'. (!w. ((~ (coplanar (x INSERT (u INSERT (u' INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (u INSERT (u' INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (u INSERT (u' INSERT EMPTY)))) (w INSERT EMPTY)))))) ==> ((\u'. (!w. ((~ (coplanar (x INSERT (u INSERT (u' INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (u INSERT (u' INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (u INSERT (u' INSERT EMPTY)))) (w INSERT EMPTY)))))) w)) = ((\u'. (!w. ((~ (coplanar (x INSERT (u INSERT (u' INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (u INSERT (u' INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (u INSERT (u' INSERT EMPTY)))) (w INSERT EMPTY)))))) w))
T c= c==> ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY f2 * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY f2
- (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) |- ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)) /\ ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) |- ((~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = EMPTY)) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- |- (((!v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))) ==> ((\v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))) v)) = ((\v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))) v))
T c= c==> ! ! c==> c~ ! c= c\/ c= b2 b1 c\/ c= b2 f0 c\/ c= b2 b0 c= b2 f1 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f1 c= b2 f0 cF * / ! c==> c~ ! c= c\/ c= b2 b1 c\/ c= b2 f0 c\/ c= b2 b0 c= b2 f1 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f1 c= b2 f0 cF f2 * / ! c==> c~ ! c= c\/ c= b2 b1 c\/ c= b2 f0 c\/ c= b2 b0 c= b2 f1 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f1 c= b2 f0 cF f2
+ |- ((~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)) ==> (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = EMPTY)))
T c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY
- |- (((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
+ |- (!t. (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) t)))
T cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- ((!x'. (P \/ (Q x'))) = (P \/ (!x'. (Q x'))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
+ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))) |- (((!x'. ((~ (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x')) \/ (~ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))) ==> ((\x'. ((~ (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x')) \/ (~ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))) _6547869)) = ((\x'. ((~ (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x')) \/ (~ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))) _6547869))
T c==> ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c= c==> ! c\/ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c~ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 * / c\/ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c~ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 f4 * / c\/ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c~ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 f4
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- (((~ (B x)) \/ (~ (C x))) ==> F)
T c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 c==> c\/ c~ * f2 f1 c~ * f3 f1 cF
- |- ((\x. ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) x)
T * / c==> c~ ! c= c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 c\/ c= b1 b0 c\/ c= b1 f2 c\/ c= b1 f0 c= b1 f1 cF f3
- |- (((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) = (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))))))
T c= c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- ((coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))) = F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
+ |- (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))
T cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
- ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F) |- ((((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F) ==> ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F)) ==> ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F))
T c==> c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c==> c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (x' = u), (((~ (x' = x)) /\ ((~ (x' = w)) /\ ((~ (x' = v)) /\ (~ (x' = u))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (u = x))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f1 c= f0 f3 c~ c= f1 f2
- (x' = x), (((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (x = v))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f4 c\/ c= f0 f2 c= f0 f3 c~ c= f1 f4
- |- (((!u. (!x. ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F))) ==> ((\u. (!x. ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F))) u)) = ((\u. (!x. ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F))) u))
T c= c==> ! ! c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 c/\ caff_gt * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY b2 caff_gt * * part cINSERT b1 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 c~ ! c~ c/\ caff_gt * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_gt * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY b2 cF * / ! c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 c/\ caff_gt * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY b2 caff_gt * * part cINSERT b1 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 c~ ! c~ c/\ caff_gt * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_gt * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY b2 cF f2 * / ! c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 c/\ caff_gt * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY b2 caff_gt * * part cINSERT b1 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 c~ ! c~ c/\ caff_gt * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_gt * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY b2 cF f2
- (~ (C x)), ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> c/\ c/\ c/\ * f2 f1 * f3 f1 * f0 f1 c\/ c~ * f2 f1 c\/ c~ * f3 f1 c~ * f0 f1 c==> c~ cF cF
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)), (open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))) |- ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c==> copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- (((!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))) ==> ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))) v)) = ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))) v))
T c= c==> ! ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1 * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
+ |- (((!t. (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) t))) ==> ((\t. (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) t))) (w INSERT EMPTY))) = ((\t. (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) t))) (w INSERT EMPTY)))
T c= c==> ! cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * / cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * * part cINSERT f3 part cEMPTY * / cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * * part cINSERT f3 part cEMPTY
- (x' = u), (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (u = x))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f1 c~ c= f0 f3 c~ c= f1 f2
- (~ (A x)), ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 c==> c~ cF cF
+ |- ((((~ (coplanar (x INSERT (w INSERT (v INSERT (u INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) = ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c= c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
- (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = EMPTY)) |- ((EMPTY = (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = F)
T c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c= c= part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY cF
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) /\ ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ F), (x' = v), (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c/\ c~ cF cF
- (~ F), (~ (A x)), ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 c/\ c~ cF cF
+ |- ((\w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))))) w)
T * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY f3
- (~ F), (x' = w), (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c/\ c~ cF cF
- (x' = v), (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (v = x))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f1 f2
- (~ F), (x' = x), (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f4 c/\ c~ c= f0 f2 c~ c= f0 f3 c/\ c~ cF cF
+ |- (((!s. (!t. (convex ((aff_gt s) t)))) ==> ((\s. (!t. (convex ((aff_gt s) t)))) (x INSERT (v INSERT (u INSERT EMPTY))))) = ((\s. (!t. (convex ((aff_gt s) t)))) (x INSERT (v INSERT (u INSERT EMPTY)))))
T c= c==> ! ! cconvex * * part caff_gt b0 b1 * / ! cconvex * * part caff_gt b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * / ! cconvex * * part caff_gt b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (x' = v), (((~ (x' = x)) /\ ((~ (x' = w)) /\ ((~ (x' = v)) /\ (~ (x' = u))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (v = u))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f4 c= f0 f3 c~ c= f1 f4
+ ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- ((~ (A x)) ==> F)
T c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 c==> c~ * f0 f1 cF
+ ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- (C x)
T c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 * f3 f1
- |- ((((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F) ==> ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F)) = ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F))
T c= c==> c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
- ((~ (coplanar (x INSERT (w INSERT (v INSERT (u INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) = ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) |- (((~ (coplanar (x INSERT (w INSERT (v INSERT (u INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) = ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = T)
T c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY cT
+ ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))), ((~ (C x)) ==> F), (((~ (A x)) \/ (~ (B x))) ==> F) |- F
T c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c==> c==> c~ * f3 f1 cF c==> c==> c\/ c~ * f0 f1 c~ * f2 f1 cF cF
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))) |- (((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))) /\ ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- (!t. (((convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) /\ ((open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) /\ ((convex t) /\ (open t)))) ==> ((closure ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER t)) = (((COND (((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER t) = EMPTY)) EMPTY) ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) INTER (closure t))))))
T c==> c/\ cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cconvex f4 copen f4 c= * part cclosure * * part cINTER * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 * * * part cCOND c= * * part cINTER * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 part cEMPTY part cEMPTY * * part cINTER * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure f4
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)), (open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))) |- ((((convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) /\ ((open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) /\ ((convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) /\ (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) ==> ((closure ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = (((COND (((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) = EMPTY)) EMPTY) ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c==> copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c==> c/\ cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part cINTER * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * * part cCOND c= * * part cINTER * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY part cEMPTY * * part cINTER * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- (~ F), (~ (B x)), ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> c/\ c\/ c\/ c~ * f2 f1 c~ * f0 f1 c~ * f3 f1 c/\ * f2 f1 c/\ * f0 f1 * f3 f1 c/\ c~ cF cF
- |- ((!w. (!u. (!v. (!x. (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))))))))) = (!w. (!u. (!v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))))))
T c= ! ! ! ! ! c= c\/ c= b4 b3 c\/ c= b4 b0 c\/ c= b4 b2 c= b4 b1 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 ! ! ! ! c==> c~ ! c= c\/ c= b4 b3 c\/ c= b4 b0 c\/ c= b4 b2 c= b4 b1 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) |- ((convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) /\ ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- (x' = x), (((~ (x' = x)) /\ ((~ (x' = w)) /\ ((~ (x' = v)) /\ (~ (x' = u))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c==> c~ cF cF
+ ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) |- (((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) |- ((convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) = T)
T c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY cT
- |- (((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF
+ |- (((!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))))) ==> ((\w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))))) w)) = ((\w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))))) w))
T c= c==> ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY f3 * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY f3
- (EMPTY = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) |- (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)
T c==> c= part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY
- (x' = v), (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (v = w))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f4 c~ c= f0 f3 c~ c= f1 f3
- (~ F), (x' = u), (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f1 c~ c= f0 f3 c/\ c~ cF cF
+ |- ((x IN EMPTY) = F)
T c= cIN f0 part cEMPTY cF
+ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))), ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x'))) |- (((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x'))) /\ F)
T c==> ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c==> c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 c/\ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 cF
+ |- (((convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) ==> (convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))))
T c==> c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY
- ((closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) = ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) |- (T = ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= cT c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- ((((closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) = ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = (((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) = ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- (((!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)))) ==> ((\w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)))) w)) = ((\w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)))) w))
T c= c==> ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY part cEMPTY * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY part cEMPTY f3 * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY part cEMPTY f3
- (x' = w), (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (w = x))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c~ c= f0 f1 c~ c= f1 f2
+ |- ((!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))) = T)
T c= ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cT
- |- ((!x. ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) = T)
T c= ! c==> c~ ! c~ c/\ caff_gt * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b1 c/\ caff_gt * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 part cEMPTY b1 caff_gt * * part cINSERT b0 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 c~ ! c~ c/\ caff_gt * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b1 caff_gt * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 part cEMPTY b1 cT
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) |- (((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) |- ((open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = T)
T c==> copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY cT
+ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))) |- ((~ (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) _6547869)) \/ (~ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) _6547869)))
T c==> ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c\/ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c~ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4
+ |- ((!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x))))) = (!x. ((x IN ((A INTER B) INTER C)) = (x IN (A INTER (B INTER C))))))
T c= ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 ! c= cIN b0 * * part cINTER * * part cINTER f0 f1 f2 cIN b0 * * part cINTER f0 * * part cINTER f1 f2
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- ((((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = ((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = (((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = ((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- (~ F), (x' = w), (((~ (x' = x)) /\ ((~ (x' = w)) /\ ((~ (x' = v)) /\ (~ (x' = u))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ cF cF
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) |- (((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- ((~ F) = T)
T c= c~ cF cT
- (x' = w), (((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (w = x))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f3 c= f0 f1 c~ c= f1 f2
+ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x'))) |- ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))
T c==> c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4
+ |- (!t. (((convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ ((open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ ((convex t) /\ (open t)))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER t)) = (((COND ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER t) = EMPTY)) EMPTY) ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER (closure t))))))
T c==> c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cconvex f4 copen f4 c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 * * * part cCOND c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 part cEMPTY part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure f4
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) |- (((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ (((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- |- ((!w. (!u. (!x. ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))))) = T)
T c= ! ! ! c==> c~ ! c~ c/\ caff_gt * * part cINSERT b2 * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b3 c/\ caff_gt * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_gt * * part cINSERT b2 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 c~ ! c~ c/\ caff_gt * * part cINSERT b2 * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b3 caff_gt * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 cT
+ |- (((!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))))))) ==> ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))))))) u)) = ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))))))) u))
T c= c==> ! ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY f1 * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY f1
- |- ((!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))))) = T)
T c= ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cT
+ |- (((!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))) ==> ((\w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))) w)) = ((\w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))) w))
T c= c==> ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3 * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3
- |- ((!A. (P A)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- (x' = w), (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (w = x))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c~ c= f1 f2
- (~ (A x)), ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c==> c~ cF cF
- (x' = x), (((~ (x' = x)) /\ ((~ (x' = w)) /\ ((~ (x' = v)) /\ (~ (x' = u))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (x = v))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c~ c= f1 f3
- (x' = v), (((~ (x' = x)) /\ ((~ (x' = w)) /\ ((~ (x' = v)) /\ (~ (x' = u))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (v = x))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f4 c= f0 f3 c~ c= f1 f2
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- (((C x) ==> F) = F)
T c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 c= c==> * f3 f1 cF cF
- |- ((\w. (!u. (!v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))))) w)
T * / ! ! ! c==> c~ ! c= c\/ c= b4 b3 c\/ c= b4 b0 c\/ c= b4 b2 c= b4 b1 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0
+ (~ (B x)), ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- ((~ (B x)) /\ F)
T c==> c~ * f0 f1 c==> c/\ c/\ c/\ * f2 f1 * f0 f1 * f3 f1 c\/ c~ * f2 f1 c\/ c~ * f0 f1 c~ * f3 f1 c/\ c~ * f0 f1 cF
+ |- (((!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))))))) ==> ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))))))) v)) = ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))))))) v))
T c= c==> ! ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY f1 * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY f1
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)), (open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))) |- ((convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c==> copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
+ |- ((\t. (((convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ ((open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ ((convex t) /\ (open t)))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER t)) = (((COND ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER t) = EMPTY)) EMPTY) ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER (closure t)))))) ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))
T * / c==> c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cconvex b0 copen b0 c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 * * * part cCOND c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 part cEMPTY part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)), (open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))) |- ((((convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) ==> (convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c==> copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c==> c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))))))) v)
T * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY f1
+ |- ((((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))) ==> (((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = (((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c= c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- |- (((((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F) ==> ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F)) ==> (((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F) ==> ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F))) = (((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F) ==> ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F)))
T c= c==> c==> c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
- |- (((!w. (!u. (!v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))))) ==> ((\w. (!u. (!v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))))) w)) = ((\w. (!u. (!v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))))) w))
T c= c==> ! ! ! ! c==> c~ ! c= c\/ c= b4 b3 c\/ c= b4 b0 c\/ c= b4 b2 c= b4 b1 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF * / ! ! ! c==> c~ ! c= c\/ c= b4 b3 c\/ c= b4 b0 c\/ c= b4 b2 c= b4 b1 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0 * / ! ! ! c==> c~ ! c= c\/ c= b4 b3 c\/ c= b4 b0 c\/ c= b4 b2 c= b4 b1 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0
- ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- ((~ (C x)) ==> (C x))
T c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c==> c~ * f3 f1 * f3 f1
+ |- ((\s. (!t. (((convex s) /\ ((open s) /\ ((convex t) /\ (open t)))) ==> ((closure (s INTER t)) = (((COND ((s INTER t) = EMPTY)) EMPTY) ((closure s) INTER (closure t))))))) (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))
T * / ! c==> c/\ cconvex b0 c/\ copen b0 c/\ cconvex b1 copen b1 c= * part cclosure * * part cINTER b0 b1 * * * part cCOND c= * * part cINTER b0 b1 part cEMPTY part cEMPTY * * part cINTER * part cclosure b0 * part cclosure b1 * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY
- (~ F), (x' = v), (((~ (x' = x)) /\ ((~ (x' = w)) /\ ((~ (x' = v)) /\ (~ (x' = u))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f4 c= f0 f3 c/\ c~ cF cF
- |- ((((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) ==> (((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
- (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY) |- (EMPTY = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))
T c==> c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c= part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- ((~ (B x)) ==> (B x))
T c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 c==> c~ * f2 f1 * f2 f1
- (x' = u), (((~ (x' = x)) /\ ((~ (x' = w)) /\ ((~ (x' = v)) /\ (~ (x' = u))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f1 c= f0 f3 c==> c~ cF cF
- (~ F), (x' = v), (((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ cF cF
+ |- ((\s. (!t. (convex ((aff_gt s) t)))) (x INSERT (v INSERT (u INSERT EMPTY))))
T * / ! cconvex * * part caff_gt b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))))) ==> ((\u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))))) u)) = ((\u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))))) u))
T c= c==> ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY f2 * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY f2
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) |- (((~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)) ==> (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = EMPTY))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) = ((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))))))) u)
T * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY f1
- (~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) |- F
T c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
+ |- ((\x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))))) x)
T * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
- |- ((?x'. (P /\ (Q x'))) = (P /\ (?x'. (Q x'))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)), (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = EMPTY)), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) |- ((~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = EMPTY)) /\ ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- |- ((\v. (!w. (!u. (!x. ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F))))) v)
T * / ! ! ! c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT b3 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY b4 c/\ caff_gt * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_gt * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 c~ ! c~ c/\ caff_gt * * part cINSERT b3 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY b4 caff_gt * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 cF f0
- (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)) |- (((~ (EMPTY = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((EMPTY = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = F)) = ((EMPTY = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = F))
T c==> c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c= c==> c~ c= part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c= part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF c= c= part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
- (x' = x), (((~ (x' = x)) /\ ((~ (x' = w)) /\ ((~ (x' = v)) /\ (~ (x' = u))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (x = w))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c~ c= f1 f2
- (~ (A x)), ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- ((~ (A x)) /\ (A x))
T c==> c~ * f0 f1 c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 c/\ c~ * f0 f1 * f0 f1
+ |- ((\x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))))))) x)
T * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
- |- ((\u. (!v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)))) u)
T * / ! ! c==> c~ ! c= c\/ c= b3 b2 c\/ c= b3 b0 c\/ c= b3 f0 c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1
- (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)) |- ((EMPTY = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = F)
T c==> c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c= c= part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
- (~ F), (x' = v), (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f4 c~ c= f0 f3 c/\ c~ cF cF
- (~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) |- ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) /\ F)
T c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c/\ c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
+ |- (((!s. (!t. (((convex s) /\ ((open s) /\ ((convex t) /\ (open t)))) ==> ((closure (s INTER t)) = (((COND ((s INTER t) = EMPTY)) EMPTY) ((closure s) INTER (closure t))))))) ==> ((\s. (!t. (((convex s) /\ ((open s) /\ ((convex t) /\ (open t)))) ==> ((closure (s INTER t)) = (((COND ((s INTER t) = EMPTY)) EMPTY) ((closure s) INTER (closure t))))))) (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))) = ((\s. (!t. (((convex s) /\ ((open s) /\ ((convex t) /\ (open t)))) ==> ((closure (s INTER t)) = (((COND ((s INTER t) = EMPTY)) EMPTY) ((closure s) INTER (closure t))))))) (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))))
T c= c==> ! ! c==> c/\ cconvex b0 c/\ copen b0 c/\ cconvex b1 copen b1 c= * part cclosure * * part cINTER b0 b1 * * * part cCOND c= * * part cINTER b0 b1 part cEMPTY part cEMPTY * * part cINTER * part cclosure b0 * part cclosure b1 * / ! c==> c/\ cconvex b0 c/\ copen b0 c/\ cconvex b1 copen b1 c= * part cclosure * * part cINTER b0 b1 * * * part cCOND c= * * part cINTER b0 b1 part cEMPTY part cEMPTY * * part cINTER * part cclosure b0 * part cclosure b1 * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * / ! c==> c/\ cconvex b0 c/\ copen b0 c/\ cconvex b1 copen b1 c= * part cclosure * * part cINTER b0 b1 * * * part cCOND c= * * part cINTER b0 b1 part cEMPTY part cEMPTY * * part cINTER * part cclosure b0 * part cclosure b1 * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- ((\w'. ((~ (coplanar (x INSERT (u INSERT (w INSERT (w' INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (w' INSERT EMPTY))) = ((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (w' INSERT EMPTY))))) v)
T * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY f3
- (x' = v), (((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (v = u))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c~ c= f1 f3
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) |- ((convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- |- (((((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) ==> (((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))) = (((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)))
T c= c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
+ |- ((((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) = ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = (((~ (coplanar (x INSERT (w INSERT (v INSERT (u INSERT EMPTY)))))) ==> ((closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) = ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))))
T c= c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- |- ((\u. (!v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)))) u)
T * / ! ! c==> c~ ! c= c\/ c= b3 b2 c\/ c= b3 f0 c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1
- (~ (B x)), ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> c/\ c\/ c\/ c~ * f2 f1 c~ * f0 f1 c~ * f3 f1 c/\ * f2 f1 c/\ * f0 f1 * f3 f1 c==> c~ cF cF
+ |- (((convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) /\ ((open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) /\ ((convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) /\ (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) ==> ((closure ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = (((COND (((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) = EMPTY)) EMPTY) ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))))
T c==> c/\ cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= * part cclosure * * part cINTER * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * * part cCOND c= * * part cINTER * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY part cEMPTY * * part cINTER * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- (~ (B x)), ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- ((~ (B x)) /\ (B x))
T c==> c~ * f0 f1 c==> c/\ c\/ c\/ c~ * f2 f1 c~ * f0 f1 c~ * f3 f1 c/\ * f2 f1 c/\ * f0 f1 * f3 f1 c/\ c~ * f0 f1 * f0 f1
+ ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- (((A x) ==> F) = F)
T c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c= c==> * f0 f1 cF cF
+ |- (((convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c= c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY
- (x' = w), (((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f3 c= f0 f1 c==> c~ cF cF
+ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))) |- (!x'. ((~ (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x')) \/ (~ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))
T c==> ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 ! c\/ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c~ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0
- (x' = u), (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f1 c~ c= f0 f3 c==> c~ cF cF
- (~ (v = v)) |- ((~ (v = v)) /\ (v = v))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)), (open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))) |- ((open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) /\ ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c==> copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- (x' = x), (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (x = w))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f4 c/\ c~ c= f0 f2 c~ c= f0 f3 c~ c= f1 f3
- |- ((((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) = ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))
T c= c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
+ ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- (B x)
T c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 * f2 f1
- ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F), (((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F) ==> ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F)) |- (((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F) /\ ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F))
T c==> c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c/\ c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
+ |- ((T /\ t) = t)
T c= c/\ cT f0 f0
+ |- ((~ p) = (p ==> F))
T c= c~ f0 c==> f0 cF
+ (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) |- (((convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = ((((convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) ==> (convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))))
T c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c==> c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY
+ (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = EMPTY)), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) |- ((((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = ((((convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ ((open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ ((convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) /\ (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = (((COND ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = EMPTY)) EMPTY) ((closure ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) INTER (closure ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))))) ==> ((closure (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))))
T c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= c==> c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * * part cCOND c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY part cEMPTY * * part cINTER * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ |- (((!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))) ==> ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))) v)) = ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))))) v))
T c= c==> ! ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1 * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
- (x' = u), (((~ (x' = x)) /\ ((~ (x' = w)) /\ ((~ (x' = v)) /\ (~ (x' = u))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (u = v))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f1 c= f0 f3 c~ c= f1 f4
+ ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- ((~ (B x)) ==> F)
T c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 c==> c~ * f2 f1 cF
- (~ (C x)), ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- ((~ (C x)) /\ (C x))
T c==> c~ * f0 f1 c==> c/\ c\/ c\/ c~ * f2 f1 c~ * f3 f1 c~ * f0 f1 c/\ * f2 f1 c/\ * f3 f1 * f0 f1 c/\ c~ * f0 f1 * f0 f1
+ ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))), ((~ (B x)) \/ (~ (C x))) |- (((~ (B x)) \/ (~ (C x))) /\ F)
T c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 c==> c\/ c~ * f2 f1 c~ * f3 f1 c/\ c\/ c~ * f2 f1 c~ * f3 f1 cF
- |- ((\v. (!x. ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F))) v)
T * / ! c==> c~ ! c= c\/ c= b2 b1 c\/ c= b2 f0 c\/ c= b2 f1 c= b2 b0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF f2
+ ((closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) = ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) |- (((closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) = ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) /\ ((((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER (closure ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ c= * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * part cclosure * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
- (x' = u), (((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (u = v))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f1 c= f0 f3 c~ c= f1 f4
+ |- ((\s. (!t. (((open s) /\ (open t)) ==> (open (s INTER t))))) ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)))
T * / ! c==> c/\ copen b0 copen b1 copen * * part cINTER b0 b1 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))), (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (open ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))), (convex ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))), (convex ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))), (convex ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) |- (((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (~ (B x)), ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- F
T c==> c~ * f0 f1 c==> c/\ c/\ c/\ * f2 f1 * f0 f1 * f3 f1 c\/ c~ * f2 f1 c\/ c~ * f0 f1 c~ * f3 f1 cF
- |- (((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F) = ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))))))
T c= c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0
+ (convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) |- ((convex (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = T)
T c==> cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= cconvex * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY cT
- ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F) |- (((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F) /\ ((~ ((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'))))))) ==> F))
T c==> c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c/\ c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
+ |- (((~ (!x'. ((x' IN (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))) = (x' IN EMPTY)))) ==> (~ (!x'. ((x' IN (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = (x' IN EMPTY))))) = ((~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)) ==> (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) = EMPTY))))
T c= c==> c~ ! c= cIN b0 * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b0 part cEMPTY c~ ! c= cIN b0 * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY cIN b0 part cEMPTY c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY
+ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) |- ((((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))) = (((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
+ ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- ((~ (C x)) ==> F)
T c==> c/\ c/\ c/\ * f0 f1 * f2 f1 * f3 f1 c\/ c~ * f0 f1 c\/ c~ * f2 f1 c~ * f3 f1 c==> c~ * f3 f1 cF
- (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = EMPTY)) |- (~ (EMPTY = (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))))))
T c==> c~ c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY part cEMPTY c~ c= part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- (~ (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x')), ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x'))) |- ((~ (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x')) /\ (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x'))
T c==> c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c==> c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 c/\ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4
+ |- ((((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))) = (((~ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY)))))) ==> (open ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) ==> ((closure ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) = (((aff_ge (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_ge (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_ge (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))))))
T c= c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= * part cclosure * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- (x' = w), (((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (w = u))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f3 c= f0 f1 c~ c= f1 f3
- |- (((~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))))) ==> (~ (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))))) = T)
T c= c==> c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c~ ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cT
- (x' = x), (((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v))))) /\ ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))) |- (~ (x = u))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f4 c\/ c= f0 f2 c= f0 f3 c~ c= f1 f2
- |- (((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) = (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))))))
T c= c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2
- (((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) |- ((((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) /\ (((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c/\ c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
+ ((\x'. ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x')))) x') |- ((((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x'))) ==> F) = F)
T c==> * / c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 f4 c= c==> c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 cF cF
- (~ (B x)), ((((A x) /\ (B x)) /\ (C x)) /\ ((~ (A x)) \/ ((~ (B x)) \/ (~ (C x))))) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> c/\ c/\ c/\ * f2 f1 * f0 f1 * f3 f1 c\/ c~ * f2 f1 c\/ c~ * f0 f1 c~ * f3 f1 c==> c~ cF cF
+ |- (((!t. (((open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ (open t)) ==> (open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER t)))) ==> ((\t. (((open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ (open t)) ==> (open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER t)))) ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)))) = ((\t. (((open ((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ (open t)) ==> (open (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER t)))) ((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))))
T c= c==> ! c==> c/\ copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY copen b0 copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 * / c==> c/\ copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY copen b0 copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY * / c==> c/\ copen * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY copen b0 copen * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY
+ |- ((\v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = EMPTY)))))) v)
T * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY part cEMPTY f1
+ |- ((\w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) INTER (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)))) = ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))))) w)
T * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3
- |- ((!C. (!B. (!A. (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))))) = (!C. (!B. (!A. ((~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) ==> F)))))
T c= ! ! ! ! c= c/\ c/\ * b2 b3 * b1 b3 * b0 b3 c/\ * b2 b3 c/\ * b1 b3 * b0 b3 ! ! ! c==> c~ ! c= c/\ c/\ * b2 b3 * b1 b3 * b0 b3 c/\ * b2 b3 c/\ * b1 b3 * b0 b3 cF
- (!x'. (~ ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))), (~ F), ((((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x') /\ ((((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x') /\ (((aff_gt (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) x'))) |- ((~ F) /\ F)
T c==> ! c~ c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c==> c~ cF c==> c/\ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c/\ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_gt * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f4 c/\ c~ cF cF
- |- ((\x. ((~ (!x'. (((x' = x) \/ ((x' = w) \/ ((x' = v) \/ (x' = u)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) x)
T * / c==> c~ ! c= c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 c\/ c= b1 b0 c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f0 cF f3
- |- ((?x'. ((P x') /\ Q)) = ((?x'. (P x')) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
- (~ (!x. ((((A x) /\ (B x)) /\ (C x)) = ((A x) /\ ((B x) /\ (C x)))))) |- F
T c==> c~ ! c= c/\ c/\ * f0 b0 * f1 b0 * f2 b0 c/\ * f0 b0 c/\ * f1 b0 * f2 b0 cF
- ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- ((~ (A x)) ==> (A x))
T c==> c/\ c\/ c\/ c~ * f0 f1 c~ * f2 f1 c~ * f3 f1 c/\ * f0 f1 c/\ * f2 f1 * f3 f1 c==> c~ * f0 f1 * f0 f1
- |- ((((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)) ==> (((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) = ((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w))))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f3 c\/ c= b0 f1 c= b0 f2 cF
- (x' = u), (((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))) /\ ((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w)))))) |- (~ (u = w))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f1 c~ c= f0 f3 c~ c= f1 f3
- |- ((!x''. ((~ (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x')) \/ (~ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x'')))) = ((~ (((aff_gt (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) x')) \/ (!x'. (~ (((aff_gt (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) x')))))
T c= ! c\/ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 c~ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c\/ c~ caff_gt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY f4 ! c~ caff_gt * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY b0
- (~ F), (~ (C x)), ((((~ (A x)) \/ (~ (B x))) \/ (~ (C x))) /\ ((A x) /\ ((B x) /\ (C x)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> c/\ c\/ c\/ c~ * f2 f1 c~ * f3 f1 c~ * f0 f1 c/\ * f2 f1 c/\ * f3 f1 * f0 f1 c/\ c~ cF cF
