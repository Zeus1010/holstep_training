N HAS_COMPLEX_DERIVATIVE_CTAN
C |- (!z. ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) ==> (((has_complex_derivative ctan) (complex_inv ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0)))))) (at z))))
T c==> c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative part cctan ccomplex_inv ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cat f0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D CX_DEF
A |- (!a. ((Cx a) = (complex (a , (real_of_num (NUMERAL _0))))))
T c= cCx f0 ccomplex c, f0 creal_of_num cNUMERAL c_0
D complex_div
A |- (!w. (!z. (((complex_div w) z) = ((complex_mul w) (complex_inv z)))))
T c= ccomplex_div f0 f1 ccomplex_mul f0 ccomplex_inv f1
D RE
A |- ((Re (complex (x , y))) = x)
T c= cRe ccomplex c, f0 f1 f0
D IM
A |- ((Im (complex (x , y))) = y)
T c= cIm ccomplex c, f0 f1 f1
D COMPLEX_EQ
A |- (!w. (!z. ((w = z) = (((Re w) = (Re z)) /\ ((Im w) = (Im z))))))
T c= c= f0 f1 c/\ c= cRe f0 cRe f1 c= cIm f0 cIm f1
D COMPLEX_EQ_ADD_LCANCEL
A |- (!x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z)))))
T c= c= cvector_add f0 f1 cvector_add f0 f2 c= f1 f2
D COMPLEX_MUL_LZERO
A |- (!x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0)))))
T c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 f0 cCx creal_of_num cNUMERAL c_0
D COMPLEX_SUB_0
A |- (!x. (!y. ((((vector_sub x) y) = (Cx (real_of_num (NUMERAL _0)))) = (x = y))))
T c= c= cvector_sub f0 f1 cCx creal_of_num cNUMERAL c_0 c= f0 f1
D COMPLEX_MUL_RINV
A |- (!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0
D CX_INJ
A |- (!x. (!y. (((Cx x) = (Cx y)) = (x = y))))
T c= c= cCx f0 cCx f1 c= f0 f1
D CX_ADD
A |- (!x. (!y. ((Cx ((real_add x) y)) = ((vector_add (Cx x)) (Cx y)))))
T c= cCx creal_add f0 f1 cvector_add cCx f0 cCx f1
D CX_MUL
A |- (!x. (!y. ((Cx ((real_mul x) y)) = ((complex_mul (Cx x)) (Cx y)))))
T c= cCx creal_mul f0 f1 ccomplex_mul cCx f0 cCx f1
D COMPLEX_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((vector_add x) ((vector_add y) z)) = ((vector_add ((vector_add x) y)) z))))) /\ ((!x. (!y. (((vector_add x) y) = ((vector_add y) x)))) /\ ((!x. (((vector_add (Cx (real_of_num (NUMERAL _0)))) x) = x)) /\ ((!x. (!y. (!z. (((complex_mul x) ((complex_mul y) z)) = ((complex_mul ((complex_mul x) y)) z))))) /\ ((!x. (!y. (((complex_mul x) y) = ((complex_mul y) x)))) /\ ((!x. (((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) x) = x)) /\ ((!x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0))))) /\ ((!x. (!y. (!z. (((complex_mul x) ((vector_add y) z)) = ((vector_add ((complex_mul x) y)) ((complex_mul x) z)))))) /\ ((!x. (((complex_pow x) (NUMERAL _0)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) /\ (!x. (!n. (((complex_pow x) (SUC n)) = ((complex_mul x) ((complex_pow x) n))))))))))))))
T c/\ ! ! ! c= cvector_add b0 cvector_add b1 b2 cvector_add cvector_add b0 b1 b2 c/\ ! ! c= cvector_add b0 b1 cvector_add b1 b0 c/\ ! c= cvector_add cCx creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= ccomplex_mul b0 ccomplex_mul b1 b2 ccomplex_mul ccomplex_mul b0 b1 b2 c/\ ! ! c= ccomplex_mul b0 b1 ccomplex_mul b1 b0 c/\ ! c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL c_0 c/\ ! ! ! c= ccomplex_mul b0 cvector_add b1 b2 cvector_add ccomplex_mul b0 b1 ccomplex_mul b0 b2 c/\ ! c= ccomplex_pow b0 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ! ! c= ccomplex_pow b0 cSUC b1 ccomplex_mul b0 ccomplex_pow b0 b1
D COMPLEX_POLY_NEG_CLAUSES
A |- ((!x. ((vector_neg x) = ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) x))) /\ (!x. (!y. (((vector_sub x) y) = ((vector_add x) ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) y))))))
T c/\ ! c= cvector_neg b0 ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= cvector_sub b0 b1 cvector_add b0 ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D COMPLEX_POW_INV
A |- (!x. (!n. (((complex_pow (complex_inv x)) n) = (complex_inv ((complex_pow x) n)))))
T c= ccomplex_pow ccomplex_inv f0 f1 ccomplex_inv ccomplex_pow f0 f1
D HAS_COMPLEX_DERIVATIVE_CHAIN_UNIV
A |- (!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x))))))))
T c==> ! chas_complex_derivative f0 * f1 b0 cat b0 c/\ ! ! c==> chas_complex_derivative f2 f3 cwithin cat b0 b1 chas_complex_derivative / * f0 * f2 b2 ccomplex_mul f3 * f1 * f2 b0 cwithin cat b0 b1 ! c==> chas_complex_derivative f2 f3 cat b0 chas_complex_derivative / * f0 * f2 b1 ccomplex_mul f3 * f1 * f2 b0 cat b0
D HAS_COMPLEX_DERIVATIVE_ID
A |- (!net. (((has_complex_derivative (\x. x)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) net))
T chas_complex_derivative / b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
D HAS_COMPLEX_DERIVATIVE_DIV_AT
A |- (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ ((((has_complex_derivative g) g') (at x)) /\ (~ ((g x) = (Cx (real_of_num (NUMERAL _0))))))) ==> (((has_complex_derivative (\x. ((complex_div (f x)) (g x)))) ((complex_div ((vector_sub ((complex_mul f') (g x))) ((complex_mul (f x)) g'))) ((complex_pow (g x)) (NUMERAL (BIT0 (BIT1 _0)))))) (at x))))))))
T c==> c/\ chas_complex_derivative f0 f1 cat f2 c/\ chas_complex_derivative f3 f4 cat f2 c~ c= * f3 f2 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative / ccomplex_div * f0 b0 * f3 b0 ccomplex_div cvector_sub ccomplex_mul f1 * f3 f2 ccomplex_mul * f0 f2 f4 ccomplex_pow * f3 f2 cNUMERAL cBIT0 cBIT1 c_0 cat f2
D CSIN_CIRCLE
A |- (!z. (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
D HAS_COMPLEX_DERIVATIVE_CSIN
A |- (!z. (((has_complex_derivative csin) (ccos z)) (at z)))
T chas_complex_derivative part ccsin cccos f0 cat f0
D HAS_COMPLEX_DERIVATIVE_CCOS
A |- (!z. (((has_complex_derivative ccos) (vector_neg (csin z))) (at z)))
T chas_complex_derivative part cccos cvector_neg ccsin f0 cat f0
D ctan
A |- (!z. ((ctan z) = ((complex_div (csin z)) (ccos z))))
T c= cctan f0 ccomplex_div ccsin f0 cccos f0
+ |- ((((has_complex_derivative (\x. x)) f') (at z)) ==> (((has_complex_derivative (\x. (csin x))) ((complex_mul f') (ccos z))) (at z)))
T c==> chas_complex_derivative / b0 f0 cat f1 chas_complex_derivative / ccsin b0 ccomplex_mul f0 cccos f1 cat f1
+ |- (((!z. ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) \/ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((\z. ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) \/ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))))))) z)) = ((\z. ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) \/ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))))))) z))
T c= c==> ! c\/ c~ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 * / c\/ c~ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 f0 * / c\/ c~ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- (((!x. (((\z. (?z'. (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) x) ==> F)) ==> ((?z. (?z'. (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F)) = ((?z. (?z'. (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c/\ c= cccos b1 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos b1 cCx creal_of_num cNUMERAL c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b1 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b1 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b1 cccos b1 ccomplex_mul ccsin b1 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b1 ccomplex_pow ccomplex_inv cccos b1 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b1 cNUMERAL cBIT0 cBIT1 c_0 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c/\ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c/\ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- (!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))), (!x. (((has_complex_derivative g) (g' x)) (at x))) |- (((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x))))) = T)
T c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 c==> ! chas_complex_derivative f2 * f0 b0 cat b0 c= c/\ ! ! c==> chas_complex_derivative f3 f1 cwithin cat b0 b1 chas_complex_derivative / * f2 * f3 b2 ccomplex_mul f1 * f0 * f3 b0 cwithin cat b0 b1 ! c==> chas_complex_derivative f3 f1 cat b0 chas_complex_derivative / * f2 * f3 b1 ccomplex_mul f1 * f0 * f3 b0 cat b0 cT
- |- ((((has_complex_derivative (\x. (f x))) f') ((within (at z)) s)) ==> (((has_complex_derivative (\x. (csin (f x)))) ((complex_mul f') (ccos (f z)))) ((within (at z)) s)))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 chas_complex_derivative / ccsin * f0 b0 ccomplex_mul f1 cccos * f0 f2 cwithin cat f2 f3
+ ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- ((Cx (real_of_num (NUMERAL (BIT1 _0)))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- ((((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = g')) ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) g') (at z))) ==> (((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = g')) ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) g') (at z))))
T c==> c==> c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 f1 cat f0 c==> c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 f1 cat f0
+ ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- (((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) /\ F)
T c==> c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((\g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) g)
T * / c==> ! chas_complex_derivative b0 * f0 b1 cat b1 ! c/\ ! ! c==> chas_complex_derivative b1 f1 cwithin cat b2 b3 chas_complex_derivative / * b0 * b1 b4 ccomplex_mul f1 * f0 * b1 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b1 f1 cat b2 chas_complex_derivative / * b0 * b1 b3 ccomplex_mul f1 * f0 * b1 b2 cat b2 f2
+ |- ((\y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z)))) y)
T * / ! c= c= cvector_add f0 b0 cvector_add f0 b1 c= b0 b1 f1
- |- ((\P. (!Q. ((!x. ((P x) /\ (Q x))) = ((!x. (P x)) /\ (!x. (Q x)))))) P)
T * / ! c= ! c/\ * b0 b2 * b1 b2 c/\ ! * b0 b2 ! * b1 b2 f0
+ |- (((!x. (((\z'. (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) x) ==> F)) ==> ((?z'. (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F)) = ((?z'. (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F))
T c= c==> ! c==> * / c? / c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((!x. (((\z'. (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) x) ==> F)) ==> ((?z'. (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F)) = ((?z'. (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F))
T c= c==> ! c==> * / c? / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- (!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) |- ((\g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x))))))) g)
T c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 * / c==> ! chas_complex_derivative b0 * f0 b1 cat b1 c/\ ! ! c==> chas_complex_derivative f2 f1 cwithin cat b1 b2 chas_complex_derivative / * b0 * f2 b3 ccomplex_mul f1 * f0 * f2 b1 cwithin cat b1 b2 ! c==> chas_complex_derivative f2 f1 cat b1 chas_complex_derivative / * b0 * f2 b2 ccomplex_mul f1 * f0 * f2 b1 cat b1 f3
+ |- ((((~ (!z. ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) \/ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))))))) = (?z. (?z'. (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> (!z. ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) \/ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))))))) = (!z. ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) \/ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))))))))
T c= c==> c= c~ ! c\/ c~ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 c? / c? / c? / c/\ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 ! c\/ c~ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ! c\/ c~ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((has_complex_derivative (\x. (csin x))) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (at z))
T chas_complex_derivative / ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cat f0
- ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))) |- (((vector_add ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) ((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= cvector_add ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- (!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) |- (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))
T c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 ! c==> ! chas_complex_derivative b0 * f0 b1 cat b1 c/\ ! ! c==> chas_complex_derivative f2 f1 cwithin cat b1 b2 chas_complex_derivative / * b0 * f2 b3 ccomplex_mul f1 * f0 * f2 b1 cwithin cat b1 b2 ! c==> chas_complex_derivative f2 f1 cat b1 chas_complex_derivative / * b0 * f2 b2 ccomplex_mul f1 * f0 * f2 b1 cat b1
+ |- ((((\z. (?z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))))) z) ==> F) = T)
T c= c==> * / c? / c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos b0 cCx creal_of_num cNUMERAL c_0 f0 cF cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))) |- ((Cx (real_of_num (NUMERAL (BIT1 _0)))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ ((\z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) z'') |- ((((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F) = F)
T c==> * / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c= c==> c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ (~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) |- ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((has_complex_derivative ctan) (complex_inv ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0)))))) (at z)))
T c==> c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative part cctan ccomplex_inv ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cat f0
+ |- (t = (\x. (t x)))
T c= f0 / * f0 b0
+ |- (((?z'. (P z')) /\ Q) = (?z'. ((P z') /\ Q)))
T c= c/\ c? / * f0 b0 f1 c? / c/\ * f0 b0 f1
+ |- (((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = g')) ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) g') (at z)))
T c==> c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 f1 cat f0
- (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0)))))) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((((has_complex_derivative (\x. (f x))) f') (at z)) ==> (((has_complex_derivative (\x. (cexp (f x)))) ((complex_mul f') (cexp (f z)))) (at z)))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 chas_complex_derivative / ccexp * f0 b0 ccomplex_mul f1 ccexp * f0 f2 cat f2
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- (((!Q. ((!x. ((P x) /\ (Q x))) = ((!x. (P x)) /\ (!x. (Q x))))) ==> ((\Q. ((!x. ((P x) /\ (Q x))) = ((!x. (P x)) /\ (!x. (Q x))))) Q)) = ((\Q. ((!x. ((P x) /\ (Q x))) = ((!x. (P x)) /\ (!x. (Q x))))) Q))
T c= c==> ! c= ! c/\ * f0 b1 * b0 b1 c/\ ! * f0 b1 ! * b0 b1 * / c= ! c/\ * f0 b1 * b0 b1 c/\ ! * f0 b1 ! * b0 b1 f1 * / c= ! c/\ * f0 b1 * b0 b1 c/\ ! * f0 b1 ! * b0 b1 f1
+ |- (((!x. (((\z. (?z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))))) x) ==> F)) ==> ((?z. (?z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))))) ==> F)) = ((?z. (?z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))))) ==> F))
T c= c==> ! c==> * / c? / c/\ c= ccomplex_mul cvector_sub cccos b1 cCx creal_of_num cNUMERAL c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b1 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b1 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos b1 cCx creal_of_num cNUMERAL c_0 b0 cF c==> c? / c? / c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos b0 cCx creal_of_num cNUMERAL c_0 cF c==> c? / c? / c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos b0 cCx creal_of_num cNUMERAL c_0 cF
+ |- (!z. (((\z. (?z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))))) z) ==> F))
T c==> * / c? / c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos b0 cCx creal_of_num cNUMERAL c_0 f0 cF
- (!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) |- ((\f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) f)
T c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 * / ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 f2
+ |- ((((\z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) z'') ==> F) = T)
T c= c==> * / c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF cT
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))
T c==> ! chas_complex_derivative f0 * f1 b0 cat b0 ! c/\ ! ! c==> chas_complex_derivative b0 f2 cwithin cat b1 b2 chas_complex_derivative / * f0 * b0 b3 ccomplex_mul f2 * f1 * b0 b1 cwithin cat b1 b2 ! c==> chas_complex_derivative b0 f2 cat b1 chas_complex_derivative / * f0 * b0 b2 ccomplex_mul f2 * f1 * b0 b1 cat b1
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- ((((has_complex_derivative (\x. (f x))) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. ((complex_div (f x)) c))) ((complex_div f') c)) ((within (at x)) s)))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 chas_complex_derivative / ccomplex_div * f0 b0 f4 ccomplex_div f1 f4 cwithin cat f2 f3
+ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))) |- (((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul z') (ccos z))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul f1 cccos f0 cCx creal_of_num cNUMERAL c_0
- |- ((!z. t) = t)
T c= ! f0 f0
+ |- ((\z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) (ccos z))
T * / c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0
+ ((\z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))))) z') |- ((((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))) ==> F) = F)
T c==> * / c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 f1 c= c==> c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 cF cF
- |- ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) |- ((((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (complex_inv ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) (complex_inv ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0)))))) (at z))) = (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) (complex_inv ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0)))))) (at z)))
T c==> c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= c==> c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 ccomplex_inv ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cat f0 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 ccomplex_inv ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cat f0
+ ((\z'. (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) z') |- (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))
T c==> * / c? / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c? / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((\z'. (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) z') |- (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))
T c==> * / c? / c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c? / c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((\z'. (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) z') ==> F) = T)
T c= c==> * / c? / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF cT
+ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- (((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (((!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) ==> (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x))))))))) = (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))))
T c= c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 ! c==> ! chas_complex_derivative b0 * f0 b1 cat b1 ! c/\ ! ! c==> chas_complex_derivative b1 f1 cwithin cat b2 b3 chas_complex_derivative / * b0 * b1 b4 ccomplex_mul f1 * f0 * b1 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b1 f1 cat b2 chas_complex_derivative / * b0 * b1 b3 ccomplex_mul f1 * f0 * b1 b2 cat b2 ! c==> ! chas_complex_derivative b0 * f0 b1 cat b1 ! c/\ ! ! c==> chas_complex_derivative b1 f1 cwithin cat b2 b3 chas_complex_derivative / * b0 * b1 b4 ccomplex_mul f1 * f0 * b1 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b1 f1 cat b2 chas_complex_derivative / * b0 * b1 b3 ccomplex_mul f1 * f0 * b1 b2 cat b2
- (?z'. (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((?z'. (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) /\ F)
T c==> c? / c? / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((!z'. ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) \/ (((ccos z') = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z')) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z')) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z'))) (ccos z'))) ((complex_mul (csin z')) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z')))))) ((complex_pow (complex_inv (ccos z'))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z'))) (NUMERAL (BIT0 (BIT1 _0))))))))) = ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) \/ (!z. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))))))))
T c= ! c\/ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 ! c\/ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0
- (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- (((vector_add ((complex_mul z'') ((complex_mul ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))))) ((vector_add ((complex_mul z'') ((complex_mul ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))))) ((vector_add ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul z'') ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))))) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul f2 ccomplex_mul ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cvector_add ccomplex_mul f2 ccomplex_mul ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 cvector_add ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul f2 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))) |- (((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))) /\ F)
T c==> c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 cF
- ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- (((vector_add ((complex_mul (ccos z)) (complex_inv (ccos z)))) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ ((\z. (?z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))))) z) |- (((\z. (?z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))))) z) /\ F)
T c==> * / c? / c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos b0 cCx creal_of_num cNUMERAL c_0 f0 c/\ * / c? / c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos b0 cCx creal_of_num cNUMERAL c_0 f0 cF
+ (~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) |- ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ ((((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = g') ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) g') (at z))))
T c==> c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c==> c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 f1 cat f0
+ |- (((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c==> c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((((?z. (?z'. (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F) ==> (((~ q) = (?z. (?z'. (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> q)) = (((~ q) = (?z. (?z'. (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> q))
T c= c==> c==> c? / c? / c? / c/\ c= ccomplex_mul cccos b0 ccomplex_inv cccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c= c~ f0 c? / c? / c? / c/\ c= ccomplex_mul cccos b0 ccomplex_inv cccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c= c~ f0 c? / c? / c? / c/\ c= ccomplex_mul cccos b0 ccomplex_inv cccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((!z'. ((~ (((complex_mul (ccos z')) (complex_inv (ccos z'))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))))))) = ((!z. (~ (((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) \/ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))))))
T c= ! c\/ c~ c= ccomplex_mul cccos b0 ccomplex_inv cccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 c\/ ! c~ c= ccomplex_mul cccos b0 ccomplex_inv cccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((has_complex_derivative (\x. (f x))) f') ((within (at z)) s)) ==> (((has_complex_derivative (\x. (ccos (f x)))) ((complex_mul f') (vector_neg (csin (f z))))) ((within (at z)) s)))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 chas_complex_derivative / cccos * f0 b0 ccomplex_mul f1 cvector_neg ccsin * f0 f2 cwithin cat f2 f3
- ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))) |- (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
+ |- (((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) \/ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))))) /\ ((~ (((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))))))
T c/\ c\/ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c~ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((((has_complex_derivative (\x. (csin x))) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (at z)) ==> ((((has_complex_derivative (\x. (ccos x))) g') (at z)) ==> ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) ((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) g'))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0)))))) (at z))))) = ((((has_complex_derivative (\x. (ccos x))) g') (at z)) ==> ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) ((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) g'))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0)))))) (at z)))))
T c= c==> chas_complex_derivative / ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cat f0 c==> chas_complex_derivative / cccos b0 f1 cat f0 c==> c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 f1 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cat f0 c==> chas_complex_derivative / cccos b0 f1 cat f0 c==> c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 f1 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cat f0
+ |- ((\t. (t = (\x. (t x)))) t)
T * / c= b0 / * b0 b1 f0
+ ((\z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) z'') |- ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> * / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!t. (t = (\x. (t x)))) ==> ((\t. (t = (\x. (t x)))) t)) = ((\t. (t = (\x. (t x)))) t))
T c= c==> ! c= b0 / * b0 b1 * / c= b0 / * b0 b1 f0 * / c= b0 / * b0 b1 f0
- (?z. (?z'. (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) |- ((?z. (?z'. (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) /\ F)
T c==> c? / c? / c? / c/\ c= ccomplex_mul cccos b0 ccomplex_inv cccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c/\ c= ccomplex_mul cccos b0 ccomplex_inv cccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((((has_complex_derivative (\x. (f x))) f') (at z)) ==> (((has_complex_derivative (\x. (csin (f x)))) ((complex_mul f') (ccos (f z)))) (at z)))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 chas_complex_derivative / ccsin * f0 b0 ccomplex_mul f1 cccos * f0 f2 cat f2
+ |- (((has_complex_derivative (\x. (ccos x))) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))) (at z))
T chas_complex_derivative / cccos b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 cat f0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = g')) ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) g') (at z))) |- ((((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = g')) ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) g') (at z))) /\ (((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = g')) ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) g') (at z))))
T c==> c==> c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 f1 cat f0 c/\ c==> c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 f1 cat f0 c==> c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 f1 cat f0
- (?z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))))) |- ((?z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))))) /\ F)
T c==> c? / c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c? / c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 cF
+ (~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) |- ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (complex_inv ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((((has_complex_derivative (\x. (f x))) f') ((within (at x)) s)) ==> ((((has_complex_derivative (\x. (g x))) g') ((within (at x)) s)) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) ((within (at x)) s))))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 c==> chas_complex_derivative / * f4 b0 f5 cwithin cat f2 f3 chas_complex_derivative / ccomplex_mul * f0 b0 * f4 b0 cvector_add ccomplex_mul * f0 f2 f5 ccomplex_mul f1 * f4 f2 cwithin cat f2 f3
+ |- (!z. (((\z. (?z'. (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z) ==> F))
T c==> * / c? / c? / c/\ c= ccomplex_mul cccos b0 ccomplex_inv cccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ |- ((((has_complex_derivative (\x. (ccos x))) g') (at z)) ==> ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) ((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) g'))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0)))))) (at z))))
T c==> chas_complex_derivative / cccos b0 f0 cat f1 c==> c~ c= cccos f1 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f1 cccos f1 ccomplex_mul ccsin f1 f0 ccomplex_pow cccos f1 cNUMERAL cBIT0 cBIT1 c_0 cat f1
+ |- ((((?z. (?z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))))) ==> F) ==> (((~ q) = (?z. (?z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))))))) ==> q)) = (((~ q) = (?z. (?z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))))))) ==> q))
T c= c==> c==> c? / c? / c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos b0 cCx creal_of_num cNUMERAL c_0 cF c==> c= c~ f0 c? / c? / c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos b0 cCx creal_of_num cNUMERAL c_0 f0 c==> c= c~ f0 c? / c? / c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos b0 cCx creal_of_num cNUMERAL c_0 f0
+ ((\z. (?z'. (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z) |- (?z'. (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))
T c==> * / c? / c? / c/\ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c? / c? / c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((((has_complex_derivative (\x. (f x))) f') (at x)) ==> ((~ ((f x) = (Cx (real_of_num (NUMERAL _0))))) ==> (((has_complex_derivative (\x. (complex_inv (f x)))) ((complex_div (vector_neg f')) ((complex_pow (f x)) (NUMERAL (BIT0 (BIT1 _0)))))) (at x))))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 c==> c~ c= * f0 f2 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative / ccomplex_inv * f0 b0 ccomplex_div cvector_neg f1 ccomplex_pow * f0 f2 cNUMERAL cBIT0 cBIT1 c_0 cat f2
+ |- ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) ==> ((((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = g') ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) g') (at z))))
T c==> c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c==> c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 f1 cat f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'')) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))) ==> ((\z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))) z)) = ((\z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))) z))
T c= c==> ! c= c= cvector_add f0 f1 cvector_add f0 b0 c= f1 b0 * / c= c= cvector_add f0 f1 cvector_add f0 b0 c= f1 b0 f2 * / c= c= cvector_add f0 f1 cvector_add f0 b0 c= f1 b0 f2
- |- (((~ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> ((((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) = F)) = ((((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) = F))
T c= c==> c~ c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c= c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((!z. ((P z) \/ Q)) = ((!z. (P z)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ ((\z. (?z'. (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z) |- (((\z. (?z'. (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z) /\ F)
T c==> * / c? / c? / c/\ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c/\ * / c? / c? / c/\ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF
- (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> (((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) = F)) = (((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) = F))
T c= c==> c~ c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c= c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- (!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) |- ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))
T c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 c==> ! chas_complex_derivative f2 * f0 b0 cat b0 ! c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b1 b2 chas_complex_derivative / * f2 * b0 b3 ccomplex_mul f1 * f0 * b0 b1 cwithin cat b1 b2 ! c==> chas_complex_derivative b0 f1 cat b1 chas_complex_derivative / * f2 * b0 b2 ccomplex_mul f1 * f0 * b0 b1 cat b1
- (!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) |- (((!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x))))))) ==> ((\g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x))))))) g)) = ((\g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x))))))) g))
T c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 c= c==> ! c==> ! chas_complex_derivative b0 * f0 b1 cat b1 c/\ ! ! c==> chas_complex_derivative f2 f1 cwithin cat b1 b2 chas_complex_derivative / * b0 * f2 b3 ccomplex_mul f1 * f0 * f2 b1 cwithin cat b1 b2 ! c==> chas_complex_derivative f2 f1 cat b1 chas_complex_derivative / * b0 * f2 b2 ccomplex_mul f1 * f0 * f2 b1 cat b1 * / c==> ! chas_complex_derivative b0 * f0 b1 cat b1 c/\ ! ! c==> chas_complex_derivative f2 f1 cwithin cat b1 b2 chas_complex_derivative / * b0 * f2 b3 ccomplex_mul f1 * f0 * f2 b1 cwithin cat b1 b2 ! c==> chas_complex_derivative f2 f1 cat b1 chas_complex_derivative / * b0 * f2 b2 ccomplex_mul f1 * f0 * f2 b1 cat b1 f3 * / c==> ! chas_complex_derivative b0 * f0 b1 cat b1 c/\ ! ! c==> chas_complex_derivative f2 f1 cwithin cat b1 b2 chas_complex_derivative / * b0 * f2 b3 ccomplex_mul f1 * f0 * f2 b1 cwithin cat b1 b2 ! c==> chas_complex_derivative f2 f1 cat b1 chas_complex_derivative / * b0 * f2 b2 ccomplex_mul f1 * f0 * f2 b1 cat b1 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- ((((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) /\ F)
T c==> c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((\z'. (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) z') |- (((?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F) = F)
T c==> * / c? / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c= c==> c? / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z')) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((\z. (?z'. (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z) ==> F) = T)
T c= c==> * / c? / c? / c/\ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF cT
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- (!z'. (((\z'. (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) z') ==> F))
T c==> * / c? / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ |- (((!z. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (~ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))))) ==> ((\z. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (~ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))))) z)) = ((\z. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (~ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))))) z))
T c= c==> ! c\/ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c= cccos b0 cCx creal_of_num cNUMERAL c_0 * / c\/ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c= cccos b0 cCx creal_of_num cNUMERAL c_0 f0 * / c\/ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c= cccos b0 cCx creal_of_num cNUMERAL c_0 f0
+ |- (((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (?z'. (?z''. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = (?z'. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (?z''. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))
T c= c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c? / c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F)
T c==> c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((((((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) = F) ==> (~ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = (~ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))
T c= c==> c= c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (!z'. (((\z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))))) z') ==> F))
T c==> * / c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cF
+ ((\z. (?z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))))) z) |- (?z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))))
T c==> * / c? / c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos b0 cCx creal_of_num cNUMERAL c_0 f0 c? / c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0
- |- ((((has_complex_derivative (\x. (f x))) f') net) ==> ((((has_complex_derivative (\x. (g x))) g') net) ==> (((has_complex_derivative (\x. ((vector_add (f x)) (g x)))) ((vector_add f') g')) net)))
T c==> chas_complex_derivative / * f0 b0 f1 f2 c==> chas_complex_derivative / * f3 b0 f4 f2 chas_complex_derivative / cvector_add * f0 b0 * f3 b0 cvector_add f1 f4 f2
+ |- (((((has_complex_derivative (\x. (ccos x))) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))) (at z)) ==> ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) ((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0)))))) (at z)))) = ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) ((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0)))))) (at z))))
T c= c==> chas_complex_derivative / cccos b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 cat f0 c==> c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cat f0 c==> c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cat f0
+ |- (((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) ==> (((has_complex_derivative ctan) (complex_inv ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0)))))) (at z))) = T)
T c= c==> c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative part cctan ccomplex_inv ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cat f0 cT
- (!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))), (!x. (((has_complex_derivative g) (g' x)) (at x))) |- ((!x. (((has_complex_derivative g) (g' x)) (at x))) /\ (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))
T c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 c==> ! chas_complex_derivative f2 * f0 b0 cat b0 c/\ ! chas_complex_derivative f2 * f0 b0 cat b0 ! c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b1 b2 chas_complex_derivative / * f2 * b0 b3 ccomplex_mul f1 * f0 * b0 b1 cwithin cat b1 b2 ! c==> chas_complex_derivative b0 f1 cat b1 chas_complex_derivative / * f2 * b0 b2 ccomplex_mul f1 * f0 * b0 b1 cat b1
+ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z')) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((~ (((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))))) = (((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) \/ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))))) /\ ((~ (((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))))))))
T c= c\/ c~ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c\/ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c~ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((((has_complex_derivative (\x. (f x))) f') ((within (at x)) s)) ==> ((((has_complex_derivative (\x. (g x))) g') ((within (at x)) s)) ==> ((~ ((g x) = (Cx (real_of_num (NUMERAL _0))))) ==> (((has_complex_derivative (\x. ((complex_div (f x)) (g x)))) ((complex_div ((vector_sub ((complex_mul f') (g x))) ((complex_mul (f x)) g'))) ((complex_pow (g x)) (NUMERAL (BIT0 (BIT1 _0)))))) ((within (at x)) s)))))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 c==> chas_complex_derivative / * f4 b0 f5 cwithin cat f2 f3 c==> c~ c= * f4 f2 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative / ccomplex_div * f0 b0 * f4 b0 ccomplex_div cvector_sub ccomplex_mul f1 * f4 f2 ccomplex_mul * f0 f2 f5 ccomplex_pow * f4 f2 cNUMERAL cBIT0 cBIT1 c_0 cwithin cat f2 f3
+ (~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) |- (((((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) ((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0)))))) (at z)) ==> ((((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = g') ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) g') (at z)))) = ((((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = g') ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) g') (at z))))
T c==> c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= c==> chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cat f0 c==> c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 f1 cat f0 c==> c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 f1 cat f0
- |- (((~ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))))) ==> (((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))) = F)) = (((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))) = F))
T c= c==> c~ c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 cF c= c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 cF
+ |- (((vector_add (Cx x)) (Cx y)) = (Cx ((real_add x) y)))
T c= cvector_add cCx f0 cCx f1 cCx creal_add f0 f1
- |- (((has_complex_derivative (\x. c)) (Cx (real_of_num (NUMERAL _0)))) net)
T chas_complex_derivative / f0 cCx creal_of_num cNUMERAL c_0 f1
+ |- ((y = z) = (((vector_add (vector_neg z)) y) = ((vector_add (vector_neg z)) z)))
T c= c= f0 f1 c= cvector_add cvector_neg f1 f0 cvector_add cvector_neg f1 f1
+ |- (((!x. (((\z. (?z'. (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) x) ==> F)) ==> ((?z. (?z'. (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F)) = ((?z. (?z'. (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c/\ c= ccomplex_mul cccos b1 ccomplex_inv cccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos b1 cCx creal_of_num cNUMERAL c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b1 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b1 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b1 cccos b1 ccomplex_mul ccsin b1 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b1 ccomplex_pow ccomplex_inv cccos b1 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b1 cNUMERAL cBIT0 cBIT1 c_0 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c/\ c= ccomplex_mul cccos b0 ccomplex_inv cccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c/\ c= ccomplex_mul cccos b0 ccomplex_inv cccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((!x. (((\z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))))) x) ==> F)) ==> ((?z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))))) ==> F)) = ((?z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))))) ==> F))
T c= c==> ! c==> * / c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cF c==> c? / c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 cF c==> c? / c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) = F)
T c= c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((((has_complex_derivative (\x. (f x))) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. ((complex_mul c) (f x)))) ((complex_mul c) f')) ((within (at x)) s)))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 chas_complex_derivative / ccomplex_mul f4 * f0 b0 ccomplex_mul f4 f1 cwithin cat f2 f3
- |- ((((has_complex_derivative (\x. (f x))) f') (at x)) ==> (((has_complex_derivative (\x. ((complex_div (f x)) c))) ((complex_div f') c)) (at x)))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 chas_complex_derivative / ccomplex_div * f0 b0 f3 ccomplex_div f1 f3 cat f2
+ |- ((((has_complex_derivative (\x. (f x))) f') (at x)) ==> ((((has_complex_derivative (\x. (g x))) g') (at x)) ==> ((~ ((g x) = (Cx (real_of_num (NUMERAL _0))))) ==> (((has_complex_derivative (\x. ((complex_div (f x)) (g x)))) ((complex_div ((vector_sub ((complex_mul f') (g x))) ((complex_mul (f x)) g'))) ((complex_pow (g x)) (NUMERAL (BIT0 (BIT1 _0)))))) (at x)))))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 c==> chas_complex_derivative / * f3 b0 f4 cat f2 c==> c~ c= * f3 f2 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative / ccomplex_div * f0 b0 * f3 b0 ccomplex_div cvector_sub ccomplex_mul f1 * f3 f2 ccomplex_mul * f0 f2 f4 ccomplex_pow * f3 f2 cNUMERAL cBIT0 cBIT1 c_0 cat f2
+ ((\z'. (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) z') |- (((\z'. (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) z') /\ F)
T c==> * / c? / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ * / c? / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ |- ((((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) (complex_inv ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0)))))) (at z)) = (((has_complex_derivative (\x. (ctan x))) (complex_inv ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0)))))) (at z)))
T c= chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 ccomplex_inv ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cat f0 chas_complex_derivative / cctan b0 ccomplex_inv ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cat f0
+ |- ((complex_inv ((complex_pow x) n)) = ((complex_pow (complex_inv x)) n))
T c= ccomplex_inv ccomplex_pow f0 f1 ccomplex_pow ccomplex_inv f0 f1
- ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (ccos z)) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))))
T c==> c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cccos f0 cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
- (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\z. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (~ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))))) z)
T * / c\/ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c= cccos b0 cCx creal_of_num cNUMERAL c_0 f0
+ ((\z'. (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) z') |- (((\z'. (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) z') /\ F)
T c==> * / c? / c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ * / c? / c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ ((\z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))))) z') |- ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))))
T c==> * / c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 f1 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0
+ |- (((!x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))))) ==> ((\x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))))) x)) = ((\x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))))) x))
T c= c==> ! ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 * / ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 f0 * / ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 f0
+ |- (((!z. (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((\z. (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z)) = ((\z. (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z))
T c= c==> ! c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 * / c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 * / c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
+ ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- ((Cx (real_of_num (NUMERAL (BIT1 _0)))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = g')), (((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = g')) ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) g') (at z))) |- ((((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = g')) ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) g') (at z))) /\ (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) g') (at z)))
T c==> c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 f1 cat f0 c/\ c==> c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 f1 cat f0 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 f1 cat f0
+ |- (((real_of_num m) = (real_of_num n)) = (m = n))
T c= c= creal_of_num f0 creal_of_num f1 c= f0 f1
- ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z')) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) |- (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) (complex_inv ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0)))))) (at z))
T c==> c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 ccomplex_inv ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cat f0
- |- ((((has_complex_derivative (\x. (f x))) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. ((complex_pow (f x)) n))) ((complex_mul (Cx (real_of_num n))) ((complex_mul ((complex_pow (f x)) (n - (NUMERAL (BIT1 _0))))) f'))) ((within (at x)) s)))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 chas_complex_derivative / ccomplex_pow * f0 b0 f4 ccomplex_mul cCx creal_of_num f4 ccomplex_mul ccomplex_pow * f0 f2 c- f4 cNUMERAL cBIT1 c_0 f1 cwithin cat f2 f3
+ |- (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0
- (!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) |- (((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x))))))) = T)
T c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 c= c==> ! chas_complex_derivative f2 * f0 b0 cat b0 ! c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b1 b2 chas_complex_derivative / * f2 * b0 b3 ccomplex_mul f1 * f0 * b0 b1 cwithin cat b1 b2 ! c==> chas_complex_derivative b0 f1 cat b1 chas_complex_derivative / * f2 * b0 b2 ccomplex_mul f1 * f0 * b0 b1 cat b1 cT
+ |- (((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))) ==> F)
T c==> c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((\z. (?z'. (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z) |- (?z'. (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))
T c==> * / c? / c? / c/\ c= ccomplex_mul cccos b0 ccomplex_inv cccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c? / c? / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((complex_mul (Cx x)) (Cx y)) = (Cx ((real_mul x) y)))
T c= ccomplex_mul cCx f0 cCx f1 cCx creal_mul f0 f1
+ (~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) |- (((has_complex_derivative (\x. (ctan x))) (complex_inv ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0)))))) (at z))
T c==> c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative / cctan b0 ccomplex_inv ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cat f0
+ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- (((vector_add ((complex_mul z') (ccos z))) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul f1 cccos f0 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- (((!x. (((\z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) x) ==> F)) ==> ((?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F)) = ((?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F))
T c= c==> ! c==> * / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((((has_complex_derivative (\x. (f x))) f') (at x)) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) c))) ((complex_mul f') c)) (at x)))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 chas_complex_derivative / ccomplex_mul * f0 b0 f3 ccomplex_mul f1 f3 cat f2
- |- ((\Q. ((!x. ((P x) /\ (Q x))) = ((!x. (P x)) /\ (!x. (Q x))))) Q)
T * / c= ! c/\ * f0 b1 * b0 b1 c/\ ! * f0 b1 ! * b0 b1 f1
+ |- ((((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ (?z'. (?z''. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = (?z'. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ (?z''. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))
T c= c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c? / c? / c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c? / c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))))) = ((((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))))) /\ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))))))
T c= c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0
- (?z'. (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((?z'. (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) /\ F)
T c==> c? / c? / c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (ccos z)) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))))
T c==> c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cccos f0 cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
+ |- ((((\z'. (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) z') ==> F) = T)
T c= c==> * / c? / c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF cT
- |- (((!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) ==> ((\g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) g)) = ((\g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) g))
T c= c==> ! c==> ! chas_complex_derivative b0 * f0 b1 cat b1 ! c/\ ! ! c==> chas_complex_derivative b1 f1 cwithin cat b2 b3 chas_complex_derivative / * b0 * b1 b4 ccomplex_mul f1 * f0 * b1 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b1 f1 cat b2 chas_complex_derivative / * b0 * b1 b3 ccomplex_mul f1 * f0 * b1 b2 cat b2 * / c==> ! chas_complex_derivative b0 * f0 b1 cat b1 ! c/\ ! ! c==> chas_complex_derivative b1 f1 cwithin cat b2 b3 chas_complex_derivative / * b0 * b1 b4 ccomplex_mul f1 * f0 * b1 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b1 f1 cat b2 chas_complex_derivative / * b0 * b1 b3 ccomplex_mul f1 * f0 * b1 b2 cat b2 f2 * / c==> ! chas_complex_derivative b0 * f0 b1 cat b1 ! c/\ ! ! c==> chas_complex_derivative b1 f1 cwithin cat b2 b3 chas_complex_derivative / * b0 * b1 b4 ccomplex_mul f1 * f0 * b1 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b1 f1 cat b2 chas_complex_derivative / * b0 * b1 b3 ccomplex_mul f1 * f0 * b1 b2 cat b2 f2
- ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- (((vector_add ((complex_mul z') (ccos z))) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul f1 cccos f0 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (~ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))))
T c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0
+ |- (((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) ==> ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (complex_inv ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0)))))))) = ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (complex_inv ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))))))
T c= c==> c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) \/ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))))) /\ ((~ (((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))))))) = (((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))))))
T c= c/\ c\/ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c~ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0
+ ((\z. (?z'. (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z) |- (((?z'. (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F) = F)
T c==> * / c? / c? / c/\ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c= c==> c? / c? / c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))))))
T c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((!z'. (((ccos z') = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (~ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))))) = ((!z. ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))))))
T c= ! c\/ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ ! c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0
- |- (((((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = g')) ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) g') (at z))) ==> (((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = g')) ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) g') (at z)))) = (((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = g')) ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) g') (at z))))
T c= c==> c==> c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 f1 cat f0 c==> c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 f1 cat f0 c==> c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 f1 cat f0
+ |- (((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (?z'. (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) = (?z'. ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((((has_complex_derivative (\x. (f x))) f') net) ==> ((((has_complex_derivative (\x. (g x))) g') net) ==> (((has_complex_derivative (\x. ((vector_sub (f x)) (g x)))) ((vector_sub f') g')) net)))
T c==> chas_complex_derivative / * f0 b0 f1 f2 c==> chas_complex_derivative / * f3 b0 f4 f2 chas_complex_derivative / cvector_sub * f0 b0 * f3 b0 cvector_sub f1 f4 f2
- |- ((!z. (P \/ (Q z))) = (P \/ (!z. (Q z))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
+ |- (((!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z)))) ==> ((\y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z)))) y)) = ((\y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z)))) y))
T c= c==> ! ! c= c= cvector_add f0 b0 cvector_add f0 b1 c= b0 b1 * / ! c= c= cvector_add f0 b0 cvector_add f0 b1 c= b0 b1 f1 * / ! c= c= cvector_add f0 b0 cvector_add f0 b1 c= b0 b1 f1
- |- ((!z'. ((~ ((ccos z') = (Cx (real_of_num (NUMERAL _0))))) \/ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))))))) = ((!z. (~ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))) \/ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))))))
T c= ! c\/ c~ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 c\/ ! c~ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((((has_complex_derivative (\x. (f x))) f') (at x)) ==> (((has_complex_derivative (\x. ((complex_mul c) (f x)))) ((complex_mul c) f')) (at x)))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 chas_complex_derivative / ccomplex_mul f3 * f0 b0 ccomplex_mul f3 f1 cat f2
+ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- ((Cx (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- ((((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ (?z''. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) = (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))
T c= c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c? / c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((!z'. ((~ (((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((ccos z') = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z')) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z')) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z'))) (ccos z'))) ((complex_mul (csin z')) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z')))))) ((complex_pow (complex_inv (ccos z'))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z'))) (NUMERAL (BIT0 (BIT1 _0))))))))) = ((~ (((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (!z. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))))))))
T c= ! c\/ c~ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c~ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ! c\/ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((~ q) = (?z. (?z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))))))) ==> q)
T c==> c= c~ f0 c? / c? / c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos b0 cCx creal_of_num cNUMERAL c_0 f0
- ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0)))))) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((complex_inv (Cx x)) = (Cx (real_inv x)))
T c= ccomplex_inv cCx f0 cCx creal_inv f0
- (?z. (?z'. (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) |- ((?z. (?z'. (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) /\ F)
T c==> c? / c? / c? / c/\ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c/\ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos b0 cccos b0 ccomplex_mul ccsin b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin b0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos b0 cNUMERAL cBIT0 cBIT1 c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))))) /\ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))))))
T c/\ c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))))) x)
T * / ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 f0
- |- (((((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) = F) ==> (~ ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = (~ ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))
T c= c==> c= c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (!z''. (((\z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) z'') ==> F))
T c==> * / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ (t = (\x. (t x))) |- ((\x. (t x)) = t)
T c==> c= f0 / * f0 b0 c= / * f0 b0 f0
+ |- ((((\z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))))) z') ==> F) = T)
T c= c==> * / c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cF cT
+ |- ((\z. (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z)
T * / c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((\z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) z'') |- (((\z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) z'') /\ F)
T c==> * / c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ * / c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF
- |- ((((has_complex_derivative (\x. (f x))) f') net) ==> (((has_complex_derivative (\x. (vector_neg (f x)))) (vector_neg f')) net))
T c==> chas_complex_derivative / * f0 b0 f1 f2 chas_complex_derivative / cvector_neg * f0 b0 cvector_neg f1 f2
+ |- ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) \/ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))) = ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0))))))))
T c\/ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0
+ ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- ((Cx (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- (((!P. (!Q. ((!x. ((P x) /\ (Q x))) = ((!x. (P x)) /\ (!x. (Q x)))))) ==> ((\P. (!Q. ((!x. ((P x) /\ (Q x))) = ((!x. (P x)) /\ (!x. (Q x)))))) P)) = ((\P. (!Q. ((!x. ((P x) /\ (Q x))) = ((!x. (P x)) /\ (!x. (Q x)))))) P))
T c= c==> ! ! c= ! c/\ * b0 b2 * b1 b2 c/\ ! * b0 b2 ! * b1 b2 * / ! c= ! c/\ * b0 b2 * b1 b2 c/\ ! * b0 b2 ! * b1 b2 f0 * / ! c= ! c/\ * b0 b2 * b1 b2 c/\ ! * b0 b2 ! * b1 b2 f0
+ ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'')) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (~ (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))
T c~ c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (((((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))) = F) ==> (~ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))))) = (~ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))))))
T c= c==> c= c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 cF c~ c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 c~ c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0
- |- ((((has_complex_derivative (\x. (f x))) f') ((within (at z)) s)) ==> (((has_complex_derivative (\x. (cexp (f x)))) ((complex_mul f') (cexp (f z)))) ((within (at z)) s)))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 chas_complex_derivative / ccexp * f0 b0 ccomplex_mul f1 ccexp * f0 f2 cwithin cat f2 f3
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (~ ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))
T c~ c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- (((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = g')) |- ((((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = g')) ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) g') (at z))) ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) g') (at z)))
T c==> c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 f1 cat f0 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 f1 cat f0
- (?z. (?z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))))) |- ((?z. (?z'. ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))))) /\ F)
T c==> c? / c? / c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos b0 cCx creal_of_num cNUMERAL c_0 c/\ c? / c? / c/\ c= ccomplex_mul cvector_sub cccos b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos b0 cCx creal_of_num cNUMERAL c_0 cF
- |- ((!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) ==> (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))))
T c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 ! c==> ! chas_complex_derivative b0 * f0 b1 cat b1 ! c/\ ! ! c==> chas_complex_derivative b1 f1 cwithin cat b2 b3 chas_complex_derivative / * b0 * b1 b4 ccomplex_mul f1 * f0 * b1 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b1 f1 cat b2 chas_complex_derivative / * b0 * b1 b3 ccomplex_mul f1 * f0 * b1 b2 cat b2
- |- ((!x. ((P x) /\ (Q x))) = ((!x. (P x)) /\ (!x. (Q x))))
T c= ! c/\ * f0 b0 * f1 b0 c/\ ! * f0 b0 ! * f1 b0
- ((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = g')), (((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = g')) ==> (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) g') (at z))) |- (((~ ((ccos z) = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_div ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = g')) /\ (((has_complex_derivative (\x. ((complex_div (csin x)) (ccos x)))) g') (at z)))
T c==> c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 f1 cat f0 c/\ c/\ c~ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_div cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccomplex_div ccsin b0 cccos b0 f1 cat f0
- (!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))), (!x. (((has_complex_derivative g) (g' x)) (at x))) |- ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))
T c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 c==> ! chas_complex_derivative f2 * f0 b0 cat b0 c/\ ! ! c==> chas_complex_derivative f3 f1 cwithin cat b0 b1 chas_complex_derivative / * f2 * f3 b2 ccomplex_mul f1 * f0 * f3 b0 cwithin cat b0 b1 ! c==> chas_complex_derivative f3 f1 cat b0 chas_complex_derivative / * f2 * f3 b1 ccomplex_mul f1 * f0 * f3 b0 cat b0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!z'. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ ((~ (((vector_add ((complex_pow (csin z')) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z')) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (~ ((ccos z') = (Cx (real_of_num (NUMERAL _0)))))))) = (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) \/ (!z. ((~ (((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (~ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))))))
T c= ! c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c= cccos b0 cCx creal_of_num cNUMERAL c_0 c\/ c= cccos f0 cCx creal_of_num cNUMERAL c_0 ! c\/ c~ c= cvector_add ccomplex_pow ccsin b0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos b0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c= cccos b0 cCx creal_of_num cNUMERAL c_0
- |- ((!x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))))) /\ (!w. (!x. (!y. (!z. ((((vector_add ((complex_mul w) y)) ((complex_mul x) z)) = ((vector_add ((complex_mul w) z)) ((complex_mul x) y))) = ((w = x) \/ (y = z))))))))
T c/\ ! ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 ! ! ! ! c= c= cvector_add ccomplex_mul b0 b2 ccomplex_mul b1 b3 cvector_add ccomplex_mul b0 b3 ccomplex_mul b1 b2 c\/ c= b0 b1 c= b2 b3
- (?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) |- ((?z''. ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) /\ F)
T c==> c? / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- (?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) |- ((?z''. (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) /\ F)
T c==> c? / c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (~ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))))
T c~ c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- ((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul (ccos z)) (complex_inv (ccos z)))) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cccos f0 ccomplex_inv cccos f0 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((ccos z) = (Cx (real_of_num (NUMERAL _0)))))) = F)
T c= c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cccos f0 cCx creal_of_num cNUMERAL c_0 cF
- |- ((((has_complex_derivative (\x. (f x))) f') (at x)) ==> ((((has_complex_derivative (\x. (g x))) g') (at x)) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 c==> chas_complex_derivative / * f3 b0 f4 cat f2 chas_complex_derivative / ccomplex_mul * f0 b0 * f3 b0 cvector_add ccomplex_mul * f0 f2 f4 ccomplex_mul f1 * f3 f2 cat f2
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((ccos z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- (((vector_add ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) ((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= cccos f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- ((((has_complex_derivative (\x. (f x))) f') ((within (at x)) s)) ==> ((~ ((f x) = (Cx (real_of_num (NUMERAL _0))))) ==> (((has_complex_derivative (\x. (complex_inv (f x)))) ((complex_div (vector_neg f')) ((complex_pow (f x)) (NUMERAL (BIT0 (BIT1 _0)))))) ((within (at x)) s))))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 c==> c~ c= * f0 f2 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative / ccomplex_inv * f0 b0 ccomplex_div cvector_neg f1 ccomplex_pow * f0 f2 cNUMERAL cBIT0 cBIT1 c_0 cwithin cat f2 f3
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- (!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) |- ((!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) /\ (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))))
T c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 c/\ ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 ! c==> ! chas_complex_derivative b0 * f0 b1 cat b1 ! c/\ ! ! c==> chas_complex_derivative b1 f1 cwithin cat b2 b3 chas_complex_derivative / * b0 * b1 b4 ccomplex_mul f1 * f0 * b1 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b1 f1 cat b2 chas_complex_derivative / * b0 * b1 b3 ccomplex_mul f1 * f0 * b1 b2 cat b2
- |- ((((has_complex_derivative (\x. (f x))) f') (at x)) ==> (((has_complex_derivative (\x. ((complex_pow (f x)) n))) ((complex_mul (Cx (real_of_num n))) ((complex_mul ((complex_pow (f x)) (n - (NUMERAL (BIT1 _0))))) f'))) (at x)))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 chas_complex_derivative / ccomplex_pow * f0 b0 f3 ccomplex_mul cCx creal_of_num f3 ccomplex_mul ccomplex_pow * f0 f2 c- f3 cNUMERAL cBIT1 c_0 f1 cat f2
- |- (((((complex_mul (ccos z)) (complex_inv (ccos z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul ((vector_sub (ccos z)) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((vector_add ((complex_pow (csin z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_pow (ccos z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (ccos z))) (ccos z))) ((complex_mul (csin z)) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (vector_neg (csin z)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) ((complex_pow (complex_inv (ccos z))) (NUMERAL (BIT0 (BIT1 _0)))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) = F)
T c= c/\ c= ccomplex_mul cccos f0 ccomplex_inv cccos f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cccos f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cvector_add ccomplex_pow ccsin f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow cccos f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cccos f0 cccos f0 ccomplex_mul ccsin f0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccsin f0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_pow ccomplex_inv cccos f0 cNUMERAL cBIT0 cBIT1 c_0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((has_complex_derivative (\x. (f x))) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) c))) ((complex_mul f') c)) ((within (at x)) s)))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 chas_complex_derivative / ccomplex_mul * f0 b0 f4 ccomplex_mul f1 f4 cwithin cat f2 f3
